{
    "00401100": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00401100(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char cVar4;\n    int32_t *in_RAX;\n    int32_t *piVar5;\n    int32_t *piVar6;\n    int64_t iVar7;\n    int32_t *piVar8;\n    int32_t *piVar9;\n    int32_t *arg1;\n    int32_t *arg2;\n    int32_t *unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint64_t uVar11;\n    int32_t *piVar12;\n    uint64_t uVar13;\n    int32_t *piVar14;\n    int64_t unaff_R14;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x28 && *0x20 + -0x28 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0xa8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            piVar6 = unaff_RBX;\ncode_r0x00401136:\n            do {\n                unaff_RBX = piVar6;\n                piVar14 = in_RAX;\n                if (unaff_RBX == NULL) {\n                    if (*0x503ea8 < 1) {\n                        return;\n                    }\n                    *(*0x20 + -0x58) = *0x503ea8;\n                    iVar7 = 0;\n                    piVar6 = *0x503ea8;\n                    piVar14 = *0x503ea0;\n                    goto code_r0x0040138e;\n                }\n                for (piVar9 = NULL; piVar9 < unaff_RBX; piVar9 = piVar9 + 1) {\n                    if (*(piVar14 + piVar9) == ',') goto code_r0x0040114d;\n                }\n                piVar9 = 0xffffffffffffffff;\ncode_r0x0040114d:\n                if (piVar9 < 0) {\n                    piVar6 = NULL;\n                    in_RAX = NULL;\n                    piVar9 = unaff_RBX;\n                }\n                else {\n                    if (unaff_RBX < piVar9) goto code_r0x004016fe;\n                    if (unaff_RBX < piVar9 + 1U) goto code_r0x004016f3;\n                    unaff_RBX = unaff_RBX - piVar9;\n                    piVar6 = unaff_RBX + -1;\n                    in_RAX = (piVar9 + 1U & -piVar6 >> 0x3f) + piVar14;\n                }\n            } while ((piVar9 < 4) || (*piVar14 != 0x2e757063));\n            for (arg2 = NULL; arg2 < piVar9; arg2 = arg2 + 1) {\n                if (*(piVar14 + arg2) == '=') goto code_r0x004011ac;\n            }\n            arg2 = 0xffffffffffffffff;\ncode_r0x004011ac:\n            *(*0x20 + -0x38) = in_RAX;\n            *(*0x20 + -0x58) = piVar6;\n            if (arg2 < 0) {\n                *(*0x20 + -0x88) = piVar9;\n                *(*0x20 + -0x40) = piVar14;\n                *(*0x20 + -0xb0) = 0x401319;\n                fcn.004324c0();\n                *(*0x20 + -0xb0) = 0x40132a;\n                fcn.00432dc0();\n                *(*0x20 + -0xb0) = 0x401339;\n                fcn.00432dc0();\n                *(*0x20 + -0xb0) = 0x40134a;\n                fcn.00432dc0();\n                *(*0x20 + -0xb0) = 0x40134f;\n                fcn.00432540();\n                in_RAX = *(*0x20 + -0x38);\n                piVar6 = *(*0x20 + -0x58);\n                goto code_r0x00401136;\n            }\n            if (arg2 <= piVar9) {\n                if (0x3 < arg2) {\n                    piVar5 = arg2 + -1;\n                    uVar11 = -piVar5 >> 0x3f & 4;\n                    unaff_RBX = piVar14 + uVar11;\n                    if (arg2 + 1U <= piVar9) {\n                        *(*0x20 + -0x60) = piVar5;\n                        *(*0x20 + -0x48) = unaff_RBX;\n                        piVar8 = piVar9 - arg2;\n                        piVar9 = piVar8 + -1;\n                        *(*0x20 + -0x90) = piVar9;\n                        uVar13 = arg2 + 1U & -piVar9 >> 0x3f;\n                        *(*0x20 + -0x50) = piVar14 + uVar13;\n                        if (piVar8 == 0x3) {\n                            if (*(piVar14 + uVar13) == 0x6e6f) {\ncode_r0x00401256:\n                                if (((arg2 == 0x7) && (*(piVar14 + uVar11) == 0x6c61)) &&\n                                   (*(piVar14 + uVar11 + 2) == 'l')) {\n                                    piVar12 = *0x503ea8;\n                                    for (piVar5 = NULL; piVar5 < piVar12; piVar5 = piVar5 + 1) {\n                                        piVar9 = *0x503ea8;\n                                        if (*0x503ea8 <= piVar5) {\ncode_r0x004016c5:\n                                            *(*0x20 + -0xb0) = 0x4016cd;\n                                            fcn.00459720(piVar9);\n                                            goto code_r0x004016cd;\n                                        }\n                                        iVar7 = piVar5 * 0x20;\n                                        *(*0x503ea0 + piVar5 * 8 + 6) = 1;\n                                        if (piVar8 != 0x3) {\n                                            piVar14 = *0x503ea8;\n                                            if (piVar5 < *0x503ea8) {\n                                                piVar14 = *(*0x503ea0 + iVar7 + 0x1a);\n                                                goto code_r0x0040169b;\n                                            }\ncode_r0x004016b9:\n                                            *(*0x20 + -0xb0) = 0x4016c5;\n                                            fcn.00459720(piVar14);\n                                            piVar9 = piVar5;\n                                            goto code_r0x004016c5;\n                                        }\n                                        piVar14 = 0x1;\ncode_r0x0040169b:\n                                        piVar9 = *0x503ea0;\n                                        if (*0x503ea8 <= piVar5) {\n                                            *(*0x20 + -0xb0) = 0x4016b9;\n                                            fcn.00459720(*0x503ea8);\n                                            goto code_r0x004016b9;\n                                        }\ncode_r0x0040163c:\n                                        *(piVar9 + iVar7 + 0x19) = piVar14;\n                                    }\n                                }\n                                else {\n                                    *(*0x20 + -0x68) = piVar8;\n                                    *(*0x20 + -0x70) = *0x503ea8;\n                                    arg2 = *0x503ea8;\n                                    for (piVar14 = NULL; piVar14 < arg2; piVar14 = piVar14 + 1) {\n                                        piVar12 = *0x503ea0;\n                                        piVar8 = *0x503ea8;\n                                        if (*0x503ea8 <= piVar14) {\ncode_r0x00401634:\n                                            *(*0x20 + -0xb0) = 0x40163c;\n                                            piVar14 = piVar8;\n                                            iVar7 = fcn.00459720(piVar8);\n                                            goto code_r0x0040163c;\n                                        }\n                                        piVar8 = *(*0x503ea0 + piVar14 * 8 + 2);\n                                        piVar12 = *(*0x503ea0 + piVar14 * 8);\n                                        if (piVar8 == piVar5) {\n                                            *(*0x20 + -0x78) = piVar14 * 0x20;\n                                            *(*0x20 + -0x80) = piVar14;\n                                            *(*0x20 + -0xb0) = 0x40155a;\n                                            cVar4 = fcn.004021a0(piVar8, arg2);\n                                            if (cVar4 != '\\0') {\n                                                piVar8 = *(*0x20 + -0x80);\n                                                arg1 = *0x503ea8;\n                                                in_RAX = *0x503ea0;\n                                                if (piVar8 < *0x503ea8) {\n                                                    piVar12 = *(*0x20 + -0x78);\n                                                    *(*0x503ea0 + 6 + piVar12) = 1;\n                                                    in_RAX = *0x503ea0;\n                                                    if (piVar8 < *0x503ea8) {\n                                                        *(*0x503ea0 + piVar12 + 0x19) = *(*0x20 + -0x68) == 3;\n                                                        in_RAX = *(*0x20 + -0x38);\n                                                        piVar6 = *(*0x20 + -0x58);\n                                                        goto code_r0x00401136;\n                                                    }\n                                                    *(*0x20 + -0xb0) = 0x40162f;\n                                                    arg1 = *0x503ea8;\n                                                    fcn.00459720(*0x503ea8);\n                                                }\n                                                *(*0x20 + -0xb0) = 0x401634;\n                                                fcn.00459720(arg1);\n                                                piVar8 = piVar14;\n                                                goto code_r0x00401634;\n                                            }\n                                            arg2 = *(*0x20 + -0x70);\n                                            unaff_RBX = *(*0x20 + -0x48);\n                                            in_RAX = *(*0x20 + -0x38);\n                                            piVar6 = *(*0x20 + -0x58);\n                                            piVar5 = *(*0x20 + -0x60);\n                                            piVar14 = *(*0x20 + -0x80);\n                                        }\n                                    }\n                                    *(*0x20 + -0xb0) = 0x4015e5;\n                                    fcn.004324c0();\n                                    *(*0x20 + -0xb0) = 0x4015f6;\n                                    fcn.00432dc0();\n                                    *(*0x20 + -0xb0) = 0x401605;\n                                    fcn.00432dc0();\n                                    *(*0x20 + -0xb0) = 0x401616;\n                                    fcn.00432dc0();\n                                    *(*0x20 + -0xb0) = 0x40161b;\n                                    fcn.00432540();\n                                    in_RAX = *(*0x20 + -0x38);\n                                    piVar6 = *(*0x20 + -0x58);\n                                }\n                                goto code_r0x00401136;\n                            }\n                        }\n                        else if (((piVar8 == 0x4) && (*(piVar14 + uVar13) == 0x666f)) &&\n                                (*(piVar14 + uVar13 + 2) == 'f')) goto code_r0x00401256;\n                        *(*0x20 + -0xb0) = 0x4012a5;\n                        fcn.004324c0();\n                        *(*0x20 + -0xb0) = 0x4012b6;\n                        fcn.00432dc0();\n                        *(*0x20 + -0xb0) = 0x4012c5;\n                        fcn.00432dc0();\n                        *(*0x20 + -0xb0) = 0x4012d6;\n                        fcn.00432dc0();\n                        *(*0x20 + -0xb0) = 0x4012e5;\n                        fcn.00432dc0();\n                        *(*0x20 + -0xb0) = 0x4012f6;\n                        fcn.00432dc0();\n                        *(*0x20 + -0xb0) = 0x4012fb;\n                        fcn.00432540();\n                        in_RAX = *(*0x20 + -0x38);\n                        piVar6 = *(*0x20 + -0x58);\n                        goto code_r0x00401136;\n                    }\ncode_r0x004016cd:\n                    *(*0x20 + -0xb0) = 0x4016d5;\n                    fcn.004597e0(piVar9);\n                }\n                piVar9 = arg2;\n                *(*0x20 + -0xb0) = 0x4016e5;\n                arg2 = piVar9;\n                fcn.004597e0(piVar9);\n            }\n            *(*0x20 + -0xb0) = 0x4016f3;\n            fcn.00459760(arg2, piVar9);\ncode_r0x004016f3:\n            *(*0x20 + -0xb0) = 0x4016fe;\n            piVar9 = unaff_RBX;\n            fcn.004597e0(unaff_RBX);\ncode_r0x004016fe:\n            *(*0x20 + -0xb0) = 0x401706;\n            in_RAX = fcn.00459760(piVar9, unaff_RBX);\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + -8) = 0x401716;\n        fcn.00457040();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        *0x20 = puVar10;\n    } while( true );\ncode_r0x0040138e:\n    iVar1 = piVar14[1];\n    iVar2 = piVar14[2];\n    iVar3 = piVar14[3];\n    *(*0x20 + -0x28) = *piVar14;\n    *(*0x20 + -0x24) = iVar1;\n    *(*0x20 + -0x20) = iVar2;\n    *(*0x20 + -0x1c) = iVar3;\n    iVar1 = piVar14[5];\n    iVar2 = piVar14[6];\n    iVar3 = piVar14[7];\n    *(*0x20 + -0x18) = piVar14[4];\n    *(*0x20 + -0x14) = iVar1;\n    *(*0x20 + -0x10) = iVar2;\n    *(*0x20 + -0xc) = iVar3;\n    if (*(*0x20 + -0x10) != '\\0') {\n        *(*0x20 + -0x60) = iVar7;\n        *(*0x20 + -0x30) = piVar14;\n        cVar4 = *(*0x20 + -0xf);\n        if (cVar4 == '\\0') {\ncode_r0x00401442:\n            if (*(*0x20 + -0xe) == '\\0') {\ncode_r0x0040144c:\n                **(*0x20 + -0x18) = cVar4;\n            }\n            else {\n                *(*0x20 + -0x38) = *(*0x20 + -0x28);\n                *(*0x20 + -0x68) = *(*0x20 + -0x20);\n                *(*0x20 + -0xb0) = 0x401477;\n                fcn.004324c0();\n                *(*0x20 + -0xb0) = 0x401488;\n                fcn.00432dc0();\n                *(*0x20 + -0xb0) = 0x401497;\n                fcn.00432dc0();\n                *(*0x20 + -0xb0) = 0x4014a8;\n                fcn.00432dc0();\n                *(*0x20 + -0xb0) = 0x4014ad;\n                fcn.00432540();\n                piVar6 = *(*0x20 + -0x58);\n                piVar14 = *(*0x20 + -0x30);\n                iVar7 = *(*0x20 + -0x60);\n            }\n        }\n        else {\n            if (**(*0x20 + -0x18) != '\\0') {\n                if (cVar4 == '\\0') goto code_r0x00401442;\n                goto code_r0x0040144c;\n            }\n            *(*0x20 + -0x38) = *(*0x20 + -0x28);\n            *(*0x20 + -0x68) = *(*0x20 + -0x20);\n            *(*0x20 + -0xb0) = 0x4013fb;\n            fcn.004324c0();\n            *(*0x20 + -0xb0) = 0x40140c;\n            fcn.00432dc0();\n            *(*0x20 + -0xb0) = 0x40141b;\n            fcn.00432dc0();\n            *(*0x20 + -0xb0) = 0x40142c;\n            fcn.00432dc0();\n            *(*0x20 + -0xb0) = 0x401431;\n            fcn.00432540();\n            piVar6 = *(*0x20 + -0x58);\n            piVar14 = *(*0x20 + -0x30);\n            iVar7 = *(*0x20 + -0x60);\n        }\n    }\n    iVar7 = iVar7 + 1;\n    if (piVar6 <= iVar7) {\n        return;\n    }\n    piVar14 = piVar14 + 8;\n    goto code_r0x0040138e;\n}\n",
        "token_count": 4080
    },
    "004035a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004035a0(uint64_t arg1)\n\n{\n    ulong *puVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    char cVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint8_t *puVar9;\n    uint64_t unaff_RBX;\n    uint32_t uVar10;\n    int64_t iVar11;\n    uint64_t uVar12;\n    uint64_t unaff_RDI;\n    int64_t iVar13;\n    uint8_t *puVar14;\n    uint64_t uVar15;\n    \n    if (*(in_RAX + 8) <= arg1) {\n        return;\n    }\n    uVar7 = *(in_RAX + 8) - arg1;\n    if (uVar7 < unaff_RDI) {\n        unaff_RDI = uVar7;\n    }\n    if ((*(in_RAX + 0x17) & 0x40) == 0) {\n        fcn.00403940(arg1);\n        return;\n    }\n    if (*0x503640 == NULL) {\n        iVar8 = 0;\n        iVar11 = 0;\n    }\n    else {\n        iVar11 = **0x503640;\n        iVar8 = (*0x503640)[1];\n    }\n    for (iVar13 = 0; iVar13 < iVar8; iVar13 = iVar13 + 1) {\n        iVar2 = *(iVar11 + iVar13 * 8);\n        if ((*(iVar2 + 0xd0) <= unaff_RBX) && (unaff_RBX < *(iVar2 + 0xd8))) {\n            fcn.00403940(arg1 + (unaff_RBX - *(iVar2 + 0xd0)));\n            return;\n        }\n        if ((*(iVar2 + 0xe0) <= unaff_RBX) && (unaff_RBX < *(iVar2 + 0xe8))) {\n            fcn.00403940(arg1 + (unaff_RBX - *(iVar2 + 0xe0)));\n            return;\n        }\n    }\n    uVar7 = unaff_RBX + 0x800000000000 >> 0x2a;\n    if (uVar7 < 0x40) {\n        if (*(*(*(*(uVar7 * 8 + 0x52a0d8) + (unaff_RBX + 0x800000000000 >> 0x16 & 0xfffff) * 8) + 0x20000 +\n               (unaff_RBX >> 0xd & 0x1ff) * 8) + 99) == '\\x02') {\n            fcn.00456f00();\n            return;\n        }\n        uVar7 = unaff_RBX + 0x800000000000 >> 0x2a;\n        if (uVar7 < 0x40) {\n            uVar12 = unaff_RBX + 0x800000000000 >> 0x16;\n            iVar11 = *(*(uVar7 * 8 + 0x52a0d8) + (uVar12 & 0xfffff) * 8);\n            if (iVar11 == 0) {\n                uVar12 = 0;\n                uVar7 = 0;\n                puVar14 = NULL;\n                puVar9 = NULL;\n            }\n            else {\n                puVar9 = (unaff_RBX >> 5 & 0x1ffff) + iVar11;\n                uVar7 = unaff_RBX >> 3 & 3;\n                puVar14 = iVar11 + 0x1ffff;\n            }\n            uVar5 = 0;\n            uVar15 = unaff_RBX;\n            do {\n                uVar10 = uVar7;\n                if (unaff_RDI + arg1 <= uVar5) {\n                    return;\n                }\n                if ((arg1 <= uVar5) && ((*puVar9 >> (uVar10 & 0x1f) & 1) != 0)) {\n                    puVar1 = unaff_RBX + uVar5;\n                    unaff_RBX = uVar15;\n                    cVar4 = fcn.004031a0(*puVar1);\n                    if (cVar4 != '\\0') {\n                        fcn.00430d40();\n                        break;\n                    }\n                    uVar12 = uVar12 & 0xffffffff;\n                    uVar15 = unaff_RBX;\n                }\n                if (uVar10 < 3) {\n                    uVar10 = uVar10 + 1;\n                }\n                else if (puVar14 == puVar9) {\n                    uVar6 = uVar12 & 0xffffffff;\n                    unaff_RBX = uVar15;\n                    puVar9 = fcn.0040f3c0(uVar12 & 0xffffffff);\n                    uVar12 = uVar6;\n                    uVar15 = unaff_RBX;\n                }\n                else {\n                    puVar9 = puVar9 + 1;\n                    uVar10 = 0;\n                }\n                uVar5 = uVar5 + 8;\n                uVar7 = uVar10;\n            } while( true );\n        }\n        fcn.00459740(0x40);\n    }\n    fcn.00459740(0x40);\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 1203
    },
    "004074c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004074c0(ulong param_1, ulong param_2)\n\n{\n    float fVar1;\n    float fVar2;\n    ulong uVar3;\n    ulong uVar4;\n    uint8_t uVar5;\n    int64_t in_RAX;\n    uint64_t noname_0;\n    ulong *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00450e40();\n    uVar5 = *(in_RAX + 0x17);\n    noname_0 = uVar5;\n    if (uVar5 < 9) {\n        if (4 < uVar5) {\n            if (6 < uVar5) {\n                if (uVar5 == 7) {\n                    fcn.004324c0();\n                    fcn.00432dc0();\n                    fcn.00432dc0();\n                    fcn.00432ac0();\n                    fcn.00432dc0();\n                    fcn.00432540();\n                    return;\n                }\n                fcn.004324c0();\n                fcn.00432dc0();\n                fcn.00432dc0();\n                fcn.00432ac0();\n                fcn.00432dc0();\n                fcn.00432540();\n                return;\n            }\n            if (uVar5 == 5) {\n                fcn.004324c0();\n                fcn.00432dc0();\n                fcn.00432dc0();\n                fcn.00432bc0();\n                fcn.00432dc0();\n                fcn.00432540();\n                return;\n            }\n            fcn.004324c0();\n            fcn.00432dc0();\n            fcn.00432dc0();\n            fcn.00432bc0();\n            fcn.00432dc0();\n            fcn.00432540();\n            return;\n        }\n        if (2 < uVar5) {\n            if (uVar5 == 3) {\n                fcn.004324c0();\n                fcn.00432dc0();\n                fcn.00432dc0();\n                fcn.00432bc0();\n                fcn.00432dc0();\n                fcn.00432540();\n                return;\n            }\n            fcn.004324c0();\n            fcn.00432dc0();\n            fcn.00432dc0();\n            fcn.00432bc0();\n            fcn.00432dc0();\n            fcn.00432540();\n            return;\n        }\n        if (uVar5 == 1) {\n            fcn.004324c0();\n            fcn.00432dc0();\n            fcn.00432dc0();\n            fcn.00432760();\n            fcn.00432dc0();\n            fcn.00432540();\n            return;\n        }\n        if (uVar5 == 2) {\n            fcn.004324c0();\n            fcn.00432dc0();\n            fcn.00432dc0();\n            fcn.00432bc0();\n            fcn.00432dc0();\n            fcn.00432540();\n            return;\n        }\n    }\n    else {\n        if (uVar5 < 0xd) {\n            if (10 < uVar5) {\n                if (uVar5 == 0xb) {\n                    fcn.004324c0();\n                    fcn.00432dc0();\n                    fcn.00432dc0();\n                    fcn.00432ac0();\n                    fcn.00432dc0();\n                    fcn.00432540();\n                    return;\n                }\n                fcn.004324c0();\n                fcn.00432dc0();\n                fcn.00432dc0();\n                fcn.00432ac0();\n                fcn.00432dc0();\n                fcn.00432540();\n                return;\n            }\n            if (uVar5 == 9) {\n                fcn.004324c0();\n                fcn.00432dc0();\n                fcn.00432dc0();\n                fcn.00432ac0();\n                fcn.00432dc0();\n                fcn.00432540();\n                return;\n            }\n            fcn.004324c0();\n            fcn.00432dc0();\n            fcn.00432dc0();\n            fcn.00432ac0();\n            fcn.00432dc0();\n            fcn.00432540();\n            return;\n        }\n        if (uVar5 < 0xf) {\n            if (uVar5 == 0xd) {\n                fcn.004324c0();\n                fcn.00432dc0();\n                fcn.00432dc0();\n                fcn.004327c0(noname_0, param_2);\n                fcn.00432dc0();\n                fcn.00432540();\n                return;\n            }\n            fcn.004324c0();\n            fcn.00432dc0();\n            fcn.00432dc0();\n            fcn.004327c0(noname_0, param_2);\n            fcn.00432dc0();\n            fcn.00432540();\n            return;\n        }\n        if (uVar5 == 0xf) {\n            fVar1 = *unaff_RBX;\n            fVar2 = *(unaff_RBX + 4);\n            fcn.004324c0();\n            fcn.00432dc0();\n            fcn.00432a20(fVar1, fVar2);\n            fcn.00432540();\n            return;\n        }\n        if (uVar5 == 0x10) {\n            uVar3 = *unaff_RBX;\n            uVar4 = unaff_RBX[1];\n            fcn.004324c0();\n            fcn.00432dc0();\n            fcn.00432a20(uVar3, uVar4);\n            fcn.00432540();\n            return;\n        }\n        if (uVar5 == 0x18) {\n            fcn.004324c0();\n            fcn.00432dc0();\n            fcn.00432dc0();\n            fcn.00432dc0();\n            fcn.00432dc0();\n            fcn.00432540();\n            return;\n        }\n    }\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432dc0();\n    fcn.00432dc0();\n    fcn.00432d40();\n    fcn.00432540();\n    return;\n}\n",
        "token_count": 1462
    },
    "0040c380": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040c380(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    char cVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t *piVar6;\n    int64_t *unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((unaff_RBX == NULL) || (*unaff_RBX == 0)) {\n                if ((*(in_RAX + 0x54) >> 4 & 1) != 0) {\n                    pcVar1 = **(in_RAX + 0x48);\n                    *(*0x20 + -0x40) = 0x40c479;\n                    (*pcVar1)();\n                }\n                return 0x558f00;\n            }\n            if ((*(unaff_RBX + 1) & 4) == 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x10) = arg1;\n                pcVar1 = **(in_RAX + 0x48);\n                *(*0x20 + -0x40) = 0x40c3eb;\n                uVar4 = (*pcVar1)();\n                iVar10 = *(*0x20 + 0x10);\n                uVar8 = (1 << (*(iVar10 + 9) & 0x3f)) - 1;\n                iVar9 = *(*0x20 + 8);\n                iVar2 = *(iVar10 + 0x18);\n                iVar5 = (uVar8 & uVar4) * *(iVar9 + 0x52) + *(iVar10 + 0x10);\n                if (iVar2 != 0) {\n                    if ((*(iVar10 + 8) & 8) == 0) {\n                        uVar8 = uVar8 >> 1;\n                    }\n                    iVar10 = *(iVar9 + 0x52) * (uVar8 & uVar4);\n                    if (2 < *(iVar2 + iVar10) - 2U) {\n                        iVar5 = iVar2 + iVar10;\n                    }\n                }\n                uVar8 = uVar4 >> 0x38;\n                if (uVar4 >> 0x38 < 5) {\n                    uVar8 = (uVar4 >> 0x38) + 5;\n                }\n                *(*0x20 + -0x21) = uVar8;\n                do {\n                    if (iVar5 == 0) {\n                        return 0x558f00;\n                    }\n                    *(*0x20 + -0x18) = iVar5;\n                    for (uVar4 = 0; uVar4 < 8; uVar4 = uVar4 + 1) {\n                        if (uVar8 == *(uVar4 + iVar5)) {\n                            *(*0x20 + -0x20) = uVar4;\n                            piVar6 = *(iVar9 + 0x50) * uVar4 + iVar5 + 8;\n                            if ((*(iVar9 + 0x54) & 1) != 0) {\n                                piVar6 = *piVar6;\n                            }\n                            pcVar1 = **(*(iVar9 + 0x30) + 0x18);\n                            *(*0x20 + -0x40) = 0x40c510;\n                            cVar3 = (*pcVar1)(piVar6);\n                            if (cVar3 != '\\0') {\n                                iVar10 = *(*0x20 + 8);\n                                piVar6 = *(*0x20 + -0x18) + *(iVar10 + 0x51) * *(*0x20 + -0x20) + *(iVar10 + 0x50) * 8 +\n                                         8;\n                                if ((*(iVar10 + 0x54) >> 1 & 1) != 0) {\n                                    piVar6 = *piVar6;\n                                }\n                                return piVar6;\n                            }\n                            uVar8 = *(*0x20 + -0x21);\n                            iVar5 = *(*0x20 + -0x18);\n                            uVar4 = *(*0x20 + -0x20);\n                            iVar9 = *(*0x20 + 8);\n                        }\n                        else if (*(uVar4 + iVar5) == '\\0') {\n                            return 0x558f00;\n                        }\n                    }\n                    iVar5 = *(iVar5 + *(iVar9 + 0x52) + -8);\n                } while( true );\n            }\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x40) = 0x40c585;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x40c59a;\n        fcn.00457040();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1321
    },
    "0040cd60": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040cd60(uint64_t arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    ulong arg1_00;\n    int64_t **arg3;\n    ulong *arg3_00;\n    uint8_t uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    char *pcVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    ulong *arg1_01;\n    int64_t **arg1_02;\n    int64_t **ppiVar9;\n    int64_t unaff_R14;\n    bool bVar10;\n    uchar in_XMM15 [16];\n    \n    while (puVar5 = *0x20,  *0x20 + -0x30 < *(unaff_R14 + 0x10) || *0x20 + -0x30 == *(unaff_R14 + 0x10)) {\ncode_r0x0040d2ca:\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x40d2de;\n        fcn.00457040();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    }\n    puVar5 = *0x20 + -0xb0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    pcVar6 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x18);\n    uVar4 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar4 = *(unaff_RBX + 9) - 1;\n    }\n    iVar7 = 1 << (uVar4 & 0x3f);\n    arg2 = arg1;\n    if (2 < *pcVar6 - 2U) {\n        *(*0x20 + -0x48) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        iVar8 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x10);\n        *(*0x20 + -0x48) = iVar8;\n        *(*0x20 + -0x38) = iVar8 + 8;\n        *(*0x20 + -0x30) = iVar8 + *(in_RAX + 0x50) * 8 + 8;\n        if ((*(unaff_RBX + 8) & 8) == 0) {\n            iVar8 = (iVar7 + arg1) * *(in_RAX + 0x52) + *(unaff_RBX + 0x10);\n            *(*0x20 + -0x28) = iVar8;\n            *(*0x20 + -0x18) = iVar8 + 8;\n            *(*0x20 + -0x10) = iVar8 + *(in_RAX + 0x50) * 8 + 8;\n        }\n        *(*0x20 + -0x70) = arg1;\n        *(*0x20 + -0x91) = uVar4;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -0x78) = iVar7;\n        for (; arg1 = uVar4,  pcVar6 != NULL; pcVar6 = *(pcVar6 + (*(in_RAX + 0x52) - 8))) {\n            *(*0x20 + -0x50) = pcVar6;\n            arg1_02 = pcVar6 + 8;\n            arg1_01 = pcVar6 + *(in_RAX + 0x50) * 8 + 8;\n            for (iVar8 = 0; iVar8 < 8; iVar8 = iVar8 + 1) {\n                uVar3 = pcVar6[iVar8];\n                if (1 < uVar3) {\n                    if (4 < uVar3) {\n                        ppiVar9 = arg1_02;\n                        if ((*(in_RAX + 0x54) & 1) != 0) {\n                            ppiVar9 = *arg1_02;\n                        }\n                        *(*0x20 + -0x90) = iVar8;\n                        *(*0x20 + -0x58) = arg1_01;\n                        *(*0x20 + -0x68) = ppiVar9;\n                        *(*0x20 + -0x60) = arg1_02;\n                        if ((*(unaff_RBX + 8) & 8) == 0) {\n                            *(*0x20 + -0x93) = uVar3;\n                            pcVar2 = **(in_RAX + 0x48);\n                            *(*0x20 + -0xb8) = 0x40cfc8;\n                            uVar4 = (*pcVar2)();\n                            if ((*(*(*0x20 + 0x10) + 8) & 1) == 0) {\n                                uVar3 = 0;\n                            }\n                            else if ((*(*(*0x20 + 8) + 0x54) >> 2 & 1) == 0) {\n                                *(*0x20 + -0x88) = uVar4;\n                                pcVar2 = **(*(*(*0x20 + 8) + 0x30) + 0x18);\n                                *(*0x20 + -0xb8) = 0x40d009;\n                                uVar3 = (*pcVar2)();\n                                uVar3 = uVar3 ^ 1;\n                                uVar4 = *(*0x20 + -0x88);\n                            }\n                            else {\n                                uVar3 = 0;\n                            }\n                            if (uVar3 == 0) {\n                                bVar10 = (uVar4 >> (*(*0x20 + -0x91) & 0x3f) & 1) != 0;\n                                uVar3 = *(*0x20 + -0x93);\n                            }\n                            else {\n                                uVar3 = uVar4 >> 0x38;\n                                if (uVar3 < 5) {\n                                    uVar3 = uVar3 + 5;\n                                }\n                                bVar10 = *(*0x20 + -0x93) & 1;\n                            }\n                            arg1 = *(*0x20 + -0x91);\n                            arg2 = *(*0x20 + -0x70);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            iVar8 = *(*0x20 + -0x90);\n                            arg1_01 = *(*0x20 + -0x58);\n                            arg1_02 = *(*0x20 + -0x60);\n                            ppiVar9 = *(*0x20 + -0x68);\n                            in_RAX = *(*0x20 + 8);\n                            pcVar6 = *(*0x20 + -0x50);\n                        }\n                        else {\n                            bVar10 = false;\n                        }\n                        pcVar6[iVar8] = bVar10 + 2;\n                        if (bVar10 < 2) {\n                            iVar7 = bVar10 * 0x20;\n                            *(*0x20 + -0x80) = iVar7;\n                            if (*(*0x20 + iVar7 + -0x40) == 8) {\n                                *(*0x20 + -0x92) = uVar3;\n                                arg1_00 = *(*0x20 + iVar7 + -0x48);\n                                *(*0x20 + -0xb8) = 0x40d0e5;\n                                iVar8 = fcn.0040bc80(arg1_00);\n                                iVar7 = *(*0x20 + -0x80);\n                                *(*0x20 + iVar7 + -0x48) = iVar8;\n                                *(*0x20 + iVar7 + -0x40) = 0;\n                                *(*0x20 + iVar7 + -0x38) = iVar8 + 8;\n                                in_RAX = *(*0x20 + 8);\n                                *(*0x20 + iVar7 + -0x30) = iVar8 + *(in_RAX + 0x50) * 8 + 8;\n                                arg1 = *(*0x20 + -0x91);\n                                arg2 = *(*0x20 + -0x70);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                pcVar6 = *(*0x20 + -0x50);\n                                iVar8 = *(*0x20 + -0x90);\n                                iVar7 = *(*0x20 + -0x80);\n                                arg1_01 = *(*0x20 + -0x58);\n                                arg1_02 = *(*0x20 + -0x60);\n                                uVar3 = *(*0x20 + -0x92);\n                                ppiVar9 = *(*0x20 + -0x68);\n                            }\n                            *(*(*0x20 + iVar7 + -0x48) + (*(*0x20 + iVar7 + -0x40) & 7)) = uVar3;\n                            if ((*(in_RAX + 0x54) & 1) == 0) {\n                                *(*0x20 + -0xb8) = 0x40d1c5;\n                                fcn.0040eb60(arg1_02);\n                                in_RAX = *(*0x20 + 8);\n                                arg1 = *(*0x20 + -0x91);\n                                arg2 = *(*0x20 + -0x70);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                pcVar6 = *(*0x20 + -0x50);\n                                iVar8 = *(*0x20 + -0x90);\n                                iVar7 = *(*0x20 + -0x80);\n                                arg1_01 = *(*0x20 + -0x58);\n                                arg1_02 = *(*0x20 + -0x60);\n                            }\n                            else {\n                                arg3 = *(*0x20 + iVar7 + -0x38);\n                                if (*0x557ed0 == 0) {\n                                    *arg3 = ppiVar9;\n                                }\n                                else {\n                                    *(*0x20 + -0xb8) = 0x40d1a5;\n                                    in_RAX = fcn.004593e0(arg1, arg2, arg3, iVar7);\n                                }\n                            }\n                            if ((*(in_RAX + 0x54) >> 1 & 1) == 0) {\n                                *(*0x20 + -0xb8) = 0x40d24f;\n                                fcn.0040eb60(arg1_01);\n                                in_RAX = *(*0x20 + 8);\n                                arg1 = *(*0x20 + -0x91);\n                                arg2 = *(*0x20 + -0x70);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                pcVar6 = *(*0x20 + -0x50);\n                                iVar8 = *(*0x20 + -0x90);\n                                iVar7 = *(*0x20 + -0x80);\n                                arg1_01 = *(*0x20 + -0x58);\n                                arg1_02 = *(*0x20 + -0x60);\n                            }\n                            else {\n                                arg3_00 = *(*0x20 + iVar7 + -0x30);\n                                if (*0x557ed0 == 0) {\n                                    *arg3_00 = *arg1_01;\n                                }\n                                else {\n                                    *(*0x20 + -0xb8) = 0x40d230;\n                                    in_RAX = fcn.004593e0(arg1, arg2, arg3_00, iVar7);\n                                }\n                            }\n                            *(*0x20 + iVar7 + -0x40) = *(*0x20 + iVar7 + -0x40) + 1;\n                            *(*0x20 + iVar7 + -0x38) = *(*0x20 + iVar7 + -0x38) + *(in_RAX + 0x50);\n                            *(*0x20 + iVar7 + -0x30) = *(*0x20 + iVar7 + -0x30) + *(in_RAX + 0x51);\n                            iVar7 = *(*0x20 + -0x78);\n                            goto code_r0x0040cf3c;\n                        }\n                        arg1 = 2;\n                        *(*0x20 + -0xb8) = 0x40d2b8;\n                        fcn.00459720(2);\n                    }\n                    unaff_RBX = 0xd;\n                    *(*0x20 + -0xb8) = 0x40d2c9;\n                    in_RAX = fcn.00430d40();\n                    goto code_r0x0040d2ca;\n                }\n                pcVar6[iVar8] = '\\x04';\ncode_r0x0040cf3c:\n                arg1_02 = arg1_02 + *(in_RAX + 0x50);\n                arg1_01 = arg1_01 + *(in_RAX + 0x51);\n            }\n            uVar4 = arg1;\n        }\n        if (((*(unaff_RBX + 8) & 2) == 0) && (*(*(in_RAX + 0x40) + 8) != 0)) {\n            uVar1 = *(in_RAX + 0x52);\n            iVar7 = *(unaff_RBX + 0x18);\n            *(*0x20 + -0xb8) = 0x40cf1d;\n            fcn.0040ee60(uVar1 * arg2 + iVar7 + 8);\n            arg2 = *(*0x20 + -0x70);\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar7 = *(*0x20 + -0x78);\n        }\n    }\n    if (*(unaff_RBX + 0x20) == arg2) {\n        *(*0x20 + -0xb8) = 0x40cea5;\n        fcn.0040d300(iVar7);\n    }\n    return;\n}\n",
        "token_count": 3278
    },
    "0040d300": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040d300(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    iVar1 = *(in_RAX + 0x20);\n    *(in_RAX + 0x20) = iVar1 + 1;\n    uVar3 = iVar1 + 0x401;\n    if (arg1 < uVar3) {\n        uVar3 = arg1;\n    }\n    while ((uVar2 = *(in_RAX + 0x20),  uVar2 != uVar3 && (*(*(unaff_RBX + 0x52) * uVar2 + *(in_RAX + 0x18)) - 2U < 3)))\n    {\n        *(in_RAX + 0x20) = uVar2 + 1;\n    }\n    if (arg1 == uVar2) {\n        if (*0x557ed0 == 0) {\n            *(in_RAX + 0x18) = 0;\n        }\n        else {\n            in_RAX = fcn.00459380(0);\n        }\n        if (*(in_RAX + 0x28) != 0) {\n            if (*0x557ed0 == 0) {\n                *(*(in_RAX + 0x28) + 8) = 0;\n            }\n            else {\n                in_RAX = fcn.00459380();\n            }\n        }\n        *(in_RAX + 8) = *(in_RAX + 8) & 0xf7;\n    }\n    return;\n}\n",
        "token_count": 423
    },
    "0040d400": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040d400(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int32_t *piVar5;\n    int64_t *unaff_RBX;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if ((unaff_RBX == NULL) || (*unaff_RBX == 0)) {\n                return 0x558f00;\n            }\n            arg1._0_4_ = *(unaff_RBX + 1);\n            if ((*(unaff_RBX + 1) & 4) == 0) {\n                if (*(unaff_RBX + 9) == '\\0') {\n                    iVar4 = unaff_RBX[2];\n                }\n                else {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    pcVar1 = **(in_RAX + 0x48);\n                    *(*0x20 + -0x20) = 0x40d476;\n                    uVar3 = (*pcVar1)();\n                    iVar8 = *(*0x20 + 0x10);\n                    uVar6 = (1 << (*(iVar8 + 9) & 0x3f)) - 1;\n                    in_RAX = *(*0x20 + 8);\n                    iVar2 = *(iVar8 + 0x18);\n                    iVar4 = (uVar6 & uVar3) * *(in_RAX + 0x52) + *(iVar8 + 0x10);\n                    if (iVar2 != 0) {\n                        if ((*(iVar8 + 8) & 8) == 0) {\n                            uVar6 = uVar6 >> 1;\n                        }\n                        iVar8 = *(in_RAX + 0x52) * (uVar6 & uVar3);\n                        if (2 < *(iVar2 + iVar8) - 2U) {\n                            iVar4 = iVar2 + iVar8;\n                        }\n                    }\n                }\n                do {\n                    if (iVar4 == 0) {\n                        return 0x558f00;\n                    }\n                    piVar5 = iVar4 + 8;\n                    for (uVar6 = 0; uVar6 < 8; uVar6 = uVar6 + 1) {\n                        if ((*(*0x20 + 0x18) == *piVar5) && (1 < *(uVar6 + iVar4))) {\n                            return uVar6 * *(in_RAX + 0x51) + iVar4 + 0x28;\n                        }\n                        piVar5 = piVar5 + 1;\n                    }\n                    iVar4 = *(iVar4 + *(in_RAX + 0x52) + -8);\n                } while( true );\n            }\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x20) = 0x40d569;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x40d57d;\n        fcn.00457040();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1._0_4_ = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 950
    },
    "0040d5a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040d5a0(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int32_t *piVar5;\n    int64_t *unaff_RBX;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if ((unaff_RBX == NULL) || (*unaff_RBX == 0)) {\n                return 0x558f00;\n            }\n            arg1._0_4_ = *(unaff_RBX + 1);\n            if ((*(unaff_RBX + 1) & 4) == 0) {\n                if (*(unaff_RBX + 9) == '\\0') {\n                    iVar4 = unaff_RBX[2];\n                }\n                else {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    pcVar1 = **(in_RAX + 0x48);\n                    *(*0x20 + -0x20) = 0x40d616;\n                    uVar3 = (*pcVar1)();\n                    iVar8 = *(*0x20 + 0x10);\n                    uVar6 = (1 << (*(iVar8 + 9) & 0x3f)) - 1;\n                    in_RAX = *(*0x20 + 8);\n                    iVar2 = *(iVar8 + 0x18);\n                    iVar4 = (uVar6 & uVar3) * *(in_RAX + 0x52) + *(iVar8 + 0x10);\n                    if (iVar2 != 0) {\n                        if ((*(iVar8 + 8) & 8) == 0) {\n                            uVar6 = uVar6 >> 1;\n                        }\n                        iVar8 = *(in_RAX + 0x52) * (uVar6 & uVar3);\n                        if (2 < *(iVar2 + iVar8) - 2U) {\n                            iVar4 = iVar2 + iVar8;\n                        }\n                    }\n                }\n                do {\n                    if (iVar4 == 0) {\n                        return 0x558f00;\n                    }\n                    piVar5 = iVar4 + 8;\n                    for (uVar6 = 0; uVar6 < 8; uVar6 = uVar6 + 1) {\n                        if ((*(*0x20 + 0x18) == *piVar5) && (1 < *(uVar6 + iVar4))) {\n                            return uVar6 * *(in_RAX + 0x51) + iVar4 + 0x28;\n                        }\n                        piVar5 = piVar5 + 1;\n                    }\n                    iVar4 = *(iVar4 + *(in_RAX + 0x52) + -8);\n                } while( true );\n            }\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x20) = 0x40d716;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x40d72a;\n        fcn.00457040();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1._0_4_ = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 952
    },
    "0040dae0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040dae0(uint64_t arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    ulong arg1_00;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    char *pcVar5;\n    uint32_t uVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uint *puVar9;\n    char *arg1_01;\n    uint8_t uVar10;\n    int64_t unaff_R14;\n    bool bVar11;\n    uchar in_XMM15 [16];\n    \n    while (puVar4 = *0x20,  *0x20 + -0x20 < *(unaff_R14 + 0x10) || *0x20 + -0x20 == *(unaff_R14 + 0x10)) {\ncode_r0x0040de7a:\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x40de8e;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    }\n    puVar4 = *0x20 + -0xa0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    pcVar5 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x18);\n    uVar6 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar6 = *(unaff_RBX + 9) - 1;\n    }\n    iVar7 = 1 << (uVar6 & 0x3f);\n    uVar3 = arg1;\n    if (2 < *pcVar5 - 2U) {\n        *(*0x20 + -0x48) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        iVar8 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x10);\n        *(*0x20 + -0x48) = iVar8;\n        *(*0x20 + -0x38) = iVar8 + 8;\n        *(*0x20 + -0x30) = iVar8 + 0x28;\n        if ((*(unaff_RBX + 8) & 8) == 0) {\n            iVar8 = (iVar7 + arg1) * *(in_RAX + 0x52) + *(unaff_RBX + 0x10);\n            *(*0x20 + -0x28) = iVar8;\n            *(*0x20 + -0x18) = iVar8 + 8;\n            *(*0x20 + -0x10) = iVar8 + 0x28;\n        }\n        *(*0x20 + -0x78) = arg1;\n        *(*0x20 + -0x81) = uVar6;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x68) = iVar7;\n        arg1 = uVar6;\n        for (; pcVar5 != NULL; pcVar5 = *(pcVar5 + (*(in_RAX + 0x52) - 8))) {\n            *(*0x20 + -0x50) = pcVar5;\n            puVar9 = pcVar5 + 8;\n            arg1_01 = pcVar5 + 0x28;\n            for (iVar8 = 0; iVar8 < 8; iVar8 = iVar8 + 1) {\n                uVar10 = pcVar5[iVar8];\n                if (1 < uVar10) {\n                    if (4 < uVar10) {\n                        *(*0x20 + -0x80) = iVar8;\n                        *(*0x20 + -0x82) = uVar10;\n                        *(*0x20 + -0x58) = arg1_01;\n                        *(*0x20 + -0x60) = puVar9;\n                        if ((*(unaff_RBX + 8) & 8) == 0) {\n                            pcVar2 = **(in_RAX + 0x48);\n                            *(*0x20 + -0xa8) = 0x40dd06;\n                            uVar3 = (*pcVar2)();\n                            bVar11 = (uVar3 >> (*(*0x20 + -0x81) & 0x3f) & 1) != 0;\n                            puVar9 = *(*0x20 + -0x60);\n                            arg1_01 = *(*0x20 + -0x58);\n                            iVar8 = *(*0x20 + -0x80);\n                            uVar10 = *(*0x20 + -0x82);\n                            pcVar5 = *(*0x20 + -0x50);\n                        }\n                        else {\n                            bVar11 = false;\n                        }\n                        pcVar5[iVar8] = bVar11 + 2;\n                        if (bVar11 < 2) {\n                            iVar7 = bVar11 * 0x20;\n                            *(*0x20 + -0x70) = iVar7;\n                            if (*(*0x20 + iVar7 + -0x40) == 8) {\n                                arg1_00 = *(*0x20 + iVar7 + -0x48);\n                                *(*0x20 + -0xa8) = 0x40dd91;\n                                iVar8 = fcn.0040bc80(arg1_00);\n                                iVar7 = *(*0x20 + -0x70);\n                                *(*0x20 + iVar7 + -0x48) = iVar8;\n                                *(*0x20 + iVar7 + -0x40) = 0;\n                                *(*0x20 + iVar7 + -0x38) = iVar8 + 8;\n                                *(*0x20 + iVar7 + -0x30) = iVar8 + 0x28;\n                                puVar9 = *(*0x20 + -0x60);\n                                arg1_01 = *(*0x20 + -0x58);\n                                uVar10 = *(*0x20 + -0x82);\n                            }\n                            *(*(*0x20 + iVar7 + -0x48) + (*(*0x20 + iVar7 + -0x40) & 7)) = uVar10;\n                            **(*0x20 + iVar7 + -0x38) = *puVar9;\n                            *(*0x20 + -0xa8) = 0x40de05;\n                            fcn.0040eb60(arg1_01);\n                            iVar7 = *(*0x20 + -0x70);\n                            *(*0x20 + iVar7 + -0x40) = *(*0x20 + iVar7 + -0x40) + 1;\n                            *(*0x20 + iVar7 + -0x38) = *(*0x20 + iVar7 + -0x38) + 4;\n                            in_RAX = *(*0x20 + 8);\n                            *(*0x20 + iVar7 + -0x30) = *(*0x20 + iVar7 + -0x30) + *(in_RAX + 0x51);\n                            arg1 = *(*0x20 + -0x81);\n                            uVar3 = *(*0x20 + -0x78);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            pcVar5 = *(*0x20 + -0x50);\n                            iVar7 = *(*0x20 + -0x68);\n                            puVar9 = *(*0x20 + -0x60);\n                            arg1_01 = *(*0x20 + -0x58);\n                            iVar8 = *(*0x20 + -0x80);\n                            goto code_r0x0040dc9b;\n                        }\n                        arg1 = 2;\n                        *(*0x20 + -0xa8) = 0x40de68;\n                        fcn.00459720(2);\n                    }\n                    unaff_RBX = 0xd;\n                    *(*0x20 + -0xa8) = 0x40de79;\n                    in_RAX = fcn.00430d40();\n                    goto code_r0x0040de7a;\n                }\n                pcVar5[iVar8] = '\\x04';\ncode_r0x0040dc9b:\n                puVar9 = puVar9 + 1;\n                arg1_01 = arg1_01 + *(in_RAX + 0x51);\n            }\n        }\n        if (((*(unaff_RBX + 8) & 2) == 0) && (*(*(in_RAX + 0x40) + 8) != 0)) {\n            uVar1 = *(in_RAX + 0x52);\n            iVar7 = *(unaff_RBX + 0x18);\n            *(*0x20 + -0xa8) = 0x40dc7c;\n            fcn.0040ee60(uVar1 * uVar3 + iVar7 + 8);\n            uVar3 = *(*0x20 + -0x78);\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar7 = *(*0x20 + -0x68);\n        }\n    }\n    if (*(unaff_RBX + 0x20) == uVar3) {\n        *(*0x20 + -0xa8) = 0x40dc0b;\n        fcn.0040d300(iVar7);\n    }\n    return;\n}\n",
        "token_count": 2249
    },
    "0040dec0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040dec0(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    char cVar5;\n    int64_t in_RAX;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t *piVar9;\n    int64_t *unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int32_t *unaff_RDI;\n    int64_t iVar11;\n    int64_t iVar12;\n    int32_t **ppiVar13;\n    int64_t unaff_R14;\n    bool bVar14;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            if ((unaff_RBX == NULL) || (*unaff_RBX == 0)) {\n                return 0x558f00;\n            }\n            if ((*(unaff_RBX + 1) & 4) == 0) break;\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x68) = 0x40e265;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + -8) = 0x40e27f;\n        fcn.00457040();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        *0x20 = puVar10;\n    } while( true );\n    *(*0x20 + 8) = in_RAX;\n    if (*(unaff_RBX + 9) != '\\0') {\ncode_r0x0040df47:\n        *(*0x20 + 0x10) = unaff_RBX;\n        pcVar1 = **(in_RAX + 0x48);\n        *(*0x20 + -0x68) = 0x40df62;\n        uVar7 = (*pcVar1)();\n        iVar12 = *(*0x20 + 0x10);\n        uVar8 = (1 << (*(iVar12 + 9) & 0x3f)) - 1;\n        iVar11 = *(*0x20 + 8);\n        iVar2 = *(iVar12 + 0x18);\n        iVar6 = (uVar8 & uVar7) * *(iVar11 + 0x52) + *(iVar12 + 0x10);\n        if (iVar2 != 0) {\n            if ((*(iVar12 + 8) & 8) == 0) {\n                uVar8 = uVar8 >> 1;\n            }\n            iVar12 = *(iVar11 + 0x52) * (uVar8 & uVar7);\n            if (2 < *(iVar2 + iVar12) - 2U) {\n                iVar6 = iVar2 + iVar12;\n            }\n        }\n        uVar8 = uVar7 >> 0x38;\n        if (uVar7 >> 0x38 < 5) {\n            uVar8 = (uVar7 >> 0x38) + 5;\n        }\n        *(*0x20 + -0x41) = uVar8;\n        do {\n            if (iVar6 == 0) {\n                return 0x558f00;\n            }\n            *(*0x20 + -0x18) = iVar6;\n            piVar9 = iVar6 + 8;\n            for (uVar7 = 0; uVar7 < 8; uVar7 = uVar7 + 1) {\n                if ((piVar9[1] == *(*0x20 + 0x20)) && (*(uVar7 + iVar6) == uVar8)) {\n                    if (*(*0x20 + 0x18) == *piVar9) {\ncode_r0x0040e085:\n                        return iVar6 + uVar7 * *(iVar11 + 0x51) + 0x88;\n                    }\n                    *(*0x20 + -0x30) = uVar7;\n                    *(*0x20 + -0x28) = piVar9;\n                    *(*0x20 + -0x68) = 0x40e057;\n                    cVar5 = fcn.004021a0(*(*0x20 + 0x20), piVar9);\n                    if (cVar5 != '\\0') {\n                        iVar6 = *(*0x20 + -0x18);\n                        uVar7 = *(*0x20 + -0x30);\n                        iVar11 = *(*0x20 + 8);\n                        goto code_r0x0040e085;\n                    }\n                    uVar8 = *(*0x20 + -0x41);\n                    iVar6 = *(*0x20 + -0x18);\n                    piVar9 = *(*0x20 + -0x28);\n                    uVar7 = *(*0x20 + -0x30);\n                    iVar11 = *(*0x20 + 8);\n                }\n                piVar9 = piVar9 + 2;\n            }\n            iVar6 = *(iVar6 + *(iVar11 + 0x52) + -8);\n        } while( true );\n    }\n    iVar12 = unaff_RBX[2];\n    *(*0x20 + -0x10) = iVar12;\n    if (0x1f < unaff_RDI) {\n        ppiVar13 = iVar12 + 8;\n        uVar8 = 8;\n        for (uVar7 = 0; uVar7 < 8; uVar7 = uVar7 + 1) {\n            if ((ppiVar13[1] == unaff_RDI) && (1 < *(uVar7 + iVar12))) {\n                piVar3 = *ppiVar13;\n                piVar4 = *(*0x20 + 0x18);\n                if (piVar4 == piVar3) {\n                    return uVar7 * *(in_RAX + 0x51) + iVar12 + 0x88;\n                }\n                if (((*piVar3 == *piVar4) && (*(unaff_RDI + piVar3 + -4) == *(unaff_RDI + piVar4 + -4))) &&\n                   (bVar14 = uVar8 != 8,  uVar8 = uVar7,  bVar14)) goto code_r0x0040df47;\n            }\n            else if (*(uVar7 + iVar12) == '\\0') break;\n            ppiVar13 = ppiVar13 + 2;\n        }\n        if (uVar8 != 8) {\n            *(*0x20 + -0x40) = uVar8;\n            *(*0x20 + -0x68) = 0x40e158;\n            cVar5 = fcn.004021a0(unaff_RDI, uVar8 * 0x10 + iVar12 + 8);\n            if (cVar5 != '\\0') {\n                return *(*0x20 + -0x10) + *(*0x20 + -0x40) * *(*(*0x20 + 8) + 0x51) + 0x88;\n            }\n        }\n        return 0x558f00;\n    }\n    piVar9 = iVar12 + 8;\n    uVar8 = 0;\n    do {\n        if (7 < uVar8) {\n            return 0x558f00;\n        }\n        if ((piVar9[1] == *(*0x20 + 0x20)) && (1 < *(uVar8 + iVar12))) {\n            if (*(*0x20 + 0x18) == *piVar9) {\ncode_r0x0040e223:\n                return iVar12 + uVar8 * *(in_RAX + 0x51) + 0x88;\n            }\n            *(*0x20 + -0x38) = uVar8;\n            *(*0x20 + -0x20) = piVar9;\n            *(*0x20 + -0x68) = 0x40e1fa;\n            cVar5 = fcn.004021a0(*(*0x20 + 0x20), piVar9);\n            if (cVar5 != '\\0') {\n                in_RAX = *(*0x20 + 8);\n                uVar8 = *(*0x20 + -0x38);\n                iVar12 = *(*0x20 + -0x10);\n                goto code_r0x0040e223;\n            }\n            in_RAX = *(*0x20 + 8);\n            uVar8 = *(*0x20 + -0x38);\n            piVar9 = *(*0x20 + -0x20);\n            iVar12 = *(*0x20 + -0x10);\n        }\n        else if (*(uVar8 + iVar12) == '\\0') {\n            return 0x558f00;\n        }\n        uVar8 = uVar8 + 1;\n        piVar9 = piVar9 + 2;\n    } while( true );\n}\n",
        "token_count": 2187
    },
    "0040e740": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040e740(uint64_t arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    ulong uVar3;\n    ulong *arg4;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    char *pcVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    ulong *puVar9;\n    char *arg1_00;\n    uint8_t uVar10;\n    int64_t unaff_R14;\n    bool bVar11;\n    uchar in_XMM15 [16];\n    \n    while (puVar5 = *0x20,  *0x20 + -0x20 < *(unaff_R14 + 0x10) || *0x20 + -0x20 == *(unaff_R14 + 0x10)) {\ncode_r0x0040eb2f:\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x40eb45;\n        fcn.00457040();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    }\n    puVar5 = *0x20 + -0xa0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    pcVar6 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x18);\n    uVar4 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar4 = *(unaff_RBX + 9) - 1;\n    }\n    iVar7 = 1 << (uVar4 & 0x3f);\n    arg2 = arg1;\n    if (2 < *pcVar6 - 2U) {\n        *(*0x20 + -0x48) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        iVar8 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x10);\n        *(*0x20 + -0x48) = iVar8;\n        *(*0x20 + -0x38) = iVar8 + 8;\n        *(*0x20 + -0x30) = iVar8 + 0x88;\n        if ((*(unaff_RBX + 8) & 8) == 0) {\n            iVar8 = (iVar7 + arg1) * *(in_RAX + 0x52) + *(unaff_RBX + 0x10);\n            *(*0x20 + -0x28) = iVar8;\n            *(*0x20 + -0x18) = iVar8 + 8;\n            *(*0x20 + -0x10) = iVar8 + 0x88;\n        }\n        *(*0x20 + -0x78) = arg1;\n        *(*0x20 + -0x81) = uVar4;\n        *(*0x20 + -0x68) = iVar7;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        for (; arg1 = uVar4,  pcVar6 != NULL; pcVar6 = *(pcVar6 + (*(in_RAX + 0x52) - 8))) {\n            *(*0x20 + -0x50) = pcVar6;\n            puVar9 = pcVar6 + 8;\n            arg1_00 = pcVar6 + 0x88;\n            for (iVar8 = 0; iVar8 < 8; iVar8 = iVar8 + 1) {\n                uVar10 = pcVar6[iVar8];\n                if (1 < uVar10) {\n                    if (4 < uVar10) {\n                        *(*0x20 + -0x80) = iVar8;\n                        *(*0x20 + -0x82) = uVar10;\n                        *(*0x20 + -0x58) = arg1_00;\n                        *(*0x20 + -0x60) = puVar9;\n                        if ((*(unaff_RBX + 8) & 8) == 0) {\n                            pcVar2 = **(in_RAX + 0x48);\n                            *(*0x20 + -0xa8) = 0x40e96f;\n                            uVar4 = (*pcVar2)();\n                            arg1 = *(*0x20 + -0x81);\n                            bVar11 = (uVar4 >> (arg1 & 0x3f) & 1) != 0;\n                            arg2 = *(*0x20 + -0x78);\n                            iVar8 = *(*0x20 + -0x80);\n                            puVar9 = *(*0x20 + -0x60);\n                            arg1_00 = *(*0x20 + -0x58);\n                            uVar10 = *(*0x20 + -0x82);\n                            pcVar6 = *(*0x20 + -0x50);\n                        }\n                        else {\n                            bVar11 = false;\n                        }\n                        pcVar6[iVar8] = bVar11 + 2;\n                        if (bVar11 < 2) {\n                            iVar7 = bVar11 * 0x20;\n                            *(*0x20 + -0x70) = iVar7;\n                            if (*(*0x20 + iVar7 + -0x40) == 8) {\n                                uVar3 = *(*0x20 + iVar7 + -0x48);\n                                *(*0x20 + -0xa8) = 0x40e9f9;\n                                iVar8 = fcn.0040bc80(uVar3);\n                                iVar7 = *(*0x20 + -0x70);\n                                *(*0x20 + iVar7 + -0x48) = iVar8;\n                                *(*0x20 + iVar7 + -0x40) = 0;\n                                *(*0x20 + iVar7 + -0x38) = iVar8 + 8;\n                                *(*0x20 + iVar7 + -0x30) = iVar8 + 0x88;\n                                arg1 = *(*0x20 + -0x81);\n                                arg2 = *(*0x20 + -0x78);\n                                puVar9 = *(*0x20 + -0x60);\n                                arg1_00 = *(*0x20 + -0x58);\n                                uVar10 = *(*0x20 + -0x82);\n                                iVar7 = *(*0x20 + -0x70);\n                            }\n                            *(*(*0x20 + iVar7 + -0x48) + (*(*0x20 + iVar7 + -0x40) & 7)) = uVar10;\n                            arg4 = *(*0x20 + iVar7 + -0x38);\n                            uVar3 = *puVar9;\n                            arg4[1] = puVar9[1];\n                            if (*0x557ed0 == 0) {\n                                *arg4 = uVar3;\n                            }\n                            else {\n                                *(*0x20 + -0xa8) = 0x40eaa5;\n                                fcn.00459400(arg1, arg2, uVar3, arg4);\n                            }\n                            *(*0x20 + -0xa8) = 0x40eab9;\n                            fcn.0040eb60(arg1_00);\n                            iVar7 = *(*0x20 + -0x70);\n                            *(*0x20 + iVar7 + -0x40) = *(*0x20 + iVar7 + -0x40) + 1;\n                            *(*0x20 + iVar7 + -0x38) = *(*0x20 + iVar7 + -0x38) + 0x10;\n                            in_RAX = *(*0x20 + 8);\n                            *(*0x20 + iVar7 + -0x30) = *(*0x20 + iVar7 + -0x30) + *(in_RAX + 0x51);\n                            arg1 = *(*0x20 + -0x81);\n                            arg2 = *(*0x20 + -0x78);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            pcVar6 = *(*0x20 + -0x50);\n                            iVar8 = *(*0x20 + -0x80);\n                            iVar7 = *(*0x20 + -0x68);\n                            puVar9 = *(*0x20 + -0x60);\n                            arg1_00 = *(*0x20 + -0x58);\n                            goto code_r0x0040e905;\n                        }\n                        arg1 = 2;\n                        *(*0x20 + -0xa8) = 0x40eb1d;\n                        fcn.00459720(2);\n                    }\n                    unaff_RBX = 0xd;\n                    *(*0x20 + -0xa8) = 0x40eb2e;\n                    in_RAX = fcn.00430d40();\n                    goto code_r0x0040eb2f;\n                }\n                pcVar6[iVar8] = '\\x04';\ncode_r0x0040e905:\n                puVar9 = puVar9 + 2;\n                arg1_00 = arg1_00 + *(in_RAX + 0x51);\n            }\n            uVar4 = arg1;\n        }\n        if (((*(unaff_RBX + 8) & 2) == 0) && (*(*(in_RAX + 0x40) + 8) != 0)) {\n            uVar1 = *(in_RAX + 0x52);\n            iVar7 = *(unaff_RBX + 0x18);\n            *(*0x20 + -0xa8) = 0x40e8e5;\n            fcn.0040ee60(uVar1 * arg2 + iVar7 + 8);\n            arg2 = *(*0x20 + -0x78);\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar7 = *(*0x20 + -0x68);\n        }\n    }\n    if (*(unaff_RBX + 0x20) == arg2) {\n        *(*0x20 + -0xa8) = 0x40e86e;\n        fcn.0040d300(iVar7);\n    }\n    return;\n}\n",
        "token_count": 2410
    },
    "0040f5e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040f5e0(uint64_t arg1)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong *puVar4;\n    code *pcVar5;\n    uint64_t in_RAX;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uint8_t *puVar11;\n    uint64_t unaff_RBX;\n    int64_t iVar12;\n    uint32_t uVar13;\n    uint8_t *puVar14;\n    int64_t iVar15;\n    int64_t unaff_R14;\n    \n    if (((in_RAX | unaff_RBX | arg1) & 7) == 0) {\n        if (*0x557ed4 == '\\0') {\n            return;\n        }\n        uVar6 = in_RAX + 0x800000000000 >> 0x16;\n        uVar10 = in_RAX + 0x800000000000 >> 0x2a;\n        if (uVar10 < 0x40) {\n            iVar12 = *(uVar10 * 8 + 0x52a0d8);\n            if (iVar12 == 0) {\n                iVar12 = 0;\n            }\n            else {\n                iVar12 = *(iVar12 + (uVar6 & 0xfffff) * 8);\n                if (iVar12 == 0) {\n                    iVar12 = 0;\n                }\n                else {\n                    iVar12 = *(iVar12 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n                }\n            }\n        }\n        else {\n            iVar12 = 0;\n        }\n        if (iVar12 == 0) {\n            if (*0x503640 == NULL) {\n                iVar15 = 0;\n                iVar12 = 0;\n            }\n            else {\n                iVar12 = **0x503640;\n                iVar15 = (*0x503640)[1];\n            }\n            iVar7 = 0;\n            while( true ) {\n                if (iVar15 <= iVar7) {\n                    if (*0x503640 == NULL) {\n                        iVar15 = 0;\n                        iVar12 = 0;\n                    }\n                    else {\n                        iVar12 = **0x503640;\n                        iVar15 = (*0x503640)[1];\n                    }\n                    iVar7 = 0;\n                    while( true ) {\n                        if (iVar15 <= iVar7) {\n                            return;\n                        }\n                        iVar2 = *(iVar12 + iVar7 * 8);\n                        if ((*(iVar2 + 0xe0) <= in_RAX) &&\n                           (puVar1 = iVar2 + 0xe8,  in_RAX <= *puVar1 && *puVar1 != in_RAX)) break;\n                        iVar7 = iVar7 + 1;\n                    }\n                    fcn.0040fc60(arg1);\n                    return;\n                }\n                iVar2 = *(iVar12 + iVar7 * 8);\n                if ((*(iVar2 + 0xd0) <= in_RAX) && (puVar1 = iVar2 + 0xd8,  in_RAX <= *puVar1 && *puVar1 != in_RAX))\n                break;\n                iVar7 = iVar7 + 1;\n            }\n            fcn.0040fc60(arg1);\n            return;\n        }\n        if (((*(iVar12 + 99) != '\\x01') || (in_RAX <= *(iVar12 + 0x18) && *(iVar12 + 0x18) != in_RAX)) ||\n           (*(iVar12 + 0x70) < in_RAX || *(iVar12 + 0x70) == in_RAX)) {\n            return;\n        }\n        iVar12 = *(*(unaff_R14 + 0x30) + 0xa0);\n        if (uVar10 < 0x40) {\n            iVar15 = *(*(uVar10 * 8 + 0x52a0d8) + (uVar6 & 0xfffff) * 8);\n            if (iVar15 == 0) {\n                uVar6 = 0;\n                uVar10 = 0;\n                puVar11 = NULL;\n                puVar14 = NULL;\n            }\n            else {\n                puVar14 = iVar15 + (in_RAX >> 5 & 0x1ffff);\n                uVar10 = in_RAX >> 3 & 3;\n                puVar11 = iVar15 + 0x1ffff;\n            }\n            if (unaff_RBX == 0) {\n                for (uVar9 = 0; uVar9 < arg1; uVar9 = uVar9 + 8) {\n                    uVar13 = uVar10;\n                    if ((*puVar14 >> (uVar13 & 0x1f) & 1) != 0) {\n                        puVar4 = *(iVar12 + 0x16c0);\n                        *puVar4 = *(uVar9 + in_RAX);\n                        puVar4[1] = 0;\n                        iVar15 = *(iVar12 + 0x16c0) + 0x10;\n                        *(iVar12 + 0x16c0) = iVar15;\n                        if (*(iVar12 + 0x16c8) == iVar15) {\n                            fcn.00429ba0();\n                            uVar6 = uVar6 & 0xffffffff;\n                        }\n                    }\n                    if (uVar13 < 3) {\n                        uVar10 = uVar13 + 1;\n                    }\n                    else if (puVar11 == puVar14) {\n                        uVar13 = uVar6 & 0xffffffff;\n                        puVar14 = fcn.0040f3c0(uVar6 & 0xffffffff);\n                        uVar6 = uVar13;\n                    }\n                    else {\n                        puVar14 = puVar14 + 1;\n                        uVar10 = 0;\n                    }\n                }\n            }\n            else {\n                uVar9 = unaff_RBX;\n                for (uVar8 = 0; uVar8 < arg1; uVar8 = uVar8 + 8) {\n                    uVar13 = uVar10;\n                    if ((*puVar14 >> (uVar13 & 0x1f) & 1) != 0) {\n                        puVar4 = *(iVar12 + 0x16c0);\n                        uVar3 = *(uVar8 + unaff_RBX);\n                        *puVar4 = *(uVar8 + in_RAX);\n                        puVar4[1] = uVar3;\n                        iVar15 = *(iVar12 + 0x16c0) + 0x10;\n                        *(iVar12 + 0x16c0) = iVar15;\n                        if (*(iVar12 + 0x16c8) == iVar15) {\n                            unaff_RBX = uVar9;\n                            fcn.00429ba0();\n                            uVar6 = uVar6 & 0xffffffff;\n                            uVar9 = unaff_RBX;\n                        }\n                    }\n                    if (uVar13 < 3) {\n                        uVar10 = uVar13 + 1;\n                    }\n                    else if (puVar11 == puVar14) {\n                        uVar13 = uVar6 & 0xffffffff;\n                        unaff_RBX = uVar9;\n                        puVar14 = fcn.0040f3c0(uVar6 & 0xffffffff);\n                        uVar6 = uVar13;\n                        uVar9 = unaff_RBX;\n                    }\n                    else {\n                        puVar14 = puVar14 + 1;\n                        uVar10 = 0;\n                    }\n                }\n            }\n            return;\n        }\n        fcn.00459740(0x40);\n    }\n    fcn.00430d40();\n    pcVar5 = swi(3);\n    (*pcVar5)();\n    return;\n}\n",
        "token_count": 1739
    },
    "0040fa60": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040fa60(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    code *pcVar4;\n    uint64_t in_RAX;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    uint64_t unaff_RBX;\n    uint64_t uVar7;\n    uint8_t *puVar8;\n    uint32_t uVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    uint8_t *puVar12;\n    int64_t unaff_R14;\n    uint64_t uVar13;\n    \n    if (((unaff_RBX | in_RAX | arg1) & 7) == 0) {\n        if (*0x557ed4 == '\\0') {\n            return;\n        }\n        iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n        uVar7 = in_RAX + 0x800000000000 >> 0x2a;\n        if (uVar7 < 0x40) {\n            uVar10 = in_RAX + 0x800000000000 >> 0x16;\n            iVar11 = *(*(uVar7 * 8 + 0x52a0d8) + (uVar10 & 0xfffff) * 8);\n            if (iVar11 == 0) {\n                uVar10 = 0;\n                uVar7 = 0;\n                puVar8 = NULL;\n                puVar12 = NULL;\n            }\n            else {\n                puVar12 = iVar11 + (in_RAX >> 5 & 0x1ffff);\n                uVar7 = in_RAX >> 3 & 3;\n                puVar8 = iVar11 + 0x1ffff;\n            }\n            uVar13 = unaff_RBX;\n            for (uVar5 = 0; uVar9 = uVar7,  uVar5 < arg1; uVar5 = uVar5 + 8) {\n                if ((*puVar12 >> (uVar9 & 0x1f) & 1) != 0) {\n                    puVar2 = *(iVar1 + 0x16c0);\n                    uVar3 = *(uVar5 + unaff_RBX);\n                    *puVar2 = 0;\n                    puVar2[1] = uVar3;\n                    iVar11 = *(iVar1 + 0x16c0) + 0x10;\n                    *(iVar1 + 0x16c0) = iVar11;\n                    if (*(iVar1 + 0x16c8) == iVar11) {\n                        unaff_RBX = uVar13;\n                        fcn.00429ba0();\n                        uVar10 = uVar10 & 0xffffffff;\n                        uVar13 = unaff_RBX;\n                    }\n                }\n                if (uVar9 < 3) {\n                    uVar9 = uVar9 + 1;\n                }\n                else if (puVar8 == puVar12) {\n                    uVar6 = uVar10 & 0xffffffff;\n                    unaff_RBX = uVar13;\n                    puVar12 = fcn.0040f3c0(uVar10 & 0xffffffff);\n                    uVar10 = uVar6;\n                    uVar13 = unaff_RBX;\n                }\n                else {\n                    puVar12 = puVar12 + 1;\n                    uVar9 = 0;\n                }\n                uVar7 = uVar9;\n            }\n            return;\n        }\n        fcn.00459740(0x40);\n    }\n    fcn.00430d40();\n    pcVar4 = swi(3);\n    (*pcVar4)();\n    return;\n}\n",
        "token_count": 816
    },
    "004101a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004106a8)\n\nvoid fcn.004101a0(uint64_t arg1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    uint8_t *in_RAX;\n    uint8_t *puVar3;\n    ulong uVar4;\n    int8_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint32_t uVar9;\n    uint8_t *puVar10;\n    uint64_t uVar11;\n    uint64_t *unaff_RDI;\n    int64_t iVar12;\n    uint64_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint32_t uVar17;\n    uint8_t uVar18;\n    uint8_t uVar19;\n    int64_t iVar20;\n    uint64_t uVar21;\n    uint8_t *puVar22;\n    uint64_t uVar23;\n    int64_t unaff_R14;\n    uint8_t *puVar24;\n    uint64_t uVar25;\n    bool bVar26;\n    uint32_t uVar16;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xb0 && *0x20 + -0xb0 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x130;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX == 8) {\n                return;\n            }\n            uVar6 = in_RAX + 0x800000000000 >> 0x2a;\n            if (uVar6 < 0x40) {\n                puVar22 = in_RAX + 0x800000000000 >> 0x16;\n                iVar20 = *(*(uVar6 * 8 + 0x52a0d8) + (puVar22 & 0xfffff) * 8);\n                if (iVar20 == 0) {\n                    puVar3 = NULL;\n                    uVar13 = 0;\n                    puVar24 = NULL;\n                    puVar10 = NULL;\n                }\n                else {\n                    puVar3 = iVar20 + (in_RAX >> 5 & 0x1ffff);\n                    uVar13 = in_RAX >> 3 & 3;\n                    puVar24 = iVar20 + 0x1ffff;\n                    puVar10 = puVar22;\n                }\n                puVar1 = unaff_RDI[4];\n                uVar9 = uVar13;\n                if (unaff_RBX == 0x10) {\n                    iVar5 = uVar13;\n                    if (*unaff_RDI == 8) {\n                        *puVar3 = *puVar3 | 0x33 << iVar5 & -(uVar9 < 0x20);\n                        return;\n                    }\n                    *puVar3 = -(uVar9 < 0x20) &\n                              (*puVar1 & 3 |\n                              (-(unaff_RDI[1] >> 3 < 0x20) & 0x10 << (unaff_RDI[1] >> 3 & 0x1f)) - 1 & 0xf0) << iVar5 |\n                              ~(0x33 << iVar5 & -(uVar9 < 0x20)) & *puVar3;\n                    return;\n                }\n                if (unaff_RBX == 0x18) {\n                    uVar14 = *puVar1;\n                    if (*unaff_RDI == 8) {\n                        uVar14 = 7;\n                    }\n                    uVar14 = (uVar14 & 7) << 4 | uVar14 & 7;\n                    uVar16 = (uVar14 & 0x40) >> 1;\n                    uVar15 = uVar16 | uVar14;\n                    uVar17 = uVar15 | 0x10;\n                    uVar18 = uVar17;\n                    if (uVar9 < 2) {\n                        if (uVar9 == 0) {\n                            *puVar3 = *puVar3 & 0x88 | uVar15 | 0x10;\n                        }\n                        else {\n                            *puVar3 = uVar17 << 1 | *puVar3 & 0x11;\n                        }\n                    }\n                    else {\n                        *(*0x20 + -0xeb) = uVar18;\n                        if (uVar9 == 2) {\n                            *puVar3 = (uVar16 | uVar14 & 0x33 | 0x10) << 2 | *puVar3 & 0x33;\n                            if (puVar3 == puVar24) {\n                                *(*0x20 + -0x138) = 0x4104d7;\n                                puVar3 = fcn.0040f3c0(puVar10 & 0xffffffff);\n                                uVar18 = *(*0x20 + -0xeb);\n                            }\n                            else {\n                                puVar3 = puVar3 + 1;\n                            }\n                            *puVar3 = uVar18 >> 2 & 0x11 | *puVar3 & 0xee;\n                        }\n                        else if (uVar9 == 3) {\n                            *puVar3 = *puVar3 & 0x77 | (uVar14 & 0x11 | 0x10) << 3;\n                            if (puVar3 == puVar24) {\n                                *(*0x20 + -0x138) = 0x410532;\n                                puVar3 = fcn.0040f3c0(puVar10 & 0xffffffff);\n                                uVar18 = *(*0x20 + -0xeb);\n                            }\n                            else {\n                                puVar3 = puVar3 + 1;\n                            }\n                            *puVar3 = uVar18 >> 1 & 0x33 | *puVar3 & 0xcc;\n                        }\n                    }\n                    return;\n                }\n                *(*0x20 + -0x48) = puVar1;\n                *(*0x20 + -0x40) = puVar3;\n                uVar23 = puVar10 & 0xffffffff;\n                uVar7 = in_RAX + unaff_RBX + 0x7fffffffffff >> 0x16;\n                puVar3 = in_RAX;\n                if (uVar23 == uVar7) {\n                    puVar3 = *(*0x20 + -0x40);\n                }\n                *(*0x20 + -0x58) = in_RAX;\n                *(*0x20 + -0x60) = puVar22 & 0xfffff;\n                *(*0x20 + -0x68) = uVar7;\n                *(*0x20 + -0x70) = uVar6;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x78) = puVar22;\n                if ((*(unaff_RDI + 0x17) & 0x40) == 0) {\n                    *(*0x20 + -0x38) = puVar3;\n                    uVar6 = *unaff_RDI;\n                    if (arg1 <= uVar6) {\n                        uVar4 = 0;\n                        *(*0x20 + -0x28) = 0;\n                        *(*0x20 + -0xd8) = 0;\n                        *(*0x20 + -0xc0) = 0;\n                        puVar10 = *(*0x20 + -0x48);\n                        goto code_r0x0041086a;\n                    }\n                    *(*0x20 + -0x80) = uVar6;\n                    uVar25 = unaff_RDI[1] >> 3;\n                    if (uVar25 < 0x3a) {\n                        *(*0x20 + 0x18) = arg1;\n                        puVar22 = *(*0x20 + -0x48);\n                        *(*0x20 + -0xa8) = puVar3;\n                        *(*0x20 + -200) = 0;\n                        *(*0x20 + -0xb0) = 0;\n                        puVar3 = *(*0x20 + -0xa8);\n                        while (uVar11 = *(*0x20 + -200),  uVar11 < uVar25) {\n                            uVar18 = *puVar22;\n                            puVar22 = puVar22 + 1;\n                            uVar7 = *(*0x20 + -0x68);\n                            *(*0x20 + -200) = uVar11 + 8;\n                            *(*0x20 + -0xb0) = *(*0x20 + -0xb0) | uVar18 << (uVar11 & 0x3f) & -(uVar11 < 0x40);\n                            arg1 = *(*0x20 + 0x18);\n                        }\n                        uVar6 = uVar6 >> 3;\n                        if (uVar6 * 2 < 0x3a) {\n                            uVar11 = *(*0x20 + -0xb0);\n                            for (uVar7 = uVar6; uVar7 < 0x41; uVar7 = uVar7 * 2) {\n                                *(*0x20 + -0xd8) = uVar11;\n                                uVar11 = uVar11 << (uVar7 & 0x3f) & -(uVar7 < 0x40) | *(*0x20 + -0xd8);\n                                arg1 = *(*0x20 + 0x18);\n                            }\n                            if (uVar6 == '\\0') {\n                                *(*0x20 + -0x138) = 0x410df9;\n                                fcn.0042e820();\n                                goto code_r0x00410df9;\n                            }\n                            *(*0x20 + -0xea) = uVar6 & 0xff;\n                            uVar6 = (0x39 / *(*0x20 + -0xea)) * uVar6;\n                            uVar11 = (1 << (uVar6 & 0x3f) & -(uVar6 < 0x40)) - 1 & uVar11;\n                            puVar3 = *(*0x20 + -0x38);\n                            uVar7 = *(*0x20 + -0x68);\n                        }\n                        else {\n                            uVar11 = *(*0x20 + -0xb0);\n                        }\n                        *(*0x20 + -0xd0) = uVar6;\n                        uVar25 = 0;\n                        *(*0x20 + -0xd8) = uVar11;\n                        puVar10 = NULL;\n                    }\n                    else {\n                        uVar25 = uVar25 + 7 >> 3;\n                        uVar6 = (uVar6 >> 3) + (uVar25 - 1) * -8;\n                        uVar25 = (uVar25 + *(*0x20 + -0x48)) - 1;\n                        *(*0x20 + -0xd0) = 0;\n                        *(*0x20 + -0xd8) = 0;\n                        puVar10 = *(*0x20 + -0x48);\n                    }\n                    break;\n                }\n                *(*0x20 + -0x88) = uVar23;\n                uVar6 = unaff_RDI[1];\n                uVar13 = *unaff_RDI;\n                *(*0x20 + -0x138) = 0x410410;\n                fcn.00410e40(puVar10 & 0xffffffff, uVar6, uVar13, arg1);\n                bVar26 = *(*0x20 + -0x88) == *(*0x20 + -0x68);\n                goto code_r0x00410601;\n            }\ncode_r0x00410df9:\n            arg1 = 0x40;\n            *(*0x20 + -0x138) = 0x410e06;\n            in_RAX = fcn.00459740(0x40);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        *(puVar8 + -8) = 0x410e25;\n        fcn.00457040();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = *(puVar8 + 0x20);\n        *0x20 = puVar8;\n    } while( true );\ncode_r0x00410c72:\n    uVar4 = *(*0x20 + -0xd0);\n    *(*0x20 + -0x28) = uVar25;\n    *(*0x20 + -0xc0) = uVar6;\n    puVar22 = *(*0x20 + -0x78);\n    uVar6 = *(*0x20 + -0x80);\ncode_r0x0041086a:\n    if (puVar10 == NULL) {\n        uVar25 = *(*0x20 + -0xd8);\n        *(*0x20 + -0xd0) = uVar4;\n        puVar22 = *(*0x20 + -0x78);\n    }\n    else {\n        uVar25 = *puVar10;\n        puVar10 = puVar10 + 1;\n        *(*0x20 + -0xa0) = puVar3;\n        *(*0x20 + -0xd0) = 8;\n        puVar3 = *(*0x20 + -0xa0);\n    }\n    if (arg1 == uVar6) {\n        uVar6 = unaff_RDI[1];\ncode_r0x004108ef:\n        uVar6 = uVar6 >> 3;\n        if (uVar6 != 0) {\n            if (uVar13 == 0) {\n                uVar18 = uVar25 & 0xf | 0xf0;\n                if (uVar6 < 5) {\n                    puVar22 = puVar3;\n                    uVar25 = 4;\n                    goto code_r0x00410b60;\n                }\n                *puVar3 = uVar18;\n                iVar2 = 4;\n                iVar20 = *(*0x20 + -0xd0) + -4;\n                uVar13 = 4;\n                goto code_r0x004109ba;\n            }\n            if (uVar13 == 2) goto code_r0x0041094a;\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x138) = 0x410c0f;\n            fcn.00430d40();\n        }\n        *(*0x20 + -0x138) = 0x410c17;\n        uVar4 = fcn.00450e40();\n        *(*0x20 + -0x18) = uVar4;\n        *(*0x20 + -0x98) = unaff_RBX;\n        *(*0x20 + -0x138) = 0x410c2c;\n        fcn.004324c0();\n        *(*0x20 + -0x138) = 0x410c3d;\n        fcn.00432dc0();\n        *(*0x20 + -0x138) = 0x410c52;\n        fcn.00432dc0();\n        *(*0x20 + -0x138) = 0x410c57;\n        fcn.00432720();\n        *(*0x20 + -0x138) = 0x410c5c;\n        fcn.00432540();\n        unaff_RBX = 0x2d;\n        *(*0x20 + -0x138) = 0x410c6d;\n        fcn.00430d40();\n    }\n    else if (uVar6 != 0) {\n        uVar6 = uVar6 * (arg1 / uVar6 - 1) + unaff_RDI[1];\n        puVar3 = *(*0x20 + -0x38);\n        arg1 = uVar7;\n        goto code_r0x004108ef;\n    }\n    *(*0x20 + -0x138) = 0x410c72;\n    puVar3 = fcn.0042e820();\n    puVar10 = puVar22;\n    goto code_r0x00410c72;\ncode_r0x0041094a:\n    uVar18 = (uVar25 & 3) << 2;\n    uVar19 = uVar18 | 0x40;\n    if (1 < uVar6) {\n        uVar19 = uVar18 | 0xc0;\n    }\n    *puVar3 = uVar19 | *puVar3 & 0x33;\n    puVar22 = puVar3 + 1;\n    if (uVar6 < 3) {\n        uVar18 = 0;\n        uVar25 = 6;\n    }\n    else {\n        iVar2 = 2;\n        iVar20 = *(*0x20 + -0xd0) + -2;\n        uVar13 = 2;\ncode_r0x004109ba:\n        puVar22 = puVar3 + 1;\n        uVar25 = uVar25 >> iVar2;\n        iVar12 = *(*0x20 + -0xd8);\n        uVar11 = iVar20 - 4;\n        while( true ) {\n            *(*0x20 + -0xb0) = uVar25;\n            uVar18 = uVar25 & 0xf | 0xf0;\n            uVar25 = uVar13 + 4;\n            if (uVar6 <= uVar13 + 4) break;\n            *puVar22 = uVar18;\n            uVar25 = *(*0x20 + -0xb0) >> 4;\n            uVar18 = uVar11;\n            if (puVar10 == *(*0x20 + -0x28)) {\n                if (puVar10 == NULL) {\n                    if (uVar11 < 8) {\n                        uVar25 = uVar25 | iVar12 << (uVar18 & 0x3f);\n                        uVar11 = uVar11 + *(*0x20 + -0xc0);\n                        iVar12 = *(*0x20 + -0xd8);\n                    }\n                    uVar21 = uVar11 - 8;\n                }\n                else {\n                    uVar25 = uVar25 | -(uVar11 < 0x40) & *puVar10 << (uVar18 & 0x3f);\n                    uVar21 = uVar11 + *(*0x20 + -0xc0);\n                    if (uVar21 < 8) {\n                        uVar25 = uVar25 | **(*0x20 + -0x48) << (uVar21 & 0x3f);\n                        puVar10 = *(*0x20 + -0x48) + 1;\n                    }\n                    else {\n                        uVar21 = (uVar11 + *(*0x20 + -0xc0)) - 8;\n                        puVar10 = *(*0x20 + -0x48);\n                    }\n                    uVar7 = *(*0x20 + -0x68);\n                }\n            }\n            else if (uVar11 < 8) {\n                uVar25 = uVar25 | *puVar10 << (uVar18 & 0x3f);\n                puVar10 = puVar10 + 1;\n                uVar21 = uVar11;\n            }\n            else {\n                uVar21 = uVar11 - 8;\n            }\n            *(*0x20 + -0xb0) = uVar25;\n            uVar18 = uVar25 & 0xf | 0xf0;\n            uVar13 = uVar13 + 8;\n            if (uVar6 <= uVar13) {\n                puVar22 = puVar22 + 1;\n                uVar25 = uVar13;\n                break;\n            }\n            puVar22[1] = uVar18;\n            uVar25 = *(*0x20 + -0xb0) >> 4;\n            puVar22 = puVar22 + 2;\n            uVar11 = uVar21;\n        }\n    }\ncode_r0x00410b60:\n    if (uVar6 < uVar25) {\n        uVar6 = -((uVar25 - uVar6) + -4);\n        uVar19 = (1 << (uVar6 & 0x3f) & -(uVar6 < 0x40)) - 1;\n        uVar18 = uVar18 & (uVar19 * '\\x10' | uVar19);\n    }\n    uVar6 = unaff_RBX >> 3;\n    if (uVar25 <= uVar6) {\n        *puVar22 = uVar18;\n        while( true ) {\n            puVar22 = puVar22 + 1;\n            uVar25 = uVar25 + 4;\n            if (uVar6 < uVar25) break;\n            *puVar22 = 0;\n        }\n        uVar18 = 0;\n    }\n    if (uVar25 == uVar6 + 2) {\n        *puVar22 = uVar18 | *puVar22 & 0xcc;\n        bVar26 = uVar23 == uVar7;\n    }\n    else {\n        bVar26 = uVar23 == uVar7;\n    }\ncode_r0x00410601:\n    if (!bVar26) {\n        iVar20 = *(*(*(*0x20 + -0x70) * 8 + 0x52a0d8) + *(*0x20 + -0x60) * 8);\n        if (iVar20 == 0) {\n            puVar3 = *(*0x20 + -0x58);\n            puVar22 = NULL;\n            uVar13 = 0;\n            puVar10 = NULL;\n            uVar6 = 0;\n        }\n        else {\n            puVar3 = *(*0x20 + -0x58);\n            puVar22 = iVar20 + (puVar3 >> 5 & 0x1ffff);\n            uVar13 = puVar3 >> 3 & 3;\n            puVar10 = iVar20 + 0x1ffff;\n            uVar6 = *(*0x20 + -0x78);\n        }\n        uVar7 = *(*0x20 + 0x10) >> 3;\n        puVar24 = puVar3;\n        if (uVar13 == 2) {\n            *puVar22 = *puVar3 | *puVar22 & 0x33;\n            if (puVar10 == puVar22) {\n                *(*0x20 + -0x10) = puVar3;\n                *(*0x20 + -0x90) = uVar7;\n                *(*0x20 + -0x138) = 0x4106d6;\n                puVar22 = fcn.0040f3c0(uVar6);\n                uVar7 = *(*0x20 + -0x90);\n                puVar24 = *(*0x20 + -0x58);\n                uVar13 = 3;\n                puVar3 = *(*0x20 + -0x10);\n            }\n            else {\n                puVar22 = puVar22 + 1;\n                uVar13 = 0;\n            }\n            uVar7 = uVar7 - 2;\n            puVar3 = puVar3 + 1;\n        }\n        while( true ) {\n            *(*0x20 + -0x50) = puVar3;\n            uVar9 = uVar13;\n            if (uVar7 < 4) break;\n            *(*0x20 + -0x30) = puVar22;\n            *(*0x20 + -0xb8) = uVar7;\n            *(*0x20 + -0x138) = 0x41073b;\n            uVar4 = fcn.0040f540(uVar6);\n            *(*0x20 + -0x18) = uVar4;\n            *(*0x20 + -0xe4) = uVar9;\n            *(*0x20 + -0xe8) = uVar6;\n            *(*0x20 + -0x20) = puVar10;\n            *(*0x20 + -0xe0) = uVar7 & 0xfffffffffffffffc;\n            *(*0x20 + -0x68) = uVar7 >> 2;\n            *(*0x20 + -0x138) = 0x41077c;\n            fcn.0045a040(uVar7 >> 2);\n            uVar7 = *(*0x20 + -0xb8) - *(*0x20 + -0xe0);\n            puVar3 = *(*0x20 + -0x50) + *(*0x20 + -0x68);\n            puVar24 = *(*0x20 + -0x58);\n            puVar22 = *(*0x20 + -0x18);\n            uVar13 = *(*0x20 + -0xe4);\n            puVar10 = *(*0x20 + -0x20);\n            uVar6 = *(*0x20 + -0xe8);\n        }\n        if (uVar7 == 2) {\n            *puVar22 = *puVar3 | *puVar22 & 0xcc;\n            if (uVar9 < 3) {\n                uVar9 = uVar9 + 1;\n            }\n            else if (puVar10 == puVar22) {\n                *(*0x20 + -0x138) = 0x410810;\n                puVar22 = fcn.0040f3c0(uVar6);\n                puVar24 = *(*0x20 + -0x58);\n            }\n            else {\n                puVar22 = puVar22 + 1;\n                uVar9 = 0;\n            }\n            if ((2 < uVar9) && (puVar22 == puVar10)) {\n                *(*0x20 + -0x138) = 0x41083f;\n                fcn.0040f3c0(uVar6);\n                puVar24 = *(*0x20 + -0x58);\n            }\n        }\n        *(*0x20 + -0x138) = 0x410865;\n        fcn.00459d80(puVar24);\n    }\n    return;\n}\n",
        "token_count": 5873
    },
    "004156e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00415725)\n// WARNING: Removing unreachable block (ram,0x0041574c)\n\nvoid fcn.004156e0(ulong param_1, ulong param_2, ulong param_3, int64_t param_4, uint64_t param_5)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    ulong uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint64_t uVar11;\n    int64_t iVar12;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    uint uVar17;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x120 && *0x20 + -0x120 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x1a0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *0x557cac = 2;\n            *0x557ed4 = 1;\n            *(*0x20 + -0x100) = param_1;\n            *0x557ed0 = *0x557ed0 & 0xffffff00 | 1;\n            *0x558888 = *0x558530;\n            *(*0x20 + -0x1a8) = 0x41576d;\n            fcn.0045afe0();\n            uVar14 = 0;\n            uVar15 = 0;\n            uVar16 = 0;\n            uVar17 = 0;\n            iVar7 = **(in_GS_OFFSET + 0x28);\n            iVar9 = *(iVar7 + 0x30);\n            uVar5 = *(*0x20 + -0x1a0);\n            *(*0x20 + -0x170) = uVar5;\n            piVar1 = iVar9 + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            iVar9 = *(iVar7 + 0x30);\n            *(*0x20 + -0x30) = iVar9;\n            *(iVar9 + 0xd0) = 5;\n            *(*0x20 + -0x10) = iVar9 + 200;\n            if (*0x557ed0 == 0) {\n                *(iVar9 + 200) = 0x4813a2;\n            }\n            else {\n                *(*0x20 + -0x1a8) = 0x4157e5;\n                fcn.004593a0(uVar5, 0x4813a2, param_4, param_5);\n            }\n            *(*0x20 + -0x20) = iVar7;\n            *(*(iVar7 + 0x30) + 0xf9) = 2;\n            *(*0x20 + -0x28) = *(*(iVar7 + 0x30) + 0x90);\n            *(*0x20 + -0x1a8) = 0x41581a;\n            fcn.00435000(4);\n            *(*(*0x20 + -0x28) + 0xb0) = 6;\n            *(*0x20 + -0xf8) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n            *(*0x20 + -0xf8) = 0x416400;\n            *(*0x20 + -0xf0) = *(*0x20 + -0x170);\n            *(*0x20 + -0x1a0) = *0x20 + -0xf8;\n            *(*0x20 + -0x1a8) = 0x41585f;\n            fcn.00456f00();\n            *(*0x20 + -0x1a0) = 0x48a4c0;\n            *(*0x20 + -0x1a8) = 0x415885;\n            fcn.00456f00();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            iVar7 = *(*(*0x20 + -0x20) + 0x30);\n            *(iVar7 + 0xf9) = 0;\n            *(*0x20 + -0x1a8) = 0x4158c5;\n            fcn.00435000(2);\n            if (*0x509e70 != '\\0') {\n                *(*0x20 + -0x1a8) = 0x4158e7;\n                fcn.0044b680(0);\n            }\n            iVar9 = *(*0x20 + -0x30);\n            *(iVar9 + 0xd0) = 0;\n            if (*0x557ed0 == 0) {\n                *(iVar9 + 200) = 0;\n            }\n            else {\n                iVar7 = 0;\n                *(*0x20 + -0x1a8) = 0x41591f;\n                fcn.004593a0(iVar9, 0, param_4, param_5);\n            }\n            if (*0x557cac == 0) {\n                *0x558528 = *0x558520;\n                *0x55b220 = *0x559b18;\n                *(*0x20 + -0x1a8) = 0x41595d;\n                fcn.0041b920(*(*0x20 + -0x100));\n                *(*0x20 + -0x1a8) = 0x415965;\n                fcn.0045afe0();\n                *(*0x20 + -0x178) = *(*0x20 + -0x1a0);\n                *(*0x20 + -0x1a8) = 0x415987;\n                fcn.0045b040(*(*0x20 + -0x1a0), iVar7);\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                iVar7 = *(*0x20 + -0x1a0);\n                iVar4 = *(*0x20 + -0x198);\n                iVar9 = *(*0x20 + -0x178);\n                *0x558870 = *0x558870 + (iVar9 - *0x558878);\n                uVar11 = iVar9 - *0x558878;\n                *0x558868 = iVar9;\n                if (uVar11 < 0) {\n                    LOCK();\n                    *0x55d698 = *0x55d698 + 1;\ncode_r0x00415aa1:\n                    *0x559b88 = iVar7 * 1000000000 + iVar4;\n                    *0x55b218 = iVar9;\n                    *((*0x55ab98 & 0xff) * 8 + 0x559b98) = *0x558870;\n                    *((*0x55ab98 & 0xff) * 8 + 0x55a398) = iVar7 * 1000000000 + iVar4;\n                    *0x559b90 = *0x559b90 + *0x558870;\n                    iVar7 = (*0x558858 - *0x558850) * *0x558844;\n                    *(*0x20 + -0x168) = iVar7;\n                    iVar12 = (*0x558868 - *0x558860) * *0x558844;\n                    *(*0x20 + -0x148) = iVar12;\n                    *0x558808 = *0x558560 + *0x558558 + *0x558568 + iVar7 + iVar12 + *0x558808;\n                    *0x55aba0 = *0x558808 / ((iVar9 - *0x5048e8) * *0x557cb0 + *0x5048f0);\n                    *0x504094 = 0;\n                    if (*0x558800 != '\\0') {\n                        *0x55ab9c = *0x55ab9c + 1;\n                    }\n                    *(*0x20 + -0x1a8) = 0x415bb3;\n                    fcn.00409300();\n                    *0x55ab98 = *0x55ab98 + 1;\n                    *(*0x20 + -0x1a8) = 0x415bc5;\n                    fcn.00438ea0();\n                    *(*0x20 + -0x1a8) = 0x415bd3;\n                    fcn.00409520();\n                    *(*0x20 + -0x1a8) = 0x415bd8;\n                    fcn.004278a0();\n                    *(*0x20 + -0x160) = *0x52a068;\n                    *(*0x20 + -0x15c) = 0;\n                    LOCK();\n                    *0x52a070 = *0x52a070 + 1;\n                    *(*0x20 + -0x15c) = 1;\n                    *(*0x20 + -0x1a0) = 0x48a4c8;\n                    *(*0x20 + -0x1a8) = 0x415c0d;\n                    fcn.00456f00();\n                    *(*0x20 + -0x1a8) = 0x415c26;\n                    fcn.00427920();\n                    *(*0x20 + -0x1a8) = 0x415c2b;\n                    fcn.004203c0();\n                    *(*0x20 + -0x1a0) = 0x48a490;\n                    *(*0x20 + -0x1a8) = 0x415c3b;\n                    fcn.00456f00();\n                    *(*0x20 + -0x1a0) = 0x48a4d8;\n                    *(*0x20 + -0x1a8) = 0x415c5f;\n                    fcn.00456f00();\n                    uVar14 = 0;\n                    uVar15 = 0;\n                    uVar16 = 0;\n                    uVar17 = 0;\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    if (*(*0x20 + -0x15c) != '\\0') {\n                        *(*0x20 + -0x15c) = 0;\n                        LOCK();\n                        iVar4 = *0x52a070 + -1;\n                        bVar13 = *0x52a070 == 1;\n                        *0x52a070 = iVar4;\n                        if ((bVar13 && *0x52a06c != 0) && (0 < *0x5580b0)) {\n                            *(*0x20 + -0x108) = *0x558530;\n                            *(*0x20 + -0x110) = *0x52a0b0;\n                            *(*0x20 + -0x118) = *0x52a0a0;\n                            *(*0x20 + -0x100) = *0x52a0b8;\n                            *(*0x20 + -0x1a8) = 0x415d05;\n                            uVar6 = *0x52a0a0;\n                            fcn.004324c0();\n                            *(*0x20 + -0x1a8) = 0x415d16;\n                            fcn.00432dc0();\n                            *(*0x20 + -0x1a8) = 0x415d27;\n                            fcn.00432ac0();\n                            *(*0x20 + -0x1a8) = 0x415d38;\n                            fcn.00432dc0();\n                            uVar5 = *(*0x20 + -0x110);\n                            *(*0x20 + -0x1a8) = 0x415d54;\n                            fcn.00432ac0();\n                            *(*0x20 + -0x1a8) = 0x415d65;\n                            fcn.00432dc0();\n                            *(*0x20 + -0x1a8) = 0x415d72;\n                            fcn.00432ac0();\n                            *(*0x20 + -0x1a8) = 0x415d85;\n                            fcn.00432dc0();\n                            *(*0x20 + -0x1a8) = 0x415d93;\n                            fcn.004327c0(uVar5, uVar6);\n                            *(*0x20 + -0x1a8) = 0x415da5;\n                            fcn.00432dc0();\n                            *(*0x20 + -0x1a8) = 0x415daa;\n                            fcn.00432540();\n                        }\n                    }\n                    if (*0x5580bc < 1) {\ncode_r0x00415e12:\n                        *(*0x20 + -0x1a8) = 0x415e25;\n                        fcn.00440ca0(0);\n                        *(*0x20 + -0x1a8) = 0x415e36;\n                        fcn.00440ca0(0);\n                        iVar4 = *(*(*0x20 + -0x30) + 0xd8);\n                        *(*(*0x20 + -0x30) + 0xd8) = iVar4 + -1;\n                        if ((iVar4 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return;\n                    }\n                    *(*0x20 + -0x100) = *0x49e258 * *0x55aba0;\n                    *(*0x20 + -0xe8) = 0;\n                    *(*0x20 + -0xe0) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                    *(*0x20 + -0x1a8) = 0x415de9;\n                    fcn.004324c0();\n                    uVar8 = (*0x558850 - *0x557e28) / 1000000;\n                    uVar11 = 0x17;\n                    while ((cVar3 = uVar8,  9 < uVar8 || (0x13 < uVar11))) {\n                        uVar8 = uVar8 / 10;\n                        if (0x17 < uVar11) goto code_r0x004163b8;\n                        *(*0x20 + (uVar11 - 0xe8)) = cVar3 + uVar8 * -10 + '0';\n                        bVar13 = uVar11 == 0x15;\n                        uVar11 = uVar11 - 1;\n                        if (bVar13) {\n                            *(*0x20 + -0xd4) = 0x2e;\n                            uVar11 = 0x13;\n                        }\n                    }\n                    if (uVar11 < 0x18) {\n                        *(*0x20 + (uVar11 - 0xe8)) = cVar3 + '0';\n                        *(*0x20 + -0x108) = *0x55ab98;\n                        *(*0x20 + -0x1a8) = 0x415f25;\n                        uVar5 = fcn.00446300(-(uVar11 - 0x18));\n                        *(*0x20 + -0x18) = uVar5;\n                        *(*0x20 + -0x120) = *0x20 + ((uVar11 & uVar11 - 0x18 >> 0x3f) - 0xe8);\n                        *(*0x20 + -0x1a8) = 0x415f3a;\n                        fcn.004324c0();\n                        *(*0x20 + -0x1a8) = 0x415f4b;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x1a8) = 0x415f58;\n                        fcn.00432ac0();\n                        *(*0x20 + -0x1a8) = 0x415f69;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x1a8) = 0x415f7e;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x1a8) = 0x415f8f;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x1a8) = 0x415fa5;\n                        fcn.00432bc0(*(*0x20 + -0x100));\n                        *(*0x20 + -0x1a8) = 0x415fb6;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x1a8) = 0x415fbb;\n                        fcn.00432540();\n                        *(*0x20 + -0xd0) = 0;\n                        *(*0x20 + -200) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                        *(*0x20 + -0xd0) = *0x558858;\n                        *(*0x20 + -200) = *0x558860;\n                        *(*0x20 + -0xc0) = *0x558868;\n                        iVar7 = 0;\n                        iVar9 = *0x558850;\n                        while (iVar7 < 3) {\n                            *(*0x20 + -0x140) = iVar7;\n                            *(*0x20 + -0x158) = *(*0x20 + iVar7 * 8 + -0xd0);\n                            if (iVar7 != 0) {\n                                *(*0x20 + -0x128) = iVar9;\n                                *(*0x20 + -0x1a8) = 0x4160a5;\n                                fcn.004324c0();\n                                *(*0x20 + -0x1a8) = 0x4160b6;\n                                fcn.00432dc0();\n                                *(*0x20 + -0x1a8) = 0x4160bb;\n                                fcn.00432540();\n                            }\n                            *(*0x20 + -0x1a8) = 0x416025;\n                            uVar5 = fcn.004173e0(0x18);\n                            *(*0x20 + -0x1a8) = 0x416038;\n                            uVar6 = fcn.00446300(0x18);\n                            *(*0x20 + -0x18) = uVar6;\n                            *(*0x20 + -0x120) = uVar5;\n                            *(*0x20 + -0x1a8) = 0x41604d;\n                            fcn.004324c0();\n                            *(*0x20 + -0x1a8) = 0x416065;\n                            fcn.00432dc0();\n                            *(*0x20 + -0x1a8) = 0x41606a;\n                            fcn.00432540();\n                            iVar9 = *(*0x20 + -0x158);\n                            iVar7 = *(*0x20 + -0x140) + 1;\n                        }\n                        *(*0x20 + -0x1a8) = 0x4160cf;\n                        fcn.004324c0();\n                        *(*0x20 + -0x1a8) = 0x4160e5;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x1a8) = 0x4160ea;\n                        fcn.00432540();\n                        *(*0x20 + -0x58) = 0;\n                        *(*0x20 + -0x50) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                        *(*0x20 + -0x40) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                        *(*0x20 + -0x58) = *(*0x20 + -0x168);\n                        *(*0x20 + -0x50) = *0x558558;\n                        *(*0x20 + -0x48) = *0x558568 + *0x558560;\n                        *(*0x20 + -0x40) = *0x558570;\n                        *(*0x20 + -0x38) = *(*0x20 + -0x148);\n                        iVar7 = 0;\n                        while (iVar7 < 5) {\n                            *(*0x20 + -0x138) = iVar7;\n                            *(*0x20 + -0x150) = *(*0x20 + iVar7 * 8 + -0x58);\n                            if ((iVar7 == 2) || (iVar7 == 3)) {\n                                *(*0x20 + -0x1a8) = 0x4161f1;\n                                fcn.004324c0();\n                                *(*0x20 + -0x1a8) = 0x416205;\n                                fcn.00432dc0();\n                                *(*0x20 + -0x1a8) = 0x41620a;\n                                fcn.00432540();\n                            }\n                            else if (iVar7 != 0) {\n                                *(*0x20 + -0x1a8) = 0x416225;\n                                fcn.004324c0();\n                                *(*0x20 + -0x1a8) = 0x416236;\n                                fcn.00432dc0();\n                                *(*0x20 + -0x1a8) = 0x41623b;\n                                fcn.00432540();\n                            }\n                            *(*0x20 + -0x1a8) = 0x416177;\n                            uVar5 = fcn.004173e0(0x18);\n                            *(*0x20 + -0x1a8) = 0x41618a;\n                            uVar6 = fcn.00446300(0x18);\n                            *(*0x20 + -0x18) = uVar6;\n                            *(*0x20 + -0x120) = uVar5;\n                            *(*0x20 + -0x1a8) = 0x41619f;\n                            fcn.004324c0();\n                            *(*0x20 + -0x1a8) = 0x4161b4;\n                            fcn.00432dc0();\n                            *(*0x20 + -0x1a8) = 0x4161b9;\n                            fcn.00432540();\n                            iVar7 = *(*0x20 + -0x138) + 1;\n                        }\n                        *(*0x20 + -0x108) = *0x558880;\n                        *(*0x20 + -0x110) = *0x558888;\n                        *(*0x20 + -0x118) = *0x558890;\n                        *(*0x20 + -0x130) = *0x558898;\n                        *(*0x20 + -0x128) = *0x558848;\n                        *(*0x20 + -0x1a8) = 0x416294;\n                        fcn.004324c0();\n                        *(*0x20 + -0x1a8) = 0x4162a5;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x1a8) = 0x4162b6;\n                        fcn.00432ac0();\n                        *(*0x20 + -0x1a8) = 0x4162c7;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x1a8) = 0x4162d8;\n                        fcn.00432ac0();\n                        *(*0x20 + -0x1a8) = 0x4162e9;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x1a8) = 0x4162fa;\n                        fcn.00432ac0();\n                        *(*0x20 + -0x1a8) = 0x41630b;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x1a8) = 0x416319;\n                        fcn.00432ac0();\n                        *(*0x20 + -0x1a8) = 0x41632a;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x1a8) = 0x416334;\n                        fcn.00432bc0();\n                        *(*0x20 + -0x1a8) = 0x416345;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x1a8) = 0x41634a;\n                        fcn.00432540();\n                        if (*0x558800 != '\\0') {\n                            *(*0x20 + -0x1a8) = 0x416358;\n                            fcn.004324c0();\n                            *(*0x20 + -0x1a8) = 0x416369;\n                            fcn.00432dc0();\n                            *(*0x20 + -0x1a8) = 0x41636e;\n                            fcn.00432540();\n                        }\n                        *(*0x20 + -0x1a8) = 0x416373;\n                        fcn.004324c0();\n                        *(*0x20 + -0x1a8) = 0x416378;\n                        fcn.00432720();\n                        *(*0x20 + -0x1a8) = 0x41637d;\n                        fcn.00432540();\n                        cVar3 = *(*(unaff_R14 + 0x30) + 0xe7);\n                        *(*(unaff_R14 + 0x30) + 0xe7) = cVar3 + -1;\n                        if (cVar3 == '\\x01') {\n                            *(*0x20 + -0x1a8) = 0x4163a9;\n                            fcn.00409520();\n                        }\n                        goto code_r0x00415e12;\n                    }\n                    *(*0x20 + -0x1a8) = 0x4163b8;\n                    fcn.00459720(0x18);\ncode_r0x004163b8:\n                    *(*0x20 + -0x1a8) = 0x4163c5;\n                    fcn.00459720(0x18);\n                }\n                else {\n                    if (uVar11 < 0x10) {\n                        param_4 = 0;\n                    }\n                    else {\n                        iVar12 = 0x3f;\n                        if (uVar11 != 0) {\n                            for (; uVar11 >> iVar12 == 0; iVar12 = iVar12 + -1) {\n                            }\n                        }\n                        if (uVar11 == 0) {\n                            iVar12 = -1;\n                        }\n                        param_4 = iVar12 + -3;\n                        if (param_4 * 0x10 < 0x2d0) {\n                            param_5 = ~-(iVar12 - 4U < 0x40);\n                            iVar12 = uVar11 >> ((iVar12 - 4U | param_5) & 0x3f);\n                            uVar11 = iVar12 + (((iVar12 >> 0x3f) >> 0x3c) + iVar12 >> 4) * -0x10;\n                        }\n                        else {\n                            param_4 = 0x2c;\n                            uVar11 = 0xf;\n                        }\n                    }\n                    param_4 = param_4 * 0x10;\n                    if (param_4 + uVar11 < 0x2d0) {\n                        piVar2 = (param_4 + uVar11) * 8 + 0x55c018;\n                        LOCK();\n                        *piVar2 = *piVar2 + 1;\n                        goto code_r0x00415aa1;\n                    }\n                }\n                *(*0x20 + -0x1a8) = 0x4163cf;\n                fcn.00459740(0x2d0);\n            }\n            *(*0x20 + -0x1a8) = 0x4163e5;\n            param_1 = fcn.00430d40();\n        }\n        *(puVar10 + 8) = param_1;\n        *(puVar10 + -8) = 0x4163f1;\n        fcn.00457040();\n        param_1 = *(puVar10 + 8);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 6442
    },
    "null": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "004179c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004179c0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    uint32_t unaff_EBX;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if ((unaff_EBX < *0x5587c8) || (*0x5587cc <= unaff_EBX)) {\n        if ((unaff_EBX < *0x5587cc) || (*0x5587d0 <= unaff_EBX)) {\n            puVar3 = *0x557d00;\n            if (unaff_EBX == 0) {\n                for (; puVar3 != NULL; puVar3 = *puVar3) {\ncode_r0x00417b8c:\n                    fcn.00419ba0(0x558000);\n                }\n            }\n            else if (unaff_EBX == 1) {\n                fcn.00456f00();\n            }\n            else {\n                if ((unaff_EBX < *0x5587d0) || (*0x5587d4 <= unaff_EBX)) {\n                    puVar3 = *0x5587d4;\n                    if ((*0x5587d4 <= unaff_EBX) && (unaff_EBX < *0x5587d8)) {\n                        if (unaff_EBX - *0x5587d4 < *0x503f28) {\n                            iVar4 = *(*0x503f20 + (unaff_EBX - *0x5587d4) * 8);\n                            if (((*(iVar4 + 0x90) == 4) || (*(iVar4 + 0x90) == 3)) && (*(iVar4 + 0xa8) == 0)) {\n                                *(iVar4 + 0xa8) = *0x558798;\n                            }\n                            fcn.00456f00();\n                            return;\n                        }\n                        fcn.00459720(*0x503f28);\n                    }\n                    fcn.00430d40();\n                    goto code_r0x00417b8c;\n                }\n                fcn.00418000();\n            }\n        }\n        else {\n            if (*0x503640 == NULL) {\n                iVar2 = 0;\n                iVar4 = 0;\n            }\n            else {\n                iVar4 = **0x503640;\n                iVar2 = (*0x503640)[1];\n            }\n            for (iVar1 = 0; iVar1 < iVar2; iVar1 = iVar1 + 1) {\n                fcn.00417e20(*(*(iVar4 + iVar1 * 8) + 0x1f8));\n            }\n        }\n    }\n    else {\n        if (*0x503640 == NULL) {\n            iVar2 = 0;\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = **0x503640;\n            iVar2 = (*0x503640)[1];\n        }\n        for (iVar1 = 0; iVar1 < iVar2; iVar1 = iVar1 + 1) {\n            fcn.00417e20(*(*(iVar4 + iVar1 * 8) + 0x1e8));\n        }\n    }\n    return;\n}\n",
        "token_count": 752
    },
    "00419340": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00419340(ulong arg1)\n\n{\n    uint64_t uVar1;\n    int32_t *arg1_00;\n    int32_t iVar2;\n    int64_t *in_RAX;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    int32_t *unaff_RSI;\n    int32_t *piVar5;\n    ulong unaff_RDI;\n    char cVar6;\n    char cVar7;\n    uint64_t in_R8;\n    uint64_t uVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    bool bVar10;\n    int32_t *piVar11;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    iVar4 = *in_RAX;\n    if (iVar4 == 0) {\n        uVar8 = 0;\n        bVar10 = false;\n    }\n    else {\n        uVar8 = in_R8 & 0xffffffffffffff00 | *(iVar4 + 0x28) == '\\x03';\n        bVar10 = *(iVar4 + 0x28) == '\\x05';\n    }\n    cVar6 = uVar8;\n    if (((*(unaff_RBX + 0x110) == '\\0') && (cVar6 == '\\0')) && (!bVar10)) {\n        iVar3 = 0;\n        iVar2 = fcn.00445460();\n        if (0 < iVar2) {\n            fcn.00419ba0(unaff_RBX);\n        }\n        if (0 < iVar3) {\n            fcn.00419ba0(unaff_RDI);\n        }\n        if ((in_RAX[7] != 0) && (0 < uVar8)) {\n            iVar4 = 0;\n            piVar5 = unaff_RSI;\n            piVar11 = unaff_RSI;\n            while( true ) {\n                iVar9 = in_RAX[7];\n                if (-1 < *piVar5) {\n                    iVar9 = in_RAX[8];\n                }\n                uVar1 = iVar9 + *piVar5;\n                if (in_RAX[5] < uVar1 || in_RAX[5] == uVar1) {\n                    arg1_00 = unaff_RSI + iVar4 * 6;\n                    unaff_RSI = piVar11;\n                    fcn.0041da60(arg1_00);\n                    piVar11 = unaff_RSI;\n                }\n                iVar4 = iVar4 + 1;\n                if (uVar8 <= iVar4) break;\n                piVar5 = piVar5 + 6;\n            }\n        }\n        return;\n    }\n    if ((in_RAX[7] != 0) && (in_RAX[7] != in_RAX[5])) {\n        fcn.0041a0c0(0);\n        uVar8 = uVar8 & 0xff;\n    }\n    cVar7 = uVar8;\n    if (in_RAX[9] != 0) {\n        fcn.0041a0c0(0);\n        cVar7 = cVar6;\n    }\n    if ((cVar7 != '\\0') || (bVar10)) {\n        *(unaff_RBX + 0x110) = 1;\n    }\n    else {\n        *(unaff_RBX + 0x110) = 0;\n    }\n    return;\n}\n",
        "token_count": 787
    },
    "00419d40": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00419d40(void)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    bool bVar3;\n    uint64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t *unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint64_t uVar11;\n    uint8_t *puVar12;\n    uint8_t *puVar13;\n    int64_t unaff_R14;\n    \ncode_r0x00419d40:\n    puVar10 = *0x20;\n    if (*0x20 + -0x10 < *(unaff_R14 + 0x10) || *0x20 + -0x10 == *(unaff_R14 + 0x10)) goto code_r0x0041a086;\n    puVar10 = *0x20 + -0x90;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    uVar8 = in_RAX + 0x800000000000 >> 0x2a;\n    if (0x3f < uVar8) goto code_r0x0041a076;\n    uVar11 = in_RAX + 0x800000000000 >> 0x16;\n    iVar5 = *(*(uVar8 * 8 + 0x52a0d8) + (uVar11 & 0xfffff) * 8);\n    if (iVar5 == 0) {\n        uVar11 = 0;\n        uVar8 = 0;\n        puVar13 = NULL;\n        puVar12 = NULL;\n    }\n    else {\n        puVar12 = iVar5 + (in_RAX >> 5 & 0x1ffff);\n        uVar8 = in_RAX >> 3 & 3;\n        puVar13 = iVar5 + 0x1ffff;\n    }\n    iVar5 = *(iVar5 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n    uVar9 = *(iVar5 + 0x68);\n    if (uVar9 == 0) goto code_r0x0041a065;\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + -0x30) = in_RAX;\n    if (0x20000 < uVar9) {\n        if (*(iVar5 + 0x18) == in_RAX) {\n            if ((*(iVar5 + 0x62) & 1) != 0) {\n                unaff_RBX[2] = unaff_RBX[2] + uVar9;\n                return;\n            }\n            *(*0x20 + -0x50) = iVar5;\n            *(*0x20 + -0x28) = puVar13;\n            *(*0x20 + -0x58) = uVar11;\n            *(*0x20 + -0x60) = uVar8;\n            *(*0x20 + -0x10) = puVar12;\n            uVar9 = in_RAX;\ncode_r0x00419fd6:\n            uVar9 = uVar9 + 0x20000;\n            if (*(iVar5 + 0x68) + *(iVar5 + 0x18) <= uVar9) goto code_r0x00419fae;\n            iVar2 = *unaff_RBX;\n            if (iVar2 == 0) {\n                bVar3 = false;\n            }\n            else {\n                uVar4 = *(iVar2 + 0x10);\n                if (uVar4 == 0xfd) {\n                    bVar3 = false;\n                }\n                else {\n                    if (0xfc < uVar4) goto code_r0x0041a058;\n                    *(iVar2 + 0x18 + uVar4 * 8) = uVar9;\n                    *(iVar2 + 0x10) = *(iVar2 + 0x10) + 1;\n                    bVar3 = true;\n                }\n            }\n            if (!bVar3) {\n                *(*0x20 + -0x48) = uVar9;\n                *(*0x20 + -0x98) = 0x41a025;\n                fcn.0041f8a0();\n                uVar9 = *(*0x20 + -0x48);\n                unaff_RBX = *(*0x20 + 0x10);\n                in_RAX = *(*0x20 + -0x30);\n                uVar11 = *(*0x20 + -0x58);\n                uVar8 = *(*0x20 + -0x60);\n                puVar12 = *(*0x20 + -0x10);\n                iVar5 = *(*0x20 + -0x50);\n                puVar13 = *(*0x20 + -0x28);\n            }\n            goto code_r0x00419fd6;\n        }\ncode_r0x00419fae:\n        uVar9 = (*(iVar5 + 0x68) + *(iVar5 + 0x18)) - in_RAX;\n        if (0x20000 < uVar9) {\n            uVar9 = 0x20000;\n        }\n    }\n    *(*0x20 + -0x40) = uVar9;\n    for (uVar4 = 0; uVar4 < uVar9; uVar4 = uVar4 + 8) {\n        uVar1 = *puVar12;\n        uVar6 = uVar8;\n        if (((uVar1 >> (uVar8 & 0x1f)) >> 4 & 1) == 0) break;\n        *(*0x20 + -0x38) = uVar4;\n        if ((((uVar1 >> (uVar6 & 0x1f) & 1) != 0) && (*(uVar4 + in_RAX) != 0)) && (uVar9 <= *(uVar4 + in_RAX) - in_RAX))\n        {\n            *(*0x20 + -0x54) = uVar6;\n            *(*0x20 + -0x18) = puVar12;\n            *(*0x20 + -0x20) = puVar13;\n            *(*0x20 + -0x5c) = uVar11;\n            *(*0x20 + -0x98) = 0x419ef1;\n            iVar5 = fcn.0040f260(uVar4);\n            if (iVar5 != 0) {\n                *(*0x20 + -0x98) = 0x419f13;\n                fcn.0041a380(*(*0x20 + -0x38), uVar9, uVar4);\n            }\n            uVar4 = *(*0x20 + -0x38);\n            uVar6 = *(*0x20 + -0x54);\n            uVar9 = *(*0x20 + -0x40);\n            unaff_RBX = *(*0x20 + 0x10);\n            in_RAX = *(*0x20 + -0x30);\n            uVar11 = *(*0x20 + -0x5c);\n            puVar12 = *(*0x20 + -0x18);\n            puVar13 = *(*0x20 + -0x20);\n        }\n        if (uVar6 < 3) {\n            uVar8 = uVar6 + 1;\n        }\n        else if (puVar13 == puVar12) {\n            uVar7 = uVar11 & 0xffffffff;\n            *(*0x20 + -0x98) = 0x419f6e;\n            puVar12 = fcn.0040f3c0(uVar11 & 0xffffffff);\n            uVar9 = *(*0x20 + -0x40);\n            in_RAX = *(*0x20 + -0x30);\n            uVar11 = uVar7;\n            uVar8 = uVar6;\n            uVar4 = *(*0x20 + -0x38);\n            unaff_RBX = *(*0x20 + 0x10);\n        }\n        else {\n            puVar12 = puVar12 + 1;\n            uVar8 = 0;\n        }\n    }\n    unaff_RBX[2] = unaff_RBX[2] + uVar9;\n    unaff_RBX[3] = unaff_RBX[3] + uVar4;\n    return;\ncode_r0x0041a058:\n    *(*0x20 + -0x98) = 0x41a065;\n    fcn.00459720(0xfd);\ncode_r0x0041a065:\n    unaff_RBX = 0x11;\n    *(*0x20 + -0x98) = 0x41a076;\n    fcn.00430d40();\ncode_r0x0041a076:\n    *(*0x20 + -0x98) = 0x41a085;\n    in_RAX = fcn.00459740(0x40);\ncode_r0x0041a086:\n    *(puVar10 + 8) = in_RAX;\n    *(puVar10 + 0x10) = unaff_RBX;\n    *(puVar10 + -8) = 0x41a095;\n    fcn.00457040();\n    in_RAX = *(puVar10 + 8);\n    unaff_RBX = *(puVar10 + 0x10);\n    *0x20 = puVar10;\n    goto code_r0x00419d40;\n}\n",
        "token_count": 2144
    },
    "0041bd40": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041bd6b)\n// WARNING: Removing unreachable block (ram,0x0041bd72)\n// WARNING: Removing unreachable block (ram,0x0041bd78)\n\nint64_t fcn.0041bd40(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00406320();\n    iVar1 = fcn.00446ba0();\n    if (iVar1 != iVar1) {\n        return 100;\n    }\n    return iVar1;\n}\n",
        "token_count": 169
    },
    "0041e820": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0041e820(void)\n\n{\n    uint32_t uVar1;\n    int64_t *piVar2;\n    char cVar3;\n    uint8_t uVar4;\n    uint8_t **in_RAX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    ulong uVar7;\n    uint64_t uVar8;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    char unaff_BL;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    uint32_t uVar12;\n    ulong *puVar13;\n    uint64_t uVar14;\n    int64_t iVar15;\n    uint16_t uVar16;\n    int64_t iVar17;\n    uint64_t uVar18;\n    int64_t unaff_R14;\n    uint8_t *unaff_R15;\n    \ncode_r0x0041e820:\n    puVar11 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x48 && *0x20 + -0x48 != *(unaff_R14 + 0x10)) {\n        puVar11 = *0x20 + -200;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        piVar2 = *(unaff_R14 + 0x30);\n        if (((*(piVar2 + 0x1b) != 0) || (*(piVar2 + 0x18) != 0)) || (*piVar2 == unaff_R14)) {\n            puVar10 = *in_RAX;\n            if (unaff_BL == '\\0') {\n                *in_RAX = NULL;\n            }\n            *(*0x20 + -0xa8) = *0x52a068;\n            uVar4 = puVar10[99];\n            *(*0x20 + -0xad) = uVar4;\n            if ((uVar4 == 1) && (*(puVar10 + 0x58) == *0x52a068 - 1)) {\n                *(*0x20 + 0x10) = unaff_BL;\n                *(*0x20 + -0x88) = puVar10;\n                *(*0x20 + -0xa4) = *0x52a068 - 1;\n                uVar12 = *0x52a068;\n                if (*0x509e70 != '\\0') {\n                    *(*0x20 + -0xd0) = 0x41e8d1;\n                    fcn.0044c620();\n                    puVar10 = *(*0x20 + -0x88);\n                    uVar12 = *(*0x20 + -0xa8);\n                }\n                LOCK();\n                *0x52a0a0 = *0x52a0a0 + *(puVar10 + 0x20);\n                uVar4 = puVar10[0x62];\n                *(*0x20 + -0xb0) = uVar4;\n                uVar8 = *(puVar10 + 0x68);\n                *(*0x20 + -0x90) = uVar8;\n                uVar14 = *(puVar10 + 0x80);\n                *(*0x20 + -0xa0) = uVar14;\n                *(*0x20 + -0x48) = puVar10 + 0x80;\n                *(*0x20 + -0x40) = uVar14;\n                do {\n                    uVar5 = uVar4;\n                    puVar13 = *(*0x20 + -0x40);\n                    if (puVar13 == NULL) {\n                        if ((uVar14 != 0) && (*(puVar10 + 0x80) == 0)) {\n                            puVar13 = *(puVar10 + 0x18) + 0x800000000000;\n                            uVar14 = puVar13 >> 0x2a;\n                            if (0x3f < uVar14) {\ncode_r0x0041f245:\n                                uVar18 = 0;\n                                *(*0x20 + -0xd0) = 0x41f252;\n                                fcn.00459740(0x40);\n                                goto code_r0x0041f252;\n                            }\n                            puVar13 = puVar13 >> 0x16 & 0xfffff;\n                            uVar14 = *(*(uVar14 * 8 + 0x52a0d8) + puVar13 * 8);\n                            uVar18 = *(puVar10 + 0x18) >> 0xd;\n                            uVar6 = (uVar18 & 0x1ff) >> 3;\n                            if (0x3f < uVar6) {\n                                *(*0x20 + -0xd0) = 0x41f245;\n                                fcn.00459740(0x40);\n                                goto code_r0x0041f245;\n                            }\n                            puVar9 = uVar14 + uVar6 + 0x21080;\n                            LOCK();\n                            *puVar9 = *puVar9 & ~(1 << (uVar18 & 7));\n                        }\n                        if ((*0x5580e0 != 0) || (*0x5580a4 != 0)) {\n                            *(*0x20 + -0x38) = *(puVar10 + 0x50);\n                            *(*0x20 + -0x30) = 1;\n                            *(*0x20 + -0x28) = 0;\n                            *(*0x20 + -0x20) = *(puVar10 + 0x48);\n                            *(*0x20 + -0x18) = 1;\n                            *(*0x20 + -0x10) = 0;\n                            for (uVar14 = 0; uVar14 <= *(puVar10 + 0x38) && *(puVar10 + 0x38) != uVar14;\n                                uVar14 = uVar14 + 1) {\n                                if (((**(*0x20 + -0x38) & *(*0x20 + -0x30)) == 0) &&\n                                   ((*(*0x20 + -0x10) <= *(puVar10 + 0x30) && *(puVar10 + 0x30) != *(*0x20 + -0x10) ||\n                                    ((**(*0x20 + -0x20) & *(*0x20 + -0x18)) != 0)))) {\n                                    iVar15 = *(puVar10 + 0x68) * uVar14 + *(puVar10 + 0x18);\n                                    if (*0x5580e0 != 0) {\n                                        *(*0x20 + -0x80) = uVar14;\n                                        *(*0x20 + -0x98) = iVar15;\n                                        *(*0x20 + -0xd0) = 0x41f17e;\n                                        fcn.004282c0();\n                                        uVar14 = *(*0x20 + -0x80);\n                                        puVar10 = *(*0x20 + -0x88);\n                                        uVar8 = *(*0x20 + -0x90);\n                                        iVar15 = *(*0x20 + -0x98);\n                                    }\n                                    if (*0x5580a4 != 0) {\n                                        for (uVar5 = 0; uVar5 < uVar8; uVar5 = uVar5 + 4) {\n                                            *(iVar15 + uVar5) = 0xdeadbeef;\n                                        }\n                                    }\n                                }\n                                if (*(*0x20 + -0x30) == -0x80) {\n                                    *(*0x20 + -0x38) = *(*0x20 + -0x38) + 1;\n                                    *(*0x20 + -0x30) = 1;\n                                }\n                                else {\n                                    *(*0x20 + -0x30) = *(*0x20 + -0x30) << 1;\n                                }\n                                *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\n                                if (*(*0x20 + -0x18) == -0x80) {\n                                    *(*0x20 + -0x20) = *(*0x20 + -0x20) + 1;\n                                    *(*0x20 + -0x18) = 1;\n                                }\n                                else {\n                                    *(*0x20 + -0x18) = *(*0x20 + -0x18) << 1;\n                                }\n                                *(*0x20 + -0x10) = *(*0x20 + -0x10) + 1;\n                            }\n                        }\n                        uVar14 = *(puVar10 + 0x30);\n                        if (*(puVar10 + 0x38) < uVar14 || *(puVar10 + 0x38) == uVar14) goto code_r0x0041eba6;\n                        uVar8 = uVar14 >> 3;\n                        if ((~*(uVar8 + *(puVar10 + 0x48)) & *(uVar8 + *(puVar10 + 0x50))) >> (uVar14 & 7) != 0) {\n                            *(*0x20 + -0x50) = uVar8;\n                            *(*0x20 + -0xd0) = 0x41eb72;\n                            fcn.0041f3e0();\n                            uVar8 = *(*0x20 + -0x50);\n                            puVar10 = *(*0x20 + -0x88);\n                        }\n                        do {\n                            while (uVar8 = uVar8 + 1,  uVar8 < *(puVar10 + 0x38) + 7U >> 3) {\n                                if ((*(uVar8 + *(puVar10 + 0x50)) & ~*(uVar8 + *(puVar10 + 0x48))) != 0) {\n                                    *(*0x20 + -0x70) = uVar8;\n                                    *(*0x20 + -0xd0) = 0x41f0d2;\n                                    fcn.0041f3e0();\n                                    uVar8 = *(*0x20 + -0x70);\n                                    puVar10 = *(*0x20 + -0x88);\n                                }\n                            }\ncode_r0x0041eba6:\n                            uVar14 = *(puVar10 + 0x38) + 7U >> 3;\n                            *(*0x20 + -0x50) = uVar14;\n                            iVar15 = 0;\n                            for (uVar8 = 0; *(*0x20 + -0x60) = iVar15,  uVar8 < uVar14; uVar8 = uVar8 + 8) {\n                                if (*0x557c77 == '\\0') {\n                                    *(*0x20 + -0x78) = uVar8;\n                                    *(*0x20 + -0xd0) = 0x41ebf9;\n                                    iVar17 = fcn.00401d40();\n                                    uVar14 = *(*0x20 + -0x50);\n                                    puVar10 = *(*0x20 + -0x88);\n                                    iVar15 = *(*0x20 + -0x60);\n                                    uVar8 = *(*0x20 + -0x78);\n                                }\n                                else {\n                                    iVar17 = popcnt(*(*(puVar10 + 0x50) + uVar8));\n                                }\n                                iVar15 = iVar15 + iVar17;\n                            }\n                            uVar16 = *(puVar10 + 0x60);\n                            uVar14 = uVar16;\n                            uVar12 = uVar16 - iVar15;\n                            uVar8 = uVar12;\n                            *(*0x20 + -0xac) = uVar12;\n                            if (iVar15 <= uVar16) {\n                                *(puVar10 + 0x60) = iVar15;\n                                *(puVar10 + 0x30) = 0;\n                                if (*0x509e70 != '\\0') {\n                                    uVar14 = *(*(unaff_R14 + 0x30) + 0xa0);\n                                    *(uVar14 + 0x1648) = *(uVar14 + 0x1648) + *(puVar10 + 0x68) * (uVar12 & 0xffff);\n                                }\n                                uVar16 = uVar14;\n                                *(puVar10 + 0x48) = *(puVar10 + 0x50);\n                                *(*0x20 + -0xd0) = 0x41ec96;\n                                uVar7 = fcn.004233e0();\n                                uVar14 = *(*0x20 + -0x88);\n                                *(uVar14 + 0x50) = uVar7;\n                                *(*0x20 + -0xd0) = 0x41eca9;\n                                fcn.0040eea0();\n                                iVar15 = *(*0x20 + -0x88);\n                                uVar4 = *(iVar15 + 99);\n                                uVar8 = uVar14 & 0xffffffffffffff00 | uVar4;\n                                *(*0x20 + -0xad) = uVar4;\n                                if (uVar4 == 1) {\n                                    uVar12 = *(iVar15 + 0x58);\n                                    puVar10 = uVar12;\n                                    if (uVar12 == *(*0x20 + -0xa4)) {\n                                        uVar1 = *(*0x20 + -0xa8);\n                                        if ((uVar12 != uVar1 + 1) && (uVar12 != uVar1 + 3)) {\n                                            puVar10 = uVar1;\n                                            *(iVar15 + 0x58) = uVar1;\n                                            uVar14 = *(*0x20 + -0xb0);\n                                            uVar4 = *(*0x20 + -0xb0) >> 1;\n                                            if (uVar4 == 0) {\n                                                if (*(*0x20 + 0x10) != '\\0') {\n                                                    return 0;\n                                                }\n                                                if (*(*0x20 + -0xac) != 0) {\n                                                    if (*0x5580a8 < 1) {\n                                                        *(*0x20 + -0xd0) = 0x41ee86;\n                                                        fcn.00422320();\n                                                    }\n                                                    else {\n                                                        *(iVar15 + 0x70) = 0;\n                                                        *(*0x20 + -0xd0) = 0x41ee78;\n                                                        fcn.00413760();\n                                                    }\n                                                    *(*0x20 + -0xd0) = 0x41ee92;\n                                                    iVar15 = fcn.00429960();\n                                                    LOCK();\n                                                    *(iVar15 + 0x270) = *(iVar15 + 0x270) + 1;\n                                                    LOCK();\n                                                    piVar2 = iVar15 + 0x268;\n                                                    iVar15 = *piVar2;\n                                                    *piVar2 = *piVar2 + *(*0x20 + -0x90);\n                                                    *(*0x20 + -0xd0) = 0x41eeba;\n                                                    fcn.00429a60(iVar15);\n                                                    return 1;\n                                                }\n                                                if (uVar14 < 0x88) {\n                                                    *(*0x20 + -0xd0) = 0x41ef05;\n                                                    fcn.00429300(uVar14 * 0xc0 + 0x52a3d8, (uVar1 >> 1 & 1) * 5);\n                                                    return 0;\n                                                }\n                                                *(*0x20 + -0xd0) = 0x41ef25;\n                                                fcn.00459720(0x88);\ncode_r0x0041ef25:\n                                                *(*0x20 + -0xd0) = 0x41ef31;\n                                                fcn.00459720(0x88);\ncode_r0x0041ef31:\n                                                *(*0x20 + -0xd0) = 0x41ef3d;\n                                                fcn.00459720(0x88);\n                                            }\n                                            else {\n                                                if (*(*0x20 + -0xac) == 0) {\n                                                    cVar3 = *(*0x20 + 0x10);\ncode_r0x0041ed80:\n                                                    if (cVar3 != '\\0') {\n                                                        return 0;\n                                                    }\n                                                    if (*(*0x20 + -0x60) == 0) {\n                                                        *(*0x20 + -0xd0) = 0x41ee27;\n                                                        fcn.00422320();\n                                                        return 1;\n                                                    }\n                                                    if (*(iVar15 + 0x38) != (*(*0x20 + -0x60) & 0xffff)) {\n                                                        if (uVar14 < 0x88) {\n                                                            *(*0x20 + -0xd0) = 0x41ee16;\n                                                            fcn.00429300(uVar14 * 0xc0 + 0x52a388, \n                                                                         (puVar10 >> 1 & 1) * 5);\n                                                            return 0;\n                                                        }\n                                                        goto code_r0x0041ef25;\n                                                    }\n                                                    if (uVar14 < 0x88) {\n                                                        *(*0x20 + -0xd0) = 0x41edd6;\n                                                        fcn.00429300(uVar14 * 0xc0 + 0x52a3d8, (puVar10 >> 1 & 1) * 5);\n                                                        return 0;\n                                                    }\n                                                    goto code_r0x0041ef31;\n                                                }\n                                                *(*0x20 + -0xae) = uVar4;\n                                                *(iVar15 + 100) = 1;\n                                                *(*0x20 + -0xd0) = 0x41ed29;\n                                                iVar15 = fcn.00429960();\n                                                if (*(*0x20 + -0xae) < 0x44) {\n                                                    piVar2 = iVar15 + *(*0x20 + -0xae) * 8 + 0x278;\n                                                    LOCK();\n                                                    *piVar2 = *piVar2 + *(*0x20 + -0xac);\n                                                    *(*0x20 + -0xd0) = 0x41ed65;\n                                                    fcn.00429a60();\n                                                    cVar3 = *(*0x20 + 0x10);\n                                                    puVar10 = *(*0x20 + -0xa8);\n                                                    iVar15 = *(*0x20 + -0x88);\n                                                    uVar14 = *(*0x20 + -0xb0);\n                                                    goto code_r0x0041ed80;\n                                                }\n                                            }\n                                            uVar8 = 0x44;\n                                            *(*0x20 + -0xd0) = 0x41ef4a;\n                                            fcn.00459720(0x44);\n                                        }\n                                        iVar15 = 0x11;\n                                        *(*0x20 + -0xd0) = 0x41ef5b;\n                                        fcn.00430d40();\n                                    }\n                                }\n                                *(*0x20 + -0x58) = *(iVar15 + 0x58);\n                                *(*0x20 + -0xd0) = 0x41ef68;\n                                fcn.004324c0();\n                                *(*0x20 + -0xd0) = 0x41ef79;\n                                fcn.00432dc0();\n                                *(*0x20 + -0xd0) = 0x41ef86;\n                                fcn.00432ac0();\n                                *(*0x20 + -0xd0) = 0x41ef97;\n                                fcn.00432dc0();\n                                *(*0x20 + -0xd0) = 0x41efa5;\n                                fcn.00432ac0();\n                                *(*0x20 + -0xd0) = 0x41efb6;\n                                fcn.00432dc0();\n                                *(*0x20 + -0xd0) = 0x41efbf;\n                                fcn.00432ac0();\n                                *(*0x20 + -0xd0) = 0x41efc5;\n                                fcn.00432720();\n                                *(*0x20 + -0xd0) = 0x41efca;\n                                fcn.00432540();\n                                *(*0x20 + -0xd0) = 0x41efdb;\n                                fcn.00430d40();\n                            }\n                            *(*0x20 + -0xaa) = uVar16;\n                            *(*0x20 + -0x50) = *(puVar10 + 0x38);\n                            *(*0x20 + -0xd0) = 0x41efef;\n                            fcn.004324c0();\n                            *(*0x20 + -0xd0) = 0x41f005;\n                            fcn.00432dc0();\n                            *(*0x20 + -0xd0) = 0x41f00f;\n                            fcn.00432ac0();\n                            *(*0x20 + -0xd0) = 0x41f025;\n                            fcn.00432dc0();\n                            *(*0x20 + -0xd0) = 0x41f032;\n                            fcn.00432ac0();\n                            *(*0x20 + -0xd0) = 0x41f045;\n                            fcn.00432dc0();\n                            *(*0x20 + -0xd0) = 0x41f04f;\n                            fcn.00432ac0();\n                            *(*0x20 + -0xd0) = 0x41f065;\n                            fcn.00432dc0();\n                            *(*0x20 + -0xd0) = 0x41f072;\n                            fcn.00432ac0();\n                            *(*0x20 + -0xd0) = 0x41f077;\n                            fcn.00432720();\n                            *(*0x20 + -0xd0) = 0x41f07c;\n                            fcn.00432540();\n                            *(*0x20 + -0xd0) = 0x41f08d;\n                            fcn.00430d40();\n                        } while( true );\n                    }\n                    if (uVar8 == 0) goto code_r0x0041f310;\n                    uVar5 = *(puVar13 + 1) / uVar8;\n                    uVar18 = uVar5 & 7;\n                    puVar9 = (uVar5 >> 3) + *(puVar10 + 0x50);\n                    uVar4 = *puVar9;\n                    uVar12 = uVar4;\n                    if ((uVar4 & 1 << uVar18) == 0) {\n                        uVar5 = uVar5 * uVar8 + uVar8;\n                        unaff_R15 = puVar10;\n                        for (; puVar10 = puVar9,  puVar13 != NULL; puVar13 = *puVar13) {\n                            if (uVar5 <= *(puVar13 + 1)) {\n                                cVar3 = '\\0';\n                                goto code_r0x0041ea24;\n                            }\n                            if (*(puVar13 + 10) == '\\x01') {\n                                *puVar10 = uVar12 | 1 << (uVar18 & 0x1f);\n                                cVar3 = '\\x01';\n                                goto code_r0x0041ea24;\n                            }\ncode_r0x0041f252:\n                            puVar9 = puVar10;\n                        }\n                        cVar3 = '\\0';\ncode_r0x0041ea24:\n                        *(*0x20 + -0x68) = uVar5;\n                        *(*0x20 + -0xaf) = cVar3;\n                        while ((puVar13 = *(*0x20 + -0x40),  puVar10 = unaff_R15,  puVar13 != NULL &&\n                               (*(puVar13 + 1) < uVar5))) {\n                            if ((*(puVar13 + 10) == '\\x01') || (cVar3 == '\\0')) {\n                                uVar7 = *puVar13;\n                                *(*0x20 + -0x40) = uVar7;\n                                **(*0x20 + -0x48) = uVar7;\n                                *(*0x20 + -0xd0) = 0x41f2e5;\n                                fcn.004232a0(uVar8);\n                                cVar3 = *(*0x20 + -0xaf);\n                                uVar5 = *(*0x20 + -0x68);\n                                uVar8 = *(*0x20 + -0x90);\n                                uVar14 = *(*0x20 + -0xa0);\n                                unaff_R15 = *(*0x20 + -0x88);\n                            }\n                            else {\n                                *(*0x20 + -0x48) = puVar13;\n                                *(*0x20 + -0x40) = *puVar13;\n                            }\n                        }\n                    }\n                    else if (*(puVar13 + 10) == '\\x03') {\n                        uVar7 = *puVar13;\n                        *(*0x20 + -0x40) = uVar7;\n                        **(*0x20 + -0x48) = uVar7;\n                        *(puVar13 + 0x11) = 1;\n                        *(*0x20 + -0xd0) = 0x41e9e5;\n                        fcn.004232a0(uVar8);\n                        uVar8 = *(*0x20 + -0x90);\n                        uVar14 = *(*0x20 + -0xa0);\n                        puVar10 = *(*0x20 + -0x88);\n                    }\n                    else {\n                        *(*0x20 + -0x48) = puVar13;\n                        *(*0x20 + -0x40) = *puVar13;\n                    }\n                    uVar12 = *(*0x20 + -0xa8);\n                    uVar4 = *(*0x20 + -0xb0);\n                    unaff_R15 = puVar10;\n                } while( true );\n            }\n            goto code_r0x0041f315;\n        }\n        goto code_r0x0041f39b;\n    }\n    goto code_r0x0041f3ad;\ncode_r0x0041f310:\n    *(*0x20 + -0xd0) = 0x41f315;\n    fcn.0042e820();\ncode_r0x0041f315:\n    *(*0x20 + -0x58) = *(puVar10 + 0x58);\n    *(*0x20 + -0xd0) = 0x41f325;\n    fcn.004324c0();\n    *(*0x20 + -0xd0) = 0x41f336;\n    fcn.00432dc0();\n    *(*0x20 + -0xd0) = 0x41f345;\n    fcn.00432ac0();\n    *(*0x20 + -0xd0) = 0x41f356;\n    fcn.00432dc0();\n    *(*0x20 + -0xd0) = 0x41f365;\n    fcn.00432ac0();\n    *(*0x20 + -0xd0) = 0x41f376;\n    fcn.00432dc0();\n    *(*0x20 + -0xd0) = 0x41f37f;\n    fcn.00432ac0();\n    *(*0x20 + -0xd0) = 0x41f385;\n    fcn.00432720();\n    *(*0x20 + -0xd0) = 0x41f38a;\n    fcn.00432540();\n    *(*0x20 + -0xd0) = 0x41f39b;\n    fcn.00430d40();\ncode_r0x0041f39b:\n    unaff_BL = '\\x1c';\n    *(*0x20 + -0xd0) = 0x41f3ac;\n    in_RAX = fcn.00430d40();\ncode_r0x0041f3ad:\n    *(puVar11 + 8) = in_RAX;\n    puVar11[0x10] = unaff_BL;\n    *(puVar11 + -8) = 0x41f3bb;\n    fcn.00457040();\n    in_RAX = *(puVar11 + 8);\n    unaff_BL = puVar11[0x10];\n    *0x20 = puVar11;\n    goto code_r0x0041e820;\n}\n",
        "token_count": 6243
    },
    "00421a40": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00421a40(uchar param_1)\n\n{\n    int64_t *piVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    int64_t iVar4;\n    char cVar5;\n    ulong in_RAX;\n    ulong uVar6;\n    int64_t iVar7;\n    ulong uVar8;\n    int64_t *piVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    uint64_t unaff_RBX;\n    uint64_t uVar12;\n    uchar *puVar13;\n    uchar *unaff_RBP;\n    char cVar14;\n    uchar (*pauVar15) [16];\n    uchar uVar16;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        uVar16 = unaff_RDI;\n        puVar13 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar13 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = param_1;\n            *(*0x20 + 0x19) = uVar16;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            iVar7 = *(*(unaff_R14 + 0x30) + 0xa0);\n            if ((iVar7 == 0) || (0xf < unaff_RBX)) {\n                iVar7 = 0;\n                pauVar15 = NULL;\n                unaff_RBX = 0;\ncode_r0x00421b4b:\n                *(*0x20 + -0x40) = unaff_RBX;\n                *(*0x20 + -0x28) = pauVar15;\n                *(*0x20 + -0x38) = iVar7;\n                *(*0x20 + -0x70) = 0x421b65;\n                fcn.00409300();\n                iVar7 = *(*0x20 + -0x38);\n                if (iVar7 == 0) {\n                    *(*0x20 + -0x18) = *(*0x20 + 8) + 8;\n                    uVar8 = *(*0x20 + 0x10);\n                    *(*0x20 + -0x70) = 0x421b91;\n                    iVar7 = fcn.00425480();\n                    if (iVar7 != 0) goto code_r0x00421bd9;\n                    *(*0x20 + -0x70) = 0x421ba5;\n                    cVar5 = fcn.00422020();\n                    if (cVar5 == '\\0') {\n                        *(*0x20 + -0x70) = 0x421bb5;\n                        fcn.00409520();\n                        return 0;\n                    }\n                    uVar8 = *(*0x20 + 0x10);\n                    *(*0x20 + -0x70) = 0x421bd0;\n                    iVar7 = fcn.00425480();\n                    if (iVar7 != 0) goto code_r0x00421bd9;\n                }\n                else {\n                    uVar8 = *(*0x20 + -0x40);\ncode_r0x00421bd9:\n                    *(*0x20 + -0x40) = uVar8;\n                    *(*0x20 + -0x38) = iVar7;\n                    iVar7 = *(*0x20 + -0x28);\n                    if (iVar7 == 0) {\n                        *(*0x20 + -0x70) = 0x421bf7;\n                        iVar7 = fcn.00421940();\n                    }\n                    *(*0x20 + -0x28) = iVar7;\n                    *(*0x20 + -0x70) = 0x421c0b;\n                    fcn.00409520();\n                    pauVar15 = *(*0x20 + -0x28);\n                    iVar7 = *(*0x20 + -0x38);\n                    unaff_RBX = *(*0x20 + -0x40);\ncode_r0x00421c1a:\n                    *(*0x20 + -0x48) = pauVar15;\n                    *(*0x20 + -0x38) = iVar7;\n                    *(*0x20 + -0x40) = unaff_RBX;\n                    *pauVar15 = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                    *pauVar15[1] = 0;\n                    *(pauVar15[1] + 8) = iVar7;\n                    uVar8 = *(*0x20 + 0x10);\n                    *pauVar15[2] = uVar8;\n                    *pauVar15[6] = 0;\n                    pauVar15[6][2] = 0;\n                    *(pauVar15[6] + 8) = 0;\n                    *(pauVar15[7] + 8) =\n                         CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                    pauVar15[6][4] = 0;\n                    *pauVar15[3] = 0;\n                    *(pauVar15[4] + 8) =\n                         CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                    *(*0x20 + -0x20) = pauVar15[6] + 3;\n                    pauVar15[6][3] = 0;\n                    *(*0x20 + -0x70) = 0x421c89;\n                    cVar5 = fcn.004217e0(uVar8);\n                    if (cVar5 == '\\0') {\n                        iVar7 = *(*0x20 + -0x48);\n                    }\n                    else {\n                        iVar7 = *(*0x20 + -0x48);\n                        *(iVar7 + 100) = 1;\n                    }\n                    uVar12 = *(*0x20 + 0x10) << 0xd;\n                    *(*0x20 + -0x30) = uVar12;\n                    cVar5 = *(*0x20 + 0x18);\n                    if (cVar5 == '\\0') {\n                        uVar3 = *(*0x20 + 0x19);\n                        *(iVar7 + 0x62) = uVar3;\n                        if (uVar3 >> 1 == 0) {\n                            *(iVar7 + 0x68) = uVar12;\n                            *(iVar7 + 0x38) = 1;\n                            *(iVar7 + 0x5c) = 0;\ncode_r0x00421d66:\n                            *(iVar7 + 0x30) = 0;\n                            *(iVar7 + 0x40) = 0xffffffffffffffff;\n                            *(*0x20 + -0x70) = 0x421d7f;\n                            uVar8 = fcn.004233e0();\n                            *(*(*0x20 + -0x48) + 0x50) = uVar8;\n                            *(*0x20 + -0x70) = 0x421d91;\n                            uVar8 = fcn.00423700();\n                            iVar7 = *(*0x20 + -0x48);\n                            *(iVar7 + 0x48) = uVar8;\n                            *(iVar7 + 0x58) = *(*(*0x20 + 8) + 0x10128);\n                            **(*0x20 + -0x20) = 1;\n                            uVar12 = *(*0x20 + -0x30);\n                            cVar5 = *(*0x20 + 0x18);\n                            goto code_r0x00421dcc;\n                        }\n                        unaff_RDI = uVar3 >> 1;\n                        if (unaff_RDI < 0x44) {\n                            uVar10 = *(unaff_RDI * 2 + 0x4f30c0);\n                            *(iVar7 + 0x68) = uVar10;\n                            if (uVar10 != 0) {\n                                *(iVar7 + 0x38) = uVar12 / uVar10;\n                                *(iVar7 + 0x5c) = *(unaff_RDI * 4 + 0x4f3fa0);\n                                goto code_r0x00421d66;\n                            }\n                            goto code_r0x00421fba;\n                        }\n                    }\n                    else {\n                        *(iVar7 + 0x28) = 0;\n                        *(iVar7 + 0x38) = 0;\n                        *(iVar7 + 0x70) = *(iVar7 + 0x20) * 0x2000 + *(iVar7 + 0x18);\n                        **(*0x20 + -0x20) = 2;\ncode_r0x00421dcc:\n                        iVar11 = *(*0x20 + -0x40);\n                        cVar14 = cVar5;\n                        if (iVar11 != 0) {\n                            *(*0x20 + -0x70) = 0x421de5;\n                            fcn.00413400(iVar11, iVar7);\n                            iVar11 = *(*0x20 + -0x40);\n                            LOCK();\n                            *0x559b20 = *0x559b20 - iVar11;\n                            cVar5 = *(*0x20 + 0x18);\n                            iVar7 = *(*0x20 + -0x48);\n                            uVar12 = *(*0x20 + -0x30);\n                            cVar14 = *(*0x20 + 0x18);\n                        }\n                        if (cVar5 == '\\0') {\n                            LOCK();\n                            *0x559b18 = *0x559b18 + uVar12;\n                        }\n                        if (cVar5 != '\\0' || cVar14 != '\\0') {\n                            *(*0x20 + -0x70) = 0x421e4d;\n                            fcn.004298a0(iVar11, iVar7);\n                        }\n                        *(*0x20 + -0x70) = 0x421e59;\n                        piVar9 = fcn.00429960();\n                        iVar7 = *(*0x20 + -0x40);\n                        LOCK();\n                        *piVar9 = *piVar9 + iVar7;\n                        LOCK();\n                        piVar1 = piVar9 + 1;\n                        iVar11 = *piVar1;\n                        *piVar1 = *piVar1 - iVar7;\n                        uVar3 = *(*0x20 + 0x18);\n                        if (uVar3 < 2) {\n                            if (uVar3 == 0) {\n                                LOCK();\n                                piVar9 = piVar9 + 2;\n                                iVar11 = *piVar9;\n                                *piVar9 = *piVar9 + *(*0x20 + -0x30);\n                            }\n                            else {\n                                LOCK();\n                                piVar9 = piVar9 + 3;\n                                iVar11 = *piVar9;\n                                *piVar9 = *piVar9 + *(*0x20 + -0x30);\n                            }\n                        }\n                        else if (uVar3 == 2) {\n                            LOCK();\n                            piVar9 = piVar9 + 5;\n                            iVar11 = *piVar9;\n                            *piVar9 = *piVar9 + *(*0x20 + -0x30);\n                        }\n                        else if (uVar3 == 3) {\n                            LOCK();\n                            piVar9 = piVar9 + 4;\n                            iVar11 = *piVar9;\n                            *piVar9 = *piVar9 + *(*0x20 + -0x30);\n                        }\n                        *(*0x20 + -0x70) = 0x421ece;\n                        fcn.00429a60(uVar3, iVar11);\n                        unaff_RDI = *(*0x20 + -0x48);\n                        *(*0x20 + -0x70) = 0x421ee6;\n                        fcn.004216e0(*(*0x20 + 0x10));\n                        if (*(*0x20 + 0x18) != '\\0') {\ncode_r0x00421f88:\n                            *(*0x20 + -0x70) = 0x421f8d;\n                            fcn.00458e40();\n                            return *(*0x20 + -0x48);\n                        }\n                        uVar12 = *(*(*0x20 + -0x48) + 0x18);\n                        uVar10 = uVar12 + 0x800000000000 >> 0x2a;\n                        if (uVar10 < 0x40) {\n                            puVar2 = *(*(uVar10 * 8 + 0x52a0d8) + (uVar12 + 0x800000000000 >> 0x16 & 0xfffff) * 8) +\n                                     (uVar12 >> 0x10 & 0x3f) + 0x21000;\n                            LOCK();\n                            *puVar2 = *puVar2 | 1 << (uVar12 >> 0xd & 7);\n                            LOCK();\n                            *(*(*0x20 + 8) + 0x10158) = *(*(*0x20 + 8) + 0x10158) + *(*0x20 + 0x10);\n                            goto code_r0x00421f88;\n                        }\n                        *(*0x20 + -0x70) = 0x421fba;\n                        fcn.00459740(0x40);\ncode_r0x00421fba:\n                        *(*0x20 + -0x70) = 0x421fbf;\n                        fcn.0042e820();\n                    }\n                    *(*0x20 + -0x70) = 0x421fcc;\n                    fcn.00459720(0x44);\n                }\n                unaff_RBX = 0x2b;\n                *(*0x20 + -0x70) = 0x421fdd;\n                fcn.00430d40();\n            }\n            else {\n                if (*(iVar7 + 0x50) == 0) {\n                    *(*0x20 + -0x10) = iVar7;\n                    *(*0x20 + -0x70) = 0x421aa7;\n                    fcn.00409300();\n                    uVar8 = *(*0x20 + 8);\n                    *(*0x20 + -0x70) = 0x421ab5;\n                    uVar6 = fcn.00426620();\n                    iVar7 = *(*0x20 + -0x10);\n                    *(iVar7 + 0x48) = uVar6;\n                    *(iVar7 + 0x50) = unaff_RBX;\n                    *(iVar7 + 0x58) = uVar8;\n                    *(*0x20 + -0x70) = 0x421ad2;\n                    fcn.00409520();\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n                *(*0x20 + -0x70) = 0x421ae5;\n                iVar7 = fcn.00426200();\n                if (iVar7 == 0) {\n                    pauVar15 = NULL;\n                    goto code_r0x00421b4b;\n                }\n                iVar11 = *(*(unaff_R14 + 0x30) + 0xa0);\n                if ((iVar11 == 0) || (iVar4 = *(iVar11 + 0x1228),  iVar4 == 0)) {\n                    pauVar15 = NULL;\ncode_r0x00421b2a:\n                    if (pauVar15 == NULL) goto code_r0x00421b4b;\n                    goto code_r0x00421c1a;\n                }\n                unaff_RDI = iVar4 - 1;\n                if (unaff_RDI < 0x80) {\n                    pauVar15 = *(iVar11 + 0x1228 + iVar4 * 8);\n                    *(iVar11 + 0x1228) = unaff_RDI;\n                    goto code_r0x00421b2a;\n                }\n            }\n            uVar16 = unaff_RDI;\n            param_1 = 0x80;\n            *(*0x20 + -0x70) = 0x421fea;\n            in_RAX = fcn.00459720(0x80);\n        }\n        *(puVar13 + 8) = in_RAX;\n        *(puVar13 + 0x10) = unaff_RBX;\n        puVar13[0x18] = param_1;\n        puVar13[0x19] = uVar16;\n        *(puVar13 + -8) = 0x422005;\n        fcn.0045b6e0();\n        in_RAX = *(puVar13 + 8);\n        unaff_RBX = *(puVar13 + 0x10);\n        param_1 = puVar13[0x18];\n        unaff_RDI = puVar13[0x19];\n        *0x20 = puVar13;\n    } while( true );\n}\n",
        "token_count": 3873
    },
    "004224a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004224a0(ulong arg1)\n\n{\n    uint64_t *puVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    int16_t iVar4;\n    ulong arg1_00;\n    ulong *puVar5;\n    int64_t in_RAX;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*(unaff_RBX + 99) == '\\x01') {\n                iVar4 = *(unaff_RBX + 0x60);\n                *(*0x20 + -0x2a) = iVar4;\n                if ((iVar4 == 0) && (*(in_RAX + 0x10128) == *(unaff_RBX + 0x58))) {\n                    LOCK();\n                    *(in_RAX + 0x10158) = *(in_RAX + 0x10158) - *(unaff_RBX + 0x20);\n                    uVar7 = *(unaff_RBX + 0x18);\n                    uVar9 = uVar7 + 0x800000000000 >> 0x2a;\n                    if (uVar9 < 0x40) {\n                        puVar2 = *(*(uVar9 * 8 + 0x52a0d8) + (uVar7 + 0x800000000000 >> 0x16 & 0xfffff) * 8) +\n                                 (uVar7 >> 0x10 & 0x3f) + 0x21000;\n                        LOCK();\n                        *puVar2 = *puVar2 & ~(1 << (uVar7 >> 0xd & 7));\ncode_r0x00422596:\n                        iVar6 = *(unaff_RBX + 0x20);\n                        if (arg1 == '\\0') {\n                            LOCK();\n                            *0x559b18 = *0x559b18 + iVar6 * -0x2000;\n                        }\n                        *(*0x20 + 8) = in_RAX;\n                        *(*0x20 + -0x2b) = arg1;\n                        *(*0x20 + -0x10) = iVar6 * 0x2000;\n                        if (arg1 != '\\0') {\n                            *(*0x20 + -0x50) = 0x4225df;\n                            fcn.004298a0();\n                        }\n                        *(*0x20 + -0x50) = 0x4225eb;\n                        iVar6 = fcn.00429960();\n                        uVar3 = *(*0x20 + -0x2b);\n                        uVar7 = uVar3;\n                        if (uVar3 < 2) {\n                            if (uVar3 == 0) {\n                                LOCK();\n                                puVar1 = iVar6 + 0x10;\n                                uVar7 = *puVar1;\n                                *puVar1 = *puVar1 - *(*0x20 + -0x10);\n                            }\n                            else {\n                                LOCK();\n                                puVar1 = iVar6 + 0x18;\n                                uVar7 = *puVar1;\n                                *puVar1 = *puVar1 - *(*0x20 + -0x10);\n                            }\n                        }\n                        else if (uVar3 == 2) {\n                            LOCK();\n                            puVar1 = iVar6 + 0x28;\n                            uVar7 = *puVar1;\n                            *puVar1 = *puVar1 - *(*0x20 + -0x10);\n                        }\n                        else if (uVar3 == 3) {\n                            LOCK();\n                            puVar1 = iVar6 + 0x20;\n                            uVar7 = *puVar1;\n                            *puVar1 = *puVar1 - *(*0x20 + -0x10);\n                        }\n                        *(*0x20 + -0x50) = 0x42264d;\n                        fcn.00429a60(uVar7);\n                        arg1_00 = *(*(*0x20 + 0x10) + 0x20);\n                        *(*0x20 + -0x50) = 0x422671;\n                        fcn.00425740(arg1_00);\n                        puVar5 = *(*0x20 + 0x10);\n                        *(puVar5 + 99) = 0;\n                        iVar6 = *(*(unaff_R14 + 0x30) + 0xa0);\n                        if (iVar6 == 0) {\ncode_r0x004226b4:\n                            iVar6 = *(*0x20 + 8);\n                            *(iVar6 + 0x16a70) = *(iVar6 + 0x16a70) - *(iVar6 + 0x16a40);\n                            *puVar5 = *(iVar6 + 0x16a58);\n                            *(iVar6 + 0x16a58) = puVar5;\n                            return;\n                        }\n                        uVar7 = *(iVar6 + 0x1228);\n                        if (0x7f < uVar7) goto code_r0x004226b4;\n                        if (uVar7 < 0x80) {\n                            *(iVar6 + 0x1230 + uVar7 * 8) = puVar5;\n                            *(iVar6 + 0x1228) = *(iVar6 + 0x1228) + 1;\n                            return;\n                        }\n                        *(*0x20 + -0x50) = 0x4226f3;\n                        fcn.00459720(0x80);\n                        goto code_r0x004226f3;\n                    }\n                    goto code_r0x00422716;\n                }\n            }\n            else {\n                if (*(unaff_RBX + 99) == '\\x02') {\n                    if (*(unaff_RBX + 0x60) == 0) goto code_r0x00422596;\ncode_r0x004226f3:\n                    *(*0x20 + -0x50) = 0x422705;\n                    fcn.00430d40();\n                }\n                unaff_RBX = 0x29;\n                *(*0x20 + -0x50) = 0x422716;\n                fcn.00430d40();\ncode_r0x00422716:\n                *(*0x20 + -0x50) = 0x422725;\n                in_RAX = fcn.00459740(0x40);\n            }\n            uVar7 = *(unaff_RBX + 0x58);\n            *(*0x20 + -0x18) = uVar7;\n            *(*0x20 + -0x20) = *(in_RAX + 0x10128);\n            *(*0x20 + -0x28) = *(unaff_RBX + 0x18);\n            *(*0x20 + -0x50) = 0x422746;\n            fcn.004324c0();\n            arg1._0_1_ = uVar7;\n            *(*0x20 + -0x50) = 0x422757;\n            fcn.00432dc0();\n            *(*0x20 + -0x50) = 0x422765;\n            fcn.00432d80();\n            *(*0x20 + -0x50) = 0x422776;\n            fcn.00432dc0();\n            *(*0x20 + -0x50) = 0x422785;\n            fcn.00432c20();\n            *(*0x20 + -0x50) = 0x422796;\n            fcn.00432dc0();\n            *(*0x20 + -0x50) = 0x4227a5;\n            fcn.00432ac0();\n            *(*0x20 + -0x50) = 0x4227b6;\n            fcn.00432dc0();\n            *(*0x20 + -0x50) = 0x4227c5;\n            fcn.00432ac0();\n            *(*0x20 + -0x50) = 0x4227d6;\n            fcn.00432dc0();\n            *(*0x20 + -0x50) = 0x4227e5;\n            fcn.00432ac0();\n            *(*0x20 + -0x50) = 0x4227ea;\n            fcn.00432720();\n            *(*0x20 + -0x50) = 0x4227ef;\n            fcn.00432540();\n            unaff_RBX = 0x23;\n            *(*0x20 + -0x50) = 0x422805;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        puVar8[0x18] = arg1;\n        *(puVar8 + -8) = 0x422819;\n        fcn.00457040();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1._0_1_ = puVar8[0x18];\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 2166
    },
    "004232a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004232a0(ulong arg1)\n\n{\n    char cVar1;\n    ulong uVar2;\n    ulong *puVar3;\n    int64_t in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            cVar1 = *(in_RAX + 10);\n            if (cVar1 == '\\x01') {\n                uVar2 = *(in_RAX + 0x18);\n                *(*0x20 + -0x38) = 0x423350;\n                fcn.00413900(uVar2);\n                *(*0x20 + -0x38) = 0x42335e;\n                fcn.00409300();\n                *0x530a40 = *0x530a40 - *0x530a10;\n                puVar3 = *(*0x20 + 8);\n                *puVar3 = *0x530a28;\n                *(*0x20 + -0x38) = 0x423398;\n                *0x530a28 = puVar3;\n                fcn.00409520();\n                return;\n            }\n            if (cVar1 == '\\x02') {\n                uVar2 = *(in_RAX + 0x10);\n                *(*0x20 + -0x38) = 0x4232ec;\n                fcn.00427c60(arg1, uVar2);\n                *(*0x20 + -0x38) = 0x4232fa;\n                fcn.00409300();\n                *0x530a88 = *0x530a88 - *0x530a58;\n                puVar3 = *(*0x20 + 8);\n                *puVar3 = *0x530a70;\n                *(*0x20 + -0x38) = 0x423333;\n                *0x530a70 = puVar3;\n                fcn.00409520();\n                return;\n            }\n            if (cVar1 == '\\x03') {\n                *(in_RAX + 0x10) = 1;\n                return;\n            }\n            unaff_RBX = 0x10;\n            *(*0x20 + -0x38) = 0x4233b3;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x4233c8;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 757
    },
    "004274a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.004274a0(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*(in_RAX + 0x10) == 2) || (*(in_RAX + 0x10) == 3)) {\n                return in_RAX + *(in_RAX + 0x28) * 8 + 0x30;\n            }\n            *(*0x20 + -0x20) = 0x4274ed;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x4274f8;\n        fcn.00457040();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 304
    },
    "00427500": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong * fcn.00427500(int64_t arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    ulong *puVar4;\n    uint64_t in_RDX;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    int64_t unaff_RDI;\n    uint64_t in_R8;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x30) = in_R8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + -0x10) = unaff_RDI;\n            if (*0x503608 == 0) {\n                *(*0x20 + -0x68) = 0x427557;\n                iVar2 = fcn.004131a0();\n                if (*0x557ed0 != 0) {\n                    unaff_RDI = 0x503608;\n                    *(*0x20 + -0x68) = 0x427577;\n                    fcn.00459280(arg1, in_RDX, in_R8, in_R9);\n                    iVar2 = *0x503608;\n                }\n                *0x503608 = iVar2;\n                if (*0x503608 != 0) {\n                    in_RAX = *(*0x20 + 8);\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RSI = *(*0x20 + 0x28);\n                    unaff_RDI = *(*0x20 + -0x10);\n                    in_R8 = *(*0x20 + 0x30);\n                    goto code_r0x004275ab;\n                }\n            }\n            else {\ncode_r0x004275ab:\n                uVar3 = 0;\n                for (iVar2 = 0; iVar2 < unaff_RDI; iVar2 = iVar2 + 1) {\n                    uVar3 = (*(arg1 + iVar2 * 8) + uVar3) * 0x401;\n                    uVar3 = uVar3 >> 6 ^ uVar3;\n                }\n                uVar3 = (uVar3 + unaff_RBX) * 0x401;\n                in_R9 = (uVar3 >> 6 ^ uVar3) * 9;\n                in_R9 = in_R9 >> 0xb ^ in_R9;\n                in_RDX = in_R9 / 179999;\n                uVar3 = in_R9 % 179999;\n                if (uVar3 < 179999) {\n                    *(*0x20 + -0x30) = in_R9;\n                    *(*0x20 + -0x18) = uVar3;\n                    for (puVar4 = *(*0x503608 + uVar3 * 8); puVar4 != NULL; puVar4 = *puVar4) {\n                        if (((puVar4[2] == in_RAX) && (puVar4[3] == in_R9)) && (puVar4[4] == unaff_RBX)) {\n                            in_RDX = puVar4[5];\n                            if (0x20 < in_RDX) goto code_r0x004277dd;\n                            *(*0x20 + -0x20) = puVar4;\n                            *(*0x20 + -0x68) = 0x427692;\n                            cVar1 = fcn.00427860(in_RDX);\n                            if (cVar1 != '\\0') {\n                                return *(*0x20 + -0x20);\n                            }\n                            arg1 = *(*0x20 + 0x18);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            unaff_RSI = *(*0x20 + 0x28);\n                            unaff_RDI = *(*0x20 + -0x10);\n                            in_R8 = *(*0x20 + 0x30);\n                            in_R9 = *(*0x20 + -0x30);\n                            puVar4 = *(*0x20 + -0x20);\n                            in_RAX = *(*0x20 + 8);\n                        }\n                    }\n                    if (in_R8 == '\\0') {\n                        return NULL;\n                    }\n                    *(*0x20 + -0x68) = 0x4276f4;\n                    puVar4 = fcn.00427380();\n                    in_RDX = puVar4[5];\n                    if (in_RDX < 0x21) {\n                        if (*(*0x20 + -0x10) < in_RDX) {\n                            in_RDX = *(*0x20 + -0x10);\n                        }\n                        if (*(*0x20 + 0x18) != puVar4 + 6) {\n                            *(*0x20 + -0x28) = puVar4;\n                            *(*0x20 + -0x68) = 0x427739;\n                            fcn.0045a040(in_RDX << 3);\n                            puVar4 = *(*0x20 + -0x28);\n                        }\n                        puVar4[3] = *(*0x20 + -0x30);\n                        puVar4[4] = *(*0x20 + 0x10);\n                        iVar2 = *(*0x20 + -0x18);\n                        *puVar4 = *(*0x503608 + iVar2 * 8);\n                        *(*0x503608 + iVar2 * 8) = puVar4;\n                        if (*(*0x20 + 8) == 1) {\n                            puVar4[1] = *0x557da8;\n                            *0x557da8 = puVar4;\n                        }\n                        else if (*(*0x20 + 8) == 3) {\n                            puVar4[1] = *0x557e70;\n                            *0x557e70 = puVar4;\n                        }\n                        else {\n                            puVar4[1] = *0x557d20;\n                            *0x557d20 = puVar4;\n                        }\n                        return puVar4;\n                    }\n                    *(*0x20 + -0x68) = 0x4277dd;\n                    fcn.00459840(arg1, in_RDX);\ncode_r0x004277dd:\n                    *(*0x20 + -0x68) = 0x4277e7;\n                    fcn.00459840(arg1, in_RDX);\n                }\n                arg1 = 179999;\n                *(*0x20 + -0x68) = 0x4277f1;\n                fcn.00459720(179999);\n            }\n            unaff_RBX = 0x1f;\n            *(*0x20 + -0x68) = 0x427805;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + 0x28) = unaff_RSI;\n        puVar5[0x30] = in_R8;\n        *(puVar5 + -8) = 0x427829;\n        fcn.00457040();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        unaff_RSI = *(puVar5 + 0x28);\n        in_R8 = puVar5[0x30];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1886
    },
    "00429960": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.00429960(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t in_RAX;\n    uint32_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar3 = *(*(unaff_R14 + 0x30) + 0xa0);\n            if (iVar3 == 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x28) = 0x4299b9;\n                fcn.00409300(in_RAX + 0xde8);\n                in_RAX = *(*0x20 + 8);\ncode_r0x004299be:\n                uVar4 = *(in_RAX + 0xde0) % 3;\n                if (uVar4 < 3) {\n                    return in_RAX + uVar4 * 0x4a0;\n                }\n                *(*0x20 + -0x28) = 0x4299fe;\n                fcn.00459720(3);\n            }\n            else {\n                LOCK();\n                piVar1 = iVar3 + 0x26d4;\n                iVar2 = *piVar1;\n                *piVar1 = *piVar1 + 1;\n                uVar4 = iVar2 + 1;\n                if ((uVar4 & 1) != 0) goto code_r0x004299be;\n            }\n            *(*0x20 + -0xc) = uVar4;\n            *(*0x20 + -0x28) = 0x429a07;\n            fcn.004324c0();\n            *(*0x20 + -0x28) = 0x429a18;\n            fcn.00432dc0();\n            *(*0x20 + -0x28) = 0x429a25;\n            fcn.00432ac0();\n            *(*0x20 + -0x28) = 0x429a2a;\n            fcn.00432720();\n            *(*0x20 + -0x28) = 0x429a2f;\n            fcn.00432540();\n            *(*0x20 + -0x28) = 0x429a45;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x429a50;\n        fcn.00457040();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 691
    },
    "0042b720": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042b720(void)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x24) = 0;\n            *(*0x20 + -0x1c) = 0;\n            *(*0x20 + -0x70) = *0x5035c0;\n            *(*0x20 + -0x68) = *0x20 + -0x20;\n            *(*0x20 + -0x60) = *0x20 + -0x24;\n            *(*0x20 + -0x58) = *0x20 + -0x1c;\n            *(*0x20 + -0x78) = 0x42b77e;\n            fcn.0042d660();\n            uVar7 = 0;\n            uVar8 = 0;\n            uVar9 = 0;\n            uVar10 = 0;\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            if ((*(*0x20 + -0x20) < 10) ||\n               (((*(*0x20 + -0x20) == 10 && (*(*0x20 + -0x24) == 0)) && (*(*0x20 + -0x1c) < 0x3ad7)))) {\n                return;\n            }\n            *(*0x20 + -0x78) = 0x42b7c5;\n            iVar3 = fcn.0042d500();\n            puVar1 = iVar3 + 3;\n            *(*0x20 + -0x10) = puVar1;\n            uVar2 = *puVar1;\n            *(*0x20 + -0x25) = uVar2;\n            *puVar1 = uVar2 | 0x80;\n            *(*0x20 + -0x78) = 0x42b7f0;\n            fcn.0042bf60(0x21);\n            uVar5 = *0x557e48;\n            if (*0x557e48 < 0x106) {\n                *(*0x20 + -0x18) = *0x557e48;\n                *(*0x20 + -0x78) = 0x42b825;\n                fcn.0045a040(*0x557e48);\n                iVar3 = *(*0x20 + -0x18);\n                for (iVar4 = 0; iVar4 < 0x20; iVar4 = iVar4 + 1) {\n                    uVar5 = iVar3 + iVar4 * 2;\n                    if (0x20a < uVar5) goto code_r0x0042b9a5;\n                    *(uVar5 + 0x558aa0) = *((*(iVar4 + 0x558c8a) >> 4) + 0x482e44);\n                    if (0x20a < iVar3 + iVar4 * 2 + 1U) goto code_r0x0042b995;\n                    *(uVar5 + 0x558aa1) = *((*(iVar4 + 0x558c8a) & 0xf) + 0x482e44);\n                }\n                uVar5 = iVar3 + 0x40;\n                while( true ) {\n                    if (0x209 < uVar5) {\n                        *(*0x20 + -0x70) = _sym.imp.kernel32.dll_CreateFileA;\n                        *(*0x20 + -0x68) = 0x558aa0;\n                        *(*0x20 + -0x60) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                        *(*0x20 + -0x50) = 0;\n                        *(*0x20 + -0x48) = 3;\n                        *(*0x20 + -0x40) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                        *(*0x20 + -0x78) = 0x42b913;\n                        fcn.0042d860();\n                        *(*0x20 + -0x78) = 0x42b92c;\n                        fcn.0045ab80();\n                        if (*(*0x20 + -0x70) != 3) {\n                            *0x557c61 = 1;\n                            return;\n                        }\n                        **(*0x20 + -0x10) = *(*0x20 + -0x25);\n                        *(*0x20 + -0x78) = 0x42b957;\n                        fcn.004324c0();\n                        *(*0x20 + -0x78) = 0x42b968;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x78) = 0x42b96d;\n                        fcn.00432540();\n                        return;\n                    }\n                    if (0x20a < uVar5) break;\n                    *(uVar5 + 0x558aa0) = 0x41;\n                    uVar5 = uVar5 + 1;\n                }\n                *(*0x20 + -0x78) = 0x42b995;\n                fcn.00459720(0x20b);\ncode_r0x0042b995:\n                *(*0x20 + -0x78) = 0x42b9a5;\n                fcn.00459720(0x20b);\ncode_r0x0042b9a5:\n                uVar5 = 0x20b;\n                *(*0x20 + -0x78) = 0x42b9b2;\n                fcn.00459720(0x20b);\n            }\n            *(*0x20 + -0x78) = 0x42b9bc;\n            fcn.00459780(uVar5, 0x105);\n        }\n        *(puVar6 + -8) = 0x42b9c5;\n        fcn.00457040();\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1532
    },
    "00431700": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.00431700(void)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    int64_t in_RAX;\n    uchar uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t iVar8;\n    int64_t iVar9;\n    uint32_t uVar10;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar11;\n    \ncode_r0x00431700:\n    puVar7 = *0x20;\n    if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n        puVar7 = *0x20 + -0x70;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        iVar8 = *(*(unaff_R14 + 0x30) + 0x90);\n        if ((iVar8 == 0) || (*(iVar8 + 0x90) != 2)) {\n            *(*0x20 + 8) = in_RAX;\n            uVar3 = 0;\n            iVar5 = 0;\n            iVar6 = 0;\n            iVar4 = 0;\n            iVar8 = 0;\n            iVar9 = 0;\n            do {\n                *(*0x20 + -0x40) = iVar9;\n                *(*0x20 + -0x38) = iVar4;\n                *(*0x20 + -0x50) = iVar6;\n                *(*0x20 + -0x20) = iVar5;\n                *(*0x20 + -0x5a) = uVar3;\n                *(*0x20 + -0x30) = iVar8;\n                uVar10 = *(in_RAX + 0x90);\n                if (uVar10 < 5) {\n                    if (uVar10 != 1) {\n                        if (uVar10 == 2) {\n                            if (*(in_RAX + 0xb2) == '\\0') {\n                                bVar11 = false;\n                            }\n                            else if (*(in_RAX + 0xb1) == '\\0') {\n                                bVar11 = false;\n                            }\n                            else if (*(in_RAX + 0x10) == -0x522) {\n                                if (*(in_RAX + 0x30) == iVar5) {\n                                    bVar11 = *(iVar5 + 800) == iVar6;\n                                }\n                                else {\n                                    bVar11 = false;\n                                }\n                            }\n                            else {\n                                bVar11 = false;\n                            }\n                            if (!bVar11) {\n                                *(*0x20 + -0x78) = 0x431818;\n                                cVar2 = fcn.00434f20(0x1002);\n                                if (cVar2 == '\\0') {\n                                    iVar8 = *(*0x20 + -0x30);\n                                    iVar9 = *(*0x20 + -0x40);\n                                    uVar3 = *(*0x20 + -0x5a);\n                                    iVar5 = *(*0x20 + -0x20);\n                                    iVar6 = *(*0x20 + -0x50);\n                                    iVar4 = *(*0x20 + -0x38);\n                                }\n                                else {\n                                    iVar8 = *(*0x20 + 8);\n                                    *(iVar8 + 0xb1) = 0x101;\n                                    *(iVar8 + 0x10) = 0xfffffffffffffade;\n                                    iVar8 = *(iVar8 + 0x30);\n                                    *(*0x20 + -0x10) = iVar8;\n                                    iVar6 = *(iVar8 + 800);\n                                    *(*0x20 + -0x4c) = iVar6;\n                                    if (*(*0x20 + -0x20) == iVar8) {\n                                        bVar11 = iVar6 != *(*0x20 + -0x50);\n                                    }\n                                    else {\n                                        bVar11 = true;\n                                    }\n                                    *(*0x20 + -0x59) = bVar11;\n                                    *(*0x20 + -0x78) = 0x431885;\n                                    fcn.00434b60(2);\n                                    if ((*0x5580d8 == 0) && (*(*0x20 + -0x59) != '\\0')) {\n                                        *(*0x20 + -0x78) = 0x43189d;\n                                        fcn.0045afe0();\n                                        iVar4 = *(*0x20 + -0x38);\n                                        if (iVar4 <= *(*0x20 + -0x70)) {\n                                            *(*0x20 + -0x48) = *(*0x20 + -0x70);\n                                            *(*0x20 + -0x78) = 0x4318ce;\n                                            fcn.0042db60();\n                                            iVar4 = *(*0x20 + -0x48) + 5000;\n                                        }\n                                    }\n                                    else {\n                                        iVar4 = *(*0x20 + -0x38);\n                                    }\n                                    iVar8 = *(*0x20 + -0x30);\n                                    iVar9 = *(*0x20 + -0x40);\n                                    iVar5 = *(*0x20 + -0x10);\n                                    iVar6 = *(*0x20 + -0x4c);\n                                    uVar3 = *(*0x20 + -0x5a);\n                                }\n                            }\n                            goto code_r0x004319f0;\n                        }\n                        if (uVar10 < 3) goto code_r0x0043195a;\n                    }\ncode_r0x004319b2:\n                    *(*0x20 + -0x5a) = uVar3;\n                    *(*0x20 + -0x78) = 0x4319c6;\n                    cVar2 = fcn.00434f20(uVar10 | 0x1000);\n                    if (cVar2 != '\\0') {\n                        piVar1 = *(*0x20 + 8);\n                        *(piVar1 + 0xb1) = 0;\n                        piVar1[2] = *piVar1 + 0x13a0;\n                        return piVar1;\n                    }\n                    iVar8 = *(*0x20 + -0x30);\n                    iVar9 = *(*0x20 + -0x40);\n                    uVar3 = *(*0x20 + -0x5a);\n                    iVar5 = *(*0x20 + -0x20);\n                    iVar6 = *(*0x20 + -0x50);\n                    iVar4 = *(*0x20 + -0x38);\n                }\n                else {\n                    if (uVar10 == 6) {\n                        return NULL;\n                    }\n                    if (uVar10 != 8) {\n                        if (uVar10 == 9) {\n                            *(*0x20 + -0x78) = 0x43197a;\n                            cVar2 = fcn.004354c0(4);\n                            if (cVar2 != '\\0') {\n                                uVar10 = 4;\n                                uVar3 = 1;\n                                goto code_r0x004319b2;\n                            }\n                            iVar8 = *(*0x20 + -0x30);\n                            iVar9 = *(*0x20 + -0x40);\n                            uVar3 = *(*0x20 + -0x5a);\n                            iVar5 = *(*0x20 + -0x20);\n                            iVar6 = *(*0x20 + -0x50);\n                            iVar4 = *(*0x20 + -0x38);\n                        }\n                        else {\ncode_r0x0043195a:\n                            if ((uVar10 >> 0xc & 1) == 0) goto code_r0x00431b15;\n                        }\n                    }\n                }\ncode_r0x004319f0:\n                *(*0x20 + -0x38) = iVar4;\n                *(*0x20 + -0x50) = iVar6;\n                *(*0x20 + -0x20) = iVar5;\n                *(*0x20 + -0x5a) = uVar3;\n                if (iVar8 == 0) {\n                    *(*0x20 + -0x78) = 0x431a0c;\n                    fcn.0045afe0();\n                    iVar9 = *(*0x20 + -0x70) + 10000;\n                }\n                *(*0x20 + -0x40) = iVar9;\n                *(*0x20 + -0x78) = 0x431a35;\n                fcn.0045afe0();\n                if (*(*0x20 + -0x70) < *(*0x20 + -0x40)) {\n                    *(*0x20 + -0x70) = 10;\n                    *(*0x20 + -0x78) = 0x431a65;\n                    fcn.00458e20();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    iVar9 = *(*0x20 + -0x40);\n                }\n                else {\n                    *(*0x20 + -0x70) = 0x48a658;\n                    *(*0x20 + -0x78) = 0x431a96;\n                    fcn.00456f00();\n                    *(*0x20 + -0x78) = 0x431aaf;\n                    fcn.0045afe0();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    iVar9 = *(*0x20 + -0x70) + 5000;\n                }\n                iVar8 = *(*0x20 + -0x30) + 1;\n                in_RAX = *(*0x20 + 8);\n                iVar4 = *(*0x20 + -0x38);\n                iVar6 = *(*0x20 + -0x50);\n                iVar5 = *(*0x20 + -0x20);\n                uVar3 = *(*0x20 + -0x5a);\n            } while( true );\n        }\n        goto code_r0x00431c2b;\n    }\n    goto code_r0x00431c3d;\ncode_r0x00431b15:\n    *(*0x20 + -0x18) = unaff_R14;\n    *(*0x20 + -0x58) = *(in_RAX + 0x90);\n    *(*0x20 + -0x28) = *(in_RAX + 0x98);\n    *(*0x20 + -0x78) = 0x431b35;\n    fcn.004324c0();\n    *(*0x20 + -0x78) = 0x431b46;\n    fcn.00432dc0();\n    *(*0x20 + -0x78) = 0x431b50;\n    fcn.00432d40();\n    *(*0x20 + -0x78) = 0x431b65;\n    fcn.00432dc0();\n    *(*0x20 + -0x78) = 0x431b6f;\n    fcn.00432bc0();\n    *(*0x20 + -0x78) = 0x431b85;\n    fcn.00432dc0();\n    *(*0x20 + -0x78) = 0x431b90;\n    fcn.00432ac0();\n    *(*0x20 + -0x78) = 0x431b95;\n    fcn.00432720();\n    *(*0x20 + -0x78) = 0x431b9a;\n    fcn.00432540();\n    *(*0x20 + -0x54) = *(*(*0x20 + -0x18) + 0x90);\n    *(*0x20 + -0x28) = *(*(*0x20 + -0x18) + 0x98);\n    *(*0x20 + -0x78) = 0x431bba;\n    fcn.004324c0();\n    *(*0x20 + -0x78) = 0x431bcb;\n    fcn.00432dc0();\n    *(*0x20 + -0x78) = 0x431bd5;\n    fcn.00432d40();\n    *(*0x20 + -0x78) = 0x431be6;\n    fcn.00432dc0();\n    *(*0x20 + -0x78) = 0x431bf0;\n    fcn.00432bc0();\n    *(*0x20 + -0x78) = 0x431c05;\n    fcn.00432dc0();\n    *(*0x20 + -0x78) = 0x431c10;\n    fcn.00432ac0();\n    *(*0x20 + -0x78) = 0x431c15;\n    fcn.00432720();\n    *(*0x20 + -0x78) = 0x431c1a;\n    fcn.00432540();\n    *(*0x20 + -0x78) = 0x431c2b;\n    fcn.00430d40();\ncode_r0x00431c2b:\n    *(*0x20 + -0x78) = 0x431c3c;\n    in_RAX = fcn.00430d40();\ncode_r0x00431c3d:\n    *(puVar7 + 8) = in_RAX;\n    *(puVar7 + -8) = 0x431c47;\n    fcn.0045b6e0();\n    in_RAX = *(puVar7 + 8);\n    *0x20 = puVar7;\n    goto code_r0x00431700;\n}\n",
        "token_count": 3016
    },
    "00431f80": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00431f80(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint64_t *in_RAX;\n    int64_t iVar4;\n    ulong uVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    ulong unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = in_RAX[6];\n            if (*(uVar6 + 0x90) != in_RAX) {\n                return 0;\n            }\n            if ((((*(uVar6 + 0xa0) == 0) || (*(uVar6 + 0xd8) != 0)) || (*(uVar6 + 0xc0) != 0)) ||\n               ((*(uVar6 + 0xd0) != 0 || (*(*(uVar6 + 0xa0) + 4) != 1)))) {\n                return 0;\n            }\n            if ((arg1 < *in_RAX) || (arg1 - *in_RAX < *0x4f0258)) {\n                return 0;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x78) = 0x432027;\n            iVar4 = fcn.004478a0();\n            if (iVar4 == 0) {\n                return 0;\n            }\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = iVar4;\n            *(*0x20 + -0x78) = 0x432049;\n            iVar3 = fcn.00448720(0);\n            if (iVar3 != -1) {\n                return 0;\n            }\n            iVar4 = *(*0x20 + -0x18);\n            *(*0x20 + -0x20) = iVar4 + 0x2b;\n            if (*(iVar4 + 0x2b) < 2) {\n                iVar4 = 0;\n            }\n            else {\n                iVar7 = iVar4 + 0x2b + *(iVar4 + 0x20) * 4 + 1;\n                if ((iVar7 >> 2 & 1) != 0) {\n                    if ((iVar4 >> 2 & 1) != 0) {\n                        *(*0x20 + -0x38) = iVar7;\n                        *(*0x20 + -0x78) = 0x43209a;\n                        fcn.004324c0();\n                        *(*0x20 + -0x78) = 0x4320ab;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x78) = 0x4320b5;\n                        fcn.00432d40();\n                        *(*0x20 + -0x78) = 0x4320ba;\n                        fcn.00432720();\n                        *(*0x20 + -0x78) = 0x4320bf;\n                        fcn.00432540();\n                        iVar7 = *(*0x20 + -0x38);\n                    }\n                    iVar7 = iVar7 + 4;\n                }\n                iVar4 = *(iVar7 + 8);\n            }\n            if ((iVar4 == 0) || (iVar4 == 0x49e2a8)) {\n                return 0;\n            }\n            iVar7 = *(*0x20 + -0x10);\n            *(*0x20 + -0x78) = 0x432106;\n            uVar5 = fcn.00447f80();\n            *(*0x20 + -0x28) = uVar5;\n            *(*0x20 + -0x48) = iVar7;\n            iVar4 = *(*0x20 + -0x18);\n            if (*(iVar4 + 0x2b) < 4) {\n                iVar4 = 0;\n            }\n            else {\n                iVar8 = *(*0x20 + -0x20) + *(iVar4 + 0x20) * 4 + 1;\n                if ((iVar8 >> 2 & 1) != 0) {\n                    if ((iVar4 >> 2 & 1) != 0) {\n                        *(*0x20 + -0x40) = iVar8;\n                        *(*0x20 + -0x78) = 0x43214f;\n                        fcn.004324c0(iVar4, iVar8, iVar4);\n                        *(*0x20 + -0x78) = 0x432165;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x78) = 0x43216f;\n                        fcn.00432d40();\n                        *(*0x20 + -0x78) = 0x432174;\n                        fcn.00432720();\n                        *(*0x20 + -0x78) = 0x432179;\n                        fcn.00432540();\n                        uVar5 = *(*0x20 + -0x28);\n                        iVar8 = *(*0x20 + -0x40);\n                        iVar7 = *(*0x20 + -0x48);\n                    }\n                    iVar8 = iVar8 + 4;\n                }\n                iVar4 = *(iVar8 + 0x18);\n            }\n            if (iVar4 == 0) goto code_r0x00432200;\n            *(*0x20 + -0x30) = iVar4;\n            unaff_RBX = *(*0x20 + -0x10);\n            unaff_RDI = *(*0x20 + 0x10);\n            *(*0x20 + -0x78) = 0x4321c5;\n            iVar3 = fcn.00448680(2);\n            if (iVar3 < 0) {\n                iVar7 = *(*0x20 + -0x48);\n                uVar5 = *(*0x20 + -0x28);\n                goto code_r0x00432200;\n            }\n            uVar6 = iVar3;\n            if (uVar6 < 0x100000) {\n                iVar4 = uVar6 * 5;\n                uVar1 = *(*(*0x20 + -0x30) + 0xc + uVar6 * 0x14);\n                iVar7 = *(*0x20 + -0x10);\n                *(*0x20 + -0x78) = 0x4321f4;\n                uVar5 = fcn.004480e0(uVar1);\ncode_r0x00432200:\n                *(*0x20 + -0x48) = iVar7;\n                *(*0x20 + -0x28) = uVar5;\n                if (iVar7 < 8) {\n                    cVar2 = '\\0';\n                }\n                else {\n                    *(*0x20 + -0x78) = 0x432225;\n                    cVar2 = fcn.004021a0(8, iVar4);\n                    iVar7 = *(*0x20 + -0x48);\n                }\n                if (cVar2 == '\\0') {\n                    if (iVar7 < 0x11) {\n                        cVar2 = '\\0';\n                    }\n                    else {\n                        *(*0x20 + -0x78) = 0x43225b;\n                        cVar2 = fcn.004021a0(0x11, iVar4);\n                        iVar7 = *(*0x20 + -0x48);\n                    }\n                }\n                else {\n                    cVar2 = '\\x01';\n                }\n                if (cVar2 == '\\0') {\n                    if (iVar7 < 8) {\n                        cVar2 = '\\0';\n                    }\n                    else {\n                        *(*0x20 + -0x78) = 0x432286;\n                        cVar2 = fcn.004021a0(8, iVar4);\n                    }\n                    if (cVar2 == '\\0') {\n                        return 1;\n                    }\n                }\n                return 0;\n            }\n            arg1 = 0x100000;\n            *(*0x20 + -0x78) = 0x4322ff;\n            in_RAX = fcn.00459720(0x100000);\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + 0x18) = arg1;\n        *(puVar9 + 0x20) = unaff_RDI;\n        *(puVar9 + -8) = 0x432319;\n        fcn.00457040();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        arg1 = *(puVar9 + 0x18);\n        unaff_RDI = *(puVar9 + 0x20);\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 2082
    },
    "00434b60": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00434b60(ulong arg1)\n\n{\n    int64_t in_RAX;\n    uint32_t unaff_EBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 0x14) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            if ((unaff_EBX - 0x1001 < 4) || (unaff_EBX == 0x1009)) {\n                if (arg1 == (unaff_EBX & 0xffffefff)) {\n                    LOCK();\n                    if (unaff_EBX == *(in_RAX + 0x90)) {\n                        *(in_RAX + 0x90) = arg1;\n                        return unaff_EBX;\n                    }\n                }\n                *(*0x20 + -0x48) = 0x434bcb;\n                fcn.004324c0();\n                *(*0x20 + -0x48) = 0x434bdc;\n                fcn.00432dc0();\n                *(*0x20 + -0x48) = 0x434be6;\n                fcn.00432d40();\n                *(*0x20 + -0x48) = 0x434bf7;\n                fcn.00432dc0();\n                *(*0x20 + -0x48) = 0x434c05;\n                fcn.00432c20();\n                *(*0x20 + -0x48) = 0x434c16;\n                fcn.00432dc0();\n                *(*0x20 + -0x48) = 0x434c25;\n                fcn.00432c20();\n                *(*0x20 + -0x48) = 0x434c2a;\n                fcn.00432720();\n                *(*0x20 + -0x48) = 0x434c2f;\n                fcn.00432540();\n                *(*0x20 + -0x18) = unaff_R14;\n                *(*0x20 + -0x24) = *(*(*0x20 + 8) + 0x90);\n                *(*0x20 + -0x20) = *(*(*0x20 + 8) + 0x98);\n                *(*0x20 + -0x48) = 0x434c55;\n                fcn.004324c0();\n                *(*0x20 + -0x48) = 0x434c66;\n                fcn.00432dc0();\n                *(*0x20 + -0x48) = 0x434c70;\n                fcn.00432d40();\n                *(*0x20 + -0x48) = 0x434c85;\n                fcn.00432dc0();\n                *(*0x20 + -0x48) = 0x434c8f;\n                fcn.00432bc0();\n                *(*0x20 + -0x48) = 0x434ca5;\n                fcn.00432dc0();\n                *(*0x20 + -0x48) = 0x434cb0;\n                fcn.00432ac0();\n                *(*0x20 + -0x48) = 0x434cb5;\n                fcn.00432720();\n                *(*0x20 + -0x48) = 0x434cba;\n                fcn.00432540();\n                *(*0x20 + -0x2c) = *(*(*0x20 + -0x18) + 0x90);\n                *(*0x20 + -0x20) = *(*(*0x20 + -0x18) + 0x98);\n                *(*0x20 + -0x48) = 0x434cda;\n                fcn.004324c0();\n                *(*0x20 + -0x48) = 0x434ceb;\n                fcn.00432dc0();\n                *(*0x20 + -0x48) = 0x434cf5;\n                fcn.00432d40();\n                *(*0x20 + -0x48) = 0x434d06;\n                fcn.00432dc0();\n                *(*0x20 + -0x48) = 0x434d10;\n                fcn.00432bc0();\n                *(*0x20 + -0x48) = 0x434d25;\n                fcn.00432dc0();\n                *(*0x20 + -0x48) = 0x434d30;\n                fcn.00432ac0();\n                *(*0x20 + -0x48) = 0x434d35;\n                fcn.00432720();\n                *(*0x20 + -0x48) = 0x434d3a;\n                fcn.00432540();\n                *(*0x20 + -0x48) = 0x434d4b;\n                fcn.00430d40();\n            }\n            *(*0x20 + -0x48) = 0x434d50;\n            fcn.004324c0();\n            *(*0x20 + -0x48) = 0x434d65;\n            fcn.00432dc0();\n            *(*0x20 + -0x48) = 0x434d6f;\n            fcn.00432d40();\n            *(*0x20 + -0x48) = 0x434d85;\n            fcn.00432dc0();\n            *(*0x20 + -0x48) = 0x434d90;\n            fcn.00432c20();\n            *(*0x20 + -0x48) = 0x434da5;\n            fcn.00432dc0();\n            *(*0x20 + -0x48) = 0x434db0;\n            fcn.00432c20();\n            *(*0x20 + -0x48) = 0x434db5;\n            fcn.00432720();\n            *(*0x20 + -0x48) = 0x434dba;\n            fcn.00432540();\n            *(*0x20 + -0x10) = unaff_R14;\n            *(*0x20 + -0x28) = *(*(*0x20 + 8) + 0x90);\n            *(*0x20 + -0x20) = *(*(*0x20 + 8) + 0x98);\n            *(*0x20 + -0x48) = 0x434de5;\n            fcn.004324c0();\n            *(*0x20 + -0x48) = 0x434df6;\n            fcn.00432dc0();\n            *(*0x20 + -0x48) = 0x434e05;\n            fcn.00432d40();\n            *(*0x20 + -0x48) = 0x434e16;\n            fcn.00432dc0();\n            *(*0x20 + -0x48) = 0x434e25;\n            fcn.00432bc0();\n            *(*0x20 + -0x48) = 0x434e36;\n            fcn.00432dc0();\n            *(*0x20 + -0x48) = 0x434e45;\n            fcn.00432ac0();\n            *(*0x20 + -0x48) = 0x434e4a;\n            fcn.00432720();\n            *(*0x20 + -0x48) = 0x434e4f;\n            fcn.00432540();\n            arg1._0_4_ = *(*(*0x20 + -0x10) + 0x90);\n            *(*0x20 + -0x30) = arg1;\n            *(*0x20 + -0x20) = *(*(*0x20 + -0x10) + 0x98);\n            *(*0x20 + -0x48) = 0x434e6f;\n            fcn.004324c0();\n            *(*0x20 + -0x48) = 0x434e85;\n            fcn.00432dc0();\n            *(*0x20 + -0x48) = 0x434e8f;\n            fcn.00432d40();\n            *(*0x20 + -0x48) = 0x434ea5;\n            fcn.00432dc0();\n            *(*0x20 + -0x48) = 0x434eaf;\n            fcn.00432bc0();\n            *(*0x20 + -0x48) = 0x434ec5;\n            fcn.00432dc0();\n            *(*0x20 + -0x48) = 0x434ed0;\n            fcn.00432ac0();\n            *(*0x20 + -0x48) = 0x434ed5;\n            fcn.00432720();\n            *(*0x20 + -0x48) = 0x434eda;\n            fcn.00432540();\n            unaff_EBX = 0x37;\n            *(*0x20 + -0x48) = 0x434eeb;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_EBX;\n        *(puVar1 + 0x14) = arg1;\n        *(puVar1 + -8) = 0x434efe;\n        fcn.00457040();\n        in_RAX = *(puVar1 + 8);\n        unaff_EBX = *(puVar1 + 0x10);\n        arg1._0_4_ = *(puVar1 + 0x14);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 2283
    },
    "00434f20": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00434f20(ulong arg1)\n\n{\n    int64_t in_RAX;\n    uint32_t unaff_EBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar2;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 0x14) = arg1;\n            if ((unaff_EBX - 1 < 4) && (arg1 == (unaff_EBX | 0x1000))) {\n                LOCK();\n                bVar2 = unaff_EBX == *(in_RAX + 0x90);\n                if (bVar2) {\n                    *(in_RAX + 0x90) = arg1;\n                }\n                return arg1 & 0xffffff00 | bVar2;\n            }\n            *(*0x20 + -0x20) = 0x434f73;\n            fcn.004324c0();\n            *(*0x20 + -0x20) = 0x434f85;\n            fcn.00432dc0();\n            *(*0x20 + -0x20) = 0x434f90;\n            fcn.00432c20();\n            *(*0x20 + -0x20) = 0x434fa5;\n            fcn.00432dc0();\n            *(*0x20 + -0x20) = 0x434fb0;\n            fcn.00432c20();\n            *(*0x20 + -0x20) = 0x434fb5;\n            fcn.00432720();\n            *(*0x20 + -0x20) = 0x434fba;\n            fcn.00432540();\n            unaff_EBX = 0x10;\n            *(*0x20 + -0x20) = 0x434fcb;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_EBX;\n        *(puVar1 + 0x14) = arg1;\n        *(puVar1 + -8) = 0x434fde;\n        fcn.00457040();\n        in_RAX = *(puVar1 + 8);\n        unaff_EBX = *(puVar1 + 0x10);\n        arg1._0_4_ = *(puVar1 + 0x14);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 661
    },
    "004386e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.004386e0(void)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    uchar uVar10;\n    uint64_t arg1;\n    uint32_t uVar11;\n    uint64_t arg1_00;\n    uint64_t arg1_01;\n    int64_t unaff_R14;\n    bool bVar12;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar5 = *(*(unaff_R14 + 0x30) + 0xa0);\n            *(*0x20 + -0x10) = uVar5;\n            iVar4 = 0;\n            iVar8 = 0;\n            uVar10 = 0;\n            while( true ) {\n                if (3 < iVar4) {\n                    return 0;\n                }\n                iVar2 = *(unaff_R14 + 0x30);\n                uVar11 = *(iVar2 + 0xf0);\n                uVar1 = *(iVar2 + 0xf4);\n                *(iVar2 + 0xf0) = uVar1;\n                uVar11 = uVar11 << 0x11 ^ uVar11;\n                uVar11 = uVar1 >> 0x10 ^ uVar11 >> 7 ^ uVar1 ^ uVar11;\n                *(iVar2 + 0xf4) = uVar11;\n                uVar11 = uVar11 + uVar1;\n                if (*0x504060 == 0) goto code_r0x00438a2a;\n                if (*0x504070 == 0) goto code_r0x00438a25;\n                uVar6 = uVar11 % (*0x504070 & 0xffffffff);\n                arg1_01 = *0x504070;\n                if (*0x504070 <= uVar6) break;\n                *(*0x20 + -0x50) = iVar4;\n                uVar1 = *(*0x504068 + uVar6 * 4);\n                *(*0x20 + -0x28) = 0;\n                *(*0x20 + -0x24) = *0x504060;\n                *(*0x20 + -0x20) = uVar11 % *0x504060;\n                *(*0x20 + -0x1c) = uVar1;\n                uVar6 = uVar1 & 0xffffff00 | iVar4 == 3;\n                *(*0x20 + -0x5b) = iVar4 == 3;\n                while (*(*0x20 + -0x24) != *(*0x20 + -0x28)) {\n                    if (*0x5048a0 != 0) {\n                        return 0;\n                    }\n                    uVar11 = *(*0x20 + -0x20);\n                    arg1 = *0x503f48;\n                    if (*0x503f48 <= uVar11) {\ncode_r0x00438a15:\n                        *(*0x20 + -0x80) = 0x438a1d;\n                        fcn.00459720(arg1);\n                        goto code_r0x00438a1d;\n                    }\n                    arg1 = *(*0x503f40 + uVar11 * 8);\n                    arg1_00 = *0x503f40;\n                    if (uVar5 != arg1) {\n                        if (iVar4 != 3) {\n                            bVar12 = false;\ncode_r0x0043888d:\n                            if (bVar12) {\n                                *(*0x20 + -0x18) = arg1;\n                                *(*0x20 + -0x30) = iVar8;\n                                *(*0x20 + -0x5a) = uVar10;\n                                *(*0x20 + -0x80) = 0x4388b0;\n                                iVar2 = fcn.004395c0();\n                                if (in_RAX == 0) {\n                                    iVar7 = *(*0x20 + -0x30);\ncode_r0x004388cc:\n                                    iVar8 = iVar7;\n                                }\n                                else {\n                                    iVar7 = *(*0x20 + -0x30);\n                                    iVar8 = in_RAX;\n                                    if ((iVar7 != 0) && (iVar7 <= in_RAX)) goto code_r0x004388cc;\n                                }\n                                if (iVar4 == '\\0') {\n                                    uVar10 = *(*0x20 + -0x5a);\n                                }\n                                else {\n                                    *(*0x20 + -0x58) = iVar2;\n                                    *(*0x20 + -0x38) = iVar8;\n                                    *(*0x20 + -0x80) = 0x4388ee;\n                                    iVar4 = fcn.0043f1e0();\n                                    if (iVar4 != 0) {\n                                        return iVar4;\n                                    }\n                                    iVar2 = *(*0x20 + -0x58);\n                                    iVar8 = *(*0x20 + -0x38);\n                                    uVar10 = 1;\n                                }\n                                uVar6 = *(*0x20 + -0x5b);\n                                arg1 = *(*0x20 + -0x18);\n                                uVar5 = *(*0x20 + -0x10);\n                                iVar4 = *(*0x20 + -0x50);\n                                in_RAX = iVar2;\n                            }\n                            uVar3 = *(*0x20 + -0x20) >> 5;\n                            arg1_00 = *0x503fa8;\n                            arg1_01 = *0x503fa0;\n                            if (uVar3 < *0x503fa8) {\n                                uVar11 = *(*0x503fa0 + uVar3 * 4);\n                                arg1_00 = uVar11;\n                                if ((uVar11 >> (*(*0x20 + -0x20) & 0x1f) & 1) == 0) {\n                                    *(*0x20 + -0x40) = iVar8;\n                                    *(*0x20 + -0x59) = uVar10;\n                                    *(*0x20 + -0x48) = in_RAX;\n                                    *(*0x20 + -0x80) = 0x438972;\n                                    iVar4 = fcn.0043f560(uVar6);\n                                    if (iVar4 != 0) {\n                                        return iVar4;\n                                    }\n                                    iVar4 = *(*0x20 + -0x50);\n                                    uVar6 = *(*0x20 + -0x5b);\n                                    iVar8 = *(*0x20 + -0x40);\n                                    uVar10 = *(*0x20 + -0x59);\n                                    in_RAX = *(*0x20 + -0x48);\n                                    uVar5 = *(*0x20 + -0x10);\n                                }\n                                goto code_r0x00438995;\n                            }\n                            goto code_r0x00438a05;\n                        }\n                        arg1_00 = *0x503fe8;\n                        arg1_01 = *0x503fe0;\n                        if (uVar11 >> 5 < *0x503fe8) {\n                            bVar12 = (*(*0x503fe0 + (uVar11 >> 5) * 4) >> (uVar11 & 0x1f) & 1) != 0;\n                            goto code_r0x0043888d;\n                        }\ncode_r0x00438a0d:\n                        *(*0x20 + -0x80) = 0x438a15;\n                        fcn.00459720(arg1_00);\n                        goto code_r0x00438a15;\n                    }\ncode_r0x00438995:\n                    *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\n                    uVar11 = *(*0x20 + -0x24);\n                    arg1 = uVar11;\n                    if (uVar11 == 0) {\n                        *(*0x20 + -0x80) = 0x438a05;\n                        fcn.0042e820();\ncode_r0x00438a05:\n                        *(*0x20 + -0x80) = 0x438a0d;\n                        fcn.00459720(arg1_00);\n                        goto code_r0x00438a0d;\n                    }\n                    *(*0x20 + -0x20) = (*(*0x20 + -0x20) + *(*0x20 + -0x1c)) % uVar11;\n                }\n                iVar4 = iVar4 + 1;\n            }\ncode_r0x00438a1d:\n            *(*0x20 + -0x80) = 0x438a25;\n            fcn.00459720(arg1_01);\ncode_r0x00438a25:\n            *(*0x20 + -0x80) = 0x438a2a;\n            fcn.0042e820();\ncode_r0x00438a2a:\n            *(*0x20 + -0x80) = 0x438a2f;\n            in_RAX = fcn.0042e820();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + -8) = 0x438a3a;\n        fcn.00457040();\n        in_RAX = *(puVar9 + 8);\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 2192
    },
    "00442200": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004422d8)\n\nulong fcn.00442200(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t in_EAX;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (0x5f < in_EAX) {\n                return 0;\n            }\n            LOCK();\n            uVar4 = in_EAX >> 5;\n            iVar3 = *0x55807c + 1;\n            if (uVar4 < 3) {\n                if ((*(uVar4 * 4 + 0x558054) >> (in_EAX & 0x1f) & 1) == 0) {\n                    LOCK();\n                    return 0;\n                }\n                do {\n                    uVar2 = *(uVar4 * 4 + 0x558048);\n                    if ((uVar2 >> (in_EAX & 0x1f) & 1) != 0) {\n                        LOCK();\n                        return 1;\n                    }\n                    puVar1 = uVar4 * 4 + 0x558048;\n                    LOCK();\n                } while (uVar2 != *puVar1);\n                *0x55807c = *0x55807c + 1;\n                *puVar1 = uVar2 | 1 << (in_EAX & 0x1f);\ncode_r0x004422b6:\n                while (*0x558078 < 2) {\n                    if (*0x558078 == 0) {\n                        LOCK();\n                        *0x558078 = 2;\n                        goto code_r0x00442336;\n                    }\n                    LOCK();\n                    if (*0x558078 == 1) {\n                        *0x558078 = 0;\n                        *(*0x20 + -0x20) = 0x44232f;\n                        fcn.00409600();\ncode_r0x00442336:\n                        LOCK();\n                        *0x55807c = *0x55807c + -1;\n                        return 1;\n                    }\n                }\n                if (*0x558078 == 2) goto code_r0x00442336;\n                if (*0x558078 == 3) {\n                    *(*0x20 + -0x20) = 0x442315;\n                    fcn.00436e00();\n                    goto code_r0x004422b6;\n                }\n                *(*0x20 + -0x20) = 0x44235f;\n                fcn.00430d40();\n                iVar3 = *0x55807c;\n            }\n            *0x55807c = iVar3;\n            *(*0x20 + -0x20) = 0x442369;\n            in_EAX = fcn.00459720(3);\n        }\n        *(puVar5 + 8) = in_EAX;\n        *(puVar5 + -8) = 0x442373;\n        fcn.00457040();\n        in_EAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 802
    },
    "00449b20": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar fcn.00449b20(int64_t *arg1, ulong noname_1, int64_t arg3, int64_t arg4)\n\n{\n    int32_t *piVar1;\n    uint64_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    char cVar8;\n    int64_t *in_RAX;\n    int32_t iVar9;\n    ulong arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t iVar11;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x30) = arg3;\n            if (0 < unaff_RBX) {\n                if (-1 < arg1) break;\n                *(*0x20 + -0x48) = 0x449fd6;\n                fcn.00430d40();\n            }\n            unaff_RBX = 0x1b;\n            *(*0x20 + -0x48) = 0x449fe7;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + 0x28) = unaff_RSI;\n        *(puVar10 + 0x30) = arg3;\n        *(puVar10 + 0x38) = arg4;\n        *(puVar10 + -8) = 0x44a010;\n        fcn.00457040();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        unaff_RSI = *(puVar10 + 0x28);\n        arg3 = *(puVar10 + 0x30);\n        arg4 = *(puVar10 + 0x38);\n        *0x20 = puVar10;\n    } while( true );\n    *(*0x20 + 0x20) = unaff_RDI;\n    *(*0x20 + 0x18) = arg1;\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + 0x38) = arg4;\n    *(*0x20 + 0x30) = arg3;\n    *(*0x20 + -0x10) = unaff_RSI;\ncode_r0x00449b7c:\n    while( true ) {\n        while (uVar3 = *(in_RAX + 8),  3 < uVar3) {\n            if (uVar3 < 6) {\n                if (uVar3 != 4) goto code_r0x00449c09;\n                goto code_r0x00449cea;\n            }\n            if (uVar3 == 6) {\n                *(*0x20 + -0x40) = 0x48a658;\n                *(*0x20 + -0x48) = 0x449d85;\n                fcn.00456f00();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                unaff_RSI = *(*0x20 + -0x10);\n                unaff_RDI = *(*0x20 + 0x20);\n                arg3 = *(*0x20 + 0x30);\n                arg4 = *(*0x20 + 0x38);\n                in_RAX = *(*0x20 + 8);\n            }\n            else {\n                if (uVar3 < 9) goto code_r0x00449c7a;\n                if (uVar3 == 9) goto code_r0x00449cea;\n                *(*0x20 + -0x48) = 0x449d45;\n                fcn.0044b460();\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                unaff_RSI = *(*0x20 + -0x10);\n                unaff_RDI = *(*0x20 + 0x20);\n                arg3 = *(*0x20 + 0x30);\n                arg4 = *(*0x20 + 0x38);\n                in_RAX = *(*0x20 + 8);\n            }\n        }\n        if (1 < uVar3) break;\n        if (uVar3 == 0) {\ncode_r0x00449c09:\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            iVar11 = *(unaff_R14 + 0x30);\n            LOCK();\n            if (uVar3 == *(in_RAX + 8)) {\n                *(in_RAX + 8) = 6;\n                cVar8 = '\\x01';\n                arg2 = 0;\n                goto code_r0x00449df2;\n            }\n            iVar9 = *(iVar11 + 0xd8);\n            *(iVar11 + 0xd8) = iVar9 + -1;\n            if ((iVar9 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n        }\n        else {\ncode_r0x00449c7a:\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            iVar11 = *(unaff_R14 + 0x30);\n            LOCK();\n            if (uVar3 == *(in_RAX + 8)) {\n                *(in_RAX + 8) = 6;\n                cVar8 = '\\0';\n                arg2 = 1;\n                goto code_r0x00449df2;\n            }\n            iVar9 = *(iVar11 + 0xd8);\n            *(iVar11 + 0xd8) = iVar9 + -1;\n            if ((iVar9 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n        }\n    }\n    if (uVar3 == 2) {\ncode_r0x00449cea:\n        *(*0x20 + -0x40) = 0x48a658;\n        *(*0x20 + -0x48) = 0x449cfa;\n        fcn.00456f00();\n        unaff_R14 = **(in_GS_OFFSET + 0x28);\n        arg1 = *(*0x20 + 0x18);\n        unaff_RBX = *(*0x20 + 0x10);\n        unaff_RSI = *(*0x20 + -0x10);\n        unaff_RDI = *(*0x20 + 0x20);\n        arg3 = *(*0x20 + 0x30);\n        arg4 = *(*0x20 + 0x38);\n        in_RAX = *(*0x20 + 8);\n        goto code_r0x00449b7c;\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar11 = *(unaff_R14 + 0x30);\n    LOCK();\n    if (uVar3 != *(in_RAX + 8)) {\n        iVar9 = *(iVar11 + 0xd8);\n        *(iVar11 + 0xd8) = iVar9 + -1;\n        if ((iVar9 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        goto code_r0x00449b7c;\n    }\n    *(in_RAX + 8) = 6;\n    LOCK();\n    *(*in_RAX + 0x26fc) = *(*in_RAX + 0x26fc) + -1;\n    cVar8 = '\\0';\n    arg2 = 0;\ncode_r0x00449df2:\n    in_RAX[2] = arg1;\n    if (*0x557ed0 == 0) {\n        in_RAX[3] = unaff_RDI;\n    }\n    else {\n        arg1 = in_RAX + 3;\n        *(*0x20 + -0x48) = 0x449e1a;\n        cVar8 = fcn.004593a0(arg1, unaff_RDI, arg3, arg4);\n    }\n    in_RAX[4] = unaff_RSI;\n    if (*0x557ed0 == 0) {\n        in_RAX[5] = arg3;\n    }\n    else {\n        *(*0x20 + -0x48) = 0x449e39;\n        cVar8 = fcn.00459400(arg1, arg2, arg3, arg4);\n    }\n    *(*0x20 + -0x28) = iVar11;\n    *(*0x20 + -0x2d) = arg2;\n    in_RAX[6] = arg4;\n    if (cVar8 == '\\0') {\n        in_RAX[7] = unaff_RBX;\n        iVar9 = 8;\n        if (in_RAX[1] != unaff_RBX && unaff_RBX <= in_RAX[1]) {\n            iVar9 = 7;\n        }\n        iVar5 = *in_RAX;\n        if (iVar9 == 7) {\n            do {\n                uVar6 = *(iVar5 + 0x1670);\n                if ((uVar6 != 0) && (uVar6 < unaff_RBX)) break;\n                LOCK();\n                puVar2 = iVar5 + 0x1670;\n                uVar7 = *puVar2;\n                *puVar2 = *puVar2 ^ (uVar6 == uVar7) * (*puVar2 ^ unaff_RBX);\n            } while (uVar6 != uVar7);\n        }\n        LOCK();\n        if (*(in_RAX + 8) == 6) {\n            *(in_RAX + 8) = iVar9;\n        }\n        else {\n            *(*0x20 + -0x2c) = iVar9;\n            *(*0x20 + -0x48) = 0x449f34;\n            fcn.0044b460();\n            iVar9 = *(*0x20 + -0x2c);\n            iVar11 = *(*0x20 + -0x28);\n        }\n        iVar4 = *(iVar11 + 0xd8);\n        *(iVar11 + 0xd8) = iVar4 + -1;\n        if ((iVar4 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        if (iVar9 == 7) {\n            *(*0x20 + -0x48) = 0x449f86;\n            fcn.00438dc0();\n        }\n    }\n    else {\n        in_RAX[1] = unaff_RBX;\n        iVar11 = *(*(unaff_R14 + 0x30) + 0xa0);\n        *(*0x20 + -0x18) = iVar11;\n        *(*0x20 + -0x20) = iVar11 + 0x26d8;\n        *(*0x20 + -0x48) = 0x449e99;\n        fcn.00409300();\n        *(*0x20 + -0x48) = 0x449ea8;\n        fcn.00449300();\n        *(*0x20 + -0x48) = 0x449eb4;\n        fcn.00409520();\n        LOCK();\n        if (*(*(*0x20 + 8) + 0x40) == 6) {\n            *(*(*0x20 + 8) + 0x40) = 1;\n        }\n        else {\n            *(*0x20 + -0x48) = 0x449ed4;\n            fcn.0044b460();\n        }\n        iVar9 = *(*(*0x20 + -0x28) + 0xd8);\n        *(*(*0x20 + -0x28) + 0xd8) = iVar9 + -1;\n        if ((iVar9 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        *(*0x20 + -0x48) = 0x449f0a;\n        fcn.00438dc0();\n    }\n    return *(*0x20 + -0x2d);\n}\n",
        "token_count": 3104
    },
    "0044a040": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044a040(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    ulong *puVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    iVar3 = 0;\n    do {\n        if (arg1 <= iVar3) {\n            return;\n        }\n        puVar2 = *(unaff_RBX + iVar3 * 8);\ncode_r0x0044a15a:\n        do {\n            while (uVar1 = *(puVar2 + 8),  uVar1 < 4) {\n                if (uVar1 < 2) {\n                    if (uVar1 == 0) {\ncode_r0x0044a234:\n                        fcn.0044b460();\n                    }\n                    else {\n                        LOCK();\n                        if (uVar1 == *(puVar2 + 8)) {\n                            *(puVar2 + 8) = 9;\n                            *puVar2 = 0;\n                            fcn.00449300();\n                            LOCK();\n                            if (*(puVar2 + 8) == 9) {\n                                *(puVar2 + 8) = 1;\n                            }\n                            else {\n                                fcn.0044b460();\n                            }\n                            goto code_r0x0044a06b;\n                        }\n                    }\n                }\n                else if (uVar1 == 2) {\ncode_r0x0044a22d:\n                    fcn.0044b460();\n                }\n                else {\n                    LOCK();\n                    if (uVar1 == *(puVar2 + 8)) {\n                        *(puVar2 + 8) = 5;\n                        *puVar2 = 0;\n                        goto code_r0x0044a06b;\n                    }\n                }\n            }\n            if (uVar1 < 6) {\n                if (uVar1 == 4) goto code_r0x0044a22d;\n                goto code_r0x0044a234;\n            }\n            if (uVar1 == 6) {\n                fcn.00456f00();\n                goto code_r0x0044a15a;\n            }\n            if (8 < uVar1) {\n                if (uVar1 == 9) goto code_r0x0044a22d;\n                fcn.0044b460();\n                goto code_r0x0044a15a;\n            }\n            LOCK();\n        } while (uVar1 != *(puVar2 + 8));\n        *(puVar2 + 8) = 9;\n        puVar2[1] = puVar2[7];\n        *puVar2 = 0;\n        fcn.00449300();\n        LOCK();\n        if (*(puVar2 + 8) == 9) {\n            *(puVar2 + 8) = 1;\n        }\n        else {\n            fcn.0044b460();\n        }\ncode_r0x0044a06b:\n        iVar3 = iVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 706
    },
    "0044a2a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044a2a0(void)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t *noname_0;\n    uint64_t uVar4;\n    uint64_t arg1;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t *arg1_00;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*(in_RAX + 0x1670) == 0) || (unaff_RBX < *(in_RAX + 0x1670))) {\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(in_RAX + 0x1670) = 0;\n            noname_0 = NULL;\n            arg1 = 0;\n            unaff_RBX = 0;\n            iVar2 = 0;\n            while( true ) {\n                arg1_00 = *(in_RAX + 0x26e8);\n                if (arg1_00 <= noname_0) {\n                    if (0 < arg1) {\n                        *(*0x20 + -0x88) = 0x44a5a5;\n                        fcn.0044a600(arg1);\n                    }\n                    return;\n                }\n                if (arg1_00 <= noname_0) goto code_r0x0044a5c5;\n                arg1_00 = *(*(in_RAX + 0x26e0) + noname_0 * 8);\n                if (in_RAX != *arg1_00) break;\n                *(*0x20 + -0x30) = noname_0;\n                *(*0x20 + -0x18) = arg1_00;\n                *(*0x20 + -0x38) = unaff_RBX;\n                *(*0x20 + -0x40) = arg1;\n                *(*0x20 + -0x10) = iVar2;\n                uVar1 = *(arg1_00 + 8);\n                if (uVar1 < 4) {\n                    if (uVar1 < 2) {\n                        if (uVar1 == 0) {\ncode_r0x0044a4ee:\n                            *(*0x20 + -0x88) = 0x44a4f3;\n                            fcn.0044b460();\n                            in_RAX = *(*0x20 + 8);\n                            noname_0 = *(*0x20 + -0x30);\n                            unaff_RBX = *(*0x20 + -0x38);\n                            arg1 = *(*0x20 + -0x40);\n                            iVar2 = *(*0x20 + -0x10);\n                        }\n                    }\n                    else {\n                        if (uVar1 == 2) goto code_r0x0044a4ee;\n                        LOCK();\n                        if (uVar1 == *(arg1_00 + 8)) {\n                            *(arg1_00 + 8) = 4;\n                            *(*0x20 + -0x88) = 0x44a395;\n                            iVar2 = fcn.00449760(noname_0, arg1);\n                            LOCK();\n                            if (*(*(*0x20 + -0x18) + 0x40) == 4) {\n                                *(*(*0x20 + -0x18) + 0x40) = 5;\n                            }\n                            else {\n                                *(*0x20 + -0x20) = iVar2;\n                                *(*0x20 + -0x88) = 0x44a3bd;\n                                fcn.0044b460();\n                                iVar2 = *(*0x20 + -0x20);\n                            }\n                            in_RAX = *(*0x20 + 8);\n                            LOCK();\n                            *(in_RAX + 0x26fc) = *(in_RAX + 0x26fc) + -1;\n                            noname_0 = iVar2 + -1;\n                            arg1 = *(*0x20 + -0x40);\n                            unaff_RBX = *(*0x20 + -0x38);\n                            iVar2 = *(*0x20 + -0x10);\n                        }\n                    }\n                }\n                else if (uVar1 < 7) {\n                    if (uVar1 < 6) goto code_r0x0044a4ee;\n                    if (uVar1 != 6) goto code_r0x0044a51a;\n                    *(*0x20 + -0x80) = 0x48a658;\n                    *(*0x20 + -0x88) = 0x44a556;\n                    fcn.00456f00();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    noname_0 = *(*0x20 + -0x30) + -1;\n                    in_RAX = *(*0x20 + 8);\n                    unaff_RBX = *(*0x20 + -0x38);\n                    arg1 = *(*0x20 + -0x40);\n                    iVar2 = *(*0x20 + -0x10);\n                }\n                else if (uVar1 < 9) {\n                    LOCK();\n                    if (uVar1 == *(arg1_00 + 8)) {\n                        *(arg1_00 + 8) = 9;\n                        iVar2 = arg1_00[7];\n                        arg1_00[1] = iVar2;\n                        *(*0x20 + -0x88) = 0x44a446;\n                        iVar3 = fcn.00449760(noname_0, iVar2);\n                        unaff_RBX = *(*0x20 + -0x40);\n                        arg1 = unaff_RBX + 1;\n                        if (*(*0x20 + -0x38) < arg1) {\n                            *(*0x20 + -0x28) = iVar3;\n                            iVar3 = *(*0x20 + -0x10);\n                            *(*0x20 + -0x88) = 0x44a478;\n                            iVar2 = fcn.004425c0(unaff_RBX);\n                            arg1 = iVar3 + 1;\n                            iVar3 = *(*0x20 + -0x28);\n                            uVar4 = *(*0x20 + -0x40);\n                        }\n                        else {\n                            iVar2 = *(*0x20 + -0x10);\n                            uVar4 = unaff_RBX;\n                            unaff_RBX = *(*0x20 + -0x38);\n                        }\n                        if (*0x557ed0 == 0) {\n                            *(iVar2 + uVar4 * 8) = *(*0x20 + -0x18);\n                        }\n                        else {\n                            *(*0x20 + -0x88) = 0x44a4b4;\n                            iVar3 = fcn.00459420(unaff_RBX, iVar2, iVar2 + uVar4 * 8);\n                        }\n                        noname_0 = iVar3 + -1;\n                        in_RAX = *(*0x20 + 8);\n                    }\n                }\n                else {\n                    if (uVar1 == 9) goto code_r0x0044a4ee;\ncode_r0x0044a51a:\n                    *(*0x20 + -0x88) = 0x44a51f;\n                    fcn.0044b460();\n                    in_RAX = *(*0x20 + 8);\n                    noname_0 = *(*0x20 + -0x30);\n                    unaff_RBX = *(*0x20 + -0x38);\n                    arg1 = *(*0x20 + -0x40);\n                    iVar2 = *(*0x20 + -0x10);\n                }\n                noname_0 = noname_0 + 1;\n            }\n            unaff_RBX = 0x13;\n            *(*0x20 + -0x88) = 0x44a5c5;\n            fcn.00430d40();\ncode_r0x0044a5c5:\n            *(*0x20 + -0x88) = 0x44a5d0;\n            in_RAX = fcn.00459720(arg1_00);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x44a5e5;\n        fcn.00457040();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 2003
    },
    "0044a6e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0044a6e0(void)\n\n{\n    uint32_t uVar1;\n    int64_t *arg2;\n    int64_t in_RAX;\n    int64_t arg1;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \ncode_r0x0044a6e0:\n    puVar2 = *0x20;\n    if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n        puVar2 = *0x20 + -0x28;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\ncode_r0x0044a707:\n        arg1 = *(in_RAX + 0x26e8);\n        if (arg1 == 0) goto code_r0x0044a96e;\n        arg2 = **(in_RAX + 0x26e0);\n        if (in_RAX != *arg2) {\n            unaff_RBX = 0xf;\n            *(*0x20 + -0x30) = 0x44a96e;\n            fcn.00430d40();\n            goto code_r0x0044a96e;\n        }\n        *(*0x20 + -0x10) = arg2;\n        uVar1 = *(arg2 + 8);\n        if (uVar1 < 4) {\n            if (uVar1 < 2) {\n                if (uVar1 == 0) {\ncode_r0x0044a902:\n                    *(*0x20 + -0x30) = 0x44a907;\n                    fcn.0044b460();\n                    in_RAX = *(*0x20 + 8);\n                    goto code_r0x0044a911;\n                }\n                if (unaff_RBX < arg2[1]) {\n                    return arg2[1];\n                }\n                LOCK();\n                if (uVar1 == *(arg2 + 8)) {\n                    *(arg2 + 8) = 2;\n                    *(*0x20 + -0x30) = 0x44a933;\n                    fcn.0044a9a0(unaff_RBX);\n                    return 0;\n                }\n                goto code_r0x0044a707;\n            }\n            if (uVar1 != 2) {\n                LOCK();\n                if (uVar1 == *(arg2 + 8)) {\n                    *(arg2 + 8) = 4;\n                    *(*0x20 + -0x30) = 0x44a7c5;\n                    fcn.00449980(in_RAX, arg2);\n                    LOCK();\n                    if (*(*(*0x20 + -0x10) + 0x40) == 4) {\n                        *(*(*0x20 + -0x10) + 0x40) = 5;\n                    }\n                    else {\n                        *(*0x20 + -0x30) = 0x44a7e9;\n                        fcn.0044b460();\n                    }\n                    in_RAX = *(*0x20 + 8);\n                    LOCK();\n                    *(in_RAX + 0x26fc) = *(in_RAX + 0x26fc) + -1;\n                    if (*(in_RAX + 0x26e8) == 0) {\n                        return -1;\n                    }\n                    goto code_r0x0044a911;\n                }\n                goto code_r0x0044a707;\n            }\ncode_r0x0044a8f0:\n            *(*0x20 + -0x30) = 0x44a8f5;\n            fcn.0044b460();\n            in_RAX = *(*0x20 + 8);\n        }\n        else {\n            if (uVar1 < 6) {\n                if (uVar1 == 4) goto code_r0x0044a8f0;\n                goto code_r0x0044a902;\n            }\n            if (uVar1 == 6) {\n                *(*0x20 + -0x28) = 0x48a658;\n                *(*0x20 + -0x30) = 0x44a8cb;\n                fcn.00456f00();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                in_RAX = *(*0x20 + 8);\n                goto code_r0x0044a911;\n            }\n            if (8 < uVar1) {\n                if (uVar1 == 9) goto code_r0x0044a8f0;\n                *(*0x20 + -0x30) = 0x44a8af;\n                fcn.0044b460();\n                in_RAX = *(*0x20 + 8);\n                goto code_r0x0044a911;\n            }\n            LOCK();\n            if (uVar1 != *(arg2 + 8)) goto code_r0x0044a707;\n            *(arg2 + 8) = 9;\n            arg2[1] = arg2[7];\n            *(*0x20 + -0x30) = 0x44a865;\n            fcn.00449980(in_RAX, arg2);\n            *(*0x20 + -0x30) = 0x44a874;\n            fcn.00449300();\n            LOCK();\n            if (*(*(*0x20 + -0x10) + 0x40) == 9) {\n                *(*(*0x20 + -0x10) + 0x40) = 1;\n            }\n            else {\n                *(*0x20 + -0x30) = 0x44a894;\n                fcn.0044b460();\n            }\n            in_RAX = *(*0x20 + 8);\n        }\ncode_r0x0044a911:\n        unaff_RBX = *(*0x20 + 0x10);\n        goto code_r0x0044a707;\n    }\n    goto code_r0x0044a976;\ncode_r0x0044a96e:\n    *(*0x20 + -0x30) = 0x44a975;\n    in_RAX = fcn.00459720(arg1);\ncode_r0x0044a976:\n    *(puVar2 + 8) = in_RAX;\n    *(puVar2 + 0x10) = unaff_RBX;\n    *(puVar2 + -8) = 0x44a985;\n    fcn.0045b6e0();\n    in_RAX = *(puVar2 + 8);\n    unaff_RBX = *(puVar2 + 0x10);\n    *0x20 = puVar2;\n    goto code_r0x0044a6e0;\n}\n",
        "token_count": 1557
    },
    "0044ab40": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044ab40(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int64_t in_RAX;\n    ulong *arg1;\n    ulong *arg2;\n    ulong *puVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t *piVar5;\n    int64_t *piVar6;\n    ulong *arg1_00;\n    ulong *arg3;\n    int32_t iVar7;\n    ulong *arg4;\n    ulong *in_R10;\n    int64_t unaff_R12;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar9;\n    \ncode_r0x0044ab40:\n    puVar4 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar4 = *0x20 + -0x60;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(in_RAX + 0x1670) = 0;\n        piVar5 = *(in_RAX + 0x26e0);\n        *(*0x20 + -0x18) = piVar5;\n        arg1 = *(in_RAX + 0x26e8);\n        *(*0x20 + -0x30) = arg1;\n        arg2 = *(in_RAX + 0x26f0);\n        *(*0x20 + -0x28) = arg2;\n        puVar3 = NULL;\n        piVar6 = NULL;\n        arg1_00 = NULL;\n        arg4 = NULL;\n        iVar8 = unaff_R12;\n        do {\n            arg3 = arg1_00;\n            if (puVar3 < arg1) {\n                *(*0x20 + -0x20) = puVar3;\n                *(*0x20 + -0x3c) = arg4;\n                *(*0x20 + -0x38) = arg1_00;\n                *(*0x20 + -0x3d) = piVar6;\n                in_R10 = piVar5[puVar3];\n                *(*0x20 + -0x10) = in_R10;\n                unaff_R12 = in_RAX;\n            }\n            else {\n                for (; arg3 < arg1; arg3 = arg3 + 1) {\n                    if (arg1 <= arg3) goto code_r0x0044ade9;\n                    piVar6 = piVar5 + arg3;\n                    if (*0x557ed0 == 0) {\n                        piVar5[arg3] = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x68) = 0x44ad67;\n                        in_RAX = fcn.004593c0(arg1, arg2, arg3, arg4);\n                        in_R10 = arg1_00;\n                    }\n                }\n                iVar7 = arg4;\n                LOCK();\n                puVar1 = in_RAX + 0x26fc;\n                arg4 = *puVar1;\n                *puVar1 = *puVar1 + -iVar7;\n                LOCK();\n                puVar1 = in_RAX + 0x26f8;\n                arg3 = *puVar1;\n                *puVar1 = *puVar1 + -iVar7;\n                if (arg1_00 <= arg2) {\n                    *(in_RAX + 0x26e8) = arg1_00;\n                    *(in_RAX + 0x26f0) = arg2;\n                    if (*0x557ed0 == 0) {\n                        *(in_RAX + 0x26e0) = piVar5;\n                    }\n                    else {\n                        *(*0x20 + -0x68) = 0x44adb7;\n                        in_RAX = fcn.004593e0(arg1, arg2, arg3, arg4);\n                    }\n                    if (arg1_00 == NULL) {\n                        *(in_RAX + 0x1668) = 0;\n                    }\n                    else {\n                        *(in_RAX + 0x1668) = *(*piVar5 + 8);\n                    }\n                    return;\n                }\n                *(*0x20 + -0x68) = 0x44ade9;\n                arg1 = arg1_00;\n                fcn.004597a0(arg1_00, arg2);\ncode_r0x0044ade9:\n                *(*0x20 + -0x68) = 0x44adf1;\n                fcn.00459720(arg1);\n                unaff_R12 = iVar8;\n                puVar3 = arg1_00;\n                arg1_00 = arg3;\n            }\ncode_r0x0044adf4:\n            do {\n                while (uVar2 = *(in_R10 + 8),  uVar2 < 4) {\n                    in_RAX = unaff_R12;\n                    if (uVar2 < 2) {\n                        if (uVar2 != 0) {\n                            unaff_R12 = iVar8;\n                            if (piVar6 != '\\0') {\n                                if (arg1 <= arg1_00) goto code_r0x0044afb0;\n                                if (*0x557ed0 == 0) {\n                                    piVar5[arg1_00] = in_R10;\n                                }\n                                else {\n                                    *(*0x20 + -0x68) = 0x44abf7;\n                                    puVar3 = in_R10;\n                                    fcn.00459420(arg1, arg2, arg1_00);\n                                    arg4 = in_R10;\n                                    in_R10 = puVar3;\n                                }\n                                *(*0x20 + -0x68) = 0x44ac08;\n                                fcn.0044b0c0(arg2, arg2, arg1_00, arg4);\n                                in_RAX = *(*0x20 + 8);\n                                arg1 = *(*0x20 + -0x30);\n                                arg2 = *(*0x20 + -0x28);\n                                puVar3 = *(*0x20 + -0x20);\n                                piVar5 = *(*0x20 + -0x18);\n                                piVar6 = *(*0x20 + -0x3d);\n                                arg1_00 = *(*0x20 + -0x38);\n                                arg4 = *(*0x20 + -0x3c);\n                            }\n                            arg1_00 = arg1_00 + 1;\n                            goto code_r0x0044ab98;\n                        }\ncode_r0x0044af6b:\n                        *(*0x20 + -0x68) = 0x44af70;\n                        fcn.0044b460();\n                        arg1 = *(*0x20 + -0x30);\n                        arg2 = *(*0x20 + -0x28);\n                        piVar5 = *(*0x20 + -0x18);\n                        piVar6 = *(*0x20 + -0x3d);\n                        arg4 = *(*0x20 + -0x3c);\n                        in_R10 = *(*0x20 + -0x10);\n                        unaff_R12 = *(*0x20 + 8);\n                        puVar3 = *(*0x20 + -0x20);\n                        arg1_00 = *(*0x20 + -0x38);\n                        iVar8 = *(*0x20 + 8);\n                    }\n                    else if (uVar2 == 2) {\ncode_r0x0044af2e:\n                        *(*0x20 + -0x68) = 0x44af33;\n                        fcn.0044b460();\n                        arg1 = *(*0x20 + -0x30);\n                        arg2 = *(*0x20 + -0x28);\n                        piVar5 = *(*0x20 + -0x18);\n                        piVar6 = *(*0x20 + -0x3d);\n                        arg4 = *(*0x20 + -0x3c);\n                        in_R10 = *(*0x20 + -0x10);\n                        unaff_R12 = *(*0x20 + 8);\n                        puVar3 = *(*0x20 + -0x20);\n                        arg1_00 = *(*0x20 + -0x38);\n                        iVar8 = *(*0x20 + 8);\n                    }\n                    else {\n                        LOCK();\n                        iVar8 = unaff_R12;\n                        if (uVar2 == *(in_R10 + 8)) {\n                            *(in_R10 + 8) = 4;\n                            *in_R10 = 0;\n                            LOCK();\n                            bVar9 = *(in_R10 + 8) == 4;\n                            if (bVar9) {\n                                *(in_R10 + 8) = 5;\n                            }\n                            in_R10 = in_R10 & 0xffffffffffffff00 | bVar9;\n                            if (!bVar9) {\n                                *(*0x20 + -0x68) = 0x44ac5c;\n                                fcn.0044b460();\n                                arg1 = *(*0x20 + -0x30);\n                                arg2 = *(*0x20 + -0x28);\n                                puVar3 = *(*0x20 + -0x20);\n                                piVar5 = *(*0x20 + -0x18);\n                                arg1_00 = *(*0x20 + -0x38);\n                                arg4 = *(*0x20 + -0x3c);\n                                in_RAX = *(*0x20 + 8);\n                            }\n                            arg4 = arg4 + 1;\n                            piVar6 = 0x1;\n                            unaff_R12 = in_RAX;\n                            goto code_r0x0044ab98;\n                        }\n                    }\n                }\n                if (uVar2 < 6) {\n                    if (uVar2 == 4) goto code_r0x0044af2e;\n                    goto code_r0x0044af6b;\n                }\n                if (uVar2 == 6) {\n                    *(*0x20 + -0x60) = 0x48a658;\n                    *(*0x20 + -0x68) = 0x44aedc;\n                    fcn.00456f00();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    arg1 = *(*0x20 + -0x30);\n                    arg2 = *(*0x20 + -0x28);\n                    piVar5 = *(*0x20 + -0x18);\n                    piVar6 = *(*0x20 + -0x3d);\n                    arg4 = *(*0x20 + -0x3c);\n                    in_R10 = *(*0x20 + -0x10);\n                    unaff_R12 = *(*0x20 + 8);\n                    puVar3 = *(*0x20 + -0x20);\n                    arg1_00 = *(*0x20 + -0x38);\n                    iVar8 = *(*0x20 + 8);\n                    goto code_r0x0044adf4;\n                }\n                if (8 < uVar2) {\n                    if (uVar2 == 9) goto code_r0x0044af2e;\n                    *(*0x20 + -0x68) = 0x44ae94;\n                    fcn.0044b460();\n                    arg1 = *(*0x20 + -0x30);\n                    arg2 = *(*0x20 + -0x28);\n                    piVar5 = *(*0x20 + -0x18);\n                    piVar6 = *(*0x20 + -0x3d);\n                    arg4 = *(*0x20 + -0x3c);\n                    in_R10 = *(*0x20 + -0x10);\n                    unaff_R12 = *(*0x20 + 8);\n                    puVar3 = *(*0x20 + -0x20);\n                    arg1_00 = *(*0x20 + -0x38);\n                    iVar8 = *(*0x20 + 8);\n                    goto code_r0x0044adf4;\n                }\n                LOCK();\n                iVar8 = unaff_R12;\n            } while (uVar2 != *(in_R10 + 8));\n            *(in_R10 + 8) = 9;\n            in_R10[1] = in_R10[7];\n            if (arg1 <= arg1_00) goto code_r0x0044afa8;\n            if (*0x557ed0 == 0) {\n                piVar5[arg1_00] = in_R10;\n                in_R10 = arg4;\n            }\n            else {\n                *(*0x20 + -0x68) = 0x44acc7;\n                fcn.00459420(arg1, arg2, arg1_00);\n            }\n            *(*0x20 + -0x68) = 0x44acd8;\n            fcn.0044b0c0(arg2, arg2, arg1_00, in_R10);\n            LOCK();\n            if (*(*(*0x20 + -0x10) + 0x40) == 9) {\n                *(*(*0x20 + -0x10) + 0x40) = 1;\n            }\n            else {\n                *(*0x20 + -0x68) = 0x44acf8;\n                fcn.0044b460();\n            }\n            in_R10 = *(*0x20 + -0x38);\n            arg1_00 = in_R10 + 1;\n            in_RAX = *(*0x20 + 8);\n            arg1 = *(*0x20 + -0x30);\n            arg2 = *(*0x20 + -0x28);\n            puVar3 = *(*0x20 + -0x20);\n            piVar5 = *(*0x20 + -0x18);\n            piVar6 = 0x1;\n            arg4 = *(*0x20 + -0x3c);\ncode_r0x0044ab98:\n            puVar3 = puVar3 + 1;\n            iVar8 = unaff_R12;\n        } while( true );\n    }\n    goto code_r0x0044afb9;\ncode_r0x0044afa8:\n    *(*0x20 + -0x68) = 0x44afb0;\n    fcn.00459720(arg1);\ncode_r0x0044afb0:\n    *(*0x20 + -0x68) = 0x44afb8;\n    in_RAX = fcn.00459720(arg1);\ncode_r0x0044afb9:\n    *(puVar4 + 8) = in_RAX;\n    *(puVar4 + -8) = 0x44afc5;\n    fcn.00457040();\n    in_RAX = *(puVar4 + 8);\n    *0x20 = puVar4;\n    goto code_r0x0044ab40;\n}\n",
        "token_count": 3290
    },
    "0044b780": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044b780(int64_t *arg1, ulong noname_1, uint64_t arg3, code *arg4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    code *unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uchar unaff_SIL;\n    code *unaff_RDI;\n    uint32_t uVar8;\n    uint64_t in_R10;\n    uint64_t uVar9;\n    uint64_t in_R11;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x28) = unaff_SIL;\n            *(*0x20 + 0x40) = in_R10;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + 0x38) = arg4;\n            iVar1 = *unaff_RDI;\n            *(*0x20 + -0x28) = in_RAX + 0x34;\n            if ((iVar1 == 0) || (-(*(iVar1 + 0x10) + -0xfbe8) < in_RAX + 0x34)) {\n                unaff_RBX = arg1 & 0xffffffff;\n                *(*0x20 + -0x60) = 0x44b7f0;\n                iVar1 = fcn.0044be20();\n                arg1 = *(*0x20 + 0x20);\n                *arg1 = iVar1;\n            }\n            *(*0x20 + -0x20) = iVar1;\n            *(*0x20 + -0x60) = 0x44b806;\n            fcn.00459140(arg1, iVar1);\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            uVar4 = *(*0x20 + -0x58);\n            uVar5 = *(*0x20 + -0x20);\n            iVar1 = *(uVar5 + 8);\n            *(uVar5 + 8) = uVar4 >> 6;\n            uVar2 = (uVar4 >> 6) - iVar1;\n            uVar4 = *(*0x20 + 0x30);\n            if (uVar4 < 0) {\n                uVar6 = *(*0x20 + 0x40);\n                uVar9 = uVar6;\n            }\n            else {\n                uVar6 = *(*0x20 + 0x40);\n                uVar9 = uVar6 + 1;\n            }\n            if (3 < uVar9) {\n                uVar9 = 3;\n            }\n            arg3 = *(uVar5 + 0x10);\n            arg4 = uVar9 & 0xffffffff;\n            in_R11 = *(*0x20 + 0x28);\n            uVar8 = uVar9 << 6 | *(*0x20 + 0x28);\n            in_R10 = uVar8;\n            if (arg3 < 0xfbe8) {\n                *(uVar5 + 0x418 + arg3) = uVar8;\n                in_R10 = *(uVar5 + 0x10) + 1;\n                *(uVar5 + 0x10) = in_R10;\n                if (arg4 != '\\x03') {\n                    unaff_RBX = NULL;\n                    goto code_r0x0044b8b0;\n                }\n                unaff_RBX = NULL;\ncode_r0x0044bb20:\n                if (unaff_RBX < pe_nt_image_headers64) {\n                    if (in_R10 < 0xfbe8) {\n                        *(uVar5 + 0x418 + in_R10) = unaff_RBX;\n                        *(uVar5 + 0x10) = in_R10 + 1;\n                        unaff_RBX = uVar5 + in_R10 + 0x418;\ncode_r0x0044b8b0:\n                        uVar9 = *(uVar5 + 0x10);\n                        while (0x7f < uVar2) {\n                            if (0xfbe7 < uVar9) goto code_r0x0044baf2;\n                            *(uVar5 + 0x418 + uVar9) = uVar2 | 0x80;\n                            uVar9 = uVar9 + 1;\n                            uVar2 = uVar2 >> 7;\n                            in_R10 = uVar2;\n                        }\n                        if (uVar9 < 0xfbe8) {\n                            *(uVar5 + 0x418 + uVar9) = uVar2;\n                            *(uVar5 + 0x10) = uVar9 + 1;\n                            iVar1 = *(*0x20 + 0x38);\n                            iVar3 = 0;\n                            do {\n                                if (iVar3 < uVar6) {\n                                    in_R10 = *(iVar1 + iVar3 * 8);\n                                    in_R11 = *(uVar5 + 0x10);\n                                    goto code_r0x0044baaf;\n                                }\n                                if (uVar4 != 0) {\n                                    if (uVar4 < 1) goto code_r0x0044b982;\n                                    *(*0x20 + -0x30) = arg3;\n                                    *(*0x20 + -0x18) = unaff_RBX;\n                                    unaff_RBX = uVar5 + 0x18;\n                                    unaff_RDI = pe_nt_image_headers64;\n                                    *(*0x20 + -0x60) = 0x44b977;\n                                    uVar4 = fcn.0044bc00(0x80);\n                                    uVar5 = *(*0x20 + -0x20);\n                                    arg3 = *(uVar5 + 0x10);\n                                    goto code_r0x0044b9d1;\n                                }\n                                uVar6 = *(uVar5 + 0x10);\n                                uVar2 = 0;\ncode_r0x0044ba49:\n                                if (0x7f < uVar2) {\n                                    if (0xfbe7 < uVar6) goto code_r0x0044ba89;\ncode_r0x0044ba32:\n                                    *(uVar5 + 0x418 + uVar6) = uVar2 | 0x80;\n                                    uVar2 = uVar2 >> 7;\n                                    uVar6 = uVar6 + 1;\n                                    uVar4 = uVar2;\n                                    goto code_r0x0044ba49;\n                                }\n                                if (uVar6 < 0xfbe8) {\n                                    *(uVar5 + 0x418 + uVar6) = uVar2;\n                                    *(uVar5 + 0x10) = uVar6 + 1;\ncode_r0x0044b982:\n                                    while( true ) {\n                                        iVar3 = *(uVar5 + 0x10) - arg3;\n                                        uVar5 = *(*0x20 + -0x28);\n                                        if (iVar3 <= uVar5) {\n                                            if (unaff_RBX != NULL) {\n                                                *unaff_RBX = iVar3 + -2;\n                                            }\n                                            return;\n                                        }\n                                        unaff_RBX = 0x1d;\n                                        *(*0x20 + -0x60) = 0x44b9b9;\n                                        uVar4 = fcn.00430d40();\n                                        while( true ) {\n                                            *(uVar5 + 0x418 + arg3) = uVar4 | 0x80;\n                                            uVar4 = uVar4 >> 7;\n                                            arg3 = arg3 + 1;\ncode_r0x0044b9d1:\n                                            if (uVar4 < 0x80) break;\n                                            uVar6 = uVar5;\n                                            if (0xfbe7 < arg3) goto code_r0x0044ba25;\n                                        }\n                                        if (0xfbe7 < arg3) break;\n                                        *(uVar5 + 0x418 + arg3) = uVar4;\n                                        *(uVar5 + 0x10) = arg3 + 1;\n                                        unaff_RBX = *(*0x20 + -0x18);\n                                        arg3 = *(*0x20 + -0x30);\n                                    }\n                                    *(*0x20 + -0x60) = 0x44ba25;\n                                    fcn.00459720(0xfbe8);\n                                    uVar6 = uVar5;\ncode_r0x0044ba25:\n                                    uVar5 = 0xfbe8;\n                                    *(*0x20 + -0x60) = 0x44ba32;\n                                    uVar2 = fcn.00459720(0xfbe8);\n                                    goto code_r0x0044ba32;\n                                }\n                                *(*0x20 + -0x60) = 0x44ba89;\n                                fcn.00459720(0xfbe8);\ncode_r0x0044ba89:\n                                uVar5 = 0xfbe8;\n                                *(*0x20 + -0x60) = 0x44ba96;\n                                iVar3 = fcn.00459720(0xfbe8);\n                                while( true ) {\n                                    *(uVar5 + 0x418 + in_R11) = in_R10 | 0x80;\n                                    in_R10 = in_R10 >> 7;\n                                    in_R11 = in_R11 + 1;\ncode_r0x0044baaf:\n                                    if (in_R10 < 0x80) break;\n                                    if (0xfbe7 < in_R11) goto code_r0x0044bad8;\n                                }\n                                if (0xfbe7 < in_R11) goto code_r0x0044bacb;\n                                *(uVar5 + 0x418 + in_R11) = in_R10;\n                                in_R10 = in_R11 + 1;\n                                *(uVar5 + 0x10) = in_R10;\n                                iVar3 = iVar3 + 1;\n                            } while( true );\n                        }\n                        goto code_r0x0044bae5;\n                    }\n                    *(*0x20 + -0x60) = 0x44bb6a;\n                    fcn.00459720(0xfbe8);\n                }\n                else if (in_R10 < 0xfbe8) goto code_r0x0044baff;\n                *(*0x20 + -0x60) = 0x44bb77;\n                fcn.00459720(0xfbe8);\n            }\n            unaff_SIL = uVar4;\n            arg1 = 0xfbe8;\n            *(*0x20 + -0x60) = 0x44bb85;\n            in_RAX = fcn.00459720(0xfbe8);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + 0x20) = unaff_RDI;\n        puVar7[0x28] = unaff_SIL;\n        *(puVar7 + 0x30) = arg3;\n        *(puVar7 + 0x38) = arg4;\n        *(puVar7 + 0x40) = in_R10;\n        *(puVar7 + 0x48) = in_R11;\n        *(puVar7 + -8) = 0x44bbb7;\n        fcn.00457040();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = *(puVar7 + 0x20);\n        unaff_SIL = puVar7[0x28];\n        arg3 = *(puVar7 + 0x30);\n        arg4 = *(puVar7 + 0x38);\n        in_R10 = *(puVar7 + 0x40);\n        in_R11 = *(puVar7 + 0x48);\n        *0x20 = puVar7;\n    } while( true );\ncode_r0x0044bacb:\n    *(*0x20 + -0x60) = 0x44bad8;\n    fcn.00459720(0xfbe8);\ncode_r0x0044bad8:\n    *(*0x20 + -0x60) = 0x44bae5;\n    fcn.00459720(0xfbe8);\ncode_r0x0044bae5:\n    *(*0x20 + -0x60) = 0x44baf2;\n    fcn.00459720(0xfbe8);\ncode_r0x0044baf2:\n    uVar5 = 0xfbe8;\n    *(*0x20 + -0x60) = 0x44baff;\n    uVar2 = fcn.00459720(0xfbe8);\ncode_r0x0044baff:\n    *(uVar5 + 0x418 + in_R10) = unaff_RBX | 0x80;\n    unaff_RBX = unaff_RBX >> 7;\n    in_R10 = in_R10 + 1;\n    arg4 = unaff_RBX;\n    goto code_r0x0044bb20;\n}\n",
        "token_count": 3108
    },
    "0044d020": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\ncode ** fcn.0044d020(code **arg1, ulong noname_1, uchar (*arg3) [16], code **arg4)\n\n{\n    uchar (*pauVar1) [16];\n    char cVar2;\n    int32_t iVar3;\n    code *in_RAX;\n    int64_t iVar4;\n    ulong uVar5;\n    uint64_t uVar6;\n    ulong uVar7;\n    ulong uVar8;\n    code **ppcVar9;\n    uint32_t uVar10;\n    int64_t iVar11;\n    uchar uVar12;\n    char cVar13;\n    ulong *unaff_RBX;\n    uchar *puVar14;\n    uchar *unaff_RBP;\n    uchar *unaff_RSI;\n    code **unaff_RDI;\n    int64_t *piVar15;\n    code **ppcVar16;\n    code **in_R10;\n    uint8_t uVar17;\n    uchar (*in_R11) [16];\n    code *pcVar18;\n    code **ppcVar19;\n    code **unaff_R14;\n    code **ppcVar20;\n    int64_t iVar21;\n    bool bVar22;\n    uchar in_XMM15 [16];\n    \ncode_r0x0044d020:\n    puVar14 = *0x20;\n    if (unaff_R14[2] <= *0x20 + -0x2e8 && *0x20 + -0x2e8 != unaff_R14[2]) {\n        puVar14 = *0x20 + -0x368;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if ((unaff_RSI < 1) || (in_R10 == NULL)) {\n            if ((unaff_R14 != unaff_RDI) || (arg1 = unaff_R14,  *(unaff_R14[6] + 0x90) != unaff_R14)) {\n                uVar10 = *0x4f0188 >> 2;\n                if (unaff_R14[6][0xf9] != 0x0) {\n                    uVar10 = unaff_R14[6][0xf9];\n                }\n                if ((in_RAX == 0xffffffffffffffff) && (unaff_RBX == 0xffffffffffffffff)) {\n                    unaff_RBX = unaff_RDI[0xe];\n                    if (unaff_RBX == NULL) {\n                        in_RAX = unaff_RDI[8];\n                        unaff_RBX = unaff_RDI[7];\n                        pcVar18 = unaff_RDI[10];\n                    }\n                    else {\n                        in_RAX = unaff_RDI[0xf];\n                        pcVar18 = NULL;\n                    }\n                }\n                else {\n                    pcVar18 = NULL;\n                }\n                *(*0x20 + -0x60) = 0;\n                *(*0x20 + -0x378) = unaff_RBP;\n                *(*0x20 + -0x370) = 0x44d0ef;\n                iVar4 = fcn.004599b0();\n                unaff_RBP = *(*0x20 + -0x378);\n                *(*0x20 + -0x50) = in_RAX;\n                *(*0x20 + -0x38) = unaff_RBX;\n                iVar11 = *(iVar4 + 0x150);\n                iVar21 = *(iVar4 + 0x158);\n                if (arg3 == NULL) {\n                    unaff_RDI = *0x20 + -0x88 & 0xffffffffffffff00 | in_R10 == NULL;\n                }\n                else {\n                    unaff_RDI = NULL;\n                }\n                *(*0x20 + 0x30) = unaff_RSI;\n                *(*0x20 + 0x48) = in_R10;\n                *(*0x20 + -600) = in_RAX;\n                *(*0x20 + -0x260) = unaff_RBX;\n                *(*0x20 + -0x339) = unaff_RDI;\n                *(*0x20 + -0x68) = in_R11;\n                *(*0x20 + 0x40) = arg4;\n                *(*0x20 + 0x38) = arg3;\n                *(*0x20 + -0x70) = iVar4;\n                *(*0x20 + -0x2d0) = iVar21;\n                *(*0x20 + -0xb0) = iVar11;\n                *(*0x20 + -0xb8) = pcVar18;\n                *(*0x20 + -0x32c) = uVar10;\n                if (in_RAX == NULL) {\n                    *(*0x20 + -0x50) = *unaff_RBX;\n                    *(*0x20 + -0x38) = *(*0x20 + -0x260) + 8;\n                }\n                *(*0x20 + -0x370) = 0x44d1b3;\n                iVar4 = fcn.004478a0();\n                if (iVar4 == 0) {\n                    arg1 = *(*0x20 + 0x48);\n                    if ((arg1 != NULL) || (ppcVar9 = in_R10,  ppcVar19 = arg1,  *(*0x20 + -0x339) != '\\0')) {\n                        *(*0x20 + -600) = *(*0x20 + -0x50);\n                        *(*0x20 + -0x370) = 0x44d270;\n                        fcn.004324c0();\n                        *(*0x20 + -0x370) = 0x44d285;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x370) = 0x44d292;\n                        fcn.00432c20();\n                        *(*0x20 + -0x370) = 0x44d297;\n                        fcn.00432720();\n                        *(*0x20 + -0x370) = 0x44d29c;\n                        fcn.00432540();\n                        arg1 = *0x20 + -0x60;\n                        unaff_RDI = NULL;\n                        *(*0x20 + -0x370) = 0x44d2ba;\n                        fcn.004506a0(arg1);\n                        ppcVar9 = in_R10;\n                        ppcVar19 = *(*0x20 + 0x48);\n                    }\n                    if (ppcVar19 == NULL) {\n                        return NULL;\n                    }\n                    uVar6 = 10;\n                    *(*0x20 + -0x370) = 0x44d2ef;\n                    fcn.00430d40();\n                    goto code_r0x0044d2ef;\n                }\n                *(*0x20 + -0x60) = iVar4;\n                *(*0x20 + -0x58) = in_RAX;\n                *(*0x20 + -0x378) = unaff_RBP;\n                *(*0x20 + -0x370) = 0x44d1ef;\n                fcn.00459974();\n                unaff_RBP = *(*0x20 + -0x378);\n                unaff_RSI = *(*0x20 + 0x40);\n                arg1 = *(*0x20 + -0x70);\n                arg4 = *(*0x20 + -600);\n                in_R10 = *(*0x20 + -0x260);\n                in_R11 = *(*0x20 + 0x30);\n                iVar11 = *(*0x20 + -0xb0);\n                iVar21 = *(*0x20 + -0x2d0);\n                arg3 = *(*0x20 + -0xb8);\n                ppcVar9 = NULL;\n                cVar2 = false;\n                uVar6 = 0;\n                unaff_RDI = NULL;\ncode_r0x0044d36f:\n                if (ppcVar9 < unaff_RSI) {\n                    *(*0x20 + -0x268) = in_R11;\n                    iVar4 = *(*0x20 + -0x60);\n                    if (*(iVar4 + 0x14) != 0) {\n                        *(*0x20 + -0x78) = *(*0x20 + -0x58);\n                        *(*0x20 + -0x80) = iVar4;\n                        uVar17 = *(iVar4 + 0x29);\n                        cVar13 = *(iVar4 + 0x28);\n                        if (cVar13 == '\\x04') {\n                            uVar17 = uVar17 & 0xfd;\n                        }\n                        if ((((*(*0x20 + -0x50) == arg4) && (*(*0x20 + -0x38) == in_R10)) && (arg1[0xf] == arg4)) &&\n                           (arg1[0xe] == in_R10)) {\n                            uVar17 = uVar17 & 0xfd;\n                        }\n                        *(*0x20 + -0x2f8) = ppcVar9;\n                        *(*0x20 + -0x310) = unaff_RDI;\n                        *(*0x20 + -0x338) = uVar6;\n                        *(*0x20 + -0x88) = arg3;\n                        *(*0x20 + -0x33a) = cVar2;\n                        if (*(*0x20 + -0x30) == 0) {\n                            if ((((*(*0x20 + 8) >> 2 & 1) == 0) || (*arg1[6] != arg1)) ||\n                               (iVar4 = *(arg1[6] + 0x90),  iVar4 == 0)) {\n                                iVar4 = *(*0x20 + -0x80);\n                                uVar6 = *(*0x20 + -0x78);\n                            }\n                            else if (cVar13 == '\\r') {\n                                *(*0x20 + -0x50) = *(iVar4 + 0x40);\n                                *(*0x20 + -0x370) = 0x44d4da;\n                                iVar4 = fcn.004478a0();\n                                *(*0x20 + -0x60) = iVar4;\n                                *(*0x20 + -0x58) = uVar6;\n                                uVar17 = *(iVar4 + 0x29);\n                                *(*0x20 + -0x38) = *(*(*(*(*0x20 + -0x70) + 0x30) + 0x90) + 0x38);\n                                iVar21 = *(*(*(*0x20 + -0x70) + 0x30) + 0x90);\n                                iVar11 = *(iVar21 + 0x150);\n                                iVar21 = *(iVar21 + 0x158);\n                            }\n                            else if (cVar13 == '\\x14') {\n                                *(*0x20 + -0x38) = *(iVar4 + 0x38);\n                                iVar11 = *(*(arg1[6] + 0x90) + 0x150);\n                                iVar21 = *(*(arg1[6] + 0x90) + 0x158);\n                                uVar17 = uVar17 & 0xfd;\n                                iVar4 = *(*0x20 + -0x80);\n                                uVar6 = *(*0x20 + -0x78);\n                            }\n                            else {\n                                iVar4 = *(*0x20 + -0x80);\n                                uVar6 = *(*0x20 + -0x78);\n                            }\n                            *(*0x20 + -0x2d0) = iVar21;\n                            *(*0x20 + -0xb0) = iVar11;\n                            *(*0x20 + -0xd0) = uVar6;\n                            *(*0x20 + -0xc0) = iVar4;\n                            *(*0x20 + -0x337) = uVar17;\n                            *(*0x20 + -0x370) = 0x44d5bd;\n                            iVar3 = fcn.00448420(*(*0x20 + -0x50));\n                            *(*0x20 + -0x30) = iVar3 + *(*0x20 + -0x38);\n                            *(*0x20 + -0x30) = iVar3 + *(*0x20 + -0x38) + 8;\n                            ppcVar9 = *(*0x20 + -0x2f8);\n                            arg1 = *(*0x20 + -0x70);\n                            cVar2 = *(*0x20 + -0x33a);\n                            uVar6 = *(*0x20 + -0x338);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            unaff_RDI = *(*0x20 + -0x310);\n                            arg3 = *(*0x20 + -0x88);\n                            arg4 = *(*0x20 + -600);\n                            in_R10 = *(*0x20 + -0x260);\n                            uVar17 = *(*0x20 + -0x337);\n                            ppcVar19 = *(*0x20 + -0xc0);\n                            iVar21 = *(*0x20 + -0x2d0);\n                            iVar11 = *(*0x20 + -0xb0);\n                        }\n                        else {\n                            *(*0x20 + -0xd0) = *(*0x20 + -0x78);\n                            ppcVar19 = *(*0x20 + -0x80);\n                        }\n                        *(*0x20 + -0x2d0) = iVar21;\n                        *(*0x20 + -0xb0) = iVar11;\n                        *(*0x20 + -0xc0) = ppcVar19;\n                        if ((uVar17 & 1) == 0) {\n                            if ((uVar17 & 2) == 0) {\ncode_r0x0044d6d4:\n                                if (*(*0x20 + -0x40) == 0) {\n                                    *(*0x20 + -0x2f0) = *(*0x20 + -0x30) + -8;\n                                    *(*0x20 + -0x40) = *(*(*0x20 + -0x30) + -8);\n                                }\n                                else {\n                                    *(*0x20 + -0x2b0) = ppcVar9;\n                                    *(*0x20 + -0x2f0) = 0;\n                                }\n                                *(*0x20 + -0x370) = 0x44d719;\n                                iVar4 = fcn.004478a0();\n                                if (iVar4 == 0) {\n                                    arg4 = *(*0x20 + -0x339);\n                                    if (*(*0x20 + -0x339) == 0) {\n                                        arg1 = *(*0x20 + -0x70);\n                                        in_R10 = *(*0x20 + -0xc0);\n                                    }\n                                    else {\n                                        arg1 = *(*0x20 + -0x70);\n                                        if (arg1[6][0xe8] == 0x0) {\n                                            in_R10 = *(*0x20 + -0xc0);\n                                        }\n                                        else {\n                                            in_R10 = *(*0x20 + -0xc0);\n                                            if (*(in_R10 + 5) == 0x13) {\n                                                arg4 = NULL;\n                                            }\n                                        }\n                                    }\n                                    *(*0x20 + -0x90) = 0;\n                                    *(*0x20 + -0x98) = uVar6;\n                                    in_R11 = *(*0x20 + 0x48);\n                                    if ((in_R11 != NULL) || (pauVar1 = in_R11,  arg4 != '\\0')) {\n                                        uVar5 = *(*0x20 + -0xd0);\n                                        *(*0x20 + -0x370) = 0x44d7d5;\n                                        uVar7 = fcn.00447f80();\n                                        *(*0x20 + -0xa0) = uVar7;\n                                        *(*0x20 + -0x270) = uVar5;\n                                        *(*0x20 + -0x278) = *(*0x20 + -0x40);\n                                        *(*0x20 + -0x370) = 0x44d7fa;\n                                        fcn.004324c0();\n                                        *(*0x20 + -0x370) = 0x44d80b;\n                                        fcn.00432dc0();\n                                        *(*0x20 + -0x370) = 0x44d825;\n                                        fcn.00432dc0();\n                                        *(*0x20 + -0x370) = 0x44d836;\n                                        fcn.00432dc0();\n                                        *(*0x20 + -0x370) = 0x44d845;\n                                        fcn.00432c20();\n                                        *(*0x20 + -0x370) = 0x44d84a;\n                                        fcn.00432720();\n                                        *(*0x20 + -0x370) = 0x44d84f;\n                                        fcn.00432540();\n                                        unaff_RDI = *(*0x20 + -0x2f0);\n                                        *(*0x20 + -0x370) = 0x44d870;\n                                        fcn.004506a0(*0x20 + -0x60);\n                                        iVar4 = *(*0x20 + -0x90);\n                                        arg1 = *(*0x20 + -0x70);\n                                        uVar6 = *(*0x20 + -0x98);\n                                        in_R10 = *(*0x20 + -0xc0);\n                                        in_R11 = *(*0x20 + 0x48);\n                                        pauVar1 = *(*0x20 + 0x48);\n                                    }\n                                    if (pauVar1 != NULL) goto code_r0x0044e965;\n                                }\n                                else {\n                                    arg1 = *(*0x20 + -0x70);\n                                }\n                                cVar2 = *(*0x20 + -0x33a);\n                                unaff_RSI = *(*0x20 + 0x40);\n                                unaff_RDI = *(*0x20 + -0x310);\n                                ppcVar19 = *(*0x20 + -0xc0);\n                                iVar11 = *(*0x20 + -0xb0);\n                                iVar21 = *(*0x20 + -0x2d0);\n                                *(*0x20 + -0xe8) = iVar4;\n                                *(*0x20 + -0xf0) = uVar6;\n                                uVar5 = *(*0x20 + -0x2f8);\n                                uVar6 = *(*0x20 + -0x338);\n                            }\n                            else {\n                                in_R11 = *(*0x20 + 0x48);\n                                if (in_R11 != NULL) {\n                                    if (ppcVar9 < 1) goto code_r0x0044d6d4;\n                                    if (in_R11 != NULL) goto code_r0x0044e976;\n                                }\n                                *(*0x20 + -0x40) = 0;\n                                *(*0x20 + -0x2b8) = ppcVar9;\n                                *(*0x20 + -0xe8) = 0;\n                                *(*0x20 + -0xf0) = 0;\n                                uVar5 = *(*0x20 + -0x2b8);\n                            }\n                            arg3 = *(*0x20 + -0xe8);\n                            *(*0x20 + -0x2c0) = uVar5;\n                            *(*0x20 + -200) = *(*0x20 + -0xf0);\n                            ppcVar9 = *(*0x20 + -0x2c0);\n                        }\n                        else {\n                            *(*0x20 + -0x40) = 0;\n                            *(*0x20 + -200) = 0;\n                            arg3 = NULL;\n                        }\n                        iVar4 = *(*0x20 + -0x30);\n                        *(*0x20 + -0x28) = iVar4;\n                        *(*0x20 + -0x28) = iVar4 - 8U;\n                        if (*(*0x20 + -0x38) < iVar4 - 8U) {\n                            *(*0x20 + -0x28) = iVar4 + -0x10;\n                        }\n                        *(*0x20 + -0xe8) = arg3;\n                        arg4 = *(*0x20 + 0x48);\n                        if (arg4 == NULL) {\n                            in_R10 = *(*0x20 + -0x339);\n                            if (*(*0x20 + -0x339) == 0) goto code_r0x0044da5a;\n                        }\n                        else {\n                            in_R10 = *(*0x20 + -0x339);\n                        }\n                        *(*0x20 + -0x20) = *(*0x20 + -0x30);\n                        if (arg4 == NULL) {\n                            bVar22 = false;\n                        }\n                        else {\n                            bVar22 = *(ppcVar19 + 0xc) == -0x80000000;\n                        }\n                        *(*0x20 + -0x18) = *(ppcVar19 + 0xc);\n                        *(*0x20 + -0x10) = 0;\n                        if (bVar22) {\n                            *(*0x20 + -0x370) = 0x44d9f8;\n                            uVar5 = fcn.0044ee20(*(*0x20 + -0xd0));\n                            *(*0x20 + -0x18) = uVar5;\n                            *(*0x20 + -0x10) = ppcVar19;\n                            ppcVar9 = *(*0x20 + -0x2f8);\n                            arg1 = *(*0x20 + -0x70);\n                            cVar2 = *(*0x20 + -0x33a);\n                            uVar6 = *(*0x20 + -0x338);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            unaff_RDI = *(*0x20 + -0x310);\n                            arg4 = *(*0x20 + 0x48);\n                            in_R10 = *(*0x20 + -0x339);\n                            ppcVar19 = *(*0x20 + -0xc0);\n                            iVar21 = *(*0x20 + -0x2d0);\n                        }\n                        arg3 = *(*0x20 + -0xe8);\n                        iVar11 = *(*0x20 + -0xb0);\ncode_r0x0044da5a:\n                        *(*0x20 + -0x48) = *(*0x20 + -0x50);\n                        if (cVar2 != '\\0') {\n                            uVar10 = *(*(*0x20 + -0x60) + 2);\n                            if (uVar10 == 0) {\n                                *(*0x20 + -0x48) = 0;\n                            }\n                            else {\n                                *(*0x20 + -0x48) = **(*0x20 + -0x60) + uVar10 + 1;\n                            }\n                            iVar11 = *(*0x20 + -0xb0);\n                        }\n                        if (arg4 == NULL) {\n                            in_R11 = *(*0x20 + 0x38);\n                            pauVar1 = in_R11;\n                        }\n                        else {\n                            pcVar18 = *arg4;\n                            *(*0x20 + -0x370) = 0x44dae3;\n                            cVar2 = (*pcVar18)();\n                            if (cVar2 == '\\0') {\n                                return *(*0x20 + -0x2f8);\n                            }\n                            pauVar1 = *(*0x20 + 0x38);\n                            ppcVar9 = *(*0x20 + -0x2f8);\n                            arg1 = *(*0x20 + -0x70);\n                            cVar2 = *(*0x20 + -0x33a);\n                            uVar6 = *(*0x20 + -0x338);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            unaff_RDI = *(*0x20 + -0x310);\n                            arg3 = *(*0x20 + -0xe8);\n                            arg4 = *(*0x20 + 0x48);\n                            in_R10 = *(*0x20 + -0x339);\n                            in_R11 = *(*0x20 + 0x38);\n                            ppcVar19 = *(*0x20 + -0xc0);\n                            iVar11 = *(*0x20 + -0xb0);\n                            iVar21 = *(*0x20 + -0x2d0);\n                        }\n                        if (pauVar1 == NULL) goto code_r0x0044dcd6;\n                        ppcVar20 = *(*0x20 + -0x50);\n                        if ((((ppcVar9 == NULL) && ((*(*0x20 + 8) >> 1 & 1) != 0)) || (cVar2 != '\\0')) ||\n                           (*ppcVar19 == ppcVar20)) {\n                            ppcVar16 = ppcVar20;\n                            ppcVar20 = ppcVar20 + 1;\n                        }\n                        else {\n                            ppcVar16 = ppcVar20 + -1;\n                        }\n                        if (*(ppcVar19 + 0x2b) < 4) {\n                            *(*0x20 + -0x2c8) = ppcVar9;\n                            *(*0x20 + -0x118) = 0;\n                            ppcVar9 = *(*0x20 + -0x2c8);\n                        }\n                        else {\n                            *(*0x20 + -0x328) = ppcVar16;\n                            iVar11 = ppcVar19 + *(ppcVar19 + 4) * 4 + 0x2c;\n                            if ((iVar11 >> 2 & 1) != 0) {\n                                if ((ppcVar19 >> 2 & 1) != 0) {\n                                    *(*0x20 + -0x120) = iVar11;\n                                    *(*0x20 + -0x318) = ppcVar20;\n                                    *(*0x20 + -0x370) = 0x44dc0f;\n                                    fcn.004324c0();\n                                    *(*0x20 + -0x370) = 0x44dc25;\n                                    fcn.00432dc0();\n                                    *(*0x20 + -0x370) = 0x44dc32;\n                                    fcn.00432d40();\n                                    *(*0x20 + -0x370) = 0x44dc37;\n                                    fcn.00432720();\n                                    *(*0x20 + -0x370) = 0x44dc3c;\n                                    fcn.00432540();\n                                    ppcVar9 = *(*0x20 + -0x2f8);\n                                    arg1 = *(*0x20 + -0x70);\n                                    cVar2 = *(*0x20 + -0x33a);\n                                    uVar6 = *(*0x20 + -0x338);\n                                    unaff_RSI = *(*0x20 + 0x40);\n                                    unaff_RDI = *(*0x20 + -0x310);\n                                    arg3 = *(*0x20 + -0xe8);\n                                    iVar11 = *(*0x20 + -0x120);\n                                    in_R10 = *(*0x20 + -0x339);\n                                    in_R11 = *(*0x20 + 0x38);\n                                    ppcVar19 = *(*0x20 + -0xc0);\n                                    ppcVar20 = *(*0x20 + -0x318);\n                                }\n                                iVar11 = iVar11 + 4;\n                            }\n                            *(*0x20 + -0x118) = *(iVar11 + 0x18);\n                            ppcVar16 = *(*0x20 + -0x328);\n                        }\n                        uVar12 = uVar6;\n                        if (*(*0x20 + -0x118) != 0) goto code_r0x0044e760;\n                        arg4 = *(*0x20 + -0x268);\n                        do {\n                            if (((*(ppcVar19 + 5) != '\\x16') || (cVar13 = uVar6,  cVar13 == '\\t')) ||\n                               ((cVar13 == '\\x13' || (cVar13 == '\\x0f')))) {\n                                if (arg4 < 1) {\n                                    if (ppcVar9 < unaff_RSI) {\n                                        if (0xfffff < ppcVar9) {\n                                            *(*0x20 + -0x370) = 0x44e94f;\n                                            fcn.00459720(0x100000);\ncode_r0x0044e94f:\n                                            *(*0x20 + -0x370) = 0x44e959;\n                                            fcn.00459720(0x100000);\ncode_r0x0044e959:\n                                            arg1 = 0x100000;\n                                            *(*0x20 + -0x370) = 0x44e965;\n                                            fcn.00459720(0x100000);\n                                            goto code_r0x0044e965;\n                                        }\n                                        *(*in_R11 + ppcVar9 * 8) = ppcVar20;\n                                        ppcVar9 = ppcVar9 + 1;\n                                    }\n                                }\n                                else {\n                                    arg4 = arg4 + -1;\n                                }\n                            }\n                            uVar6 = *(ppcVar19 + 5);\n                            ppcVar9 = ppcVar9 + -1;\n                            iVar11 = *(*0x20 + -0xb0);\n                            iVar21 = *(*0x20 + -0x2d0);\n                            *(*0x20 + -0x268) = arg4;\n                            arg4 = *(*0x20 + 0x48);\ncode_r0x0044dcd6:\n                            if (in_R10 == '\\0') goto code_r0x0044de5a;\n                            in_R10 = *(*0x20 + -0x50);\n                            if (((0 < ppcVar9) || ((*(*0x20 + 8) >> 1 & 1) == 0)) &&\n                               ((*ppcVar19 < in_R10 && (cVar2 == '\\0')))) {\n                                in_R10 = in_R10 + -1;\n                            }\n                            *(*0x20 + -0x270) = ppcVar9;\n                            if (*(ppcVar19 + 0x2b) < 4) {\n                                piVar15 = NULL;\n                            }\n                            else {\n                                iVar4 = ppcVar19 + *(ppcVar19 + 4) * 4 + 0x2c;\n                                if ((iVar4 >> 2 & 1) != 0) {\n                                    if ((ppcVar19 >> 2 & 1) != 0) {\n                                        *(*0x20 + -0x110) = iVar4;\n                                        *(*0x20 + -800) = in_R10;\n                                        *(*0x20 + -0x335) = uVar6;\n                                        *(*0x20 + -0x370) = 0x44dd7c;\n                                        fcn.004324c0();\n                                        *(*0x20 + -0x370) = 0x44dd8d;\n                                        fcn.00432dc0();\n                                        *(*0x20 + -0x370) = 0x44dd9a;\n                                        fcn.00432d40();\n                                        *(*0x20 + -0x370) = 0x44dd9f;\n                                        fcn.00432720();\n                                        *(*0x20 + -0x370) = 0x44dda5;\n                                        fcn.00432540();\n                                        ppcVar9 = *(*0x20 + -0x270);\n                                        arg1 = *(*0x20 + -0x70);\n                                        uVar6 = *(*0x20 + -0x335);\n                                        unaff_RSI = *(*0x20 + 0x40);\n                                        unaff_RDI = *(*0x20 + -0x310);\n                                        arg3 = *(*0x20 + -0xe8);\n                                        iVar4 = *(*0x20 + -0x110);\n                                        in_R10 = *(*0x20 + -800);\n                                        iVar11 = *(*0x20 + -0xb0);\n                                        iVar21 = *(*0x20 + -0x2d0);\n                                    }\n                                    iVar4 = iVar4 + 4;\n                                }\n                                piVar15 = *(iVar4 + 0x18);\n                                ppcVar19 = *(*0x20 + -0xc0);\n                                arg4 = *(*0x20 + 0x48);\n                            }\n                            uVar10 = uVar6;\n                            if (piVar15 == NULL) goto code_r0x0044e353;\n                            *(*0x20 + -0x108) = piVar15;\n                            in_R11 = *0x20 + -0x250;\n                            *in_R11 = in_XMM15;\n                            *(*0x20 + -0x240) = in_XMM15;\n                            arg3 = *0x20 + -0x230;\n                            *arg3 = in_XMM15;\n                            while( true ) {\n                                *(*0x20 + -0x290) = unaff_RDI;\n                                *(*0x20 + -0x338) = uVar6;\n                                *(*0x20 + -0x278) = in_R10;\n                                *(*0x20 + -0x370) = 0x44e156;\n                                iVar3 = fcn.00448680(2);\n                                if (iVar3 < 0) {\n                                    ppcVar9 = *(*0x20 + -0x270);\n                                    arg1 = *(*0x20 + -0x70);\n                                    unaff_RSI = *(*0x20 + 0x40);\n                                    arg3 = *(*0x20 + -0xe8);\n                                    arg4 = *(*0x20 + 0x48);\n                                    ppcVar19 = *(*0x20 + -0xc0);\n                                    iVar11 = *(*0x20 + -0xb0);\n                                    iVar21 = *(*0x20 + -0x2d0);\n                                    uVar10 = *(*0x20 + -0x338);\n                                    in_R10 = *(*0x20 + -0x278);\n                                    unaff_RDI = *(*0x20 + -0x290);\n                                    goto code_r0x0044e353;\n                                }\n                                uVar6 = iVar3;\n                                if (0xfffff < uVar6) break;\n                                *(*0x20 + -0x298) = uVar6 * 5;\n                                iVar11 = *(*0x20 + -0x108);\n                                *(*0x20 + -0x248) = *(iVar11 + 0xc + uVar6 * 0x14);\n                                *(*0x20 + -0x228) = *(iVar11 + uVar6 * 0x14 + 2);\n                                *(*0x20 + -0xa8) = iVar11 + uVar6 * 0x14;\n                                in_R11 = *(*0x20 + 8);\n                                if ((in_R11 & 1) == 0) {\n                                    *(*0x20 + -0x370) = 0x44e1ef;\n                                    cVar2 = fcn.0044ffa0(*(*0x20 + -0x70), *(*0x20 + -0x290), *(*0x20 + -0x338));\n                                    if (cVar2 != '\\0') goto code_r0x0044e205;\n                                    unaff_RDI = *(*0x20 + -0x290);\n                                }\n                                else {\ncode_r0x0044e205:\n                                    uVar5 = *(*0x20 + -0xd0);\n                                    *(*0x20 + -0x370) = 0x44e21a;\n                                    uVar7 = fcn.00447f80();\n                                    *(*0x20 + -0x100) = uVar7;\n                                    *(*0x20 + -0x300) = uVar5;\n                                    uVar5 = *(*0x20 + -0x278);\n                                    uVar7 = *(*0x20 + -0xd0);\n                                    *(*0x20 + -0x370) = 0x44e245;\n                                    uVar8 = fcn.004483c0(uVar5);\n                                    *(*0x20 + -0xd8) = uVar8;\n                                    *(*0x20 + -0x2e8) = uVar7;\n                                    *(*0x20 + -0x330) = uVar5;\n                                    *(*0x20 + -0x370) = 0x44e25e;\n                                    fcn.004324c0();\n                                    *(*0x20 + -0x370) = 0x44e270;\n                                    fcn.00432dc0();\n                                    *(*0x20 + -0x370) = 0x44e285;\n                                    fcn.00432dc0();\n                                    *(*0x20 + -0x370) = 0x44e28a;\n                                    fcn.00432540();\n                                    *(*0x20 + -0x370) = 0x44e28f;\n                                    fcn.004324c0();\n                                    *(*0x20 + -0x370) = 0x44e2a5;\n                                    fcn.00432dc0();\n                                    *(*0x20 + -0x370) = 0x44e2ba;\n                                    fcn.00432dc0();\n                                    *(*0x20 + -0x370) = 0x44e2cb;\n                                    fcn.00432dc0();\n                                    *(*0x20 + -0x370) = 0x44e2d7;\n                                    fcn.00432bc0(*(*0x20 + -0x330));\n                                    *(*0x20 + -0x370) = 0x44e2dc;\n                                    fcn.00432720();\n                                    *(*0x20 + -0x370) = 0x44e2e5;\n                                    fcn.00432540();\n                                    unaff_RDI = *(*0x20 + -0x290) + 1;\n                                }\n                                piVar15 = *(*0x20 + -0x60);\n                                uVar6 = *(*(*0x20 + -0xa8) + 2);\n                                arg4 = *(*0x20 + -0x108);\n                                arg3 = arg4 + *(*0x20 + -0x298) * 4 + 0x10;\n                                in_R10 = **arg3 + *piVar15;\n                            }\n                            *(*0x20 + -0x370) = 0x44e730;\n                            ppcVar9 = fcn.00459720(0x100000);\n                            while( true ) {\n                                uVar12 = *(arg4 + 2);\n                                iVar3 = *(arg3[1] + piVar15 * 4);\n                                iVar11 = **(*0x20 + -0x60);\n                                ppcVar20 = iVar3 + iVar11 + 1;\n                                *(*0x20 + -0x268) = in_R10;\n                                ppcVar16 = iVar3 + iVar11;\ncode_r0x0044e760:\n                                unaff_RDI = ppcVar16;\n                                *(*0x20 + -0x278) = ppcVar20;\n                                *(*0x20 + -0x270) = ppcVar9;\n                                *(*0x20 + -0x338) = uVar12;\n                                unaff_RSI = *0x20 + -0x220;\n                                *(*0x20 + -0x370) = 0x44e794;\n                                arg4 = unaff_RDI;\n                                iVar3 = fcn.00448680(2);\n                                if (iVar3 < 0) break;\n                                uVar6 = iVar3;\n                                if (0xfffff < uVar6) goto code_r0x0044e959;\n                                piVar15 = uVar6 * 5;\n                                arg3 = *(*0x20 + -0x118);\n                                arg4 = arg3 + uVar6 * 0x14;\n                                if ((((*(arg3 + uVar6 * 0x14 + 2) == '\\x16') &&\n                                     (cVar2 = *(*0x20 + -0x338),  cVar2 != '\\t')) && (cVar2 != '\\x13')) &&\n                                   (cVar2 != '\\x0f')) {\n                                    in_R11 = *(*0x20 + 0x40);\n                                    ppcVar9 = *(*0x20 + -0x270);\n                                    in_R10 = *(*0x20 + -0x268);\n                                }\n                                else {\n                                    in_R10 = *(*0x20 + -0x268);\n                                    if (in_R10 < 1) {\n                                        in_R11 = *(*0x20 + 0x40);\n                                        ppcVar9 = *(*0x20 + -0x270);\n                                        if (ppcVar9 < in_R11) {\n                                            if (0xfffff < ppcVar9) goto code_r0x0044e94f;\n                                            *(*(*0x20 + 0x38) + ppcVar9 * 8) = *(*0x20 + -0x278);\n                                            ppcVar9 = ppcVar9 + 1;\n                                        }\n                                    }\n                                    else {\n                                        in_R10 = in_R10 + -1;\n                                        in_R11 = *(*0x20 + 0x40);\n                                        ppcVar9 = *(*0x20 + -0x270);\n                                    }\n                                }\n                            }\n                            arg1 = *(*0x20 + -0x70);\n                            cVar2 = *(*0x20 + -0x33a);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            unaff_RDI = *(*0x20 + -0x310);\n                            arg3 = *(*0x20 + -0xe8);\n                            in_R10 = *(*0x20 + -0x339);\n                            in_R11 = *(*0x20 + 0x38);\n                            ppcVar19 = *(*0x20 + -0xc0);\n                            uVar6 = *(*0x20 + -0x338);\n                            ppcVar9 = *(*0x20 + -0x270);\n                            ppcVar20 = *(*0x20 + -0x278);\n                            arg4 = *(*0x20 + -0x268);\n                        } while( true );\n                    }\n                }\ncode_r0x0044df50:\n                while( true ) {\n                    if (*(*0x20 + -0x339) != '\\0') {\n                        ppcVar9 = unaff_RDI;\n                    }\n                    if ((*(*0x20 + 0x48) == 0) || (unaff_RSI <= ppcVar9)) break;\n                    pcVar18 = arg1[0x10];\n                    if (pcVar18 == *(*0x20 + -0x38)) {\n                        return ppcVar9;\n                    }\n                    *(*0x20 + -600) = *(*0x20 + -0x38);\n                    *(*0x20 + -0x260) = pcVar18;\n                    *(*0x20 + -0x2f8) = ppcVar9;\n                    *(*0x20 + -0x280) = arg1[0x13];\n                    *(*0x20 + -0x370) = 0x44dfbe;\n                    fcn.004324c0();\n                    *(*0x20 + -0x370) = 0x44dfcf;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x370) = 0x44dfdc;\n                    fcn.00432bc0();\n                    *(*0x20 + -0x370) = 0x44dfed;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x370) = 0x44dffa;\n                    fcn.00432c20();\n                    *(*0x20 + -0x370) = 0x44e00b;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x370) = 0x44e018;\n                    fcn.00432c20();\n                    *(*0x20 + -0x370) = 0x44e01d;\n                    fcn.00432720();\n                    *(*0x20 + -0x370) = 0x44e025;\n                    fcn.00432540();\n                    arg1 = **(*0x20 + -0x70);\n                    *(*0x20 + -600) = arg1;\n                    *(*0x20 + -0x260) = (*(*0x20 + -0x70))[1];\n                    *(*0x20 + -0x370) = 0x44e049;\n                    fcn.004324c0();\n                    *(*0x20 + -0x370) = 0x44e05a;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x370) = 0x44e067;\n                    fcn.00432c20();\n                    *(*0x20 + -0x370) = 0x44e078;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x370) = 0x44e085;\n                    fcn.00432c20();\n                    *(*0x20 + -0x370) = 0x44e096;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x370) = 0x44e0a5;\n                    fcn.00432bc0();\n                    *(*0x20 + -0x370) = 0x44e0b6;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x370) = 0x44e0c5;\n                    fcn.00432bc0();\n                    *(*0x20 + -0x370) = 0x44e0ca;\n                    fcn.00432720();\n                    *(*0x20 + -0x370) = 0x44e0cf;\n                    fcn.00432540();\n                    *(*0x20 + -0x370) = 0x44e0e5;\n                    ppcVar9 = in_R10;\n                    fcn.00430d40();\n                    in_R10 = ppcVar9;\n                }\n                return ppcVar9;\n            }\n            goto code_r0x0044e9e5;\n        }\n        goto code_r0x0044e9f6;\n    }\n    goto code_r0x0044ea08;\ncode_r0x0044e353:\n    *(*0x20 + -0x290) = unaff_RDI;\n    *(*0x20 + -0x278) = in_R10;\n    if ((*(*0x20 + 8) & 1) == 0) {\n        *(*0x20 + -0x370) = 0x44e3a5;\n        cVar2 = fcn.0044ffa0(arg1, in_R10 & 0xffffffffffffff00 | unaff_RDI == NULL, uVar10);\n        arg1 = *(*0x20 + -0x70);\n        unaff_RSI = *(*0x20 + 0x40);\n        unaff_RDI = *(*0x20 + -0x290);\n        arg3 = *(*0x20 + -0xe8);\n        arg4 = *(*0x20 + 0x48);\n        ppcVar19 = *(*0x20 + -0xc0);\n        iVar11 = *(*0x20 + -0xb0);\n        iVar21 = *(*0x20 + -0x2d0);\n        ppcVar9 = *(*0x20 + -0x270);\n    }\n    else {\n        cVar2 = '\\x01';\n    }\n    if (cVar2 != '\\0') {\n        uVar5 = *(*0x20 + -0xd0);\n        *(*0x20 + -0x370) = 0x44e41f;\n        uVar7 = fcn.00447f80();\n        *(*0x20 + -0xf8) = uVar7;\n        *(*0x20 + -0x308) = uVar5;\n        uVar5 = *(*0x20 + -0x278);\n        uVar7 = *(*0x20 + -0xd0);\n        *(*0x20 + -0x370) = 0x44e449;\n        uVar8 = fcn.004483c0(uVar5);\n        *(*0x20 + -0xe0) = uVar8;\n        *(*0x20 + -0x2e0) = uVar7;\n        *(*0x20 + -0x334) = uVar5;\n        iVar11 = *(*0x20 + -0x308);\n        if (iVar11 == 0xf) {\n            piVar15 = *(*0x20 + -0xf8);\n            if ((((*piVar15 == 0x2e656d69746e7572) && (*(piVar15 + 1) == 0x61706f67)) && (*(piVar15 + 0xc) == 0x696e))\n               && (*(piVar15 + 0xe) == 'c')) {\n                iVar11 = 5;\n                piVar15 = 0x4813cf;\n            }\n        }\n        else {\n            piVar15 = *(*0x20 + -0xf8);\n        }\n        *(*0x20 + -0x308) = iVar11;\n        *(*0x20 + -0xf8) = piVar15;\n        *(*0x20 + -0x370) = 0x44e4be;\n        fcn.004324c0();\n        *(*0x20 + -0x370) = 0x44e4d0;\n        fcn.00432dc0();\n        *(*0x20 + -0x370) = 0x44e4e5;\n        fcn.00432dc0();\n        *(*0x20 + -0x370) = 0x44e4ea;\n        fcn.00432540();\n        *(*0x20 + -0x370) = 0x44e507;\n        fcn.0044ea80(*(*0x20 + -0x20));\n        *(*0x20 + -0x370) = 0x44e50c;\n        fcn.004324c0();\n        *(*0x20 + -0x370) = 0x44e51d;\n        fcn.00432dc0();\n        *(*0x20 + -0x370) = 0x44e525;\n        fcn.00432540();\n        *(*0x20 + -0x370) = 0x44e52a;\n        fcn.004324c0();\n        *(*0x20 + -0x370) = 0x44e53b;\n        fcn.00432dc0();\n        *(*0x20 + -0x370) = 0x44e550;\n        fcn.00432dc0();\n        *(*0x20 + -0x370) = 0x44e565;\n        fcn.00432dc0();\n        *(*0x20 + -0x370) = 0x44e571;\n        fcn.00432bc0();\n        *(*0x20 + -0x370) = 0x44e576;\n        fcn.00432540();\n        uVar6 = **(*0x20 + -0xc0);\n        if (uVar6 < *(*0x20 + -0x50)) {\n            *(*0x20 + -0x278) = *(*0x20 + -0x50);\n            *(*0x20 + -0x2a0) = uVar6;\n            *(*0x20 + -0x370) = 0x44e5a5;\n            fcn.004324c0();\n            *(*0x20 + -0x370) = 0x44e5b6;\n            fcn.00432dc0();\n            *(*0x20 + -0x370) = 0x44e5ce;\n            fcn.00432c20(*(*0x20 + -0x2a0));\n            *(*0x20 + -0x370) = 0x44e5d3;\n            fcn.00432540();\n        }\n        iVar11 = *(*(*0x20 + -0x70) + 0x30);\n        if ((((iVar11 != 0) && (0 < *(iVar11 + 0xc4))) && (*(iVar11 + 0x90) == *(*0x20 + -0x70))) ||\n           (1 < *(*0x20 + -0x32c))) {\n            *(*0x20 + -0x278) = *(*0x20 + -0x30);\n            *(*0x20 + -0x2a0) = *(*0x20 + -0x38);\n            *(*0x20 + -0x2a8) = *(*0x20 + -0x50);\n            *(*0x20 + -0x370) = 0x44e645;\n            fcn.004324c0();\n            *(*0x20 + -0x370) = 0x44e656;\n            fcn.00432dc0();\n            *(*0x20 + -0x370) = 0x44e665;\n            fcn.00432c20();\n            *(*0x20 + -0x370) = 0x44e676;\n            fcn.00432dc0();\n            *(*0x20 + -0x370) = 0x44e685;\n            fcn.00432c20();\n            *(*0x20 + -0x370) = 0x44e696;\n            fcn.00432dc0();\n            *(*0x20 + -0x370) = 0x44e6a5;\n            fcn.00432c20();\n            *(*0x20 + -0x370) = 0x44e6aa;\n            fcn.00432540();\n        }\n        *(*0x20 + -0x370) = 0x44e6af;\n        fcn.004324c0();\n        *(*0x20 + -0x370) = 0x44e6b4;\n        fcn.00432720();\n        *(*0x20 + -0x370) = 0x44e6b9;\n        fcn.00432540();\n        unaff_RDI = *(*0x20 + -0x290) + 1;\n        ppcVar9 = *(*0x20 + -0x270);\n        arg1 = *(*0x20 + -0x70);\n        unaff_RSI = *(*0x20 + 0x40);\n        arg3 = *(*0x20 + -0xe8);\n        arg4 = *(*0x20 + 0x48);\n        ppcVar19 = *(*0x20 + -0xc0);\n        iVar11 = *(*0x20 + -0xb0);\n        iVar21 = *(*0x20 + -0x2d0);\n    }\n    uVar6 = *(ppcVar19 + 5);\ncode_r0x0044de5a:\n    ppcVar9 = ppcVar9 + 1;\n    if ((*(ppcVar19 + 5) == '\\x04') && (0 < iVar21)) {\n        *(*0x20 + -0x2d8) = *(iVar11 + -8 + iVar21 * 8);\n        in_R11 = *(*0x20 + -0x268);\n        if ((in_R11 == NULL) && (arg4 == NULL)) {\n            *(*0x20 + -0x288) = unaff_RDI;\n            *(*0x20 + -0x336) = uVar6;\n            *(*0x20 + -0x370) = 0x44deba;\n            ppcVar9 = fcn.0044efe0(*(*0x20 + -0x2d8));\n            arg1 = *(*0x20 + -0x70);\n            uVar6 = *(*0x20 + -0x336);\n            unaff_RSI = *(*0x20 + 0x40);\n            unaff_RDI = *(*0x20 + -0x288);\n            arg3 = *(*0x20 + -0xe8);\n            in_R11 = *(*0x20 + -0x268);\n            ppcVar19 = *(*0x20 + -0xc0);\n            iVar11 = *(*0x20 + -0xb0);\n            iVar21 = *(*0x20 + -0x2d0);\n        }\n        iVar21 = iVar21 + -1;\n    }\n    else {\n        in_R11 = *(*0x20 + -0x268);\n    }\n    pcVar18 = *(ppcVar19 + 5);\n    in_R10 = ppcVar9;\n    if (arg3 == NULL) goto code_r0x0044df50;\ncode_r0x0044d2ef:\n    *(*0x20 + -0x60) = arg3;\n    *(*0x20 + -0x58) = *(*0x20 + -200);\n    *(*0x20 + -0x50) = *(*0x20 + -0x40);\n    *(*0x20 + -0x40) = 0;\n    *(*0x20 + -0x38) = *(*0x20 + -0x30);\n    *(*0x20 + -0x30) = 0;\n    *(*0x20 + -0x10) = 0;\n    cVar2 = pcVar18 == '\\x13';\n    arg4 = *(*0x20 + -600);\n    arg3 = NULL;\n    in_R10 = *(*0x20 + -0x260);\n    goto code_r0x0044d36f;\ncode_r0x0044e965:\n    *(*0x20 + -0x370) = 0x44e976;\n    fcn.00430d40();\ncode_r0x0044e976:\n    uVar5 = *(*0x20 + -0xd0);\n    *(*0x20 + -0x370) = 0x44e986;\n    uVar7 = fcn.00447f80();\n    *(*0x20 + -0xa0) = uVar7;\n    *(*0x20 + -0x268) = uVar5;\n    *(*0x20 + -0x370) = 0x44e99b;\n    fcn.004324c0();\n    *(*0x20 + -0x370) = 0x44e9ac;\n    fcn.00432dc0();\n    *(*0x20 + -0x370) = 0x44e9c5;\n    fcn.00432dc0();\n    *(*0x20 + -0x370) = 0x44e9ca;\n    fcn.00432720();\n    *(*0x20 + -0x370) = 0x44e9cf;\n    fcn.00432540();\n    *(*0x20 + -0x370) = 0x44e9e5;\n    fcn.00430d40();\ncode_r0x0044e9e5:\n    *(*0x20 + -0x370) = 0x44e9f6;\n    fcn.00430d40();\ncode_r0x0044e9f6:\n    unaff_RBX = 0x37;\n    *(*0x20 + -0x370) = 0x44ea07;\n    in_RAX = fcn.00430d40();\ncode_r0x0044ea08:\n    *(puVar14 + 0x10) = in_RAX;\n    *(puVar14 + 0x18) = unaff_RBX;\n    *(puVar14 + 0x20) = arg1;\n    *(puVar14 + 0x28) = unaff_RDI;\n    *(puVar14 + 0x30) = unaff_RSI;\n    *(puVar14 + 0x38) = arg3;\n    *(puVar14 + 0x40) = arg4;\n    *(puVar14 + 0x48) = in_R10;\n    *(puVar14 + 0x50) = in_R11;\n    *(puVar14 + -8) = 0x44ea3a;\n    fcn.00457040();\n    in_RAX = *(puVar14 + 0x10);\n    unaff_RBX = *(puVar14 + 0x18);\n    arg1 = *(puVar14 + 0x20);\n    unaff_RDI = *(puVar14 + 0x28);\n    unaff_RSI = *(puVar14 + 0x30);\n    arg3 = *(puVar14 + 0x38);\n    arg4 = *(puVar14 + 0x40);\n    in_R10 = *(puVar14 + 0x48);\n    in_R11 = *(puVar14 + 0x50);\n    *0x20 = puVar14;\n    goto code_r0x0044d020;\n}\n",
        "token_count": 13404
    },
    "0044f5c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044f5c0(ulong arg1)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    uchar auStack312 [256];\n    ulong *puStack56;\n    ulong uStack48;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    while (auStack312 < *(unaff_R14 + 0x10) || auStack312 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (((((*0x557c6c != '\\0') && (iVar1 = *(unaff_RDI + 0x30),  iVar1 != 0)) && (0 < *(iVar1 + 0x108))) &&\n        ((*(unaff_RDI + 0x70) != 0 && (*(iVar1 + 0x110) != NULL)))) && (**(iVar1 + 0x110) != 0)) {\n        *(iVar1 + 0x10c) = 1;\n        iVar1 = fcn.00459c80();\n        **(*(iVar1 + 0x30) + 0x110) = 0;\n        *(*(iVar1 + 0x30) + 0x10c) = 0;\n        fcn.004509a0();\n    }\n    uVar2 = *(unaff_RDI + 0x90) & 0xffffefff;\n    if (uVar2 == 3) {\n        unaff_RSI = unaff_RSI & 0xfffffffffffffffd;\n    }\n    iVar1 = fcn.0044d020(arg1, uVar2, 0, 100);\n    if ((iVar1 == 0) && ((unaff_RSI & 1) == 0)) {\n        iVar1 = fcn.0044d020(arg1, unaff_RSI | 1, 0, 100);\n    }\n    if (iVar1 == 100) {\n        fcn.004324c0();\n        fcn.00432dc0();\n        fcn.00432540();\n    }\n    fcn.0044f280();\n    puStack56 = *(unaff_RDI + 0x130);\n    if (puStack56 == NULL) {\n        return;\n    }\n    iVar1 = puStack56[1];\n    puStack56 = *puStack56;\n    if (0 < iVar1) {\n        iVar3 = 0;\n        while( true ) {\n            uStack48 = *puStack56;\n            uStack40 = *(puStack56 + 1);\n            uStack36 = *(puStack56 + 0xc);\n            uStack32 = *(puStack56 + 2);\n            uStack28 = *(puStack56 + 0x14);\n            uStack24 = *(puStack56 + 3);\n            uStack20 = *(puStack56 + 0x1c);\n            uStack16 = *(puStack56 + 4);\n            uStack12 = *(puStack56 + 0x24);\n            fcn.0044f8e0(puStack56[2]);\n            iVar3 = iVar3 + 1;\n            if (iVar1 <= iVar3) break;\n            puStack56 = puStack56 + 5;\n        }\n    }\n    return;\n}\n",
        "token_count": 789
    },
    "0044faa0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044faa0(ulong arg1)\n\n{\n    uint32_t uVar1;\n    ulong uVar2;\n    int32_t iVar3;\n    ulong in_RAX;\n    ulong uVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    ulong unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t *piVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x88) = 0x44fadf;\n            uVar4 = fcn.00447f80();\n            *(*0x20 + -0x28) = uVar4;\n            *(*0x20 + -0x50) = unaff_RBX;\n            iVar7 = *(*0x20 + -0x10);\n            if (*(iVar7 + 0x2b) < 4) {\n                iVar7 = 0;\n            }\n            else {\n                iVar6 = iVar7 + *(iVar7 + 0x20) * 4 + 0x2c;\n                if ((iVar6 >> 2 & 1) != 0) {\n                    if ((iVar7 >> 2 & 1) != 0) {\n                        *(*0x20 + -0x30) = iVar6;\n                        *(*0x20 + -0x88) = 0x44fb28;\n                        fcn.004324c0();\n                        *(*0x20 + -0x88) = 0x44fb39;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x88) = 0x44fb45;\n                        fcn.00432d40();\n                        *(*0x20 + -0x88) = 0x44fb4a;\n                        fcn.00432720();\n                        *(*0x20 + -0x88) = 0x44fb4f;\n                        fcn.00432540();\n                        uVar4 = *(*0x20 + -0x28);\n                        iVar6 = *(*0x20 + -0x30);\n                        unaff_RBX = *(*0x20 + -0x50);\n                    }\n                    iVar6 = iVar6 + 4;\n                }\n                iVar7 = *(iVar6 + 0x18);\n            }\n            if (iVar7 == 0) goto code_r0x0044fbd9;\n            *(*0x20 + -0x38) = iVar7;\n            unaff_RBX = *(*0x20 + -0x18);\n            *(*0x20 + -0x88) = 0x44fb96;\n            iVar3 = fcn.00448680(2);\n            if (iVar3 < 0) {\n                unaff_RBX = *(*0x20 + -0x50);\n                uVar4 = *(*0x20 + -0x28);\n                goto code_r0x0044fbd9;\n            }\n            if (iVar3 < 0x100000) {\n                uVar1 = *(*(*0x20 + -0x38) + 0xc + iVar3 * 0x14);\n                unaff_RBX = *(*0x20 + -0x18);\n                *(*0x20 + -0x88) = 0x44fbc8;\n                uVar4 = fcn.004480e0(uVar1);\ncode_r0x0044fbd9:\n                *(*0x20 + -0x50) = unaff_RBX;\n                *(*0x20 + -0x28) = uVar4;\n                uVar4 = *(*0x20 + 0x18);\n                uVar2 = *(*0x20 + -0x18);\n                *(*0x20 + -0x88) = 0x44fbfe;\n                uVar5 = fcn.004482a0(uVar4);\n                *(*0x20 + -0x20) = uVar5;\n                *(*0x20 + -0x48) = uVar2;\n                *(*0x20 + -0x54) = uVar4;\n                iVar7 = *(*0x20 + -0x50);\n                if (iVar7 == 0xf) {\n                    piVar9 = *(*0x20 + -0x28);\n                    if ((((*piVar9 == 0x2e656d69746e7572) && (*(piVar9 + 1) == 0x61706f67)) &&\n                        (*(piVar9 + 0xc) == 0x696e)) && (*(piVar9 + 0xe) == 'c')) {\n                        iVar7 = 5;\n                        piVar9 = 0x4813cf;\n                    }\n                }\n                else {\n                    piVar9 = *(*0x20 + -0x28);\n                }\n                *(*0x20 + -0x50) = iVar7;\n                *(*0x20 + -0x28) = piVar9;\n                *(*0x20 + -0x88) = 0x44fc65;\n                fcn.004324c0();\n                *(*0x20 + -0x88) = 0x44fc74;\n                fcn.00432dc0();\n                *(*0x20 + -0x88) = 0x44fc85;\n                fcn.00432dc0();\n                *(*0x20 + -0x88) = 0x44fc8a;\n                fcn.00432540();\n                *(*0x20 + -0x88) = 0x44fc8f;\n                fcn.004324c0();\n                *(*0x20 + -0x88) = 0x44fca5;\n                fcn.00432dc0();\n                *(*0x20 + -0x88) = 0x44fcb4;\n                fcn.00432dc0();\n                *(*0x20 + -0x88) = 0x44fcc5;\n                fcn.00432dc0();\n                *(*0x20 + -0x88) = 0x44fcd1;\n                fcn.00432bc0();\n                *(*0x20 + -0x88) = 0x44fcd6;\n                fcn.00432540();\n                if (**(*0x20 + -0x10) < *(*0x20 + 0x18)) {\n                    *(*0x20 + -0x40) = **(*0x20 + -0x10);\n                    *(*0x20 + -0x88) = 0x44fcf5;\n                    fcn.004324c0();\n                    *(*0x20 + -0x88) = 0x44fd06;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x88) = 0x44fd1b;\n                    fcn.00432c20(*(*0x20 + -0x40));\n                    *(*0x20 + -0x88) = 0x44fd25;\n                    fcn.00432540();\n                }\n                *(*0x20 + -0x88) = 0x44fd2a;\n                fcn.004324c0();\n                *(*0x20 + -0x88) = 0x44fd2f;\n                fcn.00432720();\n                *(*0x20 + -0x88) = 0x44fd34;\n                fcn.00432540();\n                return;\n            }\n            arg1 = 0x100000;\n            *(*0x20 + -0x88) = 0x44fd48;\n            in_RAX = fcn.00459720(0x100000);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + -8) = 0x44fd5d;\n        fcn.00457040();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1979
    },
    "00450240": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00450240(void)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    int64_t iStack64;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    uVar1 = *(in_RAX + 0x90);\n    uVar2 = uVar1 & 0xffffefff;\n    if (((uVar2 == 4) || (uVar2 == 3)) && (*(in_RAX + 0xa8) != 0)) {\n        fcn.0045afe0();\n        iVar3 = (iStack64 - *(in_RAX + 0xa8)) / 60000000000;\n    }\n    else {\n        iVar3 = 0;\n    }\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432bc0();\n    fcn.00432dc0();\n    fcn.00432dc0();\n    fcn.00432540();\n    if ((uVar1 >> 0xc & 1) != 0) {\n        fcn.004324c0();\n        fcn.00432dc0();\n        fcn.00432540();\n    }\n    if (0 < iVar3) {\n        fcn.004324c0();\n        fcn.00432dc0();\n        fcn.00432bc0();\n        fcn.00432dc0();\n        fcn.00432540();\n    }\n    if (*(in_RAX + 0xe8) != 0) {\n        fcn.004324c0();\n        fcn.00432dc0();\n        fcn.00432540();\n    }\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432540();\n    return;\n}\n",
        "token_count": 450
    },
    "00452e40": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00452e40(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    int64_t in_RAX;\n    uint64_t uVar6;\n    uint64_t unaff_RBX;\n    int64_t iVar7;\n    \n    if (unaff_RBX <= arg1) {\n        return 0xfffd;\n    }\n    if (arg1 <= unaff_RBX) {\n        iVar7 = unaff_RBX - arg1;\n        unaff_RBX = -iVar7 >> 0x3f & arg1;\n        if (iVar7 != 0) {\n            uVar1 = *(in_RAX + unaff_RBX);\n            if (0xbf < uVar1) {\n                uVar5 = uVar1;\n                if (uVar1 < 0xe0) {\n                    if (((1 < iVar7) && (uVar1 = *(in_RAX + 1 + unaff_RBX),  0x7f < uVar1)) &&\n                       ((uVar1 < 0xc0 && (uVar5 = uVar1 & 0x3f | (uVar5 & 0x1f) << 6,  0x7f < uVar5)))) {\n                        return uVar5;\n                    }\n                }\n                else if (uVar1 < 0xf0) {\n                    if ((((2 < iVar7) && (uVar1 = *(in_RAX + 1 + unaff_RBX),  0x7f < uVar1)) && (uVar1 < 0xc0)) &&\n                       ((uVar2 = *(in_RAX + 2 + unaff_RBX),  0x7f < uVar2 && (uVar2 < 0xc0)))) {\n                        uVar5 = uVar2 & 0x3f | (uVar1 & 0x3f) << 6 | (uVar5 & 0xf) << 0xc;\n                        if ((0x7ff < uVar5) && (0x7ff < uVar5 - 0xd800)) {\n                            return uVar5;\n                        }\n                    }\n                }\n                else if ((((((uVar1 < 0xf8) && (3 < iVar7)) && (uVar1 = *(in_RAX + 1 + unaff_RBX),  0x7f < uVar1)) &&\n                          ((uVar1 < 0xc0 && (uVar2 = *(in_RAX + 2 + unaff_RBX),  0x7f < uVar2)))) &&\n                         ((uVar2 < 0xc0 && ((uVar3 = *(in_RAX + 3 + unaff_RBX),  0x7f < uVar3 && (uVar3 < 0xc0)))))) &&\n                        (uVar5 = uVar3 & 0x3f | (uVar5 & 7) << 0x12 | (uVar1 & 0x3f) << 0xc | (uVar2 & 0x3f) << 6, \n                        uVar5 - 0x10000 < 0x100000)) {\n                    return uVar5;\n                }\n            }\n            return 0xfffd;\n        }\n        fcn.00459720(0);\n    }\n    fcn.004597e0(unaff_RBX);\n    pcVar4 = swi(3);\n    uVar6 = (*pcVar4)();\n    return uVar6;\n}\n",
        "token_count": 800
    },
    "00453020": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00453020(void)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    uint8_t *in_RAX;\n    ulong uVar3;\n    uint64_t unaff_RBX;\n    uint8_t uVar4;\n    uint32_t unaff_EDI;\n    \n    uVar4 = unaff_EDI;\n    if (unaff_EDI < 0x80) {\n        if (unaff_RBX != 0) {\n            *in_RAX = uVar4;\n            return 1;\n        }\n        goto code_r0x0045316c;\n    }\n    uVar2 = unaff_EDI >> 6;\n    if (unaff_EDI < 0x800) {\n        if (1 < unaff_RBX) {\n            *in_RAX = uVar2 | 0xc0;\n            in_RAX[1] = uVar4 & 0x3f | 0x80;\n            return 2;\n        }\n    }\n    else {\n        if ((unaff_EDI < 0x110000) && (0x7ff < unaff_EDI - 0xd800)) {\n            if (unaff_EDI < 0x10000) goto code_r0x004530c0;\n            if (3 < unaff_RBX) {\n                *in_RAX = unaff_EDI >> 0x12 | 0xf0;\n                in_RAX[1] = unaff_EDI >> 0xc & 0x3f | 0x80;\n                in_RAX[2] = uVar2 & 0x3f | 0x80;\n                in_RAX[3] = uVar4 & 0x3f | 0x80;\n                return 4;\n            }\n            fcn.00459720(unaff_RBX);\n        }\n        else {\n            unaff_EDI = 0xfffd;\ncode_r0x004530c0:\n            if (2 < unaff_RBX) {\n                *in_RAX = unaff_EDI >> 0xc | 0xe0;\n                in_RAX[1] = unaff_EDI >> 6 & 0x3f | 0x80;\n                in_RAX[2] = unaff_EDI & 0x3f | 0x80;\n                return 3;\n            }\n        }\n        fcn.00459720(unaff_RBX);\n    }\n    fcn.00459720(unaff_RBX);\ncode_r0x0045316c:\n    fcn.00459720(unaff_RBX);\n    pcVar1 = swi(3);\n    uVar3 = (*pcVar1)();\n    return uVar3;\n}\n",
        "token_count": 593
    },
    "00454b60": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00454b60(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t *in_RAX;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (unaff_RBX < 4) {\n        if (unaff_RBX == 0) {\ncode_r0x00454bf6:\n            uVar1 = 4;\n            goto code_r0x00454c32;\n        }\n        if (((unaff_RBX == 3) && (*in_RAX == 0x6c61)) && (*(in_RAX + 2) == 'l')) {\n            uVar1 = 6;\n            goto code_r0x00454c32;\n        }\n    }\n    else if (unaff_RBX == 4) {\n        if (*in_RAX == 0x656e6f6e) {\n            uVar1 = 0;\n            goto code_r0x00454c32;\n        }\n    }\n    else if (unaff_RBX == 5) {\n        if ((*in_RAX == 0x73617263) && (*(in_RAX + 1) == 'h')) {\n            uVar1 = 0xb;\n            goto code_r0x00454c32;\n        }\n    }\n    else if (unaff_RBX == 6) {\n        if ((*in_RAX == 0x676e6973) && (*(in_RAX + 1) == 0x656c)) goto code_r0x00454bf6;\n        if ((*in_RAX == 0x74737973) && (*(in_RAX + 1) == 0x6d65)) {\n            uVar1 = 10;\n            goto code_r0x00454c32;\n        }\n    }\n    uVar3 = fcn.00446ba0();\n    if ((unaff_RBX == '\\0') || (uVar3 != (uVar3 & 0xffffffff))) {\n        uVar1 = 2;\n    }\n    else {\n        uVar1 = uVar3 << 2 | 2;\n    }\ncode_r0x00454c32:\n    if ((*0x557c6d != '\\0') || (*0x557c6b != '\\0')) {\n        uVar1 = uVar1 | 1;\n    }\n    uVar2 = *0x4f0188;\n    *0x4f0188 = uVar1 | *0x557cd8;\n    return uVar2;\n}\n",
        "token_count": 610
    },
    "00460a00": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00460a00(int64_t arg1)\n\n{\n    ulong uVar1;\n    ulong uVar2;\n    ulong uVar3;\n    ulong uVar4;\n    ulong uVar5;\n    ulong in_RAX;\n    ulong uVar6;\n    ulong in_RDX;\n    ulong *unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x68 && *0x20 + -0x68 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0xe8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 < 9) {\n                if (3 < arg1) {\n                    if (arg1 < 6) {\n                        if (arg1 == 4) {\n                            uVar6 = *unaff_RBX;\n                            uVar1 = unaff_RBX[3];\n                            *(*0x20 + -0xf0) = 0x460bfb;\n                            uVar6 = fcn.0045b8c0(uVar6, uVar6, uVar1, 0);\n                            *(*0x20 + -0x10) = uVar6;\n                            *(*0x20 + -0x18) = 4;\n                            *(*0x20 + -0xf0) = 0x460c13;\n                            fcn.00408ce0();\n                            return *(*0x20 + -0x10);\n                        }\n                        uVar6 = *unaff_RBX;\n                        uVar1 = unaff_RBX[3];\n                        uVar2 = unaff_RBX[4];\n                        *(*0x20 + -0xf0) = 0x460c65;\n                        uVar6 = fcn.0045b8c0(uVar6, uVar6, uVar1, uVar2);\n                        *(*0x20 + -0x10) = uVar6;\n                        *(*0x20 + -0x18) = arg1;\n                        *(*0x20 + -0xf0) = 0x460c7d;\n                        fcn.00408ce0();\n                        return *(*0x20 + -0x10);\n                    }\n                    if (arg1 == 6) {\n                        uVar6 = *unaff_RBX;\n                        uVar1 = unaff_RBX[3];\n                        uVar2 = unaff_RBX[4];\n                        *(*0x20 + -0xf0) = 0x460dcd;\n                        uVar6 = fcn.0045b8c0(uVar6, uVar6, uVar1, uVar2);\n                        *(*0x20 + -0x10) = uVar6;\n                        *(*0x20 + -0x18) = 6;\n                        *(*0x20 + -0xf0) = 0x460de5;\n                        fcn.00408ce0();\n                        return *(*0x20 + -0x10);\n                    }\n                    if (arg1 == 7) {\n                        uVar6 = *unaff_RBX;\n                        uVar1 = unaff_RBX[3];\n                        uVar2 = unaff_RBX[4];\n                        *(*0x20 + -0xe8) = in_XMM15;\n                        *(*0x20 + -0xf0) = 0x460ce6;\n                        uVar6 = fcn.0045b940(uVar6, uVar6, uVar1, uVar2);\n                        *(*0x20 + -0x10) = uVar6;\n                        *(*0x20 + -0x18) = 7;\n                        *(*0x20 + -0xf0) = 0x460cfe;\n                        fcn.00408ce0();\n                        return *(*0x20 + -0x10);\n                    }\n                    uVar6 = *unaff_RBX;\n                    uVar1 = unaff_RBX[3];\n                    uVar2 = unaff_RBX[4];\n                    *(*0x20 + -0xe8) = unaff_RBX[7];\n                    *(*0x20 + -0xe0) = 0;\n                    *(*0x20 + -0xf0) = 0x460d65;\n                    uVar6 = fcn.0045b940(uVar6, uVar6, uVar1, uVar2);\n                    *(*0x20 + -0x10) = uVar6;\n                    *(*0x20 + -0x18) = arg1;\n                    *(*0x20 + -0xf0) = 0x460d7d;\n                    fcn.00408ce0();\n                    return *(*0x20 + -0x10);\n                }\n                if (1 < arg1) {\n                    if (arg1 == 2) {\n                        uVar6 = *unaff_RBX;\n                        *(*0x20 + -0xf0) = 0x460b26;\n                        uVar6 = fcn.0045b860(uVar6);\n                        *(*0x20 + -0x10) = uVar6;\n                        *(*0x20 + -0x18) = 2;\n                        *(*0x20 + -0xf0) = 0x460b3e;\n                        fcn.00408ce0();\n                        return *(*0x20 + -0x10);\n                    }\n                    uVar6 = *unaff_RBX;\n                    *(*0x20 + -0xf0) = 0x460b85;\n                    uVar6 = fcn.0045b860(uVar6);\n                    *(*0x20 + -0x10) = uVar6;\n                    *(*0x20 + -0x18) = arg1;\n                    *(*0x20 + -0xf0) = 0x460b9d;\n                    fcn.00408ce0();\n                    return *(*0x20 + -0x10);\n                }\n                if (arg1 == 0) {\n                    *(*0x20 + -0xf0) = 0x460a6d;\n                    uVar6 = fcn.0045b860(0);\n                    *(*0x20 + -0x10) = uVar6;\n                    *(*0x20 + -0x18) = 0;\n                    *(*0x20 + -0xf0) = 0x460a85;\n                    fcn.00408ce0();\n                    return *(*0x20 + -0x10);\n                }\n                uVar6 = *unaff_RBX;\n                *(*0x20 + -0xf0) = 0x460ac6;\n                uVar6 = fcn.0045b860(uVar6);\n                *(*0x20 + -0x10) = uVar6;\n                *(*0x20 + -0x18) = arg1;\n                *(*0x20 + -0xf0) = 0x460ade;\n                fcn.00408ce0();\n                return *(*0x20 + -0x10);\n            }\n            if (arg1 < 0xe) {\n                if (arg1 < 0xb) {\n                    if (arg1 == 9) {\n                        uVar6 = *unaff_RBX;\n                        uVar1 = unaff_RBX[3];\n                        uVar2 = unaff_RBX[4];\n                        uVar3 = unaff_RBX[8];\n                        *(*0x20 + -0xe8) = unaff_RBX[7];\n                        *(*0x20 + -0xe0) = uVar3;\n                        *(*0x20 + -0xf0) = 0x460e6f;\n                        uVar6 = fcn.0045b940(uVar6, uVar6, uVar1, uVar2);\n                        *(*0x20 + -0x10) = uVar6;\n                        *(*0x20 + -0x18) = 9;\n                        *(*0x20 + -0xf0) = 0x460e87;\n                        fcn.00408ce0();\n                        return *(*0x20 + -0x10);\n                    }\n                    uVar6 = *unaff_RBX;\n                    uVar1 = unaff_RBX[3];\n                    uVar2 = unaff_RBX[4];\n                    uVar3 = unaff_RBX[8];\n                    uVar4 = unaff_RBX[9];\n                    *(*0x20 + -0xe8) = unaff_RBX[7];\n                    *(*0x20 + -0xe0) = uVar3;\n                    *(*0x20 + -0xd8) = uVar4;\n                    *(*0x20 + -0xd0) = in_XMM15;\n                    *(*0x20 + -0xf0) = 0x460efb;\n                    uVar6 = fcn.0045b9e0(uVar6, uVar6, uVar1, uVar2);\n                    *(*0x20 + -0x10) = uVar6;\n                    *(*0x20 + -0x18) = arg1;\n                    *(*0x20 + -0xf0) = 0x460f13;\n                    fcn.00408ce0();\n                    return *(*0x20 + -0x10);\n                }\n                if (arg1 == 0xb) {\n                    *(*0x20 + -0x10) = *unaff_RBX;\n                    uVar6 = unaff_RBX[3];\n                    uVar1 = unaff_RBX[4];\n                    uVar2 = unaff_RBX[8];\n                    uVar3 = unaff_RBX[9];\n                    uVar4 = unaff_RBX[10];\n                    *(*0x20 + -0xe8) = unaff_RBX[7];\n                    *(*0x20 + -0xe0) = uVar2;\n                    *(*0x20 + -0xd8) = uVar3;\n                    *(*0x20 + -0xd0) = uVar4;\n                    *(*0x20 + -200) = 0;\n                    *(*0x20 + -0xf0) = 0x461145;\n                    uVar6 = fcn.0045b9e0(*(*0x20 + -0x10), uVar4, uVar6, uVar1);\n                    *(*0x20 + -0x10) = uVar6;\n                    *(*0x20 + -0x18) = 0xb;\n                    *(*0x20 + -0xf0) = 0x46115d;\n                    fcn.00408ce0();\n                    return *(*0x20 + -0x10);\n                }\n                if (arg1 == 0xc) {\n                    *(*0x20 + -0x10) = *unaff_RBX;\n                    uVar6 = unaff_RBX[3];\n                    uVar1 = unaff_RBX[4];\n                    uVar2 = unaff_RBX[7];\n                    uVar3 = unaff_RBX[8];\n                    uVar4 = unaff_RBX[9];\n                    *(*0x20 + -0x18) = unaff_RBX[10];\n                    uVar5 = unaff_RBX[0xb];\n                    *(*0x20 + -0xe8) = uVar2;\n                    *(*0x20 + -0xe0) = uVar3;\n                    *(*0x20 + -0xd8) = uVar4;\n                    *(*0x20 + -0xd0) = *(*0x20 + -0x18);\n                    *(*0x20 + -200) = uVar5;\n                    *(*0x20 + -0xf0) = 0x460fc7;\n                    uVar6 = fcn.0045b9e0(*(*0x20 + -0x10), uVar5, uVar6, uVar1);\n                    *(*0x20 + -0x10) = uVar6;\n                    *(*0x20 + -0x18) = 0xc;\n                    *(*0x20 + -0xf0) = 0x460fdf;\n                    fcn.00408ce0();\n                    return *(*0x20 + -0x10);\n                }\n                *(*0x20 + -0x10) = *unaff_RBX;\n                uVar6 = unaff_RBX[3];\n                uVar1 = unaff_RBX[4];\n                uVar2 = unaff_RBX[7];\n                uVar3 = unaff_RBX[8];\n                uVar4 = unaff_RBX[9];\n                *(*0x20 + -0x18) = unaff_RBX[10];\n                *(*0x20 + -0x20) = unaff_RBX[0xb];\n                uVar5 = unaff_RBX[0xc];\n                *(*0x20 + -0xe8) = uVar2;\n                *(*0x20 + -0xe0) = uVar3;\n                *(*0x20 + -0xd8) = uVar4;\n                *(*0x20 + -0xd0) = *(*0x20 + -0x18);\n                *(*0x20 + -200) = *(*0x20 + -0x20);\n                *(*0x20 + -0xc0) = uVar5;\n                *(*0x20 + -0xb8) = in_XMM15;\n                *(*0x20 + -0xf0) = 0x46109b;\n                uVar6 = fcn.0045baa0(*(*0x20 + -0x10), uVar5, uVar6, uVar1);\n                *(*0x20 + -0x10) = uVar6;\n                *(*0x20 + -0x18) = arg1;\n                *(*0x20 + -0xf0) = 0x4610b3;\n                fcn.00408ce0();\n                return *(*0x20 + -0x10);\n            }\n            if (arg1 < 0x10) {\n                if (arg1 == 0xe) {\n                    *(*0x20 + -0x10) = *unaff_RBX;\n                    uVar6 = unaff_RBX[3];\n                    uVar1 = unaff_RBX[4];\n                    uVar2 = unaff_RBX[7];\n                    uVar3 = unaff_RBX[8];\n                    uVar4 = unaff_RBX[9];\n                    *(*0x20 + -0x18) = unaff_RBX[10];\n                    *(*0x20 + -0x20) = unaff_RBX[0xb];\n                    *(*0x20 + -0x28) = unaff_RBX[0xc];\n                    uVar5 = unaff_RBX[0xd];\n                    *(*0x20 + -0xe8) = uVar2;\n                    *(*0x20 + -0xe0) = uVar3;\n                    *(*0x20 + -0xd8) = uVar4;\n                    *(*0x20 + -0xd0) = *(*0x20 + -0x18);\n                    *(*0x20 + -200) = *(*0x20 + -0x20);\n                    *(*0x20 + -0xc0) = *(*0x20 + -0x28);\n                    *(*0x20 + -0xb8) = uVar5;\n                    *(*0x20 + -0xb0) = 0;\n                    *(*0x20 + -0xf0) = 0x461249;\n                    uVar6 = fcn.0045baa0(*(*0x20 + -0x10), uVar5, uVar6, uVar1);\n                    *(*0x20 + -0x10) = uVar6;\n                    *(*0x20 + -0x18) = 0xe;\n                    *(*0x20 + -0xf0) = 0x461265;\n                    fcn.00408ce0();\n                    return *(*0x20 + -0x10);\n                }\n                *(*0x20 + -0x10) = *unaff_RBX;\n                uVar6 = unaff_RBX[3];\n                uVar1 = unaff_RBX[4];\n                uVar2 = unaff_RBX[7];\n                uVar3 = unaff_RBX[8];\n                uVar4 = unaff_RBX[9];\n                *(*0x20 + -0x18) = unaff_RBX[10];\n                *(*0x20 + -0x20) = unaff_RBX[0xb];\n                *(*0x20 + -0x28) = unaff_RBX[0xc];\n                *(*0x20 + -0x30) = unaff_RBX[0xd];\n                uVar5 = unaff_RBX[0xe];\n                *(*0x20 + -0xe8) = uVar2;\n                *(*0x20 + -0xe0) = uVar3;\n                *(*0x20 + -0xd8) = uVar4;\n                *(*0x20 + -0xd0) = *(*0x20 + -0x18);\n                *(*0x20 + -200) = *(*0x20 + -0x20);\n                *(*0x20 + -0xc0) = *(*0x20 + -0x28);\n                *(*0x20 + -0xb8) = *(*0x20 + -0x30);\n                *(*0x20 + -0xb0) = uVar5;\n                *(*0x20 + -0xf0) = 0x46134d;\n                uVar6 = fcn.0045baa0(*(*0x20 + -0x10), uVar5, uVar6, uVar1);\n                *(*0x20 + -0x10) = uVar6;\n                *(*0x20 + -0x18) = arg1;\n                *(*0x20 + -0xf0) = 0x461365;\n                fcn.00408ce0();\n                return *(*0x20 + -0x10);\n            }\n            if (arg1 == 0x10) {\n                *(*0x20 + -0x10) = *unaff_RBX;\n                uVar6 = unaff_RBX[3];\n                uVar1 = unaff_RBX[4];\n                uVar2 = unaff_RBX[7];\n                uVar3 = unaff_RBX[8];\n                uVar4 = unaff_RBX[9];\n                *(*0x20 + -0x18) = unaff_RBX[10];\n                *(*0x20 + -0x20) = unaff_RBX[0xb];\n                *(*0x20 + -0x28) = unaff_RBX[0xc];\n                *(*0x20 + -0x30) = unaff_RBX[0xd];\n                *(*0x20 + -0x38) = unaff_RBX[0xe];\n                uVar5 = unaff_RBX[0xf];\n                *(*0x20 + -0xe8) = uVar2;\n                *(*0x20 + -0xe0) = uVar3;\n                *(*0x20 + -0xd8) = uVar4;\n                *(*0x20 + -0xd0) = *(*0x20 + -0x18);\n                *(*0x20 + -200) = *(*0x20 + -0x20);\n                *(*0x20 + -0xc0) = *(*0x20 + -0x28);\n                *(*0x20 + -0xb8) = *(*0x20 + -0x30);\n                *(*0x20 + -0xb0) = *(*0x20 + -0x38);\n                *(*0x20 + -0xa8) = uVar5;\n                *(*0x20 + -0xa0) = in_XMM15;\n                *(*0x20 + -0xf0) = 0x461725;\n                uVar6 = fcn.0045bba0(*(*0x20 + -0x10), uVar5, uVar6, uVar1);\n                *(*0x20 + -0x10) = uVar6;\n                *(*0x20 + -0x18) = 0x10;\n                *(*0x20 + -0xf0) = 0x46173d;\n                fcn.00408ce0();\n                return *(*0x20 + -0x10);\n            }\n            if (arg1 == 0x11) {\n                *(*0x20 + -0x10) = *unaff_RBX;\n                uVar6 = unaff_RBX[3];\n                uVar1 = unaff_RBX[4];\n                uVar2 = unaff_RBX[7];\n                uVar3 = unaff_RBX[8];\n                uVar4 = unaff_RBX[9];\n                *(*0x20 + -0x18) = unaff_RBX[10];\n                *(*0x20 + -0x20) = unaff_RBX[0xb];\n                *(*0x20 + -0x28) = unaff_RBX[0xc];\n                *(*0x20 + -0x30) = unaff_RBX[0xd];\n                *(*0x20 + -0x38) = unaff_RBX[0xe];\n                *(*0x20 + -0x40) = unaff_RBX[0xf];\n                uVar5 = unaff_RBX[0x10];\n                *(*0x20 + -0xe8) = uVar2;\n                *(*0x20 + -0xe0) = uVar3;\n                *(*0x20 + -0xd8) = uVar4;\n                *(*0x20 + -0xd0) = *(*0x20 + -0x18);\n                *(*0x20 + -200) = *(*0x20 + -0x20);\n                *(*0x20 + -0xc0) = *(*0x20 + -0x28);\n                *(*0x20 + -0xb8) = *(*0x20 + -0x30);\n                *(*0x20 + -0xb0) = *(*0x20 + -0x38);\n                *(*0x20 + -0xa8) = *(*0x20 + -0x40);\n                *(*0x20 + -0xa0) = uVar5;\n                *(*0x20 + -0x98) = 0;\n                *(*0x20 + -0xf0) = 0x461605;\n                uVar6 = fcn.0045bba0(*(*0x20 + -0x10), uVar5, uVar6, uVar1);\n                *(*0x20 + -0x10) = uVar6;\n                *(*0x20 + -0x18) = 0x11;\n                *(*0x20 + -0xf0) = 0x46161d;\n                fcn.00408ce0();\n                return *(*0x20 + -0x10);\n            }\n            if (arg1 == 0x12) {\n                *(*0x20 + -0x10) = *unaff_RBX;\n                uVar6 = unaff_RBX[3];\n                uVar1 = unaff_RBX[4];\n                uVar2 = unaff_RBX[7];\n                uVar3 = unaff_RBX[8];\n                uVar4 = unaff_RBX[9];\n                *(*0x20 + -0x18) = unaff_RBX[10];\n                *(*0x20 + -0x20) = unaff_RBX[0xb];\n                *(*0x20 + -0x28) = unaff_RBX[0xc];\n                *(*0x20 + -0x30) = unaff_RBX[0xd];\n                *(*0x20 + -0x38) = unaff_RBX[0xe];\n                *(*0x20 + -0x40) = unaff_RBX[0xf];\n                *(*0x20 + -0x48) = unaff_RBX[0x10];\n                uVar5 = unaff_RBX[0x11];\n                *(*0x20 + -0xe8) = uVar2;\n                *(*0x20 + -0xe0) = uVar3;\n                *(*0x20 + -0xd8) = uVar4;\n                *(*0x20 + -0xd0) = *(*0x20 + -0x18);\n                *(*0x20 + -200) = *(*0x20 + -0x20);\n                *(*0x20 + -0xc0) = *(*0x20 + -0x28);\n                *(*0x20 + -0xb8) = *(*0x20 + -0x30);\n                *(*0x20 + -0xb0) = *(*0x20 + -0x38);\n                *(*0x20 + -0xa8) = *(*0x20 + -0x40);\n                *(*0x20 + -0xa0) = *(*0x20 + -0x48);\n                *(*0x20 + -0x98) = uVar5;\n                *(*0x20 + -0xf0) = 0x4614c5;\n                uVar6 = fcn.0045bba0(*(*0x20 + -0x10), uVar5, uVar6, uVar1);\n                *(*0x20 + -0x10) = uVar6;\n                *(*0x20 + -0x18) = 0x12;\n                *(*0x20 + -0xf0) = 0x4614dd;\n                fcn.00408ce0();\n                return *(*0x20 + -0x10);\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0xf0) = 0x461777;\n            fcn.0045eea0();\n            unaff_RDI = *(*(*0x20 + 8) + 8);\n            *(*0x20 + -0xe8) = 0x480fe5;\n            *(*0x20 + -0xe0) = 1;\n            arg1 = 5;\n            *(*0x20 + -0xf0) = 0x4617c5;\n            fcn.004461e0(5, in_RDX, 0x485438, 0x19);\n            *(*0x20 + -0xf0) = 0x4617ca;\n            unaff_RBX = fcn.00408d60();\n            *(*0x20 + -0xf0) = 0x4617d9;\n            in_RAX = fcn.004305a0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + 0x20) = unaff_RDI;\n        *(puVar7 + -8) = 0x4617f3;\n        fcn.00457040();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = *(puVar7 + 0x20);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 6048
    },
    "0046a3e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0046a3e0(uint *arg1)\n\n{\n    bool bVar1;\n    uint *in_RAX;\n    uint *noname_1;\n    int64_t iVar2;\n    ulong *puVar3;\n    uint *puVar4;\n    ulong arg1_00;\n    int64_t *unaff_RBX;\n    char unaff_DIL;\n    code *in_R8;\n    uint *in_R9;\n    int64_t unaff_R14;\n    uint uStack56;\n    uint uStack52;\n    ulong uStack48;\n    uint *puStack40;\n    uint *puStack32;\n    ulong uStack24;\n    uint *puStack16;\n    \n    while (&stack0xfffffffffffffff8 < *(unaff_R14 + 0x10) || &stack0xfffffffffffffff8 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (*0x503c60 != 0) {\n        return 0;\n    }\n    puStack32 = arg1;\n    if (arg1 < 5) {\n        if (arg1 == 0x2) {\n            if (*unaff_RBX != 0x7069) goto code_r0x0046aa11;\n            goto code_r0x0046a7a9;\n        }\n        if (arg1 == 0x3) {\n            iVar2 = fcn.00402040(0x48115b);\n            if (iVar2 < 1) {\n                if ((*unaff_RBX == 0x6964) && (*(unaff_RBX + 2) == 'r')) {\n                    *(in_RAX + 0x88) = 3;\n                    goto code_r0x0046a7b0;\n                }\n                if ((*unaff_RBX != 0x7069) || (*(unaff_RBX + 2) != '4')) goto code_r0x0046aa11;\n            }\n            else if (((*unaff_RBX != 0x7069) || (*(unaff_RBX + 2) != '6')) &&\n                    (((*unaff_RBX != 0x6374 || (*(unaff_RBX + 2) != 'p')) &&\n                     ((*unaff_RBX != 0x6475 || (*(unaff_RBX + 2) != 'p')))))) goto code_r0x0046aa11;\n            goto code_r0x0046a7a9;\n        }\n        if (arg1 != 0x4) goto code_r0x0046aa11;\n        iVar2 = fcn.00402040(0x48127f);\n        if (0 < iVar2) {\n            iVar2 = fcn.00402040(0x481287);\n            if (iVar2 < 1) {\n                if ((*unaff_RBX != 0x36706374) && (*unaff_RBX != 0x34706475)) goto code_r0x0046aa11;\n            }\n            else if ((*unaff_RBX != 0x36706475) && (*unaff_RBX != 0x78696e75)) goto code_r0x0046aa11;\n            goto code_r0x0046a7a9;\n        }\n        if (*unaff_RBX == 0x656c6966) {\n            *(in_RAX + 0x88) = 1;\n        }\n        else {\n            if (*unaff_RBX != 0x65706970) {\n                if (*unaff_RBX != 0x34706374) goto code_r0x0046aa11;\n                goto code_r0x0046a7a9;\n            }\n            *(in_RAX + 0x88) = 4;\n        }\n    }\n    else {\n        if (arg1 == 0x7) {\n            if (((*unaff_RBX != 0x736e6f63) || (*(unaff_RBX + 4) != 0x6c6f)) || (*(unaff_RBX + 6) != 'e'))\n            goto code_r0x0046aa11;\n            *(in_RAX + 0x88) = 2;\n            goto code_r0x0046a7b0;\n        }\n        if (arg1 == 0x8) {\n            if (*unaff_RBX != 0x6d61726778696e75) {\ncode_r0x0046aa11:\n                arg1_00 = 0x25;\n                uStack24 = fcn.00445f40(0x25);\n                uStack48 = 0x4879f5;\n                puVar3 = fcn.0040b3c0();\n                puVar3[1] = uStack48;\n                if (*0x557ed0 == 0) {\n                    *puVar3 = uStack24;\n                }\n                else {\n                    fcn.004593a0(arg1_00, uStack24, in_R8, in_R9);\n                }\n                return 0;\n            }\n        }\n        else if (((arg1 != 0xa) || (*unaff_RBX != 0x6b63617078696e75)) || (*(unaff_RBX + 1) != 0x7465))\n        goto code_r0x0046aa11;\ncode_r0x0046a7a9:\n        *(in_RAX + 0x88) = 0;\n    }\ncode_r0x0046a7b0:\n    *(in_RAX + 0x21f) = *(in_RAX + 0x88) != '\\0';\n    if (unaff_DIL == '\\0') {\n        noname_1 = NULL;\n        puVar4 = NULL;\n    }\n    else {\n        noname_1 = fcn.0046a120(in_RAX + 0x6e);\n        puVar4 = in_RAX;\n    }\n    if (*0x5033c0 != NULL) {\n        in_R8 = **0x5033c0;\n        in_R9 = in_RAX;\n        puStack40 = noname_1;\n        puStack16 = puVar4;\n        (*in_R8)(in_RAX, *0x5033c0);\n        noname_1 = puStack40;\n    }\n    if (noname_1 != NULL) {\n        return 0;\n    }\n    if ((unaff_DIL != '\\0') && (*0x557c60 != '\\0')) {\n        if ((puStack32 == 0x3) && ((*unaff_RBX == 0x6374 && (*(unaff_RBX + 2) == 'p')))) {\n            bVar1 = true;\n        }\n        else {\n            bVar1 = false;\n        }\n        iVar2 = fcn.00462840(*(in_RAX + 4));\n        noname_1 = in_RAX;\n        if ((iVar2 == 0) && (bVar1)) {\n            *(in_RAX + 0x87) = 1;\n        }\n    }\n    puVar4 = puStack32;\n    if (puStack32 == 0x3) {\n        if ((*unaff_RBX != 0x6475) || (*(unaff_RBX + 2) != 'p')) goto code_r0x0046a984;\n    }\n    else if ((puStack32 != 0x4) || ((*unaff_RBX != 0x34706475 && (*unaff_RBX != 0x36706475)))) goto code_r0x0046a984;\n    uStack56 = 0;\n    uStack52 = 0;\n    noname_1 = *(in_RAX + 4);\n    puVar4 = &uStack52;\n    in_R8 = NULL;\n    in_R9 = &uStack56;\n    iVar2 = fcn.00462a80(puVar4, noname_1, 0, in_R9);\n    if (iVar2 != 0) {\n        return 0x4819b7;\n    }\ncode_r0x0046a984:\n    in_RAX[0x10] = 0x72;\n    in_RAX[0x44] = 0x77;\n    if (*0x557ed0 == 0) {\n        *(in_RAX + 0x14) = in_RAX;\n        *(in_RAX + 0x48) = in_RAX;\n    }\n    else {\n        fcn.00459280(puVar4, noname_1, in_R8, in_R9);\n        in_RAX = fcn.00459280(puVar4, noname_1, in_R8, in_R9);\n    }\n    *(in_RAX + 0xe) = *(in_RAX + 0x6e);\n    *(in_RAX + 0x42) = *(in_RAX + 0x6e);\n    return 0;\n}\n",
        "token_count": 1957
    },
    "0046aae0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0046aae0(void)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (*(in_RAX + 0x10) != -1) {\n        if (*(in_RAX + 0x1b8) != 0) {\n            fcn.004544e0();\n            *(in_RAX + 0x1b8) = 0;\n        }\n        if (*(in_RAX + 0x220) == '\\0') {\n            uVar1 = (***0x4fcc08)();\n        }\n        else if (*(in_RAX + 0x220) == '\\x03') {\n            uVar1 = fcn.00462120(*(in_RAX + 0x10));\n        }\n        else {\n            uVar1 = fcn.00462040(*(in_RAX + 0x10));\n        }\n        *(in_RAX + 0x10) = 0xffffffffffffffff;\n        fcn.00454de0(in_RAX + 0x218);\n        return uVar1;\n    }\n    return 0x49e7c0;\n}\n",
        "token_count": 301
    },
    "0046b620": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.0046b620(ulong arg1)\n\n{\n    int32_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    ulong unaff_RBX;\n    int64_t unaff_RSI;\n    int32_t *unaff_RDI;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if ((unaff_RSI == 4) && (*unaff_RDI == 0x656c6966)) {\n        iVar2 = fcn.00462440();\n        if (iVar2 == 0) {\n            unaff_RSI = 7;\n        }\n        iVar1 = fcn.00462540();\n        if ((*0x20 == 0x24) && (iVar1 == 3)) {\n            unaff_RSI = 4;\n        }\n    }\n    piVar3 = fcn.0040b3c0();\n    iVar2 = fcn.0040b3c0();\n    *(iVar2 + 0x10) = in_RAX;\n    *(iVar2 + 0x21d) = 0x101;\n    *(iVar2 + 0x230) = arg1;\n    if (*0x557ed0 == 0) {\n        *(iVar2 + 0x228) = unaff_RBX;\n        *piVar3 = iVar2;\n    }\n    else {\n        fcn.004593a0(arg1, unaff_RBX, in_R8, in_R9);\n        fcn.00459280(arg1, unaff_RBX, in_R8, in_R9);\n    }\n    fcn.004140e0(0x476a80);\n    fcn.0046a3e0(unaff_RSI);\n    return piVar3;\n}\n",
        "token_count": 449
    },
    "00401740": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401aec)\n\nvoid fcn.00401740(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    ulong arg1;\n    uint32_t uVar3;\n    int64_t unaff_R14;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    uint64_t arg2;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.0040b3c0();\n    iVar2 = fcn.00459bbc();\n    if (*0x557ed0 == 0) {\n        *(iVar2 + 0x10) = 0x5584a1;\n        *(iVar2 + 0x30) = 0x5584a0;\n        *(iVar2 + 0x50) = 0x5584a2;\n        *(iVar2 + 0x70) = 0x5584a3;\n        *(iVar2 + 0x90) = 0x5584a4;\n        *(iVar2 + 0xb0) = 0x5584a5;\n        *(iVar2 + 0xd0) = 0x5584a6;\n        *(iVar2 + 0xf0) = 0x5584a7;\n        *(iVar2 + 0x110) = 0x5584a9;\n        *(iVar2 + 0x130) = 0x5584aa;\n        *(iVar2 + 0x150) = 0x5584ac;\n        *(iVar2 + 0x170) = 0x5584ae;\n        *(iVar2 + 400) = 0x5584af;\n        *(iVar2 + 0x1b0) = 0x5584ad;\n        arg1 = 0x5584ab;\n        *(iVar2 + 0x1d0) = 0x5584ab;\n    }\n    else {\n        fcn.00459380(0x5584a1);\n        fcn.00459380(0x5584a0);\n        fcn.00459380(0x5584a2);\n        fcn.00459380(0x5584a3);\n        fcn.00459380(0x5584a4);\n        fcn.00459380(0x5584a5);\n        fcn.00459380(0x5584a6);\n        fcn.00459380(0x5584a7);\n        fcn.00459380(0x5584a9);\n        fcn.00459380(0x5584aa);\n        fcn.00459380(0x5584ac);\n        fcn.00459380(0x5584ae);\n        fcn.00459380(0x5584af);\n        fcn.00459380(0x5584ad);\n        arg1 = 0x5584ab;\n        iVar2 = fcn.00459380();\n    }\n    *0x503ea8 = 0xf;\n    *0x503eb0 = 0xf;\n    if (*0x557ed0 != 0) {\n        fcn.00459280(arg1, param_2, param_3, param_4);\n        iVar2 = *0x503ea0;\n    }\n    *0x503ea0 = iVar2;\n    fcn.00401bc0(arg1, param_2);\n    if (uStack40 != 0) {\n        fcn.00401bc0(arg1, param_2);\n        *0x557c7c = uStack40;\n        fcn.00401bc0(arg1, param_2);\n        *0x5584ab = (uStack28 >> 0x1a & 1) != 0;\n        *0x5584ac = (uStack32 & 1) != 0;\n        *0x5584a9 = (uStack32 >> 1 & 1) != 0;\n        *0x5584ad = (uStack32 >> 9 & 1) != 0;\n        *0x5584ae = (uStack32 >> 0x13 & 1) != 0;\n        *0x5584af = (uStack32 >> 0x14 & 1) != 0;\n        *0x5584aa = (uStack32 >> 0x17 & 1) != 0;\n        *0x5584a0 = (uStack32 >> 0x19 & 1) != 0;\n        *0x5584a8 = (uStack32 >> 0x1b & 1) != 0;\n        uVar1 = uStack28 & 0xffffff00 | *0x5584a8;\n        uVar3 = (param_2 & 0xffffff00 | (uStack32 >> 0xc & 1) != 0) & uVar1;\n        arg2 = uVar3;\n        *0x5584a7 = uVar3;\n        if ((uStack32 >> 0x1b & 1) != 0) {\n            fcn.00401be0(uVar1, arg2);\n        }\n        *0x5584a2 = 0;\n        if (uStack40 < 7) {\n            *0x5584a2 = 0;\n            return;\n        }\n        fcn.00401bc0(0, arg2);\n        *0x5584a1 = (uStack36 >> 0x13 & 1) != 0;\n        *0x5584a3 = 0;\n        *0x5584a4 = (uStack36 >> 3 & 1) != 0;\n        *0x5584a5 = (uStack36 >> 8 & 1) != 0;\n        *0x5584a6 = (uStack36 >> 9 & 1) != 0;\n        return;\n    }\n    return;\n}\n",
        "token_count": 1392
    },
    "00402040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00402040(uchar (*arg1) [32])\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uchar (*in_RAX) [32];\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uint64_t unaff_RDI;\n    uint64_t uVar5;\n    uchar auVar6 [16];\n    uint8_t uVar7;\n    uchar auVar8 [32];\n    uchar auVar9 [32];\n    uchar auVar10 [32];\n    uchar auVar11 [32];\n    \n    if (in_RAX != arg1) {\n        uVar5 = unaff_RDI;\n        if (unaff_RBX < unaff_RDI) {\n            uVar5 = unaff_RBX;\n        }\n        if (uVar5 < 8) {\n            if (uVar5 * -8 != 0) {\n                uVar7 = uVar5 * -8;\n                if (in_RAX < 0xf9) {\n                    uVar3 = **in_RAX;\n                }\n                else {\n                    uVar3 = *(in_RAX[-1] + uVar5 + 0x18) >> (uVar7 & 0x3f);\n                }\n                uVar3 = uVar3 << (uVar7 & 0x3f);\n                if (arg1 < 0xf9) {\n                    uVar5 = **arg1;\n                }\n                else {\n                    uVar5 = *(arg1[-1] + uVar5 + 0x18) >> (uVar7 & 0x3f);\n                }\n                uVar5 = uVar5 << (uVar7 & 0x3f);\n                uVar3 = uVar3 >> 0x38 | (uVar3 & 0xff000000000000) >> 0x28 | (uVar3 & 0xff0000000000) >> 0x18 |\n                        (uVar3 & 0xff00000000) >> 8 | (uVar3 & 0xff000000) << 8 | (uVar3 & 0xff0000) << 0x18 |\n                        (uVar3 & 0xff00) << 0x28 | uVar3 << 0x38;\n                uVar5 = (uVar5 >> 0x38 | (uVar5 & 0xff000000000000) >> 0x28 | (uVar5 & 0xff0000000000) >> 0x18 |\n                         (uVar5 & 0xff00000000) >> 8 | (uVar5 & 0xff000000) << 8 | (uVar5 & 0xff0000) << 0x18 |\n                         (uVar5 & 0xff00) << 0x28 | uVar5 << 0x38) ^ uVar3;\n                if (uVar5 != 0) {\n                    iVar1 = 0x3f;\n                    if (uVar5 != 0) {\n                        for (; uVar5 >> iVar1 == 0; iVar1 = iVar1 + -1) {\n                        }\n                    }\n                    return (uVar3 >> (iVar1 & 0x3f) & 1) * 2 + -1;\n                }\n            }\n            goto code_r0x00401f2b;\n        }\n        if (0x3f < uVar5) {\n            if (*0x5584a3 == '\\x01') {\n                do {\n                    auVar8 = vmovdqu_avx(*in_RAX);\n                    auVar9 = vmovdqu_avx(*arg1);\n                    auVar10 = vmovdqu_avx(in_RAX[1]);\n                    auVar11 = vmovdqu_avx(arg1[1]);\n                    auVar8 = vpcmpeqb_avx2(auVar9, auVar8);\n                    uVar2 = (SUB321(auVar8 >> 7, 0) & 1 | (SUB321(auVar8 >> 0xf, 0) & 1) << 1 |\n                             (SUB321(auVar8 >> 0x17, 0) & 1) << 2 | (SUB321(auVar8 >> 0x1f, 0) & 1) << 3 |\n                             (SUB321(auVar8 >> 0x27, 0) & 1) << 4 | (SUB321(auVar8 >> 0x2f, 0) & 1) << 5 |\n                             (SUB321(auVar8 >> 0x37, 0) & 1) << 6 | (SUB321(auVar8 >> 0x3f, 0) & 1) << 7 |\n                             (SUB321(auVar8 >> 0x47, 0) & 1) << 8 | (SUB321(auVar8 >> 0x4f, 0) & 1) << 9 |\n                             (SUB321(auVar8 >> 0x57, 0) & 1) << 10 | (SUB321(auVar8 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB321(auVar8 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar8 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB321(auVar8 >> 0x77, 0) & 1) << 0xe | SUB321(auVar8 >> 0x7f, 0) << 0xf |\n                             (SUB321(auVar8 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar8 >> 0x8f, 0) & 1) << 0x11 |\n                             (SUB321(auVar8 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar8 >> 0x9f, 0) & 1) << 0x13 |\n                             (SUB321(auVar8 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar8 >> 0xaf, 0) & 1) << 0x15 |\n                             (SUB321(auVar8 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar8 >> 0xbf, 0) << 0x17 |\n                             (SUB321(auVar8 >> 199, 0) & 1) << 0x18 | (SUB321(auVar8 >> 0xcf, 0) & 1) << 0x19 |\n                             (SUB321(auVar8 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar8 >> 0xdf, 0) & 1) << 0x1b |\n                             (SUB321(auVar8 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar8 >> 0xef, 0) & 1) << 0x1d |\n                             (SUB321(auVar8 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar8 >> 0xff, 0) << 0x1f) ^ 0xffffffff;\n                    uVar3 = uVar2;\n                    if (uVar2 != 0) {\n                        vzeroupper_avx();\n                        goto code_r0x00401e7d;\n                    }\n                    auVar8 = vpcmpeqb_avx2(auVar11, auVar10);\n                    uVar2 = (SUB321(auVar8 >> 7, 0) & 1 | (SUB321(auVar8 >> 0xf, 0) & 1) << 1 |\n                             (SUB321(auVar8 >> 0x17, 0) & 1) << 2 | (SUB321(auVar8 >> 0x1f, 0) & 1) << 3 |\n                             (SUB321(auVar8 >> 0x27, 0) & 1) << 4 | (SUB321(auVar8 >> 0x2f, 0) & 1) << 5 |\n                             (SUB321(auVar8 >> 0x37, 0) & 1) << 6 | (SUB321(auVar8 >> 0x3f, 0) & 1) << 7 |\n                             (SUB321(auVar8 >> 0x47, 0) & 1) << 8 | (SUB321(auVar8 >> 0x4f, 0) & 1) << 9 |\n                             (SUB321(auVar8 >> 0x57, 0) & 1) << 10 | (SUB321(auVar8 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB321(auVar8 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar8 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB321(auVar8 >> 0x77, 0) & 1) << 0xe | SUB321(auVar8 >> 0x7f, 0) << 0xf |\n                             (SUB321(auVar8 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar8 >> 0x8f, 0) & 1) << 0x11 |\n                             (SUB321(auVar8 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar8 >> 0x9f, 0) & 1) << 0x13 |\n                             (SUB321(auVar8 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar8 >> 0xaf, 0) & 1) << 0x15 |\n                             (SUB321(auVar8 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar8 >> 0xbf, 0) << 0x17 |\n                             (SUB321(auVar8 >> 199, 0) & 1) << 0x18 | (SUB321(auVar8 >> 0xcf, 0) & 1) << 0x19 |\n                             (SUB321(auVar8 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar8 >> 0xdf, 0) & 1) << 0x1b |\n                             (SUB321(auVar8 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar8 >> 0xef, 0) & 1) << 0x1d |\n                             (SUB321(auVar8 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar8 >> 0xff, 0) << 0x1f) ^ 0xffffffff;\n                    uVar3 = uVar2;\n                    if (uVar2 != 0) {\n                        vzeroupper_avx();\n                        goto code_r0x00401e6b;\n                    }\n                    in_RAX = in_RAX[2];\n                    arg1 = arg1[2];\n                    uVar5 = uVar5 - 0x40;\n                } while (0x3f < uVar5);\n                vzeroupper_avx();\n            }\n            else {\n                do {\n                    uVar7 = -((*arg1)[0xf] == (*in_RAX)[0xf]);\n                    auVar6 = CONCAT115(uVar7, CONCAT114(-((*arg1)[0xe] == (*in_RAX)[0xe]), \n                                                        CONCAT113(-((*arg1)[0xd] == (*in_RAX)[0xd]), \n                                                                  CONCAT112(-((*arg1)[0xc] == (*in_RAX)[0xc]), \n                                                                            CONCAT111(-((*arg1)[0xb] == (*in_RAX)[0xb])\n                                                                                      , CONCAT110(-((*arg1)[10] ==\n                                                                                                   (*in_RAX)[10]), \n                                                                                                  CONCAT19(-((*arg1)[9]\n                                                                                                            == (*in_RAX)\n                                                            [9]), CONCAT18(-((*arg1)[8] == (*in_RAX)[8]), \n                                                                           CONCAT17(-((*arg1)[7] == (*in_RAX)[7]), \n                                                                                    CONCAT16(-((*arg1)[6] ==\n                                                                                              (*in_RAX)[6]), \n                                                                                             CONCAT15(-((*arg1)[5] ==\n                                                                                                       (*in_RAX)[5]), \n                                                                                                      CONCAT14(-((*arg1)\n                                                            [4] == (*in_RAX)[4]), \n                                                            CONCAT13(-((*arg1)[3] == (*in_RAX)[3]), \n                                                                     CONCAT12(-((*arg1)[2] == (*in_RAX)[2]), \n                                                                              CONCAT11(-((*arg1)[1] == (*in_RAX)[1]), \n                                                                                       -((*arg1)[0] == (*in_RAX)[0])))))\n                                                            )))))))))));\n                    uVar3 = (SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                             (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                             (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                             (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                             (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                             (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB161(auVar6 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) ^ 0xffff;\n                    if (uVar3 != 0) goto code_r0x00401e7d;\n                    uVar7 = -((*arg1)[0x1f] == (*in_RAX)[0x1f]);\n                    auVar6 = CONCAT115(uVar7, CONCAT114(-((*arg1)[0x1e] == (*in_RAX)[0x1e]), \n                                                        CONCAT113(-((*arg1)[0x1d] == (*in_RAX)[0x1d]), \n                                                                  CONCAT112(-((*arg1)[0x1c] == (*in_RAX)[0x1c]), \n                                                                            CONCAT111(-((*arg1)[0x1b] == (*in_RAX)[0x1b]\n                                                                                       ), CONCAT110(-((*arg1)[0x1a] ==\n                                                                                                     (*in_RAX)[0x1a]), \n                                                                                                    CONCAT19(-((*arg1)[\n                                                            0x19] == (*in_RAX)[0x19]), \n                                                            CONCAT18(-((*arg1)[0x18] == (*in_RAX)[0x18]), \n                                                                     CONCAT17(-((*arg1)[0x17] == (*in_RAX)[0x17]), \n                                                                              CONCAT16(-((*arg1)[0x16] ==\n                                                                                        (*in_RAX)[0x16]), \n                                                                                       CONCAT15(-((*arg1)[0x15] ==\n                                                                                                 (*in_RAX)[0x15]), \n                                                                                                CONCAT14(-((*arg1)[0x14]\n                                                                                                          == (*in_RAX)[\n                                                            0x14]), CONCAT13(-((*arg1)[0x13] == (*in_RAX)[0x13]), \n                                                                             CONCAT12(-((*arg1)[0x12] == (*in_RAX)[0x12]\n                                                                                       ), CONCAT11(-((*arg1)[0x11] ==\n                                                                                                    (*in_RAX)[0x11]), \n                                                                                                   -((*arg1)[0x10] ==\n                                                                                                    (*in_RAX)[0x10])))))\n                                                            )))))))))));\n                    uVar3 = (SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                             (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                             (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                             (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                             (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                             (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB161(auVar6 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) ^ 0xffff;\n                    if (uVar3 != 0) {\n                        in_RAX = *in_RAX + 0x10;\n                        arg1 = *arg1 + 0x10;\n                        goto code_r0x00401e7d;\n                    }\n                    uVar7 = -(arg1[1][0xf] == in_RAX[1][0xf]);\n                    auVar6 = CONCAT115(uVar7, CONCAT114(-(arg1[1][0xe] == in_RAX[1][0xe]), \n                                                        CONCAT113(-(arg1[1][0xd] == in_RAX[1][0xd]), \n                                                                  CONCAT112(-(arg1[1][0xc] == in_RAX[1][0xc]), \n                                                                            CONCAT111(-(arg1[1][0xb] == in_RAX[1][0xb])\n                                                                                      , CONCAT110(-(arg1[1][10] ==\n                                                                                                   in_RAX[1][10]), \n                                                                                                  CONCAT19(-(arg1[1][9]\n                                                                                                            == in_RAX[1]\n                                                            [9]), CONCAT18(-(arg1[1][8] == in_RAX[1][8]), \n                                                                           CONCAT17(-(arg1[1][7] == in_RAX[1][7]), \n                                                                                    CONCAT16(-(arg1[1][6] ==\n                                                                                              in_RAX[1][6]), \n                                                                                             CONCAT15(-(arg1[1][5] ==\n                                                                                                       in_RAX[1][5]), \n                                                                                                      CONCAT14(-(arg1[1]\n                                                            [4] == in_RAX[1][4]), \n                                                            CONCAT13(-(arg1[1][3] == in_RAX[1][3]), \n                                                                     CONCAT12(-(arg1[1][2] == in_RAX[1][2]), \n                                                                              CONCAT11(-(arg1[1][1] == in_RAX[1][1]), \n                                                                                       -(arg1[1][0] == in_RAX[1][0])))))\n                                                            )))))))))));\n                    uVar3 = (SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                             (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                             (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                             (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                             (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                             (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB161(auVar6 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) ^ 0xffff;\n                    if (uVar3 != 0) goto code_r0x00401e6b;\n                    auVar6 = *(in_RAX[1] + 0x10);\n                    uVar7 = -(arg1[1][0x1f] == SUB161(auVar6 >> 0x78, 0));\n                    auVar6 = CONCAT115(uVar7, CONCAT114(-(arg1[1][0x1e] == SUB161(auVar6 >> 0x70, 0)), \n                                                        CONCAT113(-(arg1[1][0x1d] == SUB161(auVar6 >> 0x68, 0)), \n                                                                  CONCAT112(-(arg1[1][0x1c] == SUB161(auVar6 >> 0x60, 0)\n                                                                             ), CONCAT111(-(arg1[1][0x1b] ==\n                                                                                           SUB161(auVar6 >> 0x58, 0)), \n                                                                                          CONCAT110(-(arg1[1][0x1a] ==\n                                                                                                     SUB161(auVar6 >> \n                                                            0x50, 0)), \n                                                            CONCAT19(-(arg1[1][0x19] == SUB161(auVar6 >> 0x48, 0)), \n                                                                     CONCAT18(-(arg1[1][0x18] ==\n                                                                               SUB161(auVar6 >> 0x40, 0)), \n                                                                              CONCAT17(-(arg1[1][0x17] ==\n                                                                                        SUB161(auVar6 >> 0x38, 0)), \n                                                                                       CONCAT16(-(arg1[1][0x16] ==\n                                                                                                 SUB161(auVar6 >> 0x30, \n                                                                                                        0)), \n                                                                                                CONCAT15(-(arg1[1][0x15]\n                                                                                                          == SUB161(\n                                                            auVar6 >> 0x28, 0)), \n                                                            CONCAT14(-(arg1[1][0x14] == SUB161(auVar6 >> 0x20, 0)), \n                                                                     CONCAT13(-(arg1[1][0x13] ==\n                                                                               SUB161(auVar6 >> 0x18, 0)), \n                                                                              CONCAT12(-(arg1[1][0x12] ==\n                                                                                        SUB161(auVar6 >> 0x10, 0)), \n                                                                                       CONCAT11(-(arg1[1][0x11] ==\n                                                                                                 SUB161(auVar6 >> 8, 0))\n                                                                                                , -(arg1[1][0x10] ==\n                                                                                                   SUB161(auVar6, 0)))))\n                                                                    ))))))))))));\n                    uVar3 = (SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                             (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                             (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                             (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                             (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                             (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB161(auVar6 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) ^ 0xffff;\n                    if (uVar3 != 0) {\n                        in_RAX = in_RAX[1] + 0x10;\n                        arg1 = arg1[1] + 0x10;\n                        goto code_r0x00401e7d;\n                    }\n                    in_RAX = in_RAX[2];\n                    arg1 = arg1[2];\n                    uVar5 = uVar5 - 0x40;\n                } while (0x40 < uVar5);\n            }\n        }\n        for (; 0x10 < uVar5; uVar5 = uVar5 - 0x10) {\n            auVar6 = **in_RAX;\n            uVar7 = -((*arg1)[0xf] == SUB161(auVar6 >> 0x78, 0));\n            auVar6 = CONCAT115(uVar7, CONCAT114(-((*arg1)[0xe] == SUB161(auVar6 >> 0x70, 0)), \n                                                CONCAT113(-((*arg1)[0xd] == SUB161(auVar6 >> 0x68, 0)), \n                                                          CONCAT112(-((*arg1)[0xc] == SUB161(auVar6 >> 0x60, 0)), \n                                                                    CONCAT111(-((*arg1)[0xb] ==\n                                                                               SUB161(auVar6 >> 0x58, 0)), \n                                                                              CONCAT110(-((*arg1)[10] ==\n                                                                                         SUB161(auVar6 >> 0x50, 0)), \n                                                                                        CONCAT19(-((*arg1)[9] ==\n                                                                                                  SUB161(auVar6 >> 0x48\n                                                                                                         , 0)), \n                                                                                                 CONCAT18(-((*arg1)[8]\n                                                                                                           == SUB161(\n                                                            auVar6 >> 0x40, 0)), \n                                                            CONCAT17(-((*arg1)[7] == SUB161(auVar6 >> 0x38, 0)), \n                                                                     CONCAT16(-((*arg1)[6] == SUB161(auVar6 >> 0x30, 0))\n                                                                              , CONCAT15(-((*arg1)[5] ==\n                                                                                          SUB161(auVar6 >> 0x28, 0)), \n                                                                                         CONCAT14(-((*arg1)[4] ==\n                                                                                                   SUB161(auVar6 >> 0x20\n                                                                                                          , 0)), \n                                                                                                  CONCAT13(-((*arg1)[3]\n                                                                                                            == SUB161(\n                                                            auVar6 >> 0x18, 0)), \n                                                            CONCAT12(-((*arg1)[2] == SUB161(auVar6 >> 0x10, 0)), \n                                                                     CONCAT11(-((*arg1)[1] == SUB161(auVar6 >> 8, 0)), \n                                                                              -((*arg1)[0] == SUB161(auVar6, 0))))))))))\n                                                            )))))));\n            uVar3 = (SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                     (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                     (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                     (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                     (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                     (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                     (SUB161(auVar6 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) ^ 0xffff;\n            if (uVar3 != 0) goto code_r0x00401e7d;\n            in_RAX = *in_RAX + 0x10;\n            arg1 = *arg1 + 0x10;\n        }\n        if (8 < uVar5) {\n            uVar3 = **in_RAX;\n            uVar4 = **arg1;\n            if (uVar3 != uVar4) goto code_r0x00401eb6;\n        }\n        uVar3 = *(in_RAX[-1] + uVar5 + 0x18);\n        uVar4 = *(arg1[-1] + uVar5 + 0x18);\n        if (uVar3 != uVar4) {\ncode_r0x00401eb6:\n            uVar5 = uVar3 >> 0x38 | (uVar3 & 0xff000000000000) >> 0x28 | (uVar3 & 0xff0000000000) >> 0x18 |\n                    (uVar3 & 0xff00000000) >> 8 | (uVar3 & 0xff000000) << 8 | (uVar3 & 0xff0000) << 0x18 |\n                    (uVar3 & 0xff00) << 0x28 | uVar3 << 0x38;\n            uVar3 = (uVar4 >> 0x38 | (uVar4 & 0xff000000000000) >> 0x28 | (uVar4 & 0xff0000000000) >> 0x18 |\n                     (uVar4 & 0xff00000000) >> 8 | (uVar4 & 0xff000000) << 8 | (uVar4 & 0xff0000) << 0x18 |\n                     (uVar4 & 0xff00) << 0x28 | uVar4 << 0x38) ^ uVar5;\n            iVar1 = 0x3f;\n            if (uVar3 != 0) {\n                for (; uVar3 >> iVar1 == 0; iVar1 = iVar1 + -1) {\n                }\n            }\n            return (uVar5 >> (iVar1 & 0x3f) & 1) * 2 + -1;\n        }\n    }\ncode_r0x00401f2b:\n    return ((unaff_RBX == unaff_RDI) - 1) + (unaff_RBX != unaff_RDI && unaff_RDI <= unaff_RBX) * 2;\ncode_r0x00401e6b:\n    in_RAX = in_RAX[1];\n    arg1 = arg1[1];\ncode_r0x00401e7d:\n    iVar1 = 0;\n    if (uVar3 != 0) {\n        for (; (uVar3 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n        }\n    }\n    return ((*arg1)[iVar1] <= (*in_RAX)[iVar1] && (*in_RAX)[iVar1] != (*arg1)[iVar1]) * 2 + -1;\n}\n",
        "token_count": 7688
    },
    "004021a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.004021a0(uint64_t arg1, ulong arg2)\n\n{\n    uchar auVar1 [16];\n    uchar auVar2 [16];\n    uchar *puVar3;\n    uchar *puVar4;\n    uchar (*in_RAX) [32];\n    uint8_t uVar5;\n    uchar (*unaff_RBX) [32];\n    uchar (*pauVar6) [32];\n    uint64_t uVar7;\n    uint64_t uVar8;\n    bool bVar9;\n    uchar auVar10 [16];\n    uchar auVar11 [32];\n    uchar auVar12 [32];\n    uchar auVar13 [32];\n    uchar auVar14 [32];\n    \n    if (in_RAX == unaff_RBX) {\n        return 1;\n    }\n    if (7 < arg1) {\n        pauVar6 = in_RAX;\n        if (0x3f < arg1) {\n            if (*0x5584a3 == '\\x01') {\n                while (0x3f < arg1) {\n                    auVar11 = vmovdqu_avx(*pauVar6);\n                    auVar12 = vmovdqu_avx(*unaff_RBX);\n                    auVar13 = vmovdqu_avx(pauVar6[1]);\n                    auVar14 = vmovdqu_avx(unaff_RBX[1]);\n                    auVar11 = vpcmpeqb_avx2(auVar11, auVar12);\n                    auVar12 = vpcmpeqb_avx2(auVar14, auVar13);\n                    auVar11 = vpand_avx2(auVar12, auVar11);\n                    pauVar6 = pauVar6[2];\n                    unaff_RBX = unaff_RBX[2];\n                    arg1 = arg1 - 0x40;\n                    if ((SUB321(auVar11 >> 7, 0) & 1 | (SUB321(auVar11 >> 0xf, 0) & 1) << 1 |\n                         (SUB321(auVar11 >> 0x17, 0) & 1) << 2 | (SUB321(auVar11 >> 0x1f, 0) & 1) << 3 |\n                         (SUB321(auVar11 >> 0x27, 0) & 1) << 4 | (SUB321(auVar11 >> 0x2f, 0) & 1) << 5 |\n                         (SUB321(auVar11 >> 0x37, 0) & 1) << 6 | (SUB321(auVar11 >> 0x3f, 0) & 1) << 7 |\n                         (SUB321(auVar11 >> 0x47, 0) & 1) << 8 | (SUB321(auVar11 >> 0x4f, 0) & 1) << 9 |\n                         (SUB321(auVar11 >> 0x57, 0) & 1) << 10 | (SUB321(auVar11 >> 0x5f, 0) & 1) << 0xb |\n                         (SUB321(auVar11 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar11 >> 0x6f, 0) & 1) << 0xd |\n                         (SUB321(auVar11 >> 0x77, 0) & 1) << 0xe | SUB321(auVar11 >> 0x7f, 0) << 0xf |\n                         (SUB321(auVar11 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar11 >> 0x8f, 0) & 1) << 0x11 |\n                         (SUB321(auVar11 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar11 >> 0x9f, 0) & 1) << 0x13 |\n                         (SUB321(auVar11 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar11 >> 0xaf, 0) & 1) << 0x15 |\n                         (SUB321(auVar11 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar11 >> 0xbf, 0) << 0x17 |\n                         (SUB321(auVar11 >> 199, 0) & 1) << 0x18 | (SUB321(auVar11 >> 0xcf, 0) & 1) << 0x19 |\n                         (SUB321(auVar11 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar11 >> 0xdf, 0) & 1) << 0x1b |\n                         (SUB321(auVar11 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar11 >> 0xef, 0) & 1) << 0x1d |\n                         (SUB321(auVar11 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar11 >> 0xff, 0) << 0x1f) != 0xffffffff) {\n                        vzeroupper_avx();\n                        return 0;\n                    }\n                }\n                vzeroupper_avx();\n            }\n            else {\n                while (0x3f < arg1) {\n                    auVar10 = **unaff_RBX;\n                    auVar1 = *(*unaff_RBX + 0x10);\n                    auVar2 = *unaff_RBX[1];\n                    auVar10 = CONCAT115(-((*pauVar6)[0xf] == SUB161(auVar10 >> 0x78, 0)), \n                                        CONCAT114(-((*pauVar6)[0xe] == SUB161(auVar10 >> 0x70, 0)), \n                                                  CONCAT113(-((*pauVar6)[0xd] == SUB161(auVar10 >> 0x68, 0)), \n                                                            CONCAT112(-((*pauVar6)[0xc] == SUB161(auVar10 >> 0x60, 0)), \n                                                                      CONCAT111(-((*pauVar6)[0xb] ==\n                                                                                 SUB161(auVar10 >> 0x58, 0)), \n                                                                                CONCAT110(-((*pauVar6)[10] ==\n                                                                                           SUB161(auVar10 >> 0x50, 0)), \n                                                                                          CONCAT19(-((*pauVar6)[9] ==\n                                                                                                    SUB161(auVar10 >>\n                                                                                                           0x48, 0)), \n                                                                                                   CONCAT18(-((*pauVar6)\n                                                                                                              [8] == \n                                                            SUB161(auVar10 >> 0x40, 0)), \n                                                            CONCAT17(-((*pauVar6)[7] == SUB161(auVar10 >> 0x38, 0)), \n                                                                     CONCAT16(-((*pauVar6)[6] ==\n                                                                               SUB161(auVar10 >> 0x30, 0)), \n                                                                              CONCAT15(-((*pauVar6)[5] ==\n                                                                                        SUB161(auVar10 >> 0x28, 0)), \n                                                                                       CONCAT14(-((*pauVar6)[4] ==\n                                                                                                 SUB161(auVar10 >> 0x20\n                                                                                                        , 0)), \n                                                                                                CONCAT13(-((*pauVar6)[3]\n                                                                                                          == SUB161(\n                                                            auVar10 >> 0x18, 0)), \n                                                            CONCAT12(-((*pauVar6)[2] == SUB161(auVar10 >> 0x10, 0)), \n                                                                     CONCAT11(-((*pauVar6)[1] == SUB161(auVar10 >> 8, 0)\n                                                                               ), -((*pauVar6)[0] == SUB161(auVar10, 0))\n                                                                             ))))))))))))))) &\n                              CONCAT115(-((*pauVar6)[0x1f] == SUB161(auVar1 >> 0x78, 0)), \n                                        CONCAT114(-((*pauVar6)[0x1e] == SUB161(auVar1 >> 0x70, 0)), \n                                                  CONCAT113(-((*pauVar6)[0x1d] == SUB161(auVar1 >> 0x68, 0)), \n                                                            CONCAT112(-((*pauVar6)[0x1c] == SUB161(auVar1 >> 0x60, 0)), \n                                                                      CONCAT111(-((*pauVar6)[0x1b] ==\n                                                                                 SUB161(auVar1 >> 0x58, 0)), \n                                                                                CONCAT110(-((*pauVar6)[0x1a] ==\n                                                                                           SUB161(auVar1 >> 0x50, 0)), \n                                                                                          CONCAT19(-((*pauVar6)[0x19] ==\n                                                                                                    SUB161(auVar1 >> \n                                                            0x48, 0)), \n                                                            CONCAT18(-((*pauVar6)[0x18] == SUB161(auVar1 >> 0x40, 0)), \n                                                                     CONCAT17(-((*pauVar6)[0x17] ==\n                                                                               SUB161(auVar1 >> 0x38, 0)), \n                                                                              CONCAT16(-((*pauVar6)[0x16] ==\n                                                                                        SUB161(auVar1 >> 0x30, 0)), \n                                                                                       CONCAT15(-((*pauVar6)[0x15] ==\n                                                                                                 SUB161(auVar1 >> 0x28, \n                                                                                                        0)), \n                                                                                                CONCAT14(-((*pauVar6)\n                                                                                                           [0x14] ==\n                                                                                                          SUB161(auVar1 \n                                                            >> 0x20, 0)), \n                                                            CONCAT13(-((*pauVar6)[0x13] == SUB161(auVar1 >> 0x18, 0)), \n                                                                     CONCAT12(-((*pauVar6)[0x12] ==\n                                                                               SUB161(auVar1 >> 0x10, 0)), \n                                                                              CONCAT11(-((*pauVar6)[0x11] ==\n                                                                                        SUB161(auVar1 >> 8, 0)), \n                                                                                       -((*pauVar6)[0x10] ==\n                                                                                        SUB161(auVar1, 0))))))))))))))))\n                                       ) &\n                              CONCAT115(-(pauVar6[1][0xf] == SUB161(auVar2 >> 0x78, 0)), \n                                        CONCAT114(-(pauVar6[1][0xe] == SUB161(auVar2 >> 0x70, 0)), \n                                                  CONCAT113(-(pauVar6[1][0xd] == SUB161(auVar2 >> 0x68, 0)), \n                                                            CONCAT112(-(pauVar6[1][0xc] == SUB161(auVar2 >> 0x60, 0)), \n                                                                      CONCAT111(-(pauVar6[1][0xb] ==\n                                                                                 SUB161(auVar2 >> 0x58, 0)), \n                                                                                CONCAT110(-(pauVar6[1][10] ==\n                                                                                           SUB161(auVar2 >> 0x50, 0)), \n                                                                                          CONCAT19(-(pauVar6[1][9] ==\n                                                                                                    SUB161(auVar2 >> \n                                                            0x48, 0)), \n                                                            CONCAT18(-(pauVar6[1][8] == SUB161(auVar2 >> 0x40, 0)), \n                                                                     CONCAT17(-(pauVar6[1][7] ==\n                                                                               SUB161(auVar2 >> 0x38, 0)), \n                                                                              CONCAT16(-(pauVar6[1][6] ==\n                                                                                        SUB161(auVar2 >> 0x30, 0)), \n                                                                                       CONCAT15(-(pauVar6[1][5] ==\n                                                                                                 SUB161(auVar2 >> 0x28, \n                                                                                                        0)), \n                                                                                                CONCAT14(-(pauVar6[1][4]\n                                                                                                          == SUB161(\n                                                            auVar2 >> 0x20, 0)), \n                                                            CONCAT13(-(pauVar6[1][3] == SUB161(auVar2 >> 0x18, 0)), \n                                                                     CONCAT12(-(pauVar6[1][2] ==\n                                                                               SUB161(auVar2 >> 0x10, 0)), \n                                                                              CONCAT11(-(pauVar6[1][1] ==\n                                                                                        SUB161(auVar2 >> 8, 0)), \n                                                                                       -(pauVar6[1][0] ==\n                                                                                        SUB161(auVar2, 0))))))))))))))))\n                                       ) &\n                              CONCAT115(-(pauVar6[1][0x1f] == unaff_RBX[1][0x1f]), \n                                        CONCAT114(-(pauVar6[1][0x1e] == unaff_RBX[1][0x1e]), \n                                                  CONCAT113(-(pauVar6[1][0x1d] == unaff_RBX[1][0x1d]), \n                                                            CONCAT112(-(pauVar6[1][0x1c] == unaff_RBX[1][0x1c]), \n                                                                      CONCAT111(-(pauVar6[1][0x1b] == unaff_RBX[1][0x1b]\n                                                                                 ), CONCAT110(-(pauVar6[1][0x1a] ==\n                                                                                               unaff_RBX[1][0x1a]), \n                                                                                              CONCAT19(-(pauVar6[1]\n                                                                                                         [0x19] ==\n                                                                                                        unaff_RBX[1]\n                                                                                                        [0x19]), \n                                                                                                       CONCAT18(-(\n                                                            pauVar6[1][0x18] == unaff_RBX[1][0x18]), \n                                                            CONCAT17(-(pauVar6[1][0x17] == unaff_RBX[1][0x17]), \n                                                                     CONCAT16(-(pauVar6[1][0x16] == unaff_RBX[1][0x16])\n                                                                              , CONCAT15(-(pauVar6[1][0x15] ==\n                                                                                          unaff_RBX[1][0x15]), \n                                                                                         CONCAT14(-(pauVar6[1][0x14] ==\n                                                                                                   unaff_RBX[1][0x14]), \n                                                                                                  CONCAT13(-(pauVar6[1]\n                                                                                                             [0x13] ==\n                                                                                                            unaff_RBX[1]\n                                                                                                            [0x13]), \n                                                                                                           CONCAT12(-(\n                                                            pauVar6[1][0x12] == unaff_RBX[1][0x12]), \n                                                            CONCAT11(-(pauVar6[1][0x11] == unaff_RBX[1][0x11]), \n                                                                     -(pauVar6[1][0x10] == unaff_RBX[1][0x10])))))))))))\n                                                            )))));\n                    pauVar6 = pauVar6[2];\n                    unaff_RBX = unaff_RBX[2];\n                    arg1 = arg1 - 0x40;\n                    if ((SUB161(auVar10 >> 7, 0) & 1 | (SUB161(auVar10 >> 0xf, 0) & 1) << 1 |\n                         (SUB161(auVar10 >> 0x17, 0) & 1) << 2 | (SUB161(auVar10 >> 0x1f, 0) & 1) << 3 |\n                         (SUB161(auVar10 >> 0x27, 0) & 1) << 4 | (SUB161(auVar10 >> 0x2f, 0) & 1) << 5 |\n                         (SUB161(auVar10 >> 0x37, 0) & 1) << 6 | (SUB161(auVar10 >> 0x3f, 0) & 1) << 7 |\n                         (SUB161(auVar10 >> 0x47, 0) & 1) << 8 | (SUB161(auVar10 >> 0x4f, 0) & 1) << 9 |\n                         (SUB161(auVar10 >> 0x57, 0) & 1) << 10 | (SUB161(auVar10 >> 0x5f, 0) & 1) << 0xb |\n                         (SUB161(auVar10 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar10 >> 0x6f, 0) & 1) << 0xd |\n                         (SUB161(auVar10 >> 0x77, 0) & 1) << 0xe | SUB161(auVar10 >> 0x7f, 0) << 0xf) != 0xffff) {\n                        return 0;\n                    }\n                }\n            }\n        }\n        do {\n            if (arg1 < 9) {\n                return in_RAX & 0xffffffffffffff00 | *(pauVar6[-1] + arg1 + 0x18) == *(unaff_RBX[-1] + arg1 + 0x18);\n            }\n            puVar3 = *pauVar6;\n            puVar4 = *unaff_RBX;\n            pauVar6 = *pauVar6 + 8;\n            unaff_RBX = *unaff_RBX + 8;\n            arg1 = arg1 - 8;\n        } while (*puVar3 == *puVar4);\n        return 0;\n    }\n    bVar9 = arg1 == 0;\n    if (!bVar9) {\n        uVar5 = arg1 * -8;\n        if (in_RAX < 0xf9) {\n            uVar7 = **in_RAX;\n        }\n        else {\n            uVar7 = *(in_RAX[-1] + arg1 + 0x18) >> (uVar5 & 0x3f);\n        }\n        if (unaff_RBX < 0xf9) {\n            uVar8 = **unaff_RBX;\n        }\n        else {\n            uVar8 = *(unaff_RBX[-1] + arg1 + 0x18) >> (uVar5 & 0x3f);\n        }\n        bVar9 = (arg1 * -8 & 0x3f) != 0;\n        bVar9 = !bVar9 && uVar8 - uVar7 == 0 || bVar9 && uVar8 - uVar7 << (uVar5 & 0x3f) == 0;\n    }\n    return in_RAX & 0xffffffffffffff00 | bVar9;\n}\n",
        "token_count": 4147
    },
    "00402300": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00402300(ulong noname_0, ulong arg2)\n\n{\n    uchar (*pauVar1) [32];\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint16_t uVar4;\n    uint64_t in_RAX;\n    uint32_t uVar5;\n    bool bVar6;\n    uchar auVar7 [16];\n    uint8_t uVar9;\n    uchar auVar8 [32];\n    uchar auVar10 [32];\n    uchar (*pauStackX8) [32];\n    uint64_t uStackX16;\n    uint8_t uStackX24;\n    \n    if (uStackX16 < 0x10) {\n        if (uStackX16 != 0) {\n            if ((*pauStackX8 + 0x10 & 0xff0) == 0) {\n                puVar2 = pauStackX8[-1] + uStackX16 + 0x10;\n                auVar7 = CONCAT115(-(puVar2[0xf] == uStackX24), \n                                   CONCAT114(-(puVar2[0xe] == uStackX24), \n                                             CONCAT113(-(puVar2[0xd] == uStackX24), \n                                                       CONCAT112(-(puVar2[0xc] == uStackX24), \n                                                                 CONCAT111(-(puVar2[0xb] == uStackX24), \n                                                                           CONCAT110(-(puVar2[10] == uStackX24), \n                                                                                     CONCAT19(-(puVar2[9] == uStackX24)\n                                                                                              , CONCAT18(-(puVar2[8] ==\n                                                                                                          uStackX24), \n                                                                                                         CONCAT17(-(\n                                                            puVar2[7] == uStackX24), \n                                                            CONCAT16(-(puVar2[6] == uStackX24), \n                                                                     CONCAT15(-(puVar2[5] == uStackX24), \n                                                                              CONCAT14(-(puVar2[4] == uStackX24), \n                                                                                       CONCAT13(-(puVar2[3] == uStackX24\n                                                                                                 ), CONCAT12(-(puVar2[2]\n                                                                                                              == \n                                                            uStackX24), \n                                                            CONCAT11(-(puVar2[1] == uStackX24), -(*puVar2 == uStackX24))\n                                                            ))))))))))))));\n                uVar5 = ((SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 |\n                          (SUB161(auVar7 >> 0x17, 0) & 1) << 2 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 |\n                          (SUB161(auVar7 >> 0x27, 0) & 1) << 4 | (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 |\n                          (SUB161(auVar7 >> 0x37, 0) & 1) << 6 | (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 |\n                          (SUB161(auVar7 >> 0x47, 0) & 1) << 8 | (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 |\n                          (SUB161(auVar7 >> 0x57, 0) & 1) << 10 | (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb |\n                          (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd |\n                          (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (-(puVar2[0xf] == uStackX24) >> 7) << 0xf) <<\n                        (uStackX16 & 0x1f)) >> 0x10;\n                iVar3 = 0;\n                if (uVar5 != 0) {\n                    for (; (uVar5 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n                    }\n                }\n                if (uVar5 != 0) {\n                    return;\n                }\n            }\n            else {\n                uVar9 = -((*pauStackX8)[0xf] == uStackX24);\n                auVar7 = CONCAT115(uVar9, CONCAT114(-((*pauStackX8)[0xe] == uStackX24), \n                                                    CONCAT113(-((*pauStackX8)[0xd] == uStackX24), \n                                                              CONCAT112(-((*pauStackX8)[0xc] == uStackX24), \n                                                                        CONCAT111(-((*pauStackX8)[0xb] == uStackX24), \n                                                                                  CONCAT110(-((*pauStackX8)[10] ==\n                                                                                             uStackX24), \n                                                                                            CONCAT19(-((*pauStackX8)[9]\n                                                                                                      == uStackX24), \n                                                                                                     CONCAT18(-((*\n                                                            pauStackX8)[8] == uStackX24), \n                                                            CONCAT17(-((*pauStackX8)[7] == uStackX24), \n                                                                     CONCAT16(-((*pauStackX8)[6] == uStackX24), \n                                                                              CONCAT15(-((*pauStackX8)[5] == uStackX24)\n                                                                                       , CONCAT14(-((*pauStackX8)[4] ==\n                                                                                                   uStackX24), \n                                                                                                  CONCAT13(-((*\n                                                            pauStackX8)[3] == uStackX24), \n                                                            CONCAT12(-((*pauStackX8)[2] == uStackX24), \n                                                                     CONCAT11(-((*pauStackX8)[1] == uStackX24), \n                                                                              -((*pauStackX8)[0] == uStackX24)))))))))))\n                                                            )))));\n                uVar4 = SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar7 >> 0x17, 0) & 1) << 2 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar7 >> 0x27, 0) & 1) << 4 | (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar7 >> 0x37, 0) & 1) << 6 | (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar7 >> 0x47, 0) & 1) << 8 | (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar7 >> 0x57, 0) & 1) << 10 | (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (uVar9 >> 7) << 0xf;\n                uVar5 = 0;\n                if (uVar4 != 0) {\n                    for (; (uVar4 >> uVar5 & 1) == 0; uVar5 = uVar5 + 1) {\n                    }\n                }\n                if ((uVar4 != 0) && (uVar5 < uStackX16)) {\n                    return;\n                }\n            }\n        }\n    }\n    else {\n        if ((0x20 < uStackX16) && (bVar6 = *0x5584a3 == '\\x01',  bVar6)) {\n            pauVar1 = pauStackX8[-1] + uStackX16;\n            auVar8 = vpbroadcastb_avx2(ZEXT816(in_RAX & 0xffffffffffffff00 | uStackX24));\n            do {\n                auVar10 = vmovdqu_avx(*pauStackX8);\n                auVar10 = vpcmpeqb_avx2(auVar10, auVar8);\n                vptest_avx(auVar10, auVar10);\n                if (!bVar6) goto code_r0x004022e3;\n                pauStackX8 = pauStackX8[1];\n                bVar6 = pauStackX8 == pauVar1;\n            } while (pauStackX8 < pauVar1);\n            auVar10 = vmovdqu_avx(*pauVar1);\n            auVar10 = vpcmpeqb_avx2(auVar10, auVar8);\n            vptest_avx(auVar10, auVar10);\n            if (bVar6) {\n                vzeroupper_avx();\n                return;\n            }\ncode_r0x004022e3:\n            uVar5 = SUB321(auVar10 >> 7, 0) & 1 | (SUB321(auVar10 >> 0xf, 0) & 1) << 1 |\n                    (SUB321(auVar10 >> 0x17, 0) & 1) << 2 | (SUB321(auVar10 >> 0x1f, 0) & 1) << 3 |\n                    (SUB321(auVar10 >> 0x27, 0) & 1) << 4 | (SUB321(auVar10 >> 0x2f, 0) & 1) << 5 |\n                    (SUB321(auVar10 >> 0x37, 0) & 1) << 6 | (SUB321(auVar10 >> 0x3f, 0) & 1) << 7 |\n                    (SUB321(auVar10 >> 0x47, 0) & 1) << 8 | (SUB321(auVar10 >> 0x4f, 0) & 1) << 9 |\n                    (SUB321(auVar10 >> 0x57, 0) & 1) << 10 | (SUB321(auVar10 >> 0x5f, 0) & 1) << 0xb |\n                    (SUB321(auVar10 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar10 >> 0x6f, 0) & 1) << 0xd |\n                    (SUB321(auVar10 >> 0x77, 0) & 1) << 0xe | SUB321(auVar10 >> 0x7f, 0) << 0xf |\n                    (SUB321(auVar10 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar10 >> 0x8f, 0) & 1) << 0x11 |\n                    (SUB321(auVar10 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar10 >> 0x9f, 0) & 1) << 0x13 |\n                    (SUB321(auVar10 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar10 >> 0xaf, 0) & 1) << 0x15 |\n                    (SUB321(auVar10 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar10 >> 0xbf, 0) << 0x17 |\n                    (SUB321(auVar10 >> 199, 0) & 1) << 0x18 | (SUB321(auVar10 >> 0xcf, 0) & 1) << 0x19 |\n                    (SUB321(auVar10 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar10 >> 0xdf, 0) & 1) << 0x1b |\n                    (SUB321(auVar10 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar10 >> 0xef, 0) & 1) << 0x1d |\n                    (SUB321(auVar10 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar10 >> 0xff, 0) << 0x1f;\n            iVar3 = 0;\n            if (uVar5 != 0) {\n                for (; (uVar5 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n                }\n            }\n            vzeroupper_avx();\n            return;\n        }\n        pauVar1 = pauStackX8[-1] + uStackX16 + 0x10;\n        for (; pauStackX8 < pauVar1; pauStackX8 = *pauStackX8 + 0x10) {\n            uVar9 = -((*pauStackX8)[0xf] == uStackX24);\n            auVar7 = CONCAT115(uVar9, CONCAT114(-((*pauStackX8)[0xe] == uStackX24), \n                                                CONCAT113(-((*pauStackX8)[0xd] == uStackX24), \n                                                          CONCAT112(-((*pauStackX8)[0xc] == uStackX24), \n                                                                    CONCAT111(-((*pauStackX8)[0xb] == uStackX24), \n                                                                              CONCAT110(-((*pauStackX8)[10] == uStackX24\n                                                                                         ), CONCAT19(-((*pauStackX8)[9]\n                                                                                                      == uStackX24), \n                                                                                                     CONCAT18(-((*\n                                                            pauStackX8)[8] == uStackX24), \n                                                            CONCAT17(-((*pauStackX8)[7] == uStackX24), \n                                                                     CONCAT16(-((*pauStackX8)[6] == uStackX24), \n                                                                              CONCAT15(-((*pauStackX8)[5] == uStackX24)\n                                                                                       , CONCAT14(-((*pauStackX8)[4] ==\n                                                                                                   uStackX24), \n                                                                                                  CONCAT13(-((*\n                                                            pauStackX8)[3] == uStackX24), \n                                                            CONCAT12(-((*pauStackX8)[2] == uStackX24), \n                                                                     CONCAT11(-((*pauStackX8)[1] == uStackX24), \n                                                                              -((*pauStackX8)[0] == uStackX24)))))))))))\n                                                            )))));\n            uVar4 = SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 |\n                    (SUB161(auVar7 >> 0x17, 0) & 1) << 2 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 |\n                    (SUB161(auVar7 >> 0x27, 0) & 1) << 4 | (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 |\n                    (SUB161(auVar7 >> 0x37, 0) & 1) << 6 | (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 |\n                    (SUB161(auVar7 >> 0x47, 0) & 1) << 8 | (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 |\n                    (SUB161(auVar7 >> 0x57, 0) & 1) << 10 | (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb |\n                    (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd |\n                    (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (uVar9 >> 7) << 0xf;\n            iVar3 = 0;\n            if (uVar4 != 0) {\n                for (; (uVar4 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n                }\n            }\n            if (uVar4 != 0) {\n                return;\n            }\n        }\n        uVar9 = -((*pauVar1)[0xf] == uStackX24);\n        auVar7 = CONCAT115(uVar9, CONCAT114(-((*pauVar1)[0xe] == uStackX24), \n                                            CONCAT113(-((*pauVar1)[0xd] == uStackX24), \n                                                      CONCAT112(-((*pauVar1)[0xc] == uStackX24), \n                                                                CONCAT111(-((*pauVar1)[0xb] == uStackX24), \n                                                                          CONCAT110(-((*pauVar1)[10] == uStackX24), \n                                                                                    CONCAT19(-((*pauVar1)[9] ==\n                                                                                              uStackX24), \n                                                                                             CONCAT18(-((*pauVar1)[8] ==\n                                                                                                       uStackX24), \n                                                                                                      CONCAT17(-((*\n                                                            pauVar1)[7] == uStackX24), \n                                                            CONCAT16(-((*pauVar1)[6] == uStackX24), \n                                                                     CONCAT15(-((*pauVar1)[5] == uStackX24), \n                                                                              CONCAT14(-((*pauVar1)[4] == uStackX24), \n                                                                                       CONCAT13(-((*pauVar1)[3] ==\n                                                                                                 uStackX24), \n                                                                                                CONCAT12(-((*pauVar1)[2]\n                                                                                                          == uStackX24)\n                                                                                                         , CONCAT11(-((*\n                                                            pauVar1)[1] == uStackX24), -((*pauVar1)[0] == uStackX24)))))\n                                                            )))))))))));\n        uVar4 = SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 | (SUB161(auVar7 >> 0x17, 0) & 1) << 2\n                | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 | (SUB161(auVar7 >> 0x27, 0) & 1) << 4 |\n                (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 | (SUB161(auVar7 >> 0x37, 0) & 1) << 6 |\n                (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 | (SUB161(auVar7 >> 0x47, 0) & 1) << 8 |\n                (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 | (SUB161(auVar7 >> 0x57, 0) & 1) << 10 |\n                (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb | (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc |\n                (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd | (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (uVar9 >> 7) << 0xf;\n        iVar3 = 0;\n        if (uVar4 != 0) {\n            for (; (uVar4 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n            }\n        }\n        if (uVar4 != 0) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 4619
    },
    "004028a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004028a0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (((*0x5584a0 != '\\0') && (*0x5584ad != '\\0')) && (*0x5584ae != '\\0')) {\n        *0x557c72 = 1;\n        fcn.0042bf60(0x80);\n        return;\n    }\n    fcn.0042bf60(0x20);\n    *0x557f00 = *0x557f00 | 1;\n    *0x557f08 = *0x557f08 | 1;\n    *0x557f10 = *0x557f10 | 1;\n    *0x557f18 = *0x557f18 | 1;\n    return;\n}\n",
        "token_count": 223
    },
    "004029c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004029c0(void)\n\n{\n    ulong *in_RAX;\n    ulong unaff_RBX;\n    \n    if (*0x557ed0 != '\\0') {\n        fcn.00402960();\n    }\n    *in_RAX = unaff_RBX;\n    return;\n}\n",
        "token_count": 65
    },
    "00402d00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00402d00(int64_t arg1)\n\n{\n    int64_t iVar1;\n    code *in_RAX;\n    int64_t iVar2;\n    uint64_t arg1_00;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uchar uStack131;\n    uint8_t uStack130;\n    uint8_t uStack129;\n    uint64_t uStack128;\n    uint64_t uStack120;\n    uchar auStack112 [8];\n    uint64_t uStack104;\n    int64_t iStack96;\n    uchar auStack72 [16];\n    uchar auStack56 [16];\n    ulong uStack40;\n    code **ppcStack32;\n    code **ppcStack24;\n    ulong uStack16;\n    \n    while (auStack72 < *(unaff_R14 + 0x10) || auStack72 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    ppcStack24 = CONCAT44(in_XMM15_Db, in_XMM15_Da);\n    uStack16 = 0x48a688;\n    uStack129 = 1;\n    if ((*(*(unaff_R14 + 0x30) + 0xf8) != '\\0') || (*0x557c94 != 0)) {\n        *(*(unaff_R14 + 0x30) + 0xf8) = 0;\n        fcn.00456f00();\n    }\n    if (arg1 == 0) {\n        uStack130 = 1;\n    }\n    else {\n        arg1_00 = *(unaff_R14 + 0x158);\n        uVar3 = arg1_00 + 1;\n        iVar1 = *(unaff_R14 + 0x150);\n        uVar4 = *(unaff_R14 + 0x160);\n        iVar2 = iVar1;\n        if (*(unaff_R14 + 0x160) < uVar3) {\n            uStack104 = arg1_00;\n            iVar2 = fcn.004425c0(arg1_00);\n            uVar3 = iVar1 + 1;\n            uVar4 = arg1_00;\n            arg1_00 = uStack104;\n        }\n        *(iVar2 + arg1_00 * 8) = arg1;\n        if (uVar3 == 0) {\n            fcn.00459720(0);\n            fcn.0042f440();\n            return;\n        }\n        if (*0x557ed0 != '\\0') {\n            uStack128 = uVar3;\n            uStack120 = uVar4;\n            iStack96 = iVar2;\n            fcn.00402960();\n            uVar3 = uStack128;\n            uVar4 = uStack120;\n            iVar2 = iStack96;\n        }\n        *(unaff_R14 + 0x150) = iVar2;\n        *(unaff_R14 + 0x160) = uVar4;\n        *(unaff_R14 + 0x158) = uVar3;\n        auStack56 = CONCAT88(unaff_R14, 0x4030c0);\n        uStack40 = 0x48a3f8;\n        ppcStack24 = auStack56;\n        uStack129 = 3;\n        uStack130 = 3;\n    }\n    if (*(*(unaff_R14 + 0x30) + 0x108) == 0) {\n        fcn.00404b80();\n    }\n    uStack131 = 1;\n    auStack72 = CONCAT88(&uStack131, 0x403060);\n    ppcStack32 = auStack72;\n    uStack130 = uStack130 | 4;\n    uStack129 = uStack130;\n    (*in_RAX)(uStack130, auStack112);\n    uStack131 = 0;\n    if ((uStack130 & 4) != 0) {\n        uStack130 = uStack130 & 0xfb;\n        uStack129 = uStack130;\n        (**ppcStack32)();\n    }\n    if ((uStack130 & 2) != 0) {\n        uStack130 = uStack130 & 0xfd;\n        uStack129 = uStack130;\n        (**ppcStack24)();\n    }\n    if ((uStack130 & 1) != 0) {\n        uStack129 = uStack130 & 0xfe;\n        fcn.0043c080();\n    }\n    return;\n}\n",
        "token_count": 1009
    },
    "00403120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00403120(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    char *in_RAX;\n    int64_t unaff_R14;\n    \n    if (*in_RAX != '\\0') {\n        piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n        *piVar1 = *piVar1 + 1;\n        piVar3 = *(unaff_R14 + 0x30);\n        *(*piVar3 + 0x38) = **(*piVar3 + 0x38);\n        if (0 < *(piVar3 + 0x21)) {\n            *(piVar3 + 0x1d) = 0;\n            *(piVar3 + 0x21) = *(piVar3 + 0x21) + -1;\n            *(piVar3 + 0x6a) = 0;\n        }\n        iVar2 = *(piVar3 + 0x1b);\n        *(piVar3 + 0x1b) = iVar2 + -1;\n        if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n    }\n    return;\n}\n",
        "token_count": 302
    },
    "00403280": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00403280(void)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    ulong *in_RAX;\n    ulong *puVar3;\n    int64_t unaff_R14;\n    \n    cVar2 = fcn.004031a0();\n    if (cVar2 == '\\0') {\n        return;\n    }\n    cVar2 = fcn.004031a0();\n    if (cVar2 != '\\0') {\n        return;\n    }\n    piVar1 = *(unaff_R14 + 0x30);\n    if ((*piVar1 != unaff_R14) && (piVar1[10] != unaff_R14)) {\n        puVar3 = *0x557de0;\n        if (*(piVar1 + 0x18) != 0) {\n            return;\n        }\n        while( true ) {\n            if (puVar3 == NULL) {\n                fcn.00456f00();\n                return;\n            }\n            if ((puVar3 <= in_RAX) && (in_RAX < puVar3 + 0x8000)) break;\n            puVar3 = *puVar3;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 265
    },
    "00403440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00403440(ulong arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    ulong unaff_RDI;\n    \n    if (*(in_RAX + 8) == 0) {\n        return;\n    }\n    cVar1 = fcn.004031a0();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.004031a0();\n        if (cVar1 != '\\0') {\n            return;\n        }\n        fcn.004035a0(unaff_RDI);\n        return;\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "004034e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004034e0(ulong arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t unaff_RDI;\n    \n    if (*(in_RAX + 8) == 0) {\n        return;\n    }\n    cVar1 = fcn.004031a0();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.004031a0();\n        if (cVar1 == '\\0') {\n            for (iVar2 = 0; iVar2 < unaff_RDI; iVar2 = iVar2 + 1) {\n                fcn.004035a0(0);\n            }\n            return;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 168
    },
    "00403c60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00403c60(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint64_t *puVar1;\n    ulong *puVar2;\n    uchar auVar3 [16];\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t arg1;\n    ulong uVar5;\n    int64_t arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            puVar1 = *(in_RAX + 0x30);\n            uVar4 = *puVar1;\n            if (uVar4 < 0x10000) {\n                if (*(puVar1 + 0x15) < 9) {\n                    *(*0x20 + -0x18) = puVar1;\n                    auVar3 = ZEXT816(unaff_RBX) * ZEXT816(uVar4);\n                    uVar4 = SUB168(auVar3, 0);\n                    if (((SUB168(auVar3 >> 0x40, 0) == 0) && (uVar4 < 0xffffffffffa1)) && (-1 < unaff_RBX)) {\n                        *(*0x20 + 0x10) = unaff_RBX;\n                        if (uVar4 == 0) {\n                            *(*0x20 + -0x40) = 0x403d7d;\n                            arg1 = fcn.0040a9e0(1);\n                            if (*0x557ed0 == 0) {\n                                *(arg1 + 0x10) = arg1 + 0x10;\n                            }\n                            else {\n                                *(*0x20 + -0x40) = 0x403d9a;\n                                arg1 = fcn.00459380(arg1 + 0x10);\n                            }\n                        }\n                        else {\n                            arg2 = *(*0x20 + -0x18);\n                            if (*(arg2 + 8) == 0) {\n                                uVar5 = 1;\n                                *(*0x20 + -0x40) = 0x403cf3;\n                                arg1 = fcn.0040a9e0();\n                                if (*0x557ed0 == 0) {\n                                    *(arg1 + 0x10) = arg1 + 0x60;\n                                }\n                                else {\n                                    *(*0x20 + -0x40) = 0x403d14;\n                                    arg1 = fcn.004593a0(uVar5, arg1 + 0x60, param_3, param_4);\n                                }\n                            }\n                            else {\n                                *(*0x20 + -0x20) = uVar4;\n                                *(*0x20 + -0x40) = 0x403d2a;\n                                uVar5 = fcn.0040b3c0();\n                                *(*0x20 + -0x10) = uVar5;\n                                *(*0x20 + -0x40) = 0x403d45;\n                                uVar5 = fcn.0040a9e0(1);\n                                if (*0x557ed0 == 0) {\n                                    arg1 = *(*0x20 + -0x10);\n                                    *(arg1 + 0x10) = uVar5;\n                                }\n                                else {\n                                    arg1 = *(*0x20 + -0x10);\n                                    *(*0x20 + -0x40) = 0x403d67;\n                                    fcn.00459280(arg1, arg2, param_3, param_4);\n                                }\n                            }\n                        }\n                        puVar2 = *(*0x20 + -0x18);\n                        *(arg1 + 0x18) = *puVar2;\n                        if (*0x557ed0 == 0) {\n                            *(arg1 + 0x20) = puVar2;\n                        }\n                        else {\n                            *(*0x20 + -0x40) = 0x403dbe;\n                            arg1 = fcn.00459380();\n                        }\n                        *(arg1 + 8) = *(*0x20 + 0x10);\n                        return;\n                    }\n                    *(*0x20 + -0x40) = 0x403de5;\n                    fcn.004305a0();\n                }\n                *(*0x20 + -0x40) = 0x403df6;\n                fcn.00430d40();\n            }\n            unaff_RBX = 0x26;\n            *(*0x20 + -0x40) = 0x403e07;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x403e17;\n        fcn.00457040();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1216
    },
    "00403e80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00403e80(uint64_t *param_1, uint64_t param_2, uint64_t param_3, uint64_t param_4)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t *puVar3;\n    int64_t iVar4;\n    char cVar5;\n    uint64_t *puVar6;\n    uint64_t uVar7;\n    ulong uVar8;\n    int64_t *piVar9;\n    ulong unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    uint64_t arg4;\n    uint64_t arg4_00;\n    int64_t iVar11;\n    int64_t iVar12;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar13;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            cVar5 = param_1;\n            if (in_RAX == NULL) {\n                if (cVar5 == '\\0') {\n                    return 0;\n                }\n                puVar3 = 0x4;\n                *(*0x20 + -0x88) = 0x403f85;\n                fcn.00433640();\n                *(*0x20 + -0x88) = 0x403f96;\n                fcn.00430d40();\n                param_1 = puVar3;\ncode_r0x00403f99:\n                do {\n                    piVar9 = puVar3[7];\n                    if (piVar9 == NULL) {\n                        piVar9 = NULL;\n                        break;\n                    }\n                    puVar6 = puVar3 + 7;\n                    uVar7 = piVar9[1];\n                    if (uVar7 == 0) {\n                        if (*0x557ed0 == 0) {\n                            *(puVar3 + 7) =\n                                 CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                        }\n                        else {\n                            uVar8 = 0;\n                            *(*0x20 + -0x88) = 0x404017;\n                            fcn.00459400(param_1, piVar9, 0, param_4);\n                            *(*0x20 + -0x88) = 0x404025;\n                            puVar3 = fcn.00459400(param_1, piVar9, uVar8, param_4);\n                        }\n                    }\n                    else if (*0x557ed0 == 0) {\n                        *(uVar7 + 0x10) = 0;\n                        puVar3[7] = uVar7;\n                        piVar9[1] = 0;\n                    }\n                    else {\n                        iVar4 = uVar7 + 0x10;\n                        uVar8 = 0;\n                        *(*0x20 + -0x88) = 0x403fe9;\n                        fcn.004593a0(puVar6, 0, uVar7, iVar4);\n                        *(*0x20 + -0x88) = 0x403ff1;\n                        fcn.00459400(puVar6, uVar8, uVar7, iVar4);\n                        *(*0x20 + -0x88) = 0x403ffa;\n                        puVar3 = fcn.004593a0(puVar6, uVar8, uVar7, iVar4);\n                    }\n                    if (*(piVar9 + 0x34) == '\\0') {\n                        param_3 = 0;\n                    }\n                    else {\n                        iVar4 = *piVar9;\n                        LOCK();\n                        piVar1 = iVar4 + 0x178;\n                        bVar13 = *piVar1 == 0;\n                        if (bVar13) {\n                            *piVar1 = 1;\n                        }\n                        param_3 = (iVar4 & 0xffffff00 | bVar13) ^ 1;\n                    }\n                    param_4 = 1;\n                    param_1 = puVar3;\n                } while (param_3 != '\\0');\n                if (piVar9 != NULL) {\n                    *(*0x20 + -0x18) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)))\n                    ;\n                    *(*0x20 + -0x18) = 0x4044e0;\n                    *(*0x20 + -0x10) = puVar3;\n                    *(*0x20 + -0x88) = 0x404425;\n                    fcn.00404520(*(*0x20 + 0x10));\n                    return 1;\n                }\n                if (*puVar3 <= puVar3[1] && puVar3[1] != *puVar3) {\n                    *(*0x20 + -0x88) = 0x4043a9;\n                    fcn.0040eb60(*(*0x20 + 0x10));\n                    piVar9 = *(*0x20 + 8);\n                    iVar4 = piVar9[5];\n                    piVar9[5] = iVar4 + 1;\n                    if (piVar9[1] == iVar4 + 1) {\n                        piVar9[5] = 0;\n                    }\n                    *piVar9 = *piVar9 + 1;\n                    *(*0x20 + -0x88) = 0x4043dd;\n                    fcn.00409520();\n                    return 1;\n                }\n                if (*(*0x20 + 0x18) == '\\0') {\n                    *(*0x20 + -0x88) = 0x4040a5;\n                    fcn.00409520();\n                    return 0;\n                }\n                *(*0x20 + -0x38) = unaff_R14;\n                *(*0x20 + -0x88) = 0x4040bb;\n                puVar3 = fcn.00433860();\n                puVar3[5] = 0;\n                iVar4 = *(*0x20 + -0x50);\n                if (iVar4 != 0) {\n                    puVar3[5] = 0xffffffffffffffff;\n                }\n                if (*0x557ed0 == 0) {\n                    uVar7 = *(*0x20 + 0x10);\n                    puVar3[3] = uVar7;\n                    puVar3[8] = 0;\n                    param_3 = *(*0x20 + -0x38);\n                    *puVar3 = param_3;\n                }\n                else {\n                    uVar7 = *(*0x20 + 0x10);\n                    *(*0x20 + -0x88) = 0x40410d;\n                    fcn.004593a0(iVar4, uVar7, param_3, param_4);\n                    uVar8 = 0;\n                    *(*0x20 + -0x88) = 0x404119;\n                    fcn.00459400(iVar4, uVar7, 0, param_4);\n                    param_3 = *(*0x20 + -0x38);\n                    *(*0x20 + -0x88) = 0x404126;\n                    puVar3 = fcn.00459420(iVar4, uVar7, uVar8);\n                }\n                *(puVar3 + 0x34) = 0;\n                puVar6 = puVar3 + 10;\n                if (*0x557ed0 == 0) {\n                    arg4 = *(*0x20 + 8);\n                    puVar3[10] = arg4;\n                }\n                else {\n                    arg4 = *(*0x20 + 8);\n                    *(*0x20 + -0x88) = 0x404155;\n                    puVar3 = fcn.00459420(iVar4, uVar7, param_3);\n                }\n                iVar11 = param_3 + 0x148;\n                iVar12 = param_3 + 0x88;\n                if (*0x557ed0 == 0) {\n                    *(param_3 + 0x148) = puVar3;\n                    *(param_3 + 0x88) = 0;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x40418e;\n                    fcn.00459280(iVar4, uVar7, param_3, arg4);\n                    *(*0x20 + -0x88) = 0x40419b;\n                    puVar3 = fcn.004593a0(iVar4, 0, param_3, arg4);\n                }\n                if (*0x557ed0 == 0) {\n                    puVar3[1] = 0;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x4041c9;\n                    puVar3 = fcn.004593a0(iVar4, 0, param_3, arg4);\n                }\n                *(*0x20 + -0x48) = puVar3;\n                *(*0x20 + -0x20) = puVar6;\n                *(*0x20 + -0x28) = iVar11;\n                *(*0x20 + -0x30) = iVar12;\n                arg4_00 = *(arg4 + 0x50);\n                if (arg4_00 == 0) {\n                    if (*0x557ed0 == 0) {\n                        puVar3[2] = 0;\n                        *(arg4 + 0x48) = puVar3;\n                        *(arg4 + 0x50) = puVar3;\n                    }\n                    else {\n                        uVar8 = 0;\n                        *(*0x20 + -0x88) = 0x404265;\n                        fcn.004593a0(iVar4, 0, param_3, arg4);\n                        *(*0x20 + -0x88) = 0x40426e;\n                        fcn.00459280(iVar4, uVar8, param_3, arg4);\n                        *(*0x20 + -0x88) = 0x404276;\n                        fcn.00459280(iVar4, uVar8, param_3, arg4);\n                    }\n                }\n                else if (*0x557ed0 == 0) {\n                    puVar3[2] = arg4_00;\n                    *(arg4_00 + 8) = puVar3;\n                    *(arg4 + 0x50) = puVar3;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x40421c;\n                    fcn.00459420(iVar4, uVar7, param_3);\n                    *(*0x20 + -0x88) = 0x404225;\n                    fcn.00459280(iVar4, uVar7, param_3, arg4_00);\n                    *(*0x20 + -0x88) = 0x40422d;\n                    fcn.00459280(iVar4, uVar7, param_3, arg4_00);\n                }\n                uVar2 = *(param_3 + 0xb9);\n                *(param_3 + 0xb9) = 1;\n                param_4 = uVar2;\n                param_1 = 0xf;\n                unaff_RDI = 0x16;\n                *(*0x20 + -0x88) = 0x4042ac;\n                fcn.00433640();\n                iVar4 = *(*0x20 + -0x48);\n                param_2 = *(*0x20 + -0x38);\n                if (*(param_2 + 0x148) == iVar4) {\n                    if (*0x557ed0 == 0) {\n                        *(param_2 + 0x148) = 0;\n                    }\n                    else {\n                        unaff_RDI = *(*0x20 + -0x28);\n                        *(*0x20 + -0x88) = 0x4042ef;\n                        iVar4 = fcn.00459380();\n                    }\n                    *(param_2 + 0xb8) = 0;\n                    uVar7 = *(iVar4 + 0x35);\n                    if (*0x557ed0 == 0) {\n                        *(param_2 + 0x88) = 0;\n                    }\n                    else {\n                        unaff_RDI = *(*0x20 + -0x30);\n                        *(*0x20 + -0x88) = 0x40431c;\n                        iVar4 = fcn.004593a0(uVar7, 0, param_3, param_4);\n                    }\n                    *(*0x20 + -0x51) = uVar7;\n                    param_2 = *(iVar4 + 0x28);\n                    if (0 < param_2) {\n                        param_2 = param_2 - *(*0x20 + -0x50);\n                        *(*0x20 + -0x88) = 0x40433e;\n                        fcn.00427d20();\n                        iVar4 = *(*0x20 + -0x48);\n                        uVar7 = *(*0x20 + -0x51);\n                    }\n                    if (*0x557ed0 == 0) {\n                        *(iVar4 + 0x50) = 0;\n                    }\n                    else {\n                        unaff_RDI = *(*0x20 + -0x20);\n                        param_2 = 0;\n                        *(*0x20 + -0x88) = 0x404367;\n                        fcn.004593a0(uVar7, 0, param_3, param_4);\n                    }\n                    *(*0x20 + -0x88) = 0x40436c;\n                    fcn.00433b60();\n                    if (*(*0x20 + -0x51) != '\\0') {\n                        return 1;\n                    }\n                    param_1 = *(*0x20 + 8);\n                    if (*(param_1 + 0x1c) == 0) {\n                        *(*0x20 + -0x88) = 0x404453;\n                        fcn.00430d40();\n                    }\n                    *(*0x20 + -0x88) = 0x404466;\n                    fcn.004305a0();\n                }\n                *(*0x20 + -0x88) = 0x404477;\n                fcn.00430d40();\n            }\n            else {\n                if ((cVar5 == '\\0') && (*(in_RAX + 0x1c) == 0)) {\n                    uVar7 = in_RAX[1];\n                    if (uVar7 == 0) {\n                        param_2 = in_RAX[7] == 0;\n                    }\n                    else {\n                        param_2 = uVar7 & 0xffffffffffffff00 | *in_RAX == uVar7;\n                    }\n                    if (param_2 != '\\0') {\n                        return 0;\n                    }\n                }\n                *(*0x20 + 0x18) = cVar5;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                if (*0x557d28 == 0) {\n                    param_2 = 0;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x403f07;\n                    fcn.00459140(param_1, param_2);\n                    in_XMM15_Da = 0;\n                    in_XMM15_Db = 0;\n                    in_XMM15_Dc = 0;\n                    in_XMM15_Dd = 0;\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    param_2 = *(*0x20 + -0x80);\n                    in_RAX = *(*0x20 + 8);\n                }\n                *(*0x20 + -0x50) = param_2;\n                param_1 = in_RAX + 0xb;\n                *(*0x20 + -0x40) = param_1;\n                *(*0x20 + -0x88) = 0x403f45;\n                fcn.00409300();\n                puVar3 = *(*0x20 + 8);\n                if (*(puVar3 + 0x1c) == 0) goto code_r0x00403f99;\n            }\n            *(*0x20 + -0x88) = 0x404485;\n            fcn.00409520();\n            unaff_RBX = 0x49e600;\n            *(*0x20 + -0x88) = 0x404498;\n            in_RAX = fcn.004305a0();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        puVar10[0x18] = param_1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + -8) = 0x4044b1;\n        fcn.00457040();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        param_1 = puVar10[0x18];\n        unaff_RDI = *(puVar10 + 0x20);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 3964
    },
    "00404520": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00404520(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    int64_t *unaff_RBX;\n    ulong unaff_RSI;\n    code **unaff_RDI;\n    int64_t unaff_R14;\n    ulong uStack0000000000000028;\n    int64_t iStack40;\n    \n    uStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    piVar2 = unaff_RBX;\n    if (unaff_RBX[3] != 0) {\n        fcn.00404660(arg1);\n        if (*0x557ed0 == 0) {\n            unaff_RBX[3] = 0;\n        }\n        else {\n            piVar2 = fcn.00459380(0);\n        }\n    }\n    iVar1 = *piVar2;\n    (**unaff_RDI)();\n    piVar2 = unaff_RBX;\n    if (*0x557ed0 == 0) {\n        *(iVar1 + 0x88) = unaff_RBX;\n    }\n    else {\n        fcn.00459380();\n    }\n    *(piVar2 + 0x35) = 1;\n    if (piVar2[5] != 0) {\n        fcn.00459140(piVar2, unaff_RDI);\n        unaff_RBX[5] = iStack40;\n    }\n    fcn.00433780(uStack0000000000000028);\n    return;\n}\n",
        "token_count": 378
    },
    "00404760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00404760(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t *piVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t iVar4;\n    ulong arg3;\n    int64_t unaff_R14;\n    bool bVar5;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX != 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x10) = in_RAX + 0x58;\n                *(*0x20 + -0x40) = 0x4047a5;\n                fcn.00409300();\n                iVar1 = *(*0x20 + 8);\n                if (*(iVar1 + 0x1c) == 0) break;\n                *(*0x20 + -0x40) = 0x404b29;\n                fcn.00409520();\n                *(*0x20 + -0x40) = 0x404b3c;\n                fcn.004305a0();\n            }\n            *(*0x20 + -0x40) = 0x404b4f;\n            in_RAX = fcn.004305a0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x404b5a;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n    *(iVar1 + 0x1c) = 1;\n    *(*0x20 + -0x28) = 0;\ncode_r0x004048ac:\n    piVar2 = *(iVar1 + 0x38);\n    if (piVar2 != NULL) goto code_r0x004048b9;\n    piVar2 = NULL;\n    goto code_r0x004047ed;\ncode_r0x004048b9:\n    iVar4 = piVar2[1];\n    if (iVar4 == 0) {\n        if (*0x557ed0 == 0) {\n            *(iVar1 + 0x38) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        }\n        else {\n            *(*0x20 + -0x40) = 0x404925;\n            fcn.004593e0(iVar1, piVar2, param_3, param_4);\n            *(*0x20 + -0x40) = 0x40492e;\n            fcn.004593e0(iVar1, piVar2, param_3, param_4);\n        }\n    }\n    else if (*0x557ed0 == 0) {\n        *(iVar4 + 0x10) = 0;\n        *(iVar1 + 0x38) = iVar4;\n        piVar2[1] = 0;\n    }\n    else {\n        iVar4 = iVar4 + 0x10;\n        param_4 = 0;\n        *(*0x20 + -0x40) = 0x4048f7;\n        fcn.00459420(iVar1, piVar2, iVar4);\n        *(*0x20 + -0x40) = 0x4048ff;\n        fcn.004593e0(iVar1, piVar2, iVar4, param_4);\n        *(*0x20 + -0x40) = 0x404908;\n        fcn.00459420(iVar1, piVar2, iVar4);\n    }\n    if (*(piVar2 + 0x34) == '\\0') {\n        bVar5 = false;\n    }\n    else {\n        LOCK();\n        bVar5 = *(*piVar2 + 0x178) == 0;\n        if (bVar5) {\n            *(*piVar2 + 0x178) = 1;\n        }\n        bVar5 = !bVar5;\n    }\n    param_3 = 1;\n    if (!bVar5) {\ncode_r0x004047ed:\n        arg3 = 1;\n        if (piVar2 != NULL) {\n            *(*0x20 + -0x20) = piVar2;\n            if (piVar2[3] != 0) {\n                *(*0x20 + -0x40) = 0x40480e;\n                fcn.0040ee00();\n                if (*0x557ed0 == 0) {\n                    *(*(*0x20 + -0x20) + 0x18) = 0;\n                }\n                else {\n                    *(*0x20 + -0x40) = 0x404836;\n                    fcn.004593a0(*(*0x20 + -0x20), 0, arg3, param_4);\n                }\n                iVar1 = *(*0x20 + 8);\n                piVar2 = *(*0x20 + -0x20);\n            }\n            if (piVar2[5] != 0) {\n                *(*0x20 + -0x40) = 0x404852;\n                fcn.00459140(iVar1, piVar2);\n                in_XMM15_Da = 0;\n                in_XMM15_Db = 0;\n                in_XMM15_Dc = 0;\n                in_XMM15_Dd = 0;\n                piVar2 = *(*0x20 + -0x20);\n                piVar2[5] = *(*0x20 + -0x38);\n                iVar1 = *(*0x20 + 8);\n            }\n            param_3 = 1;\n            iVar4 = *piVar2;\n            if (*0x557ed0 == 0) {\n                *(iVar4 + 0x88) = piVar2;\n            }\n            else {\n                *(*0x20 + -0x40) = 0x4048a7;\n                fcn.004593a0(iVar1, piVar2, 1, param_4);\n            }\n            *(piVar2 + 0x35) = 0;\n            *(iVar4 + 0xa0) = *(*0x20 + -0x28);\n            *(*0x20 + -0x28) = iVar4;\n            goto code_r0x004048ac;\n        }\n        goto code_r0x00404a1f;\n    }\n    goto code_r0x004048ac;\ncode_r0x00404a1f:\n    piVar2 = *(iVar1 + 0x48);\n    if (piVar2 != NULL) goto code_r0x00404a2c;\n    piVar2 = NULL;\n    goto code_r0x0040498c;\ncode_r0x00404a2c:\n    iVar4 = piVar2[1];\n    if (iVar4 == 0) {\n        if (*0x557ed0 == 0) {\n            *(iVar1 + 0x48) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        }\n        else {\n            *(*0x20 + -0x40) = 0x404a94;\n            fcn.004593c0(iVar1, piVar2, arg3, param_4);\n            *(*0x20 + -0x40) = 0x404a9d;\n            fcn.004593c0(iVar1, piVar2, arg3, param_4);\n        }\n    }\n    else if (*0x557ed0 == 0) {\n        *(iVar4 + 0x10) = 0;\n        *(iVar1 + 0x48) = iVar4;\n        piVar2[1] = 0;\n    }\n    else {\n        param_4 = 0;\n        *(*0x20 + -0x40) = 0x404a6a;\n        fcn.00459420(iVar1, piVar2, arg3);\n        *(*0x20 + -0x40) = 0x404a72;\n        fcn.004593c0(iVar1, piVar2, arg3, param_4);\n        *(*0x20 + -0x40) = 0x404a7b;\n        fcn.00459420(iVar1, piVar2, arg3);\n    }\n    if (*(piVar2 + 0x34) == '\\0') {\n        bVar5 = false;\n    }\n    else {\n        LOCK();\n        bVar5 = *(*piVar2 + 0x178) == 0;\n        if (bVar5) {\n            *(*piVar2 + 0x178) = arg3;\n        }\n        bVar5 = !bVar5;\n    }\n    if (!bVar5) {\ncode_r0x0040498c:\n        if (piVar2 == NULL) {\n            *(*0x20 + -0x40) = 0x404ad9;\n            fcn.00409520();\n            while (iVar1 = *(*0x20 + -0x28),  iVar1 != 0) {\n                if (iVar1 != 0) {\n                    *(*0x20 + -0x28) = *(iVar1 + 0xa0);\n                }\n                *(iVar1 + 0xa0) = 0;\n                *(*0x20 + -0x40) = 0x404af0;\n                fcn.00433780();\n            }\n            return;\n        }\n        if (*0x557ed0 == 0) {\n            piVar2[3] = 0;\n        }\n        else {\n            *(*0x20 + -0x40) = 0x4049b3;\n            fcn.004593c0(iVar1, piVar2, arg3, param_4);\n        }\n        if (piVar2[5] != 0) {\n            *(*0x20 + -0x18) = piVar2;\n            *(*0x20 + -0x40) = 0x4049c5;\n            fcn.00459140(iVar1, piVar2);\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            piVar2 = *(*0x20 + -0x18);\n            piVar2[5] = *(*0x20 + -0x38);\n            arg3 = 1;\n            iVar1 = *(*0x20 + 8);\n        }\n        iVar4 = *piVar2;\n        if (*0x557ed0 == 0) {\n            *(iVar4 + 0x88) = piVar2;\n        }\n        else {\n            *(*0x20 + -0x40) = 0x404a1a;\n            fcn.004593a0(iVar1, piVar2, arg3, param_4);\n        }\n        *(piVar2 + 0x35) = 0;\n        *(iVar4 + 0xa0) = *(*0x20 + -0x28);\n        *(*0x20 + -0x28) = iVar4;\n    }\n    goto code_r0x00404a1f;\n}\n",
        "token_count": 2644
    },
    "00404bc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00404bc0(uint64_t param_1, uint64_t param_2, uint8_t *param_3, uint64_t param_4)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    int64_t *in_RAX;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    char cVar5;\n    int64_t *arg1;\n    uint64_t uVar6;\n    ulong uVar7;\n    int64_t *arg2;\n    int64_t arg2_00;\n    int64_t noname_1;\n    int64_t unaff_RBX;\n    int64_t iVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t iVar10;\n    int64_t arg4;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar11;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            cVar5 = param_1;\n            if (in_RAX == NULL) {\n                if (cVar5 == '\\0') {\n                    return 0;\n                }\n                piVar3 = 0x3;\n                *(*0x20 + -0x90) = 0x404d66;\n                fcn.00433640();\n                *(*0x20 + -0x90) = 0x404d77;\n                fcn.00430d40();\n                piVar4 = piVar3;\n            }\n            else {\n                if (cVar5 == '\\0') {\n                    if (in_RAX[1] == 0) {\n                        uVar6 = in_RAX[9] & 0xffffffffffffff00U | in_RAX[9] == 0;\n                    }\n                    else {\n                        uVar6 = param_2 & 0xffffffffffffff00 | *in_RAX == 0;\n                    }\n                }\n                else {\n                    uVar6 = 0;\n                }\n                if (uVar6 != '\\0') {\n                    if (*(in_RAX + 0x1c) == 0) {\n                        return 0;\n                    }\n                    if (in_RAX[1] == 0) {\n                        uVar6 = in_RAX[9] & 0xffffffffffffff00U | in_RAX[9] == 0;\n                    }\n                    else {\n                        uVar6 = *(in_RAX + 0x1c) & 0xffffff00 | *in_RAX == 0;\n                    }\n                    if (uVar6 != '\\0') {\n                        if (unaff_RBX != 0) {\n                            *(*0x20 + -0x90) = 0x404c4e;\n                            fcn.0040ee00();\n                        }\n                        return 1;\n                    }\n                }\n                *(*0x20 + 0x18) = cVar5;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                if (*0x557d28 == 0) {\n                    uVar7 = 0;\n                }\n                else {\n                    *(*0x20 + -0x90) = 0x404ca5;\n                    fcn.00459140(param_1, uVar6);\n                    in_XMM15_Da = 0;\n                    in_XMM15_Db = 0;\n                    in_XMM15_Dc = 0;\n                    in_XMM15_Dd = 0;\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    uVar7 = *(*0x20 + -0x88);\n                    in_RAX = *(*0x20 + 8);\n                }\n                *(*0x20 + -0x58) = uVar7;\n                piVar4 = in_RAX + 0xb;\n                *(*0x20 + -0x40) = piVar4;\n                *(*0x20 + -0x90) = 0x404cdf;\n                fcn.00409300();\n                piVar3 = *(*0x20 + 8);\n                if ((*(piVar3 + 0x1c) != 0) && (*piVar3 == 0)) {\n                    *(*0x20 + -0x90) = 0x404cff;\n                    fcn.00409520();\n                    if (*(*0x20 + 0x10) != 0) {\n                        *(*0x20 + -0x90) = 0x404d1d;\n                        fcn.0040ee00();\n                    }\n                    return 1;\n                }\n            }\n            do {\n                arg2 = piVar3[9];\n                if (arg2 == NULL) {\n                    arg2 = NULL;\n                    break;\n                }\n                arg1 = piVar3 + 9;\n                iVar8 = arg2[1];\n                if (iVar8 == 0) {\n                    if (*0x557ed0 == 0) {\n                        *(piVar3 + 9) =\n                             CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                    }\n                    else {\n                        uVar7 = 0;\n                        *(*0x20 + -0x90) = 0x404df7;\n                        fcn.00459400(piVar4, arg2, 0, param_4);\n                        *(*0x20 + -0x90) = 0x404e05;\n                        piVar3 = fcn.00459400(piVar4, arg2, uVar7, param_4);\n                    }\n                }\n                else if (*0x557ed0 == 0) {\n                    *(iVar8 + 0x10) = 0;\n                    piVar3[9] = iVar8;\n                    arg2[1] = 0;\n                }\n                else {\n                    iVar10 = iVar8 + 0x10;\n                    uVar7 = 0;\n                    *(*0x20 + -0x90) = 0x404dc9;\n                    fcn.004593a0(arg1, 0, iVar8, iVar10);\n                    *(*0x20 + -0x90) = 0x404dd1;\n                    fcn.00459400(arg1, uVar7, iVar8, iVar10);\n                    *(*0x20 + -0x90) = 0x404dda;\n                    piVar3 = fcn.004593a0(arg1, uVar7, iVar8, iVar10);\n                }\n                if (*(arg2 + 0x34) == '\\0') {\n                    param_3 = NULL;\n                }\n                else {\n                    iVar8 = *arg2;\n                    LOCK();\n                    piVar1 = iVar8 + 0x178;\n                    bVar11 = *piVar1 == 0;\n                    if (bVar11) {\n                        *piVar1 = 1;\n                    }\n                    param_3 = (iVar8 & 0xffffff00 | bVar11) ^ 1;\n                }\n                param_4 = 1;\n                piVar4 = piVar3;\n            } while (param_3 != '\\0');\n            if (arg2 != NULL) {\n                *(*0x20 + -0x18) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                *(*0x20 + -0x18) = 0x4052a0;\n                *(*0x20 + -0x10) = piVar3;\n                *(*0x20 + -0x90) = 0x405233;\n                fcn.004052e0(*(*0x20 + 0x10));\n                return 1;\n            }\n            if (*piVar3 != 0) {\n                iVar8 = piVar3[6] * *(piVar3 + 3) + piVar3[2];\n                if (*(*0x20 + 0x10) != 0) {\n                    *(*0x20 + -0x50) = iVar8;\n                    *(*0x20 + -0x90) = 0x404e9c;\n                    fcn.0040eb60(iVar8);\n                }\n                *(*0x20 + -0x90) = 0x404eb2;\n                fcn.0040ee00();\n                piVar4 = *(*0x20 + 8);\n                iVar8 = piVar4[6];\n                piVar4[6] = iVar8 + 1;\n                if (piVar4[1] == iVar8 + 1) {\n                    piVar4[6] = 0;\n                }\n                *piVar4 = *piVar4 + -1;\n                *(*0x20 + -0x90) = 0x404ee5;\n                fcn.00409520();\n                return 1;\n            }\n            if (*(*0x20 + 0x18) == '\\0') {\n                *(*0x20 + -0x90) = 0x404f14;\n                fcn.00409520();\n                return 0;\n            }\n            *(*0x20 + -0x38) = unaff_R14;\n            *(*0x20 + -0x90) = 0x404f32;\n            piVar4 = fcn.00433860();\n            piVar4[5] = 0;\n            iVar8 = *(*0x20 + -0x58);\n            if (iVar8 != 0) {\n                piVar4[5] = -1;\n            }\n            if (*0x557ed0 == 0) {\n                piVar4[3] = *(*0x20 + 0x10);\n                piVar4[8] = 0;\n            }\n            else {\n                *(*0x20 + -0x90) = 0x404f7d;\n                fcn.004593a0(iVar8, *(*0x20 + 0x10), param_3, param_4);\n                *(*0x20 + -0x90) = 0x404f88;\n                piVar4 = fcn.004593a0(iVar8, 0, param_3, param_4);\n            }\n            arg2_00 = *(*0x20 + -0x38);\n            iVar10 = arg2_00 + 0x148;\n            if (*0x557ed0 == 0) {\n                *(arg2_00 + 0x148) = piVar4;\n                *piVar4 = arg2_00;\n            }\n            else {\n                *(*0x20 + -0x90) = 0x404fb0;\n                fcn.00459280(iVar8, arg2_00, param_3, param_4);\n                *(*0x20 + -0x90) = 0x404fbb;\n                piVar4 = fcn.004593a0(iVar8, arg2_00, param_3, param_4);\n            }\n            *(piVar4 + 0x34) = 0;\n            piVar3 = piVar4 + 10;\n            arg4 = arg2_00 + 0x88;\n            if (*0x557ed0 == 0) {\n                noname_1 = *(*0x20 + 8);\n                piVar4[10] = noname_1;\n                *(arg2_00 + 0x88) = 0;\n            }\n            else {\n                noname_1 = *(*0x20 + 8);\n                *(*0x20 + -0x90) = 0x405005;\n                fcn.004593a0(iVar8, noname_1, piVar3, arg4);\n                *(*0x20 + -0x90) = 0x405013;\n                piVar4 = fcn.00459400(iVar8, noname_1, 0, arg4);\n            }\n            if (*0x557ed0 == 0) {\n                piVar4[1] = 0;\n            }\n            else {\n                *(*0x20 + -0x90) = 0x405048;\n                piVar4 = fcn.00459400(iVar8, arg2_00, 0, arg4);\n            }\n            *(*0x20 + -0x48) = piVar4;\n            *(*0x20 + -0x20) = iVar10;\n            *(*0x20 + -0x28) = piVar3;\n            *(*0x20 + -0x30) = arg4;\n            iVar10 = *(noname_1 + 0x40);\n            if (iVar10 == 0) {\n                if (*0x557ed0 == 0) {\n                    piVar4[2] = 0;\n                    *(noname_1 + 0x38) = piVar4;\n                    *(noname_1 + 0x40) = piVar4;\n                }\n                else {\n                    uVar7 = 0;\n                    *(*0x20 + -0x90) = 0x4050e5;\n                    fcn.00459400(iVar8, arg2_00, 0, arg4);\n                    *(*0x20 + -0x90) = 0x4050ee;\n                    fcn.00459280(iVar8, arg2_00, uVar7, arg4);\n                    *(*0x20 + -0x90) = 0x4050f6;\n                    fcn.00459280(iVar8, arg2_00, uVar7, arg4);\n                }\n            }\n            else if (*0x557ed0 == 0) {\n                piVar4[2] = iVar10;\n                *(iVar10 + 8) = piVar4;\n                *(noname_1 + 0x40) = piVar4;\n            }\n            else {\n                *(*0x20 + -0x90) = 0x40509c;\n                fcn.00459400(iVar8, arg2_00, iVar10, arg4);\n                *(*0x20 + -0x90) = 0x4050a5;\n                fcn.00459280(iVar8, arg2_00, iVar10, arg4);\n                *(*0x20 + -0x90) = 0x4050ad;\n                fcn.00459280(iVar8, arg2_00, iVar10, arg4);\n            }\n            param_3 = arg2_00 + 0xb9;\n            uVar2 = *param_3;\n            *param_3 = 1;\n            param_4 = uVar2;\n            param_1 = 0xe;\n            *(*0x20 + -0x90) = 0x40512c;\n            fcn.00433640();\n            iVar8 = *(*0x20 + -0x48);\n            param_2 = *(*0x20 + -0x38);\n            if (*(param_2 + 0x148) == iVar8) {\n                if (*0x557ed0 == 0) {\n                    *(param_2 + 0x148) = 0;\n                }\n                else {\n                    *(*0x20 + -0x90) = 0x40516f;\n                    iVar8 = fcn.00459380(0);\n                }\n                *(param_2 + 0xb8) = 0;\n                if (0 < *(iVar8 + 0x28)) {\n                    *(*0x20 + -0x90) = 0x405194;\n                    fcn.00427d20();\n                    iVar8 = *(*0x20 + -0x48);\n                    param_2 = *(*0x20 + -0x38);\n                }\n                uVar6 = *(iVar8 + 0x35);\n                *(*0x20 + -0x59) = *(iVar8 + 0x35);\n                if (*0x557ed0 == 0) {\n                    *(param_2 + 0x88) = 0;\n                    *(iVar8 + 0x50) = 0;\n                }\n                else {\n                    *(*0x20 + -0x90) = 0x4051d0;\n                    fcn.004593a0(uVar6, 0, param_3, param_4);\n                    *(*0x20 + -0x90) = 0x4051dc;\n                    fcn.004593a0(uVar6, 0, param_3, param_4);\n                }\n                *(*0x20 + -0x90) = 0x4051e5;\n                fcn.00433b60();\n                return 1;\n            }\n            unaff_RBX = 0x1b;\n            *(*0x20 + -0x90) = 0x40525b;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        puVar9[0x18] = param_1;\n        *(puVar9 + -8) = 0x40526f;\n        fcn.00457040();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        param_1 = puVar9[0x18];\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 3941
    },
    "004052e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004052e0(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t *piVar1;\n    int64_t in_RDX;\n    int64_t *unaff_RBX;\n    ulong unaff_RSI;\n    int64_t iVar2;\n    code **unaff_RDI;\n    ulong in_R9;\n    int64_t unaff_R14;\n    ulong uStack0000000000000028;\n    int64_t iStack48;\n    \n    uStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (*(in_RAX + 8) == 0) {\n        in_RAX = in_RDX;\n        if (arg1 != 0) {\n            fcn.004046e0(arg1);\n            in_RAX = in_RDX;\n        }\n    }\n    else {\n        if (arg1 != 0) {\n            fcn.0040eb60(*(in_RAX + 0x30) * *(in_RAX + 0x18) + *(in_RAX + 0x10));\n        }\n        fcn.0040eb60(unaff_RBX[3]);\n        iVar2 = *(in_RAX + 0x30) + 1;\n        *(in_RAX + 0x30) = iVar2;\n        if (*(in_RAX + 8) == iVar2) {\n            *(in_RAX + 0x30) = 0;\n        }\n        *(in_RAX + 0x28) = *(in_RAX + 0x30);\n    }\n    if (*0x557ed0 == 0) {\n        unaff_RBX[3] = 0;\n    }\n    else {\n        fcn.00459400(unaff_RDI, in_RAX, 0, in_R9);\n    }\n    iVar2 = *unaff_RBX;\n    (**unaff_RDI)();\n    piVar1 = unaff_RBX;\n    if (*0x557ed0 == 0) {\n        *(iVar2 + 0x88) = unaff_RBX;\n    }\n    else {\n        fcn.00459380();\n    }\n    *(piVar1 + 0x35) = 1;\n    if (piVar1[5] != 0) {\n        fcn.00459140(piVar1, unaff_RDI);\n        unaff_RBX[5] = iStack48;\n    }\n    fcn.00433780(uStack0000000000000028);\n    return;\n}\n",
        "token_count": 592
    },
    "004082c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004082c0(uint64_t param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    ulong *puVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    uint32_t *noname_1;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            noname_1 = *(in_RAX + 0x38);\n            if (*(in_RAX + 0x40) != 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                if ((*(unaff_RBX + 0x14) & 1) == 0) {\n                    if (param_1 != '\\0') {\n                        return 0;\n                    }\n                    uVar1 = *noname_1;\n                    *(*0x20 + -0x48) = 0x4084dc;\n                    fcn.00451020();\n                    *(*0x20 + -0x48) = 0x4084e5;\n                    uVar3 = fcn.00451880(param_1, noname_1, param_3, param_4);\n                    *(*0x20 + -0x18) = uVar3;\n                    *(*0x20 + -0x28) = uVar1;\n                    *(*0x20 + -0x48) = 0x4084fb;\n                    iVar4 = fcn.0040b3c0();\n                    if (*0x557ed0 == 0) {\n                        *(iVar4 + 8) = *(*0x20 + 0x10);\n                        *(iVar4 + 0x10) = *(*0x20 + 8);\n                    }\n                    else {\n                        *(*0x20 + -0x48) = 0x408565;\n                        fcn.00459380(*(*0x20 + 0x10));\n                        *(*0x20 + -0x48) = 0x408573;\n                        iVar4 = fcn.00459380(*(*0x20 + 8));\n                    }\n                    *(iVar4 + 0x20) = *(*0x20 + -0x28);\n                    if (*0x557ed0 != 0) goto code_r0x00408545;\n                    *(iVar4 + 0x18) = *(*0x20 + -0x18);\n                    do {\n                        *(*0x20 + -0x48) = 0x408545;\n                        fcn.004305a0();\ncode_r0x00408545:\n                        *(*0x20 + -0x48) = 0x408553;\n                        fcn.00459380(*(*0x20 + -0x18));\n                    } while( true );\n                }\n                *(*0x20 + 0x18) = param_1;\n                *(*0x20 + -0x48) = 0x40832d;\n                iVar4 = fcn.004085c0(unaff_RBX);\n                if (iVar4 == 0) {\n                    *(*0x20 + -0x48) = 0x408345;\n                    fcn.00409300();\n                    in_RAX = *(*0x20 + 8);\n                    *(*0x20 + -0x48) = 0x40835b;\n                    iVar4 = fcn.004085c0(*(*0x20 + 0x10));\n                    if (iVar4 == 0) {\n                        in_RAX = 0;\n                        *(*0x20 + -0x48) = 0x4083a7;\n                        puVar2 = fcn.0040b720(0x559b80);\n                        if (*0x557ed0 == 0) {\n                            *puVar2 = *(*0x20 + 8);\n                            puVar2[1] = *(*0x20 + 0x10);\n                        }\n                        else {\n                            uVar3 = *(*0x20 + 8);\n                            *(*0x20 + -0x48) = 0x4083d2;\n                            iVar4 = fcn.00459380();\n                            in_RAX = *(*0x20 + 0x10);\n                            *(*0x20 + -0x48) = 0x4083e5;\n                            puVar2 = fcn.004593c0(uVar3, iVar4 + 8, param_3, param_4);\n                        }\n                        *(*0x20 + -0x10) = puVar2;\n                        *(puVar2 + 2) = 0;\n                        *(*0x20 + -0x48) = 0x4083f6;\n                        fcn.004087c0();\n                        *(*0x20 + -0x48) = 0x408405;\n                        fcn.00408620();\n                        *(*0x20 + -0x48) = 0x408413;\n                        fcn.00409520();\n                        iVar4 = *(*0x20 + -0x10);\n                    }\n                    else {\n                        *(*0x20 + -0x20) = iVar4;\n                        *(*0x20 + -0x48) = 0x408378;\n                        fcn.00409520();\n                        iVar4 = *(*0x20 + -0x20);\n                    }\n                }\n                if (*(iVar4 + 0x18) == 0) {\n                    if (*(*0x20 + 0x18) != '\\0') {\n                        return 0;\n                    }\n                    *(*0x20 + -0x48) = 0x408445;\n                    uVar3 = fcn.004087c0();\n                    *(*0x20 + -0x18) = uVar3;\n                    *(*0x20 + -0x28) = in_RAX;\n                    *(*0x20 + -0x48) = 0x40845b;\n                    iVar4 = fcn.0040b3c0();\n                    if (*0x557ed0 == 0) {\n                        *(iVar4 + 8) = *(*0x20 + 0x10);\n                        *(iVar4 + 0x10) = *(*0x20 + 8);\n                    }\n                    else {\n                        *(*0x20 + -0x48) = 0x4084c5;\n                        fcn.00459380(*(*0x20 + 0x10));\n                        *(*0x20 + -0x48) = 0x4084d3;\n                        iVar4 = fcn.00459380(*(*0x20 + 8));\n                    }\n                    *(iVar4 + 0x20) = *(*0x20 + -0x28);\n                    if (*0x557ed0 != 0) goto code_r0x004084a5;\n                    *(iVar4 + 0x18) = *(*0x20 + -0x18);\n                    do {\n                        *(*0x20 + -0x48) = 0x4084a5;\n                        fcn.004305a0();\ncode_r0x004084a5:\n                        *(*0x20 + -0x48) = 0x4084b3;\n                        fcn.00459380(*(*0x20 + -0x18));\n                    } while( true );\n                }\n                return iVar4;\n            }\n            unaff_RBX = 0x1f;\n            *(*0x20 + -0x48) = 0x408586;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        puVar5[0x18] = param_1;\n        *(puVar5 + -8) = 0x40859a;\n        fcn.00457040();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        param_1 = puVar5[0x18];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1890
    },
    "00408620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00408620(void)\n\n{\n    uint64_t uVar1;\n    uint64_t *puVar2;\n    ulong in_RAX;\n    int64_t *piVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(*(unaff_R14 + 0x30) + 0xc0) == 0) {\n                uVar1 = **0x4fcc18;\n                puVar2 = *0x4fcc18;\n                if ((*0x4fcc18)[1] < (uVar1 >> 2) * 3) goto code_r0x0040870a;\n                *(*0x20 + -0x30) = *0x4fcc18;\n                *(*0x20 + -0x20) = in_RAX;\n                *(*0x20 + -0x50) = 0x40868d;\n                piVar3 = fcn.0040a9e0(1, *0x4fcc18, uVar1);\n                *(*0x20 + -0x28) = piVar3;\n                *piVar3 = **(*0x20 + -0x30) << 1;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = 0x45b0c0;\n                *(*0x20 + -0x10) = piVar3;\n                *(*0x20 + -0x50) = 0x4086c5;\n                fcn.00408fe0();\n                if (*(*(*0x20 + -0x30) + 8) == (*(*0x20 + -0x28))[1]) {\n                    puVar2 = *(*0x20 + -0x28);\n                    if (*0x557ed0 != '\\0') {\n                        *(*0x20 + -0x50) = 0x4086ef;\n                        fcn.00402960();\n                        puVar2 = *(*0x20 + -0x28);\n                    }\ncode_r0x0040870a:\n                    *0x4fcc18 = puVar2;\n                    *(*0x20 + -0x50) = 0x408715;\n                    fcn.00408760();\n                    return;\n                }\n                *(*0x20 + -0x50) = 0x408730;\n                fcn.00430d40();\n            }\n            *(*0x20 + -0x50) = 0x408745;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x408750;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 742
    },
    "004087c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004087c0(void)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    ulong *in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong uVar5;\n    ulong arg4;\n    ulong uVar6;\n    int64_t iVar7;\n    uint64_t arg1;\n    int64_t iVar8;\n    uint32_t *noname_0;\n    uint64_t arg1_00;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t noname_2;\n    int64_t unaff_R14;\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x28 && *0x20 + -0x28 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0xa8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = *in_RAX;\n            *(*0x20 + -0x40) = in_RAX[1];\n            *(*0x20 + -0xb0) = 0x408807;\n            iVar3 = fcn.00450ee0();\n            arg1_00 = *(*0x20 + -0x30);\n            uVar9 = *(arg1_00 + 0x40);\n            uVar10 = *(iVar3 + 4);\n            uVar1 = *(iVar3 + 8);\n            if (uVar10 < 0x10001) {\n                if (uVar9 < 0x10001) {\n                    *(*0x20 + -0x48) = iVar3;\n                    *(*0x20 + -0x58) = uVar1 + iVar3;\n                    *(*0x20 + -0x90) = uVar9;\n                    *(*0x20 + -0x60) = uVar10;\n                    uVar10 = 0;\n                    uVar6 = 0;\n                    arg4 = 0;\ncode_r0x00408880:\n                    if (uVar9 <= uVar10) {\n                        *(*(*0x20 + 8) + 0x18) = arg4;\n                        return 0;\n                    }\n                    uVar4 = *(arg1_00 + 0x38);\n                    arg1_00 = *(arg1_00 + 0x40);\n                    if (uVar10 < arg1_00) {\n                        *(*0x20 + -0x88) = uVar10;\n                        *(*0x20 + -0x10) = uVar4;\n                        *(*0x20 + -0x80) = uVar6;\n                        *(*0x20 + -0x20) = arg4;\n                        *(*0x20 + -0xb0) = 0x4088c5;\n                        uVar4 = fcn.004512c0();\n                        *(*0x20 + -0x50) = uVar4;\n                        iVar3 = *(*0x20 + -0x88);\n                        iVar8 = *(*0x20 + -0x10);\n                        uVar9 = *(iVar8 + iVar3 * 8);\n                        *(*0x20 + -0xb0) = 0x4088e5;\n                        uVar4 = fcn.00451020();\n                        *(*0x20 + -0x18) = uVar4;\n                        *(*0x20 + -0xb0) = 0x4088f2;\n                        uVar4 = fcn.00451880(iVar3, iVar8, uVar6, arg4);\n                        *(*0x20 + -0x28) = uVar4;\n                        *(*0x20 + -0x70) = uVar9;\n                        *(*0x20 + -0xb0) = 0x40890c;\n                        uVar5 = fcn.00451a40(iVar3, iVar8, uVar6, arg4);\n                        uVar4 = arg4;\n                        if (uVar9 == 0) {\n                            *(*0x20 + -0xb0) = 0x40891f;\n                            uVar5 = fcn.00451880(*(*0x20 + -0x30), iVar8, uVar6, arg4);\n                            uVar4 = arg4;\n                        }\n                        *(*0x20 + -0x38) = uVar5;\n                        *(*0x20 + -0x78) = uVar9;\n                        uVar9 = *(*0x20 + -0x40);\n                        arg1 = *(*0x20 + -0x60);\n                        uVar10 = *(*0x20 + -0x80);\n                        do {\n                            if (arg1 <= uVar10) {\n                                *(*(*0x20 + 8) + 0x18) = 0;\n                                return *(*0x20 + -0x28);\n                            }\n                            if (arg1 <= uVar10) {\n                                *(*0x20 + -0xb0) = 0x408b31;\n                                fcn.00459720(arg1);\n                                break;\n                            }\n                            *(*0x20 + -0x80) = uVar10;\n                            noname_2 = uVar10 << 4;\n                            *(*0x20 + -0x68) = noname_2;\n                            *(*0x20 + -0xb0) = 0x408a14;\n                            uVar6 = fcn.00451020();\n                            *(*0x20 + -0x18) = uVar6;\n                            iVar3 = *(*0x20 + -0x58);\n                            uVar10 = *(iVar3 + 4 + *(*0x20 + -0x68));\n                            *(*0x20 + -0xb0) = 0x408a34;\n                            iVar7 = fcn.004512c0();\n                            iVar8 = *(*0x20 + -0x50);\n                            uVar9 = uVar10;\n                            if (iVar7 == iVar8) {\n                                *(*0x20 + -0xb0) = 0x408a4f;\n                                fcn.00451880(iVar8, iVar3, noname_2, uVar4);\n                                if (*(*0x20 + -0x70) == uVar10) {\n                                    uVar9 = *(*0x20 + -0x28);\n                                    *(*0x20 + -0xb0) = 0x408a6d;\n                                    cVar2 = fcn.004021a0(uVar10, iVar3);\n                                }\n                                else {\n                                    cVar2 = '\\0';\n                                }\n                                iVar8 = *(*0x20 + -0x50);\n                            }\n                            else {\n                                cVar2 = '\\0';\n                            }\n                            if (cVar2 != '\\0') {\n                                *(*0x20 + -0xb0) = 0x408a8c;\n                                fcn.00451a40(iVar8, iVar3, noname_2, uVar4);\n                                if (uVar9 == 0) {\n                                    noname_0 = *(*0x20 + -0x48);\n                                    uVar9 = *noname_0;\n                                    *(*0x20 + -0xb0) = 0x408aa5;\n                                    fcn.00451020();\n                                    *(*0x20 + -0xb0) = 0x408aaa;\n                                    fcn.00451880(noname_0, iVar3, noname_2, uVar4);\n                                }\n                                if ((**(*0x20 + -0x18) & 1) == 0) {\n                                    if (*(*0x20 + -0x78) == uVar9) {\n                                        *(*0x20 + -0xb0) = 0x408ae5;\n                                        cVar2 = fcn.004021a0(uVar9, *(*0x20 + -0x78));\n                                    }\n                                    else {\n                                        cVar2 = '\\0';\n                                    }\n                                }\n                                else {\n                                    cVar2 = '\\x01';\n                                }\n                                if (cVar2 != '\\0') goto code_r0x00408945;\n                            }\n                            uVar10 = *(*0x20 + -0x80) + 1;\n                            uVar9 = *(*0x20 + -0x40);\n                            arg1 = *(*0x20 + -0x60);\n                        } while( true );\n                    }\n                    *(*0x20 + -0xb0) = 0x408b3c;\n                    fcn.00459720(arg1_00);\n                }\n                uVar10 = 0x10000;\n                *(*0x20 + -0xb0) = 0x408b46;\n                fcn.00459820(arg1_00, uVar9);\n            }\n            *(*0x20 + -0xb0) = 0x408b53;\n            in_RAX = fcn.00459820(arg1_00, uVar10);\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + -8) = 0x408b5e;\n        fcn.00457040();\n        in_RAX = *(puVar11 + 8);\n        *0x20 = puVar11;\n    } while( true );\ncode_r0x00408945:\n    *(*0x20 + -0xb0) = 0x40895d;\n    arg4 = fcn.00451580();\n    iVar3 = *(*0x20 + -0x88);\n    if (iVar3 != 0) {\n        if (*0x557ed0 == 0) {\n            *(*(*0x20 + 8) + 0x18 + iVar3 * 8) = arg4;\n        }\n        else {\n            *(*0x20 + -0xb0) = 0x408999;\n            fcn.00459280(iVar3, *(*0x20 + 8), noname_2, uVar4);\n        }\n        arg4 = *(*0x20 + -0x20);\n    }\n    uVar10 = iVar3 + 1;\n    uVar9 = *(*0x20 + -0x90);\n    arg1_00 = *(*0x20 + -0x30);\n    uVar6 = *(*0x20 + -0x80);\n    goto code_r0x00408880;\n}\n",
        "token_count": 2317
    },
    "00408d60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.00408d60(void)\n\n{\n    ulong in_RAX;\n    ulong *puVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (unaff_RBX == 0) {\n        puVar1 = 0x558f00;\n    }\n    else {\n        puVar1 = fcn.0040a9e0(1);\n        puVar1[1] = unaff_RBX;\n        if (*0x557ed0 == 0) {\n            *puVar1 = in_RAX;\n        }\n        else {\n            puVar1 = fcn.00459380(in_RAX);\n        }\n    }\n    return puVar1;\n}\n",
        "token_count": 204
    },
    "00408e80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00408e80(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (unaff_RBX != 0) {\n        fcn.004082c0(0);\n        return;\n    }\n    iVar1 = fcn.0040b3c0();\n    if (*0x557ed0 != 0) goto code_r0x00408ef8;\n    *(iVar1 + 0x10) = in_RAX;\n    do {\n        *(iVar1 + 0x20) = 0;\n        *(iVar1 + 0x18) = 0;\n        fcn.004305a0();\ncode_r0x00408ef8:\n        iVar1 = fcn.00459380();\n    } while( true );\n}\n",
        "token_count": 236
    },
    "00409300": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00409300(void)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t *puVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(*(unaff_R14 + 0x30) + 0xd8);\n            if (-1 < iVar1) {\n                *(*(unaff_R14 + 0x30) + 0xd8) = iVar1 + 1;\n                LOCK();\n                bVar9 = *in_RAX == 0;\n                *in_RAX = *in_RAX ^ bVar9 * (*in_RAX ^ 1);\n                if (bVar9) {\n                    return !bVar9 * *in_RAX;\n                }\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x18) = unaff_R14;\n                *(*0x20 + -0x48) = 0x40935b;\n                fcn.0042cba0();\n                iVar4 = 0;\n                if (1 < *0x557cb4) {\n                    iVar4 = 4;\n                }\n                *(*0x20 + -0x30) = iVar4;\n                iVar5 = *(*0x20 + -0x18);\n                puVar6 = *(*0x20 + -0x10);\n                iVar3 = 0;\n                do {\n                    uVar8 = *puVar6;\n                    if ((uVar8 & 1) == 0) {\n                        *(*0x20 + -0x20) = uVar8;\n                        LOCK();\n                        bVar9 = uVar8 == *puVar6;\n                        *puVar6 = *puVar6 ^ bVar9 * (*puVar6 ^ (uVar8 | 1));\n                        if (bVar9) {\n                            return uVar8 ^ !bVar9 * (uVar8 ^ *puVar6);\n                        }\n                        uVar8 = *(*0x20 + -0x20);\n                        iVar3 = 0;\n                    }\n                    *(*0x20 + -0x28) = iVar3;\n                    if (iVar3 < iVar4) {\n                        *(*0x20 + -0x40) = 0x1e;\n                        *(*0x20 + -0x48) = 0x409416;\n                        fcn.00458e20();\n                        iVar3 = *(*0x20 + -0x28);\n                    }\n                    else if (iVar3 < iVar4 + 1) {\n                        *(*0x20 + -0x40) = 0x48a658;\n                        *(*0x20 + -0x48) = 0x4093ef;\n                        fcn.00456f00();\n                        iVar3 = *(*0x20 + -0x28);\n                    }\n                    else {\n                        do {\n                            *(*(iVar5 + 0x30) + 0x248) = uVar8 & 0xfffffffffffffffe;\n                            LOCK();\n                            uVar2 = *puVar6;\n                            *puVar6 = *puVar6 ^ (uVar8 == uVar2) * (*puVar6 ^ (*(iVar5 + 0x30) | 1));\n                            if (uVar8 == uVar2) {\n                                if ((uVar8 & 1) != 0) {\n                                    *(*0x20 + -0x48) = 0x409498;\n                                    fcn.0042c800();\n                                    iVar3 = 0;\n                                }\n                                break;\n                            }\n                            uVar8 = *puVar6;\n                        } while ((uVar8 & 1) != 0);\n                    }\n                    iVar3 = iVar3 + 1;\n                    iVar4 = *(*0x20 + -0x30);\n                    iVar5 = *(*0x20 + -0x18);\n                    puVar6 = *(*0x20 + -0x10);\n                } while( true );\n            }\n            *(*0x20 + -0x48) = 0x4094c5;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x4094d0;\n        fcn.00457040();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1112
    },
    "00409520": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00409520(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t *in_RAX;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar7;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = unaff_R14;\n            do {\n                while (uVar5 = *in_RAX,  uVar5 == 1) {\n                    LOCK();\n                    bVar7 = *in_RAX == 1;\n                    *in_RAX = *in_RAX ^ bVar7 * *in_RAX;\n                    uVar5 = !bVar7 * (*in_RAX ^ 1) ^ 1;\n                    if (bVar7) goto code_r0x00409596;\n                }\n                LOCK();\n                uVar3 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar5 == uVar3) * (*in_RAX ^ *((uVar5 & 0xfffffffffffffffe) + 0x248));\n            } while (uVar5 != uVar3);\n            *(*0x20 + -0x28) = 0x409596;\n            uVar5 = fcn.0042cb20();\ncode_r0x00409596:\n            iVar4 = *(*0x20 + -0x10);\n            piVar1 = *(iVar4 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + -1;\n            iVar2 = *(*(iVar4 + 0x30) + 0xd8);\n            if (-1 < iVar2) {\n                if ((iVar2 == 0) && (*(iVar4 + 0xb1) != '\\0')) {\n                    *(iVar4 + 0x10) = 0xfffffffffffffade;\n                }\n                return uVar5;\n            }\n            *(*0x20 + -0x28) = 0x4095e5;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + -8) = 0x4095f0;\n        fcn.00457040();\n        in_RAX = *(puVar6 + 8);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 642
    },
    "00409600": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00409600(void)\n\n{\n    uint64_t *in_RAX;\n    uint64_t uVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar3;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            do {\n                uVar1 = *in_RAX;\n                LOCK();\n                bVar3 = uVar1 == *in_RAX;\n                *in_RAX = *in_RAX ^ bVar3 * (*in_RAX ^ 1);\n            } while (!bVar3);\n            if (uVar1 == 0) {\n                return uVar1 ^ !bVar3 * (uVar1 ^ *in_RAX);\n            }\n            if (uVar1 != 1) {\n                *(*0x20 + -0x20) = 0x40964e;\n                uVar1 = fcn.0042cb20();\n                return uVar1;\n            }\n            *(*0x20 + -0x20) = 0x409669;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x409674;\n        fcn.00457040();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 401
    },
    "00409680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00409680(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    uint64_t *puVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar4;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (**(unaff_R14 + 0x30) == unaff_R14) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x10) = unaff_R14;\n                *(*0x20 + -0x30) = 0x4096bb;\n                fcn.0042cba0();\n                iVar1 = *(*0x20 + -0x10);\n                puVar2 = *(*0x20 + 8);\n                LOCK();\n                bVar4 = *puVar2 == 0;\n                *puVar2 = *puVar2 ^ bVar4 * (*puVar2 ^ *(iVar1 + 0x30));\n                if (bVar4) {\n                    *(*(iVar1 + 0x30) + 0xe5) = 1;\n                    if (**0x4fcc10 == 0) {\n                        *(*0x20 + -0x30) = 0x409705;\n                        fcn.0042c800();\n                    }\n                    else {\n                        while (*puVar2 == 0) {\n                            *(*0x20 + -0x30) = 0x40974c;\n                            fcn.0042c800(iVar1);\n                            *(*0x20 + -0x28) = **0x4fcc10;\n                            *(*0x20 + -0x20) = 0;\n                            *(*0x20 + -0x30) = 0x409768;\n                            fcn.00458e80();\n                            iVar1 = *(*0x20 + -0x10);\n                            puVar2 = *(*0x20 + 8);\n                        }\n                    }\n                }\n                else {\n                    if (*puVar2 == 1) {\n                        return !bVar4 * *puVar2;\n                    }\n                    *(*0x20 + -0x30) = 0x409728;\n                    fcn.00430d40();\n                }\n                iVar1 = *(*(*0x20 + -0x10) + 0x30);\n                *(iVar1 + 0xe5) = 0;\n                return iVar1;\n            }\n            *(*0x20 + -0x30) = 0x4097a5;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x4097b0;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 725
    },
    "004097c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004097c0(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int32_t iVar4;\n    uint64_t *in_RAX;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    int64_t iStack56;\n    int64_t iStack32;\n    uint64_t *puStack24;\n    int64_t in_stack_fffffffffffffff0;\n    \n    LOCK();\n    uVar1 = *in_RAX;\n    *in_RAX = *in_RAX ^ (uVar1 == 0) * (*in_RAX ^ *(unaff_R14 + 0x30));\n    if (uVar1 == 0) {\n        if (unaff_RBX < 0) {\n            *(*(unaff_R14 + 0x30) + 0xe5) = 1;\n            if (**0x4fcc10 == 0) {\n                fcn.0042c800();\n            }\n            else {\n                while (iVar4 = fcn.0042c800(),  iVar4 < 0) {\n                    fcn.00458e80();\n                }\n            }\n            goto code_r0x004099f0;\n        }\n        fcn.0045afe0();\n        iStack32 = iStack56 + unaff_RBX;\n        puStack24 = in_RAX;\n    }\n    else {\n        if (*in_RAX == 1) {\n            return 1;\n        }\n        fcn.00430d40();\n        unaff_R14 = in_stack_fffffffffffffff0;\n    }\n    do {\n        *(*(unaff_R14 + 0x30) + 0xe5) = 1;\n        iVar4 = fcn.0042c800();\n        if (-1 < iVar4) {\n            *(*(unaff_R14 + 0x30) + 0xe5) = 0;\n            return 1;\n        }\n        iVar2 = **0x4fcc10;\n        if (iVar2 != 0) {\n            fcn.00458e80();\n            iStack56 = iVar2;\n        }\n        *(*(unaff_R14 + 0x30) + 0xe5) = 0;\n        fcn.0045afe0();\n    } while (0 < iStack32 - iStack56);\n    while( true ) {\n        uVar1 = *puStack24;\n        if (uVar1 != *(unaff_R14 + 0x30)) break;\n        LOCK();\n        uVar3 = *puStack24;\n        *puStack24 = *puStack24 ^ (uVar1 == uVar3) * *puStack24;\n        if (uVar1 == uVar3) {\n            return 0;\n        }\n    }\n    if (uVar1 == 1) {\n        *(*(unaff_R14 + 0x30) + 0xe5) = 1;\n        iVar4 = fcn.0042c800();\n        if (-1 < iVar4) {\n            *(*(unaff_R14 + 0x30) + 0xe5) = 0;\n            return 1;\n        }\n        fcn.00430d40();\n    }\n    fcn.00430d40();\ncode_r0x004099f0:\n    *(*(unaff_R14 + 0x30) + 0xe5) = 0;\n    return 1;\n}\n",
        "token_count": 757
    },
    "00409ca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00409ca0(uint64_t param_1, ulong param_2, ulong param_3)\n\n{\n    int64_t iVar1;\n    uint64_t *puVar2;\n    uint64_t noname_1;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x4f30c4 == 0x10) {\n                *(*0x20 + -0x28) = 0x409ccb;\n                fcn.0042e880();\n                for (iVar1 = 0; noname_1 = *0x557df0,  iVar1 < 0x44; iVar1 = iVar1 + 1) {\n                    param_3 = 0x55abb0;\n                    *(iVar1 * 0x18 + 0x55abb0) = *(iVar1 * 2 + 0x4f30c0);\n                }\n                if (*0x557df8 != 0) {\n                    if (*0x557df8 < 0x80001) {\n                        if (0xfff < *0x557df8) {\n                            if ((*0x557df8 & *0x557df8 - 1) == 0) {\n                                if ((*0x557df0 & *0x557df0 - 1) == 0) {\n                                    if (0x400000 < *0x557df0) {\n                                        *0x557df0 = 0;\n                                    }\n                                    if (*0x557df0 != 0) {\n                                        while (noname_1 = -(*0x557de8 < 0x40),  param_1 = *0x557de8, \n                                              *0x557df0 != (1 << (*0x557de8 & 0x3f) & noname_1)) {\n                                            *0x557de8 = *0x557de8 + 1;\n                                        }\n                                    }\n                                    *(*0x20 + -0x28) = 0x409d78;\n                                    fcn.00420960(param_1, noname_1, param_3);\n                                    *(*0x20 + -0x28) = 0x409d7d;\n                                    *0x557db0 = fcn.00411a00();\n                                    for (iVar1 = 0x7f; -1 < iVar1; iVar1 = iVar1 + -1) {\n                                        *(*0x20 + -0x10) = iVar1;\n                                        *(*0x20 + -0x28) = 0x409d9c;\n                                        puVar2 = fcn.004147e0();\n                                        iVar1 = *(*0x20 + -0x10);\n                                        *puVar2 = iVar1 << 0x28 | 0xc000000000;\n                                        puVar2[2] = *0x52a2f8;\n                                        *0x52a2f8 = puVar2;\n                                    }\n                                    return;\n                                }\n                                *(*0x20 + -0x28) = 0x409e14;\n                                fcn.004324c0();\n                                *(*0x20 + -0x28) = 0x409e25;\n                                fcn.00432dc0();\n                                *(*0x20 + -0x28) = 0x409e31;\n                                fcn.00432ac0();\n                                *(*0x20 + -0x28) = 0x409e45;\n                                fcn.00432dc0();\n                                *(*0x20 + -0x28) = 0x409e4a;\n                                fcn.00432540();\n                                *(*0x20 + -0x28) = 0x409e5b;\n                                fcn.00430d40();\n                            }\n                            *(*0x20 + -0x28) = 0x409e65;\n                            fcn.004324c0();\n                            *(*0x20 + -0x28) = 0x409e76;\n                            fcn.00432dc0();\n                            *(*0x20 + -0x28) = 0x409e85;\n                            fcn.00432ac0();\n                            *(*0x20 + -0x28) = 0x409e96;\n                            fcn.00432dc0();\n                            *(*0x20 + -0x28) = 0x409e9b;\n                            fcn.00432540();\n                            *(*0x20 + -0x28) = 0x409eac;\n                            fcn.00430d40();\n                        }\n                        *(*0x20 + -0x28) = 0x409eb1;\n                        fcn.004324c0();\n                        *(*0x20 + -0x28) = 0x409ec5;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x28) = 0x409ed1;\n                        fcn.00432ac0();\n                        *(*0x20 + -0x28) = 0x409ee5;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x28) = 0x409eef;\n                        fcn.00432bc0();\n                        *(*0x20 + -0x28) = 0x409f05;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x28) = 0x409f0a;\n                        fcn.00432540();\n                        *(*0x20 + -0x28) = 0x409f1b;\n                        fcn.00430d40();\n                    }\n                    *(*0x20 + -0x28) = 0x409f25;\n                    fcn.004324c0();\n                    *(*0x20 + -0x28) = 0x409f36;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x28) = 0x409f45;\n                    fcn.00432ac0();\n                    *(*0x20 + -0x28) = 0x409f56;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x28) = 0x409f65;\n                    fcn.00432bc0();\n                    *(*0x20 + -0x28) = 0x409f76;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x28) = 0x409f7b;\n                    fcn.00432540();\n                    *(*0x20 + -0x28) = 0x409f8c;\n                    fcn.00430d40();\n                }\n                *(*0x20 + -0x28) = 0x409f9d;\n                fcn.00430d40();\n            }\n            *(*0x20 + -0x28) = 0x409fae;\n            fcn.00430d40();\n        }\n        *(puVar3 + -8) = 0x409fb4;\n        fcn.00457040();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1644
    },
    "0040a9e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint64_t fcn.0040a9e0(uint64_t param_1, ulong param_2, ulong param_3, uint64_t param_4)\n\n{\n    uint64_t uVar1;\n    int32_t *piVar2;\n    int64_t *piVar3;\n    uint64_t uVar4;\n    uint8_t uVar5;\n    uint16_t uVar6;\n    int32_t iVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    bool bVar10;\n    uint64_t in_RAX;\n    int64_t iVar11;\n    uchar (*pauVar12) [16];\n    uint64_t *puVar13;\n    int64_t unaff_RBX;\n    uchar *puVar14;\n    uchar *unaff_RBP;\n    int64_t iVar15;\n    uint64_t uVar16;\n    char cVar17;\n    uint32_t uVar18;\n    uint64_t uVar19;\n    uchar uVar20;\n    uchar uVar21;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar14 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar14 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x557cac != 2) {\n                if (in_RAX == 0) {\n                    return 0x557e78;\n                }\n                if (*0x5580dc != '\\0') {\n                    if (*0x5580e8 != 0) {\n                        *(*0x20 + -0x80) = 0x40aa79;\n                        iVar11 = fcn.0040b720(0x559b80);\n                        return iVar11;\n                    }\n                    if ((*0x557f20 != '\\0') && (*(unaff_R14 + 0x98) == *0x557f28)) {\n                        *0x557f30 = *0x557f30 + 1;\n                    }\n                }\n                *(*0x20 + 0x18) = param_1;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                if (*0x557ca4 == 0) {\n                    iVar11 = 0;\n                }\n                else {\n                    iVar11 = *(*(unaff_R14 + 0x30) + 0x90);\n                    if (iVar11 == 0) {\n                        *(*0x20 + -0x18) = unaff_R14;\n                        iVar11 = *(*0x20 + -0x18);\n                    }\n                    iVar15 = *(iVar11 + 0x180) - in_RAX;\n                    *(iVar11 + 0x180) = iVar15;\n                    if (iVar15 < 0) {\n                        *(*0x20 + -0x10) = iVar11;\n                        *(*0x20 + -0x80) = 0x40ab05;\n                        fcn.004182c0();\n                        in_RAX = *(*0x20 + 8);\n                        param_1 = *(*0x20 + 0x18);\n                        iVar11 = *(*0x20 + -0x10);\n                        unaff_RBX = *(*0x20 + 0x10);\n                    }\n                }\n                piVar2 = *(unaff_R14 + 0x30) + 0xd8;\n                *piVar2 = *piVar2 + 1;\n                iVar15 = *(unaff_R14 + 0x30);\n                if (*(iVar15 + 0xc0) == 0) {\n                    if (*(iVar15 + 0x50) != unaff_R14) {\n                        *(iVar15 + 0xc0) = 1;\n                        iVar8 = *(*(unaff_R14 + 0x30) + 0xa0);\n                        uVar16 = *0x557db0;\n                        if (iVar8 != 0) {\n                            uVar16 = *(iVar8 + 0x40);\n                        }\n                        if (uVar16 != 0) {\n                            if (unaff_RBX == 0) {\n                                param_4 = 1;\n                            }\n                            else {\n                                param_4 = param_4 & 0xffffffffffffff00 | *(unaff_RBX + 8) == 0;\n                            }\n                            *(*0x20 + -0x28) = iVar15;\n                            *(*0x20 + -0x38) = uVar16;\n                            *(*0x20 + -0x52) = param_4;\n                            *(*0x20 + -0x18) = iVar11;\n                            uVar18 = param_4;\n                            if (in_RAX < 0x8001) {\n                                if ((param_4 == '\\0') || (0xf < in_RAX)) {\n                                    if (0x3f8 < in_RAX) {\n                                        uVar19 = in_RAX - 0x381 >> 7;\n                                        if (uVar19 < 0xf9) {\n                                            uVar5 = \" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                                    [uVar19];\n                                            goto code_r0x0040adc1;\n                                        }\ncode_r0x0040b25f:\n                                        *(*0x20 + -0x80) = 0x40b26c;\n                                        fcn.00459740(0xf9);\ncode_r0x0040b26c:\n                                        param_1 = 0x81;\n                                        *(*0x20 + -0x80) = 0x40b279;\n                                        fcn.00459740(0x81);\n                                        goto code_r0x0040b279;\n                                    }\n                                    uVar19 = in_RAX + 7 >> 3;\n                                    if (0x80 < uVar19) goto code_r0x0040b26c;\n                                    uVar5 = *(uVar19 + 0x4f2f80);\ncode_r0x0040adc1:\n                                    if (0x43 < uVar5) {\ncode_r0x0040b252:\n                                        *(*0x20 + -0x80) = 0x40b25f;\n                                        fcn.00459720(0x44);\n                                        goto code_r0x0040b25f;\n                                    }\n                                    uVar6 = *(uVar5 * 2 + 0x4f30c0);\n                                    uVar19 = uVar5 << 1 & 0xff | uVar18 & 0xff;\n                                    if (0x87 < uVar19) {\n                                        *(*0x20 + -0x80) = 0x40b252;\n                                        fcn.00459720(0x88);\n                                        goto code_r0x0040b252;\n                                    }\n                                    uVar19 = *(uVar16 + 0x28 + uVar19 * 8);\n                                    uVar9 = *(uVar19 + 0x40);\n                                    iVar11 = 0;\n                                    if (uVar9 != 0) {\n                                        for (; (uVar9 >> iVar11 & 1) == 0; iVar11 = iVar11 + 1) {\n                                        }\n                                    }\n                                    if (uVar9 == 0) {\n                                        iVar11 = 0x40;\n                                    }\n                                    if (iVar11 < 0x40) {\n                                        uVar16 = *(uVar19 + 0x30) + iVar11;\n                                        if (*(uVar19 + 0x38) <= uVar16) {\n                                            uVar16 = *(*0x20 + -0x38);\n                                            goto code_r0x0040aeac;\n                                        }\n                                        uVar4 = *(uVar19 + 0x30) + iVar11 + 1;\n                                        if (((uVar4 & 0x3f) == 0) && (*(uVar19 + 0x38) != uVar4)) {\n                                            uVar16 = *(*0x20 + -0x38);\n                                            pauVar12 = NULL;\n                                        }\n                                        else {\n                                            *(uVar19 + 0x40) = uVar9 >> (iVar11 + 1U & 0x3f) & -(iVar11 + 1U < 0x40);\n                                            *(uVar19 + 0x30) = uVar4;\n                                            *(uVar19 + 0x60) = *(uVar19 + 0x60) + 1;\n                                            pauVar12 = *(uVar19 + 0x68) * uVar16 + *(uVar19 + 0x18);\n                                            param_1 = *(*0x20 + 0x18);\n                                            uVar16 = *(*0x20 + -0x38);\n                                        }\n                                    }\n                                    else {\ncode_r0x0040aeac:\n                                        pauVar12 = NULL;\n                                    }\n                                    *(*0x20 + -0x30) = uVar6;\n                                    if (pauVar12 == NULL) {\n                                        uVar19 = uVar5 << 1 | uVar18 & 0xff;\n                                        *(*0x20 + -0x80) = 0x40aec8;\n                                        pauVar12 = fcn.0040a7c0(param_1, 0, uVar16);\n                                        uVar16 = *(*0x20 + -0x38);\n                                        uVar18 = *(*0x20 + -0x52);\n                                        uVar20 = param_1;\n                                        in_RAX = *(*0x20 + 8);\n                                        param_1 = *(*0x20 + 0x18);\n                                        unaff_RBX = *(*0x20 + 0x10);\n                                    }\n                                    else {\n                                        uVar20 = 0;\n                                    }\n                                    cVar17 = uVar18;\n                                    if ((param_1 != '\\0') && (*(uVar19 + 100) != '\\0')) {\n                                        *(*0x20 + -0x20) = pauVar12;\n                                        *(*0x20 + -0x53) = uVar20;\n                                        *(*0x20 + -0x50) = uVar19;\n                                        *(*0x20 + -0x80) = 0x40af29;\n                                        fcn.00459d80(param_1, pauVar12, uVar16);\n                                        in_RAX = *(*0x20 + 8);\n                                        param_1 = *(*0x20 + 0x18);\n                                        pauVar12 = *(*0x20 + -0x20);\n                                        unaff_RBX = *(*0x20 + 0x10);\n                                        uVar16 = *(*0x20 + -0x38);\n                                        cVar17 = *(*0x20 + -0x52);\n                                        uVar20 = *(*0x20 + -0x53);\n                                        uVar19 = *(*0x20 + -0x50);\n                                    }\n                                    puVar13 = *(*0x20 + -0x30);\n                                }\n                                else {\n                                    uVar19 = *(uVar16 + 0x18);\n                                    if ((in_RAX & 7) == 0) {\n                                        uVar19 = uVar19 + 7 & 0xfffffffffffffff8;\n                                    }\n                                    else if ((in_RAX & 3) == 0) {\n                                        uVar19 = uVar19 + 3 & 0xfffffffffffffffc;\n                                    }\n                                    else if ((in_RAX & 1) == 0) {\n                                        uVar19 = uVar19 + 1 & 0xfffffffffffffffe;\n                                    }\n                                    if ((in_RAX + uVar19 < 0x11) && (iVar11 = *(uVar16 + 0x10),  iVar11 != 0)) {\n                                        *(uVar16 + 0x18) = in_RAX + uVar19;\n                                        *(uVar16 + 0x20) = *(uVar16 + 0x20) + 1;\n                                        *(iVar15 + 0xc0) = 0;\n                                        iVar7 = *(iVar15 + 0xd8);\n                                        *(iVar15 + 0xd8) = iVar7 + -1;\n                                        if ((iVar7 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                                        }\n                                        return iVar11 + uVar19;\n                                    }\n                                    uVar19 = *(uVar16 + 0x50);\n                                    uVar9 = *(uVar19 + 0x40);\n                                    iVar11 = 0;\n                                    if (uVar9 != 0) {\n                                        for (; (uVar9 >> iVar11 & 1) == 0; iVar11 = iVar11 + 1) {\n                                        }\n                                    }\n                                    if (uVar9 == 0) {\n                                        iVar11 = 0x40;\n                                    }\n                                    if (iVar11 < 0x40) {\n                                        uVar4 = *(uVar19 + 0x30) + iVar11;\n                                        if (*(uVar19 + 0x38) <= uVar4) goto code_r0x0040acf8;\n                                        uVar1 = *(uVar19 + 0x30) + iVar11 + 1;\n                                        if (((uVar1 & 0x3f) == 0) && (*(uVar19 + 0x38) != uVar1)) {\n                                            pauVar12 = NULL;\n                                        }\n                                        else {\n                                            *(uVar19 + 0x40) = uVar9 >> (iVar11 + 1U & 0x3f) & -(iVar11 + 1U < 0x40);\n                                            *(uVar19 + 0x30) = uVar1;\n                                            *(uVar19 + 0x60) = *(uVar19 + 0x60) + 1;\n                                            pauVar12 = *(uVar19 + 0x68) * uVar4 + *(uVar19 + 0x18);\n                                            param_1 = *(*0x20 + 0x18);\n                                        }\n                                    }\n                                    else {\ncode_r0x0040acf8:\n                                        pauVar12 = NULL;\n                                    }\n                                    if (pauVar12 == NULL) {\n                                        *(*0x20 + -0x80) = 0x40ad11;\n                                        pauVar12 = fcn.0040a7c0();\n                                        uVar16 = *(*0x20 + -0x38);\n                                        uVar18 = *(*0x20 + -0x52);\n                                        uVar19 = 5;\n                                        uVar20 = param_1;\n                                        in_RAX = *(*0x20 + 8);\n                                        param_1 = *(*0x20 + 0x18);\n                                        unaff_RBX = *(*0x20 + 0x10);\n                                    }\n                                    else {\n                                        uVar20 = 0;\n                                    }\n                                    cVar17 = uVar18;\n                                    *pauVar12 = CONCAT412(in_XMM15_Dd, \n                                                          CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                    if ((in_RAX <= *(uVar16 + 0x18) && *(uVar16 + 0x18) != in_RAX) ||\n                                       (*(uVar16 + 0x10) == 0)) {\n                                        *(uVar16 + 0x10) = pauVar12;\n                                        *(uVar16 + 0x18) = in_RAX;\n                                    }\n                                    puVar13 = 0x10;\n                                }\n                                uVar21 = 1;\n                            }\n                            else {\n                                if (param_1 == '\\0') {\n                                    uVar18 = 0;\n                                }\n                                else {\n                                    uVar18 = uVar18 ^ 1;\n                                }\n                                *(*0x20 + -0x80) = 0x40afa5;\n                                uVar19 = fcn.00411f20(uVar18);\n                                *(uVar19 + 0x30) = 1;\n                                *(uVar19 + 0x60) = 1;\n                                pauVar12 = *(uVar19 + 0x18);\n                                puVar13 = *(uVar19 + 0x68);\n                                param_1 = *(*0x20 + 0x18);\n                                uVar16 = *(*0x20 + -0x38);\n                                cVar17 = *(*0x20 + -0x52);\n                                uVar21 = in_RAX;\n                                uVar20 = 1;\n                                in_RAX = *(*0x20 + 8);\n                                unaff_RBX = *(*0x20 + 0x10);\n                            }\n                            *(*0x20 + -0x20) = pauVar12;\n                            *(*0x20 + -0x30) = puVar13;\n                            *(*0x20 + -0x53) = uVar20;\n                            *(*0x20 + -0x51) = uVar21;\n                            *(*0x20 + -0x50) = uVar19;\n                            if (cVar17 == '\\0') {\n                                if (*0x503620 == unaff_RBX) {\n                                    in_RAX = 0x48;\n                                }\n                                *(*0x20 + -0x40) = in_RAX;\n                                *(*0x20 + -0x80) = 0x40b03e;\n                                fcn.004101a0(in_RAX);\n                                puVar13 = *(*0x20 + 0x10);\n                                in_RAX = *(*0x20 + -0x40);\n                                if (*puVar13 < in_RAX) {\n                                    uVar16 = in_RAX - *puVar13;\n                                    uVar19 = 0;\n                                    if (puVar13[1] != 0) {\n                                        uVar19 = uVar16 + puVar13[1];\n                                    }\n                                }\n                                else {\n                                    uVar19 = puVar13[1];\n                                    uVar16 = in_RAX;\n                                }\n                                *(*(*0x20 + -0x38) + 8) = *(*(*0x20 + -0x38) + 8) + uVar19;\n                                param_1 = in_RAX;\n                            }\n                            else {\n                                uVar19 = 0;\n                            }\n                            *(*0x20 + -0x40) = in_RAX;\n                            *(*0x20 + -0x48) = uVar19;\n                            *(*0x20 + -0x80) = 0x40b094;\n                            fcn.00458e40(param_1, puVar13, uVar16);\n                            iVar11 = **(in_GS_OFFSET + 0x28);\n                            if (*0x557cac != 0) {\n                                *(*0x20 + -0x80) = 0x40b0ca;\n                                fcn.0041aae0(*(*0x20 + -0x30));\n                            }\n                            if (*0x557cf8 < 1) {\n                                uVar16 = *(*0x20 + -0x30);\n                            }\n                            else {\n                                if (*0x557cf8 == 1) {\n                                    uVar16 = *(*0x20 + -0x30);\n                                }\n                                else {\n                                    uVar19 = **(*0x20 + -0x38);\n                                    uVar16 = *(*0x20 + -0x30);\n                                    if (uVar16 < uVar19) {\n                                        **(*0x20 + -0x38) = uVar19 - uVar16;\n                                        goto code_r0x0040b116;\n                                    }\n                                }\n                                *(*0x20 + -0x80) = 0x40b10a;\n                                fcn.0040b4e0(uVar16);\n                                uVar16 = *(*0x20 + -0x30);\n                            }\ncode_r0x0040b116:\n                            iVar15 = *(*0x20 + -0x28);\n                            *(iVar15 + 0xc0) = 0;\n                            iVar7 = *(iVar15 + 0xd8);\n                            *(iVar15 + 0xd8) = iVar7 + -1;\n                            if ((iVar7 == 1) && (*(iVar11 + 0xb1) != '\\0')) {\n                                *(iVar11 + 0x10) = 0xfffffffffffffade;\n                            }\n                            if ((*(*0x20 + -0x51) == '\\0') && (*(*0x20 + 0x18) != '\\0')) {\n                                *(*0x20 + -0x80) = 0x40b171;\n                                fcn.0040b300();\n                                uVar16 = *(*0x20 + -0x30);\n                            }\n                            if (*0x5580dc != '\\0') {\n                                if (*0x5580e0 != 0) {\n                                    *(*0x20 + -0x80) = 0x40b19d;\n                                    fcn.00428020(*(*0x20 + 0x10));\n                                    uVar16 = *(*0x20 + -0x30);\n                                }\n                                if ((*0x557f20 != '\\0') && (*(iVar11 + 0x98) == *0x557f28)) {\n                                    *0x557f38 = *0x557f38 + uVar16;\n                                }\n                            }\n                            if (*(*0x20 + -0x18) != 0) {\n                                piVar3 = *(*0x20 + -0x18) + 0x180;\n                                *piVar3 = *piVar3 - (uVar16 - *(*0x20 + -0x40));\n                            }\n                            if (*(*0x20 + -0x53) != '\\0') {\n                                if (((*0x55aba8 == '\\0') || (*0x557cc8 != 0)) || (*0x557cac != 0)) {\n                                    bVar10 = false;\n                                }\n                                else {\n                                    bVar10 = *0x558518 <= *0x558530;\n                                }\n                                if (bVar10) {\n                                    *(*0x20 + -0x80) = 0x40b225;\n                                    fcn.00414b20(0);\n                                }\n                            }\n                            return *(*0x20 + -0x20);\n                        }\ncode_r0x0040b279:\n                        *(*0x20 + -0x80) = 0x40b28a;\n                        fcn.00430d40();\n                    }\n                    *(*0x20 + -0x80) = 0x40b29b;\n                    fcn.00430d40();\n                }\n                *(*0x20 + -0x80) = 0x40b2ac;\n                fcn.00430d40();\n            }\n            unaff_RBX = 0x32;\n            *(*0x20 + -0x80) = 0x40b2bd;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar14 + 8) = in_RAX;\n        *(puVar14 + 0x10) = unaff_RBX;\n        puVar14[0x18] = param_1;\n        *(puVar14 + -8) = 0x40b2d1;\n        fcn.00457040();\n        in_RAX = *(puVar14 + 8);\n        unaff_RBX = *(puVar14 + 0x10);\n        param_1 = puVar14[0x18];\n        *0x20 = puVar14;\n    } while( true );\n}\n",
        "token_count": 5240
    },
    "0040b300": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040b300(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    uVar1 = unaff_RBX + in_RAX;\n    for (; unaff_RBX < uVar1; unaff_RBX = unaff_RBX + 0x40000) {\n        if (*(unaff_R14 + 0xb1) != '\\0') {\n            fcn.00456e80();\n        }\n        uVar2 = uVar1 - unaff_RBX;\n        if (0x40000 < uVar2) {\n            uVar2 = 0x40000;\n        }\n        fcn.00459d80(uVar2);\n    }\n    return;\n}\n",
        "token_count": 231
    },
    "0040b420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040b420(void)\n\n{\n    uint64_t uVar1;\n    uint64_t *in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX == 1) {\n                uVar1 = *in_RAX;\n                *(*0x20 + -0x28) = 0x40b48f;\n                fcn.0040a9e0(1, uVar1);\n                return;\n            }\n            if (((SUB168(ZEXT816(unaff_RBX) * ZEXT816(*in_RAX) >> 0x40, 0) == 0) &&\n                (SUB168(ZEXT816(unaff_RBX) * ZEXT816(*in_RAX), 0) < 0x1000000000001)) && (-1 < unaff_RBX)) {\n                *(*0x20 + -0x28) = 0x40b472;\n                fcn.0040a9e0(1);\n                return;\n            }\n            unaff_RBX = 0x49e630;\n            *(*0x20 + -0x28) = 0x40b4ac;\n            in_RAX = fcn.004305a0(in_RAX);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x40b4bc;\n        fcn.00457040();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 491
    },
    "0040b4e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040b4e0(ulong arg1)\n\n{\n    int32_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar2 = *(*(unaff_R14 + 0x30) + 0xa0);\n            piVar3 = *0x557db0;\n            if (iVar2 != 0) {\n                piVar3 = *(iVar2 + 0x40);\n            }\n            if (piVar3 != NULL) {\n                if (*0x557cf8 == 1) {\n                    iVar2 = 0;\n                }\n                else {\n                    *(*0x20 + -0x20) = piVar3;\n                    *(*0x20 + -0x18) = arg1;\n                    *(*0x20 + -0x10) = unaff_RBX;\n                    *(*0x20 + -0x38) = 0x40b53f;\n                    iVar1 = fcn.0040b5c0();\n                    iVar2 = iVar1;\n                    piVar3 = *(*0x20 + -0x20);\n                    arg1 = *(*0x20 + -0x18);\n                }\n                *piVar3 = iVar2;\n                *(*0x20 + -0x38) = 0x40b565;\n                fcn.00427a60(arg1);\n                return;\n            }\n            unaff_RBX = 0x38;\n            *(*0x20 + -0x38) = 0x40b585;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x40b59a;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 607
    },
    "0040b840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040b840(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint64_t *puVar3;\n    uint64_t uVar4;\n    uint64_t in_RAX;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t **ppuVar7;\n    uint64_t *puVar8;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar6 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX != 0) {\n                if (unaff_RBX == 0) {\n                    unaff_RBX = 8;\ncode_r0x0040b893:\n                    if (0xffff < in_RAX) {\n                        *(*0x20 + -0x48) = 0x40b96d;\n                        iVar5 = fcn.004131a0();\n                        return iVar5;\n                    }\n                    *(*0x20 + 0x18) = arg1;\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x30) = unaff_RBX;\n                    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                    *piVar1 = *piVar1 + 1;\n                    iVar5 = *(unaff_R14 + 0x30);\n                    *(*0x20 + -0x20) = iVar5;\n                    if ((iVar5 == 0) || (*(iVar5 + 0xa0) == 0)) {\n                        *(*0x20 + -0x48) = 0x40b8ec;\n                        fcn.00409300();\n                        in_RAX = *(*0x20 + 8);\n                        arg1 = *(*0x20 + 0x18);\n                        iVar5 = *(*0x20 + -0x20);\n                        unaff_RBX = *(*0x20 + -0x30);\n                        ppuVar7 = 0x557ee8;\n                    }\n                    else {\n                        ppuVar7 = *(iVar5 + 0xa0) + 0x1650;\n                    }\n                    *(*0x20 + -0x18) = ppuVar7;\n                    puVar8 = ppuVar7[1];\n                    *(*0x20 + -0x28) = -unaff_RBX;\n                    puVar8 = puVar8 + (unaff_RBX - 1) & -unaff_RBX;\n                    ppuVar7[1] = puVar8;\n                    if ((0x40000 < puVar8 + in_RAX) || (*ppuVar7 == NULL)) {\n                        *(*0x20 + -0x48) = 0x40b94a;\n                        puVar8 = fcn.004131a0();\n                        ppuVar7 = *(*0x20 + -0x18);\n                        *ppuVar7 = puVar8;\n                        if (*ppuVar7 == NULL) {\n                            if (ppuVar7 == 0x557ee8) goto code_r0x0040ba91;\n                            do {\n                                *(*0x20 + -0x48) = 0x40ba8f;\n                                fcn.00430d40();\ncode_r0x0040ba91:\n                                *(*0x20 + -0x48) = 0x40ba9d;\n                                fcn.00409520();\n                            } while( true );\n                        }\n                        do {\n                            uVar4 = *0x557de0;\n                            **ppuVar7 = *0x557de0;\n                            LOCK();\n                            bVar9 = uVar4 == *0x557de0;\n                            *0x557de0 = *0x557de0 ^ bVar9 * (*0x557de0 ^ *ppuVar7);\n                        } while (!bVar9);\n                        ppuVar7[1] = *(*0x20 + -0x30) + 7U & *(*0x20 + -0x28);\n                        in_RAX = *(*0x20 + 8);\n                        iVar5 = *(*0x20 + -0x20);\n                        arg1 = *(*0x20 + 0x18);\n                    }\n                    puVar8 = *ppuVar7;\n                    puVar3 = ppuVar7[1];\n                    ppuVar7[1] = in_RAX + puVar3;\n                    iVar2 = *(iVar5 + 0xd8);\n                    *(iVar5 + 0xd8) = iVar2 + -1;\n                    iVar5 = puVar8 + puVar3;\n                    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                    }\n                    *(*0x20 + -0x10) = iVar5;\n                    if (ppuVar7 == 0x557ee8) {\n                        *(*0x20 + -0x48) = 0x40b9d7;\n                        fcn.00409520();\n                        arg1 = *(*0x20 + 0x18);\n                        iVar5 = *(*0x20 + -0x10);\n                    }\n                    if (arg1 != 0x559b80) {\n                        *(*0x20 + -0x48) = 0x40b9fd;\n                        fcn.004298a0();\n                        *(*0x20 + -0x48) = 0x40ba11;\n                        fcn.004298a0();\n                        iVar5 = *(*0x20 + -0x10);\n                    }\n                    return iVar5;\n                }\n                if ((unaff_RBX & unaff_RBX - 1) == 0) {\n                    if (unaff_RBX < 0x2001) goto code_r0x0040b893;\n                    *(*0x20 + -0x48) = 0x40bab0;\n                    fcn.00430d40();\n                }\n                *(*0x20 + -0x48) = 0x40bac5;\n                fcn.00430d40();\n            }\n            unaff_RBX = 0x1a;\n            *(*0x20 + -0x48) = 0x40bad6;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + -8) = 0x40baeb;\n        fcn.0045b6e0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1619
    },
    "0040bb00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0040bb00(int64_t arg1)\n\n{\n    uint64_t *in_RAX;\n    uint64_t uVar1;\n    int64_t unaff_RBX;\n    uint64_t uVar2;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    uVar1 = (arg1 + *in_RAX) - 1 & -arg1;\n    uVar2 = uVar1 + unaff_RBX;\n    if (uVar2 <= in_RAX[2]) {\n        *in_RAX = uVar2;\n        uVar2 = -*0x557df8 & (uVar2 + *0x557df8) - 2;\n        if (in_RAX[1] < uVar2) {\n            if (*(in_RAX + 3) != '\\0') {\n                fcn.004138a0(unaff_RDI);\n                fcn.00413400();\n            }\n            in_RAX[1] = uVar2;\n        }\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 284
    },
    "0040bc80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040bc80(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t arg4;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    int64_t *in_R8;\n    int64_t *piVar6;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    iVar4 = *(in_RAX + 0x28);\n    if ((iVar4 == 0) || (arg4 = *(iVar4 + 0x10),  arg4 == 0)) {\n        arg4 = fcn.0040a9e0(1);\n    }\n    else {\n        in_R8 = *(unaff_RBX + 0x52);\n        piVar6 = in_R8 + arg4 + -8;\n        if (*piVar6 == 0) {\n            if (*0x557ed0 == 0) {\n                *(iVar4 + 0x10) = arg4 + in_R8;\n            }\n            else {\n                fcn.004593e0(arg1, iVar4, in_R8, arg4);\n            }\n        }\n        else {\n            iVar4 = arg1;\n            if (*0x557ed0 == 0) {\n                *piVar6 = 0;\n                iVar1 = in_RAX;\n            }\n            else {\n                iVar1 = fcn.004593a0(arg1, 0, in_R8, arg4);\n            }\n            if (*0x557ed0 == 0) {\n                *(*(iVar1 + 0x28) + 0x10) = 0;\n            }\n            else {\n                fcn.004593a0(iVar4, 0, in_R8, arg4);\n            }\n        }\n    }\n    iVar4 = arg4;\n    fcn.0040bc00();\n    if (*(*(unaff_RBX + 0x40) + 8) == 0) {\n        iVar1 = in_RAX;\n        if (*(in_RAX + 0x28) == 0) {\n            iVar5 = unaff_RBX;\n            uVar2 = fcn.0040b3c0();\n            if (*0x557ed0 == 0) {\n                *(in_RAX + 0x28) = uVar2;\n            }\n            else {\n                fcn.00459280(iVar5, in_RAX, in_R8, iVar4);\n            }\n        }\n        piVar6 = *(iVar1 + 0x28);\n        if (*piVar6 == 0) {\n            uVar2 = fcn.0040b3c0();\n            if (*0x557ed0 == 0) {\n                **(in_RAX + 0x28) = uVar2;\n                iVar1 = in_RAX;\n            }\n            else {\n                fcn.00459280(in_RAX, iVar1, piVar6, iVar4);\n                iVar1 = in_RAX;\n            }\n        }\n        in_R8 = **(iVar1 + 0x28);\n        iVar1 = in_R8[1];\n        iVar5 = *in_R8;\n        iVar3 = iVar5;\n        if (in_R8[2] < iVar1 + 1U) {\n            arg2 = iVar1;\n            piVar6 = in_R8;\n            iVar3 = fcn.004425c0(iVar1);\n            in_R8[2] = iVar1;\n            if (*0x557ed0 == 0) {\n                *in_R8 = iVar3;\n                iVar1 = iVar5;\n            }\n            else {\n                iVar3 = fcn.00459280(iVar1, arg2, piVar6, iVar4);\n                iVar1 = iVar5;\n            }\n        }\n        in_R8[1] = iVar1 + 1;\n        if (*0x557ed0 == 0) {\n            *(iVar3 + iVar1 * 8) = arg4;\n        }\n        else {\n            arg4 = fcn.00459280(unaff_RBX, iVar1, in_R8, iVar4);\n        }\n    }\n    if (*0x557ed0 == 0) {\n        *(arg1 + *(unaff_RBX + 0x52) + -8) = arg4;\n    }\n    else {\n        fcn.00459280(*(unaff_RBX + 0x52), arg1, in_R8, iVar4);\n    }\n    return;\n}\n",
        "token_count": 1048
    },
    "0040bf60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040bf60(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    uchar auVar2 [16];\n    uint8_t uVar3;\n    int64_t in_RAX;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t arg2;\n    uint64_t unaff_RBX;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    auVar2 = ZEXT816(**(in_RAX + 0x40)) * ZEXT816(unaff_RBX);\n    if ((SUB168(auVar2 >> 0x40, 0) != 0) || (0x1000000000000 < SUB168(auVar2, 0))) {\n        unaff_RBX = 0;\n    }\n    if (arg1 == 0) {\n        arg1 = fcn.0040b3c0();\n    }\n    iVar5 = *(unaff_R14 + 0x30);\n    uVar6 = *(iVar5 + 0xf0);\n    uVar1 = *(iVar5 + 0xf4);\n    *(iVar5 + 0xf0) = uVar1;\n    uVar6 = uVar6 << 0x11 ^ uVar6;\n    uVar7 = uVar1;\n    uVar6 = uVar1 >> 0x10 ^ uVar6 >> 7 ^ uVar1 ^ uVar6;\n    arg4 = uVar6;\n    *(iVar5 + 0xf4) = uVar6;\n    *(arg1 + 0xc) = uVar1 + uVar6;\n    uVar6 = 0;\n    while ((uVar3 = uVar6,  8 < unaff_RBX &&\n           (uVar7 = 1 << (uVar3 & 0x3f),  uVar8 = uVar7 >> 1,  uVar7 = uVar8 + (uVar7 & 0xfffffffffffffffe), \n           uVar8 + uVar7 * 4 < unaff_RBX))) {\n        uVar6 = uVar6 + 1;\n    }\n    *(arg1 + 9) = uVar3;\n    iVar5 = arg1;\n    if (uVar3 != 0) {\n        uVar8 = uVar6;\n        arg2 = arg1;\n        uVar4 = fcn.0040c120(0);\n        if (*0x557ed0 == 0) {\n            *(arg1 + 0x10) = uVar4;\n        }\n        else {\n            fcn.00459280(arg1, arg2, uVar7, arg4);\n        }\n        if (uVar8 != 0) {\n            iVar5 = fcn.0040b3c0();\n            if (*0x557ed0 == 0) {\n                *(arg1 + 0x28) = iVar5;\n                *(iVar5 + 0x10) = uVar8;\n                iVar5 = arg1;\n            }\n            else {\n                fcn.00459280(arg1, arg2, uVar7, arg4);\n                fcn.004593a0(arg1, uVar8, uVar7, arg4);\n                iVar5 = arg1;\n            }\n        }\n    }\n    return iVar5;\n}\n",
        "token_count": 799
    },
    "0040c120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040c120(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    ulong uVar2;\n    int64_t arg2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint8_t unaff_BL;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    uint64_t in_R8;\n    uint64_t in_R9;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = 1 << (unaff_BL & 0x3f);\n            uVar7 = uVar6;\n            if (unaff_BL < 4) goto code_r0x0040c252;\n            in_R9 = (1 << (unaff_BL - 4 & 0x3f)) + uVar6;\n            uVar1 = **(in_RAX + 0x40);\n            in_R8 = in_R9 * uVar1;\n            if (in_R8 < 0x8000) {\n                if (0x3f8 < in_R8) {\n                    uVar7 = in_R8 - 0x381 >> 7;\n                    if (uVar7 < 0xf9) {\n                        if (\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                            [uVar7] < 0x44) {\n                            uVar4 = *(\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                      [uVar7] * 2 + 0x4f30c0);\n                            goto code_r0x0040c220;\n                        }\n                        goto code_r0x0040c30c;\n                    }\n                    goto code_r0x0040c319;\n                }\n                uVar7 = in_R8 + 7 >> 3;\n                if (uVar7 < 0x81) {\n                    uVar7 = *(uVar7 + 0x4f2f80);\n                    if (uVar7 < 0x44) {\n                        uVar4 = *(uVar7 * 2 + 0x4f30c0);\n                        goto code_r0x0040c220;\n                    }\n                    goto code_r0x0040c326;\n                }\n            }\n            else {\n                uVar4 = in_R8;\n                if (in_R8 < in_R8 + 0x2000 || in_R8 - (in_R8 + 0x2000) == 0) {\n                    uVar4 = in_R8 + 0x1fff & 0xffffffffffffe000;\n                }\ncode_r0x0040c220:\n                uVar7 = in_R9;\n                if (uVar4 == in_R8) goto code_r0x0040c252;\n                if (uVar1 != 0) {\n                    uVar7 = uVar4 / uVar1;\ncode_r0x0040c252:\n                    *(*0x20 + -0x10) = in_RAX;\n                    *(*0x20 + -0x20) = uVar6;\n                    *(*0x20 + -0x28) = uVar7;\n                    if (arg1 == 0) {\n                        uVar2 = *(in_RAX + 0x40);\n                        *(*0x20 + -0x40) = 0x40c2ae;\n                        iVar3 = fcn.0040b420(uVar2, uVar7);\n                    }\n                    else {\n                        *(*0x20 + -0x18) = arg1;\n                        if (*(*(in_RAX + 0x40) + 8) == 0) {\n                            *(*0x20 + -0x40) = 0x40c295;\n                            fcn.00459d80();\n                        }\n                        else {\n                            *(*0x20 + -0x40) = 0x40c288;\n                            fcn.0040ee60();\n                        }\n                        iVar3 = *(*0x20 + -0x18);\n                    }\n                    arg2 = *(*0x20 + -0x20);\n                    if (*(*0x20 + -0x28) != arg2) {\n                        uVar7 = *(*(*0x20 + -0x10) + 0x52);\n                        if (*0x557ed0 == 0) {\n                            *((*(*0x20 + -0x28) + -1) * uVar7 + iVar3 + uVar7 + -8) = iVar3;\n                        }\n                        else {\n                            *(*0x20 + -0x40) = 0x40c2f6;\n                            fcn.00459280(iVar3 + uVar7 * arg2, arg2, in_R8, in_R9);\n                        }\n                    }\n                    return;\n                }\n                *(*0x20 + -0x40) = 0x40c30c;\n                fcn.0042e820();\ncode_r0x0040c30c:\n                *(*0x20 + -0x40) = 0x40c319;\n                fcn.00459720(0x44);\ncode_r0x0040c319:\n                *(*0x20 + -0x40) = 0x40c326;\n                fcn.00459740(0xf9);\ncode_r0x0040c326:\n                *(*0x20 + -0x40) = 0x40c333;\n                fcn.00459720(0x44);\n            }\n            arg1 = 0x81;\n            *(*0x20 + -0x40) = 0x40c345;\n            in_RAX = fcn.00459740(0x81);\n        }\n        *(puVar5 + 8) = in_RAX;\n        puVar5[0x10] = unaff_BL;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x40c359;\n        fcn.00457040();\n        in_RAX = *(puVar5 + 8);\n        unaff_BL = puVar5[0x10];\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1580
    },
    "0040c5c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.0040c5c0(int64_t **arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    char cVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t arg2;\n    uint8_t uVar7;\n    ulong uVar8;\n    uint64_t arg1_00;\n    int64_t arg1_01;\n    int64_t *piVar9;\n    ulong uVar10;\n    int64_t unaff_RBX;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t in_R8;\n    int64_t iVar12;\n    int64_t in_R9;\n    int64_t unaff_R14;\n    \ncode_r0x0040c5c0:\n    puVar11 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar11 = *0x20 + -0x78;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if (unaff_RBX != 0) {\n            if ((*(unaff_RBX + 8) & 4) == 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x10) = arg1;\n                pcVar2 = **(in_RAX + 0x48);\n                *(*0x20 + -0x80) = 0x40c61e;\n                uVar4 = (*pcVar2)();\n                *(*0x20 + -0x50) = uVar4;\n                piVar9 = *(*0x20 + 0x10);\n                *(piVar9 + 1) = *(piVar9 + 1) ^ 4;\n                if (piVar9[2] == 0) {\n                    uVar10 = *(*0x20 + 8);\n                    uVar8 = 1;\n                    *(*0x20 + -0x80) = 0x40c655;\n                    iVar5 = fcn.0040a9e0();\n                    if (*0x557ed0 == 0) {\n                        piVar9 = *(*0x20 + 0x10);\n                        piVar9[2] = iVar5;\n                    }\n                    else {\n                        piVar9 = *(*0x20 + 0x10);\n                        *(*0x20 + -0x80) = 0x40c67d;\n                        fcn.00459280(uVar8, uVar10, in_R8, in_R9);\n                    }\n                    uVar4 = *(*0x20 + -0x50);\n                }\n                iVar5 = *(*0x20 + 8);\n                do {\n                    arg1_00 = (1 << (*(piVar9 + 9) & 0x3f)) - 1U & uVar4;\n                    if (piVar9[3] != 0) {\n                        *(*0x20 + -0x48) = arg1_00;\n                        *(*0x20 + -0x80) = 0x40c6db;\n                        fcn.0040ccc0(arg1_00);\n                        uVar4 = *(*0x20 + -0x50);\n                        arg1_00 = *(*0x20 + -0x48);\n                        piVar9 = *(*0x20 + 0x10);\n                        iVar5 = *(*0x20 + 8);\n                    }\n                    uVar1 = *(iVar5 + 0x52);\n                    iVar12 = piVar9[2];\n                    uVar6 = uVar4 >> 0x38;\n                    if (uVar4 >> 0x38 < 5) {\n                        uVar6 = (uVar4 >> 0x38) + 5;\n                    }\n                    *(*0x20 + -0x59) = uVar6;\n                    arg2 = 0;\n                    in_R8 = 0;\n                    in_R9 = 0;\n                    iVar12 = arg1_00 * uVar1 + iVar12;\n                    do {\n                        arg1_01 = iVar12;\n                        *(*0x20 + -0x20) = arg1_01;\n                        for (uVar4 = 0; uVar4 < 8; uVar4 = uVar4 + 1) {\n                            uVar7 = *(arg1_01 + uVar4);\n                            if (uVar6 == uVar7) {\n                                *(*0x20 + -0x58) = uVar4;\n                                *(*0x20 + -0x28) = in_R9;\n                                *(*0x20 + -0x38) = in_R8;\n                                *(*0x20 + -0x30) = arg2;\n                                piVar9 = *(iVar5 + 0x50) * uVar4 + arg1_01 + 8;\n                                if ((*(iVar5 + 0x54) & 1) != 0) {\n                                    piVar9 = *piVar9;\n                                }\n                                *(*0x20 + -0x40) = piVar9;\n                                pcVar2 = **(*(iVar5 + 0x30) + 0x18);\n                                *(*0x20 + -0x80) = 0x40c882;\n                                cVar3 = (*pcVar2)();\n                                if (cVar3 != '\\0') {\n                                    iVar5 = *(*0x20 + 8);\n                                    if ((*(iVar5 + 0x54) >> 3 & 1) != 0) {\n                                        *(*0x20 + -0x80) = 0x40c8e5;\n                                        fcn.0040eb60(*(*0x20 + -0x10));\n                                        iVar5 = *(*0x20 + 8);\n                                    }\n                                    arg1 = *(*0x20 + -0x20) + *(iVar5 + 0x51) * *(*0x20 + -0x58) + *(iVar5 + 0x50) * 8 +\n                                           8;\n                                    goto code_r0x0040ca41;\n                                }\n                                uVar6 = *(*0x20 + -0x59);\n                                arg1_01 = *(*0x20 + -0x20);\n                                piVar9 = *(*0x20 + 0x10);\n                                iVar5 = *(*0x20 + 8);\n                                uVar4 = *(*0x20 + -0x58);\n                                arg2 = *(*0x20 + -0x30);\n                                in_R8 = *(*0x20 + -0x38);\n                                in_R9 = *(*0x20 + -0x28);\n                            }\n                            else {\n                                if ((uVar7 < 2) && (arg2 == 0)) {\n                                    in_R8 = uVar4 * *(iVar5 + 0x50) + arg1_01 + 8;\n                                    in_R9 = *(iVar5 + 0x51) * uVar4 + *(iVar5 + 0x50) * 8 + arg1_01 + 8;\n                                    arg2 = arg1_01 + uVar4;\n                                }\n                                if (uVar7 == 0) goto code_r0x0040c728;\n                            }\n                        }\n                        iVar12 = *(arg1_01 + *(iVar5 + 0x52) + -8);\n                    } while (iVar12 != 0);\ncode_r0x0040c728:\n                    if (piVar9[3] != 0) goto code_r0x0040c917;\n                    uVar7 = *(piVar9 + 9);\n                    if ((*piVar9 + 1U < 9) ||\n                       (uVar4 = 1 << (uVar7 & 0x3f), \n                       *piVar9 + 1U <= (uVar4 >> 1) * 5 + (uVar4 & 0xfffffffffffffffe) * 4)) {\n                        if (0xf < uVar7) {\n                            uVar7 = 0xf;\n                        }\n                        if (*(piVar9 + 10) < 1 << (uVar7 & 0xf)) goto code_r0x0040c917;\n                    }\n                    *(*0x20 + -0x80) = 0x40c694;\n                    fcn.0040cae0();\n                    piVar9 = *(*0x20 + 0x10);\n                    uVar4 = *(*0x20 + -0x50);\n                    iVar5 = *(*0x20 + 8);\n                } while( true );\n            }\n            goto code_r0x0040ca85;\n        }\n        goto code_r0x0040ca96;\n    }\n    goto code_r0x0040caaa;\ncode_r0x0040c917:\n    iVar12 = in_R8;\n    if (arg2 == 0) {\n        *(*0x20 + -0x80) = 0x40c92a;\n        arg2 = fcn.0040bc80(arg1_01);\n        iVar5 = *(*0x20 + 8);\n        iVar12 = arg2 + 8;\n        in_R9 = arg2 + *(iVar5 + 0x50) * 8 + 8;\n    }\n    *(*0x20 + -0x28) = in_R9;\n    *(*0x20 + -0x30) = arg2;\n    in_R8 = iVar12;\n    if ((*(iVar5 + 0x54) & 1) != 0) {\n        *(*0x20 + -0x18) = iVar12;\n        uVar10 = 1;\n        *(*0x20 + -0x80) = 0x40c985;\n        in_R8 = fcn.0040a9e0();\n        if (*0x557ed0 == 0) {\n            **(*0x20 + -0x18) = in_R8;\n        }\n        else {\n            *(*0x20 + -0x80) = 0x40c99f;\n            in_R8 = fcn.00459280(uVar10, arg2, iVar12, in_R9);\n        }\n        arg2 = *(*0x20 + -0x30);\n        iVar5 = *(*0x20 + 8);\n        in_R9 = *(*0x20 + -0x28);\n    }\n    if ((*(iVar5 + 0x54) >> 1 & 1) != 0) {\n        *(*0x20 + -0x38) = in_R8;\n        uVar8 = 1;\n        *(*0x20 + -0x80) = 0x40c9e5;\n        uVar10 = fcn.0040a9e0();\n        if (*0x557ed0 == 0) {\n            **(*0x20 + -0x28) = uVar10;\n        }\n        else {\n            *(*0x20 + -0x80) = 0x40c9ff;\n            fcn.00459280(uVar8, arg2, in_R8, in_R9);\n        }\n        in_R8 = *(*0x20 + -0x38);\n    }\n    *(*0x20 + -0x80) = 0x40ca1d;\n    fcn.0040eb60(*(*0x20 + -0x10));\n    **(*0x20 + -0x30) = *(*0x20 + -0x59);\n    **(*0x20 + 0x10) = **(*0x20 + 0x10) + 1;\n    iVar5 = *(*0x20 + 8);\n    arg1 = *(*0x20 + -0x28);\ncode_r0x0040ca41:\n    uVar7 = *(*(*0x20 + 0x10) + 8);\n    if ((uVar7 & 4) != 0) {\n        *(*(*0x20 + 0x10) + 8) = uVar7 & 0xfb;\n        if ((*(iVar5 + 0x54) >> 1 & 1) != 0) {\n            arg1 = *arg1;\n        }\n        return arg1;\n    }\n    *(*0x20 + -0x80) = 0x40ca85;\n    fcn.00430d40();\ncode_r0x0040ca85:\n    *(*0x20 + -0x80) = 0x40ca96;\n    fcn.00430d40();\ncode_r0x0040ca96:\n    unaff_RBX = 0x49e640;\n    *(*0x20 + -0x80) = 0x40caa9;\n    in_RAX = fcn.004305a0();\ncode_r0x0040caaa:\n    *(puVar11 + 8) = in_RAX;\n    *(puVar11 + 0x10) = unaff_RBX;\n    *(puVar11 + 0x18) = arg1;\n    *(puVar11 + -8) = 0x40cabe;\n    fcn.00457040();\n    in_RAX = *(puVar11 + 8);\n    unaff_RBX = *(puVar11 + 0x10);\n    arg1 = *(puVar11 + 0x18);\n    *0x20 = puVar11;\n    goto code_r0x0040c5c0;\n}\n",
        "token_count": 2992
    },
    "0040cae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040cae0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int32_t iVar2;\n    ulong arg1;\n    int64_t *arg1_00;\n    int64_t *arg2;\n    int64_t *unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint8_t uVar4;\n    uint64_t uVar5;\n    uint64_t arg3;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*unaff_RBX + 1U < 9) ||\n               (uVar5 = 1 << (*(unaff_RBX + 9) & 0x3f), \n               *unaff_RBX + 1U <= (uVar5 >> 1) * 5 + (uVar5 & 0xfffffffffffffffe) * 4)) {\n                *(unaff_RBX + 1) = *(unaff_RBX + 1) | 8;\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = 1;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x19) = iVar2;\n            *(*0x20 + -0x18) = unaff_RBX[2];\n            uVar5 = *(unaff_RBX + 9) + iVar2;\n            *(*0x20 + -0x40) = 0x40cb59;\n            iVar1 = fcn.0040c120(0);\n            arg2 = *(*0x20 + 0x10);\n            uVar4 = *(arg2 + 1) & 0xfc;\n            if ((*(arg2 + 1) & 1) != 0) {\n                uVar4 = uVar4 | 2;\n            }\n            arg3 = *(*0x20 + -0x19);\n            *(arg2 + 9) = *(arg2 + 9) + *(*0x20 + -0x19);\n            *(arg2 + 1) = uVar4;\n            if (*0x557ed0 == 0) {\n                arg2[3] = *(*0x20 + -0x18);\n                arg2[2] = iVar1;\n            }\n            else {\n                arg1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x40) = 0x40cbaa;\n                fcn.00459380();\n                *(*0x20 + -0x40) = 0x40cbb3;\n                fcn.00459280(arg1, arg2, arg3, in_R9);\n            }\n            arg2[4] = 0;\n            *(arg2 + 10) = 0;\n            arg1_00 = arg2[5];\n            if ((arg1_00 == NULL) || (*arg1_00 == 0)) goto code_r0x0040cc14;\n            if (arg1_00[1] == 0) {\n                if (*0x557ed0 == 0) {\n                    arg1_00[1] = *arg1_00;\n                }\n                else {\n                    *(*0x20 + -0x40) = 0x40cbf5;\n                    fcn.004593e0(arg1_00, arg2, arg3, in_R9);\n                }\n                if (*0x557ed0 == 0) {\n                    *arg2[5] = 0;\n                }\n                else {\n                    arg1_00 = NULL;\n                    *(*0x20 + -0x40) = 0x40cc14;\n                    fcn.00459380();\n                }\ncode_r0x0040cc14:\n                if (uVar5 != 0) {\n                    if (arg2[5] == 0) {\n                        *(*0x20 + -0x10) = uVar5;\n                        *(*0x20 + -0x40) = 0x40cc33;\n                        iVar1 = fcn.0040b3c0();\n                        if (*0x557ed0 == 0) {\n                            arg1_00 = *(*0x20 + 0x10);\n                            arg1_00[5] = iVar1;\n                        }\n                        else {\n                            arg1_00 = *(*0x20 + 0x10);\n                            *(*0x20 + -0x40) = 0x40cc55;\n                            fcn.00459280(arg1_00, arg2, arg3, in_R9);\n                        }\n                        uVar5 = *(*0x20 + -0x10);\n                        arg2 = arg1_00;\n                    }\n                    if (*0x557ed0 == 0) {\n                        *(arg2[5] + 0x10) = uVar5;\n                    }\n                    else {\n                        *(*0x20 + -0x40) = 0x40cc7b;\n                        fcn.004593c0(arg1_00, arg2, arg3, in_R9);\n                    }\n                }\n                return;\n            }\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x40) = 0x40cc96;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x40cca6;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1356
    },
    "0040ccc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040ccc0(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    uVar1 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar1 = uVar1 - 1;\n    }\n    fcn.0040cd60((1 << (uVar1 & 0x3f)) - 1U & arg1);\n    if (*(unaff_RBX + 0x18) != 0) {\n        fcn.0040cd60(*(unaff_RBX + 0x20));\n    }\n    return;\n}\n",
        "token_count": 211
    },
    "0040d740": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040d740(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    uint8_t uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint8_t uVar7;\n    ulong arg1_00;\n    uint64_t uVar8;\n    int64_t arg1_01;\n    ulong arg2;\n    int64_t unaff_RBX;\n    int64_t *piVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint64_t in_R8;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    \ncode_r0x0040d740:\n    puVar10 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar10 = *0x20 + -0x30;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x18) = arg1;\n        if (unaff_RBX != 0) {\n            arg1._0_4_ = *(unaff_RBX + 8);\n            if ((*(unaff_RBX + 8) & 4) == 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                pcVar1 = **(in_RAX + 0x48);\n                *(*0x20 + -0x38) = 0x40d794;\n                uVar4 = (*pcVar1)();\n                *(*0x20 + -0x18) = uVar4;\n                piVar9 = *(*0x20 + 0x10);\n                *(piVar9 + 1) = *(piVar9 + 1) ^ 4;\n                if (piVar9[2] == 0) {\n                    arg2 = *(*0x20 + 8);\n                    arg1_00 = 1;\n                    *(*0x20 + -0x38) = 0x40d7c5;\n                    iVar5 = fcn.0040a9e0();\n                    if (*0x557ed0 == 0) {\n                        piVar9 = *(*0x20 + 0x10);\n                        piVar9[2] = iVar5;\n                    }\n                    else {\n                        piVar9 = *(*0x20 + 0x10);\n                        *(*0x20 + -0x38) = 0x40d7e7;\n                        fcn.00459280(arg1_00, arg2, in_R8, in_R9);\n                    }\n                    uVar4 = *(*0x20 + -0x18);\n                }\n                iVar5 = *(*0x20 + 8);\n                do {\n                    uVar8 = (1 << (*(piVar9 + 9) & 0x3f)) - 1U & uVar4;\n                    if (piVar9[3] != 0) {\n                        *(*0x20 + -0x10) = uVar8;\n                        *(*0x20 + -0x38) = 0x40d839;\n                        fcn.0040da40(uVar8);\n                        uVar4 = *(*0x20 + -0x18);\n                        uVar8 = *(*0x20 + -0x10);\n                        iVar5 = *(*0x20 + 8);\n                        piVar9 = *(*0x20 + 0x10);\n                    }\n                    uVar3 = uVar4 >> 0x38;\n                    iVar6 = 0;\n                    in_R8 = 0;\n                    iVar2 = uVar8 * *(iVar5 + 0x52) + piVar9[2];\n                    do {\n                        arg1_01 = iVar2;\n                        for (uVar4 = 0; uVar4 < 8; uVar4 = uVar4 + 1) {\n                            if (*(arg1_01 + uVar4) < 2) {\n                                uVar8 = uVar4;\n                                iVar2 = arg1_01;\n                                if (iVar6 != 0) {\n                                    uVar8 = in_R8;\n                                    iVar2 = iVar6;\n                                }\n                                iVar6 = iVar2;\n                                in_R8 = uVar8;\n                                if (*(arg1_01 + uVar4) == 0) goto code_r0x0040d86b;\n                            }\n                            else {\n                                in_R9 = uVar4;\n                                if (*(*0x20 + 0x18) == *(arg1_01 + uVar4 * 4 + 8)) goto code_r0x0040d9ba;\n                            }\n                        }\n                        iVar2 = *(arg1_01 + *(iVar5 + 0x52) + -8);\n                    } while (iVar2 != 0);\ncode_r0x0040d86b:\n                    if (piVar9[3] != 0) goto code_r0x0040d962;\n                    uVar7 = *(piVar9 + 9);\n                    if ((*piVar9 + 1U < 9) ||\n                       (uVar4 = 1 << (uVar7 & 0x3f), \n                       *piVar9 + 1U <= (uVar4 >> 1) * 5 + (uVar4 & 0xfffffffffffffffe) * 4)) {\n                        if (0xf < uVar7) {\n                            uVar7 = 0xf;\n                        }\n                        if (*(piVar9 + 10) < 1 << (uVar7 & 0xf)) goto code_r0x0040d962;\n                    }\n                    *(*0x20 + -0x38) = 0x40d7fb;\n                    fcn.0040cae0();\n                    piVar9 = *(*0x20 + 0x10);\n                    uVar4 = *(*0x20 + -0x18);\n                    iVar5 = *(*0x20 + 8);\n                } while( true );\n            }\n            goto code_r0x0040d9f4;\n        }\n        goto code_r0x0040da05;\n    }\n    goto code_r0x0040da19;\ncode_r0x0040d962:\n    uVar4 = in_R8;\n    if (iVar6 == 0) {\n        *(*0x20 + -0x38) = 0x40d975;\n        iVar6 = fcn.0040bc80(arg1_01);\n        iVar5 = *(*0x20 + 8);\n        piVar9 = *(*0x20 + 0x10);\n        uVar4 = 0;\n        uVar3 = *(*0x20 + -0x18) >> 0x38;\n    }\n    arg1_01 = iVar6;\n    if (uVar3 < 5) {\n        uVar3 = uVar3 + 5;\n    }\n    *(arg1_01 + (uVar4 & 7)) = uVar3;\n    in_R8 = *(*0x20 + 0x18);\n    *(arg1_01 + uVar4 * 4 + 8) = *(*0x20 + 0x18);\n    *piVar9 = *piVar9 + 1;\n    in_R9 = uVar4 & 7;\ncode_r0x0040d9ba:\n    uVar3 = *(iVar5 + 0x51);\n    if ((*(piVar9 + 1) & 4) != 0) {\n        *(piVar9 + 1) = *(piVar9 + 1) & 0xfb;\n        return uVar4 * uVar3 + arg1_01 + 0x28;\n    }\n    *(*0x20 + -0x38) = 0x40d9f4;\n    fcn.00430d40();\n    arg1._0_4_ = arg1_01;\ncode_r0x0040d9f4:\n    *(*0x20 + -0x38) = 0x40da05;\n    fcn.00430d40();\ncode_r0x0040da05:\n    unaff_RBX = 0x49e640;\n    *(*0x20 + -0x38) = 0x40da18;\n    in_RAX = fcn.004305a0();\ncode_r0x0040da19:\n    *(puVar10 + 8) = in_RAX;\n    *(puVar10 + 0x10) = unaff_RBX;\n    *(puVar10 + 0x18) = arg1;\n    *(puVar10 + -8) = 0x40da2c;\n    fcn.00457040();\n    in_RAX = *(puVar10 + 8);\n    unaff_RBX = *(puVar10 + 0x10);\n    arg1._0_4_ = *(puVar10 + 0x18);\n    *0x20 = puVar10;\n    goto code_r0x0040d740;\n}\n",
        "token_count": 2026
    },
    "0040da40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040da40(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    uVar1 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar1 = uVar1 - 1;\n    }\n    fcn.0040dae0((1 << (uVar1 & 0x3f)) - 1U & arg1);\n    if (*(unaff_RBX + 0x18) != 0) {\n        fcn.0040dae0(*(unaff_RBX + 0x20));\n    }\n    return;\n}\n",
        "token_count": 211
    },
    "0040e2a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040e2a0(uint64_t arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    int64_t *arg1_00;\n    uint8_t uVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint8_t uVar8;\n    ulong arg1_01;\n    uint64_t arg1_02;\n    int64_t **ppiVar9;\n    ulong arg2;\n    int64_t unaff_RBX;\n    int64_t *piVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t **unaff_RDI;\n    int64_t **in_R8;\n    int64_t **in_R9;\n    int64_t **ppiVar12;\n    int64_t **ppiVar13;\n    int64_t unaff_R14;\n    \ncode_r0x0040e2a0:\n    puVar11 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar11 = *0x20 + -0x60;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + 0x20) = unaff_RDI;\n        if (unaff_RBX != 0) {\n            arg1 = *(unaff_RBX + 8);\n            if ((*(unaff_RBX + 8) & 4) == 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                pcVar2 = **(in_RAX + 0x48);\n                *(*0x20 + -0x68) = 0x40e2f9;\n                uVar5 = (*pcVar2)();\n                *(*0x20 + -0x38) = uVar5;\n                piVar10 = *(*0x20 + 0x10);\n                *(piVar10 + 1) = *(piVar10 + 1) ^ 4;\n                if (piVar10[2] == 0) {\n                    arg2 = *(*0x20 + 8);\n                    arg1_01 = 1;\n                    *(*0x20 + -0x68) = 0x40e32a;\n                    iVar6 = fcn.0040a9e0();\n                    if (*0x557ed0 == 0) {\n                        piVar10 = *(*0x20 + 0x10);\n                        piVar10[2] = iVar6;\n                    }\n                    else {\n                        piVar10 = *(*0x20 + 0x10);\n                        *(*0x20 + -0x68) = 0x40e34c;\n                        fcn.00459280(arg1_01, arg2, in_R8, in_R9);\n                    }\n                    uVar5 = *(*0x20 + -0x38);\n                }\n                iVar6 = *(*0x20 + 8);\n                do {\n                    arg1_02 = (1 << (*(piVar10 + 9) & 0x3f)) - 1U & uVar5;\n                    if (piVar10[3] != 0) {\n                        *(*0x20 + -0x30) = arg1_02;\n                        *(*0x20 + -0x68) = 0x40e3a5;\n                        fcn.0040e6a0(arg1_02);\n                        uVar5 = *(*0x20 + -0x38);\n                        arg1_02 = *(*0x20 + -0x30);\n                        iVar6 = *(*0x20 + 8);\n                        piVar10 = *(*0x20 + 0x10);\n                    }\n                    uVar1 = *(iVar6 + 0x52);\n                    iVar3 = piVar10[2];\n                    uVar7 = uVar5 >> 0x38;\n                    if (uVar5 >> 0x38 < 5) {\n                        uVar7 = (uVar5 >> 0x38) + 5;\n                    }\n                    *(*0x20 + -0x41) = uVar7;\n                    unaff_RDI = NULL;\n                    in_R8 = NULL;\n                    ppiVar12 = arg1_02 * uVar1 + iVar3;\n                    do {\n                        ppiVar9 = ppiVar12;\n                        *(*0x20 + -0x10) = ppiVar9;\n                        for (ppiVar12 = NULL; uVar4 = uVar7,  ppiVar12 < 0x8; ppiVar12 = ppiVar12 + 1) {\n                            uVar8 = *(ppiVar9 + ppiVar12);\n                            if (uVar4 == uVar8) {\n                                ppiVar13 = ppiVar9 + ppiVar12 * 2 + 1;\n                                if (ppiVar9[ppiVar12 * 2 + 2] == *(*0x20 + 0x20)) {\n                                    if (*(*0x20 + 0x18) == *ppiVar13) {\n                                        uVar4 = 0;\n                                    }\n                                    else {\n                                        *(*0x20 + -0x28) = ppiVar12;\n                                        *(*0x20 + -0x20) = ppiVar13;\n                                        *(*0x20 + -0x40) = in_R8;\n                                        *(*0x20 + -0x18) = unaff_RDI;\n                                        *(*0x20 + -0x68) = 0x40e513;\n                                        uVar4 = fcn.004021a0(*(*0x20 + 0x20), iVar6);\n                                        uVar4 = uVar4 ^ 1;\n                                        iVar6 = *(*0x20 + 8);\n                                        piVar10 = *(*0x20 + 0x10);\n                                        unaff_RDI = *(*0x20 + -0x18);\n                                        in_R8 = *(*0x20 + -0x40);\n                                        ppiVar13 = *(*0x20 + -0x20);\n                                        ppiVar12 = *(*0x20 + -0x28);\n                                        ppiVar9 = *(*0x20 + -0x10);\n                                        uVar7 = *(*0x20 + -0x41);\n                                    }\n                                    if (uVar4 == 0) {\n                                        in_R9 = ppiVar13;\n                                        if (*0x557ed0 == 0) {\n                                            *ppiVar13 = *(*0x20 + 0x18);\n                                        }\n                                        else {\n                                            *(*0x20 + -0x68) = 0x40e572;\n                                            fcn.00459380();\n                                            unaff_RDI = ppiVar13;\n                                        }\n                                        goto code_r0x0040e5ee;\n                                    }\n                                }\n                            }\n                            else {\n                                if ((uVar8 < 2) && (unaff_RDI == NULL)) {\n                                    unaff_RDI = ppiVar9;\n                                    in_R8 = ppiVar12;\n                                }\n                                if (uVar8 == 0) goto code_r0x0040e3e8;\n                            }\n                        }\n                        ppiVar12 = *(ppiVar9 + (*(iVar6 + 0x52) - 8));\n                    } while (ppiVar12 != NULL);\ncode_r0x0040e3e8:\n                    if (piVar10[3] != 0) goto code_r0x0040e577;\n                    uVar8 = *(piVar10 + 9);\n                    if ((*piVar10 + 1U < 9) ||\n                       (uVar5 = 1 << (uVar8 & 0x3f), \n                       *piVar10 + 1U <= (uVar5 >> 1) * 5 + (uVar5 & 0xfffffffffffffffe) * 4)) {\n                        if (0xf < uVar8) {\n                            uVar8 = 0xf;\n                        }\n                        if (*(piVar10 + 10) < 1 << (uVar8 & 0xf)) goto code_r0x0040e577;\n                    }\n                    *(*0x20 + -0x68) = 0x40e365;\n                    fcn.0040cae0();\n                    piVar10 = *(*0x20 + 0x10);\n                    uVar5 = *(*0x20 + -0x38);\n                    iVar6 = *(*0x20 + 8);\n                } while( true );\n            }\n            goto code_r0x0040e62b;\n        }\n        goto code_r0x0040e63c;\n    }\n    goto code_r0x0040e650;\ncode_r0x0040e577:\n    ppiVar12 = in_R8;\n    if (unaff_RDI == NULL) {\n        *(*0x20 + -0x68) = 0x40e58a;\n        unaff_RDI = fcn.0040bc80(ppiVar9);\n        iVar6 = *(*0x20 + 8);\n        piVar10 = *(*0x20 + 0x10);\n        ppiVar12 = NULL;\n        uVar4 = *(*0x20 + -0x41);\n    }\n    *(unaff_RDI + (ppiVar12 & 7)) = uVar4;\n    ppiVar9 = unaff_RDI + ppiVar12 * 2 + 1;\n    arg1_00 = *(*0x20 + 0x20);\n    in_R9 = *(*0x20 + 0x18);\n    unaff_RDI[ppiVar12 * 2 + 2] = arg1_00;\n    if (*0x557ed0 == 0) {\n        *ppiVar9 = in_R9;\n        in_R8 = unaff_RDI;\n    }\n    else {\n        *(*0x20 + -0x68) = 0x40e5e5;\n        fcn.00459420(arg1_00, iVar6, unaff_RDI);\n        in_R8 = unaff_RDI;\n    }\n    *piVar10 = *piVar10 + 1;\n    unaff_RDI = ppiVar9;\n    ppiVar9 = in_R8;\ncode_r0x0040e5ee:\n    uVar4 = *(iVar6 + 0x51);\n    uVar8 = *(piVar10 + 1);\n    arg1 = uVar8;\n    if ((uVar8 & 4) != 0) {\n        *(piVar10 + 1) = uVar8 & 0xfb;\n        return ppiVar9 + ppiVar12 * uVar4 + 0x88;\n    }\n    *(*0x20 + -0x68) = 0x40e62b;\n    fcn.00430d40();\ncode_r0x0040e62b:\n    *(*0x20 + -0x68) = 0x40e63c;\n    fcn.00430d40();\ncode_r0x0040e63c:\n    unaff_RBX = 0x49e640;\n    *(*0x20 + -0x68) = 0x40e64f;\n    in_RAX = fcn.004305a0();\ncode_r0x0040e650:\n    *(puVar11 + 8) = in_RAX;\n    *(puVar11 + 0x10) = unaff_RBX;\n    *(puVar11 + 0x18) = arg1;\n    *(puVar11 + 0x20) = unaff_RDI;\n    *(puVar11 + -8) = 0x40e669;\n    fcn.00457040();\n    in_RAX = *(puVar11 + 8);\n    unaff_RBX = *(puVar11 + 0x10);\n    arg1 = *(puVar11 + 0x18);\n    unaff_RDI = *(puVar11 + 0x20);\n    *0x20 = puVar11;\n    goto code_r0x0040e2a0;\n}\n",
        "token_count": 2707
    },
    "0040e6a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040e6a0(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    uVar1 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar1 = uVar1 - 1;\n    }\n    fcn.0040e740((1 << (uVar1 & 0x3f)) - 1U & arg1);\n    if (*(unaff_RBX + 0x18) != 0) {\n        fcn.0040e740(*(unaff_RBX + 0x20));\n    }\n    return;\n}\n",
        "token_count": 213
    },
    "0040eb60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040eb60(int64_t arg1)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_RBX;\n    \n    if (unaff_RBX != arg1) {\n        if ((*0x557ed4 != '\\0') && (in_RAX[1] != 0)) {\n            fcn.0040f5e0(in_RAX[1]);\n        }\n        fcn.0045a040(*in_RAX);\n        if (*0x557ed5 != '\\0') {\n            fcn.00403440(arg1);\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "0040ec00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040ec00(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t arg1_00;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    uint32_t uVar4;\n    \n    if ((((*0x557ed4 != '\\0') && (in_RAX != 0)) && (*(in_RAX + 8) != 0)) && (7 < unaff_RDI)) {\n        fcn.0040f5e0(unaff_RDI);\n    }\n    fcn.0045a040(unaff_RDI);\n    iVar2 = 0;\n    while( true ) {\n        if (8 < iVar2) {\n            return;\n        }\n        uVar3 = iVar2 >> 3;\n        if (1 < uVar3) break;\n        arg1_00 = iVar2 + uVar3 * -8;\n        if (arg1_00 < 0) {\n            fcn.0042e7c0();\n            break;\n        }\n        uVar4 = 1 << (arg1_00 & 0x1f) & -(arg1_00 < 0x20);\n        if ((uVar4 & *(unaff_RSI + 0x108 + uVar3)) != 0) {\n            if (*0x557ed0 == 0) {\n                *(unaff_RSI + 0xc0 + iVar2 * 8) = *(unaff_RSI + iVar2 * 8);\n            }\n            else {\n                fcn.004593c0(arg1_00, unaff_RSI, -(arg1_00 < 0x20), uVar4);\n            }\n        }\n        iVar2 = iVar2 + 1;\n    }\n    fcn.00459720(2);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 436
    },
    "0040ed20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040ed20(int64_t arg1)\n\n{\n    int64_t *in_RAX;\n    int64_t arg1_00;\n    int64_t unaff_RBX;\n    int64_t unaff_RSI;\n    int64_t unaff_RDI;\n    \n    if (unaff_RSI < arg1) {\n        arg1 = unaff_RSI;\n    }\n    if (arg1 == 0) {\n        return 0;\n    }\n    if (*0x557ed5 != '\\0') {\n        fcn.004034e0(unaff_RDI);\n    }\n    if (unaff_RDI != unaff_RBX) {\n        arg1_00 = arg1 * *in_RAX;\n        if (*0x557ed4 != '\\0') {\n            fcn.0040f5e0((arg1_00 - *in_RAX) + in_RAX[1]);\n        }\n        fcn.0045a040(arg1_00);\n        return arg1;\n    }\n    return arg1;\n}\n",
        "token_count": 229
    },
    "0040ee00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040ee00(void)\n\n{\n    ulong *in_RAX;\n    \n    if ((*0x557ed4 != '\\0') && (in_RAX[1] != 0)) {\n        fcn.0040f5e0(in_RAX[1]);\n    }\n    fcn.00459d80(*in_RAX);\n    return;\n}\n",
        "token_count": 80
    },
    "0040f020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040f020(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.004324c0();\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432c20();\n    fcn.00432540();\n    if (in_RAX != 0) {\n        if (*(in_RAX + 99) == '\\x01') {\n            fcn.004324c0();\n            fcn.00432dc0();\n            fcn.00432540();\n        }\n        else {\n            fcn.004324c0();\n            fcn.00432dc0();\n            fcn.00432540();\n        }\n        fcn.004324c0();\n        fcn.00432dc0();\n        fcn.00432c20();\n        fcn.00432dc0();\n        fcn.00432c20();\n        fcn.00432dc0();\n        fcn.00432ac0();\n        fcn.00432540();\n    }\n    fcn.004324c0();\n    fcn.00432720();\n    fcn.00432540();\n    if (arg1 != 0) goto code_r0x0040f170;\n    do {\n        *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n        fcn.00430d40();\ncode_r0x0040f170:\n        fcn.004324c0();\n        fcn.00432dc0();\n        fcn.00432c20();\n        fcn.00432dc0();\n        fcn.00432c20();\n        fcn.00432dc0();\n        fcn.00432540();\n        fcn.0041a6a0(arg1);\n    } while( true );\n}\n",
        "token_count": 453
    },
    "0040f260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0040f260(ulong arg1)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x52a0d8);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 != 0) {\n        if (((*(iVar2 + 99) == '\\x01') && (uVar1 = *(iVar2 + 0x18),  uVar1 <= in_RAX)) &&\n           (in_RAX <= *(iVar2 + 0x70) && *(iVar2 + 0x70) != in_RAX)) {\n            return *(iVar2 + 0x68) * (*(iVar2 + 0x5c) * (in_RAX - uVar1) >> 0x20) + uVar1;\n        }\n        if (*(iVar2 + 99) != '\\x02') {\n            if (*0x5580c0 != 0) {\n                fcn.0040f020(unaff_RBX);\n            }\n            return 0;\n        }\n        return 0;\n    }\n    if ((in_RAX == 0xdeaddeaddeaddead) && (*0x5580c0 != 0)) {\n        fcn.0040f020(unaff_RBX);\n    }\n    return 0;\n}\n",
        "token_count": 468
    },
    "0040fc60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040fc60(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_RSI;\n    uint8_t *puVar5;\n    int64_t iVar6;\n    uint64_t unaff_RDI;\n    uint32_t uVar7;\n    int64_t unaff_R14;\n    int64_t iVar8;\n    \n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    uVar7 = 1 << (unaff_RDI >> 3 & 7);\n    puVar5 = unaff_RSI + (unaff_RDI >> 6);\n    uVar4 = 0;\n    iVar8 = unaff_RBX;\n    do {\n        if (arg1 <= uVar4) {\n            return;\n        }\n        if (uVar7 == '\\0') {\n            if (puVar5[1] != 0) {\n                uVar7 = 1;\n                puVar5 = puVar5 + 1;\n                goto code_r0x0040fce9;\n            }\n            uVar4 = uVar4 + 0x38;\n            puVar5 = puVar5 + 1;\n        }\n        else {\ncode_r0x0040fce9:\n            if ((*puVar5 & uVar7) != 0) {\n                if (unaff_RBX == 0) {\n                    puVar2 = *(iVar1 + 0x16c0);\n                    *puVar2 = *(uVar4 + in_RAX);\n                    puVar2[1] = 0;\n                    iVar6 = *(iVar1 + 0x16c0) + 0x10;\n                    *(iVar1 + 0x16c0) = iVar6;\n                    if (*(iVar1 + 0x16c8) == iVar6) {\n                        unaff_RBX = iVar8;\n                        fcn.00429ba0();\n                        uVar7 = uVar7 & 0xff;\n                        iVar8 = unaff_RBX;\n                    }\n                }\n                else {\n                    puVar2 = *(iVar1 + 0x16c0);\n                    uVar3 = *(uVar4 + unaff_RBX);\n                    *puVar2 = *(uVar4 + in_RAX);\n                    puVar2[1] = uVar3;\n                    iVar6 = *(iVar1 + 0x16c0) + 0x10;\n                    *(iVar1 + 0x16c0) = iVar6;\n                    if (*(iVar1 + 0x16c8) == iVar6) {\n                        unaff_RBX = iVar8;\n                        fcn.00429ba0();\n                        uVar7 = uVar7 & 0xff;\n                        iVar8 = unaff_RBX;\n                    }\n                }\n            }\n            uVar7 = uVar7 << 1;\n        }\n        uVar4 = uVar4 + 8;\n    } while( true );\n}\n",
        "token_count": 679
    },
    "0040fe00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040fe00(int64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    code *pcVar4;\n    int64_t *in_RAX;\n    int64_t unaff_RBX;\n    uint8_t *puVar5;\n    int64_t unaff_RDI;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    int64_t iVar9;\n    \n    if (in_RAX != NULL) {\n        if (*in_RAX == unaff_RDI) {\n            if ((*(in_RAX + 0x17) & 0x40) == 0) {\n                if (*0x557ed4 != '\\0') {\n                    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n                    puVar5 = in_RAX[4];\n                    uVar7 = 0;\n                    iVar9 = unaff_RBX;\n                    for (uVar6 = 0; uVar6 <= in_RAX[1] && in_RAX[1] != uVar6; uVar6 = uVar6 + 8) {\n                        if ((uVar6 & 0x3f) == 0) {\n                            uVar7 = *puVar5;\n                            puVar5 = puVar5 + 1;\n                        }\n                        else {\n                            uVar7 = uVar7 >> 1;\n                        }\n                        if ((uVar7 & 1) != 0) {\n                            puVar2 = *(iVar1 + 0x16c0);\n                            uVar3 = *(uVar6 + arg1);\n                            *puVar2 = *(uVar6 + unaff_RBX);\n                            puVar2[1] = uVar3;\n                            iVar8 = *(iVar1 + 0x16c0) + 0x10;\n                            *(iVar1 + 0x16c0) = iVar8;\n                            if (*(iVar1 + 0x16c8) == iVar8) {\n                                unaff_RBX = iVar9;\n                                fcn.00429ba0();\n                                iVar9 = unaff_RBX;\n                            }\n                        }\n                    }\n                    return;\n                }\n                return;\n            }\n            fcn.00450e40();\n            fcn.004324c0();\n            fcn.00432dc0();\n            fcn.00432dc0();\n            fcn.00432dc0();\n            fcn.00432540();\n            fcn.00430d40();\n        }\n        fcn.00450e40();\n        fcn.004324c0();\n        fcn.00432dc0();\n        fcn.00432dc0();\n        fcn.00432dc0();\n        fcn.00432ac0();\n        fcn.00432dc0();\n        fcn.00432ac0();\n        fcn.00432720();\n        fcn.00432540();\n        fcn.00430d40();\n    }\n    fcn.00430d40();\n    pcVar4 = swi(3);\n    (*pcVar4)();\n    return;\n}\n",
        "token_count": 694
    },
    "00410e40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00410e40(ulong arg1, ulong noname_1, uint64_t arg3, uint64_t arg4)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    uint unaff_EBX;\n    uint64_t uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    ulong unaff_RDI;\n    uint64_t uVar6;\n    uint64_t in_R10;\n    ulong in_R11;\n    uint64_t unaff_R12;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        uVar4 = unaff_RSI;\n        uVar6 = arg3;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = unaff_RDI;\n            if ((in_R10 & 0x1f) == 0) {\n                *(*0x20 + 0x38) = in_R10;\n                *(*0x20 + 0x20) = unaff_RSI;\n                *(*0x20 + -0x10) = in_RAX;\n                if (arg4 == arg3) {\n                    unaff_RDI = 2;\n                    *(*0x20 + -0x70) = 0x410f17;\n                    arg3 = fcn.004112e0(in_RAX);\n                    uVar4 = *(*0x20 + 0x20);\n                    if (uVar4 != arg3 * 8) {\n                        *(*0x20 + -0x40) = arg3;\n                        *(*0x20 + -0x70) = 0x410f6e;\n                        fcn.004324c0();\n                        *(*0x20 + -0x70) = 0x410f7f;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x70) = 0x410f89;\n                        fcn.00432ac0();\n                        *(*0x20 + -0x70) = 0x410f9a;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x70) = 0x410fa7;\n                        fcn.00432ac0();\n                        *(*0x20 + -0x70) = 0x410fac;\n                        fcn.00432720();\n                        *(*0x20 + -0x70) = 0x410fb1;\n                        fcn.00432540();\n                        uVar2 = 0x2b;\n                        *(*0x20 + -0x70) = 0x410fc5;\n                        uVar1 = fcn.00430d40();\n                        goto code_r0x00410fc5;\n                    }\ncode_r0x00410f2b:\n                    *(*0x20 + -0x70) = 0x410f5a;\n                    fcn.00459d80(*(*0x20 + -0x10) + (arg3 + 3 >> 2), *(*0x20 + 0x38) >> 5);\n                    return;\n                }\n                if (arg3 != 0) {\n                    uVar1 = arg4 / arg3;\n                    *(*0x20 + -0x38) = 0;\n                    *(*0x20 + -0x30) = in_XMM15;\n                    *(*0x20 + -0x20) = in_XMM15;\n                    unaff_R12 = arg3 >> 3;\n                    uVar4 = unaff_RSI >> 3;\n                    uVar6 = unaff_R12 - uVar4;\n                    arg4 = unaff_RSI;\n                    if (uVar6 == 0) {\n                        uVar2 = 0;\n                        goto code_r0x00410fc5;\n                    }\n                    *(*0x20 + -0x38) = 1;\n                    if (uVar6 < 2) {\n                        uVar2 = 2;\n                        goto code_r0x00410fc5;\n                    }\n                    *(*0x20 + -0x36) = 0x81;\n                    uVar4 = uVar6 - 1;\n                    uVar2 = 3;\ncode_r0x00411110:\n                    if (0x7f < uVar4) {\n                        if (0x27 < uVar2) goto code_r0x00411145;\ncode_r0x004110f9:\n                        *(*0x20 + (uVar2 - 0x38)) = uVar4 | 0x80;\n                        uVar4 = uVar4 >> 7;\n                        uVar2 = uVar2 + 1;\n                        uVar6 = uVar4;\n                        goto code_r0x00411110;\n                    }\n                    if (uVar2 < 0x28) {\n                        *(*0x20 + (uVar2 - 0x38)) = uVar4;\n                        uVar2 = uVar2 + 1;\ncode_r0x00410fc5:\n                        if (uVar2 < 0x28) {\n                            *(*0x20 + (uVar2 - 0x38)) = 0x80;\n                            uVar6 = uVar2;\n                            while( true ) {\n                                uVar4 = uVar6 + 1;\n                                if (unaff_R12 < 0x80) break;\n                                if (0x27 < uVar4) goto code_r0x004110df;\n                                *(*0x20 + (uVar6 - 0x37)) = unaff_R12 | 0x80;\n                                unaff_R12 = unaff_R12 >> 7;\n                                uVar6 = uVar4;\n                            }\n                            if (uVar4 < 0x28) {\n                                *(*0x20 + (uVar6 - 0x37)) = unaff_R12;\n                                uVar6 = uVar1 - 1;\n                                uVar5 = uVar4;\n                                while( true ) {\n                                    uVar4 = uVar5 + 1;\n                                    if (uVar6 < 0x80) break;\n                                    if (0x27 < uVar4) goto code_r0x004110c5;\n                                    *(*0x20 + (uVar5 - 0x37)) = uVar6 | 0x80;\n                                    uVar6 = uVar6 >> 7;\n                                    unaff_R12 = uVar6;\n                                    uVar5 = uVar4;\n                                }\n                                if (uVar4 < 0x28) {\n                                    *(*0x20 + (uVar5 - 0x37)) = uVar6;\n                                    if (uVar5 + 2 < 0x28) {\n                                        *(*0x20 + -0x40) = arg3;\n                                        *(*0x20 + -0x48) = uVar1 - 1;\n                                        *(*0x20 + (uVar5 - 0x36)) = 0;\n                                        *(*0x20 + -0x70) = 0x411087;\n                                        fcn.004112e0(in_RAX);\n                                        arg3 = *(*0x20 + -0x40) * *(*0x20 + -0x48) + *(*0x20 + 0x20) >> 3;\n                                        goto code_r0x00410f2b;\n                                    }\n                                    *(*0x20 + -0x70) = 0x4110b6;\n                                    fcn.00459720(0x28);\n                                }\n                                *(*0x20 + -0x70) = 0x4110c5;\n                                fcn.00459720(0x28);\ncode_r0x004110c5:\n                                *(*0x20 + -0x70) = 0x4110d2;\n                                fcn.00459720(0x28);\n                            }\n                            *(*0x20 + -0x70) = 0x4110df;\n                            fcn.00459720(0x28);\ncode_r0x004110df:\n                            *(*0x20 + -0x70) = 0x4110ec;\n                            fcn.00459720(0x28);\n                        }\n                        in_RAX = 0x28;\n                        *(*0x20 + -0x70) = 0x4110f9;\n                        uVar1 = fcn.00459720(0x28);\n                        goto code_r0x004110f9;\n                    }\n                    *(*0x20 + -0x70) = 0x411145;\n                    fcn.00459720(0x28);\ncode_r0x00411145:\n                    arg1._0_4_ = 0x28;\n                    *(*0x20 + -0x70) = 0x411152;\n                    fcn.00459720(0x28);\n                }\n                *(*0x20 + -0x70) = 0x411157;\n                fcn.0042e820();\n            }\n            unaff_EBX = 0x27;\n            *(*0x20 + -0x70) = 0x411168;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + 0x14) = arg1;\n        *(puVar3 + 0x18) = unaff_RDI;\n        *(puVar3 + 0x20) = uVar4;\n        *(puVar3 + 0x28) = uVar6;\n        *(puVar3 + 0x30) = arg4;\n        *(puVar3 + 0x38) = in_R10;\n        *(puVar3 + 0x40) = in_R11;\n        *(puVar3 + -8) = 0x411199;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x14);\n        unaff_RDI = *(puVar3 + 0x18);\n        unaff_RSI = *(puVar3 + 0x20);\n        arg3 = *(puVar3 + 0x28);\n        arg4 = *(puVar3 + 0x30);\n        in_R10 = *(puVar3 + 0x38);\n        in_R11 = *(puVar3 + 0x40);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 2429
    },
    "004112e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint8_t * fcn.004112e0(uint8_t *arg1)\n\n{\n    int64_t iVar1;\n    uint8_t uVar2;\n    uint8_t *in_RAX;\n    uint8_t *puVar3;\n    uint64_t uVar4;\n    uint8_t uVar5;\n    uint8_t *puVar6;\n    uint8_t *unaff_RBX;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    int64_t unaff_RDI;\n    uint8_t *puVar11;\n    uint8_t *puVar12;\n    uint64_t uVar13;\n    uint8_t *puVar14;\n    uint8_t *puVar15;\n    \n    puVar11 = NULL;\n    puVar7 = arg1;\n    puVar8 = arg1;\n    puVar6 = NULL;\ncode_r0x004114b4:\n    while( true ) {\n        while( true ) {\n            for (; 0x7 < puVar6; puVar6 = puVar6 + -8) {\n                if (unaff_RDI == 1) {\n                    *puVar7 = puVar11;\n                    puVar7 = puVar7 + 1;\n                }\n                else {\n                    *puVar7 = puVar11 & 0xf | 0xf0;\n                    puVar7[1] = puVar11 >> 4 & 0xf | 0xf0;\n                    puVar7 = puVar7 + 2;\n                }\n                puVar11 = puVar11 >> 8;\n            }\n            uVar2 = *in_RAX;\n            puVar14 = uVar2 & 0x7f;\n            in_RAX = in_RAX + 1;\n            uVar5 = puVar6;\n            if (uVar2 < '\\0') break;\n            if ((uVar2 & 0x7f) == 0) {\n                if (unaff_RBX == NULL) {\n                    if (unaff_RDI == 1) {\n                        iVar1 = (puVar7 - puVar8) * 8;\n                        for (puVar8 = puVar6 + (-puVar6 & 7); puVar8 != NULL; puVar8 = puVar8 + -8) {\n                            *puVar7 = puVar11;\n                            puVar11 = puVar11 >> 8;\n                            puVar7 = puVar7 + 1;\n                        }\n                    }\n                    else {\n                        iVar1 = (puVar7 - puVar8) * 4;\n                        for (puVar8 = puVar6 + (-puVar6 & 3); puVar8 != NULL; puVar8 = puVar8 + -4) {\n                            *puVar7 = puVar11 & 0xf | 0xf0;\n                            puVar11 = puVar11 >> 4;\n                            puVar7 = puVar7 + 1;\n                        }\n                    }\n                    return puVar6 + iVar1;\n                }\n                in_RAX = unaff_RBX;\n                unaff_RBX = NULL;\n            }\n            else {\n                for (uVar4 = 0; uVar4 < puVar14 >> 3; uVar4 = uVar4 + 1) {\n                    uVar13 = puVar11 | *in_RAX << (uVar5 & 0x3f);\n                    if (unaff_RDI == 1) {\n                        *puVar7 = uVar13;\n                        puVar7 = puVar7 + 1;\n                    }\n                    else {\n                        *puVar7 = uVar13 & 0xf | 0xf0;\n                        puVar7[1] = uVar13 >> 4 & 0xf | 0xf0;\n                        puVar7 = puVar7 + 2;\n                    }\n                    puVar11 = uVar13 >> 8;\n                    in_RAX = in_RAX + 1;\n                }\n                if ((uVar2 & 7) != 0) {\n                    puVar11 = puVar11 | *in_RAX << (uVar5 & 0x3f);\n                    puVar6 = puVar6 + (uVar2 & 7);\n                    in_RAX = in_RAX + 1;\n                }\n            }\n        }\n        if ((uVar2 & 0x7f) == 0) {\n            uVar4 = 0;\n            while( true ) {\n                uVar2 = *in_RAX;\n                puVar14 = puVar14 | (uVar2 & 0x7f) << (uVar4 & 0x3f) & -(uVar4 < 0x40);\n                in_RAX = in_RAX + 1;\n                if (-1 < uVar2) break;\n                uVar4 = uVar4 + 7;\n            }\n        }\n        uVar13 = 0;\n        uVar4 = 0;\n        while( true ) {\n            uVar2 = *in_RAX;\n            uVar13 = uVar13 | -(uVar4 < 0x40) & (uVar2 & 0x7f) << (uVar4 & 0x3f);\n            in_RAX = in_RAX + 1;\n            if (-1 < uVar2) break;\n            uVar4 = uVar4 + 7;\n        }\n        puVar3 = uVar13 * puVar14;\n        if (puVar14 < 0x3a) break;\n        uVar4 = puVar14 - puVar6;\n        if (unaff_RDI == 1) {\n            uVar13 = uVar4 & 7;\n            puVar14 = puVar7 + -(uVar4 + 7 >> 3);\n            if (uVar13 != 0) {\n                puVar11 = puVar11 | (*puVar14 >> (-(uVar13 - 8) & 0x3f) & -(-(uVar13 - 8) < 0x40)) << (uVar5 & 0x3f);\n                puVar6 = puVar6 + uVar13;\n                puVar3 = puVar3 + -uVar13;\n                puVar14 = puVar14 + 1;\n                puVar8 = arg1;\n            }\n            for (uVar4 = puVar3 >> 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n                uVar13 = puVar11 | *puVar14 << (puVar6 & 0x3f) & -(puVar6 < 0x40);\n                *puVar7 = uVar13;\n                puVar11 = uVar13 >> 8;\n                puVar14 = puVar14 + 1;\n                puVar7 = puVar7 + 1;\n            }\n            uVar4 = puVar3 & 7;\n            if (uVar4 != 0) {\n                puVar11 = puVar11 | ((1 << uVar4) - 1U & *puVar14) << (puVar6 & 0x3f) & -(puVar6 < 0x40);\n                puVar6 = puVar6 + uVar4;\n            }\n        }\n        else {\n            uVar13 = uVar4 & 3;\n            puVar14 = puVar7 + -(uVar4 + 3 >> 2);\n            if (uVar13 != 0) {\n                puVar11 = puVar11 | ((*puVar14 & 0xf) >> (-(uVar13 - 4) & 0x3f) & -(-(uVar13 - 4) < 0x40)) <<\n                                    (uVar5 & 0x3f);\n                puVar6 = puVar6 + uVar13;\n                puVar3 = puVar3 + -uVar13;\n                puVar14 = puVar14 + 1;\n                puVar8 = arg1;\n            }\n            for (uVar4 = puVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n                uVar13 = puVar11 | (*puVar14 & 0xf) << (puVar6 & 0x3f) & -(puVar6 < 0x40);\n                *puVar7 = uVar13 & 0xf | 0xf0;\n                puVar11 = uVar13 >> 4;\n                puVar14 = puVar14 + 1;\n                puVar7 = puVar7 + 1;\n            }\n            uVar4 = puVar3 & 3;\n            if (uVar4 != 0) {\n                puVar11 = puVar11 | ((1 << uVar4) - 1U & *puVar14) << (puVar6 & 0x3f) & -(puVar6 < 0x40);\n                puVar6 = puVar6 + uVar4;\n            }\n        }\n    }\n    puVar10 = puVar6;\n    puVar12 = puVar11;\n    puVar15 = puVar7;\n    if (unaff_RDI != 1) {\n        do {\n            puVar15 = puVar15 + -1;\n            puVar9 = puVar6;\n            if (puVar14 <= puVar10) goto code_r0x00411665;\n            puVar10 = puVar10 + 4;\n            puVar12 = puVar12 << 4 | *puVar15 & 0xf;\n        } while( true );\n    }\n    do {\n        puVar15 = puVar15 + -1;\n        puVar9 = puVar6;\n        if (puVar14 <= puVar10) {\ncode_r0x00411665:\n            puVar6 = puVar10;\n            if (puVar14 < puVar10) {\n                puVar15 = -(puVar10 - puVar14 < 0x40);\n                puVar12 = puVar12 >> (puVar10 - puVar14 & 0x3f) & puVar15;\n                puVar6 = puVar14;\n            }\n            if (puVar6 == 0x1) {\n                puVar6 = puVar3;\n                if (puVar12 == 0x1) {\n                    puVar12 = 0x1ffffffffffffff;\n                    puVar6 = 0x39;\n                }\n                goto code_r0x004116ce;\n            }\n            puVar10 = puVar6 * 2;\n            puVar14 = puVar6;\n            if (0x39 < puVar10) goto code_r0x004116ce;\n            for (; puVar14 < 0x41; puVar14 = puVar14 * 2) {\n                puVar10 = puVar12;\n                puVar12 = puVar12 << (puVar14 & 0x3f) & -(puVar14 < 0x40) | puVar12;\n                puVar15 = puVar6;\n            }\n            if (puVar6 != NULL) break;\n            puVar3 = fcn.0042e820();\n        }\n        puVar10 = puVar10 + 8;\n        puVar12 = puVar12 << 8 | *puVar15;\n    } while( true );\n    puVar6 = puVar6 * SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x39)) / ZEXT816(puVar6), 0);\n    puVar12 = puVar12 & (1 << (puVar6 & 0x3f) & -(puVar6 < 0x40)) - 1;\ncode_r0x004116ce:\n    while (puVar6 <= puVar3) {\n        puVar11 = puVar11 | puVar12 << (puVar9 & 0x3f) & -(puVar9 < 0x40);\n        puVar9 = puVar6 + puVar9;\n        if (unaff_RDI == 1) {\n            for (; 0x7 < puVar9; puVar9 = puVar9 + -8) {\n                *puVar7 = puVar11;\n                puVar11 = puVar11 >> 8;\n                puVar7 = puVar7 + 1;\n            }\n        }\n        else {\n            for (; 0x3 < puVar9; puVar9 = puVar9 + -4) {\n                *puVar7 = puVar11 & 0xf | 0xf0;\n                puVar11 = puVar11 >> 4;\n                puVar7 = puVar7 + 1;\n            }\n        }\n        puVar3 = puVar3 + -puVar6;\n    }\n    puVar6 = puVar9;\n    if (puVar3 != NULL) {\n        puVar11 = puVar11 | (puVar12 & (1 << (puVar3 & 0x3f) & -(puVar3 < 0x40)) - 1) << (puVar9 & 0x3f) &\n                            -(puVar9 < 0x40);\n        puVar6 = puVar9 + puVar3;\n    }\n    goto code_r0x004114b4;\n}\n",
        "token_count": 2901
    },
    "00411a00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t * fcn.00411a00(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    int64_t *piStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    piStack32 = NULL;\n    auStack24 = CONCAT88(&piStack32, 0x411ae0);\n    fcn.00456f00();\n    for (iVar2 = 0; iVar2 < 0x88; iVar2 = iVar2 + 1) {\n        piStack32[iVar2 + 5] = 0x558320;\n    }\n    if (*0x557cf8 == 1) {\n        iVar2 = 0;\n    }\n    else {\n        iVar1 = fcn.0040b5c0();\n        iVar2 = iVar1;\n    }\n    *piStack32 = iVar2;\n    return piStack32;\n}\n",
        "token_count": 247
    },
    "00411c80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00411c80(void)\n\n{\n    int64_t *piVar1;\n    uint8_t uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint8_t unaff_BL;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar4 = unaff_BL;\n            if (uVar4 < 0x88) {\n                iVar3 = *(in_RAX + 0x28 + uVar4 * 8);\n                if (*(iVar3 + 0x38) == *(iVar3 + 0x60)) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + 0x10) = unaff_BL;\n                    *(*0x20 + -0x10) = uVar4;\n                    if (iVar3 == 0x558320) {\ncode_r0x00411d17:\n                        *(*0x20 + -0x50) = 0x411d2f;\n                        iVar3 = fcn.00412480();\n                        if (iVar3 != 0) {\n                            if (*(iVar3 + 0x38) != *(iVar3 + 0x60)) {\n                                *(*0x20 + -0x20) = iVar3;\n                                *(iVar3 + 0x58) = *0x52a068 + 3;\n                                *(*0x20 + -0x50) = 0x411d67;\n                                iVar3 = fcn.00429960();\n                                uVar2 = *(*0x20 + 0x10);\n                                uVar4 = uVar2 >> 1;\n                                if (uVar4 < 0x44) {\n                                    piVar1 = iVar3 + uVar4 * 8 + 0x48;\n                                    LOCK();\n                                    *piVar1 = *piVar1 + (*(*(*0x20 + -0x20) + 0x38) - *(*(*0x20 + -0x20) + 0x60));\n                                    if (uVar2 == 5) {\n                                        iVar5 = *(*0x20 + 8);\n                                        LOCK();\n                                        *(iVar3 + 0x30) = *(iVar3 + 0x30) + *(iVar5 + 0x20);\n                                        *(iVar5 + 0x20) = 0;\n                                    }\n                                    *(*0x20 + -0x50) = 0x411dcf;\n                                    fcn.00429a60();\n                                    iVar3 = *(*0x20 + -0x20);\n                                    LOCK();\n                                    *0x558530 = *0x558530 +\n                                                (*(iVar3 + 0x20) * 0x2000 - *(iVar3 + 0x60) * *(iVar3 + 0x68));\n                                    iVar5 = *(*0x20 + 8);\n                                    LOCK();\n                                    *0x558538 = *0x558538 + *(iVar5 + 8);\n                                    *(iVar5 + 8) = 0;\n                                    if (*0x509e70 != '\\0') {\n                                        *(*0x20 + -0x18) = 0;\n                                        *(*0x20 + -0x18) = *0x558530;\n                                        *(*0x20 + -0x50) = 0x411e51;\n                                        fcn.0044b680(*0x20 + -0x18);\n                                        iVar3 = *(*0x20 + -0x20);\n                                        iVar5 = *(*0x20 + 8);\n                                    }\n                                    if (*0x557ca4 != 0) {\n                                        *(*0x20 + -0x50) = 0x411e70;\n                                        fcn.0041afe0();\n                                        iVar3 = *(*0x20 + -0x20);\n                                        iVar5 = *(*0x20 + 8);\n                                    }\n                                    *(iVar5 + 0x28 + *(*0x20 + -0x10) * 8) = iVar3;\n                                    return;\n                                }\n                                *(*0x20 + -0x50) = 0x411e9b;\n                                fcn.00459720(0x44);\n                            }\n                            *(*0x20 + -0x50) = 0x411eac;\n                            fcn.00430d40();\n                        }\n                        *(*0x20 + -0x50) = 0x411ebd;\n                        fcn.00430d40();\n                    }\n                    else if (*(iVar3 + 0x58) == *0x52a068 + 3) {\n                        *(*0x20 + -0x50) = 0x411d12;\n                        fcn.00412b80();\n                        goto code_r0x00411d17;\n                    }\n                    *(*0x20 + -0x50) = 0x411ece;\n                    fcn.00430d40();\n                }\n                unaff_BL = 0x28;\n                *(*0x20 + -0x50) = 0x411edf;\n                fcn.00430d40();\n            }\n            *(*0x20 + -0x50) = 0x411eec;\n            in_RAX = fcn.00459720(0x88);\n        }\n        *(puVar6 + 8) = in_RAX;\n        puVar6[0x10] = unaff_BL;\n        *(puVar6 + -8) = 0x411efb;\n        fcn.00457040();\n        in_RAX = *(puVar6 + 8);\n        unaff_BL = puVar6[0x10];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1343
    },
    "00411f20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00411f20(uchar param_1)\n\n{\n    int64_t *piVar1;\n    ulong uVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uchar unaff_DIL;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX <= unaff_RBX + 0x2000) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x29) = param_1;\n                *(*0x20 + 0x19) = unaff_DIL;\n                uVar5 = unaff_RBX >> 0xd;\n                if ((unaff_RBX & 0x1fff) != 0) {\n                    uVar5 = (unaff_RBX >> 0xd) + 1;\n                }\n                *(*0x20 + -0x20) = uVar5;\n                *(*0x20 + -0x18) = uVar5 << 0xd;\n                *(*0x20 + -0x60) = 0x411f86;\n                fcn.0041f6e0();\n                param_1 = *(*0x20 + 0x19);\n                *(*0x20 + -0x2a) = param_1;\n                uVar2 = *(*0x20 + -0x20);\n                unaff_DIL = *(*0x20 + -0x29);\n                *(*0x20 + -0x60) = 0x411fa9;\n                iVar3 = fcn.004214a0();\n                if (iVar3 != 0) {\n                    *(*0x20 + -0x28) = iVar3;\n                    *(*0x20 + -0x2b) = uVar2;\n                    *(*0x20 + -0x60) = 0x411fc7;\n                    iVar3 = fcn.00429960();\n                    LOCK();\n                    *(iVar3 + 0x38) = *(iVar3 + 0x38) + *(*0x20 + -0x18);\n                    LOCK();\n                    piVar1 = iVar3 + 0x40;\n                    iVar3 = *piVar1;\n                    *piVar1 = *piVar1 + 1;\n                    *(*0x20 + -0x60) = 0x411fe9;\n                    fcn.00429a60(iVar3);\n                    LOCK();\n                    *0x558530 = *0x558530 + *(*0x20 + -0x18);\n                    if (*0x509e70 != '\\0') {\n                        *(*0x20 + -0x10) = 0;\n                        *(*0x20 + -0x10) = *0x558530;\n                        unaff_DIL = 1;\n                        *(*0x20 + -0x60) = 0x412037;\n                        fcn.0044b680(*0x20 + -0x10);\n                    }\n                    if (*0x557ca4 != 0) {\n                        *(*0x20 + -0x60) = 0x41204e;\n                        fcn.0041afe0();\n                    }\n                    if (*(*0x20 + -0x2a) < 0x88) {\n                        *(*0x20 + -0x60) = 0x412093;\n                        fcn.00429300(*(*0x20 + -0x2a) * 0xc0 + 0x52a3d8, (*0x52a068 >> 1 & 1) * 5);\n                        iVar3 = *(*0x20 + -0x28);\n                        *(iVar3 + 0x70) = *(iVar3 + 0x18) + *(*0x20 + 0x10);\n                        uVar5 = *(iVar3 + 0x18) + 0x800000000000;\n                        uVar4 = uVar5 >> 0x2a;\n                        if (uVar4 < 0x40) {\n                            uVar5 = uVar5 >> 0x16;\n                            if (*(*(uVar4 * 8 + 0x52a0d8) + (uVar5 & 0xfffff) * 8) == 0) {\n                                uVar5 = 0;\n                            }\n                            *(*0x20 + -0x60) = 0x41212d;\n                            fcn.00410040(uVar5 & 0xffffffff);\n                            return *(*0x20 + -0x28);\n                        }\n                        *(*0x20 + -0x60) = 0x41214b;\n                        fcn.00459740(0x40);\n                    }\n                    param_1 = 0x88;\n                    *(*0x20 + -0x60) = 0x412155;\n                    fcn.00459720(0x88);\n                }\n                *(*0x20 + -0x60) = 0x412166;\n                fcn.00430d40();\n            }\n            unaff_RBX = 0xd;\n            *(*0x20 + -0x60) = 0x412177;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        puVar6[0x18] = param_1;\n        puVar6[0x19] = unaff_DIL;\n        *(puVar6 + -8) = 0x412190;\n        fcn.00457040();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        param_1 = puVar6[0x18];\n        unaff_DIL = puVar6[0x19];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1418
    },
    "004121c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004121c0(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint uVar4;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x004121c0:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0x40;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        LOCK();\n        *0x558538 = *0x558538 + *(in_RAX + 8);\n        *(in_RAX + 8) = 0;\n        *(*0x20 + -0x2c) = *0x52a068;\n        iVar2 = 0;\n        uVar4 = *0x52a068;\n        do {\n            if (0x87 < iVar2) {\n                *(in_RAX + 0x10) = in_XMM15;\n                *(*0x20 + -0x48) = 0x412325;\n                iVar3 = fcn.00429960(uVar4);\n                iVar2 = *(*0x20 + 8);\n                LOCK();\n                piVar1 = iVar3 + 0x30;\n                iVar3 = *piVar1;\n                *piVar1 = *piVar1 + *(iVar2 + 0x20);\n                *(iVar2 + 0x20) = 0;\n                *(*0x20 + -0x48) = 0x412348;\n                fcn.00429a60(iVar2, iVar3);\n                if (*0x557ca4 != 0) {\n                    *(*0x20 + -0x48) = 0x41235d;\n                    fcn.0041afe0();\n                }\n                return;\n            }\n            iVar3 = *(in_RAX + 0x28 + iVar2 * 8);\n            if (iVar3 != 0x558320) {\n                *(*0x20 + -0x20) = iVar2;\n                *(*0x20 + -0x28) = iVar3;\n                *(*0x20 + -0x10) = *(iVar3 + 0x38);\n                *(*0x20 + -0x18) = *(iVar3 + 0x60);\n                *(*0x20 + -0x48) = 0x41224d;\n                iVar2 = fcn.00429960();\n                uVar5 = *(*0x20 + -0x20) >> 1 & 0x7f;\n                if (0x43 < uVar5) goto code_r0x00412367;\n                piVar1 = iVar2 + uVar5 * 8 + 0x48;\n                LOCK();\n                *piVar1 = *piVar1 + (*(*0x20 + -0x18) - *(*0x20 + -0x10));\n                *(*0x20 + -0x48) = 0x412290;\n                fcn.00429a60();\n                if (*(*(*0x20 + -0x28) + 0x58) != *(*0x20 + -0x2c) + 1) {\n                    LOCK();\n                    *0x558530 = *0x558530 + (*(*0x20 + -0x18) - *(*0x20 + -0x10)) * *(*(*0x20 + -0x28) + 0x68);\n                }\n                *(*0x20 + -0x48) = 0x4122e5;\n                fcn.00412b80(*(*0x20 + -0x20), *(*0x20 + -0x20) * 0xc0);\n                iVar2 = *(*0x20 + -0x20);\n                in_RAX = *(*0x20 + 8);\n                *(in_RAX + 0x28 + iVar2 * 8) = 0x558320;\n                uVar4 = *(*0x20 + -0x2c);\n            }\n            iVar2 = iVar2 + 1;\n        } while( true );\n    }\n    goto code_r0x00412375;\ncode_r0x00412367:\n    *(*0x20 + -0x48) = 0x412374;\n    in_RAX = fcn.00459720(0x44);\ncode_r0x00412375:\n    *(puVar6 + 8) = in_RAX;\n    *(puVar6 + -8) = 0x41237f;\n    fcn.00457040();\n    in_RAX = *(puVar6 + 8);\n    *0x20 = puVar6;\n    goto code_r0x004121c0;\n}\n",
        "token_count": 1129
    },
    "00412480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00412480(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint8_t *in_RAX;\n    int64_t iVar1;\n    char cVar2;\n    ulong uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar8;\n    \ncode_r0x00412480:\n    puVar7 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar7 = *0x20 + -0x70;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if (*in_RAX >> 1 < 0x44) {\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x78) = 0x4124c6;\n            fcn.0041f6e0();\n            if (*0x509e70 != '\\0') {\n                *(*0x20 + -0x78) = 0x4124d4;\n                fcn.0044c5c0();\n            }\n            *(*0x20 + -0x50) = *0x52a068;\n            *(*0x20 + -0x4c) = 0;\n            *(*0x20 + -0x5c) = *(*0x20 + -0x50) >> 1 & 1;\n            *(*0x20 + -0x10) = (*(*0x20 + -0x50) >> 1 & 1) * 5;\n            *(*0x20 + -0x78) = 0x41250b;\n            iVar1 = fcn.004294a0();\n            if (iVar1 != 0) {\n                cVar2 = '\\0';\n                goto code_r0x00412527;\n            }\n            iVar4 = *(*0x20 + -0x5c);\n            iVar1 = 100;\n            do {\n                if (iVar1 < 0) {\ncode_r0x004127c0:\n                    while (-1 < iVar1) {\n                        if (1 < -(iVar4 + -1)) {\n                            *(*0x20 + -0x78) = 0x412b47;\n                            fcn.00459720(2);\n                            goto code_r0x00412b47;\n                        }\n                        *(*0x20 + -0x58) = iVar1;\n                        *(*0x20 + -0x78) = 0x4127f1;\n                        iVar1 = fcn.004294a0();\n                        if (iVar1 == 0) break;\n                        if (*(iVar1 + 0x58) == *(*0x20 + -0x50) + -2) {\n                            if (*(*0x20 + -0x4c) == '\\0') {\n                                LOCK();\n                                *0x52a070 = *0x52a070 + 1;\n                                *(*0x20 + -0x4c) = 1;\n                            }\n                            LOCK();\n                            if (*(*0x20 + -0x50) + -2 == *(iVar1 + 0x58)) {\n                                *(iVar1 + 0x58) = *(*0x20 + -0x50) + -1;\n                                uVar3 = 1;\n                                iVar5 = iVar1;\n                            }\n                            else {\n                                uVar3 = 0;\n                                iVar5 = 0;\n                            }\n                        }\n                        else {\n                            uVar3 = 0;\n                            iVar5 = 0;\n                        }\n                        *(*0x20 + -0x48) = iVar5;\n                        if (uVar3 != '\\0') {\n                            *(*0x20 + -0x38) = iVar1;\n                            *(*0x20 + -0x78) = 0x41287c;\n                            fcn.0041e820();\n                            *(*0x20 + -0x78) = 0x412886;\n                            iVar1 = fcn.0040eec0(uVar3, iVar5, param_3, param_4);\n                            if (*(*(*0x20 + -0x48) + 0x38) != iVar1) {\n                                *(*(*0x20 + -0x48) + 0x30) = iVar1;\n                                if (*(*0x20 + -0x4c) != '\\0') {\n                                    *(*0x20 + -0x4c) = 0;\n                                    LOCK();\n                                    iVar4 = *0x52a070 + -1;\n                                    bVar8 = *0x52a070 == 1;\n                                    *0x52a070 = iVar4;\n                                    if ((bVar8 && *0x52a06c != 0) && (0 < *0x5580b0)) {\n                                        *(*0x20 + -0x18) = *0x558530;\n                                        *(*0x20 + -0x20) = *0x52a0b0;\n                                        *(*0x20 + -0x28) = *0x52a0a0;\n                                        *(*0x20 + -0x30) = *0x52a0b8;\n                                        *(*0x20 + -0x78) = 0x412934;\n                                        uVar6 = *0x52a0a0;\n                                        fcn.004324c0();\n                                        *(*0x20 + -0x78) = 0x412945;\n                                        fcn.00432dc0();\n                                        *(*0x20 + -0x78) = 0x412953;\n                                        fcn.00432ac0();\n                                        *(*0x20 + -0x78) = 0x412965;\n                                        fcn.00432dc0();\n                                        uVar3 = *(*0x20 + -0x20);\n                                        *(*0x20 + -0x78) = 0x41297b;\n                                        fcn.00432ac0();\n                                        *(*0x20 + -0x78) = 0x41298c;\n                                        fcn.00432dc0();\n                                        *(*0x20 + -0x78) = 0x412996;\n                                        fcn.00432ac0();\n                                        *(*0x20 + -0x78) = 0x4129a7;\n                                        fcn.00432dc0();\n                                        *(*0x20 + -0x78) = 0x4129b2;\n                                        fcn.004327c0(uVar3, uVar6);\n                                        *(*0x20 + -0x78) = 0x4129c5;\n                                        fcn.00432dc0();\n                                        *(*0x20 + -0x78) = 0x4129ca;\n                                        fcn.00432540();\n                                    }\n                                }\n                                cVar2 = '\\0';\n                                iVar1 = *(*0x20 + -0x38);\n                                goto code_r0x00412527;\n                            }\n                            *(*0x20 + -0x78) = 0x4128a8;\n                            fcn.00429300(*(*0x20 + -0x10));\n                        }\n                        iVar4 = *(*0x20 + -0x5c);\n                        iVar1 = *(*0x20 + -0x58) + -1;\n                    }\n                    if (*(*0x20 + -0x4c) != '\\0') {\n                        *(*0x20 + -0x4c) = 0;\n                        LOCK();\n                        iVar4 = *0x52a070 + -1;\n                        bVar8 = *0x52a070 == 1;\n                        *0x52a070 = iVar4;\n                        if ((bVar8 && *0x52a06c != 0) && (0 < *0x5580b0)) {\n                            *(*0x20 + -0x18) = *0x558530;\n                            *(*0x20 + -0x20) = *0x52a0b0;\n                            *(*0x20 + -0x28) = *0x52a0a0;\n                            *(*0x20 + -0x30) = *0x52a0b8;\n                            *(*0x20 + -0x78) = 0x412a65;\n                            uVar6 = *0x52a0a0;\n                            fcn.004324c0();\n                            *(*0x20 + -0x78) = 0x412a76;\n                            fcn.00432dc0();\n                            *(*0x20 + -0x78) = 0x412a85;\n                            fcn.00432ac0();\n                            *(*0x20 + -0x78) = 0x412a96;\n                            fcn.00432dc0();\n                            uVar3 = *(*0x20 + -0x20);\n                            *(*0x20 + -0x78) = 0x412aac;\n                            fcn.00432ac0();\n                            *(*0x20 + -0x78) = 0x412abd;\n                            fcn.00432dc0();\n                            *(*0x20 + -0x78) = 0x412ac7;\n                            fcn.00432ac0();\n                            *(*0x20 + -0x78) = 0x412ad8;\n                            fcn.00432dc0();\n                            *(*0x20 + -0x78) = 0x412ae5;\n                            fcn.004327c0(uVar3, uVar6);\n                            *(*0x20 + -0x78) = 0x412af6;\n                            fcn.00432dc0();\n                            *(*0x20 + -0x78) = 0x412afb;\n                            fcn.00432540();\n                        }\n                    }\n                    *(*0x20 + -0x5d) = *0x509e70;\n                    if (*0x509e70 != '\\0') {\n                        *(*0x20 + -0x78) = 0x412b14;\n                        fcn.0044c6c0();\n                    }\n                    *(*0x20 + -0x78) = 0x412b1e;\n                    iVar1 = fcn.00412c80();\n                    if (iVar1 == 0) {\n                        return 0;\n                    }\n                    cVar2 = *(*0x20 + -0x5d);\ncode_r0x00412527:\n                    *(*0x20 + -0x38) = iVar1;\n                    if ((*0x509e70 != '\\0') && (cVar2 == '\\0')) {\n                        *(*0x20 + -0x78) = 0x41253e;\n                        fcn.0044c6c0();\n                        iVar1 = *(*0x20 + -0x38);\n                    }\n                    if ((*(iVar1 + 0x38) != *(iVar1 + 0x60)) && (*(iVar1 + 0x30) != *(iVar1 + 0x38))) {\n                        *(*0x20 + -0x78) = 0x412566;\n                        fcn.0040eea0();\n                        iVar1 = *(*0x20 + -0x38);\n                        *(iVar1 + 0x40) = *(iVar1 + 0x40) >> (*(iVar1 + 0x30) & 0x3f);\n                        return iVar1;\n                    }\n                    *(*0x20 + -0x78) = 0x41259b;\n                    fcn.00430d40();\n                }\n                else {\n                    if (1 < -(iVar4 + -1)) goto code_r0x00412b47;\n                    *(*0x20 + -0x58) = iVar1;\n                    *(*0x20 + -0x78) = 0x4125e5;\n                    iVar1 = fcn.004294a0();\n                    if (iVar1 == 0) {\n                        iVar1 = *(*0x20 + -0x58);\n                        iVar4 = *(*0x20 + -0x5c);\n                        goto code_r0x004127c0;\n                    }\n                    if (*(iVar1 + 0x58) == *(*0x20 + -0x50) + -2) {\n                        if (*(*0x20 + -0x4c) == '\\0') {\n                            LOCK();\n                            *0x52a070 = *0x52a070 + 1;\n                            *(*0x20 + -0x4c) = 1;\n                        }\n                        LOCK();\n                        if (*(*0x20 + -0x50) + -2 == *(iVar1 + 0x58)) {\n                            *(iVar1 + 0x58) = *(*0x20 + -0x50) + -1;\n                            bVar8 = true;\n                            iVar5 = iVar1;\n                        }\n                        else {\n                            bVar8 = false;\n                            iVar5 = 0;\n                        }\n                    }\n                    else {\n                        bVar8 = false;\n                        iVar5 = 0;\n                    }\n                    *(*0x20 + -0x40) = iVar5;\n                    if (bVar8) {\n                        *(*0x20 + -0x38) = iVar1;\n                        *(*0x20 + -0x78) = 0x41266e;\n                        fcn.0041e820();\n                        if (*(*0x20 + -0x4c) != '\\0') {\n                            *(*0x20 + -0x4c) = 0;\n                            LOCK();\n                            iVar4 = *0x52a070 + -1;\n                            bVar8 = *0x52a070 == 1;\n                            *0x52a070 = iVar4;\n                            if ((bVar8 && *0x52a06c != 0) && (0 < *0x5580b0)) {\n                                *(*0x20 + -0x18) = *0x558530;\n                                *(*0x20 + -0x20) = *0x52a0b0;\n                                *(*0x20 + -0x28) = *0x52a0a0;\n                                *(*0x20 + -0x30) = *0x52a0b8;\n                                *(*0x20 + -0x78) = 0x4126f1;\n                                uVar6 = *0x52a0a0;\n                                fcn.004324c0();\n                                *(*0x20 + -0x78) = 0x412705;\n                                fcn.00432dc0();\n                                *(*0x20 + -0x78) = 0x412713;\n                                fcn.00432ac0();\n                                *(*0x20 + -0x78) = 0x412725;\n                                fcn.00432dc0();\n                                uVar3 = *(*0x20 + -0x20);\n                                *(*0x20 + -0x78) = 0x41273b;\n                                fcn.00432ac0();\n                                *(*0x20 + -0x78) = 0x41274c;\n                                fcn.00432dc0();\n                                *(*0x20 + -0x78) = 0x412756;\n                                fcn.00432ac0();\n                                *(*0x20 + -0x78) = 0x412767;\n                                fcn.00432dc0();\n                                *(*0x20 + -0x78) = 0x412772;\n                                fcn.004327c0(uVar3, uVar6);\n                                *(*0x20 + -0x78) = 0x412785;\n                                fcn.00432dc0();\n                                *(*0x20 + -0x78) = 0x41278a;\n                                fcn.00432540();\n                            }\n                        }\n                        cVar2 = '\\0';\n                        iVar1 = *(*0x20 + -0x38);\n                        goto code_r0x00412527;\n                    }\n                }\n                iVar1 = *(*0x20 + -0x58) + -1;\n                iVar4 = *(*0x20 + -0x5c);\n            } while( true );\n        }\n        goto code_r0x00412b53;\n    }\n    goto code_r0x00412b66;\ncode_r0x00412b47:\n    *(*0x20 + -0x78) = 0x412b53;\n    fcn.00459720(2);\ncode_r0x00412b53:\n    *(*0x20 + -0x78) = 0x412b65;\n    in_RAX = fcn.00459720(0x44);\ncode_r0x00412b66:\n    *(puVar7 + 8) = in_RAX;\n    *(puVar7 + -8) = 0x412b70;\n    fcn.00457040();\n    in_RAX = *(puVar7 + 8);\n    *0x20 = puVar7;\n    goto code_r0x00412480;\n}\n",
        "token_count": 3740
    },
    "00412b80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00412b80(void)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        uVar1 = *0x52a068;\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(unaff_RBX + 0x60) != 0) {\n                if (*(unaff_RBX + 0x58) == *0x52a068 + 1) {\n                    *(unaff_RBX + 0x58) = *0x52a068 - 1;\n                    *(*0x20 + -0x10) = 0;\n                    *(*0x20 + -0x10) = unaff_RBX;\n                    *(*0x20 + -0x28) = 0x412c29;\n                    fcn.0041e820();\n                }\n                else {\n                    *(unaff_RBX + 0x58) = *0x52a068;\n                    if (*(unaff_RBX + 0x38) - *(unaff_RBX + 0x60) < 1) {\n                        *(*0x20 + -0x28) = 0x412c0d;\n                        fcn.00429300((uVar1 >> 1 & 1) * 5);\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x412bf3;\n                        fcn.00429300((uVar1 >> 1 & 1) * 5);\n                    }\n                }\n                return;\n            }\n            unaff_RBX = 0x24;\n            *(*0x20 + -0x28) = 0x412c45;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x412c55;\n        fcn.00457040();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 590
    },
    "00413220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00413220(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    ulong unaff_RBX;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x50) = _sym.imp.kernel32.dll_VirtualFree;\n            *(*0x20 + -0x48) = in_RAX;\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x38) = 0x4000;\n            *(*0x20 + -0x58) = 0x413265;\n            fcn.0042d660();\n            if (*(*0x20 + -0x30) != 0) {\n                return;\n            }\n            iVar1 = *(*0x20 + 8);\n            uVar2 = *(*0x20 + 0x10);\n            while( true ) {\n                if (uVar2 == 0) {\n                    return;\n                }\n                *(*0x20 + -0x28) = uVar2;\n                *(*0x20 + -0x10) = iVar1;\n                uVar3 = uVar2;\n                while( true ) {\n                    *(*0x20 + -0x18) = uVar3;\n                    if (uVar3 < 0x1000) {\n                        bVar5 = false;\n                    }\n                    else {\n                        *(*0x20 + -0x50) = _sym.imp.kernel32.dll_VirtualFree;\n                        *(*0x20 + -0x48) = iVar1;\n                        *(*0x20 + -0x40) = uVar3;\n                        *(*0x20 + -0x38) = 0x4000;\n                        *(*0x20 + -0x58) = 0x413310;\n                        fcn.0042d660();\n                        bVar5 = *(*0x20 + -0x30) == 0;\n                        uVar2 = *(*0x20 + -0x28);\n                        uVar3 = *(*0x20 + -0x18);\n                        iVar1 = *(*0x20 + -0x10);\n                    }\n                    if (!bVar5) break;\n                    uVar3 = uVar3 >> 1 & 0xfffffffffffff000;\n                }\n                if (uVar3 < 0x1000) break;\n                uVar2 = uVar2 - uVar3;\n                iVar1 = iVar1 + uVar3;\n            }\n            *(*0x20 + -0x58) = 0x41334e;\n            fcn.0045ab80();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            *(*0x20 + -0x20) = *(*0x20 + -0x50);\n            *(*0x20 + -0x58) = 0x41336f;\n            fcn.004324c0();\n            *(*0x20 + -0x58) = 0x413385;\n            fcn.00432dc0();\n            *(*0x20 + -0x58) = 0x41338f;\n            fcn.00432ac0();\n            *(*0x20 + -0x58) = 0x4133a5;\n            fcn.00432dc0();\n            *(*0x20 + -0x58) = 0x4133af;\n            fcn.00432ac0();\n            *(*0x20 + -0x58) = 0x4133b4;\n            fcn.00432720();\n            *(*0x20 + -0x58) = 0x4133b9;\n            fcn.00432540();\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x58) = 0x4133ca;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x4133da;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1116
    },
    "00413400": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00413400(void)\n\n{\n    int32_t iVar1;\n    ulong in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    ulong unaff_RBX;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar7;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x58) = _sym.imp.kernel32.dll_VirtualAlloc;\n            *(*0x20 + -0x50) = in_RAX;\n            *(*0x20 + -0x48) = unaff_RBX;\n            *(*0x20 + -0x40) = 0x1000;\n            *(*0x20 + -0x38) = 4;\n            *(*0x20 + -0x60) = 0x41344e;\n            fcn.0042d6e0();\n            uVar3 = *(*0x20 + 8);\n            if (*(*0x20 + -0x30) == uVar3) {\n                return uVar3;\n            }\n            uVar2 = *(*0x20 + 0x10);\n            uVar4 = uVar2;\n            while( true ) {\n                if (uVar4 == 0) {\n                    return uVar2;\n                }\n                *(*0x20 + -0x18) = uVar4;\n                *(*0x20 + -0x10) = uVar3;\n                uVar5 = uVar4;\n                while( true ) {\n                    *(*0x20 + -0x20) = uVar5;\n                    if (uVar5 < 0x1000) {\n                        bVar7 = false;\n                    }\n                    else {\n                        *(*0x20 + -0x58) = _sym.imp.kernel32.dll_VirtualAlloc;\n                        *(*0x20 + -0x50) = uVar3;\n                        *(*0x20 + -0x48) = uVar5;\n                        *(*0x20 + -0x40) = 0x1000;\n                        *(*0x20 + -0x38) = 4;\n                        *(*0x20 + -0x60) = 0x413505;\n                        fcn.0042d6e0();\n                        bVar7 = *(*0x20 + -0x30) == 0;\n                        uVar3 = *(*0x20 + -0x10);\n                        uVar4 = *(*0x20 + -0x18);\n                        uVar5 = *(*0x20 + -0x20);\n                        uVar2 = *(*0x20 + 0x10);\n                    }\n                    if (!bVar7) break;\n                    uVar5 = uVar5 >> 1 & 0xfffffffffffff000;\n                }\n                if (uVar5 < 0x1000) break;\n                uVar4 = uVar4 - uVar5;\n                uVar3 = uVar3 + uVar5;\n            }\n            *(*0x20 + -0x60) = 0x413553;\n            fcn.0045ab80();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            iVar1 = *(*0x20 + -0x58);\n            *(*0x20 + -0x24) = iVar1;\n            if (iVar1 != 8) goto code_r0x004135c9;\n            do {\n                *(*0x20 + -0x60) = 0x413578;\n                fcn.004324c0();\n                *(*0x20 + -0x60) = 0x413589;\n                fcn.00432dc0();\n                *(*0x20 + -0x60) = 0x413593;\n                fcn.00432ac0();\n                *(*0x20 + -0x60) = 0x4135a5;\n                fcn.00432dc0();\n                *(*0x20 + -0x60) = 0x4135ae;\n                fcn.00432ac0();\n                *(*0x20 + -0x60) = 0x4135b3;\n                fcn.00432720();\n                *(*0x20 + -0x60) = 0x4135b8;\n                fcn.00432540();\n                *(*0x20 + -0x60) = 0x4135c9;\n                iVar1 = fcn.00430d40();\ncode_r0x004135c9:\n            } while (iVar1 == 0x5af);\n            *(*0x20 + -0x60) = 0x4135d5;\n            fcn.004324c0();\n            *(*0x20 + -0x60) = 0x4135e6;\n            fcn.00432dc0();\n            *(*0x20 + -0x60) = 0x4135f0;\n            fcn.00432ac0();\n            *(*0x20 + -0x60) = 0x413605;\n            fcn.00432dc0();\n            *(*0x20 + -0x60) = 0x41360e;\n            fcn.00432ac0();\n            *(*0x20 + -0x60) = 0x413613;\n            fcn.00432720();\n            *(*0x20 + -0x60) = 0x413618;\n            fcn.00432540();\n            unaff_RBX = 0x1f;\n            *(*0x20 + -0x60) = 0x413629;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x413639;\n        fcn.00457040();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1479
    },
    "00413660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00413660(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iStack24;\n    \n    fcn.004298a0();\n    fcn.0042d660();\n    if (iStack24 != 0) {\n        return;\n    }\n    fcn.0045ab80();\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432ac0();\n    fcn.00432dc0();\n    fcn.00432ac0();\n    fcn.00432720();\n    fcn.00432540();\n    fcn.00430d40();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 163
    },
    "00413900": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00413900(ulong arg1)\n\n{\n    ulong *puVar1;\n    ulong in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    ulong unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \ncode_r0x00413900:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x20;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if (*0x557cac == 0) {\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x28) = 0x41394d;\n            fcn.00409300();\n            if ((*0x557d80 != NULL) && (*(*0x557d80 + 2) != 0x65)) goto code_r0x004139cf;\n            if (*0x557d70 != NULL) goto code_r0x004139ab;\n            *(*0x20 + -0x28) = 0x41397c;\n            *0x557d70 = fcn.0040b720(0x559b78);\n            **0x557d70 = *0x557d00;\n            *0x557d00 = *0x557d70;\n            if (*0x558000 != '\\0') goto code_r0x004139ab;\n            iVar3 = 0;\n            do {\n                if (iVar3 < 0x40) {\n                    uVar2 = iVar3 + (SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar3) >> 0x40, 0) + iVar3 >> 2) * -5\n                    ;\n                    if (4 < uVar2) goto code_r0x00413b06;\n                }\n                else {\ncode_r0x004139ab:\n                    puVar1 = *0x557d70;\n                    puVar4 = *0x557d70 + 1;\n                    *0x557d70 = (*0x557d70)[1];\n                    *puVar4 = *0x557d80;\n                    *0x557d80 = puVar1;\ncode_r0x004139cf:\n                    puVar4 = *0x557d80;\n                    uVar2 = *(*0x557d80 + 2);\n                    if (uVar2 < 0x65) {\n                        LOCK();\n                        *(*0x557d80 + 2) = *(*0x557d80 + 2) + 1;\n                        iVar3 = uVar2 * 5;\n                        if (*0x557ed0 == 0) {\n                            puVar4[uVar2 * 5 + 3] = *(*0x20 + 0x10);\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x413a38;\n                            fcn.00459420(iVar3, puVar4, puVar4 + uVar2 * 5 + 4);\n                        }\n                        puVar4[iVar3 + 5] = *(*0x20 + 0x18);\n                        if (*0x557ed0 == 0) {\n                            puVar4[iVar3 + 6] = *(*0x20 + 0x20);\n                            puVar4[iVar3 + 7] = *(*0x20 + 0x28);\n                            puVar4[iVar3 + 4] = *(*0x20 + 8);\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x413a78;\n                            fcn.00459380(*(*0x20 + 0x20));\n                            *(*0x20 + -0x28) = 0x413a85;\n                            fcn.00459380(*(*0x20 + 0x28));\n                            *(*0x20 + -0x28) = 0x413a92;\n                            fcn.00459380(*(*0x20 + 8));\n                        }\n                        *0x557c68 = 1;\n                        *(*0x20 + -0x28) = 0x413aa7;\n                        fcn.00409520();\n                        return;\n                    }\n                    iVar3 = 0x65;\n                    *(*0x20 + -0x28) = 0x413abb;\n                    uVar2 = fcn.00459720(0x65);\n                }\n                unaff_RSI = 0x558000;\n                *(iVar3 + 0x558000) = *(uVar2 + 0x4f0190);\n                iVar3 = iVar3 + 1;\n            } while( true );\n        }\n        goto code_r0x00413b10;\n    }\n    goto code_r0x00413b26;\ncode_r0x00413b06:\n    arg1 = 5;\n    *(*0x20 + -0x28) = 0x413b10;\n    fcn.00459720(5);\ncode_r0x00413b10:\n    unaff_RBX = 0x18;\n    *(*0x20 + -0x28) = 0x413b25;\n    in_RAX = fcn.00430d40();\ncode_r0x00413b26:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + 0x10) = unaff_RBX;\n    *(puVar5 + 0x18) = arg1;\n    *(puVar5 + 0x20) = unaff_RDI;\n    *(puVar5 + 0x28) = unaff_RSI;\n    *(puVar5 + -8) = 0x413b45;\n    fcn.00457040();\n    in_RAX = *(puVar5 + 8);\n    unaff_RBX = *(puVar5 + 0x10);\n    arg1 = *(puVar5 + 0x18);\n    unaff_RDI = *(puVar5 + 0x20);\n    unaff_RSI = *(puVar5 + 0x28);\n    *0x20 = puVar5;\n    goto code_r0x00413900;\n}\n",
        "token_count": 1504
    },
    "00413b80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00413b80(void)\n\n{\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00409300();\n    if ((*0x557c67 == '\\0') || (*0x557c68 == '\\0')) {\n        uVar1 = 0;\n    }\n    else {\n        *0x557c67 = '\\0';\n        *0x557c68 = '\\0';\n        uVar1 = *0x503628;\n    }\n    fcn.00409520();\n    return uVar1;\n}\n",
        "token_count": 169
    },
    "00413c00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00413c2c)\n\nvoid fcn.00413c00(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (*0x557c98 == 0) {\n        LOCK();\n        *0x557c98 = 1;\n        fcn.0043b360();\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "004140e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00414522)\n\nvoid fcn.004140e0(ulong arg1)\n\n{\n    uint64_t *puVar1;\n    int64_t *piVar2;\n    ulong in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    ulong uVar6;\n    uint64_t arg1_00;\n    uint64_t uVar7;\n    uint32_t uVar8;\n    ulong unaff_RBX;\n    int64_t iVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int64_t iVar11;\n    int64_t iVar12;\n    ulong unaff_RDI;\n    uint8_t uVar13;\n    int64_t unaff_R14;\n    bool bVar14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x50 && *0x20 + -0x50 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0xd0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            if (*0x5580e8 != 0) {\n                return;\n            }\n            iVar4 = *(*0x20 + 8);\n            if (iVar4 != 0) {\n                uVar8 = *(iVar4 + 0x17) & 0x1f;\n                uVar3 = uVar8;\n                if (uVar8 == '\\x16') {\n                    if (*(iVar4 + 0x30) != 0) {\n                        *(*0x20 + -0x58) = iVar4;\n                        uVar5 = 0;\n                        *(*0x20 + -0xd8) = 0x414178;\n                        uVar3 = fcn.0040f260(0);\n                        if (uVar3 != 0) {\n                            uVar7 = *(*0x20 + 0x10);\n                            if (uVar3 == uVar7) {\n                                iVar4 = *(*0x20 + -0x58);\n                            }\n                            else {\n                                iVar4 = *(*0x20 + -0x58);\n                                puVar1 = *(iVar4 + 0x30);\n                                if (((puVar1 == NULL) || (puVar1[1] != 0)) || (0xf < *puVar1)) goto code_r0x0041461d;\n                            }\n                            iVar11 = *(*0x20 + 0x18);\n                            if (iVar11 == 0) {\n                                *(*0x20 + -0x48) =\n                                     CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                *(*0x20 + -0x48) = 0x4147a0;\n                                *(*0x20 + -0x40) = *0x20 + 8;\n                                *(*0x20 + -0xd0) = *0x20 + -0x48;\n                                *(*0x20 + -0xd8) = 0x4143a5;\n                                fcn.00456f00();\n                                return;\n                            }\n                            if ((*(iVar11 + 0x17) & 0x1f) == 0x13) {\n                                *(*0x20 + -0x68) = iVar11;\n                                if ((*(iVar11 + 0x32) & 0x8000) == 0) {\n                                    if (*(iVar11 + 0x30) == 1) {\n                                        if ((*(iVar11 + 0x14) & 1) == 0) {\n                                            uVar3 = 0x38;\n                                        }\n                                        else {\n                                            uVar3 = 0x48;\n                                        }\n                                        iVar9 = *(iVar11 + uVar3);\n                                        *(*0x20 + -0x60) = iVar9;\n                                        if (iVar9 != iVar4) {\n                                            uVar13 = *(iVar9 + 0x17) & 0x1f;\n                                            if (uVar13 == 0x16) {\n                                                *(*0x20 + -0xd8) = 0x4142ca;\n                                                iVar4 = fcn.00450ee0();\n                                                if (iVar4 == 0) {\n                                                    bVar14 = true;\n                                                }\n                                                else {\n                                                    *(*0x20 + -0xd8) = 0x4142e5;\n                                                    iVar4 = fcn.00450ee0();\n                                                    bVar14 = iVar4 == 0;\n                                                }\n                                                if (!bVar14) goto code_r0x004144bb;\n                                                uVar7 = *(*0x20 + -0x60);\n                                                uVar3 = *(uVar7 + 0x30);\n                                                if (*(*(*0x20 + -0x58) + 0x30) != uVar3) goto code_r0x004144bb;\n                                                iVar11 = *(*0x20 + -0x68);\n                                            }\n                                            else {\n                                                if (uVar13 != 0x14) goto code_r0x004144bb;\n                                                if (*(iVar9 + 0x40) != 0) {\n                                                    uVar3 = *(*0x20 + 8);\n                                                    *(*0x20 + -0xd8) = 0x4142a8;\n                                                    iVar4 = fcn.00408f40(uVar7);\n                                                    if (iVar4 == 0) goto code_r0x004144bb;\n                                                    iVar11 = *(*0x20 + -0x68);\n                                                }\n                                            }\n                                        }\n                                        if ((*(iVar11 + 0x14) & 1) == 0) {\n                                            iVar4 = 0x38;\n                                        }\n                                        else {\n                                            iVar4 = 0x48;\n                                        }\n                                        uVar3 = *(iVar11 + 0x30);\n                                        uVar7 = (*(iVar11 + 0x32) & 0x7fff) + *(iVar11 + 0x30);\n                                        arg1_00 = uVar7 & 0xffff;\n                                        if (uVar3 <= arg1_00) {\n                                            iVar12 = 0;\n                                            for (iVar9 = 0; iVar9 < arg1_00 - uVar3; iVar9 = iVar9 + 1) {\n                                                piVar2 = *(iVar11 + iVar4 + (uVar3 << 3 & uVar3 - 0x100000 >> 0x3f) +\n                                                          iVar9 * 8);\n                                                uVar7 = *(piVar2 + 0x15);\n                                                iVar12 = ((iVar12 + uVar7) - 1 & -uVar7) + *piVar2;\n                                            }\n                                            *(*0x20 + -0x78) = iVar12;\n                                            *(*0x20 + -0xd8) = 0x414405;\n                                            fcn.00413c00();\n                                            *(*0x20 + -0x38) =\n                                                 CONCAT412(in_XMM15_Dd, \n                                                           CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                            *(*0x20 + -0x28) =\n                                                 CONCAT412(in_XMM15_Dd, \n                                                           CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                            *(*0x20 + -0x18) =\n                                                 CONCAT412(in_XMM15_Dd, \n                                                           CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                            *(*0x20 + -0x38) = 0x414740;\n                                            *(*0x20 + -0x30) = *0x20 + 8;\n                                            *(*0x20 + -0x28) = *0x20 + 0x18;\n                                            *(*0x20 + -0x20) = *(*0x20 + -0x78) + 7U & 0xfffffffffffffff8;\n                                            *(*0x20 + -0x18) = *(*0x20 + -0x60);\n                                            *(*0x20 + -0x10) = *(*0x20 + -0x58);\n                                            *(*0x20 + -0xd0) = *0x20 + -0x38;\n                                            *(*0x20 + -0xd8) = 0x414490;\n                                            fcn.00456f00();\n                                            return;\n                                        }\n                                        *(*0x20 + -0xd8) = 0x4144bb;\n                                        fcn.004597e0(arg1_00);\ncode_r0x004144bb:\n                                        do {\n                                            *(*0x20 + -0xd8) = 0x4144c5;\n                                            uVar5 = fcn.00450e40();\n                                            *(*0x20 + -0x50) = uVar5;\n                                            *(*0x20 + -0x70) = uVar3;\n                                            *(*0x20 + -0xd8) = 0x4144dc;\n                                            fcn.00450e40();\n                                            uVar3 = 0x4873fe;\n                                            *(*0x20 + -0xd8) = 0x41450f;\n                                            fcn.004460c0(0x22, uVar7, 0x482888, 0xe);\n                                            *(*0x20 + -0xd8) = 0x414514;\n                                            fcn.00430d40();\n                                        } while( true );\n                                    }\n                                    *(*0x20 + -0xd8) = 0x41452e;\n                                    uVar5 = fcn.00450e40();\n                                    *(*0x20 + -0x50) = uVar5;\n                                    *(*0x20 + -0x70) = 0;\n                                    *(*0x20 + -0xd8) = 0x414545;\n                                    fcn.00450e40();\n                                    uVar5 = 0x4873fe;\n                                    *(*0x20 + -0xd8) = 0x414578;\n                                    fcn.004460c0(0x22, uVar7, 0x482888, 0xe);\n                                    *(*0x20 + -0xd8) = 0x41457d;\n                                    fcn.00430d40();\n                                }\n                                *(*0x20 + -0xd8) = 0x414585;\n                                uVar6 = fcn.00450e40();\n                                *(*0x20 + -0x50) = uVar6;\n                                *(*0x20 + -0x70) = uVar5;\n                                *(*0x20 + -0xd8) = 0x41459c;\n                                fcn.00450e40();\n                                *(*0x20 + -0xd0) = 0x483517;\n                                *(*0x20 + -200) = 0x12;\n                                *(*0x20 + -0xd8) = 0x4145e5;\n                                fcn.004461e0(0x22, uVar7, 0x482888, 0xe);\n                                *(*0x20 + -0xd8) = 0x4145ea;\n                                fcn.00430d40();\n                            }\n                            *(*0x20 + -0xd8) = 0x4145f2;\n                            fcn.00450e40();\n                            *(*0x20 + -0xd8) = 0x414618;\n                            fcn.00445fe0(0x29, uVar7, 0x482e34, 0x10);\n                            *(*0x20 + -0xd8) = 0x41461d;\n                            fcn.00430d40();\ncode_r0x0041461d:\n                            *(*0x20 + -0xd8) = 0x41462e;\n                            iVar4 = fcn.00430d40();\n                            goto code_r0x0041462e;\n                        }\n                        uVar7 = *(*0x20 + 0x10);\n                        if (uVar7 == 0x557e78) {\n                            return;\n                        }\n                        uVar3 = 0x557e78;\n                        for (iVar4 = 0x4f53c0; iVar4 != 0; iVar4 = *(iVar4 + 0x210)) {\n                            if (((((*(iVar4 + 0xc0) < uVar7 || *(iVar4 + 0xc0) == uVar7) &&\n                                  (uVar7 <= *(iVar4 + 200) && *(iVar4 + 200) != uVar7)) ||\n                                 ((*(iVar4 + 0xd0) < uVar7 || *(iVar4 + 0xd0) == uVar7 &&\n                                  (uVar7 <= *(iVar4 + 0xd8) && *(iVar4 + 0xd8) != uVar7)))) ||\n                                ((*(iVar4 + 0xe0) < uVar7 || *(iVar4 + 0xe0) == uVar7 &&\n                                 (uVar7 <= *(iVar4 + 0xe8) && *(iVar4 + 0xe8) != uVar7)))) ||\n                               ((*(iVar4 + 0xf0) < uVar7 || *(iVar4 + 0xf0) == uVar7 &&\n                                (uVar7 <= *(iVar4 + 0xf8) && *(iVar4 + 0xf8) != uVar7)))) {\n                                return;\n                            }\ncode_r0x0041462e:\n                            uVar3 = uVar7;\n                        }\n                        *(*0x20 + -0xd8) = 0x4146b3;\n                        fcn.00430d40();\n                    }\n                    *(*0x20 + -0xd8) = 0x4146c5;\n                    fcn.00430d40();\n                }\n                *(*0x20 + -0xd8) = 0x4146ca;\n                unaff_RDI = fcn.00450e40();\n                arg1 = 0x28;\n                *(*0x20 + -0xd8) = 0x4146f0;\n                fcn.00445fe0(0x28, uVar3, 0x482655, 0xd);\n                *(*0x20 + -0xd8) = 0x4146f5;\n                fcn.00430d40();\n            }\n            unaff_RBX = 0x2b;\n            *(*0x20 + -0xd8) = 0x414706;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + -8) = 0x414725;\n        fcn.00457040();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 3474
    },
    "004147e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t * fcn.004147e0(void)\n\n{\n    code **ppcVar1;\n    code *pcVar2;\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t *puVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar3 = *in_RAX;\n            if (uVar3 != 0) {\n                puVar4 = in_RAX[3];\n                if (puVar4 != NULL) {\n                    in_RAX[3] = *puVar4;\n                    in_RAX[6] = in_RAX[6] + *in_RAX;\n                    if (*(in_RAX + 8) != '\\0') {\n                        *(*0x20 + -0x18) = puVar4;\n                        *(*0x20 + -0x38) = 0x414836;\n                        fcn.00459d80();\n                        puVar4 = *(*0x20 + -0x18);\n                    }\n                    return puVar4;\n                }\n                *(*0x20 + 8) = in_RAX;\n                if (*(in_RAX + 5) < uVar3) {\n                    uVar3 = in_RAX[7];\n                    *(*0x20 + -0x38) = 0x414865;\n                    uVar3 = fcn.0040b720(uVar3);\n                    in_RAX = *(*0x20 + 8);\n                    in_RAX[4] = uVar3;\n                    *(in_RAX + 5) = 0x4000;\n                }\n                puVar4 = in_RAX[4];\n                ppcVar1 = in_RAX[1];\n                if (ppcVar1 != NULL) {\n                    *(*0x20 + -0x10) = puVar4;\n                    pcVar2 = *ppcVar1;\n                    *(*0x20 + -0x38) = 0x414896;\n                    (*pcVar2)();\n                    in_RAX = *(*0x20 + 8);\n                    puVar4 = *(*0x20 + -0x10);\n                }\n                in_RAX[4] = in_RAX[4] + *in_RAX;\n                *(in_RAX + 5) = *(in_RAX + 5) - *in_RAX;\n                in_RAX[6] = in_RAX[6] + *in_RAX;\n                return puVar4;\n            }\n            *(*0x20 + -0x38) = 0x4148c6;\n            fcn.004324c0();\n            *(*0x20 + -0x38) = 0x4148d7;\n            fcn.00432dc0();\n            *(*0x20 + -0x38) = 0x4148dc;\n            fcn.00432540();\n            *(*0x20 + -0x38) = 0x4148ed;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x4148f8;\n        fcn.00457040();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 826
    },
    "00414980": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00414980(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    uVar1 = fcn.00403c60();\n    if (*0x557ed0 != 0) {\n        fcn.00459280(param_1, param_2, param_3, param_4);\n        uVar1 = *0x503630;\n    }\n    *0x503630 = uVar1;\n    fcn.0043b360();\n    fcn.0043b360();\n    fcn.00404b80();\n    fcn.00404b80();\n    if (*0x557ed0 == 0) {\n        *0x503630 = 0;\n    }\n    else {\n        fcn.00459280(param_1, param_2, param_3, param_4);\n    }\n    *0x55aba8 = 1;\n    return;\n}\n",
        "token_count": 269
    },
    "00414b20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00414ff2)\n// WARNING: Removing unreachable block (ram,0x0041500b)\n\nvoid fcn.00414b20(ulong arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    int64_t in_RAX;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            piVar3 = *(unaff_R14 + 0x30);\n            if (((*piVar3 == unaff_R14) || (iVar2 = *(piVar3 + 0x1b),  1 < iVar2)) || (piVar3[0x1a] != 0)) {\n                iVar2 = *(piVar3 + 0x1b);\n                *(piVar3 + 0x1b) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(piVar3 + 0x1b) = iVar2 + -1;\n            if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n            *(*0x20 + -0x4c) = arg1;\n            *(*0x20 + -0x30) = in_RAX;\n            *(*0x20 + -0x38) = unaff_RBX;\n            while( true ) {\n                if (((*0x55aba8 == '\\0') || (*0x557cc8 != 0)) || (*0x557cac != 0)) {\n                    bVar7 = false;\n                }\n                else if (in_RAX == 0) {\n                    bVar7 = *0x558518 <= *0x558530;\n                }\n                else if (in_RAX == 1) {\n                    if (*0x558500 < 0) {\n                        bVar7 = false;\n                    }\n                    else if (*0x55b218 == 0) {\n                        bVar7 = false;\n                    }\n                    else {\n                        bVar7 = *0x4f0260 < unaff_RBX - *0x55b218;\n                    }\n                }\n                else if (in_RAX == 2) {\n                    bVar7 = 0 < arg1 - *0x558840;\n                }\n                else {\n                    bVar7 = true;\n                }\n                if (bVar7) {\n                    *(*0x20 + -0x80) = 0x414c9a;\n                    iVar5 = fcn.0041e120();\n                    bVar7 = iVar5 != -1;\n                    arg1._0_4_ = *(*0x20 + -0x4c);\n                    unaff_RBX = *(*0x20 + -0x38);\n                    in_RAX = *(*0x20 + -0x30);\n                }\n                else {\n                    bVar7 = false;\n                }\n                if (!bVar7) break;\n                *0x504094 = *0x504094 + 1;\n            }\n            *(*0x20 + -0x80) = 0x414ccc;\n            fcn.00440960(0);\n            if (((*0x55aba8 == '\\0') || (*0x557cc8 != 0)) || (*0x557cac != 0)) {\n                iVar5 = *(*0x20 + -0x30);\n                bVar7 = false;\n            }\n            else {\n                iVar5 = *(*0x20 + -0x30);\n                if (iVar5 == 0) {\n                    bVar7 = *0x558518 <= *0x558530;\n                }\n                else if (iVar5 == 1) {\n                    if (*0x558500 < 0) {\n                        bVar7 = false;\n                    }\n                    else if (*0x55b218 == 0) {\n                        bVar7 = false;\n                    }\n                    else {\n                        bVar7 = *0x4f0260 < *(*0x20 + -0x38) - *0x55b218;\n                    }\n                }\n                else if (iVar5 == 2) {\n                    bVar7 = 0 < *(*0x20 + -0x4c) - *0x558840;\n                }\n                else {\n                    bVar7 = true;\n                }\n            }\n            if (!bVar7) {\n                *(*0x20 + -0x80) = 0x414e3e;\n                fcn.00440ca0(0);\n                return;\n            }\n            *0x558800 = iVar5 == 2;\n            if (*0x5580b8 == 1) {\n                uVar4 = 1;\n            }\n            else {\n                uVar4 = 0;\n                if (*0x5580b8 == 2) {\n                    uVar4 = 2;\n                }\n            }\n            *(*0x20 + -0x40) = uVar4;\n            *(*0x20 + -0x80) = 0x414dc5;\n            fcn.00440960(0);\n            *(*0x20 + -0x80) = 0x414dd8;\n            fcn.00440960(0);\n            if (*0x509e70 != '\\0') {\n                *(*0x20 + -0x28) = 0;\n                *(*0x20 + -0x28) = *0x509ea0;\n                *(*0x20 + -0x80) = 0x414e14;\n                fcn.0044b680(*0x20 + -0x28);\n                *0x509ea0 = *0x509ea0 + 1;\n            }\n            iVar5 = 0;\n            while( true ) {\n                if (*0x503f48 <= iVar5) {\n                    *(*0x20 + -0x80) = 0x414e72;\n                    fcn.00416440();\n                    *(*0x20 + -0x78) = 0x48a4e8;\n                    *(*0x20 + -0x80) = 0x414e85;\n                    fcn.00456f00();\n                    *0x558844 = *0x557cb0;\n                    *0x558848 = *0x557cb0;\n                    if (*0x557cb4 < *0x557cb0) {\n                        *0x558844 = *0x557cb4;\n                    }\n                    *0x558880 = *0x558530;\n                    *0x558870 = 0;\n                    *0x5587f8 = *(*0x20 + -0x40);\n                    *(*0x20 + -0x80) = 0x414ee5;\n                    fcn.0045afe0();\n                    *0x558850 = *(*0x20 + -0x78);\n                    *(*0x20 + -0x48) = *0x558850;\n                    *0x558878 = *0x558850;\n                    if (*0x509e70 != '\\0') {\n                        *(*0x20 + -0x28) = 0;\n                        *(*0x20 + -0x28) = 1;\n                        *(*0x20 + -0x80) = 0x414f4a;\n                        fcn.0044b680(*0x20 + -0x28);\n                    }\n                    *(*0x20 + -0x78) = 0x48a638;\n                    *(*0x20 + -0x80) = 0x414f5a;\n                    fcn.00456f00();\n                    *(*0x20 + -0x78) = 0x48a4f0;\n                    *(*0x20 + -0x80) = 0x414f7e;\n                    fcn.00456f00();\n                    uVar8 = 0;\n                    uVar9 = 0;\n                    uVar10 = 0;\n                    uVar11 = 0;\n                    iVar5 = **(in_GS_OFFSET + 0x28);\n                    *(*0x20 + -0x80) = 0x414f97;\n                    fcn.004172a0();\n                    *0x558840 = *0x558840 + 1;\n                    *(*0x20 + -0x80) = 0x414fa9;\n                    fcn.0041ad40();\n                    *0x558898 = *0x558520;\n                    if (*(*0x20 + -0x40) != 0) {\n                        *(*0x20 + -0x80) = 0x414fcc;\n                        fcn.0043e720();\n                    }\n                    *0x557cac = 1;\n                    *0x557ed4 = 1;\n                    *0x557ed0 = 1;\n                    *0x558790 = 0xffffffff;\n                    *0x5587a0 = 0xffffffff;\n                    *(*0x20 + -0x80) = 0x415032;\n                    fcn.00417600();\n                    *(*0x20 + -0x80) = 0x415037;\n                    fcn.0041ac00();\n                    *0x557ca4 = 1;\n                    *0x558578 = *(*0x20 + -0x48);\n                    piVar1 = *(iVar5 + 0x30) + 0xd8;\n                    *piVar1 = *piVar1 + 1;\n                    *(*0x20 + -0x20) = *(iVar5 + 0x30);\n                    *(*0x20 + -0x18) = CONCAT412(uVar11, CONCAT48(uVar10, CONCAT44(uVar9, uVar8)));\n                    *(*0x20 + -0x18) = 0x4151e0;\n                    *(*0x20 + -0x10) = *0x20 + -0x48;\n                    *(*0x20 + -0x78) = *0x20 + -0x18;\n                    *(*0x20 + -0x80) = 0x41508f;\n                    fcn.00456f00();\n                    iVar5 = **(in_GS_OFFSET + 0x28);\n                    *(*0x20 + -0x80) = 0x4150b4;\n                    fcn.00440ca0(0);\n                    iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                    *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                    if (iVar2 == 1) {\n                        if (*(iVar5 + 0xb1) == '\\0') {\n                            bVar7 = *(*0x20 + -0x40) == 0;\n                        }\n                        else {\n                            *(iVar5 + 0x10) = 0xfffffffffffffade;\n                            bVar7 = *(*0x20 + -0x40) == 0;\n                        }\n                    }\n                    else {\n                        bVar7 = *(*0x20 + -0x40) == 0;\n                    }\n                    if (!bVar7) {\n                        *(*0x20 + -0x80) = 0x41510b;\n                        fcn.00456e80();\n                    }\n                    *(*0x20 + -0x80) = 0x41511c;\n                    fcn.00440ca0(0);\n                    return;\n                }\n                piVar1 = *(*0x503f40 + iVar5 * 8);\n                iVar2 = *(*(piVar1 + 0x10) + 0x488);\n                if (iVar2 != *0x52a068) break;\n                iVar5 = iVar5 + 1;\n            }\n            *(*0x20 + -0x50) = iVar2;\n            *(*0x20 + -0x4c) = *0x52a068;\n            *(*0x20 + -0x38) = *piVar1;\n            *(*0x20 + -0x80) = 0x41513b;\n            iVar5 = *0x503f48;\n            fcn.004324c0();\n            arg1._0_4_ = iVar5;\n            *(*0x20 + -0x80) = 0x41514c;\n            fcn.00432dc0();\n            *(*0x20 + -0x80) = 0x415156;\n            fcn.00432bc0();\n            *(*0x20 + -0x80) = 0x415167;\n            fcn.00432dc0();\n            *(*0x20 + -0x80) = 0x415172;\n            fcn.00432ac0();\n            *(*0x20 + -0x80) = 0x415185;\n            fcn.00432dc0();\n            *(*0x20 + -0x80) = 0x41518e;\n            fcn.00432ac0();\n            *(*0x20 + -0x80) = 0x415193;\n            fcn.00432720();\n            *(*0x20 + -0x80) = 0x415198;\n            fcn.00432540();\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x80) = 0x4151a9;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + -8) = 0x4151bd;\n        fcn.00457040();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1._0_4_ = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 3300
    },
    "00415320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00415320(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    bool bVar2;\n    ulong arg1;\n    uchar *arg1_00;\n    ulong arg2;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    char cStack33;\n    ulong uStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00440960(0);\n    while ((*0x557cac == 1 && (*0x558790 == *0x5587a0))) {\n        if (*0x558700 == 0) {\n            if (*0x558788 < *0x55878c) {\n                bVar2 = true;\n            }\n            else {\n                bVar2 = false;\n            }\n        }\n        else {\n            bVar2 = true;\n        }\n        if (bVar2) break;\n        arg1 = 0;\n        fcn.00440960(0);\n        *0x557ca8 = 0;\n        fcn.00456f00();\n        if (*0x557ca8 == 0) {\n            fcn.0045afe0();\n            *0x558860 = 0x48a4b0;\n            *0x558878 = 0x48a4b0;\n            iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n            *(iVar1 + 0xd0) = 5;\n            if (*0x557ed0 == 0) {\n                arg2 = 0x4813a2;\n                *(iVar1 + 200) = 0x4813a2;\n            }\n            else {\n                arg2 = 0x4813a2;\n                fcn.004593a0(arg1, 0x4813a2, param_3, param_4);\n            }\n            if (*0x509e70 != '\\0') {\n                uStack32 = 0;\n                fcn.0044b680(&uStack32);\n            }\n            fcn.00456f00();\n            cStack33 = '\\0';\n            auStack24 = CONCAT88(&cStack33, 0x415620);\n            arg1_00 = auStack24;\n            fcn.00456f00();\n            if (cStack33 == '\\0') {\n                *0x557ca4 = 0;\n                fcn.004188c0();\n                fcn.00440ca0(0);\n                fcn.0043e720();\n                fcn.0041b0e0();\n                fcn.004156e0();\n                return;\n            }\n            iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n            *(iVar1 + 0xd0) = 0;\n            if (*0x557ed0 == 0) {\n                *(iVar1 + 200) = 0;\n            }\n            else {\n                fcn.00459280(arg1_00, arg2, param_3, param_4);\n            }\n            fcn.00456f00();\n            fcn.00440ca0(0);\n        }\n        else {\n            fcn.00440ca0(0);\n        }\n    }\n    fcn.00440ca0(0);\n    return;\n}\n",
        "token_count": 781
    },
    "00416ae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00416ae0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (0 < *0x5580e0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x98) = 0x416b1c;\n                fcn.00428460();\n                in_RAX = *(*0x20 + 8);\n            }\n            if (*0x557cac == 2) {\n                *(*0x20 + -0x28) = *0x558700;\n                *0x558798 = in_RAX;\n                if ((*0x558700 == 0) && (*0x55878c <= *0x558788)) {\n                    if (0 < *0x5580ac) {\n                        *(*0x20 + -0x98) = 0x416b7b;\n                        fcn.004177c0();\n                    }\n                    if (*0x558700 == 0) {\n                        *(*0x20 + -0x10) = *0x503f40;\n                        *(*0x20 + -0x30) = *0x503f48;\n                        iVar3 = 0;\n                        iVar4 = *0x503f40;\n                        iVar6 = *0x503f48;\n                        while( true ) {\n                            iVar2 = *0x503f48;\n                            iVar1 = *0x503f40;\n                            if (iVar6 <= iVar3) {\n                                *0x558540 = *0x558780;\n                                for (iVar3 = 0; iVar3 < iVar2; iVar3 = iVar3 + 1) {\n                                    iVar4 = *(*(iVar1 + iVar3 * 8) + 0x40);\n                                    if (iVar4 != 0) {\n                                        *(iVar4 + 8) = 0;\n                                    }\n                                }\n                                *0x558530 = *0x558780;\n                                *0x558538 = *0x558548;\n                                if (*0x509e70 != '\\0') {\n                                    *(*0x20 + -0x20) = 0;\n                                    *(*0x20 + -0x20) = *0x558780;\n                                    *(*0x20 + -0x98) = 0x416cdd;\n                                    fcn.0044b680(*0x20 + -0x20);\n                                }\n                                return;\n                            }\n                            *(*0x20 + -0x38) = iVar3;\n                            *(*0x20 + -0x18) = *(iVar4 + iVar3 * 8);\n                            if (*0x5580ac < 1) {\n                                *(*0x20 + -0x98) = 0x416bfe;\n                                fcn.00429b20();\n                            }\n                            else {\n                                *(*0x20 + -0x98) = 0x416bee;\n                                fcn.00429c60();\n                            }\n                            iVar3 = *(*(*0x20 + -0x18) + 0x1698);\n                            if ((iVar3 != 0) &&\n                               ((*(iVar3 + 0x10) != 0 || (*(*(*(*0x20 + -0x18) + 0x16a0) + 0x10) != 0)))) break;\n                            *(*0x20 + -0x98) = 0x416bb4;\n                            fcn.0041fca0();\n                            iVar3 = *(*0x20 + -0x38) + 1;\n                            iVar4 = *(*0x20 + -0x10);\n                            iVar6 = *(*0x20 + -0x30);\n                        }\n                        *(*0x20 + -0x98) = 0x416cf2;\n                        fcn.004324c0();\n                        *(*0x20 + -0x40) = **(*0x20 + -0x18);\n                        *(*0x20 + -0x61) = *(*(*0x20 + -0x18) + 0x5ae);\n                        *(*0x20 + -0x98) = 0x416d0f;\n                        fcn.004324c0();\n                        *(*0x20 + -0x98) = 0x416d25;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x98) = 0x416d2f;\n                        fcn.00432bc0();\n                        *(*0x20 + -0x98) = 0x416d45;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x98) = 0x416d4f;\n                        fcn.00432760();\n                        *(*0x20 + -0x98) = 0x416d54;\n                        fcn.00432540();\n                        if (*(*(*0x20 + -0x18) + 0x1698) == 0) {\n                            *(*0x20 + -0x98) = 0x416e25;\n                            fcn.004324c0();\n                            *(*0x20 + -0x98) = 0x416e36;\n                            fcn.00432dc0();\n                            *(*0x20 + -0x98) = 0x416e3b;\n                            fcn.00432540();\n                        }\n                        else {\n                            *(*0x20 + -0x30) = *(*(*(*0x20 + -0x18) + 0x1698) + 0x10);\n                            *(*0x20 + -0x98) = 0x416d77;\n                            fcn.004324c0();\n                            *(*0x20 + -0x98) = 0x416d88;\n                            fcn.00432dc0();\n                            *(*0x20 + -0x98) = 0x416d92;\n                            fcn.00432bc0();\n                            *(*0x20 + -0x98) = 0x416d97;\n                            fcn.00432540();\n                        }\n                        if (*(*(*0x20 + -0x18) + 0x16a0) == 0) goto code_r0x00416e00;\n                        *(*0x20 + -0x30) = *(*(*(*0x20 + -0x18) + 0x16a0) + 0x10);\n                        *(*0x20 + -0x98) = 0x416db6;\n                        fcn.004324c0();\n                        *(*0x20 + -0x98) = 0x416dc7;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x98) = 0x416dd1;\n                        fcn.00432bc0();\n                        *(*0x20 + -0x98) = 0x416dd6;\n                        fcn.00432540();\n                        do {\n                            *(*0x20 + -0x98) = 0x416ddb;\n                            fcn.004324c0();\n                            *(*0x20 + -0x98) = 0x416de5;\n                            fcn.00432720();\n                            *(*0x20 + -0x98) = 0x416dea;\n                            fcn.00432540();\n                            *(*0x20 + -0x98) = 0x416dfb;\n                            fcn.00430d40();\ncode_r0x00416e00:\n                            *(*0x20 + -0x98) = 0x416e05;\n                            fcn.004324c0();\n                            *(*0x20 + -0x98) = 0x416e16;\n                            fcn.00432dc0();\n                            *(*0x20 + -0x98) = 0x416e1b;\n                            fcn.00432540();\n                        } while( true );\n                    }\n                    *(*0x20 + -0x98) = 0x416e56;\n                    fcn.00430d40();\n                }\n                *(*0x20 + -0x48) = *0x558788;\n                *(*0x20 + -0x50) = *0x55878c;\n                *(*0x20 + -0x30) = *0x5587a8;\n                *(*0x20 + -0x38) = *0x5587b0;\n                *(*0x20 + -0x58) = *0x5587b8;\n                *(*0x20 + -0x60) = *0x5587c0;\n                *(*0x20 + -0x98) = 0x416ea5;\n                fcn.004324c0();\n                *(*0x20 + -0x98) = 0x416eb6;\n                fcn.00432dc0();\n                *(*0x20 + -0x98) = 0x416ec5;\n                fcn.00432c20();\n                *(*0x20 + -0x98) = 0x416ed6;\n                fcn.00432dc0();\n                *(*0x20 + -0x98) = 0x416ee5;\n                fcn.00432ac0();\n                *(*0x20 + -0x98) = 0x416ef6;\n                fcn.00432dc0();\n                *(*0x20 + -0x98) = 0x416f05;\n                fcn.00432ac0();\n                *(*0x20 + -0x98) = 0x416f16;\n                fcn.00432dc0();\n                *(*0x20 + -0x98) = 0x416f25;\n                fcn.00432bc0();\n                *(*0x20 + -0x98) = 0x416f36;\n                fcn.00432dc0();\n                *(*0x20 + -0x98) = 0x416f45;\n                fcn.00432bc0();\n                *(*0x20 + -0x98) = 0x416f56;\n                fcn.00432dc0();\n                *(*0x20 + -0x98) = 0x416f65;\n                fcn.00432bc0();\n                *(*0x20 + -0x98) = 0x416f76;\n                fcn.00432dc0();\n                *(*0x20 + -0x98) = 0x416f85;\n                fcn.00432bc0();\n                *(*0x20 + -0x98) = 0x416f8a;\n                fcn.00432720();\n                *(*0x20 + -0x98) = 0x416f8f;\n                fcn.00432540();\n                *(*0x20 + -0x98) = 0x416fa5;\n                fcn.004305a0();\n            }\n            *(*0x20 + -0x98) = 0x416fb6;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x416fc5;\n        fcn.00457040();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 2618
    },
    "00416fe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00416fe0(void)\n\n{\n    char cVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x557cac == 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x28) = 0x417019;\n                fcn.00409300();\n                *0x52a068 = *0x52a068 + 2;\n                *0x52a06c = 0;\n                *0x52a0a0 = 0;\n                *0x52a340 = *0x52a328;\n                *0x52a348 = *0x52a330;\n                if (*0x557ed0 == 0) {\n                    *0x52a338 = *0x52a320;\n                }\n                else {\n                    *(*0x20 + -0x28) = 0x417077;\n                    fcn.00459380();\n                }\n                *(*0x20 + -0x28) = 0x41708d;\n                *0x52a0c8 = in_XMM15;\n                fcn.00409520();\n                *0x50409c = 0;\n                if (*(*0x20 + 8) == 2) {\n                    *(*0x20 + -0x28) = 0x4170b4;\n                    fcn.00409300();\n                    *0x52a0b8 = 0;\n                    *(*0x20 + -0x28) = 0x4170cd;\n                    fcn.00409520();\n                    while( true ) {\n                        *(*0x20 + -0x28) = 0x417128;\n                        iVar2 = fcn.0041e120();\n                        if (iVar2 == -1) break;\n                        *0x504098 = *0x504098 + 1;\n                    }\n                    *(*0x20 + -0x28) = 0x417133;\n                    fcn.004203c0();\n                    do {\n                        *(*0x20 + -0x28) = 0x41713a;\n                        cVar1 = fcn.004204c0();\n                    } while (cVar1 != '\\0');\n                    *(*0x20 + -0x28) = 0x417145;\n                    fcn.004278a0();\n                    *(*0x20 + -0x28) = 0x41714a;\n                    fcn.00427920();\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x4170dd;\n                fcn.00409300();\n                if (*0x504090 != '\\0') {\n                    *0x504090 = '\\0';\n                    *(*0x20 + -0x28) = 0x417105;\n                    fcn.004348a0(1);\n                }\n                *(*0x20 + -0x28) = 0x417113;\n                fcn.00409520();\n                return;\n            }\n            *(*0x20 + -0x28) = 0x417165;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x417170;\n        fcn.0045b6e0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 893
    },
    "004172a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004172a0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t arg1;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (*0x503650 != NULL) {\n        (***0x503650)();\n    }\n    fcn.00409300();\n    iVar2 = *0x504860;\n    while (iVar2 != 0) {\n        iVar3 = *(iVar2 + 8);\n        if (*0x557ed0 == 0) {\n            *(iVar2 + 8) = 0;\n            iVar2 = iVar3;\n        }\n        else {\n            iVar2 = iVar3;\n            fcn.00459380(0);\n        }\n    }\n    if (*0x557ed0 == 0) {\n        *0x504860 = 0;\n    }\n    else {\n        fcn.00459380(0);\n    }\n    fcn.00409520();\n    fcn.00409300();\n    for (iVar2 = 0; iVar2 < 5; iVar2 = iVar2 + 1) {\n        arg1 = 0x504870;\n        iVar3 = *(iVar2 * 8 + 0x504870);\n        while (iVar3 != 0) {\n            iVar1 = *(iVar3 + 0x28);\n            if (*0x557ed0 == 0) {\n                *(iVar3 + 0x28) = 0;\n                iVar3 = iVar1;\n            }\n            else {\n                iVar2 = fcn.004593a0(arg1, 0, param_3, param_4);\n                iVar3 = iVar1;\n            }\n        }\n        if (*0x557ed0 == 0) {\n            *(arg1 + iVar2 * 8) = 0;\n        }\n        else {\n            iVar2 = fcn.00459380(0);\n        }\n    }\n    fcn.00409520();\n    return;\n}\n",
        "token_count": 501
    },
    "004173e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar * fcn.004173e0(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uchar *in_RAX;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    uint64_t unaff_RBX;\n    uint64_t arg1_00;\n    uint64_t unaff_RDI;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uchar auStack24 [16];\n    \n    if (unaff_RDI < 10000000) {\n        uVar9 = (unaff_RDI >> 1) / 500;\n        if (uVar9 == 0) {\n            if (unaff_RBX != 0) {\n                *in_RAX = 0x30;\n                if (arg1 != 0) {\n                    return in_RAX;\n                }\n                fcn.004597a0(1, 0);\n                uVar9 = arg1;\n            }\n            arg1 = unaff_RBX;\n            iVar6 = fcn.00459720(unaff_RBX);\n            goto code_r0x0041747c;\n        }\n        iVar6 = 3;\n        for (; 99 < uVar9; uVar9 = uVar9 / 10) {\ncode_r0x0041747c:\n            iVar6 = iVar6 + -1;\n        }\n        arg1_00 = unaff_RBX - iVar6;\n        uVar7 = arg1_00 - 1;\n        uVar10 = unaff_RBX - 1;\ncode_r0x004174ad:\n        uVar12 = uVar10;\n        if ((uVar9 < 10) && (uVar12 < uVar7)) {\n            if (uVar12 < unaff_RBX) {\n                in_RAX[uVar12] = uVar9 + '0';\n                return in_RAX + (-(arg1 - uVar12) >> 0x3f & uVar12);\n            }\n            fcn.00459720(unaff_RBX);\n            goto code_r0x0041753e;\n        }\n        uVar10 = uVar9 / 10;\n        arg1_00 = uVar9 % 10;\n        uVar9 = uVar10;\n        if (uVar12 < unaff_RBX) goto code_r0x004174db;\n        goto code_r0x00417546;\n    }\n    uVar9 = unaff_RDI / 1000000;\n    uVar7 = unaff_RBX - 1;\n    arg1_00 = unaff_RBX;\n    uVar10 = uVar7;\ncode_r0x00417557:\n    uVar12 = uVar10;\n    cVar2 = uVar9;\n    if ((uVar9 < 10) && (uVar12 < uVar7)) {\n        if (uVar12 < arg1_00) {\n            in_RAX[uVar12] = cVar2 + '0';\n            return in_RAX + (-(arg1 - uVar12) >> 0x3f & uVar12);\n        }\n        fcn.00459720(arg1_00);\n        goto code_r0x004175ec;\n    }\n    uVar9 = uVar9 / 10;\n    if (uVar12 < arg1_00) goto code_r0x0041758b;\n    goto code_r0x004175f4;\ncode_r0x004174db:\n    in_RAX[uVar12] = arg1_00 + '0';\n    uVar10 = uVar12 - 1;\n    if (uVar10 != uVar7) goto code_r0x004174ad;\n    if (uVar10 < unaff_RBX) {\n        in_RAX[uVar12 - 1] = 0x2e;\n        uVar10 = uVar12 - 2;\n        goto code_r0x004174ad;\n    }\ncode_r0x0041753e:\n    fcn.00459720(unaff_RBX);\ncode_r0x00417546:\n    arg1 = unaff_RBX;\n    uVar7 = arg1;\n    uVar10 = fcn.00459720(arg1);\n    goto code_r0x00417557;\ncode_r0x0041758b:\n    in_RAX[uVar12] = cVar2 + uVar9 * -10 + '0';\n    uVar10 = uVar12 - 1;\n    if (uVar10 == uVar7) {\n        if (arg1_00 <= uVar10) {\ncode_r0x004175ec:\n            fcn.00459720(arg1_00);\ncode_r0x004175f4:\n            fcn.00459720(arg1_00);\n            while (auStack24 < *(unaff_R14 + 0x10) || auStack24 == *(unaff_R14 + 0x10)) {\n                fcn.00457040();\n            }\n            if (*0x503640 == NULL) {\n                iVar8 = 0;\n                iVar6 = 0;\n            }\n            else {\n                iVar6 = **0x503640;\n                iVar8 = (*0x503640)[1];\n            }\n            *0x5587a8 = in_XMM15;\n            for (iVar11 = 0; iVar11 < iVar8; iVar11 = iVar11 + 1) {\n                iVar1 = *(iVar6 + iVar11 * 8);\n                uVar9 = (*(iVar1 + 0xd8) - *(iVar1 + 0xd0)) + 0x3ffffU >> 0x12;\n                if (*0x5587a8 < uVar9) {\n                    *0x5587a8 = CONCAT88(*0x5587b0, uVar9);\n                }\n            }\n            if (*0x503640 == NULL) {\n                iVar8 = 0;\n                iVar6 = 0;\n            }\n            else {\n                iVar6 = **0x503640;\n                iVar8 = (*0x503640)[1];\n            }\n            for (iVar11 = 0; iVar11 < iVar8; iVar11 = iVar11 + 1) {\n                iVar1 = *(iVar6 + iVar11 * 8);\n                uVar9 = (*(iVar1 + 0xe8) - *(iVar1 + 0xe0)) + 0x3ffffU >> 0x12;\n                if (*0x5587b0 < uVar9) {\n                    *0x5587a8 = CONCAT88(uVar9, *0x5587a8);\n                }\n            }\n            *0x52a358 = *0x52a328;\n            *0x52a360 = *0x52a328;\n            if (*0x557ed0 == 0) {\n                *0x52a350 = *0x52a320;\n                *0x5587b8 = *0x52a328;\n            }\n            else {\n                *0x5587b8 = fcn.00459380();\n            }\n            iVar4 = SUB164(*0x5587a8, 0);\n            iVar5 = SUB164(*0x5587a8 >> 0x40, 0);\n            iVar3 = *0x5587b8;\n            *0x5587d8 = *0x557d08 + iVar4 + iVar5 + iVar3 + 2;\n            *0x558788 = 0;\n            *0x55878c = iVar4 + iVar5 + iVar3 + *0x557d08 + 2;\n            *0x5587c0 = *0x557d08;\n            *0x5587c8 = 2;\n            *0x5587cc = iVar4 + 2;\n            *0x5587d0 = iVar5 + iVar4 + 2;\n            *0x5587d4 = iVar3 + iVar4 + iVar5 + 2;\n            return *0x5587d8;\n        }\n        in_RAX[uVar12 - 1] = 0x2e;\n        uVar10 = uVar12 - 2;\n    }\n    goto code_r0x00417557;\n}\n",
        "token_count": 1852
    },
    "00417600": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00417600(void)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (*0x503640 == NULL) {\n        iVar5 = 0;\n        iVar6 = 0;\n    }\n    else {\n        iVar6 = **0x503640;\n        iVar5 = (*0x503640)[1];\n    }\n    *0x5587a8 = in_XMM15;\n    for (iVar7 = 0; iVar7 < iVar5; iVar7 = iVar7 + 1) {\n        iVar1 = *(iVar6 + iVar7 * 8);\n        uVar8 = (*(iVar1 + 0xd8) - *(iVar1 + 0xd0)) + 0x3ffffU >> 0x12;\n        if (*0x5587a8 < uVar8) {\n            *0x5587a8 = CONCAT88(*0x5587b0, uVar8);\n        }\n    }\n    if (*0x503640 == NULL) {\n        iVar5 = 0;\n        iVar6 = 0;\n    }\n    else {\n        iVar6 = **0x503640;\n        iVar5 = (*0x503640)[1];\n    }\n    for (iVar7 = 0; iVar7 < iVar5; iVar7 = iVar7 + 1) {\n        iVar1 = *(iVar6 + iVar7 * 8);\n        uVar8 = (*(iVar1 + 0xe8) - *(iVar1 + 0xe0)) + 0x3ffffU >> 0x12;\n        if (*0x5587b0 < uVar8) {\n            *0x5587a8 = CONCAT88(uVar8, *0x5587a8);\n        }\n    }\n    *0x52a358 = *0x52a328;\n    *0x52a360 = *0x52a328;\n    if (*0x557ed0 == 0) {\n        *0x52a350 = *0x52a320;\n        *0x5587b8 = *0x52a328;\n    }\n    else {\n        *0x5587b8 = fcn.00459380();\n    }\n    iVar3 = SUB164(*0x5587a8, 0);\n    iVar4 = SUB164(*0x5587a8 >> 0x40, 0);\n    iVar2 = *0x5587b8;\n    *0x558788 = 0;\n    *0x55878c = iVar3 + iVar4 + iVar2 + *0x557d08 + 2;\n    *0x5587c0 = *0x557d08;\n    *0x5587c8 = 2;\n    *0x5587cc = iVar3 + 2;\n    *0x5587d0 = iVar4 + iVar3 + 2;\n    *0x5587d4 = iVar2 + iVar3 + iVar4 + 2;\n    *0x5587d8 = *0x557d08 + iVar3 + iVar4 + iVar2 + 2;\n    return;\n}\n",
        "token_count": 789
    },
    "00418000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00418000(void)\n\n{\n    uint64_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    ulong in_RAX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    ulong *puVar7;\n    uint64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint8_t uVar9;\n    uint64_t in_R10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar5 = *0x52a358;\n            if (unaff_RBX < *0x52a358) {\n                uVar5 = *(*0x52a350 + unaff_RBX * 8);\n                unaff_RBX = uVar5 >> 0x14;\n                if (unaff_RBX < 0x40) {\n                    *(*0x20 + -0x48) = *0x52a068;\n                    *(*0x20 + -0x10) = in_RAX;\n                    unaff_RBX = *(*(unaff_RBX * 8 + 0x52a0d8) + (uVar5 & 0xfffff) * 8);\n                    *(*0x20 + -0x28) = unaff_RBX;\n                    iVar4 = 0;\n                    uVar6 = *0x52a068;\n                    do {\n                        if (0x3f < iVar4) {\n                            return;\n                        }\n                        uVar9 = *(unaff_RBX + iVar4 + 0x21080);\n                        if (uVar9 != 0) {\n                            *(*0x20 + -0x30) = iVar4;\n                            *(*0x20 + -0x4a) = uVar9;\n                            for (uVar5 = 0; uVar5 < 8; uVar5 = uVar5 + 1) {\n                                if ((uVar9 & 1 << (uVar5 & 0x1f)) != 0) {\n                                    uVar1 = uVar5 + iVar4 * 8;\n                                    if (uVar1 < 0x200) {\n                                        iVar4 = *(unaff_RBX + 0x20000 + uVar1 * 8);\n                                        in_R10 = in_R10 & 0xffffffffffffff00 | *(iVar4 + 99);\n                                        if (*(iVar4 + 99) == 1) {\n                                            *(*0x20 + -0x20) = uVar5;\n                                            if (*0x557c73 == '\\0') {\n                                                uVar3 = *(iVar4 + 0x58);\n                                                in_R10 = uVar3;\n                                                if ((uVar3 != uVar6) && (uVar3 != uVar6 + 3)) {\ncode_r0x004181d7:\n                                                    *(*0x20 + -0x44) = in_R10;\n                                                    *(*0x20 + -0x80) = 0x4181e5;\n                                                    fcn.004324c0();\n                                                    *(*0x20 + -0x80) = 0x4181f6;\n                                                    fcn.00432dc0();\n                                                    *(*0x20 + -0x80) = 0x4181ff;\n                                                    fcn.00432ac0();\n                                                    *(*0x20 + -0x80) = 0x418205;\n                                                    fcn.004326e0();\n                                                    *(*0x20 + -0x80) = 0x41820e;\n                                                    fcn.00432ac0();\n                                                    *(*0x20 + -0x80) = 0x418213;\n                                                    fcn.00432720();\n                                                    *(*0x20 + -0x80) = 0x418218;\n                                                    fcn.00432540();\n                                                    *(*0x20 + -0x80) = 0x418229;\n                                                    fcn.00430d40();\n                                                    goto code_r0x00418229;\n                                                }\n                                            }\n                                            *(*0x20 + -0x38) = iVar4;\n                                            *(*0x20 + -0x18) = iVar4 + 0x78;\n                                            *(*0x20 + -0x80) = 0x41812c;\n                                            fcn.00409300();\n                                            iVar4 = *(*0x20 + -0x38);\n                                            for (puVar7 = *(iVar4 + 0x80); puVar7 != NULL; puVar7 = *puVar7) {\n                                                if (*(puVar7 + 10) == '\\x01') {\n                                                    uVar2 = *(puVar7 + 1);\n                                                    uVar5 = *(iVar4 + 0x68);\n                                                    if (uVar5 == 0) {\n                                                        *(*0x20 + -0x80) = 0x4181d7;\n                                                        fcn.0042e820();\n                                                        goto code_r0x004181d7;\n                                                    }\n                                                    *(*0x20 + -0x40) = puVar7;\n                                                    *(*0x20 + -0x80) = 0x4181a5;\n                                                    fcn.00419d40(iVar4, uVar2 % uVar5);\n                                                    *(*0x20 + -0x80) = 0x4181c6;\n                                                    fcn.00419ba0(0x4f0180);\n                                                    iVar4 = *(*0x20 + -0x38);\n                                                    puVar7 = *(*0x20 + -0x40);\n                                                }\n                                            }\n                                            *(*0x20 + -0x80) = 0x418145;\n                                            fcn.00409520();\n                                            uVar5 = *(*0x20 + -0x20);\n                                            uVar6 = *(*0x20 + -0x48);\n                                            unaff_RBX = *(*0x20 + -0x28);\n                                            uVar9 = *(*0x20 + -0x4a);\n                                            iVar4 = *(*0x20 + -0x30);\n                                            goto code_r0x004180ac;\n                                        }\ncode_r0x00418229:\n                                        *(*0x20 + -0x49) = in_R10;\n                                        *(*0x20 + -0x80) = 0x418233;\n                                        fcn.004324c0();\n                                        *(*0x20 + -0x80) = 0x418245;\n                                        fcn.00432dc0();\n                                        *(*0x20 + -0x80) = 0x418252;\n                                        fcn.00432ac0();\n                                        *(*0x20 + -0x80) = 0x418257;\n                                        fcn.00432720();\n                                        *(*0x20 + -0x80) = 0x41825c;\n                                        fcn.00432540();\n                                        unaff_RBX = 0x2b;\n                                        *(*0x20 + -0x80) = 0x41826d;\n                                        fcn.00430d40();\n                                    }\n                                    *(*0x20 + -0x80) = 0x41827a;\n                                    fcn.00459740(0x200);\n                                    goto code_r0x0041827a;\n                                }\ncode_r0x004180ac:\n                            }\n                        }\n                        iVar4 = iVar4 + 1;\n                    } while( true );\n                }\ncode_r0x0041827a:\n                uVar5 = 0x40;\n                *(*0x20 + -0x80) = 0x418287;\n                fcn.00459740(0x40);\n            }\n            *(*0x20 + -0x80) = 0x41828f;\n            in_RAX = fcn.00459720(uVar5);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x41829f;\n        fcn.00457040();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1869
    },
    "004182c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004182c0(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong arg3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (**(in_RAX + 0x30) == unaff_R14) {\n        return;\n    }\n    if ((0 < *(*(unaff_R14 + 0x30) + 0xd8)) || (*(*(unaff_R14 + 0x30) + 0xd0) != 0)) {\n        return;\n    }\n    bVar1 = false;\n    do {\n        while( true ) {\n            iVar4 = *0x558550;\n            iVar5 = -*(in_RAX + 0x180) * *0x558588;\n            iVar3 = -*(in_RAX + 0x180);\n            if (iVar5 < 0x10000) {\n                iVar3 = *0x49e268 * *0x558590;\n            }\n            arg3 = 0x10000;\n            if (iVar5 < 0x10000) {\n                iVar5 = 0x10000;\n            }\n            if (0 < *0x558550) {\n                if (*0x558550 < iVar5) {\n                    *(in_RAX + 0x180) = *0x558550 * *0x558590 + *(in_RAX + 0x180) + 1;\n                    iVar3 = iVar4;\n                }\n                else {\n                    *(in_RAX + 0x180) = *(in_RAX + 0x180) + iVar3;\n                    iVar3 = iVar5;\n                }\n                LOCK();\n                *0x558550 = *0x558550 - iVar3;\n                if (iVar5 == iVar3) {\n                    if (bVar1) {\n                        fcn.0044b680(0);\n                    }\n                    return;\n                }\n            }\n            if ((*0x509e70 != '\\0') && (!bVar1)) {\n                fcn.0044b680(0);\n                bVar1 = true;\n            }\n            fcn.00456f00();\n            iVar4 = *(in_RAX + 0x88);\n            if (*0x557ed0 == 0) {\n                *(in_RAX + 0x88) = 0;\n                iVar3 = in_RAX;\n            }\n            else {\n                iVar3 = fcn.004593a0(iVar4, 0, arg3, iVar3);\n            }\n            if (iVar4 != 0) {\n                fcn.00415320();\n                iVar3 = in_RAX;\n            }\n            if (-1 < *(iVar3 + 0x180)) goto code_r0x00418511;\n            if (*(iVar3 + 0xb1) == '\\0') break;\n            fcn.00456e80();\n        }\n        cVar2 = fcn.00418940();\n    } while (cVar2 == '\\0');\ncode_r0x00418511:\n    if (bVar1) {\n        fcn.0044b680(0);\n    }\n    return;\n}\n",
        "token_count": 751
    },
    "004185a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004185a0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    bool bVar3;\n    double dVar4;\n    int64_t in_RAX;\n    ulong uVar5;\n    uint32_t uVar6;\n    int64_t iVar7;\n    uint32_t uVar8;\n    ulong unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar9 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = in_RAX + 0x88;\n            if (*0x557ed0 == 0) {\n                *(in_RAX + 0x88) = 0;\n            }\n            else {\n                *(*0x20 + -0x50) = 0x4185de;\n                in_RAX = fcn.00459380();\n            }\n            if (*0x557ca4 == 0) {\n                *(in_RAX + 0x180) = 0;\n                return;\n            }\n            *(*0x20 + -0x10) = iVar1;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x50) = 0x418612;\n            fcn.0045afe0();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            LOCK();\n            iVar2 = *0x5587a0 + -1;\n            uVar6 = *0x5587a0 - 1;\n            uVar8 = *0x558790;\n            *0x5587a0 = iVar2;\n            if (*0x558790 != uVar6) {\n                *(*0x20 + -0x28) = *(*0x20 + -0x48);\n                *(*0x20 + -0x50) = 0x418665;\n                fcn.00435000(4);\n                *(*(*0x20 + 8) + 0xb0) = 1;\n                *(*0x20 + -0x50) = 0x41868f;\n                uVar5 = fcn.004199a0();\n                *(*0x20 + -0x20) = uVar5;\n                uVar5 = 2;\n                *(*0x20 + -0x50) = 0x4186a8;\n                fcn.00435000(2);\n                dVar4 = *0x558590;\n                iVar1 = *(*0x20 + 8);\n                *(iVar1 + 0x180) = *(*0x20 + -0x20) * *0x558590 + *(iVar1 + 0x180) + 1;\n                LOCK();\n                iVar2 = *0x5587a0 + 1;\n                uVar8 = *0x5587a0 + 1;\n                *0x5587a0 = iVar2;\n                if (uVar8 <= *0x558790) {\n                    if (*0x558790 == uVar8) {\n                        if (*0x558700 == 0) {\n                            if (*0x558788 < *0x55878c) {\n                                bVar3 = true;\n                            }\n                            else {\n                                bVar3 = false;\n                            }\n                        }\n                        else {\n                            bVar3 = true;\n                        }\n                        if (!bVar3) {\n                            if (*0x557ed0 == 0) {\n                                *(iVar1 + 0x88) = iVar1;\n                            }\n                            else {\n                                *(*0x20 + -0x50) = 0x418758;\n                                fcn.004593e0(uVar5, uVar8, param_3, param_4);\n                            }\n                        }\n                    }\n                    *(*0x20 + -0x50) = 0x41875d;\n                    fcn.0045afe0();\n                    iVar1 = *(*(*(*0x20 + 8) + 0x30) + 0xa0);\n                    iVar7 = (*(*0x20 + -0x48) - *(*0x20 + -0x28)) + *(iVar1 + 0x1678);\n                    *(iVar1 + 0x1678) = iVar7;\n                    if (5000 < iVar7) {\n                        LOCK();\n                        *0x558558 = *0x558558 + iVar7;\n                        *(iVar1 + 0x1678) = 0;\n                    }\n                    return;\n                }\n                *(*0x20 + -0x34) = uVar8;\n                *(*0x20 + -0x2c) = *0x558790;\n                *(*0x20 + -0x50) = 0x4187d7;\n                fcn.004324c0(dVar4);\n                uVar6 = uVar5;\n                *(*0x20 + -0x50) = 0x4187e8;\n                fcn.00432dc0();\n                *(*0x20 + -0x50) = 0x4187f1;\n                fcn.00432ac0();\n                *(*0x20 + -0x50) = 0x418805;\n                fcn.00432dc0();\n                *(*0x20 + -0x50) = 0x41880e;\n                fcn.00432ac0();\n                *(*0x20 + -0x50) = 0x418813;\n                fcn.00432720();\n                *(*0x20 + -0x50) = 0x418818;\n                fcn.00432540();\n                uVar8 = 0x17;\n                *(*0x20 + -0x50) = 0x418829;\n                fcn.00430d40();\n            }\n            *(*0x20 + -0x30) = uVar6;\n            *(*0x20 + -0x2c) = uVar8;\n            *(*0x20 + -0x50) = 0x418836;\n            fcn.004324c0();\n            *(*0x20 + -0x50) = 0x418847;\n            fcn.00432dc0();\n            *(*0x20 + -0x50) = 0x418850;\n            fcn.00432ac0();\n            *(*0x20 + -0x50) = 0x418865;\n            fcn.00432dc0();\n            *(*0x20 + -0x50) = 0x41886e;\n            fcn.00432ac0();\n            *(*0x20 + -0x50) = 0x418873;\n            fcn.00432720();\n            *(*0x20 + -0x50) = 0x418878;\n            fcn.00432540();\n            unaff_RBX = 0x13;\n            *(*0x20 + -0x50) = 0x418889;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + -8) = 0x418899;\n        fcn.0045b6e0();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 1751
    },
    "00418a80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00418a80(void)\n\n{\n    double dVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (dVar1 = *0x558590,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (*0x558820 == 0) {\n        LOCK();\n        iVar2 = *0x558550;\n        *0x558550 = *0x558550 + in_RAX;\n        return iVar2;\n    }\n    fcn.00409300();\n    iVar2 = dVar1 * in_RAX;\n    while( true ) {\n        iVar3 = *0x558820;\n        if ((*0x558820 == 0) || (iVar2 < 1)) goto code_r0x00418ba9;\n        if ((*0x558820 != 0) && (*0x558820 = *(*0x558820 + 0xa0),  *0x558820 == 0)) {\n            *0x558828 = 0;\n        }\n        iVar2 = *(iVar3 + 0x180) + iVar2;\n        if (iVar2 < 0) break;\n        *(iVar3 + 0x180) = 0;\n        fcn.004348a0(0);\n    }\n    *(iVar3 + 0x180) = iVar2;\n    *(iVar3 + 0xa0) = 0;\n    iVar2 = iVar3;\n    if (*0x558828 != 0) {\n        *(*0x558828 + 0xa0) = iVar3;\n        iVar2 = *0x558820;\n    }\n    *0x558820 = iVar2;\n    *0x558828 = iVar3;\n    iVar2 = 0;\ncode_r0x00418ba9:\n    iVar3 = iVar2;\n    if (0 < iVar2) {\n        LOCK();\n        iVar3 = *0x558550;\n        *0x558550 = *0x558550 + iVar2 * *0x558588;\n    }\n    iVar2 = fcn.00409520(iVar3);\n    return iVar2;\n}\n",
        "token_count": 515
    },
    "00418c20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00418c20(void)\n\n{\n    int64_t in_RAX;\n    ulong *puVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    uint32_t *puVar6;\n    char cVar7;\n    ulong unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar9;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 + -0x178 && *0x20 + -0x178 != *(unaff_R14 + 0x18)) {\n            puVar8 = *0x20 + -0x1f8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if ((*(in_RAX + 0x90) >> 0xc & 1) != 0) {\n                uVar5 = *(in_RAX + 0x90) & 0xffffefff;\n                if (uVar5 < 3) {\n                    if (uVar5 == 1) goto code_r0x00418c89;\n                }\n                else {\n                    if (4 < uVar5) {\n                        if (uVar5 == 6) {\n                            return;\n                        }\ncode_r0x00418dfc:\n                        *(*0x20 + -0x1a4) = *(in_RAX + 0x90);\n                        puVar6 = *(in_RAX + 0x98);\n                        *(*0x20 + -0x188) = puVar6;\n                        *(*0x20 + -0x200) = 0x418e17;\n                        fcn.004324c0();\n                        *(*0x20 + -0x200) = 0x418e28;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x200) = 0x418e35;\n                        fcn.00432d40();\n                        *(*0x20 + -0x200) = 0x418e46;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x200) = 0x418e50;\n                        fcn.00432bc0();\n                        *(*0x20 + -0x200) = 0x418e65;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x200) = 0x418e70;\n                        fcn.00432ac0();\n                        *(*0x20 + -0x200) = 0x418e75;\n                        fcn.00432720();\n                        *(*0x20 + -0x200) = 0x418e7a;\n                        fcn.00432540();\n                        *(*0x20 + -0x200) = 0x418e8b;\n                        fcn.00430d40();\n                        while( true ) {\n                            *(*0x20 + -0x28) = *(*(*0x20 + -0x28) + 0x28);\ncode_r0x00418e9f:\n                            if (*(*0x20 + -0x28) == 0) break;\n                            if (*(*(*0x20 + -0x28) + 0x18) != 0) {\n                                *(*0x20 + -0x200) = 0x418ed9;\n                                fcn.00419ba0(0x4f0180);\n                                puVar6 = *(*0x20 + 8);\n                            }\n                            if (*(*(*0x20 + -0x28) + 0x28) != 0) {\n                                *(*0x20 + -0x200) = 0x418f12;\n                                fcn.00419ba0(0x4f0180);\n                                puVar6 = *(*0x20 + 8);\n                            }\n                            if (*(*(*0x20 + -0x28) + 5) != '\\0') {\n                                *(*0x20 + -0x200) = 0x418f53;\n                                fcn.00419ba0(0x4f0180);\n                                puVar6 = *(*0x20 + 8);\n                            }\n                        }\n                        if (*(puVar6 + 8) != 0) {\n                            *(*0x20 + -0x200) = 0x418f7a;\n                            fcn.0041d7e0(0);\n                        }\n                        iVar4 = 0;\n                        *(*0x20 + -0x200) = 0x418f92;\n                        uVar2 = fcn.0041dc00(*(*0x20 + -0x40));\n                        *(*0x20 + -0x38) = uVar2;\n                        do {\n                            *(*0x20 + -0x200) = 0x418fa5;\n                            iVar3 = fcn.0041d920();\n                            if (iVar3 == 0) {\n                                while (iVar4 = *(*0x20 + -0x50),  iVar4 != 0) {\n                                    *(*0x20 + -0x50) = *(iVar4 + 0x18);\n                                    *(iVar4 + 0x10) = 0;\n                                    *(*0x20 + -0x200) = 0x4190de;\n                                    fcn.004201a0();\n                                }\n                                if (((*(*0x20 + -0x68) == 0) && (*(*0x20 + -0x58) == 0)) && (*(*0x20 + -0x60) == 0)) {\n                                    return;\n                                }\n                                iVar4 = 0x19;\n                                *(*0x20 + -0x200) = 0x41912e;\n                                iVar3 = fcn.00430d40();\n                            }\n                            else {\n                                iVar3 = iVar3 - *(*0x20 + -0x80);\n                                puVar6 = *(*0x20 + -0x38);\n                            }\n                            while (cVar7 = iVar4,  puVar6 != NULL) {\n                                if (iVar3 < *puVar6) {\n                                    puVar6 = *(puVar6 + 4);\n                                }\n                                else {\n                                    if (iVar3 < *puVar6 + puVar6[1]) goto code_r0x00418fc8;\n                                    puVar6 = *(puVar6 + 6);\n                                }\n                            }\n                            puVar6 = NULL;\ncode_r0x00418fc8:\n                            if ((puVar6 != NULL) && (iVar3 = *(puVar6 + 2),  iVar3 != 0)) {\n                                *(puVar6 + 2) = 0;\n                                uVar2 = *(iVar3 + 0x10);\n                                if (*(iVar3 + 8) < 0) {\n                                    *(*0x20 + -0x1a5) = cVar7;\n                                    *(*0x20 + -0x198) = puVar6;\n                                    *(*0x20 + -0x30) = iVar3;\n                                    *(*0x20 + -0x200) = 0x41900e;\n                                    iVar4 = fcn.00411960();\n                                    uVar2 = *(iVar4 + 0x18);\n                                    puVar6 = *(*0x20 + -0x198);\n                                    cVar7 = *(*0x20 + -0x1a5);\n                                }\n                                else {\n                                    iVar4 = 0;\n                                }\n                                *(*0x20 + -400) = iVar4;\n                                puVar6 = *puVar6 + *(*0x20 + -0x80);\n                                if (cVar7 == '\\0') {\n                                    *(*0x20 + -0x200) = 0x41909c;\n                                    fcn.00419ba0(uVar2);\n                                }\n                                else {\n                                    *(*0x20 + -0x200) = 0x41906b;\n                                    fcn.0041a0c0(uVar2);\n                                }\n                                iVar4 = *(*0x20 + -400);\n                                if (iVar4 != 0) {\n                                    *(*0x20 + -0x200) = 0x4190bc;\n                                    fcn.00422420(2);\n                                }\n                            }\n                        } while( true );\n                    }\ncode_r0x00418c89:\n                    if (unaff_R14 != in_RAX) {\n                        if (*(in_RAX + 0x70) == 0) {\n                            if (*(in_RAX + 0xb4) == '\\0') {\n                                bVar9 = *(in_RAX + 0xb9) == '\\0';\n                            }\n                            else {\n                                bVar9 = false;\n                            }\n                        }\n                        else {\n                            bVar9 = false;\n                        }\n                        *(*0x20 + 0x10) = unaff_RBX;\n                        if (bVar9) {\n                            *(*0x20 + -0x200) = 0x418cd2;\n                            fcn.00445120();\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        else {\n                            *(in_RAX + 0xb3) = 1;\n                        }\n                        *(*0x20 + -0x208) = unaff_RBP;\n                        *(*0x20 + -0x200) = 0x418cfa;\n                        puVar1 = fcn.00459954();\n                        uVar2 = puVar1[1];\n                        *(*0x20 + -0x80) = *puVar1;\n                        *(*0x20 + -0x78) = uVar2;\n                        if (puVar1[10] != 0) {\n                            *(*0x20 + -0x200) = 0x418d3c;\n                            fcn.00419ba0(0x4f0180);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(*0x20 + -0x20) = in_XMM15;\n                        *(*0x20 + -0x10) = 0;\n                        *(*0x20 + -0x20) = 0x4192e0;\n                        *(*0x20 + -0x18) = *0x20 + -0x180;\n                        *(*0x20 + -0x10) = unaff_RBX;\n                        *(*0x20 + -0x1f8) = 0;\n                        *(*0x20 + -0x200) = 0x418db7;\n                        fcn.0044d020(0, *0x20 + -0x180, 0, 0x7fffffff);\n                        *(*0x20 + -0x200) = 0x418dce;\n                        fcn.0044ce00(0);\n                        puVar6 = *(*0x20 + 8);\n                        *(*0x20 + -0x28) = *(puVar6 + 10);\n                        goto code_r0x00418e9f;\n                    }\n                    *(*0x20 + -0x200) = 0x41916c;\n                    iVar4 = unaff_R14;\n                    in_RAX = fcn.00430d40();\n                    uVar5 = iVar4;\n                }\n                if (uVar5 != 2) goto code_r0x00418dfc;\n                *(*0x20 + -0x1a0) = *(in_RAX + 0x90);\n                *(*0x20 + -0x188) = *(in_RAX + 0x98);\n                *(*0x20 + -0x200) = 0x419190;\n                fcn.004324c0();\n                *(*0x20 + -0x200) = 0x4191a5;\n                fcn.00432dc0();\n                *(*0x20 + -0x200) = 0x4191b2;\n                fcn.00432d40();\n                *(*0x20 + -0x200) = 0x4191c5;\n                fcn.00432dc0();\n                *(*0x20 + -0x200) = 0x4191cf;\n                fcn.00432bc0();\n                *(*0x20 + -0x200) = 0x4191e5;\n                fcn.00432dc0();\n                *(*0x20 + -0x200) = 0x4191f0;\n                fcn.00432ac0();\n                *(*0x20 + -0x200) = 0x4191f5;\n                fcn.00432720();\n                *(*0x20 + -0x200) = 0x4191fa;\n                fcn.00432540();\n                *(*0x20 + -0x200) = 0x41920b;\n                in_RAX = fcn.00430d40();\n            }\n            *(*0x20 + -0x19c) = *(in_RAX + 0x90);\n            *(*0x20 + -0x188) = *(in_RAX + 0x98);\n            *(*0x20 + -0x200) = 0x419226;\n            fcn.004324c0();\n            *(*0x20 + -0x200) = 0x419237;\n            fcn.00432dc0();\n            *(*0x20 + -0x200) = 0x419245;\n            fcn.00432d40();\n            *(*0x20 + -0x200) = 0x419256;\n            fcn.00432dc0();\n            *(*0x20 + -0x200) = 0x419265;\n            fcn.00432bc0();\n            *(*0x20 + -0x200) = 0x419276;\n            fcn.00432dc0();\n            *(*0x20 + -0x200) = 0x419285;\n            fcn.00432c20();\n            *(*0x20 + -0x200) = 0x41928a;\n            fcn.00432720();\n            *(*0x20 + -0x200) = 0x41928f;\n            fcn.00432540();\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x200) = 0x4192a5;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x4192b5;\n        fcn.0045b6e0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 3291
    },
    "004195a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004195a0(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    int64_t *in_RAX;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint32_t uVar7;\n    ulong uVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    bool bVar10;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x557ed4 != '\\0') break;\n            unaff_RBX = 0x17;\n            *(*0x20 + -0x58) = 0x419965;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x419975;\n        fcn.00457040();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n    iVar5 = *(*(unaff_R14 + 0x30) + 0x90);\n    iVar4 = in_RAX[3];\n    if ((unaff_RBX & 0xc) == 0) {\n        iVar9 = 0x7fffffffffffffff;\n        uVar8 = 0;\n    }\n    else {\n        if ((unaff_RBX >> 2 & 1) == 0) {\n            uVar8 = 0;\n            if ((unaff_RBX & 8) != 0) {\n                uVar8 = 0x48a5c0;\n            }\n        }\n        else {\n            uVar8 = 0x48a5c8;\n        }\n        iVar9 = iVar4 + 100000;\n    }\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + -0x18) = iVar5;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + -0x10) = uVar8;\n    if (*0x55878c <= *0x558788) goto code_r0x00419664;\n    *(*0x20 + -0x40) = iVar4;\n    *(*0x20 + -0x38) = iVar9;\ncode_r0x004198bc:\n    if (*(iVar5 + 0xb1) == '\\0') {\n        bVar10 = false;\n    }\n    else if ((unaff_RBX & 1) == 0) {\n        bVar10 = *0x5048a0 != 0;\n    }\n    else {\n        bVar10 = true;\n    }\n    if (bVar10) {\ncode_r0x00419664:\n        do {\n            uVar7 = unaff_RBX;\n            if (*(iVar5 + 0xb1) == '\\0') {\n                bVar10 = false;\n            }\n            else if ((unaff_RBX & 1) == 0) {\n                bVar10 = *0x5048a0 != 0;\n            }\n            else {\n                bVar10 = true;\n            }\n            if (bVar10) {\n                iVar5 = *(*0x20 + 8);\n                goto code_r0x0041984d;\n            }\n            *(*0x20 + -0x20) = iVar4;\n            *(*0x20 + -0x38) = iVar9;\n            if (*0x558700 == 0) {\n                *(*0x20 + -0x58) = 0x4196b0;\n                fcn.0041fda0();\n                in_RAX = *(*0x20 + 8);\n                iVar5 = *(*0x20 + -0x18);\n                uVar7 = *(*0x20 + 0x10);\n                iVar9 = *(*0x20 + -0x38);\n            }\n            iVar4 = *in_RAX;\n            if (iVar4 == 0) {\n                iVar4 = 0;\n            }\n            else {\n                iVar1 = *(iVar4 + 0x10);\n                if (iVar1 == 0) {\n                    iVar4 = 0;\n                }\n                else {\n                    *(iVar4 + 0x10) = iVar1 - 1U;\n                    if (0xfc < iVar1 - 1U) goto code_r0x0041988e;\n                    iVar4 = *(iVar4 + 0x10 + iVar1 * 8);\n                }\n            }\n            if (iVar4 == 0) {\n                *(*0x20 + -0x58) = 0x41970b;\n                iVar4 = fcn.0041fbc0(0, iVar5, iVar9);\n                if (iVar4 == 0) {\n                    *(*0x20 + -0x58) = 0x419719;\n                    fcn.00429ba0();\n                    *(*0x20 + -0x58) = 0x419725;\n                    iVar4 = fcn.0041fbc0();\n                }\n                iVar5 = *(*0x20 + -0x18);\n                uVar7 = *(*0x20 + 0x10);\n                iVar9 = *(*0x20 + -0x38);\n            }\n            if (iVar4 == 0) {\n                iVar4 = *(*0x20 + -0x20);\n                iVar5 = *(*0x20 + 8);\n                goto code_r0x0041984d;\n            }\n            *(*0x20 + -0x58) = 0x41975a;\n            fcn.00419d40(iVar4, iVar5, iVar9);\n            iVar5 = *(*0x20 + 8);\n            if (*(iVar5 + 0x18) < 2000) {\n                unaff_RBX = *(*0x20 + 0x10);\n                iVar9 = *(*0x20 + -0x38);\n                iVar4 = *(*0x20 + -0x20);\n            }\n            else {\n                LOCK();\n                *0x558548 = *0x558548 + *(iVar5 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                if ((unaff_RBX >> 1 & 1) == 0) {\n                    iVar4 = *(*0x20 + -0x20);\n                }\n                else {\n                    *(*0x20 + -0x58) = 0x41979f;\n                    fcn.00418a80();\n                    iVar5 = *(*0x20 + 8);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    iVar4 = 0;\n                }\n                iVar9 = *(iVar5 + 0x18);\n                *(iVar5 + 0x18) = 0;\n                iVar9 = *(*0x20 + -0x38) - iVar9;\n                if (iVar9 < 1) {\n                    if (*(*0x20 + -0x10) == NULL) {\n                        cVar3 = '\\0';\n                    }\n                    else {\n                        *(*0x20 + -0x28) = iVar9;\n                        *(*0x20 + -0x30) = iVar4;\n                        pcVar2 = **(*0x20 + -0x10);\n                        *(*0x20 + -0x58) = 0x4197e2;\n                        cVar3 = (*pcVar2)();\n                        iVar5 = *(*0x20 + 8);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        iVar9 = *(*0x20 + -0x28);\n                        iVar4 = *(*0x20 + -0x30);\n                    }\n                    uVar7 = unaff_RBX;\n                    if (cVar3 != '\\0') goto code_r0x0041984d;\n                    iVar9 = iVar9 + 100000;\n                }\n            }\n            iVar5 = *(*0x20 + -0x18);\n            in_RAX = *(*0x20 + 8);\n        } while( true );\n    }\n    LOCK();\n    uVar7 = *0x558788 + 1;\n    bVar10 = *0x55878c <= *0x558788;\n    *0x558788 = uVar7;\n    if (bVar10) goto code_r0x00419664;\n    *(*0x20 + -0x58) = 0x419919;\n    fcn.004179c0();\n    if (*(*0x20 + -0x10) == NULL) {\n        cVar3 = '\\0';\n    }\n    else {\n        pcVar2 = **(*0x20 + -0x10);\n        *(*0x20 + -0x58) = 0x41992e;\n        cVar3 = (*pcVar2)();\n    }\n    if (cVar3 != '\\0') {\n        iVar5 = *(*0x20 + 8);\n        uVar7 = *(*0x20 + 0x10);\n        iVar4 = *(*0x20 + -0x40);\ncode_r0x0041984d:\n        if (0 < *(iVar5 + 0x18)) {\n            LOCK();\n            *0x558548 = *0x558548 + *(iVar5 + 0x18);\n            if ((uVar7 >> 1 & 1) != 0) {\n                iVar5 = *(iVar5 + 0x18);\n                *(*0x20 + -0x58) = 0x419877;\n                fcn.00418a80(iVar5 - iVar4);\n                iVar5 = *(*0x20 + 8);\n            }\n            *(iVar5 + 0x18) = 0;\n        }\n        return;\n    }\n    goto code_r0x0041989b;\ncode_r0x0041988e:\n    *(*0x20 + -0x58) = 0x41989b;\n    fcn.00459720(0xfd);\ncode_r0x0041989b:\n    in_RAX = *(*0x20 + 8);\n    unaff_RBX = *(*0x20 + 0x10);\n    iVar5 = *(*0x20 + -0x18);\n    iVar4 = *(*0x20 + -0x40);\n    iVar9 = *(*0x20 + -0x38);\n    goto code_r0x004198bc;\n}\n",
        "token_count": 2402
    },
    "004199a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004199a0(void)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    bool bVar7;\n    \ncode_r0x004199a0:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n        puVar5 = *0x20 + -0x28;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if (*0x557ed4 != '\\0') {\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            iVar6 = -in_RAX[3];\n            iVar4 = *(*(unaff_R14 + 0x30) + 0x90);\n            *(*0x20 + -0x10) = iVar4;\n            do {\n                if ((*(iVar4 + 0xb1) != '\\0') || (unaff_RBX <= in_RAX[3] + iVar6)) goto code_r0x00419b47;\n                *(*0x20 + -0x18) = iVar6;\n                if (*0x558700 == 0) {\n                    *(*0x20 + -0x30) = 0x419a2a;\n                    fcn.0041fda0();\n                    in_RAX = *(*0x20 + 8);\n                    iVar4 = *(*0x20 + -0x10);\n                    iVar6 = *(*0x20 + -0x18);\n                }\n                iVar3 = *in_RAX;\n                if (iVar3 == 0) {\n                    iVar3 = 0;\n                }\n                else {\n                    iVar1 = *(iVar3 + 0x10);\n                    if (iVar1 == 0) {\n                        iVar3 = 0;\n                    }\n                    else {\n                        *(iVar3 + 0x10) = iVar1 - 1U;\n                        if (0xfc < iVar1 - 1U) goto code_r0x00419b59;\n                        iVar3 = *(iVar3 + 0x10 + iVar1 * 8);\n                    }\n                }\n                if (iVar3 == 0) {\n                    *(*0x20 + -0x30) = 0x419a85;\n                    iVar3 = fcn.0041fbc0(0, iVar4);\n                    if (iVar3 == 0) {\n                        *(*0x20 + -0x30) = 0x419a93;\n                        fcn.00429ba0();\n                        *(*0x20 + -0x30) = 0x419a9d;\n                        iVar3 = fcn.0041fbc0();\n                    }\n                    iVar4 = *(*0x20 + -0x10);\n                    iVar6 = *(*0x20 + -0x18);\n                    in_RAX = *(*0x20 + 8);\n                }\n                if (iVar3 == 0) {\n                    if (*0x55878c <= *0x558788) {\ncode_r0x00419b47:\n                        return iVar6 + in_RAX[3];\n                    }\n                    LOCK();\n                    uVar2 = *0x558788 + 1;\n                    bVar7 = *0x55878c <= *0x558788;\n                    *0x558788 = uVar2;\n                    if (bVar7) goto code_r0x00419b47;\n                    *(*0x20 + -0x30) = 0x419aeb;\n                    fcn.004179c0();\n                    in_RAX = *(*0x20 + 8);\n                    iVar6 = *(*0x20 + -0x18);\n                }\n                else {\n                    *(*0x20 + -0x30) = 0x419b05;\n                    fcn.00419d40(iVar3, iVar4);\n                    in_RAX = *(*0x20 + 8);\n                    if (in_RAX[3] < 2000) {\n                        iVar6 = *(*0x20 + -0x18);\n                    }\n                    else {\n                        LOCK();\n                        *0x558548 = *0x558548 + in_RAX[3];\n                        iVar6 = in_RAX[3];\n                        in_RAX[3] = 0;\n                        iVar6 = *(*0x20 + -0x18) + iVar6;\n                    }\n                }\n                iVar4 = *(*0x20 + -0x10);\n                unaff_RBX = *(*0x20 + 0x10);\n            } while( true );\n        }\n        goto code_r0x00419b66;\n    }\n    goto code_r0x00419b78;\ncode_r0x00419b59:\n    *(*0x20 + -0x30) = 0x419b66;\n    fcn.00459720(0xfd);\ncode_r0x00419b66:\n    unaff_RBX = 0x18;\n    *(*0x20 + -0x30) = 0x419b77;\n    in_RAX = fcn.00430d40();\ncode_r0x00419b78:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + 0x10) = unaff_RBX;\n    *(puVar5 + -8) = 0x419b87;\n    fcn.0045b6e0();\n    in_RAX = *(puVar5 + 8);\n    unaff_RBX = *(puVar5 + 0x10);\n    *0x20 = puVar5;\n    goto code_r0x004199a0;\n}\n",
        "token_count": 1318
    },
    "0041a380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041a380(ulong arg1, ulong noname_1, uint8_t *arg3)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    bool bVar3;\n    char cVar4;\n    uint64_t in_RAX;\n    uint64_t uVar5;\n    uint8_t uVar6;\n    ulong unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t *unaff_RSI;\n    int64_t unaff_RDI;\n    uint8_t *puVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((in_RAX & 7) == 0) {\n                *(*0x20 + 8) = in_RAX;\n                iVar1 = *(unaff_RDI + 0x50);\n                puVar8 = arg3 >> 3;\n                if (*0x557c73 == '\\0') {\n                    uVar6 = 1 << (arg3 & 7);\n                    if (((*0x5580ac < 1) || (arg3 <= *(unaff_RDI + 0x30) && *(unaff_RDI + 0x30) != arg3)) ||\n                       (arg3 = puVar8,  (puVar8[*(unaff_RDI + 0x48)] & uVar6) != 0)) {\n                        if ((uVar6 & puVar8[iVar1]) != 0) {\n                            return;\n                        }\n                        LOCK();\n                        puVar8[iVar1] = puVar8[iVar1] | uVar6;\n                        uVar2 = *(unaff_RDI + 0x18);\n                        arg3 = uVar2 + 0x800000000000;\n                        if (arg3 >> 0x2a < 0x40) {\n                            iVar1 = *(*((arg3 >> 0x2a) * 8 + 0x52a0d8) + (arg3 >> 0x16 & 0xfffff) * 8);\n                            uVar5 = uVar2 >> 0x10 & 0x3f;\n                            arg3 = iVar1 + uVar5 + 0x21040;\n                            uVar6 = 1 << (uVar2 >> 0xd & 7);\n                            if ((uVar6 & *(iVar1 + 0x21040 + uVar5)) == 0) {\n                                LOCK();\n                                *arg3 = *arg3 | uVar6;\n                            }\n                            if ((*(unaff_RDI + 0x62) & 1) != 0) {\n                                unaff_RSI[2] = unaff_RSI[2] + *(unaff_RDI + 0x68);\n                                return;\n                            }\n                            goto code_r0x0041a4f3;\n                        }\n                        goto code_r0x0041a551;\n                    }\n                }\n                else {\n                    *(*0x20 + 0x28) = unaff_RSI;\n                    *(*0x20 + -0x50) = 0x41a4e5;\n                    cVar4 = fcn.00412fa0(arg1, iVar1, arg3);\n                    if (cVar4 != '\\0') {\n                        return;\n                    }\n                    in_RAX = *(*0x20 + 8);\n                    unaff_RSI = *(*0x20 + 0x28);\ncode_r0x0041a4f3:\n                    iVar1 = *unaff_RSI;\n                    if (iVar1 == 0) {\n                        bVar3 = false;\ncode_r0x0041a521:\n                        if (!bVar3) {\n                            *(*0x20 + -0x50) = 0x41a530;\n                            fcn.0041f8a0();\n                        }\n                        return;\n                    }\n                    uVar2 = *(iVar1 + 0x10);\n                    if (uVar2 == 0xfd) {\n                        bVar3 = false;\n                        goto code_r0x0041a521;\n                    }\n                    if (uVar2 < 0xfd) {\n                        *(iVar1 + 0x18 + uVar2 * 8) = in_RAX;\n                        *(iVar1 + 0x10) = *(iVar1 + 0x10) + 1;\n                        bVar3 = true;\n                        goto code_r0x0041a521;\n                    }\n                    *(*0x20 + -0x50) = 0x41a551;\n                    fcn.00459720(0xfd);\ncode_r0x0041a551:\n                    *(*0x20 + -0x50) = 0x41a55e;\n                    fcn.00459740(0x40);\n                }\n                *(*0x20 + -0x10) = arg1;\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x50) = 0x41a56d;\n                fcn.004324c0();\n                *(*0x20 + -0x50) = 0x41a57e;\n                fcn.00432dc0();\n                *(*0x20 + -0x50) = 0x41a588;\n                fcn.00432c20();\n                *(*0x20 + -0x50) = 0x41a599;\n                fcn.00432dc0();\n                *(*0x20 + -0x50) = 0x41a5a5;\n                fcn.00432c20();\n                *(*0x20 + -0x50) = 0x41a5b6;\n                fcn.00432dc0();\n                *(*0x20 + -0x50) = 0x41a5c5;\n                fcn.00432c20();\n                *(*0x20 + -0x50) = 0x41a5d6;\n                fcn.00432dc0();\n                *(*0x20 + -0x50) = 0x41a5db;\n                fcn.00432540();\n                *(*0x20 + -0x50) = 0x41a5f6;\n                fcn.0041a6a0(*(*0x20 + -0x18));\n                arg1 = *(*0x20 + 8);\n                unaff_RDI = -1;\n                *(*0x20 + -0x50) = 0x41a613;\n                fcn.0041a6a0(arg1);\n                *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n                *(*0x20 + -0x50) = 0x41a62f;\n                fcn.00430d40();\n            }\n            unaff_RBX = 0x23;\n            *(*0x20 + -0x50) = 0x41a645;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + 0x20) = unaff_RDI;\n        *(puVar7 + 0x28) = unaff_RSI;\n        *(puVar7 + 0x30) = arg3;\n        *(puVar7 + -8) = 0x41a669;\n        fcn.00457040();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = *(puVar7 + 0x20);\n        unaff_RSI = *(puVar7 + 0x28);\n        arg3 = *(puVar7 + 0x30);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1836
    },
    "0041a6a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0041a6a0(uint64_t arg1)\n\n{\n    bool bVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    uVar2 = arg1 + 0x800000000000 >> 0x2a;\n    if (uVar2 < 0x40) {\n        iVar3 = *(uVar2 * 8 + 0x52a0d8);\n        if (iVar3 == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = *(iVar3 + (arg1 + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar3 == 0) {\n                iVar3 = 0;\n            }\n            else {\n                iVar3 = *(iVar3 + 0x20000 + (arg1 >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar3 = 0;\n    }\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432dc0();\n    fcn.00432c20();\n    fcn.00432540();\n    if (iVar3 == 0) {\n        fcn.004324c0();\n        fcn.00432dc0();\n        fcn.00432540();\n        return;\n    }\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432c20();\n    fcn.00432dc0();\n    fcn.00432c20();\n    fcn.00432dc0();\n    fcn.00432ac0();\n    fcn.00432dc0();\n    fcn.00432ac0();\n    fcn.00432dc0();\n    fcn.00432540();\n    if (*(iVar3 + 99) < *0x4fd5d8) {\n        fcn.004324c0();\n        fcn.00432dc0();\n        fcn.00432720();\n        fcn.00432540();\n    }\n    else {\n        fcn.004324c0();\n        fcn.00432dc0();\n        fcn.00432ac0();\n        fcn.00432dc0();\n        fcn.00432540();\n    }\n    uVar2 = *(iVar3 + 0x68);\n    if ((*(iVar3 + 99) == '\\x02') && (uVar2 == 0)) {\n        uVar2 = unaff_RDI + 8;\n    }\n    bVar1 = false;\n    for (uVar4 = 0; uVar4 < uVar2; uVar4 = uVar4 + 8) {\n        if ((uVar4 < 0x400) || ((unaff_RDI - 0x80 < uVar4 && (uVar4 < unaff_RDI + 0x80)))) {\n            if (bVar1) {\n                fcn.004324c0();\n                fcn.00432dc0();\n                fcn.00432540();\n            }\n            fcn.004324c0();\n            fcn.00432dc0();\n            fcn.00432dc0();\n            fcn.00432dc0();\n            fcn.00432ac0();\n            fcn.00432dc0();\n            fcn.00432c20();\n            fcn.00432540();\n            if (unaff_RDI == uVar4) {\n                fcn.004324c0();\n                fcn.00432dc0();\n                fcn.00432540();\n            }\n            fcn.004324c0();\n            fcn.00432720();\n            fcn.00432540();\n            bVar1 = false;\n        }\n        else {\n            bVar1 = true;\n        }\n    }\n    if (bVar1) {\n        fcn.004324c0();\n        fcn.00432dc0();\n        fcn.00432540();\n    }\n    return;\n}\n",
        "token_count": 955
    },
    "0041aae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041aae0(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    uint8_t uVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    uint8_t *puVar6;\n    int64_t unaff_RBX;\n    uint64_t uVar7;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    if (*0x557c73 == '\\0') {\n        uVar7 = (unaff_RBX - *(in_RAX + 0x18)) * *(in_RAX + 0x5c);\n        puVar6 = (uVar7 >> 0x23) + *(in_RAX + 0x50);\n        LOCK();\n        *puVar6 = *puVar6 | 1 << (uVar7 >> 0x20 & 7);\n        uVar7 = *(in_RAX + 0x18);\n        uVar5 = uVar7 + 0x800000000000 >> 0x2a;\n        if (uVar5 < 0x40) {\n            iVar2 = *(*(uVar5 * 8 + 0x52a0d8) + (uVar7 + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            uVar5 = uVar7 >> 0x10 & 0x3f;\n            puVar6 = iVar2 + uVar5 + 0x21040;\n            uVar4 = 1 << (uVar7 >> 0xd & 7);\n            if ((uVar4 & *(iVar2 + 0x21040 + uVar5)) == 0) {\n                LOCK();\n                *puVar6 = *puVar6 | uVar4;\n            }\n            iVar2 = *(*(unaff_R14 + 0x30) + 0xa0);\n            piVar1 = iVar2 + 0x16a8;\n            *piVar1 = *piVar1 + arg1;\n            piVar1 = iVar2 + 0x16b0;\n            *piVar1 = *piVar1 + unaff_RDI;\n            return;\n        }\n        fcn.00459740(0x40);\n    }\n    fcn.00430d40();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 546
    },
    "0041ad40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041ad40(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong noname_0;\n    ulong arg2;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    double dVar5;\n    double dVar6;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    *(in_RAX + 0x48) = in_XMM15;\n    *(in_RAX + 0x58) = in_XMM15;\n    *(in_RAX + 0x68) = in_XMM15;\n    uVar2 = *(in_RAX + 0x30) + 0x100000;\n    if (*(in_RAX + 0x20) < uVar2) {\n        *(in_RAX + 0x20) = uVar2;\n    }\n    dVar5 = *0x557cb0 * *0x49e1f8;\n    iVar3 = *0x49e208 + dVar5;\n    *(in_RAX + 0x80) = iVar3;\n    dVar6 = iVar3 / dVar5 - *0x49e228;\n    if ((dVar6 < str.333333._0_8_) || (*0x49e200 < dVar6)) {\n        if (dVar5 < iVar3) {\n            *(in_RAX + 0x80) = iVar3 + -1;\n        }\n        *(in_RAX + 0x98) = (dVar5 - *(in_RAX + 0x80)) / *0x557cb0;\n    }\n    else {\n        *(in_RAX + 0x98) = 0;\n    }\n    if (0 < *0x5580b8) {\n        *(in_RAX + 0x80) = *0x557cb0;\n        *(in_RAX + 0x98) = 0;\n    }\n    iVar1 = *0x503f48;\n    iVar3 = *0x503f40;\n    for (iVar4 = 0; iVar4 < iVar1; iVar4 = iVar4 + 1) {\n        *(*(iVar3 + iVar4 * 8) + 0x1678) = in_XMM15;\n    }\n    fcn.0041afe0();\n    if (0 < *0x5580b0) {\n        noname_0 = *(in_RAX + 0x88);\n        arg2 = *0x558538;\n        fcn.004324c0();\n        fcn.00432dc0();\n        fcn.004327c0(noname_0, arg2);\n        fcn.00432dc0();\n        fcn.00432ac0();\n        fcn.00432dc0();\n        fcn.00432ac0();\n        fcn.00432dc0();\n        fcn.00432ac0();\n        fcn.00432dc0();\n        fcn.00432bc0();\n        fcn.00432dc0();\n        fcn.004327c0(noname_0, arg2);\n        fcn.00432720();\n        fcn.00432540();\n    }\n    return;\n}\n",
        "token_count": 760
    },
    "0041b0e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\ndouble fcn.0041b0e0(void)\n\n{\n    double dVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    ulong arg2;\n    char unaff_BL;\n    int64_t unaff_R14;\n    double dVar5;\n    double dVar6;\n    double dVar7;\n    double dVar8;\n    int64_t iStack128;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (unaff_BL != '\\0') {\n        return *(in_RAX + 0x10);\n    }\n    uVar2 = *(in_RAX + 0x40);\n    uVar4 = *(in_RAX + 0x20) - uVar2;\n    if (uVar4 < 0) {\n        dVar5 = uVar4 >> 1 | uVar4 & 1;\n        dVar5 = dVar5 + dVar5;\n    }\n    else {\n        dVar5 = uVar4;\n    }\n    if (uVar2 < 0) {\n        dVar6 = uVar2 >> 1 | uVar2 & 1;\n        dVar6 = dVar6 + dVar6;\n    }\n    else {\n        dVar6 = uVar2;\n    }\n    dVar5 = dVar5 / dVar6;\n    if (dVar5 < 0.0) {\n        dVar5 = 0.0;\n    }\n    uVar4 = *(in_RAX + 0x30);\n    if (uVar4 < 0) {\n        dVar6 = uVar4 >> 1 | uVar4 & 1;\n        dVar6 = dVar6 + dVar6;\n    }\n    else {\n        dVar6 = uVar4;\n    }\n    if (uVar2 < 0) {\n        dVar7 = uVar2 >> 1 | uVar2 & 1;\n        dVar7 = dVar7 + dVar7;\n    }\n    else {\n        dVar7 = uVar2;\n    }\n    fcn.0045afe0();\n    iVar3 = iStack128 - *(in_RAX + 0x78);\n    dVar8 = *0x49e1f8;\n    if (0 < iVar3) {\n        dVar8 = *0x49e1f8 + *(in_RAX + 0x58) / (iVar3 * *0x557cb0);\n    }\n    dVar1 = *(in_RAX + 0x10);\n    dVar6 = *0x49e208 * ((dVar5 - dVar1) - ((dVar6 / dVar7 - *0x49e228) - dVar1) * (dVar8 / *0x49e200));\n    if (0 < *0x5580b0) {\n        uVar2 = *(in_RAX + 0x40);\n        arg2 = *(in_RAX + 0x18);\n        if (uVar2 < 0) {\n            dVar7 = uVar2 >> 1 | uVar2 & 1;\n            dVar7 = dVar7 + dVar7;\n        }\n        else {\n            dVar7 = uVar2;\n        }\n        fcn.004324c0();\n        fcn.00432dc0();\n        fcn.00432ac0();\n        fcn.00432dc0();\n        fcn.004327c0(in_RAX, arg2);\n        fcn.00432dc0();\n        fcn.00432ac0();\n        fcn.00432dc0();\n        fcn.004327c0(in_RAX, arg2);\n        fcn.00432dc0();\n        fcn.00432ac0();\n        fcn.00432dc0();\n        fcn.004327c0(in_RAX, arg2);\n        fcn.00432dc0();\n        fcn.00432bc0((*0x49e228 + dVar5) * dVar7);\n        fcn.00432dc0();\n        fcn.004327c0(in_RAX, arg2);\n        fcn.00432dc0();\n        fcn.004327c0(in_RAX, arg2);\n        fcn.00432dc0();\n        fcn.00432bc0();\n        fcn.00432dc0();\n        fcn.004327c0(in_RAX, arg2);\n        fcn.00432dc0();\n        fcn.004327c0(in_RAX, arg2);\n        fcn.00432dc0();\n        fcn.004327c0(in_RAX, arg2);\n        fcn.00432720();\n        fcn.00432540();\n    }\n    return dVar6 + dVar1;\n}\n",
        "token_count": 1095
    },
    "0041b540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041b540(void)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int64_t iVar3;\n    char cVar4;\n    int64_t in_RAX;\n    int64_t iVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int32_t iVar8;\n    uint32_t uVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x80) < 1) {\n                return;\n            }\n            if (*0x557cb0 < 2) {\n                return;\n            }\n            if (((unaff_R14 == 0) || (*(unaff_R14 + 0x30) == 0)) ||\n               (piVar2 = *(*(unaff_R14 + 0x30) + 0xa0),  piVar2 == NULL)) {\n                return;\n            }\n            iVar6 = *piVar2;\n            *(*0x20 + -0x14) = iVar6;\n            iVar5 = 0;\n            while( true ) {\n                iVar8 = *0x557cb0;\n                if (4 < iVar5) {\n                    return;\n                }\n                iVar3 = *(unaff_R14 + 0x30);\n                uVar9 = *(iVar3 + 0xf0);\n                uVar1 = *(iVar3 + 0xf4);\n                *(iVar3 + 0xf0) = uVar1;\n                uVar9 = uVar9 ^ uVar9 << 0x11;\n                uVar9 = uVar1 >> 0x10 ^ uVar9 >> 7 ^ uVar1 ^ uVar9;\n                *(iVar3 + 0xf4) = uVar9;\n                iVar8 = (uVar1 + uVar9) * (iVar8 - 1) >> 0x20;\n                if (iVar6 <= iVar8) {\n                    iVar8 = iVar8 + 1;\n                }\n                if (*0x503f48 <= iVar8) break;\n                if (*(*(*0x503f40 + iVar8 * 8) + 4) == 1) {\n                    *(*0x20 + -0x10) = iVar5;\n                    *(*0x20 + -0x30) = 0x41b646;\n                    cVar4 = fcn.0043de80();\n                    if (cVar4 != '\\0') {\n                        return;\n                    }\n                    iVar5 = *(*0x20 + -0x10);\n                    iVar6 = *(*0x20 + -0x14);\n                }\n                iVar5 = iVar5 + 1;\n            }\n            *(*0x20 + -0x30) = 0x41b674;\n            in_RAX = fcn.00459720(*0x503f48);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x41b67f;\n        fcn.00457040();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 787
    },
    "0041b6a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041b732)\n\nulong fcn.0041b6a0(void)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    bool bVar4;\n    int64_t in_RAX;\n    int64_t iVar5;\n    int64_t *piVar6;\n    int64_t iVar7;\n    int64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x557ca4 != 0) break;\n            unaff_RBX = 0x36;\n            *(*0x20 + -0x38) = 0x41b8fc;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x41b90c;\n        fcn.00457040();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n    if (((unaff_RBX == 0) || (*(unaff_RBX + 0x1698) == 0)) ||\n       ((*(*(unaff_RBX + 0x1698) + 0x10) == 0 && (*(*(unaff_RBX + 0x16a0) + 0x10) == 0)))) {\n        if (*0x558700 == 0) {\n            if (*0x558788 < *0x55878c) {\n                bVar4 = true;\n            }\n            else {\n                bVar4 = false;\n            }\n        }\n        else {\n            bVar4 = true;\n        }\n    }\n    else {\n        bVar4 = true;\n    }\n    if (!bVar4) {\n        return 0;\n    }\n    if (*0x557d88 == 0) {\n        piVar6 = NULL;\n    }\n    else {\n        piVar6 = (*0x557d88 >> 0x13) << 3;\n        *0x557d88 = *piVar6;\n        LOCK();\n    }\n    if (piVar6 == NULL) {\n        return 0;\n    }\n    do {\n        uVar2 = *(in_RAX + 0x80);\n        if (uVar2 < 1) break;\n        LOCK();\n        puVar1 = in_RAX + 0x80;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar2 == uVar3) * (*puVar1 ^ uVar2 - 1);\n    } while (uVar2 != uVar3);\n    if (uVar2 < 1) {\n        if (*(in_RAX + 0x98) == 0.0) {\n            *(*0x20 + -0x38) = 0x41b896;\n            fcn.004090a0(in_RAX, piVar6, 0x557d88);\n            return 0;\n        }\n        *(*0x20 + -0x10) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -0x20) = piVar6;\n        *(*0x20 + -0x38) = 0x41b7fa;\n        fcn.0045afe0();\n        iVar5 = *(*0x20 + -0x30) - *(*(*0x20 + -0x10) + 0x78);\n        if (iVar5 < 1) {\n            iVar7 = *(*0x20 + 0x10);\n        }\n        else {\n            iVar7 = *(*0x20 + 0x10);\n            if (*(*(*0x20 + -0x10) + 0x98) < *(iVar7 + 0x1680) / iVar5) {\n                *(*0x20 + -0x38) = 0x41b866;\n                fcn.004090a0();\n                return 0;\n            }\n        }\n        *(iVar7 + 0x1688) = 2;\n        piVar6 = *(*0x20 + -0x20);\n    }\n    else {\n        *(unaff_RBX + 0x1688) = 1;\n    }\n    *(*0x20 + -0x18) = piVar6[2];\n    *(*0x20 + -0x38) = 0x41b8c7;\n    fcn.00435000(1);\n    if (*0x509e70 != '\\0') {\n        *(*0x20 + -0x38) = 0x41b8dc;\n        fcn.0044caa0();\n    }\n    return *(*0x20 + -0x18);\n}\n",
        "token_count": 1199
    },
    "0041b920": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041b920(double param_1)\n\n{\n    int32_t iVar1;\n    int32_t *in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong noname_0;\n    uint64_t uVar4;\n    ulong arg2;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    double extraout_XMM0_Qa;\n    double dVar7;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *in_RAX;\n            if (iVar1 < 0) {\n                uVar4 = 0xffffffffffffffff;\n                if (param_1 < 0.0) {\n                    param_1 = 0.0;\n                }\n            }\n            else {\n                uVar4 = (iVar1 * *(in_RAX + 0x10) >> 1) / 0x32 + *(in_RAX + 0x10);\n                dVar7 = *0x49e220 * (iVar1 / *0x49e258);\n                if (param_1 <= dVar7) {\n                    dVar7 = param_1;\n                }\n                param_1 = *0x49e210 * (iVar1 / *0x49e258);\n                if (param_1 <= dVar7) {\n                    param_1 = dVar7;\n                }\n            }\n            *(in_RAX + 4) = param_1;\n            if (*in_RAX < 0) {\n                uVar2 = 0xffffffffffffffff;\n                goto code_r0x0041ba85;\n            }\n            uVar2 = *(in_RAX + 0x10);\n            if (uVar2 < 0) {\n                dVar7 = uVar2 & 1 | uVar2 >> 1;\n                dVar7 = dVar7 + dVar7;\n            }\n            else {\n                dVar7 = uVar2;\n            }\n            dVar7 = (*0x49e228 + param_1) * dVar7;\n            if (*0x49e278 <= dVar7) {\n                uVar2 = dVar7 - *0x49e278 | 0x8000000000000000;\n            }\n            else {\n                uVar2 = dVar7;\n            }\n            uVar5 = *(in_RAX + 2);\n            if ((*0x52a06c == 0 || *0x52a070 != 0) && (uVar5 < *(in_RAX + 0xc) + 0x100000U)) {\n                uVar5 = *(in_RAX + 0xc) + 0x100000U;\n            }\n            if (uVar2 < uVar5) {\n                uVar2 = uVar5;\n            }\n            if (-1 < uVar2) {\n                if (uVar4 < uVar2) {\n                    uVar4 = uVar2;\n                }\ncode_r0x0041ba85:\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x40) = uVar2;\n                *(in_RAX + 6) = uVar2;\n                uVar5 = *(in_RAX + 8);\n                *(in_RAX + 8) = uVar4;\n                if (*0x509e70 != '\\0') {\n                    *(*0x20 + -0x58) = 0x41baa7;\n                    fcn.0044cd60(uVar2, uVar5);\n                    uVar2 = *(*0x20 + -0x40);\n                    in_RAX = *(*0x20 + -0x10);\n                }\n                if (*0x557cac != 0) {\n                    *(*0x20 + -0x58) = 0x41bac5;\n                    fcn.0041afe0();\n                    uVar2 = *(*0x20 + -0x40);\n                    in_RAX = *(*0x20 + -0x10);\n                }\n                if (*0x52a06c == 0 || *0x52a070 != 0) {\n                    iVar3 = (uVar2 - *(in_RAX + 0xc)) + -0x100000;\n                    if (iVar3 < 0x2000) {\n                        iVar3 = 0x2000;\n                    }\n                    if (*0x52a098 - *0x52a0a0 < 1) {\n                        *0x52a0b8 = 0.0;\n                    }\n                    else {\n                        *0x52a0b8 = (*0x52a098 - *0x52a0a0) / iVar3;\n                        *0x52a0a8 = *0x52a0a0;\n                        *0x52a0b0 = *(in_RAX + 0xc);\n                    }\n                }\n                else {\n                    *0x52a0b8 = 0.0;\n                }\n                *(*0x20 + -0x58) = 0x41bb6c;\n                fcn.0041bdc0();\n                return;\n            }\n            *(*0x20 + -0x18) = param_1;\n            *(*0x20 + -0x40) = uVar5;\n            *(*0x20 + -0x20) = *(in_RAX + 8);\n            noname_0 = *(in_RAX + 0x10);\n            *(*0x20 + -0x28) = noname_0;\n            arg2 = *(in_RAX + 0xc);\n            *(*0x20 + -0x30) = arg2;\n            *(*0x20 + -0x38) = *0x558810;\n            *(*0x20 + -0x58) = 0x41bbad;\n            fcn.004324c0();\n            *(*0x20 + -0x58) = 0x41bbbe;\n            fcn.00432dc0();\n            *(*0x20 + -0x58) = 0x41bbc8;\n            fcn.00432ac0();\n            *(*0x20 + -0x58) = 0x41bbd9;\n            fcn.00432dc0();\n            *(*0x20 + -0x58) = 0x41bbe5;\n            fcn.00432ac0();\n            *(*0x20 + -0x58) = 0x41bbf6;\n            fcn.00432dc0();\n            *(*0x20 + -0x58) = 0x41bc05;\n            fcn.00432ac0();\n            *(*0x20 + -0x58) = 0x41bc16;\n            fcn.00432dc0();\n            *(*0x20 + -0x58) = 0x41bc25;\n            fcn.00432ac0();\n            *(*0x20 + -0x58) = 0x41bc36;\n            fcn.00432dc0();\n            *(*0x20 + -0x58) = 0x41bc45;\n            fcn.004327c0(noname_0, arg2);\n            *(*0x20 + -0x58) = 0x41bc56;\n            fcn.00432dc0();\n            *(*0x20 + -0x58) = 0x41bc65;\n            fcn.00432ac0();\n            *(*0x20 + -0x58) = 0x41bc6a;\n            fcn.00432720();\n            *(*0x20 + -0x58) = 0x41bc6f;\n            fcn.00432540();\n            *(*0x20 + -0x58) = 0x41bc85;\n            in_RAX = fcn.00430d40();\n            param_1 = extraout_XMM0_Qa;\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = param_1;\n        *(puVar6 + -8) = 0x41bc96;\n        fcn.00457040();\n        in_RAX = *(puVar6 + 8);\n        param_1 = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1924
    },
    "0041bdc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0041bdc0(void)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    double dVar2;\n    double dVar3;\n    double dVar4;\n    \n    if (*0x558528 == 0) {\n        *0x52a0c0 = 0xffffffffffffffff;\n        return in_RAX;\n    }\n    if (*0x558520 < 0) {\n        dVar2 = *0x558520 >> 1 | *0x558520 & 1;\n        dVar2 = dVar2 + dVar2;\n    }\n    else {\n        dVar2 = *0x558520;\n    }\n    if (*0x558528 < 0) {\n        dVar3 = *0x558528 >> 1 | *0x558528 & 1;\n        dVar3 = dVar3 + dVar3;\n    }\n    else {\n        dVar3 = *0x558528;\n    }\n    if (*0x55b220 < 0) {\n        dVar4 = *0x55b220 >> 1 | *0x55b220 & 1;\n        dVar4 = dVar4 + dVar4;\n    }\n    else {\n        dVar4 = *0x55b220;\n    }\n    dVar4 = dVar4 * (dVar2 / dVar3);\n    if (*0x49e278 <= dVar4) {\n        uVar1 = dVar4 - *0x49e278 | 0x8000000000000000;\n    }\n    else {\n        uVar1 = dVar4;\n    }\n    *0x52a0c0 = -*0x557df8 & (uVar1 + uVar1 / 10 + *0x557df8) - 1;\n    if ((*0x52a0c0 < *0x559b10 - *0x559b20) && (*0x557df8 <= (*0x559b10 - *0x559b20) - *0x52a0c0)) {\n        return uVar1 * -0x3333333333333333;\n    }\n    *0x52a0c0 = 0xffffffffffffffff;\n    return uVar1 * -0x3333333333333333;\n}\n",
        "token_count": 509
    },
    "0041bf00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041bf00(void)\n\n{\n    uint uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00409300();\n    uVar1 = *0x5040c0;\n    if (*0x5040b0 != '\\0') {\n        *0x5040c0 = 0;\n        fcn.004494a0(uVar1);\n        *0x5040b0 = '\\0';\n        *(*0x5040a8 + 0xa0) = 0;\n        fcn.00438ea0();\n    }\n    fcn.00409520();\n    return;\n}\n",
        "token_count": 186
    },
    "0041c600": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041c600(uchar param_1)\n\n{\n    char cVar1;\n    uint in_EAX;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_EAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = param_1;\n            *(*0x20 + -0x30) = 0x41c62a;\n            fcn.004324c0();\n            unaff_RBX = *0x559b20;\n            if (*0x559b10 - *0x559b20 != 0) {\n                *(*0x20 + -0x10) = *0x559b20;\n                *(*0x20 + -0x18) = (*0x559b18 * 100) / (*0x559b10 - *0x559b20);\n                *(*0x20 + -0x30) = 0x41c66d;\n                fcn.004324c0();\n                *(*0x20 + -0x30) = 0x41c67e;\n                fcn.00432dc0();\n                *(*0x20 + -0x30) = 0x41c689;\n                fcn.00432ac0();\n                *(*0x20 + -0x30) = 0x41c68e;\n                fcn.004326e0();\n                *(*0x20 + -0x30) = 0x41c69c;\n                fcn.00432ac0();\n                *(*0x20 + -0x30) = 0x41c6ad;\n                fcn.00432dc0();\n                *(*0x20 + -0x30) = 0x41c6bb;\n                fcn.00432ac0();\n                *(*0x20 + -0x30) = 0x41c6cc;\n                fcn.00432dc0();\n                *(*0x20 + -0x30) = 0x41c6d6;\n                fcn.00432ac0();\n                *(*0x20 + -0x30) = 0x41c6e7;\n                fcn.00432dc0();\n                *(*0x20 + -0x30) = 0x41c6ec;\n                fcn.00432540();\n                if (*(*0x20 + 0x18) != '\\0') {\n                    *(*0x20 + -0x30) = 0x41c6fa;\n                    fcn.004324c0();\n                    *(*0x20 + -0x30) = 0x41c70b;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x30) = 0x41c710;\n                    fcn.00432540();\n                }\n                *(*0x20 + -0x30) = 0x41c715;\n                fcn.004324c0();\n                *(*0x20 + -0x30) = 0x41c71a;\n                fcn.00432720();\n                *(*0x20 + -0x30) = 0x41c71f;\n                fcn.00432540();\n                cVar1 = *(*(unaff_R14 + 0x30) + 0xe7);\n                *(*(unaff_R14 + 0x30) + 0xe7) = cVar1 + -1;\n                if (cVar1 == '\\x01') {\n                    *(*0x20 + -0x30) = 0x41c747;\n                    fcn.00409520();\n                }\n                return;\n            }\n            *(*0x20 + -0x30) = 0x41c756;\n            iVar2 = *0x559b18;\n            in_EAX = fcn.0042e820();\n            param_1 = iVar2;\n        }\n        *(puVar3 + 8) = in_EAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        puVar3[0x18] = param_1;\n        *(puVar3 + -8) = 0x41c769;\n        fcn.00457040();\n        in_EAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        param_1 = puVar3[0x18];\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1113
    },
    "0041c780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041c780(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045b6e0();\n    }\n    if (0 < *0x5580c8) {\n        fcn.0041c600(0, *(in_RAX + 0x100e0));\n    }\n    fcn.00429220(in_RAX + 0x10090);\n    fcn.00428fe0();\n    *(in_RAX + 0x100e8) = (*(in_RAX + 0x100a8) + 0x3fffffU & 0xffffffffffc00000) >> 6;\n    *(in_RAX + 0x100e0) = *(in_RAX + 0x100e0) + 1;\n    *(in_RAX + 0x100f0) = 0;\n    *(in_RAX + 0x10100) = *0x4f02a0;\n    *(in_RAX + 0x100f8) = *0x4f0280;\n    return;\n}\n",
        "token_count": 286
    },
    "0041ca60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041cc8c)\n\nint64_t fcn.0041ca60(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t arg1_00;\n    char cVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    char unaff_SIL;\n    uint64_t unaff_RDI;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        uVar3 = arg1;\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x18)) {\n            puVar5 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = unaff_RBX + 0x800000000000;\n            if (uVar2 < arg1 + 0x800000000000) {\n                uVar3 = arg1 - unaff_RBX;\n            }\n            else {\n                uVar3 = 0;\n            }\n            if (uVar3 == 0) {\n                return 0;\n            }\n            if ((unaff_RBX & 0x3fffff) == 0) {\n                arg1_00 = *0x557df8 >> 0xd;\n                if (arg1_00 == 0) {\n                    arg1_00 = 1;\n                }\n                uVar6 = unaff_RDI >> 0xd;\n                uVar3 = unaff_RDI & 0x1fff;\n                unaff_RDI = uVar6;\n                if (uVar3 != 0) {\n                    unaff_RDI = uVar6 + 1;\n                }\n                uVar3 = *(in_RAX + 0x68);\n                uVar6 = arg1 + 0x7fffffffffff >> 0x16;\n                if (uVar6 < uVar3) {\n                    uVar3 = *(*(in_RAX + 0x60) + uVar6 * 8);\n                    if (uVar3 < 0) {\n                        uVar3 = 0x200000;\n                    }\n                    else {\n                        uVar3 = uVar3 >> 0x15 & 0x1fffff;\n                    }\n                    *(*0x20 + -0x28) = uVar2;\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + 0x28) = unaff_SIL;\n                    *(*0x20 + -0x30) = unaff_RBX;\n                    *(*0x20 + -0x48) = unaff_RDI;\n                    *(*0x20 + -0x50) = arg1_00;\n                    if (uVar3 < arg1_00) {\ncode_r0x0041cc3c:\n                        *(*0x20 + -0x20) = in_XMM15;\n                        *(*0x20 + -0x10) = 0;\n                        *(*0x20 + -0x20) = 0x41cea0;\n                        *(*0x20 + -0x18) = in_RAX;\n                        *(*0x20 + -0x10) = arg1_00;\n                        iVar7 = uVar6 * 0x400000 - 0x800000000000;\n                        if (uVar2 < uVar6 * 0x400000) {\n                            uVar3 = iVar7 - unaff_RBX;\n                        }\n                        else {\n                            uVar3 = 0;\n                        }\n                        if (uVar3 == 0) {\n                            return 0;\n                        }\n                        if (unaff_SIL != '\\0') {\n                            *(*0x20 + -0x38) = iVar7;\n                            uVar1 = *(in_RAX + 0x10108);\n                            *(*0x20 + -0x90) = 0x41cd0d;\n                            fcn.00409520(uVar1);\n                            iVar7 = *(*0x20 + -0x38);\n                        }\n                        cVar4 = iVar7;\n                        *(*0x20 + -0x90) = 0x41cd29;\n                        uVar2 = (**(*0x20 + -0x20))(*(*0x20 + -0x20), *0x20 + -0x20);\n                        *(*0x20 + -0x40) = uVar2;\n                        if (*(*0x20 + 0x28) != '\\0') {\n                            *(*0x20 + -0x61) = cVar4;\n                            *(*0x20 + -0x90) = 0x41cd54;\n                            fcn.00409300();\n                            uVar2 = *(*0x20 + -0x40);\n                            cVar4 = *(*0x20 + -0x61);\n                        }\n                        if (cVar4 == '\\0') {\n                            return 0;\n                        }\n                        if (uVar2 >> 0xd < 0x2000) {\n                            *(*0x20 + -0x90) = 0x41cdbf;\n                            uVar1 = fcn.0041d4a0(*(*0x20 + -0x50));\n                            *(*0x20 + -0x60) = 0x1ff;\n                            *(*0x20 + -0x90) = 0x41cde6;\n                            fcn.0041d020(uVar1);\n                            return *(*0x20 + -0x60) << 0xd;\n                        }\n                        *(*0x20 + -0x90) = 0x41ce31;\n                        fcn.00459740(0x2000);\n                    }\n                    else if (arg1 + 0x7fffffffffff >> 0x23 < 0x2000) {\n                        *(*0x20 + -0x38) = uVar6;\n                        uVar3 = (arg1 - 1 & 0x3fffff) >> 0xd;\n                        *(*0x20 + -0x90) = 0x41cbbe;\n                        uVar1 = fcn.0041d4a0(arg1_00);\n                        if (uVar3 != 0) {\n                            *(*0x20 + -0x58) = uVar3;\n                            *(*0x20 + -0x90) = 0x41cc17;\n                            fcn.0041d020(uVar1);\n                            return *(*0x20 + -0x58) << 0xd;\n                        }\n                        in_RAX = *(*0x20 + 8);\n                        arg1_00 = *(*0x20 + -0x50);\n                        unaff_RBX = *(*0x20 + -0x30);\n                        unaff_SIL = *(*0x20 + 0x28);\n                        unaff_RDI = *(*0x20 + -0x48);\n                        uVar2 = *(*0x20 + -0x28);\n                        uVar6 = *(*0x20 + -0x38);\n                        goto code_r0x0041cc3c;\n                    }\n                    *(*0x20 + -0x90) = 0x41ce3e;\n                    fcn.00459740(0x2000);\n                }\n                *(*0x20 + -0x90) = 0x41ce49;\n                fcn.00459740(uVar3);\n            }\n            unaff_RBX = 0x2d;\n            *(*0x20 + -0x90) = 0x41ce5a;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = uVar3;\n        *(puVar5 + 0x20) = unaff_RDI;\n        puVar5[0x28] = unaff_SIL;\n        *(puVar5 + -8) = 0x41ce79;\n        fcn.0045b6e0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        unaff_SIL = puVar5[0x28];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1941
    },
    "0041d020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0041d020(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong in_RAX;\n    int64_t *piVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        uVar5 = unaff_RBX;\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar5 = unaff_RBX >> 0xd;\n            if (uVar5 < 0x2000) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x10) = unaff_RBX;\n                *(*0x20 + 0x20) = unaff_RDI;\n                *(*0x20 + 0x18) = arg1;\n                *(*0x20 + -0x40) = 0x41d08a;\n                fcn.00426900(unaff_RDI);\n                iVar1 = (*(*0x20 + 0x18) * 0x2000 + *(*0x20 + -0x10) * 0x400000) - 0x800000000000;\n                iVar2 = *(*0x20 + 8);\n                if (*(*0x20 + 0x18) * 0x2000 + *(*0x20 + -0x10) * 0x400000 < *(iVar2 + 0x100f8) + 0x800000000000U) {\n                    *(iVar2 + 0x100f8) = iVar1;\n                }\n                if (*(iVar2 + 0x10118) != '\\0') {\n                    return iVar1;\n                }\n                *(*0x20 + -0x20) = iVar1;\n                *(*0x20 + -0x40) = 0x41d0f5;\n                fcn.00413220();\n                iVar1 = *0x559b20;\n                *(*0x20 + -0x18) = *(*0x20 + 0x20) * 0x2000;\n                LOCK();\n                *0x559b20 = *0x559b20 + *(*0x20 + 0x20) * 0x2000;\n                *(*0x20 + -0x40) = 0x41d11b;\n                piVar4 = fcn.00429960(iVar1);\n                iVar1 = *(*0x20 + -0x18);\n                LOCK();\n                iVar2 = *piVar4;\n                *piVar4 = *piVar4 - iVar1;\n                LOCK();\n                piVar4 = piVar4 + 1;\n                iVar3 = *piVar4;\n                *piVar4 = *piVar4 + iVar1;\n                *(*0x20 + -0x40) = 0x41d13d;\n                fcn.00429a60(iVar2, iVar3);\n                return *(*0x20 + -0x20);\n            }\n            arg1 = 0x2000;\n            *(*0x20 + -0x40) = 0x41d159;\n            in_RAX = fcn.00459740(0x2000);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = uVar5;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        *(puVar6 + -8) = 0x41d173;\n        fcn.00457040();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 981
    },
    "0041d1a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0041d1a0(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX < 5) {\n                if (unaff_RBX == 1) {\n                    return in_RAX;\n                }\n                if (unaff_RBX == 2) {\n                    uVar2 = ~(in_RAX | (in_RAX & 0x5555555555555555) + 0x5555555555555555 | 0x5555555555555555);\n                    goto code_r0x0041d2e6;\n                }\n                if (unaff_RBX == 4) {\n                    uVar2 = ~((in_RAX & 0x7777777777777777) + 0x7777777777777777 | in_RAX | 0x7777777777777777);\ncode_r0x0041d2e6:\n                    return ~(uVar2 - (-(unaff_RBX - 1 < 0x40) & uVar2 >> (unaff_RBX - 1 & 0x3f)) | uVar2);\n                }\n            }\n            else if (unaff_RBX < 0x11) {\n                if (unaff_RBX == 8) {\n                    uVar2 = ~((in_RAX & 0x7f7f7f7f7f7f7f7f) + 0x7f7f7f7f7f7f7f7f | in_RAX | 0x7f7f7f7f7f7f7f7f);\n                    goto code_r0x0041d2e6;\n                }\n                if (unaff_RBX == 0x10) {\n                    uVar2 = ~((in_RAX & 0x7fff7fff7fff7fff) + 0x7fff7fff7fff7fff | in_RAX | 0x7fff7fff7fff7fff);\n                    goto code_r0x0041d2e6;\n                }\n            }\n            else {\n                if (unaff_RBX == 0x20) {\n                    uVar2 = ~((in_RAX & 0x7fffffff7fffffff) + 0x7fffffff7fffffff | in_RAX | 0x7fffffff7fffffff);\n                    goto code_r0x0041d2e6;\n                }\n                if (unaff_RBX == 0x40) {\n                    uVar2 = ~(in_RAX | (in_RAX & 0x7fffffffffffffff) + 0x7fffffffffffffff | 0x7fffffffffffffff);\n                    goto code_r0x0041d2e6;\n                }\n            }\n            unaff_RBX = 0xb;\n            *(*0x20 + -0x20) = 0x41d325;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x41d335;\n        fcn.00457040();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 871
    },
    "0041d920": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.0041d920(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t *piVar5;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x0041d920:\n    puVar4 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar4 = *0x20 + -0x48;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x18) = in_XMM15;\n        *(*0x20 + -0x18) = in_RAX + 0x118;\n        iVar3 = in_RAX + 0x128;\n        *(*0x20 + -0x20) = iVar3;\n        *(*0x20 + -0x10) = iVar3;\n        iVar2 = 0;\n        do {\n            if (1 < iVar2) {\n                iVar2 = *(in_RAX + 0x120);\n                if (iVar2 != 0) {\n                    *(*0x20 + -0x50) = 0x41da18;\n                    fcn.004201a0(iVar2, iVar3);\n                    *(*(*0x20 + 8) + 0x120) = 0;\n                }\n                return 0;\n            }\n            piVar5 = *(*0x20 + iVar2 * 8 + -0x18);\n            iVar6 = *piVar5;\n            if (iVar6 != 0) {\n                if (*(iVar6 + 0x10) != 0) goto code_r0x0041d9db;\n                if (*(in_RAX + 0x120) != 0) {\n                    *(*0x20 + -0x30) = iVar2;\n                    *(*0x20 + -0x28) = piVar5;\n                    *(*0x20 + -0x38) = iVar6;\n                    *(*0x20 + -0x50) = 0x41d9af;\n                    fcn.004201a0(iVar2, iVar3);\n                    in_RAX = *(*0x20 + 8);\n                    iVar2 = *(*0x20 + -0x30);\n                    iVar3 = *(*0x20 + -0x20);\n                    piVar5 = *(*0x20 + -0x28);\n                    iVar6 = *(*0x20 + -0x38);\n                }\n                *(in_RAX + 0x120) = iVar6;\n                iVar6 = *(iVar6 + 0x18);\n                *piVar5 = iVar6;\n                if (iVar6 != 0) goto code_r0x0041d9db;\n            }\n            iVar2 = iVar2 + 1;\n        } while( true );\n    }\n    goto code_r0x0041da46;\ncode_r0x0041d9db:\n    iVar3 = *(iVar6 + 0x10);\n    uVar1 = iVar3 - 1;\n    *(iVar6 + 0x10) = uVar1;\n    if (uVar1 < 0xfc) {\n        return *(iVar6 + 0x18 + iVar3 * 8);\n    }\n    *(*0x20 + -0x50) = 0x41da45;\n    in_RAX = fcn.00459720(0xfc);\ncode_r0x0041da46:\n    *(puVar4 + 8) = in_RAX;\n    *(puVar4 + -8) = 0x41da50;\n    fcn.00457040();\n    in_RAX = *(puVar4 + 8);\n    *0x20 = puVar4;\n    goto code_r0x0041d920;\n}\n",
        "token_count": 913
    },
    "0041dd20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041de56)\n// WARNING: Removing unreachable block (ram,0x0041de23)\n\nint64_t fcn.0041dd20(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar2 = *(in_RAX + 0x10128);\n            *(*0x20 + -0x10) = uVar2;\n            uVar3 = *0x50409c;\ncode_r0x0041dd61:\n            if (0x10f < uVar3) {\n                if (*0x50409c != 0xffffffff) {\n                    LOCK();\n                    *0x50409c = 0xffffffff;\n                }\n                return 0;\n            }\n            if (0x87 < (uVar3 >> 1 & 0xff)) goto code_r0x0041dea6;\n            *(*0x20 + -0xc) = uVar3;\n            if ((uVar3 & 1) == 0) {\n                if (1 < -((uVar2 >> 1 & 1) - 1)) goto code_r0x0041de9a;\n                *(*0x20 + -0x28) = 0x41ddca;\n                iVar1 = fcn.004294a0();\ncode_r0x0041de00:\n                if (iVar1 != 0) {\n                    if (*0x50409c < *(*0x20 + -0xc)) {\n                        LOCK();\n                        *0x50409c = *(*0x20 + -0xc);\n                    }\n                    return iVar1;\n                }\n                uVar3 = *(*0x20 + -0xc) + 1;\n                uVar2 = *(*0x20 + -0x10);\n                goto code_r0x0041dd61;\n            }\n            if (-((uVar2 >> 1 & 1) - 1) < 2) {\n                *(*0x20 + -0x28) = 0x41ddf7;\n                iVar1 = fcn.004294a0();\n                goto code_r0x0041de00;\n            }\n            *(*0x20 + -0x28) = 0x41de9a;\n            fcn.00459720(2);\ncode_r0x0041de9a:\n            *(*0x20 + -0x28) = 0x41dea6;\n            fcn.00459720(2);\ncode_r0x0041dea6:\n            *(*0x20 + -0x28) = 0x41deb3;\n            in_RAX = fcn.00459720(0x88);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x41debe;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 799
    },
    "0041dee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0041dee0(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            while( true ) {\n                *(*0x20 + -0x40) = 0x41df05;\n                iVar2 = fcn.0041e120();\n                if (iVar2 == -1) break;\n                *0x504098 = *0x504098 + 1;\n            }\n            *(*0x20 + -0x24) = *0x52a068;\n            iVar2 = 0;\n            uVar1 = *0x52a068;\n            while( true ) {\n                if (0x87 < iVar2) {\n                    *(*0x20 + -0x40) = 0x41dfa7;\n                    fcn.0041bf00();\n                    *(*0x20 + -0x40) = 0x41dfac;\n                    fcn.00423740();\n                    return;\n                }\n                uVar3 = -((uVar1 >> 1 & 1) - 1);\n                if (1 < uVar3) break;\n                *(*0x20 + -0x20) = iVar2;\n                *(*0x20 + -0x10) = iVar2 * 0xc0;\n                *(*0x20 + -0x18) = uVar3 * 5;\n                *(*0x20 + -0x40) = 0x41df48;\n                fcn.004295e0(0x52a380);\n                *(*0x20 + -0x40) = 0x41df6a;\n                fcn.004295e0(*(*0x20 + -0x10) + 0x52a3d8);\n                iVar2 = *(*0x20 + -0x20) + 1;\n                uVar1 = *(*0x20 + -0x24);\n            }\n            *(*0x20 + -0x40) = 0x41dfc5;\n            fcn.00459720(2);\n        }\n        *(puVar4 + -8) = 0x41dfcb;\n        fcn.00457040();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 612
    },
    "0041e120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0041e120(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char cVar4;\n    int64_t iVar5;\n    ulong noname_0;\n    ulong arg2;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar7;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            if (*0x52a06c != 0) {\n                piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                *piVar1 = *piVar1 + -1;\n                return -1;\n            }\n            *(*0x20 + -0x10) = unaff_R14;\n            *(*0x20 + -0x48) = *0x52a068;\n            *(*0x20 + -0x44) = 0;\ncode_r0x0041e17d:\n            do {\n                *(*0x20 + -0x70) = 0x41e189;\n                iVar5 = fcn.0041dd20();\n                if (iVar5 == 0) {\n                    LOCK();\n                    cVar4 = *0x52a06c == 0;\n                    if (cVar4) {\n                        *0x52a06c = 1;\n                    }\n                    iVar5 = -1;\ncode_r0x0041e265:\n                    *(*0x20 + -0x38) = iVar5;\n                    if (*(*0x20 + -0x44) != '\\0') {\n                        *(*0x20 + -0x44) = 0;\n                        LOCK();\n                        iVar2 = *0x52a070 + -1;\n                        bVar7 = *0x52a070 == 1;\n                        *0x52a070 = iVar2;\n                        if ((bVar7 && *0x52a06c != 0) && (0 < *0x5580b0)) {\n                            *(*0x20 + -0x52) = cVar4;\n                            *(*0x20 + -0x18) = *0x558530;\n                            *(*0x20 + -0x20) = *0x52a0b0;\n                            *(*0x20 + -0x28) = *0x52a0a0;\n                            *(*0x20 + -0x30) = *0x52a0b8;\n                            *(*0x20 + -0x70) = 0x41e2f1;\n                            arg2 = *0x52a0a0;\n                            fcn.004324c0();\n                            *(*0x20 + -0x70) = 0x41e305;\n                            fcn.00432dc0();\n                            *(*0x20 + -0x70) = 0x41e313;\n                            fcn.00432ac0();\n                            *(*0x20 + -0x70) = 0x41e325;\n                            fcn.00432dc0();\n                            noname_0 = *(*0x20 + -0x20);\n                            *(*0x20 + -0x70) = 0x41e33b;\n                            fcn.00432ac0();\n                            *(*0x20 + -0x70) = 0x41e34c;\n                            fcn.00432dc0();\n                            *(*0x20 + -0x70) = 0x41e356;\n                            fcn.00432ac0();\n                            *(*0x20 + -0x70) = 0x41e367;\n                            fcn.00432dc0();\n                            *(*0x20 + -0x70) = 0x41e372;\n                            fcn.004327c0(noname_0, arg2);\n                            *(*0x20 + -0x70) = 0x41e385;\n                            fcn.00432dc0();\n                            *(*0x20 + -0x70) = 0x41e38a;\n                            fcn.00432540();\n                            cVar4 = *(*0x20 + -0x52);\n                            iVar5 = *(*0x20 + -0x38);\n                        }\n                    }\n                    if (cVar4 != '\\0') {\n                        *(*0x20 + -0x68) = 0x48a650;\n                        *(*0x20 + -0x70) = 0x41e3a8;\n                        fcn.00456f00();\n                        *0x5040c0 = 1;\n                        iVar5 = *(*0x20 + -0x38);\n                    }\n                    *(*(*(*0x20 + -0x10) + 0x30) + 0xd8) = *(*(*(*0x20 + -0x10) + 0x30) + 0xd8) + -1;\n                    return iVar5;\n                }\n                if (*(iVar5 + 99) == '\\x01') {\n                    if (*(iVar5 + 0x58) == *(*0x20 + -0x48) + -2) {\n                        if (*(*0x20 + -0x44) == '\\0') {\n                            LOCK();\n                            *0x52a070 = *0x52a070 + 1;\n                            *(*0x20 + -0x44) = 1;\n                        }\n                        LOCK();\n                        if (*(*0x20 + -0x48) + -2 == *(iVar5 + 0x58)) {\n                            *(iVar5 + 0x58) = *(*0x20 + -0x48) + -1;\n                            bVar7 = true;\n                        }\n                        else {\n                            iVar5 = 0;\n                            bVar7 = false;\n                        }\n                    }\n                    else {\n                        iVar5 = 0;\n                        bVar7 = false;\n                    }\n                    *(*0x20 + -0x40) = iVar5;\n                    if (bVar7) {\n                        *(*0x20 + -0x38) = *(iVar5 + 0x20);\n                        *(*0x20 + -0x70) = 0x41e229;\n                        cVar4 = fcn.0041e820();\n                        if (cVar4 == '\\0') {\n                            iVar5 = 0;\n                        }\n                        else {\n                            iVar5 = *(*0x20 + -0x38);\n                            LOCK();\n                            *0x52a0d0 = *0x52a0d0 + iVar5;\n                        }\n                        cVar4 = false;\n                        goto code_r0x0041e265;\n                    }\n                    goto code_r0x0041e17d;\n                }\n                iVar2 = *(iVar5 + 0x58);\n                iVar3 = *(*0x20 + -0x48);\n            } while ((iVar3 == iVar2) || (iVar2 == iVar3 + 3));\n            *(*0x20 + -0x51) = *(iVar5 + 99);\n            *(*0x20 + -0x4c) = iVar2;\n            *(*0x20 + -0x50) = iVar3;\n            *(*0x20 + -0x70) = 0x41e3fd;\n            fcn.004324c0();\n            *(*0x20 + -0x70) = 0x41e40e;\n            fcn.00432dc0();\n            *(*0x20 + -0x70) = 0x41e41b;\n            fcn.00432ac0();\n            *(*0x20 + -0x70) = 0x41e42c;\n            fcn.00432dc0();\n            *(*0x20 + -0x70) = 0x41e435;\n            fcn.00432ac0();\n            *(*0x20 + -0x70) = 0x41e446;\n            fcn.00432dc0();\n            *(*0x20 + -0x70) = 0x41e44f;\n            fcn.00432ac0();\n            *(*0x20 + -0x70) = 0x41e454;\n            fcn.00432720();\n            *(*0x20 + -0x70) = 0x41e459;\n            fcn.00432540();\n            *(*0x20 + -0x70) = 0x41e46a;\n            fcn.00430d40();\n        }\n        *(puVar6 + -8) = 0x41e470;\n        fcn.00457040();\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1992
    },
    "0041e480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041e480(void)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    ulong uVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar7;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *(unaff_R14 + 0x30);\n            if (((*(piVar1 + 0x1b) != 0) || (*(piVar1 + 0x18) != 0)) || (*piVar1 == unaff_R14)) {\n                *(*0x20 + -0x38) = *0x52a068;\n                *(*0x20 + -0x34) = 0;\n                if (*(in_RAX + 0x58) == *(*0x20 + -0x38) + -2) {\n                    if (*(*0x20 + -0x34) == '\\0') {\n                        LOCK();\n                        *0x52a070 = *0x52a070 + 1;\n                        *(*0x20 + -0x34) = 1;\n                    }\n                    LOCK();\n                    if (*(*0x20 + -0x38) + -2 == *(in_RAX + 0x58)) {\n                        *(in_RAX + 0x58) = *(*0x20 + -0x38) + -1;\n                        bVar7 = true;\n                        iVar5 = in_RAX;\n                    }\n                    else {\n                        bVar7 = false;\n                        iVar5 = 0;\n                    }\n                }\n                else {\n                    bVar7 = false;\n                    iVar5 = 0;\n                }\n                *(*0x20 + -0x30) = iVar5;\n                if (bVar7) {\n                    *(*0x20 + -0x50) = 0x41e671;\n                    fcn.0041e820();\n                    if (*(*0x20 + -0x34) != '\\0') {\n                        *(*0x20 + -0x34) = 0;\n                        LOCK();\n                        iVar2 = *0x52a070 + -1;\n                        bVar7 = *0x52a070 == 1;\n                        *0x52a070 = iVar2;\n                        if ((bVar7 && *0x52a06c != 0) && (0 < *0x5580b0)) {\n                            *(*0x20 + -0x10) = *0x558530;\n                            *(*0x20 + -0x18) = *0x52a0b0;\n                            *(*0x20 + -0x20) = *0x52a0a0;\n                            *(*0x20 + -0x28) = *0x52a0b8;\n                            *(*0x20 + -0x50) = 0x41e6f4;\n                            uVar4 = *0x52a0a0;\n                            fcn.004324c0();\n                            *(*0x20 + -0x50) = 0x41e705;\n                            fcn.00432dc0();\n                            *(*0x20 + -0x50) = 0x41e713;\n                            fcn.00432ac0();\n                            *(*0x20 + -0x50) = 0x41e725;\n                            fcn.00432dc0();\n                            uVar3 = *(*0x20 + -0x18);\n                            *(*0x20 + -0x50) = 0x41e73b;\n                            fcn.00432ac0();\n                            *(*0x20 + -0x50) = 0x41e74c;\n                            fcn.00432dc0();\n                            *(*0x20 + -0x50) = 0x41e756;\n                            fcn.00432ac0();\n                            *(*0x20 + -0x50) = 0x41e767;\n                            fcn.00432dc0();\n                            *(*0x20 + -0x50) = 0x41e772;\n                            fcn.004327c0(uVar3, uVar4);\n                            *(*0x20 + -0x50) = 0x41e785;\n                            fcn.00432dc0();\n                            *(*0x20 + -0x50) = 0x41e78a;\n                            fcn.00432540();\n                        }\n                    }\n                    return;\n                }\n                *(*0x20 + 8) = in_RAX;\n                if (*(*0x20 + -0x34) != '\\0') {\n                    *(*0x20 + -0x34) = 0;\n                    LOCK();\n                    iVar2 = *0x52a070 + -1;\n                    bVar7 = *0x52a070 == 1;\n                    *0x52a070 = iVar2;\n                    if ((bVar7 && *0x52a06c != 0) && (0 < *0x5580b0)) {\n                        *(*0x20 + -0x10) = *0x558530;\n                        *(*0x20 + -0x18) = *0x52a0b0;\n                        *(*0x20 + -0x20) = *0x52a0a0;\n                        *(*0x20 + -0x28) = *0x52a0b8;\n                        *(*0x20 + -0x50) = 0x41e5c5;\n                        uVar4 = *0x52a0a0;\n                        fcn.004324c0();\n                        *(*0x20 + -0x50) = 0x41e5d6;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x50) = 0x41e5e5;\n                        fcn.00432ac0();\n                        *(*0x20 + -0x50) = 0x41e5f6;\n                        fcn.00432dc0();\n                        uVar3 = *(*0x20 + -0x18);\n                        *(*0x20 + -0x50) = 0x41e60c;\n                        fcn.00432ac0();\n                        *(*0x20 + -0x50) = 0x41e61d;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x50) = 0x41e627;\n                        fcn.00432ac0();\n                        *(*0x20 + -0x50) = 0x41e638;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x50) = 0x41e645;\n                        fcn.004327c0(uVar3, uVar4);\n                        *(*0x20 + -0x50) = 0x41e656;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x50) = 0x41e65b;\n                        fcn.00432540();\n                        in_RAX = *(*0x20 + 8);\n                    }\n                }\n                while( true ) {\n                    if ((*(in_RAX + 0x58) == *(*0x20 + -0x38)) || (*(in_RAX + 0x58) == *(*0x20 + -0x38) + 3)) break;\n                    *(*0x20 + -0x48) = 0x48a658;\n                    *(*0x20 + -0x50) = 0x41e7a5;\n                    fcn.00456f00();\n                    in_RAX = *(*0x20 + 8);\n                }\n                return;\n            }\n            *(*0x20 + -0x50) = 0x41e7eb;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + -8) = 0x41e7f6;\n        fcn.00457040();\n        in_RAX = *(puVar6 + 8);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1874
    },
    "0041f6e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041f6e0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    double extraout_XMM0_Qa;\n    double dVar5;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (*0x52a0b8 == 0.0) {\n        return;\n    }\n    if (*0x509e70 != '\\0') {\n        fcn.0044c5c0();\n    }\n    do {\n        iVar1 = *0x52a0a8;\n        uVar3 = (*0x558530 - *0x52a0b0) + in_RAX;\n        if (uVar3 < 0) {\n            dVar5 = uVar3 >> 1 | uVar3 & 1;\n            dVar5 = dVar5 + dVar5;\n        }\n        else {\n            dVar5 = uVar3;\n        }\n        dVar5 = *0x52a0b8 * dVar5;\n        iVar4 = dVar5;\n        do {\n            if (iVar4 - unaff_RBX <= *0x52a0a0 - iVar1) {\ncode_r0x0041f7f9:\n                if (*0x509e70 != '\\0') {\n                    fcn.0044c6c0();\n                }\n                return;\n            }\n            iVar2 = fcn.0041e120(dVar5, 0);\n            if (iVar2 == -1) {\n                *0x52a0b8 = 0.0;\n                goto code_r0x0041f7f9;\n            }\n            dVar5 = extraout_XMM0_Qa;\n        } while (*0x52a0a8 == iVar1);\n    } while( true );\n}\n",
        "token_count": 468
    },
    "0041f8a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041f8a0(void)\n\n{\n    int64_t iVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar4;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            iVar1 = *in_RAX;\n            if (iVar1 == 0) {\n                *(*0x20 + -0x28) = 0x41f935;\n                fcn.0041f840();\n                iVar2 = **(*0x20 + 8);\n                unaff_RBX = *(*0x20 + 0x10);\n                bVar4 = false;\n            }\n            else if (*(iVar1 + 0x10) == 0xfd) {\n                iVar2 = in_RAX[1];\n                *in_RAX = iVar2;\n                in_RAX[1] = iVar1;\n                bVar4 = *(iVar2 + 0x10) == 0xfd;\n                if (bVar4) {\n                    *(*0x20 + -0x10) = 0xfd;\n                    *(*0x20 + -0x28) = 0x41f8f9;\n                    fcn.00420200();\n                    *(*(*0x20 + 8) + 0x20) = 1;\n                    *(*0x20 + -0x28) = 0x41f907;\n                    iVar2 = fcn.0041ff20();\n                    **(*0x20 + 8) = iVar2;\n                    bVar4 = *(*0x20 + -0x10) == 0xfd;\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n            }\n            else {\n                bVar4 = false;\n                iVar2 = iVar1;\n            }\n            if (*(iVar2 + 0x10) < 0xfd) {\n                *(iVar2 + 0x18 + *(iVar2 + 0x10) * 8) = unaff_RBX;\n                *(iVar2 + 0x10) = *(iVar2 + 0x10) + 1;\n                if ((bVar4) && (*0x557cac == 1)) {\n                    *(*0x20 + -0x28) = 0x41f973;\n                    fcn.0041b540();\n                }\n                return;\n            }\n            *(*0x20 + -0x28) = 0x41f987;\n            in_RAX = fcn.00459720(0xfd);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x41f997;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 789
    },
    "0041f9c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041f9c0(uint64_t arg1)\n\n{\n    int64_t *piVar1;\n    uint64_t uVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    char cVar6;\n    int64_t unaff_RDI;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 == 0) {\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            iVar4 = *in_RAX;\n            if (iVar4 == 0) {\n                *(*0x20 + 0x20) = unaff_RDI;\n                *(*0x20 + 0x18) = arg1;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x58) = 0x41fa06;\n                fcn.0041f840();\n                iVar4 = **(*0x20 + 8);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                unaff_RDI = *(*0x20 + 0x20);\n            }\n            cVar6 = '\\0';\n            while( true ) {\n                if (arg1 < 1) {\n                    if ((cVar6 != '\\0') && (*0x557cac == 1)) {\n                        *(*0x20 + -0x58) = 0x41fb05;\n                        fcn.0041b540();\n                    }\n                    return;\n                }\n                *(*0x20 + -0x18) = unaff_RDI;\n                *(*0x20 + -0x10) = unaff_RBX;\n                *(*0x20 + -0x20) = arg1;\n                while (uVar2 = *(iVar4 + 0x10),  uVar2 == 0xfd) {\n                    *(*0x20 + -0x58) = 0x41fb17;\n                    fcn.00420200();\n                    *(*(*0x20 + 8) + 0x20) = 1;\n                    *(*0x20 + -0x58) = 0x41fb25;\n                    iVar3 = fcn.0041ff20();\n                    piVar1 = *(*0x20 + 8);\n                    iVar4 = piVar1[1];\n                    *piVar1 = iVar4;\n                    piVar1[1] = iVar3;\n                    arg1 = *(*0x20 + -0x20);\n                    unaff_RBX = *(*0x20 + -0x10);\n                    unaff_RDI = *(*0x20 + -0x18);\n                    cVar6 = '\\x01';\n                }\n                if (0xfd < uVar2) goto code_r0x0041fb66;\n                iVar3 = uVar2 - 0xfd;\n                uVar7 = -iVar3;\n                if (SBORROW8(arg1, -iVar3) != arg1 + iVar3 < 0) {\n                    uVar7 = arg1;\n                }\n                if (unaff_RBX != iVar4 + (uVar2 << 3 & iVar3 >> 0x3f) + 0x18) {\n                    *(*0x20 + -0x30) = iVar4;\n                    *(*0x20 + -0x28) = uVar7;\n                    *(*0x20 + -0x31) = cVar6;\n                    *(*0x20 + -0x58) = 0x41fab8;\n                    fcn.0045a040(uVar7 << 3);\n                    arg1 = *(*0x20 + -0x20);\n                    iVar4 = *(*0x20 + -0x30);\n                    unaff_RBX = *(*0x20 + -0x10);\n                    cVar6 = *(*0x20 + -0x31);\n                    unaff_RDI = *(*0x20 + -0x18);\n                    uVar7 = *(*0x20 + -0x28);\n                }\n                *(iVar4 + 0x10) = *(iVar4 + 0x10) + uVar7;\n                if (arg1 < uVar7) break;\n                unaff_RDI = unaff_RDI - uVar7;\n                arg1 = arg1 - uVar7;\n                unaff_RBX = unaff_RBX + (-unaff_RDI >> 0x3f & uVar7 << 3);\n            }\n            *(*0x20 + -0x58) = 0x41fb66;\n            fcn.004597e0(arg1);\ncode_r0x0041fb66:\n            arg1 = 0xfd;\n            *(*0x20 + -0x58) = 0x41fb73;\n            in_RAX = fcn.004597e0(0xfd);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x41fb8d;\n        fcn.00457040();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1372
    },
    "0041fbc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0041fbc0(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            iVar3 = *in_RAX;\n            if (iVar3 == 0) {\n                *(*0x20 + -0x30) = 0x41fbea;\n                fcn.0041f840();\n                in_RAX = *(*0x20 + 8);\n                iVar3 = *in_RAX;\n            }\n            if (*(iVar3 + 0x10) == 0) {\n                iVar3 = in_RAX[1];\n                iVar2 = *in_RAX;\n                *in_RAX = iVar3;\n                in_RAX[1] = iVar2;\n                if (*(iVar3 + 0x10) == 0) {\n                    *(*0x20 + -0x10) = iVar3;\n                    *(*0x20 + -0x30) = 0x41fc1b;\n                    iVar3 = fcn.00420260();\n                    if (iVar3 == 0) {\n                        return 0;\n                    }\n                    *(*0x20 + -0x18) = iVar3;\n                    *(*0x20 + -0x30) = 0x41fc34;\n                    fcn.004201a0();\n                    iVar3 = *(*0x20 + -0x18);\n                    **(*0x20 + 8) = iVar3;\n                }\n            }\n            iVar2 = *(iVar3 + 0x10);\n            uVar1 = iVar2 - 1;\n            *(iVar3 + 0x10) = uVar1;\n            if (uVar1 < 0xfd) {\n                return *(iVar3 + 0x10 + iVar2 * 8);\n            }\n            *(*0x20 + -0x30) = 0x41fc85;\n            in_RAX = fcn.00459720(0xfd);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x41fc90;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 631
    },
    "0041fca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0041fca0(void)\n\n{\n    int64_t iVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (*in_RAX != 0) {\n        if (*(*in_RAX + 0x10) == 0) {\n            fcn.004201a0();\n        }\n        else {\n            fcn.00420200();\n            *(in_RAX + 4) = 1;\n        }\n        *in_RAX = 0;\n        if (*(in_RAX[1] + 0x10) == 0) {\n            fcn.004201a0();\n        }\n        else {\n            fcn.00420200();\n            *(in_RAX + 4) = 1;\n        }\n        in_RAX[1] = 0;\n    }\n    if (in_RAX[2] != 0) {\n        LOCK();\n        *0x558780 = *0x558780 + in_RAX[2];\n        in_RAX[2] = 0;\n    }\n    iVar1 = *0x558548;\n    iVar2 = in_RAX[3];\n    if (iVar2 != 0) {\n        LOCK();\n        *0x558548 = *0x558548 + iVar2;\n        in_RAX[3] = 0;\n        iVar2 = iVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 363
    },
    "0041fda0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041fda0(void)\n\n{\n    int64_t *in_RAX;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (*in_RAX != 0) {\n        if (*(in_RAX[1] + 0x10) == 0) {\n            if (*(*in_RAX + 0x10) < 5) {\n                return;\n            }\n            iVar1 = fcn.00420300();\n            *in_RAX = iVar1;\n            *(in_RAX + 4) = 1;\n        }\n        else {\n            fcn.00420200();\n            *(in_RAX + 4) = 1;\n            iVar1 = fcn.0041ff20();\n            in_RAX[1] = iVar1;\n        }\n        if (*0x557cac == 1) {\n            fcn.0041b540();\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 255
    },
    "0041fe60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041fe60(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x10) != 0) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x41fe96;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x41fea5;\n        fcn.00457040();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 263
    },
    "0041fec0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041fec0(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x10) == 0) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x41fef6;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x41ff05;\n        fcn.00457040();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 263
    },
    "0041ff20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041ff20(void)\n\n{\n    int64_t *piVar1;\n    int64_t unaff_R14;\n    int64_t iStack72;\n    uint64_t uStack64;\n    int64_t *piStack56;\n    int64_t *piStack48;\n    uint64_t uStack40;\n    int64_t *piStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (*0x558708 == 0) {\n        piVar1 = NULL;\n        goto code_r0x0041ff49;\n    }\n    while( true ) {\n        if (*0x558708 == 0) {\n            piVar1 = NULL;\n        }\n        else {\n            piVar1 = (*0x558708 >> 0x13) << 3;\n            *0x558708 = *piVar1;\n            LOCK();\n        }\n        if (piVar1 != NULL) {\n            piStack32 = piVar1;\n            fcn.0041fec0();\n            piVar1 = piStack32;\n        }\ncode_r0x0041ff49:\n        if (piVar1 != NULL) {\n            return;\n        }\n        iStack72 = 0;\n        piStack56 = piVar1;\n        if (*0x558758 != 0) {\n            fcn.00409300();\n            iStack72 = *0x558758;\n            if (*0x558758 != 0) {\n                fcn.00422840();\n                fcn.004229c0();\n            }\n            fcn.00409520();\n        }\n        if (iStack72 != 0) goto code_r0x0042003e;\n        auStack24 = CONCAT88(&iStack72, 0x420140);\n        fcn.00456f00();\n        if (iStack72 != 0) break;\n        fcn.00430d40();\n    }\n    fcn.00409300();\n    fcn.004229c0();\n    fcn.00409520();\ncode_r0x0042003e:\n    uStack40 = 0;\n    piVar1 = piStack56;\n    while (uStack40 + 0x800 < 0x8001) {\n        piStack32 = *(iStack72 + 0x18) + uStack40;\n        piStack32[2] = 0;\n        uStack64 = uStack40;\n        piStack48 = piVar1;\n        uStack40 = uStack40 + 0x800;\n        fcn.00409200();\n        piVar1 = piStack32;\n        if (uStack64 != 0) {\n            fcn.004201a0();\n            piVar1 = piStack48;\n        }\n    }\n    return;\n}\n",
        "token_count": 644
    },
    "004203c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004203c0(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x4203e5;\n            fcn.00409300();\n            if (*0x558700 == 0) {\n                *0x558708 = 0;\n                if (*0x558768 != NULL) {\n                    for (; *0x558768 != NULL; *0x558768 = **0x558768) {\n                        (*0x558768)[2] = 0x558758;\n                    }\n                    if (*0x558758 == 0) {\n                        *0x558758 = *0x558768;\n                        *0x558760 = *0x558770;\n                        *0x558768 = in_XMM15;\n                    }\n                    else {\n                        **0x558770 = *0x558758;\n                        *(*0x558758 + 8) = *0x558770;\n                        *0x558758 = *0x558768;\n                        *0x558768 = in_XMM15;\n                    }\n                }\n                *(*0x20 + -0x20) = 0x420418;\n                fcn.00409520();\n                return;\n            }\n            *(*0x20 + -0x20) = 0x4204ab;\n            fcn.00430d40();\n        }\n        *(puVar1 + -8) = 0x4204b1;\n        fcn.00457040();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 460
    },
    "004204c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.004204c0(void)\n\n{\n    uint64_t uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00409300();\n    if ((*0x557cac == 0) && (*0x558758 != 0)) {\n        fcn.00456f00();\n        uVar1 = *0x558758;\n        fcn.00409520();\n        return uVar1 & 0xffffffffffffff00 | uVar1 != 0;\n    }\n    fcn.00409520();\n    return 0;\n}\n",
        "token_count": 171
    },
    "00420821": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00420821(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x52a0d8);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if ((iVar2 != 0) && (*(iVar2 + 0x18) < in_RAX || *(iVar2 + 0x18) == in_RAX)) {\n        if (*(iVar2 + 99) - 1U < 2) {\n            return in_RAX & 0xffffffffffffff00 | (in_RAX <= *(iVar2 + 0x70) && *(iVar2 + 0x70) != in_RAX);\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 337
    },
    "004208c1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.004208c1(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    bool bVar3;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x52a0d8);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 == 0) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = *(iVar2 + 99) != '\\x01';\n    }\n    if (((!bVar3) && (*(iVar2 + 0x18) < in_RAX || *(iVar2 + 0x18) == in_RAX)) &&\n       (in_RAX <= *(iVar2 + 0x70) && *(iVar2 + 0x70) != in_RAX)) {\n        return iVar2;\n    }\n    return 0;\n}\n",
        "token_count": 354
    },
    "00420960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00420960(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    *(in_RAX + 0x16a40) = 0x88;\n    if (*0x557ed0 == 0) {\n        *(in_RAX + 0x16a48) = 0x48a5e0;\n        *(in_RAX + 0x16a50) = in_RAX;\n    }\n    else {\n        uVar2 = 0x48a5e0;\n        fcn.004593a0(arg1, 0x48a5e0, arg3, in_R9);\n        in_RAX = fcn.00459280(arg1, uVar2, arg3, in_R9);\n    }\n    *(in_RAX + 0x16a58) = in_XMM15;\n    *(in_RAX + 0x16a68) = 0;\n    *(in_RAX + 0x16a70) = 0;\n    if (*0x557ed0 == 0) {\n        *(in_RAX + 0x16a78) = 0x559b48;\n    }\n    else {\n        in_RAX = fcn.004593a0(arg1, 0x559b48, arg3, in_R9);\n    }\n    *(in_RAX + 0x16a80) = 1;\n    *(in_RAX + 0x16a88) = 0x490;\n    if (*0x557ed0 == 0) {\n        *(in_RAX + 0x16a90) = in_XMM15;\n    }\n    else {\n        uVar2 = 0;\n        fcn.004593a0(arg1, 0, arg3, in_R9);\n        in_RAX = fcn.004593e0(arg1, uVar2, arg3, in_R9);\n    }\n    *(in_RAX + 0x16aa0) = in_XMM15;\n    *(in_RAX + 0x16ab0) = 0;\n    *(in_RAX + 0x16ab8) = 0;\n    if (*0x557ed0 == 0) {\n        *(in_RAX + 0x16ac0) = 0x559b58;\n    }\n    else {\n        in_RAX = fcn.004593a0(arg1, 0x559b58, arg3, in_R9);\n    }\n    *(in_RAX + 0x16ac8) = 1;\n    *(in_RAX + 0x16ad0) = 0x30;\n    if (*0x557ed0 == 0) {\n        *(in_RAX + 0x16ad8) = in_XMM15;\n    }\n    else {\n        uVar2 = 0;\n        fcn.004593a0(arg1, 0, arg3, in_R9);\n        in_RAX = fcn.004593e0(arg1, uVar2, arg3, in_R9);\n    }\n    *(in_RAX + 0x16ae8) = in_XMM15;\n    *(in_RAX + 0x16af8) = 0;\n    *(in_RAX + 0x16b00) = 0;\n    if (*0x557ed0 == 0) {\n        uVar2 = 0x559b80;\n        *(in_RAX + 0x16b08) = 0x559b80;\n    }\n    else {\n        uVar2 = 0x559b80;\n        in_RAX = fcn.004593a0(arg1, 0x559b80, arg3, in_R9);\n    }\n    *(in_RAX + 0x16b10) = 1;\n    *(in_RAX + 0x16b18) = 0x18;\n    if (*0x557ed0 == 0) {\n        *(in_RAX + 0x16b20) = in_XMM15;\n    }\n    else {\n        fcn.004593e0(arg1, uVar2, arg3, in_R9);\n        arg3 = 0;\n        in_RAX = fcn.00459400(arg1, uVar2, 0, in_R9);\n    }\n    *(in_RAX + 0x16b30) = in_XMM15;\n    *(in_RAX + 0x16b40) = 0;\n    *(in_RAX + 93000) = 0;\n    if (*0x557ed0 == 0) {\n        *(in_RAX + 0x16b50) = uVar2;\n    }\n    else {\n        in_RAX = fcn.004593a0(arg1, uVar2, arg3, in_R9);\n    }\n    *(in_RAX + 0x16b58) = 1;\n    *(in_RAX + 0x16b60) = 0x18;\n    if (*0x557ed0 == 0) {\n        *(in_RAX + 0x16b68) = in_XMM15;\n    }\n    else {\n        fcn.004593e0(arg1, uVar2, arg3, in_R9);\n        arg3 = 0;\n        in_RAX = fcn.00459400(arg1, uVar2, 0, in_R9);\n    }\n    *(in_RAX + 0x16b78) = in_XMM15;\n    *(in_RAX + 0x16b88) = 0;\n    *(in_RAX + 0x16b90) = 0;\n    if (*0x557ed0 == 0) {\n        *(in_RAX + 0x16b98) = uVar2;\n    }\n    else {\n        in_RAX = fcn.004593a0(arg1, uVar2, arg3, in_R9);\n    }\n    *(in_RAX + 0x16ba0) = 1;\n    *(in_RAX + 0x16bb0) = 0x18;\n    if (*0x557ed0 == 0) {\n        *(in_RAX + 0x16bb8) = in_XMM15;\n    }\n    else {\n        fcn.004593e0(arg1, uVar2, arg3, in_R9);\n        in_RAX = fcn.004593e0(arg1, uVar2, arg3, in_R9);\n    }\n    *(in_RAX + 0x16bc8) = in_XMM15;\n    *(in_RAX + 0x16bd8) = 0;\n    *(in_RAX + 0x16be0) = 0;\n    if (*0x557ed0 == 0) {\n        *(in_RAX + 0x16be8) = uVar2;\n    }\n    else {\n        in_RAX = fcn.004593a0(arg1, uVar2, arg3, in_R9);\n    }\n    *(in_RAX + 0x16bf0) = 1;\n    *(in_RAX + 0x16a80) = 0;\n    for (iVar1 = 0; iVar1 < 0x88; iVar1 = iVar1 + 1) {\n        *(in_RAX + 0x10440 + iVar1 * 0xc0) = iVar1;\n    }\n    fcn.004238c0(0x559b78);\n    return;\n}\n",
        "token_count": 1750
    },
    "00420d20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00420d20(void)\n\n{\n    int32_t *piVar1;\n    uint64_t *puVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint64_t arg1;\n    uint64_t uVar5;\n    bool bVar6;\n    int64_t in_RAX;\n    uint64_t uVar7;\n    int64_t noname_1;\n    uint64_t unaff_RBX;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (0x7fffffffffffffff < *(in_RAX + 0x10188)) {\n        return;\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar4 = *(unaff_R14 + 0x30);\n    if (*0x509e70 != '\\0') {\n        fcn.0044c5c0();\n    }\n    arg1 = *(in_RAX + 0x10400);\n    bVar6 = false;\ncode_r0x00420dcd:\n    do {\n        if (unaff_RBX == 0) {\ncode_r0x00420ed7:\n            if (bVar6) {\n                fcn.00409520();\n            }\n            if (*0x509e70 != '\\0') {\n                fcn.0044c6c0();\n            }\n            iVar3 = *(iVar4 + 0xd8);\n            *(iVar4 + 0xd8) = iVar3 + -1;\n            if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n            return;\n        }\n        uVar7 = *(in_RAX + 0x10190);\n        if (uVar7 != 0) {\n            uVar8 = uVar7;\n            if (unaff_RBX < uVar7) {\n                uVar8 = unaff_RBX;\n            }\n            LOCK();\n            puVar2 = in_RAX + 0x10190;\n            uVar5 = *puVar2;\n            *puVar2 = *puVar2 ^ (uVar7 == uVar5) * (*puVar2 ^ uVar7 - uVar8);\n            if (uVar7 == uVar5) {\n                unaff_RBX = unaff_RBX - uVar8;\n            }\n            goto code_r0x00420dcd;\n        }\n        LOCK();\n        puVar2 = in_RAX + 0x10188;\n        uVar7 = *puVar2;\n        *puVar2 = *puVar2 + 0x200;\n        if (arg1 <= uVar7 >> 9) {\n            *(in_RAX + 0x10188) = 0x8000000000000000;\n            goto code_r0x00420ed7;\n        }\n        noname_1 = iVar4;\n        if (!bVar6) {\n            fcn.00409300();\n        }\n        uVar7 = fcn.00420f60(arg1, noname_1, 0x200);\n        if (unaff_RBX < uVar7) {\n            LOCK();\n            *(in_RAX + 0x10190) = *(in_RAX + 0x10190) + (uVar7 - unaff_RBX);\n            unaff_RBX = 0;\n        }\n        else {\n            unaff_RBX = unaff_RBX - uVar7;\n        }\n        bVar6 = true;\n    } while( true );\n}\n",
        "token_count": 854
    },
    "00420f60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00420f60(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    int32_t iVar1;\n    uchar uVar2;\n    int64_t in_RAX;\n    ulong noname_0;\n    uint8_t uVar3;\n    ulong arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t uVar5;\n    int64_t unaff_RDI;\n    uint64_t arg1_00;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    uint64_t uVar10;\n    int64_t iVar11;\n    bool bVar12;\n    \n    do {\n        puVar4 = *0x20;\n        uVar5 = unaff_RSI;\n        arg1_00 = arg3;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x38 && *0x20 + -0x38 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0xb8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0xa0) = *0x52a068;\n            *(*0x20 + -0x9c) = 0;\n            unaff_RDI = 0;\n            while( true ) {\n                if (arg3 == 0) {\n                    *(*0x20 + -0x88) = unaff_RDI;\n                    if (*(*0x20 + -0x9c) != '\\0') {\n                        *(*0x20 + -0x9c) = 0;\n                        LOCK();\n                        iVar1 = *0x52a070 + -1;\n                        bVar12 = *0x52a070 == 1;\n                        *0x52a070 = iVar1;\n                        if ((bVar12 && *0x52a06c != 0) && (0 < *0x5580b0)) {\n                            *(*0x20 + -0x40) = *0x558530;\n                            *(*0x20 + -0x48) = *0x52a0b0;\n                            *(*0x20 + -0x50) = *0x52a0a0;\n                            *(*0x20 + -0x58) = *0x52a0b8;\n                            *(*0x20 + -0xc0) = 0x42112d;\n                            arg2 = *0x52a0a0;\n                            fcn.004324c0();\n                            *(*0x20 + -0xc0) = 0x42113e;\n                            fcn.00432dc0();\n                            *(*0x20 + -0xc0) = 0x42114c;\n                            fcn.00432ac0();\n                            *(*0x20 + -0xc0) = 0x42115d;\n                            fcn.00432dc0();\n                            noname_0 = *(*0x20 + -0x48);\n                            *(*0x20 + -0xc0) = 0x421173;\n                            fcn.00432ac0();\n                            *(*0x20 + -0xc0) = 0x421185;\n                            fcn.00432dc0();\n                            *(*0x20 + -0xc0) = 0x42118f;\n                            fcn.00432ac0();\n                            *(*0x20 + -0xc0) = 0x4211a5;\n                            fcn.00432dc0();\n                            *(*0x20 + -0xc0) = 0x4211b0;\n                            fcn.004327c0(noname_0, arg2);\n                            *(*0x20 + -0xc0) = 0x4211c5;\n                            fcn.00432dc0();\n                            *(*0x20 + -0xc0) = 0x4211ca;\n                            fcn.00432540();\n                            unaff_RDI = *(*0x20 + -0x88);\n                        }\n                    }\n                    if (*0x509e70 != '\\0') {\n                        *(*0x20 + -0xc0) = 0x4211ef;\n                        fcn.00409520();\n                        *(*0x20 + -0xc0) = 0x421208;\n                        fcn.0044c620(*(*0x20 + -0x88));\n                        *(*0x20 + -0xc0) = 0x421217;\n                        fcn.00409300();\n                        unaff_RDI = *(*0x20 + -0x88);\n                    }\n                    return unaff_RDI;\n                }\n                uVar5 = unaff_RSI >> 9;\n                arg1_00 = arg3;\n                if (arg1 <= uVar5) goto code_r0x0042144a;\n                uVar6 = *(unaff_RBX + uVar5 * 8);\n                uVar5 = uVar6 >> 0x14;\n                if (0x3f < uVar5) goto code_r0x0042143d;\n                uVar5 = *(*(in_RAX + 0x10198 + uVar5 * 8) + (uVar6 & 0xfffff) * 8);\n                uVar6 = unaff_RSI & 0x1ff;\n                uVar7 = uVar6 >> 3;\n                if (0x40 < uVar7) break;\n                iVar11 = uVar7 - 0x40;\n                uVar7 = iVar11 >> 0x3f & uVar7;\n                iVar8 = uVar5 + uVar7 + 0x21000;\n                iVar9 = uVar5 + uVar7 + 0x21040;\n                arg1_00 = arg3 >> 3;\n                if (-iVar11 < arg1_00 || -arg1_00 == iVar11) {\n                    arg1_00 = -iVar11;\n                }\n                *(*0x20 + -0x28) = arg3;\n                *(*0x20 + -0x70) = uVar5;\n                *(*0x20 + -0x30) = uVar6;\n                *(*0x20 + -0x18) = iVar8;\n                *(*0x20 + -0x20) = iVar9;\n                *(*0x20 + -0x80) = arg1_00;\n                *(*0x20 + -0x38) = unaff_RSI;\n                for (uVar7 = 0; uVar7 < arg1_00; uVar7 = uVar7 + 1) {\n                    *(*0x20 + -0x10) = iVar8 + uVar7;\n                    if (arg1_00 <= uVar7) {\ncode_r0x00421425:\n                        *(*0x20 + -0xc0) = 0x421430;\n                        fcn.00459720(arg1_00);\n                        goto code_r0x00421430;\n                    }\n                    uVar3 = *(iVar8 + uVar7) & ~*(uVar7 + iVar9);\n                    if (uVar3 != 0) {\n                        *(*0x20 + -0x78) = uVar7;\n                        for (unaff_RBX = 0; unaff_RBX < 8; unaff_RBX = unaff_RBX + 1) {\n                            if ((1 << (unaff_RBX & 0x1f) & uVar3) != 0) {\n                                uVar10 = uVar6 + uVar7 * 8 + unaff_RBX;\n                                if (0x1ff < uVar10) {\n                                    *(*0x20 + -0xc0) = 0x421425;\n                                    fcn.00459740(0x200);\n                                    goto code_r0x00421425;\n                                }\n                                iVar11 = *(uVar5 + 0x20000 + uVar10 * 8);\n                                if (*(iVar11 + 0x58) == *(*0x20 + -0xa0) + -2) {\n                                    if (*(*0x20 + -0x9c) == '\\0') {\n                                        LOCK();\n                                        *0x52a070 = *0x52a070 + 1;\n                                        *(*0x20 + -0x9c) = 1;\n                                    }\n                                    LOCK();\n                                    if (*(*0x20 + -0xa0) + -2 == *(iVar11 + 0x58)) {\n                                        *(iVar11 + 0x58) = *(*0x20 + -0xa0) + -1;\n                                        in_RAX = *(*0x20 + 8);\n                                        bVar12 = true;\n                                    }\n                                    else {\n                                        in_RAX = *(*0x20 + 8);\n                                        iVar11 = 0;\n                                        bVar12 = false;\n                                    }\n                                }\n                                else {\n                                    iVar11 = 0;\n                                    bVar12 = false;\n                                }\n                                *(*0x20 + -0x98) = iVar11;\n                                if (bVar12) {\n                                    *(*0x20 + -0x60) = unaff_RBX;\n                                    *(*0x20 + -0x68) = unaff_RDI;\n                                    *(*0x20 + -0x90) = *(iVar11 + 0x20);\n                                    *(*0x20 + -0xc0) = 0x421373;\n                                    fcn.00409520();\n                                    *(*0x20 + -0xc0) = 0x42137f;\n                                    uVar2 = fcn.0041e820();\n                                    *(*0x20 + -0xa1) = uVar2;\n                                    *(*0x20 + -0xc0) = 0x421392;\n                                    fcn.00409300();\n                                    unaff_RDI = *(*0x20 + -0x68);\n                                    if (*(*0x20 + -0xa1) != '\\0') {\n                                        unaff_RDI = *(*0x20 + -0x90) + *(*0x20 + -0x68);\n                                    }\n                                    uVar3 = **(*0x20 + -0x10) & ~*(*(*0x20 + -0x78) + *(*0x20 + -0x20));\n                                    in_RAX = *(*0x20 + 8);\n                                    unaff_RBX = *(*0x20 + -0x60);\n                                    uVar5 = *(*0x20 + -0x70);\n                                    arg1_00 = *(*0x20 + -0x80);\n                                    iVar8 = *(*0x20 + -0x18);\n                                    uVar6 = *(*0x20 + -0x30);\n                                    uVar7 = *(*0x20 + -0x78);\n                                }\n                                unaff_RSI = *(*0x20 + -0x38);\n                                iVar9 = *(*0x20 + -0x20);\n                            }\n                            arg1 = *(*0x20 + 0x18);\n                            arg3 = *(*0x20 + -0x28);\n                        }\n                    }\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n                unaff_RSI = unaff_RSI + arg1_00 * 8;\n                arg3 = arg3 + arg1_00 * -8;\n            }\ncode_r0x00421430:\n            *(*0x20 + -0xc0) = 0x42143d;\n            fcn.00459800(0x40);\ncode_r0x0042143d:\n            arg1 = 0x40;\n            *(*0x20 + -0xc0) = 0x42144a;\n            fcn.00459740(0x40);\ncode_r0x0042144a:\n            *(*0x20 + -0xc0) = 0x421452;\n            in_RAX = fcn.00459740(arg1);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = uVar5;\n        *(puVar4 + 0x30) = arg1_00;\n        *(puVar4 + -8) = 0x421476;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        arg3 = *(puVar4 + 0x30);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 2933
    },
    "00421940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00421940(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    int64_t iStackX8;\n    int64_t iStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045b6e0();\n        iStackX8 = in_RAX;\n    }\n    iVar2 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (iVar2 != 0) {\n        if (*(iVar2 + 0x1228) != 0) goto code_r0x00421997;\n        iVar4 = 0;\n        iStackX8 = in_RAX;\n        iStack16 = iVar2;\n        do {\n            iVar2 = iStackX8;\n            if (0x3f < iVar4) {\n                *(iStack16 + 0x1228) = 0x40;\n                iVar2 = iStack16;\ncode_r0x00421997:\n                uVar1 = *(iVar2 + 0x1228) - 1;\n                if (uVar1 < 0x80) {\n                    uVar3 = *(iVar2 + 0x1228 + *(iVar2 + 0x1228) * 8);\n                    *(iVar2 + 0x1228) = uVar1;\n                    return uVar3;\n                }\n                iVar4 = 0x80;\n                iVar2 = fcn.00459720(0x80);\n            }\n            uVar3 = fcn.004147e0(iVar2 + 0x16a40);\n            *(iStack16 + 0x1230 + iVar4 * 8) = uVar3;\n            iVar4 = iVar4 + 1;\n        } while( true );\n    }\n    uVar3 = fcn.004147e0();\n    return uVar3;\n}\n",
        "token_count": 468
    },
    "004229c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004229c0(void)\n\n{\n    int64_t *piVar1;\n    int64_t **in_RAX;\n    int64_t **unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *unaff_RBX;\n            *(*0x20 + -0x10) = piVar1;\n            if (((piVar1 == NULL) && (unaff_RBX[1] == NULL)) && (unaff_RBX[2] == NULL)) {\n                *unaff_RBX = *in_RAX;\n                if (*in_RAX == NULL) {\n                    in_RAX[1] = unaff_RBX;\n                }\n                else {\n                    (*in_RAX)[1] = unaff_RBX;\n                }\n                *in_RAX = unaff_RBX;\n                unaff_RBX[2] = in_RAX;\n                return;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = unaff_RBX[1];\n            *(*0x20 + -0x20) = unaff_RBX[2];\n            *(*0x20 + -0x38) = 0x422a3d;\n            fcn.004324c0();\n            *(*0x20 + -0x38) = 0x422a4e;\n            fcn.00432dc0();\n            *(*0x20 + -0x38) = 0x422a58;\n            fcn.00432d80();\n            *(*0x20 + -0x38) = 0x422a5d;\n            fcn.004326e0();\n            *(*0x20 + -0x38) = 0x422a67;\n            fcn.00432d80();\n            *(*0x20 + -0x38) = 0x422a6c;\n            fcn.004326e0();\n            *(*0x20 + -0x38) = 0x422a76;\n            fcn.00432d80();\n            *(*0x20 + -0x38) = 0x422a7b;\n            fcn.004326e0();\n            *(*0x20 + -0x38) = 0x422a85;\n            fcn.00432d80();\n            *(*0x20 + -0x38) = 0x422a8a;\n            fcn.00432720();\n            *(*0x20 + -0x38) = 0x422a8f;\n            fcn.00432540();\n            unaff_RBX = 0x10;\n            *(*0x20 + -0x38) = 0x422aa5;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x422ab5;\n        fcn.00457040();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 819
    },
    "00422ae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00422ae0(void)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int64_t **ppiVar5;\n    ulong in_RAX;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t **ppiVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    ulong unaff_RBX;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x48) = 0x422b07;\n            iVar6 = fcn.004208c0();\n            if (iVar6 != 0) {\n                *(*0x20 + -0x28) = iVar6;\n                piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                *piVar1 = *piVar1 + 1;\n                *(*0x20 + -0x18) = *(unaff_R14 + 0x30);\n                *(*0x20 + -0x48) = 0x422b2e;\n                fcn.0041e480();\n                *(*0x20 + -0x20) = *(*0x20 + 8) - *(*(*0x20 + -0x28) + 0x18);\n                *(*0x20 + -0x29) = *(*(*0x20 + 0x10) + 10);\n                *(*0x20 + -0x10) = *(*0x20 + -0x28) + 0x78;\n                *(*0x20 + -0x48) = 0x422b5e;\n                fcn.00409300();\n                iVar6 = *(*0x20 + -0x28);\n                uVar3 = *(*0x20 + -0x29);\n                uVar7 = *(*0x20 + -0x20);\n                ppiVar5 = iVar6 + 0x80;\n                while (ppiVar9 = ppiVar5,  ppiVar5 = *ppiVar9,  ppiVar5 != NULL) {\n                    uVar10 = *(ppiVar5 + 1);\n                    if ((uVar10 == uVar7) && (*(ppiVar5 + 10) == uVar3)) {\n                        *(*0x20 + -0x48) = 0x422bb3;\n                        fcn.00409520();\n                        iVar4 = *(*(*0x20 + -0x18) + 0xd8);\n                        *(*(*0x20 + -0x18) + 0xd8) = iVar4 + -1;\n                        if ((iVar4 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return 0;\n                    }\n                    if ((uVar7 < uVar10) ||\n                       ((uVar10 == uVar7 && (uVar3 <= *(ppiVar5 + 10) && *(ppiVar5 + 10) != uVar3)))) break;\n                }\n                ppiVar5 = *(*0x20 + 0x10);\n                *(ppiVar5 + 1) = uVar7;\n                *ppiVar5 = *ppiVar9;\n                *ppiVar9 = ppiVar5;\n                uVar7 = *(iVar6 + 0x18);\n                uVar10 = uVar7 + 0x800000000000;\n                uVar11 = uVar10 >> 0x2a;\n                if (uVar11 < 0x40) {\n                    uVar7 = uVar7 >> 0xd;\n                    uVar8 = (uVar7 & 0x1ff) >> 3;\n                    if (uVar8 < 0x40) {\n                        puVar2 = *(*(uVar11 * 8 + 0x52a0d8) + (uVar10 >> 0x16 & 0xfffff) * 8) + uVar8 + 0x21080;\n                        LOCK();\n                        *puVar2 = *puVar2 | 1 << (uVar7 & 7);\n                        *(*0x20 + -0x48) = 0x422c85;\n                        fcn.00409520();\n                        iVar4 = *(*(*0x20 + -0x18) + 0xd8);\n                        *(*(*0x20 + -0x18) + 0xd8) = iVar4 + -1;\n                        if ((iVar4 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return 1;\n                    }\n                    *(*0x20 + -0x48) = 0x422ccb;\n                    fcn.00459740(0x40);\n                }\n                *(*0x20 + -0x48) = 0x422cd8;\n                fcn.00459740(0x40);\n            }\n            unaff_RBX = 0x1d;\n            *(*0x20 + -0x48) = 0x422ce9;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = unaff_RBX;\n        *(puVar12 + -8) = 0x422cf9;\n        fcn.00457040();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 1414
    },
    "00422d20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00422d20(void)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    ulong in_RAX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t *piVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uchar unaff_BL;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int64_t *piVar11;\n    int64_t unaff_R14;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_BL;\n            *(*0x20 + -0x48) = 0x422d46;\n            iVar4 = fcn.004208c0();\n            if (iVar4 != 0) {\n                *(*0x20 + -0x30) = iVar4;\n                piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                *piVar1 = *piVar1 + 1;\n                *(*0x20 + -0x18) = *(unaff_R14 + 0x30);\n                *(*0x20 + -0x48) = 0x422d6d;\n                fcn.0041e480();\n                *(*0x20 + -0x20) = *(*0x20 + 8) - *(*(*0x20 + -0x30) + 0x18);\n                *(*0x20 + -0x10) = *(*0x20 + -0x30) + 0x78;\n                *(*0x20 + -0x48) = 0x422d8f;\n                fcn.00409300();\n                iVar4 = *(*0x20 + -0x30);\n                piVar11 = iVar4 + 0x80;\n                do {\n                    piVar7 = piVar11;\n                    piVar11 = *piVar7;\n                    if (piVar11 == NULL) {\n                        piVar11 = NULL;\n                        goto code_r0x00422dd0;\n                    }\n                } while ((*(piVar11 + 1) != *(*0x20 + -0x20)) || (*(piVar11 + 10) != *(*0x20 + 0x10)));\n                *piVar7 = *piVar11;\ncode_r0x00422dd0:\n                *(*0x20 + -0x28) = piVar11;\n                if (*(iVar4 + 0x80) != 0) goto code_r0x00422e5c;\n                uVar8 = *(iVar4 + 0x18) + 0x800000000000;\n                uVar9 = uVar8 >> 0x2a;\n                if (uVar9 < 0x40) {\n                    uVar5 = *(iVar4 + 0x18) >> 0xd;\n                    uVar6 = (uVar5 & 0x1ff) >> 3;\n                    if (uVar6 < 0x40) {\n                        puVar2 = *(*(uVar9 * 8 + 0x52a0d8) + (uVar8 >> 0x16 & 0xfffff) * 8) + uVar6 + 0x21080;\n                        LOCK();\n                        *puVar2 = *puVar2 & ~(1 << (uVar5 & 7));\ncode_r0x00422e5c:\n                        *(*0x20 + -0x48) = 0x422e66;\n                        fcn.00409520();\n                        iVar3 = *(*(*0x20 + -0x18) + 0xd8);\n                        *(*(*0x20 + -0x18) + 0xd8) = iVar3 + -1;\n                        if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return *(*0x20 + -0x28);\n                    }\n                    *(*0x20 + -0x48) = 0x422eb0;\n                    fcn.00459740(0x40);\n                }\n                *(*0x20 + -0x48) = 0x422ebd;\n                fcn.00459740(0x40);\n            }\n            unaff_BL = 0x20;\n            *(*0x20 + -0x48) = 0x422ece;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar10 + 8) = in_RAX;\n        puVar10[0x10] = unaff_BL;\n        *(puVar10 + -8) = 0x422edd;\n        fcn.00457040();\n        in_RAX = *(puVar10 + 8);\n        unaff_BL = puVar10[0x10];\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 1206
    },
    "00422f00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00422f00(ulong arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    char cVar4;\n    ulong *puVar5;\n    ulong unaff_RBX;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    ulong uStack0000000000000028;\n    \n    uStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00409300();\n    puVar5 = fcn.004147e0();\n    fcn.00409520();\n    *(puVar5 + 10) = 1;\n    if (*0x557ed0 == 0) {\n        puVar5[2] = unaff_RBX;\n    }\n    else {\n        fcn.00459380(unaff_RBX);\n    }\n    puVar5[3] = arg1;\n    if (*0x557ed0 == 0) {\n        puVar5[4] = unaff_RDI;\n        puVar5[5] = uStack0000000000000028;\n    }\n    else {\n        fcn.004593a0(puVar5 + 4, unaff_RDI, in_R8, in_R9);\n        fcn.00459380(uStack0000000000000028);\n    }\n    cVar4 = fcn.00422ae0();\n    if (cVar4 != '\\0') {\n        if (*0x557cac != 0) {\n            fcn.0040f260(0);\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            iVar3 = *(unaff_R14 + 0x30);\n            fcn.00419d40();\n            fcn.00419ba0(0x4f0180);\n            iVar2 = *(iVar3 + 0xd8);\n            *(iVar3 + 0xd8) = iVar2 + -1;\n            if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n        }\n        return 1;\n    }\n    fcn.00409300();\n    *0x530a40 = *0x530a40 - *0x530a10;\n    *puVar5 = *0x530a28;\n    *0x530a28 = puVar5;\n    fcn.00409520();\n    return 0;\n}\n",
        "token_count": 637
    },
    "004238c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004238c0(ulong arg1)\n\n{\n    ulong arg1_00;\n    int64_t in_RAX;\n    int64_t arg2;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x4f1680 < 0x16) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                if (*0x557ed0 == 0) {\n                    *(in_RAX + 0x10110) = arg1;\n                }\n                else {\n                    *(*0x20 + -0x28) = 0x42390f;\n                    in_RAX = fcn.00459380();\n                }\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x28) = 0x423926;\n                fcn.00428720();\n                *(*0x20 + -0x28) = 0x423930;\n                fcn.00425b80();\n                arg1_00 = *0x4f0288;\n                arg2 = *(*0x20 + 8);\n                *(arg2 + 0x10078) = *0x4f0288;\n                if (*0x557ed0 == 0) {\n                    *(arg2 + 0x10108) = *(*0x20 + 0x10);\n                }\n                else {\n                    *(*0x20 + -0x28) = 0x42396b;\n                    fcn.00459280(arg1_00, arg2, in_R8, in_R9);\n                }\n                *(arg2 + 0x100f8) = *0x4f0288;\n                return;\n            }\n            *(*0x20 + -0x10) = *0x4f1680;\n            *(*0x20 + -0x28) = 0x42398d;\n            fcn.004324c0();\n            *(*0x20 + -0x28) = 0x42399e;\n            fcn.00432dc0();\n            arg1 = *(*0x20 + -0x10);\n            *(*0x20 + -0x28) = 0x4239ba;\n            fcn.00432bc0(arg1, 1 << (arg1 & 0x3f));\n            *(*0x20 + -0x28) = 0x4239bf;\n            fcn.00432720();\n            *(*0x20 + -0x28) = 0x4239c5;\n            fcn.00432540();\n            *(*0x20 + -0x28) = 0x4239ca;\n            fcn.004324c0();\n            *(*0x20 + -0x28) = 0x4239db;\n            fcn.00432dc0();\n            *(*0x20 + -0x28) = 0x4239e5;\n            fcn.00432bc0();\n            *(*0x20 + -0x28) = 0x4239ea;\n            fcn.00432720();\n            *(*0x20 + -0x28) = 0x4239ef;\n            fcn.00432540();\n            unaff_RBX = 0x2b;\n            *(*0x20 + -0x28) = 0x423a05;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + -8) = 0x423a1a;\n        fcn.00457040();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 1002
    },
    "00424600": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00424600(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x10118) != '\\0') goto code_r0x00424673;\n            uVar2 = unaff_RBX + 0x800000000000U >> 0x2a;\n            if (uVar2 < 0x40) {\n                iVar1 = *(uVar2 * 8 + 0x52a0d8);\n                if ((iVar1 != 0) && (*(iVar1 + (unaff_RBX + 0x800000000000U >> 0x16 & 0xfffff) * 8) != 0)) {\n                    return unaff_RBX;\n                }\ncode_r0x00424673:\n                *(*0x20 + -0x20) = 0x42467e;\n                iVar1 = fcn.004288e0();\n                if (unaff_RBX != '\\0') {\n                    return iVar1;\n                }\n                return *0x4f0280;\n            }\n            *(*0x20 + -0x20) = 0x4246ac;\n            in_RAX = fcn.00459740(0x40);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x4246bc;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 514
    },
    "00425480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00425480(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar3 = *(in_RAX + 0x10078);\n            uVar1 = uVar3 + 0x800000000000;\n            uVar5 = uVar1 >> 0x16;\n            if (*(in_RAX + 0x10088) < uVar5 || *(in_RAX + 0x10088) == uVar5) {\n                return 0;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            uVar3 = (uVar3 & 0x3fffff) >> 0xd;\n            if (-(uVar3 - 0x200) < unaff_RBX) goto code_r0x00425599;\n            uVar6 = *(in_RAX + 0x68);\n            if (uVar5 < uVar6) {\n                uVar6 = *(*(in_RAX + 0x60) + uVar5 * 8);\n                if (uVar6 < 0) {\n                    uVar6 = 0x200000;\n                }\n                else {\n                    uVar6 = uVar6 >> 0x15 & 0x1fffff;\n                }\n                if (uVar6 < unaff_RBX) {\ncode_r0x00425599:\n                    *(*0x20 + -0x40) = 0x42559e;\n                    iVar2 = fcn.004246e0();\n                    if (iVar2 == 0) {\n                        if (*(*0x20 + 0x10) == 1) {\n                            *(*(*0x20 + 8) + 0x10078) = *0x4f0288;\n                        }\n                        return 0;\n                    }\ncode_r0x004255d8:\n                    *(*0x20 + -0x10) = iVar2;\n                    *(*0x20 + -0x18) = unaff_RBX;\n                    *(*0x20 + -0x40) = 0x4255f4;\n                    fcn.00424280(*(*0x20 + 0x10));\n                    if (*(*(*0x20 + 8) + 0x10078) + 0x800000000000U < *(*0x20 + -0x18) + 0x800000000000U) {\n                        *(*(*0x20 + 8) + 0x10078) = *(*0x20 + -0x18);\n                    }\n                    return *(*0x20 + -0x10);\n                }\n                if (uVar1 >> 0x23 < 0x2000) {\n                    *(*0x20 + -0x10) = uVar5;\n                    *(*0x20 + -0x20) = uVar6;\n                    *(*0x20 + -0x40) = 0x425565;\n                    iVar2 = fcn.00426fa0(uVar3);\n                    if (iVar2 != -1) {\n                        iVar2 = iVar2 * 0x2000 + *(*0x20 + -0x10) * 0x400000 + -0x800000000000;\n                        unaff_RBX = (*(*0x20 + -0x10) * 0x400000 + unaff_RBX * 0x2000) - 0x800000000000;\n                        goto code_r0x004255d8;\n                    }\n                    *(*0x20 + -0x40) = 0x425647;\n                    fcn.004324c0();\n                    *(*0x20 + -0x40) = 0x425658;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x40) = 0x425665;\n                    fcn.00432ac0();\n                    *(*0x20 + -0x40) = 0x425676;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x40) = 0x425685;\n                    fcn.00432ac0();\n                    *(*0x20 + -0x40) = 0x42568a;\n                    fcn.00432720();\n                    *(*0x20 + -0x40) = 0x42568f;\n                    fcn.00432540();\n                    *(*0x20 + -0x10) = *(*(*0x20 + 8) + 0x10078);\n                    *(*0x20 + -0x40) = 0x4256a5;\n                    fcn.004324c0();\n                    *(*0x20 + -0x40) = 0x4256b6;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x40) = 0x4256ca;\n                    fcn.00432ac0();\n                    *(*0x20 + -0x40) = 0x4256db;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x40) = 0x4256e5;\n                    fcn.00432c20();\n                    *(*0x20 + -0x40) = 0x4256ea;\n                    fcn.00432720();\n                    *(*0x20 + -0x40) = 0x4256ef;\n                    fcn.00432540();\n                    unaff_RBX = 0x10;\n                    *(*0x20 + -0x40) = 0x425705;\n                    fcn.00430d40();\n                }\n                *(*0x20 + -0x40) = 0x425712;\n                fcn.00459740(0x2000);\n            }\n            *(*0x20 + -0x40) = 0x42571d;\n            in_RAX = fcn.00459740(uVar6);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x42572d;\n        fcn.0045b6e0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1561
    },
    "00425740": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00425740(uint64_t arg1)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar4 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar5 = unaff_RBX + 0x800000000000;\n            if (uVar5 < *(in_RAX + 0x10078) + 0x800000000000U) {\n                *(in_RAX + 0x10078) = unaff_RBX;\n            }\n            uVar7 = (arg1 * 0x2000 + unaff_RBX) - 1;\n            uVar6 = arg1 * 0x2000 + unaff_RBX + 0x7fffffffffff;\n            if (*(in_RAX + 0x10100) + 0x800000000000U < uVar6) {\n                *(in_RAX + 0x10100) = uVar7;\n            }\n            if (arg1 == 1) {\n                if (uVar5 >> 0x23 < 0x2000) {\n                    uVar7 = (unaff_RBX & 0x3fffff) >> 0x13;\n                    if (uVar7 < 8) {\n                        puVar1 = (uVar5 >> 0x16 & 0x1fff) * 0x80 + *(in_RAX + 0x78 + (uVar5 >> 0x23) * 8) + uVar7 * 8;\n                        *puVar1 = *puVar1 & ~(1 << ((unaff_RBX & 0x3fffff) >> 0xd & 0x3f));\n                        goto code_r0x004258f6;\n                    }\n                    *(*0x20 + -0x60) = 0x42591c;\n                    fcn.00459740(8);\n                }\n                *(*0x20 + -0x60) = 0x425929;\n                fcn.00459740(0x2000);\n                goto code_r0x00425929;\n            }\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            unaff_RBX = (unaff_RBX & 0x3fffff) >> 0xd;\n            uVar7 = (uVar7 & 0x3fffff) >> 0xd;\n            if (uVar6 >> 0x16 == uVar5 >> 0x16) {\n                uVar5 = uVar5 >> 0x23;\n                if (0x1fff < uVar5) {\n                    *(*0x20 + -0x60) = 0x425947;\n                    uVar7 = fcn.00459740(0x2000);\n                    goto code_r0x00425947;\n                }\n                *(*0x20 + -0x60) = 0x425894;\n                fcn.00426a40((uVar7 - unaff_RBX) + 1);\ncode_r0x00425929:\n                arg1 = *(*0x20 + -0x10);\ncode_r0x004258f6:\n                *(*0x20 + -0x60) = 0x425905;\n                fcn.00423ca0(arg1);\n                return;\n            }\n            if (uVar5 >> 0x23 < 0x2000) {\n                *(*0x20 + -0x18) = uVar6;\n                *(*0x20 + -0x20) = uVar6 >> 0x16;\n                *(*0x20 + -0x28) = uVar5 >> 0x16;\n                *(*0x20 + -0x30) = uVar7;\n                *(*0x20 + -0x60) = 0x425848;\n                fcn.00426a40(-(unaff_RBX - 0x200));\n                uVar5 = *(*0x20 + 8);\n                iVar2 = *(*0x20 + -0x28);\n                uVar7 = *(*0x20 + -0x20);\n                while (arg1 = iVar2 + 1,  arg1 < uVar7) {\n                    uVar7 = arg1 >> 0xd;\n                    if (0x1fff < uVar7) goto code_r0x004259dd;\ncode_r0x00425947:\n                    *(*0x20 + -0x38) = arg1;\n                    uVar3 = *(uVar5 + 0x78 + uVar7 * 8);\n                    *(*0x20 + -0x60) = 0x425967;\n                    fcn.00426b60(uVar3, (arg1 & 0x1fff) << 7);\n                    uVar5 = *(*0x20 + 8);\n                    unaff_RBX = *(*0x20 + -0x20);\n                    uVar7 = unaff_RBX;\n                    iVar2 = *(*0x20 + -0x38);\n                }\n                if (*(*0x20 + -0x18) >> 0x23 < 0x2000) {\n                    *(*0x20 + -0x60) = 0x4259ce;\n                    fcn.00426a40(*(*0x20 + -0x30) + 1);\n                    goto code_r0x00425929;\n                }\n                *(*0x20 + -0x60) = 0x4259dd;\n                fcn.00459740(0x2000);\ncode_r0x004259dd:\n                *(*0x20 + -0x60) = 0x4259e7;\n                fcn.00459740(0x2000);\n            }\n            arg1 = 0x2000;\n            *(*0x20 + -0x60) = 0x4259f4;\n            in_RAX = fcn.00459740(0x2000);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x425a09;\n        fcn.0045b6e0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1609
    },
    "00425b80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00425b80(void)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    ulong noname_1;\n    ulong in_RAX;\n    int64_t iVar3;\n    uint64_t arg1;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = *0x4f16c0;\n            *(*0x20 + -0x28) = *0x4f16c8;\n            *(*0x20 + -0x24) = *0x4f16cc;\n            *(*0x20 + -0x20) = *0x4f16d0;\n            *(*0x20 + -0x1c) = *0x4f16d4;\n            *(*0x20 + -0x18) = *0x4f16d8;\n            *(*0x20 + -0x14) = *0x4f16dc;\n            *(*0x20 + -0x10) = *0x4f16e0;\n            *(*0x20 + -0xc) = *0x4f16e4;\n            iVar3 = 0;\n            while( true ) {\n                if (4 < iVar3) {\n                    return;\n                }\n                *(*0x20 + -0x58) = iVar3;\n                arg1 = -(*(*0x20 + iVar3 * 8 + -0x30) + -0x30);\n                uVar5 = 1 << (arg1 & 0x3f) & -(arg1 < 0x40);\n                *(*0x20 + -0x50) = uVar5;\n                *(*0x20 + -0x70) = 0x425c1d;\n                iVar3 = fcn.004137a0(arg1, *0x557df8 + uVar5 * 8 + -1);\n                if (iVar3 == 0) break;\n                *(*0x20 + -0x48) = in_XMM15;\n                *(*0x20 + -0x38) = 0;\n                *(*0x20 + -0x48) = iVar3;\n                *(*0x20 + -0x40) = 0;\n                uVar1 = *(*0x20 + -0x50);\n                *(*0x20 + -0x38) = uVar1;\n                iVar2 = *(*0x20 + 8);\n                iVar3 = *(*0x20 + -0x58);\n                noname_1 = *(*0x20 + -0x48);\n                *(iVar2 + 8 + iVar3 * 0x18) = 0;\n                *(iVar2 + 0x10 + iVar3 * 0x18) = uVar1;\n                if (*0x557ed0 == 0) {\n                    *(iVar2 + iVar3 * 0x18) = noname_1;\n                }\n                else {\n                    *(*0x20 + -0x70) = 0x425c8d;\n                    fcn.004593a0(arg1, noname_1, iVar3, iVar3 * 3);\n                }\n                iVar3 = iVar3 + 1;\n            }\n            *(*0x20 + -0x70) = 0x425cad;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x425cb8;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 940
    },
    "00426200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00426200(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    uVar1 = in_RAX[1];\n    if (uVar1 != 0) {\n        if (unaff_RBX == 1) {\n            uVar2 = 0;\n            if (uVar1 != 0) {\n                for (; (uVar1 >> uVar2 & 1) == 0; uVar2 = uVar2 + 1) {\n                }\n            }\n            uVar4 = ~(1 << (uVar2 & 0x3f) & -(uVar2 < 0x40));\n            in_RAX[1] = uVar1 & uVar4;\n            in_RAX[2] = in_RAX[2] & uVar4;\n            return uVar2 * 0x2000 + *in_RAX;\n        }\n        iVar3 = fcn.004262c0();\n        return iVar3;\n    }\n    return 0;\n}\n",
        "token_count": 315
    },
    "00426400": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00426400(void)\n\n{\n    uint64_t *puVar1;\n    uchar (*pauVar2) [16];\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x00426400:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n        puVar5 = *0x20 + -0x48;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if (in_RAX[1] == 0) {\n            return;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        uVar3 = *in_RAX;\n        uVar7 = uVar3 + 0x800000000000;\n        *(*0x20 + -0x10) = uVar7;\n        uVar6 = uVar7 >> 0x16;\n        *(*0x20 + -0x18) = uVar6;\n        uVar4 = (uVar3 & 0x3fffff) >> 0xd;\n        *(*0x20 + -0x20) = uVar4;\n        uVar3 = 0;\n        do {\n            if (0x3f < uVar3) {\n                if (*in_RAX + 0x800000000000 < *(unaff_RBX + 0x10078) + 0x800000000000U) {\n                    *(unaff_RBX + 0x10078) = *in_RAX;\n                }\n                *(*0x20 + -0x50) = 0x4265ac;\n                fcn.00423ca0(0x40);\n                pauVar2 = *(*0x20 + 8);\n                *pauVar2 = in_XMM15;\n                *pauVar2[1] = 0;\n                return;\n            }\n            if ((in_RAX[1] >> (uVar3 & 0x3f) & 1) != 0) {\n                if (0x1fff < uVar7 >> 0x23) goto code_r0x004265e5;\n                uVar8 = uVar4 + uVar3 >> 6;\n                if (7 < uVar8) goto code_r0x004265d4;\n                puVar1 = (uVar6 & 0x1fff) * 0x80 + *(unaff_RBX + 0x78 + (uVar7 >> 0x23) * 8) + uVar8 * 8;\n                *puVar1 = *puVar1 & ~(1 << (uVar4 + uVar3 & 0x3f));\n            }\n            if ((in_RAX[2] >> (uVar3 & 0x3f) & 1) != 0) {\n                if (0x1fff < uVar7 >> 0x23) goto code_r0x004265c7;\n                *(*0x20 + -0x28) = uVar3;\n                *(*0x20 + -0x50) = 0x42654b;\n                fcn.00426900(1);\n                in_RAX = *(*0x20 + 8);\n                uVar4 = *(*0x20 + -0x20);\n                unaff_RBX = *(*0x20 + 0x10);\n                uVar3 = *(*0x20 + -0x28);\n                uVar7 = *(*0x20 + -0x10);\n                uVar6 = *(*0x20 + -0x18);\n            }\n            uVar3 = uVar3 + 1;\n        } while( true );\n    }\n    goto code_r0x004265f3;\ncode_r0x004265c7:\n    *(*0x20 + -0x50) = 0x4265d4;\n    fcn.00459740(0x2000);\ncode_r0x004265d4:\n    *(*0x20 + -0x50) = 0x4265e5;\n    fcn.00459740(8);\ncode_r0x004265e5:\n    *(*0x20 + -0x50) = 0x4265f2;\n    in_RAX = fcn.00459740(0x2000);\ncode_r0x004265f3:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + 0x10) = unaff_RBX;\n    *(puVar5 + -8) = 0x426605;\n    fcn.0045b6e0();\n    in_RAX = *(puVar5 + 8);\n    unaff_RBX = *(puVar5 + 0x10);\n    *0x20 = puVar5;\n    goto code_r0x00426400;\n}\n",
        "token_count": 1186
    },
    "00426900": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00426900(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t *puVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    uint8_t uVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    \n    uVar5 = unaff_RBX >> 6;\n    if (uVar5 < 8) {\n        uVar4 = unaff_RBX;\n        if (arg1 == 1) {\n            puVar2 = in_RAX + uVar5 * 8;\n            *puVar2 = *puVar2 | 1 << (uVar4 & 0x3f);\n            return;\n        }\n        uVar1 = (arg1 + unaff_RBX) - 1;\n        uVar6 = uVar1 >> 6;\n        if (uVar6 == uVar5) {\n            puVar2 = in_RAX + uVar5 * 8;\n            *puVar2 = *puVar2 | (1 << (arg1 & 0x3f) & -(arg1 < 0x40)) - 1 << (uVar4 & 0x3f);\n            return;\n        }\n        if (uVar6 < 8) {\n            puVar2 = in_RAX + uVar5 * 8;\n            *puVar2 = *puVar2 | -1 << (uVar4 & 0x3f);\n            while (uVar5 = uVar5 + 1,  uVar5 < uVar6) {\n                *(in_RAX + uVar5 * 8) = 0xffffffffffffffff;\n            }\n            uVar5 = (uVar1 & 0x3f) + 1;\n            puVar2 = in_RAX + uVar6 * 8;\n            *puVar2 = *puVar2 | (1 << (uVar5 & 0x3f) & -(uVar5 < 0x40)) - 1;\n            return;\n        }\n        fcn.00459740(8);\n    }\n    fcn.00459740(8);\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 503
    },
    "00426a40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00426a40(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t *puVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    uint8_t uVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    \n    uVar5 = unaff_RBX >> 6;\n    if (uVar5 < 8) {\n        uVar4 = unaff_RBX;\n        if (arg1 == 1) {\n            puVar2 = in_RAX + uVar5 * 8;\n            *puVar2 = *puVar2 & ~(1 << (uVar4 & 0x3f));\n            return;\n        }\n        uVar1 = (arg1 + unaff_RBX) - 1;\n        uVar6 = uVar1 >> 6;\n        if (uVar6 == uVar5) {\n            puVar2 = in_RAX + uVar5 * 8;\n            *puVar2 = *puVar2 & ~((1 << (arg1 & 0x3f) & -(arg1 < 0x40)) - 1 << (uVar4 & 0x3f));\n            return;\n        }\n        if (uVar6 < 8) {\n            puVar2 = in_RAX + uVar5 * 8;\n            *puVar2 = *puVar2 & ~(-1 << (uVar4 & 0x3f));\n            while (uVar5 = uVar5 + 1,  uVar5 < uVar6) {\n                *(in_RAX + uVar5 * 8) = 0;\n            }\n            uVar5 = (uVar1 & 0x3f) + 1;\n            puVar2 = in_RAX + uVar6 * 8;\n            *puVar2 = *puVar2 & -(1 << (uVar5 & 0x3f) & -(uVar5 < 0x40));\n            return;\n        }\n        fcn.00459740(8);\n    }\n    fcn.00459740(8);\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 500
    },
    "00426b80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00426b80(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    uint8_t uVar1;\n    int64_t iVar2;\n    uint64_t in_RDX;\n    uint64_t unaff_RBX;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t in_R8;\n    int64_t in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        uVar3 = unaff_RBX;\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = unaff_RBX;\n            if (arg1 == 1) {\n                uVar3 = unaff_RBX >> 6;\n                if (7 < uVar3) {\n                    *(*0x20 + -0x40) = 0x426cca;\n                    in_RAX = fcn.00459740(8);\n                    goto code_r0x00426cca;\n                }\n                return *(in_RAX + uVar3 * 8) >> (uVar1 & 0x3f) & 1;\n            }\n            uVar3 = unaff_RBX >> 6;\n            if (uVar3 < 8) {\n                unaff_RDI = (arg1 + unaff_RBX) - 1;\n                unaff_RSI = unaff_RDI >> 6;\n                if (unaff_RSI == uVar3) {\n                    if (*0x557c77 == 0) {\n                        *(*0x20 + -0x40) = 0x426c89;\n                        uVar3 = fcn.00401d40();\n                    }\n                    else {\n                        uVar3 = popcnt(*(in_RAX + uVar3 * 8) >> (uVar1 & 0x3f) &\n                                       (1 << (arg1 & 0x3f) & -(arg1 < 0x40)) - 1);\n                    }\n                    return uVar3;\n                }\n                if (unaff_RSI < 8) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x10) = unaff_RDI;\n                    *(*0x20 + -0x18) = unaff_RSI;\n                    in_RDX = *0x557c77;\n                    if (in_RDX == 0) {\n                        *(*0x20 + -0x20) = uVar3;\n                        *(*0x20 + -0x40) = 0x426c19;\n                        in_R8 = fcn.00401d40();\n                        in_RDX = *0x557c77;\n                        uVar3 = *(*0x20 + -0x20);\n                        unaff_RSI = *(*0x20 + -0x18);\n                        unaff_RDI = *(*0x20 + -0x10);\n                        in_RAX = *(*0x20 + 8);\n                    }\n                    else {\n                        in_R8 = popcnt(*(in_RAX + uVar3 * 8) >> (uVar1 & 0x3f));\n                    }\n                    while( true ) {\n                        uVar3 = uVar3 + 1;\n                        *(*0x20 + -0x20) = in_R8;\n                        if (unaff_RSI <= uVar3) break;\n                        if (in_RDX == 0) {\n                            *(*0x20 + -0x28) = uVar3;\n                            *(*0x20 + -0x40) = 0x426cf9;\n                            in_R9 = fcn.00401d40();\n                            in_RDX = *0x557c77;\n                            uVar3 = *(*0x20 + -0x28);\n                            unaff_RSI = *(*0x20 + -0x18);\n                            unaff_RDI = *(*0x20 + -0x10);\n                            in_R8 = *(*0x20 + -0x20);\n                            in_RAX = *(*0x20 + 8);\n                        }\n                        else {\n                            in_R9 = popcnt(*(in_RAX + uVar3 * 8));\n                        }\ncode_r0x00426cca:\n                        in_R8 = in_R8 + in_R9;\n                    }\n                    uVar3 = (unaff_RDI & 0x3f) + 1;\n                    if (in_RDX == 0) {\n                        *(*0x20 + -0x40) = 0x426d57;\n                        iVar2 = fcn.00401d40();\n                        in_R8 = *(*0x20 + -0x20);\n                    }\n                    else {\n                        iVar2 = popcnt((-(uVar3 < 0x40) & 1 << (uVar3 & 0x3f)) - 1 & *(in_RAX + unaff_RSI * 8));\n                    }\n                    return iVar2 + in_R8;\n                }\n                *(*0x20 + -0x40) = 0x426d7a;\n                fcn.00459740(8);\n            }\n            arg1 = 8;\n            *(*0x20 + -0x40) = 0x426d87;\n            in_RAX = fcn.00459740(8);\n            in_RDX = unaff_RBX;\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = uVar3;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x426d9c;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1381
    },
    "00426fa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00426fa0(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (unaff_RBX == 1) {\n        arg1 = arg1 >> 6;\n        while( true ) {\n            if (7 < arg1) {\n                return -1;\n            }\n            uVar2 = ~*(in_RAX + arg1 * 8);\n            if (uVar2 != 0) break;\n            arg1 = arg1 + 1;\n        }\n        iVar1 = 0;\n        if (uVar2 != 0) {\n            for (; (uVar2 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n            }\n        }\n        return arg1 * 0x40 + iVar1;\n    }\n    if (0x40 < unaff_RBX) {\n        iVar1 = fcn.00427160(arg1);\n        return iVar1;\n    }\n    iVar1 = fcn.00427060(arg1);\n    return iVar1;\n}\n",
        "token_count": 308
    },
    "00427380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00427380(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            if (in_RAX == 1) {\n                iVar1 = unaff_RBX * 8 + 0xb0;\n                goto code_r0x004273c3;\n            }\n            if (in_RAX - 2U < 2) {\n                iVar1 = unaff_RBX * 8 + 0x40;\ncode_r0x004273c3:\n                *(*0x20 + -0x10) = iVar1;\n                *(*0x20 + -0x30) = 0x4273d9;\n                iVar1 = fcn.0040b720(0x559b60);\n                *0x557d30 = *0x557d30 + *(*0x20 + -0x10);\n                *(iVar1 + 0x10) = *(*0x20 + 8);\n                *(iVar1 + 0x28) = *(*0x20 + 0x10);\n                return;\n            }\n            unaff_RBX = 0x1b;\n            *(*0x20 + -0x30) = 0x427412;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x427425;\n        fcn.00457040();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 535
    },
    "00427440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00427440(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x10) == 1) {\n                return in_RAX + *(in_RAX + 0x28) * 8 + 0x30;\n            }\n            *(*0x20 + -0x20) = 0x427485;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x427490;\n        fcn.00457040();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 284
    },
    "00427920": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00427920(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00409300();\n    if (*0x557da4 == '\\0') {\n        fcn.00427980();\n        *0x557da4 = '\\x01';\n    }\n    fcn.00409520();\n    return;\n}\n",
        "token_count": 122
    },
    "00427e20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00427e20(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    double *pdVar2;\n    int64_t iVar3;\n    ulong in_RDX;\n    uchar *unaff_RBX;\n    uchar *puVar4;\n    ulong unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xe8 && *0x20 + -0xe8 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x168;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x178) = *0x20 + -8;\n            *(*0x20 + -0x170) = 0x427e75;\n            fcn.00459974();\n            unaff_RBP = *(*0x20 + -0x178);\n            unaff_RDI = *(*(unaff_R14 + 0x30) + 0x90);\n            if ((unaff_RDI == 0) || (unaff_R14 == unaff_RDI)) {\n                unaff_RBX = *0x20 + -0x108;\n                unaff_RDI = 0x20;\n                *(*0x20 + -0x170) = 0x427ed7;\n                uVar1 = fcn.0044fd80(0x20);\n            }\n            else {\n                *(*0x20 + -0x168) = 0;\n                unaff_RBX = 0xffffffffffffffff;\n                *(*0x20 + -0x170) = 0x427ebf;\n                uVar1 = fcn.0044d020(0, in_RDX, *0x20 + -0x108, 0x20);\n            }\n            *(*0x20 + -0x118) = uVar1;\n            *(*0x20 + -0x170) = 0x427eea;\n            fcn.00409300();\n            arg1 = *(*0x20 + -0x118);\n            if (arg1 < 0x21) break;\n            in_RDX = 0x20;\n            *(*0x20 + -0x170) = 0x427fe6;\n            in_RAX = fcn.00459760(arg1, 0x20);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + -8) = 0x428005;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        *0x20 = puVar4;\n    } while( true );\n    *(*0x20 + -0x170) = 0x427f1b;\n    uVar1 = fcn.00427500(*0x20 + -0x108);\n    *(*0x20 + -0x110) = uVar1;\n    if (*(*0x20 + 0x20) == 2) {\n        if (*(*0x20 + 8) < *(*0x20 + 0x10)) {\n            *(*0x20 + -0x170) = 0x427f4a;\n            pdVar2 = fcn.004274a0();\n            *pdVar2 = *(*0x20 + 0x10) / *(*0x20 + 8) + *pdVar2;\n            *(*0x20 + -0x170) = 0x427f85;\n            iVar3 = fcn.004274a0();\n            *(iVar3 + 8) = *(iVar3 + 8) + *(*0x20 + 0x10);\n            goto code_r0x00427fc0;\n        }\n    }\n    *(*0x20 + -0x170) = 0x427f98;\n    pdVar2 = fcn.004274a0();\n    *pdVar2 = *0x49e228 + *pdVar2;\n    *(*0x20 + -0x170) = 0x427fb2;\n    iVar3 = fcn.004274a0();\n    *(iVar3 + 8) = *(iVar3 + 8) + *(*0x20 + 8);\ncode_r0x00427fc0:\n    *(*0x20 + -0x170) = 0x427fcc;\n    fcn.00409520();\n    return;\n}\n",
        "token_count": 1147
    },
    "00428720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00428720(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    ulong arg1;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    in_RAX[1] = 0;\n    in_RAX[2] = 0x10;\n    arg1 = unaff_RBX;\n    uVar1 = fcn.0040b720(unaff_RBX);\n    *in_RAX = uVar1;\n    if (*0x557ed0 == 0) {\n        in_RAX[4] = unaff_RBX;\n    }\n    else {\n        fcn.00459280(arg1, in_RAX, param_3, param_4);\n    }\n    in_RAX[3] = 0;\n    return;\n}\n",
        "token_count": 241
    },
    "00429b20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00429b20(void)\n\n{\n    int64_t *in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *in_RAX = in_RAX + 2;\n            if (*0x557ed5 == '\\0') {\n                in_RAX[1] = in_RAX + 0x202;\n            }\n            else {\n                in_RAX[1] = in_RAX + 4;\n            }\n            if ((in_RAX[1] - *in_RAX & 0xfU) == 0) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x429b85;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x429b90;\n        fcn.00457040();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 337
    },
    "00429ba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00429ba0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    if (0 < *(*(unaff_R14 + 0x30) + 0xdc)) {\n        iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n        *(iVar1 + 0x16c0) = iVar1 + 0x16d0;\n        return;\n    }\n    if ((*0x557ed5 != '\\0') && (in_RAX != 0)) {\n        fcn.00403280();\n        if (*0x557ed4 == '\\0') {\n            iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n            *(iVar1 + 0x16c0) = iVar1 + 0x16d0;\n            return;\n        }\n    }\n    fcn.00456f00();\n    return;\n}\n",
        "token_count": 218
    },
    "00429c60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00429c60(void)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t arg1;\n    uint8_t *puVar5;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint8_t uVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar7 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar4 = *(in_RAX + 0x16c0) - (in_RAX + 0x16d0) >> 3;\n            if (uVar4 < 0x201) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x10) = uVar4;\n                *(in_RAX + 0x16c0) = 0;\n                if (*0x557c73 != '\\0') {\n                    iVar3 = 0;\n                    while (iVar3 < uVar4) {\n                        *(*0x20 + -0x18) = iVar3;\n                        uVar1 = *(in_RAX + 0x16d0 + iVar3 * 8);\n                        *(*0x20 + -0x48) = 0x429cdb;\n                        fcn.0041a300(uVar1);\n                        in_RAX = *(*0x20 + 8);\n                        uVar4 = *(*0x20 + -0x10);\n                        iVar3 = *(*0x20 + -0x18) + 1;\n                    }\n                    *(*0x20 + -0x48) = 0x429cfe;\n                    fcn.00429b20();\n                    return;\n                }\n                arg1 = 0;\n                for (iVar3 = 0; iVar3 < uVar4; iVar3 = iVar3 + 1) {\n                    uVar6 = arg1;\n                    if (0xfff < *(in_RAX + 0x16d0 + iVar3 * 8)) {\n                        *(*0x20 + -0x18) = iVar3;\n                        *(*0x20 + -0x20) = arg1;\n                        uVar4 = 0;\n                        *(*0x20 + -0x48) = 0x429d45;\n                        iVar3 = fcn.0040f260(0);\n                        if (iVar3 == 0) {\n                            in_RAX = *(*0x20 + 8);\n                            iVar3 = *(*0x20 + -0x18);\n                            uVar6 = *(*0x20 + -0x20);\n                            uVar4 = *(*0x20 + -0x10);\n                        }\n                        else {\n                            puVar5 = (uVar4 >> 3) + *0x50;\n                            uVar8 = 1 << (uVar4 & 7);\n                            if ((uVar8 & *puVar5) == 0) {\n                                LOCK();\n                                *puVar5 = *puVar5 | uVar8;\n                                uVar4 = *0x18 + 0x800000000000 >> 0x2a;\n                                if (0x3f < uVar4) goto code_r0x00429eed;\n                                iVar2 = *(*(uVar4 * 8 + 0x52a0d8) + (*0x18 + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n                                uVar4 = *0x18 >> 0x10 & 0x3f;\n                                puVar5 = iVar2 + uVar4 + 0x21040;\n                                uVar8 = 1 << (*0x18 >> 0xd & 7);\n                                if ((uVar8 & *(iVar2 + 0x21040 + uVar4)) == 0) {\n                                    LOCK();\n                                    *puVar5 = *puVar5 | uVar8;\n                                }\n                                if ((*0x62 & 1) == 0) {\n                                    uVar6 = *(*0x20 + -0x20);\n                                    arg1 = *(*0x20 + -0x10);\n                                    if (arg1 <= uVar6) goto code_r0x00429ee5;\n                                    in_RAX = *(*0x20 + 8);\n                                    *(in_RAX + 0x16d0 + uVar6 * 8) = iVar3;\n                                    uVar6 = uVar6 + 1;\n                                    iVar3 = *(*0x20 + -0x18);\n                                    uVar4 = arg1;\n                                }\n                                else {\n                                    in_RAX = *(*0x20 + 8);\n                                    *(in_RAX + 0x16a8) = *(in_RAX + 0x16a8) + *0x68;\n                                    iVar3 = *(*0x20 + -0x18);\n                                    uVar6 = *(*0x20 + -0x20);\n                                    uVar4 = *(*0x20 + -0x10);\n                                }\n                            }\n                            else {\n                                in_RAX = *(*0x20 + 8);\n                                iVar3 = *(*0x20 + -0x18);\n                                uVar6 = *(*0x20 + -0x20);\n                                uVar4 = *(*0x20 + -0x10);\n                            }\n                        }\n                    }\n                    arg1 = uVar6;\n                }\n                if (arg1 < 0x201) {\n                    *(*0x20 + -0x48) = 0x429ebc;\n                    fcn.0041f9c0(arg1);\n                    *(*0x20 + -0x48) = 0x429ecd;\n                    fcn.00429b20();\n                    return;\n                }\n                *(*0x20 + -0x48) = 0x429ee5;\n                fcn.004597a0(arg1, 0x200);\ncode_r0x00429ee5:\n                *(*0x20 + -0x48) = 0x429eed;\n                fcn.00459720(arg1);\ncode_r0x00429eed:\n                uVar4 = 0x40;\n                *(*0x20 + -0x48) = 0x429efa;\n                fcn.00459740(0x40);\n            }\n            *(*0x20 + -0x48) = 0x429f05;\n            in_RAX = fcn.00459780(uVar4, 0x200);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x429f10;\n        fcn.0045b6e0();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1571
    },
    "00429f20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00429f20(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (*0x557cb8 == 0) {\n        fcn.00409300();\n        if (*0x557cb8 == 0) {\n            fcn.0042a1e0();\n            *0x557cb8 = 1;\n        }\n        fcn.00409520();\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "0042a020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042a020(ulong arg1)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t unaff_RBX;\n    \n    if ((arg1 == 0x72) || (arg1 == 0xe9)) {\n        do {\n            uVar4 = *(unaff_RBX + 0x28);\n            if (uVar4 == 1) {\n                uVar4 = 0;\n                goto code_r0x0042a036;\n            }\n            LOCK();\n            puVar1 = unaff_RBX + 0x28;\n            uVar3 = *puVar1;\n            *puVar1 = *puVar1 ^ (uVar4 == uVar3) * (*puVar1 ^ 1);\n        } while (uVar4 != uVar3);\n        if (uVar4 == 2) {\n            uVar4 = 0;\n        }\n    }\n    else {\n        uVar4 = 0;\n    }\ncode_r0x0042a036:\n    if ((arg1 == 0x77) || (arg1 == 0xe9)) {\n        do {\n            uVar3 = *(unaff_RBX + 0x88);\n            if (uVar3 == 1) {\n                uVar3 = 0;\n                goto code_r0x0042a04e;\n            }\n            LOCK();\n            puVar1 = unaff_RBX + 0x88;\n            uVar2 = *puVar1;\n            *puVar1 = *puVar1 ^ (uVar3 == uVar2) * (*puVar1 ^ 1);\n        } while (uVar3 != uVar2);\n        if (uVar3 == 2) {\n            uVar3 = 0;\n        }\n    }\n    else {\n        uVar3 = 0;\n    }\ncode_r0x0042a04e:\n    if (uVar4 != 0) {\n        *(uVar4 + 0xa0) = *in_RAX;\n        *in_RAX = uVar4;\n    }\n    if (uVar3 != 0) {\n        *(uVar3 + 0xa0) = *in_RAX;\n        *in_RAX = uVar3;\n    }\n    return;\n}\n",
        "token_count": 527
    },
    "0042a120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.0042a120(void)\n\n{\n    ulong *puVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00409300();\n    if (*(in_RAX + 8) == 0) {\n        iVar2 = fcn.0040b720(0x559b80);\n        for (uVar3 = 0; uVar3 < 0x11; uVar3 = uVar3 + 1) {\n            *(iVar2 + uVar3 * 0xe8) = *(in_RAX + 8);\n            *(in_RAX + 8) = uVar3 * 0xe8 + iVar2;\n        }\n    }\n    puVar1 = *(in_RAX + 8);\n    *(in_RAX + 8) = *puVar1;\n    fcn.00409520();\n    return puVar1;\n}\n",
        "token_count": 263
    },
    "0042a2e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0042a2e0(void)\n\n{\n    uint64_t uVar1;\n    int64_t unaff_R14;\n    int64_t iStack16;\n    \n    while (uVar1 = _sym.imp.kernel32.dll_CreateIoCompletionPort, \n          *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.0042d6e0();\n    if (iStack16 == 0) {\n        fcn.0045ab80();\n        return uVar1 & 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 155
    },
    "0042a3a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0042a3a0(void)\n\n{\n    uint64_t uVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            if (*0x557cc0 != 0) {\n                return *0x557cc0;\n            }\n            *0x557cc0 = 1;\n            *(*0x20 + -0x40) = _sym.imp.kernel32.dll_PostQueuedCompletionStatus;\n            *(*0x20 + -0x38) = *0x4f0270;\n            *(*0x20 + -0x30) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x48) = 0x42a3fc;\n            uVar1 = fcn.0042d6e0();\n            if (*(*0x20 + -0x18) != 0) {\n                return uVar1;\n            }\n            *(*0x20 + -0x48) = 0x42a427;\n            fcn.0045ab80();\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            *(*0x20 + -0x10) = *(*0x20 + -0x40);\n            *(*0x20 + -0x48) = 0x42a448;\n            fcn.004324c0();\n            *(*0x20 + -0x48) = 0x42a459;\n            fcn.00432dc0();\n            *(*0x20 + -0x48) = 0x42a465;\n            fcn.00432ac0();\n            *(*0x20 + -0x48) = 0x42a476;\n            fcn.00432dc0();\n            *(*0x20 + -0x48) = 0x42a47b;\n            fcn.00432540();\n            *(*0x20 + -0x48) = 0x42a48c;\n            fcn.00430d40();\n        }\n        *(puVar2 + -8) = 0x42a492;\n        fcn.00457040();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 713
    },
    "0042a4a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0042a4a0(void)\n\n{\n    ulong uVar1;\n    uint32_t uVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t iVar8;\n    ulong *puVar9;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x800 && *0x20 + -0x800 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x880;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            puVar9 = *0x20 + -0x808;\n            for (iVar4 = 0x100; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar9 = 0;\n                puVar9 = puVar9 + 1;\n            }\n            *(*0x20 + -0x83c) = 0;\n            *(*0x20 + -0x830) = 0;\n            *(*0x20 + -0x838) = 0;\n            *(*0x20 + -0x828) = 0;\n            iVar4 = *(unaff_R14 + 0x30);\n            if (*0x4f0270 == -1) {\n                return 0;\n            }\n            if (in_RAX < 0) {\n                uVar5 = 0xffffffff;\n            }\n            else if (in_RAX == 0) {\n                uVar5 = 0;\n            }\n            else if (in_RAX < 1000000) {\n                uVar5 = 1;\n            }\n            else if (in_RAX < 1000000000000000) {\n                uVar5 = in_RAX / 1000000 + (in_RAX >> 0x3f);\n            }\n            else {\n                uVar5 = 1000000000;\n            }\n            iVar8 = *0x557cb0;\n            if (iVar8 != 0) {\n                if (iVar8 == -1) {\n                    uVar2 = 0xffffffc0;\n                }\n                else {\n                    uVar2 = SUB164((SEXT816(0x40) & 0xffffffffffffffff | ZEXT816(0x40)) / SEXT816(iVar8), 0);\n                }\n                *(*0x20 + -0x838) = uVar2;\n                if (uVar2 < 8) {\n                    *(*0x20 + -0x838) = 8;\n                }\n                *(*0x20 + -0x820) = in_RAX;\n                *(*0x20 + -0x810) = iVar4;\n                if (in_RAX != 0) {\n                    *(iVar4 + 0xe5) = 1;\n                }\n                puVar6 = *0x20 + -0x808;\n                *(*0x20 + -0x880) = _sym.imp.kernel32.dll_GetQueuedCompletionStatusEx;\n                *(*0x20 + -0x878) = *0x4f0270;\n                *(*0x20 + -0x870) = puVar6;\n                *(*0x20 + -0x868) = *(*0x20 + -0x838);\n                *(*0x20 + -0x860) = *0x20 + -0x838;\n                *(*0x20 + -0x858) = uVar5;\n                *(*0x20 + -0x850) = 0;\n                *(*0x20 + -0x888) = 0x42a607;\n                fcn.0042d7e0();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                if (*(*0x20 + -0x848) == 0) {\n                    *(*(*0x20 + -0x810) + 0xe5) = 0;\n                    *(*0x20 + -0x888) = 0x42a64c;\n                    fcn.0045ab80();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    if (*(*0x20 + -0x880) != 0x102) {\n                        *(*0x20 + -0x82c) = *(*0x20 + -0x880);\n                        *(*0x20 + -0x888) = 0x42a697;\n                        fcn.004324c0();\n                        *(*0x20 + -0x888) = 0x42a6a8;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x888) = 0x42a6b4;\n                        fcn.00432bc0();\n                        *(*0x20 + -0x888) = 0x42a6c5;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x888) = 0x42a6ca;\n                        fcn.00432540();\n                        uVar5 = 0x17;\n                        *(*0x20 + -0x888) = 0x42a6db;\n                        fcn.00430d40();\n                        goto code_r0x0042a6db;\n                    }\n                    return 0;\n                }\n                *(*(*0x20 + -0x810) + 0xe5) = 0;\n                puVar6 = *(*0x20 + -0x820);\n                uVar3 = 0;\n                while( true ) {\n                    uVar5 = uVar3;\n                    if (*(*0x20 + -0x838) < uVar5 || *(*0x20 + -0x838) == uVar5) {\n                        return *(*0x20 + -0x828);\n                    }\n                    if (0x3f < uVar3) break;\n                    *(*0x20 + -0x834) = uVar5;\n                    iVar4 = *(*0x20 + uVar3 * 0x20 + -0x800);\n                    if (iVar4 == 0) {\n                        *0x557cc0 = 0;\n                        if (puVar6 == NULL) {\n                            *(*0x20 + -0x888) = 0x42a725;\n                            fcn.0042a3a0();\n                            puVar6 = *(*0x20 + -0x820);\n                            uVar5 = *(*0x20 + -0x834);\n                        }\n                    }\n                    else {\n                        *(*0x20 + -0x818) = iVar4;\n                        *(*0x20 + -0x83c) = 0;\n                        uVar1 = *(*(iVar4 + 0x20) + 0x10);\n                        *(*0x20 + -0x880) = *0x5035c8;\n                        *(*0x20 + -0x878) = uVar1;\n                        *(*0x20 + -0x870) = iVar4;\n                        *(*0x20 + -0x868) = *0x20 + -0x83c;\n                        *(*0x20 + -0x860) = 0;\n                        *(*0x20 + -0x858) = *0x20 + -0x830;\n                        *(*0x20 + -0x888) = 0x42a785;\n                        fcn.0042d760();\n                        unaff_R14 = **(in_GS_OFFSET + 0x28);\n                        if (*(*0x20 + -0x850) == 0) {\n                            *(*0x20 + -0x888) = 0x42a7ab;\n                            fcn.0045ab80();\n                            unaff_R14 = **(in_GS_OFFSET + 0x28);\n                            uVar5 = *(*0x20 + -0x880);\n                        }\n                        else {\n                            uVar5 = 0;\n                        }\n                        *(*0x20 + -0x888) = 0x42a7d7;\n                        fcn.0042a840(uVar5);\n                        puVar6 = *(*0x20 + -0x820);\n                        uVar5 = *(*0x20 + -0x834);\n                    }\ncode_r0x0042a6db:\n                    uVar3 = uVar5 + 1;\n                }\n                *(*0x20 + -0x888) = 0x42a80b;\n                fcn.00459720(0x40);\n            }\n            *(*0x20 + -0x888) = 0x42a810;\n            in_RAX = fcn.0042e820();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x42a81b;\n        fcn.00457040();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 2024
    },
    "0042a9c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0042a9c0(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    ulong uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            arg1 = unaff_RBX;\n            if (*0x557e48 == 0) {\n                arg1 = 0x5585e0;\n                *(*0x20 + -0x48) = _sym.imp.kernel32.dll_GetSystemDirectoryA;\n                *(*0x20 + -0x40) = 0x5585e0;\n                *(*0x20 + -0x38) = 0x104;\n                *(*0x20 + -0x50) = 0x42aa11;\n                fcn.0042d5e0();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                uVar1 = *(*0x20 + -0x30);\n                if ((uVar1 != 0) && (uVar1 < 0x105)) {\n                    *(uVar1 + 0x5585e0) = 0x5c;\n                    *0x557e48 = uVar1 + 1;\n                    in_RAX = *(*0x20 + 8);\n                    arg1 = *(*0x20 + 0x10);\n                    goto code_r0x0042aa5f;\n                }\n            }\n            else {\ncode_r0x0042aa5f:\n                if (*0x557c74 == '\\0') {\n                    uVar1 = *0x557e48;\n                    if (*0x557e48 < 0x106) {\n                        *(*0x20 + -0x20) = *0x557e48 + arg1;\n                        if (*0x557e48 + arg1 < 0x106) {\n                            uVar2 = 0x5585e0;\n                        }\n                        else {\n                            *(*0x20 + -0x18) = *0x557e48;\n                            *(*0x20 + -0x50) = 0x42ab0f;\n                            uVar2 = fcn.004425c0(*0x557e48);\n                            arg1 = *(*0x20 + 0x10);\n                            in_RAX = *(*0x20 + 8);\n                        }\n                        *(*0x20 + -0x10) = uVar2;\n                        *(*0x20 + -0x50) = 0x42ab38;\n                        fcn.0045a040(arg1);\n                        uVar1 = *(*0x20 + -0x20);\n                        if (uVar1 != 0) {\n                            *(*0x20 + -0x48) = _sym.imp.kernel32.dll_LoadLibraryA;\n                            *(*0x20 + -0x40) = *(*0x20 + -0x10);\n                            *(*0x20 + -0x50) = 0x42ab5f;\n                            fcn.0042d560();\n                            return *(*0x20 + -0x38);\n                        }\n                        *(*0x20 + -0x50) = 0x42ab89;\n                        fcn.00459720(0);\n                        arg1 = in_RAX;\n                    }\n                    *(*0x20 + -0x50) = 0x42ab93;\n                    fcn.00459780(uVar1, 0x105);\n                }\n                else if (arg1 != 0) {\n                    *(*0x20 + -0x48) = *0x503588;\n                    *(*0x20 + -0x40) = in_RAX;\n                    *(*0x20 + -0x38) = 0;\n                    *(*0x20 + -0x30) = 0x800;\n                    *(*0x20 + -0x50) = 0x42aa98;\n                    fcn.0042d660();\n                    return *(*0x20 + -0x28);\n                }\n                *(*0x20 + -0x50) = 0x42ab9d;\n                fcn.00459720(arg1);\n            }\n            unaff_RBX = 0x24;\n            *(*0x20 + -0x50) = 0x42abae;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x42abc5;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1225
    },
    "0042abe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042abe0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong uVar4;\n    ulong uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xd8 && *0x20 + -0xd8 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x158;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0xf4) = 0x32336c656e72656b;\n            *(*0x20 + -0xef) = 0x6c6c642e32336c;\n            *(*0x20 + -0x158) = _sym.imp.kernel32.dll_LoadLibraryA;\n            *(*0x20 + -0x150) = *0x20 + -0xf4;\n            *(*0x20 + -0x160) = 0x42ac45;\n            fcn.0042d560();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            if (*(*0x20 + -0x148) != 0) {\n                *(*0x20 + -0x128) = *(*0x20 + -0x148);\n                *(*0x20 + -0xab) = 0x69446c6c44646441;\n                uVar4 = 0x79726f74636572;\n                *(*0x20 + -0xa3) = 0x79726f74636572;\n                uVar3 = 0x10;\n                *(*0x20 + -0x160) = 0x42aca7;\n                iVar1 = fcn.0042a900(0x10);\n                if (*0x557ed0 != 0) {\n                    *(*0x20 + -0x160) = 0x42acc5;\n                    fcn.00459280(uVar3, uVar4, param_3, param_4);\n                    iVar1 = *0x503570;\n                }\n                *0x503570 = iVar1;\n                *(*0x20 + -0x23) = 0x6f74636556646441;\n                *(*0x20 + -0x1b) = 0x69746e6f43646572;\n                *(*0x20 + -0x18) = 0x65756e69746e6f43;\n                uVar5 = 0x72656c646e6148;\n                *(*0x20 + -0x10) = 0x72656c646e6148;\n                uVar4 = 0x1b;\n                *(*0x20 + -0x160) = 0x42ad27;\n                uVar3 = fcn.0042a900(0x1b);\n                if (*0x557ed0 != 0) {\n                    *(*0x20 + -0x160) = 0x42ad45;\n                    fcn.00459280(uVar4, uVar5, param_3, param_4);\n                    uVar3 = *0x503578;\n                }\n                *0x503578 = uVar3;\n                uVar4 = 0x7262694c64616f4c;\n                *(*0x20 + -0xca) = 0x7262694c64616f4c;\n                *(*0x20 + -0xc3) = 0x41784579726172;\n                uVar3 = 0xf;\n                *(*0x20 + -0x160) = 0x42ad85;\n                iVar1 = fcn.0042a900(0xf);\n                if (*0x557ed0 != 0) {\n                    *(*0x20 + -0x160) = 0x42ada5;\n                    fcn.00459280(uVar3, uVar4, param_3, param_4);\n                    iVar1 = *0x503588;\n                }\n                *0x503588 = iVar1;\n                *(*0x20 + -0xd9) = 0x7262694c64616f4c;\n                uVar4 = 0x57784579726172;\n                *(*0x20 + -0xd2) = 0x57784579726172;\n                uVar3 = 0xf;\n                *(*0x20 + -0x160) = 0x42addd;\n                iVar2 = fcn.0042a900(0xf);\n                iVar1 = iVar2;\n                if (*0x557ed0 != 0) {\n                    *(*0x20 + -0x160) = 0x42adfb;\n                    iVar2 = fcn.00459280(uVar3, uVar4, param_3, param_4);\n                    iVar1 = *0x503590;\n                }\n                *0x503590 = iVar1;\n                if ((iVar2 == 0) || (*0x503588 == 0)) {\n                    *0x557c74 = false;\n                }\n                else {\n                    *0x557c74 = *0x503570 != 0;\n                }\n                *(*0x20 + -0x101) = 0x3233697061766461;\n                *(*0x20 + -0xfc) = 0x6c6c642e323369;\n                *(*0x20 + -0x160) = 0x42ae54;\n                iVar1 = fcn.0042a9c0(0xd);\n                if (iVar1 != 0) {\n                    *(*0x20 + -0x79) = 0x75466d6574737953;\n                    *(*0x20 + -0x77) = 0x636e75466d657473;\n                    uVar5 = 0x3633306e6f6974;\n                    *(*0x20 + -0x6f) = 0x3633306e6f6974;\n                    uVar4 = 0x12;\n                    *(*0x20 + -0x160) = 0x42aea8;\n                    uVar3 = fcn.0042a900(0x12);\n                    if (*0x557ed0 != 0) {\n                        *(*0x20 + -0x160) = 0x42aec6;\n                        fcn.00459280(uVar4, uVar5, param_3, param_4);\n                        uVar3 = *0x5035b0;\n                    }\n                    *0x5035b0 = uVar3;\n                    *(*0x20 + -0x116) = 0x6c642e6c6c64746e;\n                    *(*0x20 + -0x10e) = 0x6c;\n                    *(*0x20 + -0x160) = 0x42aeee;\n                    iVar1 = fcn.0042a9c0(10);\n                    if (iVar1 != 0) {\n                        *(*0x20 + -0x138) = iVar1;\n                        *(*0x20 + -0x67) = 0x6f4674696157744e;\n                        *(*0x20 + -0x61) = 0x6c676e6953726f46;\n                        uVar5 = 0x7463656a624f65;\n                        *(*0x20 + -0x59) = 0x7463656a624f65;\n                        uVar4 = 0x16;\n                        *(*0x20 + -0x160) = 0x42af47;\n                        uVar3 = fcn.0042a900(0x16);\n                        if (*0x557ed0 != 0) {\n                            *(*0x20 + -0x160) = 0x42af65;\n                            fcn.00459280(uVar4, uVar5, param_3, param_4);\n                            uVar3 = *0x503598;\n                        }\n                        *0x503598 = uVar3;\n                        *(*0x20 + -0x8a) = 0x75437465476c7452;\n                        *(*0x20 + -0x89) = 0x7275437465476c74;\n                        uVar5 = 0x626550746e6572;\n                        *(*0x20 + -0x81) = 0x626550746e6572;\n                        uVar4 = 0x11;\n                        *(*0x20 + -0x160) = 0x42afb5;\n                        uVar3 = fcn.0042a900(0x11);\n                        if (*0x557ed0 != 0) {\n                            *(*0x20 + -0x160) = 0x42afd3;\n                            fcn.00459280(uVar4, uVar5, param_3, param_4);\n                            uVar3 = *0x5035b8;\n                        }\n                        *0x5035b8 = uVar3;\n                        *(*0x20 + -0x3a) = 0x744e7465476c7452;\n                        *(*0x20 + -0x33) = 0x6e6f697372655674;\n                        uVar5 = 0x737265626d754e;\n                        *(*0x20 + -0x2b) = 0x737265626d754e;\n                        uVar4 = 0x17;\n                        *(*0x20 + -0x160) = 0x42b025;\n                        uVar3 = fcn.0042a900(0x17);\n                        if (*0x557ed0 != 0) {\n                            *(*0x20 + -0x160) = 0x42b045;\n                            fcn.00459280(uVar4, uVar5, param_3, param_4);\n                            uVar3 = *0x5035c0;\n                        }\n                        *0x5035c0 = uVar3;\n                        *(*0x20 + -0x120) = 0x6c642e6d6d6e6977;\n                        *(*0x20 + -0x118) = 0x6c;\n                        *(*0x20 + -0x160) = 0x42b06d;\n                        iVar1 = fcn.0042a9c0(10);\n                        if (iVar1 != 0) {\n                            *(*0x20 + -0x130) = iVar1;\n                            *(*0x20 + -0xbb) = 0x69676542656d6974;\n                            uVar4 = 0x646f697265506e;\n                            *(*0x20 + -0xb3) = 0x646f697265506e;\n                            uVar3 = 0x10;\n                            *(*0x20 + -0x160) = 0x42b0b4;\n                            iVar1 = fcn.0042a900(0x10);\n                            if (*0x557ed0 != 0) {\n                                *(*0x20 + -0x160) = 0x42b0d2;\n                                fcn.00459280(uVar3, uVar4, param_3, param_4);\n                                iVar1 = *0x5035d0;\n                            }\n                            *0x5035d0 = iVar1;\n                            *(*0x20 + -0xe7) = 0x50646e45656d6974;\n                            uVar4 = 0x646f6972655064;\n                            *(*0x20 + -0xe1) = 0x646f6972655064;\n                            uVar3 = 0xe;\n                            *(*0x20 + -0x160) = 0x42b107;\n                            iVar2 = fcn.0042a900(0xe);\n                            iVar1 = iVar2;\n                            if (*0x557ed0 != 0) {\n                                *(*0x20 + -0x160) = 0x42b125;\n                                iVar2 = fcn.00459280(uVar3, uVar4, param_3, param_4);\n                                iVar1 = *0x5035d8;\n                            }\n                            *0x5035d8 = iVar1;\n                            if ((*0x5035d0 != 0) && (iVar2 != 0)) {\n                                *(*0x20 + -0x10c) = 0x642e32335f327377;\n                                *(*0x20 + -0x109) = 0x6c6c642e32335f;\n                                *(*0x20 + -0x160) = 0x42b16c;\n                                iVar1 = fcn.0042a9c0(0xb);\n                                if (iVar1 != 0) {\n                                    *(*0x20 + -0x51) = 0x764f746547415357;\n                                    *(*0x20 + -0x4a) = 0x657070616c726576;\n                                    uVar4 = 0x746c7573655264;\n                                    *(*0x20 + -0x42) = 0x746c7573655264;\n                                    uVar3 = 0x17;\n                                    *(*0x20 + -0x160) = 0x42b1c5;\n                                    iVar2 = fcn.0042a900(0x17);\n                                    iVar1 = iVar2;\n                                    if (*0x557ed0 != 0) {\n                                        *(*0x20 + -0x160) = 0x42b1e5;\n                                        iVar2 = fcn.00459280(uVar3, uVar4, param_3, param_4);\n                                        iVar1 = *0x5035c8;\n                                    }\n                                    *0x5035c8 = iVar1;\n                                    if (iVar2 != 0) {\n                                        *(*0x20 + -0x9b) = 0x7465675f656e6977;\n                                        *(*0x20 + -0x9a) = 0x5f7465675f656e69;\n                                        *(*0x20 + -0x92) = 0x6e6f6973726576;\n                                        *(*0x20 + -0x160) = 0x42b23a;\n                                        iVar1 = fcn.0042a900(0x11);\n                                        if (iVar1 != 0) {\n                                            *(*0x20 + -0x160) = 0x42b249;\n                                            fcn.0042bc80();\n                                        }\n                                        return;\n                                    }\n                                    *(*0x20 + -0x160) = 0x42b26a;\n                                    fcn.00430d40();\n                                }\n                                *(*0x20 + -0x160) = 0x42b27b;\n                                fcn.00430d40();\n                            }\n                            *(*0x20 + -0x160) = 0x42b28c;\n                            fcn.00430d40();\n                        }\n                        *(*0x20 + -0x160) = 0x42b29d;\n                        fcn.00430d40();\n                    }\n                    *(*0x20 + -0x160) = 0x42b2ae;\n                    fcn.00430d40();\n                }\n                *(*0x20 + -0x160) = 0x42b2bf;\n                fcn.00430d40();\n            }\n            *(*0x20 + -0x160) = 0x42b2d0;\n            fcn.00430d40();\n        }\n        *(puVar6 + -8) = 0x42b2d6;\n        fcn.00457040();\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 3541
    },
    "0042b480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042b565)\n// WARNING: Removing unreachable block (ram,0x0042b57e)\n\nulong fcn.0042b480(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    int64_t iStack80;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.0042d660();\n    if (iStack80 != 0) {\n        for (iVar1 = 0; iVar1 < 0x40; iVar1 = iVar1 + 1) {\n        }\n    }\n    fcn.0042d560();\n    return 0;\n}\n",
        "token_count": 182
    },
    "0042b5a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0042b5a0(void)\n\n{\n    char in_AL;\n    int64_t unaff_R14;\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (*0x557c69 == '\\0') {\n        if (in_AL != '\\0') {\n            fcn.0042d560();\n            return uStack16;\n        }\n        fcn.0042d560();\n        return uStack16;\n    }\n    return 0;\n}\n",
        "token_count": 144
    },
    "0042bc80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042bc80(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    uint32_t uVar7;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x60) = in_RAX;\n            *(*0x20 + -0x3a) = 0x6574737953746547;\n            *(*0x20 + -0x32) = 0x467341656d69546d;\n            uVar4 = 0x656d6954656c69;\n            *(*0x20 + -0x2a) = 0x656d6954656c69;\n            uVar3 = 0x18;\n            *(*0x20 + -0x98) = 0x42bcea;\n            iVar1 = fcn.0042a900(0x18);\n            iVar2 = iVar1;\n            if (*0x557ed0 != 0) {\n                *(*0x20 + -0x98) = 0x42bd08;\n                iVar1 = fcn.00459280(uVar3, uVar4, param_3, param_4);\n                iVar2 = *0x503580;\n            }\n            *0x503580 = iVar2;\n            if (iVar1 != 0) {\n                uVar4 = 0x7265507972657551;\n                *(*0x20 + -0x52) = 0x7265507972657551;\n                *(*0x20 + -0x4a) = 0x65636e616d726f66;\n                param_3 = 0x7265746e756f43;\n                *(*0x20 + -0x42) = 0x7265746e756f43;\n                uVar3 = 0x18;\n                *(*0x20 + -0x98) = 0x42bd55;\n                iVar2 = fcn.0042a900(0x18);\n                if (*0x557ed0 != 0) {\n                    *(*0x20 + -0x98) = 0x42bd73;\n                    fcn.00459280(uVar3, uVar4, param_3, param_4);\n                    iVar2 = *0x5035a0;\n                }\n                *0x5035a0 = iVar2;\n                *(*0x20 + -0x22) = 0x7265507972657551;\n                *(*0x20 + -0x1a) = 0x65636e616d726f66;\n                *(*0x20 + -0x18) = 0x724665636e616d72;\n                uVar4 = 0x79636e65757165;\n                *(*0x20 + -0x10) = 0x79636e65757165;\n                uVar3 = 0x1a;\n                *(*0x20 + -0x98) = 0x42bdc9;\n                iVar1 = fcn.0042a900(0x1a);\n                iVar2 = iVar1;\n                if (*0x557ed0 != 0) {\n                    *(*0x20 + -0x98) = 0x42bde7;\n                    iVar1 = fcn.00459280(uVar3, uVar4, param_3, param_4);\n                    iVar2 = *0x5035a8;\n                }\n                *0x5035a8 = iVar2;\n                if ((*0x5035a0 != 0) && (iVar1 != 0)) {\n                    *(*0x20 + -0x70) = 0;\n                    *(*0x20 + -0x90) = *0x5035a8;\n                    *(*0x20 + -0x88) = *0x20 + -0x70;\n                    *(*0x20 + -0x98) = 0x42be25;\n                    fcn.0042d560();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    iVar2 = *(*0x20 + -0x70);\n                    if (iVar2 != 0) {\n                        if (iVar2 < 0x80000000) {\n                            *(*0x20 + -0x68) = iVar2;\n                            *(*0x20 + -0x90) = *0x5035a0;\n                            *(*0x20 + -0x88) = 0x557e20;\n                            *(*0x20 + -0x98) = 0x42be76;\n                            fcn.0042d560();\n                            uVar7 = 0;\n                            iVar1 = 1000000000;\n                            for (iVar2 = 0x1e; -1 < iVar2; iVar2 = iVar2 + -1) {\n                                iVar6 = *(*0x20 + -0x68) << (iVar2 & 0x3f);\n                                if (iVar6 <= iVar1) {\n                                    iVar1 = iVar1 - iVar6;\n                                    uVar7 = uVar7 | 1 << (iVar2 & 0x1f);\n                                }\n                            }\n                            if (*(*0x20 + -0x68) <= iVar1) {\n                                uVar7 = 0x7fffffff;\n                            }\n                            *0x557c75 = 1;\n                            *0x557e18 = uVar7;\n                            return;\n                        }\n                        *(*0x20 + -0x98) = 0x42bf05;\n                        fcn.00430d40();\n                    }\n                    *(*0x20 + -0x98) = 0x42bf16;\n                    fcn.00430d40();\n                }\n                *(*0x20 + -0x98) = 0x42bf27;\n                fcn.00430d40();\n            }\n            *(*0x20 + -0x98) = 0x42bf38;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x42bf45;\n        fcn.00457040();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1547
    },
    "0042c000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042c000(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int16_t *piVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \ncode_r0x0042c000:\n    puVar8 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar8 = *0x20 + -0x60;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + -0x68) = 0x42c025;\n        iVar1 = fcn.0042d500();\n        uVar6 = 0;\n        iVar7 = 0;\n        for (uVar4 = 0; uVar4 < 0x1000000; uVar4 = uVar4 + 1) {\n            if (*(iVar1 + uVar4 * 2) == 0) {\n                if (uVar6 == uVar4) {\n                    *(*0x20 + -0x28) = iVar1;\n                    *(*0x20 + -0x38) = iVar7;\n                    *(*0x20 + -0x68) = 0x42c06f;\n                    iVar1 = fcn.004424e0(iVar7);\n                    uVar6 = *(*0x20 + -0x38);\n                    *0x503f68 = uVar6;\n                    *0x503f70 = uVar6;\n                    if (*0x557ed0 != 0) {\n                        *(*0x20 + -0x68) = 0x42c0a5;\n                        fcn.00459280(iVar7, uVar6, param_3, param_4);\n                        iVar1 = *0x503f60;\n                    }\n                    *0x503f60 = iVar1;\n                    iVar7 = *(*0x20 + -0x28);\n                    iVar1 = 0;\n                    uVar4 = 0x1000000;\n                    iVar5 = iVar7;\n                    goto code_r0x0042c0e0;\n                }\n                uVar6 = uVar4 + 1;\n                iVar7 = iVar7 + 1;\n            }\n        }\n        goto code_r0x0042c23a;\n    }\n    goto code_r0x0042c248;\ncode_r0x0042c0e0:\n    if (uVar6 <= iVar1) {\n        *(*0x20 + -0x60) = _sym.imp.kernel32.dll_FreeEnvironmentStringsW;\n        *(*0x20 + -0x58) = iVar5;\n        *(*0x20 + -0x68) = 0x42c171;\n        fcn.0042d560();\n        *(*0x20 + -0x18) = 0x476c00;\n        *(*0x20 + -0x10) = 0x48a420;\n        *(*0x20 + -0x68) = 0x42c1ac;\n        uVar2 = fcn.00454f40(1);\n        *(*0x20 + -0x60) = _sym.imp.kernel32.dll_SetConsoleCtrlHandler;\n        *(*0x20 + -0x58) = uVar2;\n        *(*0x20 + -0x50) = 1;\n        *(*0x20 + -0x68) = 0x42c1ca;\n        fcn.0042d5e0();\n        *(*0x20 + -0x68) = 0x42c1e5;\n        fcn.0042b2e0();\n        return;\n    }\n    if (uVar4 == 0) goto code_r0x0042c230;\n    *(*0x20 + -0x30) = iVar1;\n    *(*0x20 + -0x40) = uVar4;\n    *(*0x20 + -0x20) = iVar7;\n    *(*0x20 + -0x68) = 0x42c105;\n    uVar2 = fcn.00446d40();\n    iVar7 = *0x503f60;\n    uVar4 = *(*0x20 + -0x30);\n    uVar6 = *0x503f68;\n    if (*0x503f68 <= uVar4) goto code_r0x0042c225;\n    *(*0x503f60 + 8 + uVar4 * 0x10) = iVar1;\n    if (*0x557ed0 == 0) {\n        *(iVar7 + uVar4 * 0x10) = uVar2;\n        uVar6 = uVar4;\n    }\n    else {\n        *(*0x20 + -0x68) = 0x42c14d;\n        fcn.00459280(iVar7, uVar4, param_3, param_4);\n        uVar6 = uVar4;\n    }\n    piVar3 = *(*0x20 + -0x20);\n    uVar4 = *(*0x20 + -0x40);\n    while( true ) {\n        if (uVar4 == 0) {\n            *(*0x20 + -0x68) = 0x42c225;\n            fcn.00459720(0);\n            goto code_r0x0042c225;\n        }\n        if (*piVar3 == 0) break;\n        uVar4 = uVar4 - 1;\n        piVar3 = piVar3 + (-uVar4 >> 0x3f & 2U);\n    }\n    iVar1 = uVar6 + 1;\n    uVar4 = uVar4 - 1;\n    iVar7 = piVar3 + (-uVar4 >> 0x3f & 2U);\n    uVar6 = *(*0x20 + -0x38);\n    iVar5 = *(*0x20 + -0x28);\n    goto code_r0x0042c0e0;\ncode_r0x0042c225:\n    *(*0x20 + -0x68) = 0x42c230;\n    fcn.00459720(uVar6);\ncode_r0x0042c230:\n    *(*0x20 + -0x68) = 0x42c23a;\n    fcn.00459720(uVar4);\ncode_r0x0042c23a:\n    *(*0x20 + -0x68) = 0x42c247;\n    fcn.00459720(0x1000000);\ncode_r0x0042c248:\n    *(puVar8 + -8) = 0x42c24d;\n    fcn.00457040();\n    *0x20 = puVar8;\n    goto code_r0x0042c000;\n}\n",
        "token_count": 1579
    },
    "0042c2e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0042c2e0(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uint64_t arg1_00;\n    int64_t iStack56;\n    \n    if (in_RAX == 1) {\n        fcn.0042d560();\n    }\n    else if (in_RAX == 2) {\n        fcn.0042d560();\n    }\n    arg1_00 = arg1;\n    if (0x40000000 < arg1_00) {\n        fcn.00459760(arg1_00, 0x40000000);\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    iVar3 = 0;\n    do {\n        if (arg1_00 <= iVar3) {\ncode_r0x0042c41b:\n            fcn.0042d760();\n            return 0;\n        }\n        if (0x7f < *(unaff_RBX + iVar3)) {\n            fcn.0042d5e0();\n            if (iStack56 != 0) {\n                uVar2 = fcn.0042c4a0(arg1);\n                return uVar2;\n            }\n            goto code_r0x0042c41b;\n        }\n        iVar3 = iVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 332
    },
    "0042c800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0042c800(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iStack96;\n    uint64_t uStack72;\n    uint64_t uStack56;\n    \n    if (in_RAX < 0) {\n        fcn.0042d5e0();\n        uStack56 = uStack72;\n    }\n    else {\n        fcn.0045afe0();\n        iVar2 = 0;\n        while( true ) {\n            iVar1 = _sym.imp.kernel32.dll_WaitForMultipleObjects;\n            iVar2 = in_RAX - iVar2;\n            for (iVar3 = 0x1e; -1 < iVar3; iVar3 = iVar3 + -1) {\n                iVar4 = 1000000 << (iVar3 & 0x3f);\n                if (iVar4 <= iVar2) {\n                    iVar2 = iVar2 - iVar4;\n                }\n            }\n            fcn.0042d6e0();\n            if (uStack56 != 1) break;\n            fcn.0045afe0();\n            iVar2 = iVar1 - iStack96;\n            if (in_RAX <= iVar2) {\n                return 0xffffffff;\n            }\n        }\n    }\n    if (uStack56 < 0x81) {\n        if (uStack56 == 0) {\n            return 0;\n        }\n        if (uStack56 == 0x80) {\n            fcn.00456f00();\n            return 0xffffffff;\n        }\n    }\n    else {\n        if (uStack56 == 0x102) {\n            return 0xffffffff;\n        }\n        if (uStack56 == 0xffffffff) {\n            fcn.00456f00();\n            return 0xffffffff;\n        }\n    }\n    fcn.00456f00();\n    return 0xffffffff;\n}\n",
        "token_count": 429
    },
    "0042cb20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042cb20(void)\n\n{\n    int64_t iStack16;\n    \n    fcn.0042d560();\n    if (iStack16 == 0) {\n        fcn.00456f00();\n    }\n    return;\n}\n",
        "token_count": 56
    },
    "0042cba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042cba0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iStack16;\n    \n    if (*(in_RAX + 0x338) == 0) {\n        fcn.0042d6e0();\n        *(in_RAX + 0x338) = iStack16;\n        if (iStack16 == 0) {\n            fcn.00456f00();\n        }\n        fcn.0042d6e0();\n        *(in_RAX + 0x340) = iStack16;\n        if (iStack16 == 0) {\n            fcn.00456f00();\n            fcn.0042d560();\n            *(in_RAX + 0x338) = 0;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 177
    },
    "0042cec0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042cec0(void)\n\n{\n    uint64_t uVar1;\n    uchar (*pauVar2) [16];\n    int64_t iVar3;\n    uint64_t *puVar4;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint in_XMM15_Da;\n    uint uVar7;\n    uint in_XMM15_Db;\n    uint uVar8;\n    uint in_XMM15_Dc;\n    uint uVar9;\n    uint in_XMM15_Dd;\n    uint uVar10;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x68) = 0;\n            *(*0x20 + -0xb0) = _sym.imp.kernel32.dll_DuplicateHandle;\n            *(*0x20 + -0xa8) = 0xffffffffffffffff;\n            *(*0x20 + -0xa0) = 0xfffffffffffffffe;\n            *(*0x20 + -0x98) = 0xffffffffffffffff;\n            *(*0x20 + -0x90) = *0x20 + -0x68;\n            *(*0x20 + -0x88) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x78) = 2;\n            *(*0x20 + -0xb8) = 0x42cf33;\n            fcn.0042d860();\n            uVar7 = 0;\n            uVar8 = 0;\n            uVar9 = 0;\n            uVar10 = 0;\n            if (*(*0x20 + -0x70) != 0) {\n                iVar3 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n                *(*0x20 + -0x18) = iVar3;\n                *(*0x20 + -0x10) = iVar3 + 0x328;\n                *(*0x20 + -0xb8) = 0x42cf76;\n                fcn.00409300();\n                iVar3 = *(*0x20 + -0x18);\n                *(iVar3 + 0x330) = *(*0x20 + -0x68);\n                if ((*(iVar3 + 0x348) == 0) && (*0x557c69 != '\\0')) {\n                    *(*0x20 + -0xb0) = _sym.imp.kernel32.dll_CreateWaitableTimerExW;\n                    *(*0x20 + -0xa8) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                    *(*0x20 + -0x98) = 2;\n                    *(*0x20 + -0x90) = 0x100003;\n                    *(*0x20 + -0xb8) = 0x42cfc5;\n                    fcn.0042d6e0();\n                    uVar7 = 0;\n                    uVar8 = 0;\n                    uVar9 = 0;\n                    uVar10 = 0;\n                    iVar3 = *(*0x20 + -0x88);\n                    *(*(*0x20 + -0x18) + 0x348) = iVar3;\n                    if (iVar3 != 0) goto code_r0x0042cff8;\n                }\n                else {\ncode_r0x0042cff8:\n                    *(*0x20 + -0xb8) = 0x42d005;\n                    fcn.00409520();\n                    pauVar2 = *0x20 + -0x48;\n                    *pauVar2 = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                    *(*0x20 + -0x38) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                    *(*0x20 + -0x28) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                    *(*0x20 + -0xb0) = _sym.imp.kernel32.dll_VirtualQuery;\n                    *(*0x20 + -0xa8) = pauVar2;\n                    *(*0x20 + -0xa0) = pauVar2;\n                    *(*0x20 + -0x98) = 0x30;\n                    *(*0x20 + -0xb8) = 0x42d046;\n                    fcn.0042d660();\n                    puVar4 = **(in_GS_OFFSET + 0x28);\n                    if (*(*0x20 + -0x90) != 0) {\n                        iVar3 = *(*0x20 + -0x40);\n                        uVar1 = iVar3 + 0x4000;\n                        *(*0x20 + -0x60) = uVar1;\n                        uVar5 = puVar4[1];\n                        *(*0x20 + -0x50) = uVar5;\n                        if ((uVar1 <= uVar5) && ((uVar5 - iVar3) - 0x4000 < 0x4000001)) {\n                            *puVar4 = uVar1;\n                            puVar4[2] = iVar3 + 0x53a0U;\n                            puVar4[3] = iVar3 + 0x53a0U;\n                            *(*0x20 + -0xb8) = 0x42d0ae;\n                            fcn.00459100();\n                            return;\n                        }\n                        *(*0x20 + -0xb8) = 0x42d0d7;\n                        fcn.004324c0();\n                        *(*0x20 + -0xb8) = 0x42d0e8;\n                        fcn.00432dc0();\n                        *(*0x20 + -0xb8) = 0x42d0f2;\n                        fcn.00432c20();\n                        *(*0x20 + -0xb8) = 0x42d105;\n                        fcn.00432dc0();\n                        *(*0x20 + -0xb8) = 0x42d10f;\n                        fcn.00432c20();\n                        *(*0x20 + -0xb8) = 0x42d125;\n                        fcn.00432dc0();\n                        *(*0x20 + -0xb8) = 0x42d12a;\n                        fcn.00432540();\n                        *(*0x20 + -0xb8) = 0x42d13b;\n                        fcn.00430d40();\n                    }\n                    *(*0x20 + -0xb8) = 0x42d145;\n                    fcn.0045ab80();\n                    *(*0x20 + -0x58) = *(*0x20 + -0xb0);\n                    *(*0x20 + -0xb8) = 0x42d166;\n                    fcn.004324c0();\n                    *(*0x20 + -0xb8) = 0x42d177;\n                    fcn.00432dc0();\n                    *(*0x20 + -0xb8) = 0x42d185;\n                    fcn.00432ac0();\n                    *(*0x20 + -0xb8) = 0x42d18a;\n                    fcn.00432720();\n                    *(*0x20 + -0xb8) = 0x42d18f;\n                    fcn.00432540();\n                    *(*0x20 + -0xb8) = 0x42d1a5;\n                    fcn.00430d40();\n                }\n                *(*0x20 + -0xb8) = 0x42d1aa;\n                fcn.0045ab80();\n                *(*0x20 + -0x58) = *(*0x20 + -0xb0);\n                *(*0x20 + -0xb8) = 0x42d1cb;\n                fcn.004324c0();\n                *(*0x20 + -0xb8) = 0x42d1dc;\n                fcn.00432dc0();\n                *(*0x20 + -0xb8) = 0x42d1e6;\n                fcn.00432ac0();\n                *(*0x20 + -0xb8) = 0x42d1eb;\n                fcn.00432720();\n                *(*0x20 + -0xb8) = 0x42d1f0;\n                fcn.00432540();\n                *(*0x20 + -0xb8) = 0x42d205;\n                fcn.00430d40();\n            }\n            *(*0x20 + -0xb8) = 0x42d20a;\n            fcn.0045ab80();\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            *(*0x20 + -0x58) = *(*0x20 + -0xb0);\n            *(*0x20 + -0xb8) = 0x42d22b;\n            fcn.004324c0();\n            *(*0x20 + -0xb8) = 0x42d23c;\n            fcn.00432dc0();\n            *(*0x20 + -0xb8) = 0x42d246;\n            fcn.00432ac0();\n            *(*0x20 + -0xb8) = 0x42d24b;\n            fcn.00432720();\n            *(*0x20 + -0xb8) = 0x42d250;\n            fcn.00432540();\n            *(*0x20 + -0xb8) = 0x42d265;\n            fcn.00430d40();\n        }\n        *(puVar6 + -8) = 0x42d26b;\n        fcn.00457040();\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 2339
    },
    "0042d420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0042d420(void)\n\n{\n    int64_t iVar1;\n    bool bVar2;\n    ulong in_RAX;\n    int64_t unaff_R14;\n    ulong in_stack_00000000;\n    uchar auStackX8 [32];\n    \n    iVar1 = *(unaff_R14 + 0x30);\n    *(iVar1 + 0x298) = in_RAX;\n    if ((*(iVar1 + 0xe0) == 0) || (*(iVar1 + 0x2d0) != 0)) {\n        bVar2 = false;\n    }\n    else {\n        *(iVar1 + 0x2d8) = unaff_R14;\n        *(iVar1 + 0x2c8) = in_stack_00000000;\n        *(iVar1 + 0x2d0) = auStackX8;\n        bVar2 = true;\n    }\n    fcn.00458e80();\n    if (bVar2) {\n        *(iVar1 + 0x2d0) = 0;\n    }\n    return *(iVar1 + 0x2b0);\n}\n",
        "token_count": 248
    },
    "0042db60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0042db60(void)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    ulong uVar4;\n    ulong uVar5;\n    char cVar6;\n    int64_t in_RAX;\n    uint64_t uVar7;\n    int64_t iVar8;\n    ulong *puVar9;\n    uint64_t **ppuVar10;\n    uint64_t *puVar11;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar13;\n    uint in_XMM15_Da;\n    uint uVar14;\n    uint in_XMM15_Db;\n    uint uVar15;\n    uint in_XMM15_Dc;\n    uint uVar16;\n    uint in_XMM15_Dd;\n    uint uVar17;\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x4d8 && *0x20 + -0x4d8 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x558;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(unaff_R14 + 0x30) != in_RAX) {\n                LOCK();\n                if (*(in_RAX + 0x350) != 0) {\n                    LOCK();\n                    puVar2 = in_RAX + 800;\n                    uVar3 = *puVar2;\n                    *puVar2 = *puVar2 + 1;\n                    return uVar3;\n                }\n                *(in_RAX + 0x350) = 1;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x20) = in_RAX + 0x328;\n                *(*0x20 + -0x560) = 0x42dbcd;\n                fcn.00409300();\n                if (*(*(*0x20 + -0x10) + 0x330) == 0) {\n                    *(*0x20 + -0x560) = 0x42dbee;\n                    uVar7 = fcn.00409520();\n                    iVar8 = *(*0x20 + -0x10);\n                    *(iVar8 + 0x350) = 0;\n                    LOCK();\n                    piVar1 = iVar8 + 800;\n                    *piVar1 = *piVar1 + 1;\n                    return uVar7;\n                }\n                *(*0x20 + -0x510) = 0;\n                uVar4 = *(*(*0x20 + -0x10) + 0x330);\n                *(*0x20 + -0x558) = _sym.imp.kernel32.dll_DuplicateHandle;\n                *(*0x20 + -0x550) = 0xffffffffffffffff;\n                *(*0x20 + -0x548) = uVar4;\n                *(*0x20 + -0x540) = 0xffffffffffffffff;\n                *(*0x20 + -0x538) = *0x20 + -0x510;\n                *(*0x20 + -0x530) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                *(*0x20 + -0x520) = 2;\n                *(*0x20 + -0x560) = 0x42dc6b;\n                fcn.0042d860();\n                uVar14 = 0;\n                uVar15 = 0;\n                uVar16 = 0;\n                uVar17 = 0;\n                if (*(*0x20 + -0x518) != 0) break;\n                *(*0x20 + -0x560) = 0x42dfb7;\n                fcn.0045ab80();\n                in_XMM15_Da = 0;\n                in_XMM15_Db = 0;\n                in_XMM15_Dc = 0;\n                in_XMM15_Dd = 0;\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                *(*0x20 + -0x508) = *(*0x20 + -0x558);\n                *(*0x20 + -0x560) = 0x42dfd8;\n                fcn.004324c0();\n                *(*0x20 + -0x560) = 0x42dfe9;\n                fcn.00432dc0();\n                *(*0x20 + -0x560) = 0x42dff3;\n                fcn.00432ac0();\n                *(*0x20 + -0x560) = 0x42dff8;\n                fcn.00432720();\n                *(*0x20 + -0x560) = 0x42dffd;\n                fcn.00432540();\n                *(*0x20 + -0x560) = 0x42e00e;\n                fcn.00430d40();\n            }\n            *(*0x20 + -0x560) = 0x42e01f;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + -8) = 0x42e02a;\n        fcn.00457040();\n        in_RAX = *(puVar12 + 8);\n        *0x20 = puVar12;\n    } while( true );\n    *(*0x20 + -0x560) = 0x42dc9a;\n    fcn.00409520();\n    *(*0x20 + -0x4ff) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n    puVar9 = *0x20 + -0x4f0;\n    for (iVar8 = 0x9a; iVar8 != 0; iVar8 = iVar8 + -1) {\n        *puVar9 = 0;\n        puVar9 = puVar9 + 1;\n    }\n    *(*0x20 + -0x18) = *0x20 + -0x4f0 & 0xfffffffffffffff0;\n    *((*0x20 + -0x4f0 & 0xfffffffffffffff0) + 0x30) = 0x100001;\n    *(*0x20 + -0x560) = 0x42dcd8;\n    fcn.00409300();\n    *(*0x20 + -0x558) = _sym.imp.kernel32.dll_SuspendThread;\n    *(*0x20 + -0x550) = *(*0x20 + -0x510);\n    *(*0x20 + -0x560) = 0x42dcf2;\n    fcn.0042d560();\n    if (*(*0x20 + -0x548) == -1) {\n        *(*0x20 + -0x560) = 0x42df3a;\n        fcn.00409520();\n        *(*0x20 + -0x558) = _sym.imp.kernel32.dll_CloseHandle;\n        *(*0x20 + -0x550) = *(*0x20 + -0x510);\n        *(*0x20 + -0x560) = 0x42df54;\n        uVar7 = fcn.0042d560();\n        iVar8 = *(*0x20 + -0x10);\n        *(iVar8 + 0x350) = 0;\n        LOCK();\n        piVar1 = iVar8 + 800;\n        *piVar1 = *piVar1 + 1;\n        return uVar7;\n    }\n    *(*0x20 + -0x558) = _sym.imp.kernel32.dll_GetThreadContext;\n    *(*0x20 + -0x550) = *(*0x20 + -0x510);\n    *(*0x20 + -0x548) = *(*0x20 + -0x18);\n    *(*0x20 + -0x560) = 0x42dd3b;\n    fcn.0042d5e0();\n    *(*0x20 + -0x560) = 0x42dd5d;\n    fcn.00409520();\n    iVar8 = *(*0x20 + -0x18);\n    uVar7 = *(iVar8 + 0x98);\n    ppuVar10 = *(*0x20 + -0x10);\n    puVar11 = *ppuVar10;\n    if (((((puVar11 == NULL) || (uVar7 <= *puVar11)) || (puVar11[1] < uVar7 || puVar11[1] == uVar7)) &&\n        (((puVar11 = ppuVar10[10],  puVar11 == NULL || (uVar7 <= *puVar11)) ||\n         (puVar11[1] < uVar7 || puVar11[1] == uVar7)))) &&\n       (((puVar11 = ppuVar10[0x12],  puVar11 == NULL || (uVar7 <= *puVar11)) ||\n        (puVar11[1] < uVar7 || puVar11[1] == uVar7)))) {\n        puVar11 = NULL;\n    }\n    if (puVar11 == NULL) {\n        bVar13 = false;\n        goto code_r0x0042de0d;\n    }\n    if (*(puVar11 + 0xb1) == '\\0') {\n        if (*(puVar11[6] + 0xa0) == 0) {\n            bVar13 = false;\n            goto code_r0x0042de0d;\n        }\n        if (*(*(puVar11[6] + 0xa0) + 0x2708) == '\\0') {\n            bVar13 = false;\n            goto code_r0x0042de0d;\n        }\n    }\n    bVar13 = (*(puVar11 + 0x12) & 0xffffefff) == 2;\ncode_r0x0042de0d:\n    if (bVar13) {\n        uVar4 = *(iVar8 + 0xf8);\n        uVar5 = *(iVar8 + 0x98);\n        *(*0x20 + -0x560) = 0x42de31;\n        cVar6 = fcn.00431f80(uVar5);\n        if (cVar6 != '\\0') {\n            iVar8 = *(*0x20 + -0x18);\n            puVar9 = *(iVar8 + 0x98) + -8;\n            uVar5 = CONCAT71(*0x48a3b9, *0x48a3b8);\n            *puVar9 = uVar4;\n            *(iVar8 + 0x98) = puVar9;\n            *(iVar8 + 0xf8) = uVar5;\n            *(*0x20 + -0x558) = _sym.imp.kernel32.dll_SetThreadContext;\n            *(*0x20 + -0x550) = *(*0x20 + -0x510);\n            *(*0x20 + -0x548) = iVar8;\n            *(*0x20 + -0x560) = 0x42de8f;\n            fcn.0042d5e0();\n        }\n        ppuVar10 = *(*0x20 + -0x10);\n    }\n    *(ppuVar10 + 0x6a) = 0;\n    LOCK();\n    *(ppuVar10 + 100) = *(ppuVar10 + 100) + 1;\n    *(*0x20 + -0x558) = _sym.imp.kernel32.dll_ResumeThread;\n    *(*0x20 + -0x550) = *(*0x20 + -0x510);\n    *(*0x20 + -0x560) = 0x42deda;\n    fcn.0042d560();\n    *(*0x20 + -0x558) = _sym.imp.kernel32.dll_CloseHandle;\n    *(*0x20 + -0x550) = *(*0x20 + -0x510);\n    *(*0x20 + -0x560) = 0x42df08;\n    uVar7 = fcn.0042d560();\n    return uVar7;\n}\n",
        "token_count": 2747
    },
    "0042e040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042e040(int64_t arg1)\n\n{\n    char cVar1;\n    ulong in_RAX;\n    ulong in_RDX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x28) = 0x42e067;\n            fcn.004478a0();\n            *(*0x20 + -0x28) = 0x42e06c;\n            fcn.00447f80();\n            if (unaff_RBX < 8) {\ncode_r0x0042e089:\n                if (((unaff_R14 == 0) || (arg1 = *(unaff_R14 + 0x30),  arg1 == 0)) || (*(arg1 + 0xc0) == 0)) {\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x42e0bc;\n                fcn.00430d40();\n            }\n            else {\n                arg1 = 8;\n                *(*0x20 + -0x28) = 0x42e085;\n                cVar1 = fcn.004021a0(8, in_RDX);\n                if (cVar1 == '\\0') goto code_r0x0042e089;\n            }\n            unaff_RBX = *(*0x20 + 0x18);\n            *(*0x20 + -0x28) = 0x42e0cb;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x42e0e5;\n        fcn.00457040();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 610
    },
    "0042e100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042e100(void)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (((unaff_R14 == 0) || (*(unaff_R14 + 0x30) == 0)) || (*(*(unaff_R14 + 0x30) + 0xc0) == 0)) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x42e146;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x42e156;\n        fcn.00457040();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 349
    },
    "0042eb60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * fcn.0042eb60(ulong noname_0, ulong arg2)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int32_t in_EAX;\n    int32_t *piVar3;\n    uint64_t arg1;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t arg3;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    int32_t *piStack72;\n    int64_t iStack64;\n    ulong uStack56;\n    int32_t iStack48;\n    int32_t **ppiStack40;\n    uchar auStack32 [16];\n    uint64_t uStack16;\n    \n    piStack72 = NULL;\n    if (in_EAX < 9) {\n        uVar4 = 0;\n    }\n    else {\n        uVar4 = in_EAX + 7U >> 4;\n    }\n    iStack48 = in_EAX;\n    if (uVar4 < 5) {\n        iVar5 = *(*(unaff_R14 + 0x30) + 0xa0);\n        arg3 = uVar4 * 3;\n        if ((*(iVar5 + 0x70 + uVar4 * 0x18) == 0) && (*(uVar4 * 8 + 0x504870) != 0)) {\n            auStack32 = CONCAT88(iVar5, 0x42eea0);\n            iStack64 = iVar5;\n            uStack16 = uVar4;\n            fcn.00456f00();\n            iVar5 = iStack64;\n        }\n        iVar1 = *(iVar5 + 0x70 + uVar4 * 0x18);\n        if (0 < iVar1) {\n            piStack72 = *(*(iVar5 + 0x68 + uVar4 * 0x18) + -8 + iVar1 * 8);\n            arg1 = iVar1 - 1;\n            arg4 = *(iVar5 + 0x70 + uVar4 * 0x18);\n            if (arg1 < arg4) {\n                if (*0x557ed0 == 0) {\n                    *(*(iVar5 + 0x68 + uVar4 * 0x18) + -8 + iVar1 * 8) = 0;\n                }\n                else {\n                    iStack48 = fcn.004593c0(arg1, arg2, arg3, arg4);\n                }\n                uVar4 = *(iVar5 + 0x78 + arg3 * 8);\n                if (arg1 <= uVar4) {\n                    *(iVar5 + 0x70 + arg3 * 8) = arg1;\n                    goto code_r0x0042ec9f;\n                }\n                fcn.004597a0(arg1, uVar4);\n            }\n            fcn.00459720(arg4);\n            pcVar2 = swi(3);\n            piVar3 = (*pcVar2)();\n            return piVar3;\n        }\n    }\ncode_r0x0042ec9f:\n    if (piStack72 == NULL) {\n        uStack56 = 0x42ed40;\n        ppiStack40 = &piStack72;\n        fcn.00456f00();\n        iStack48 = in_EAX;\n    }\n    *piStack72 = iStack48;\n    *(piStack72 + 5) = 1;\n    return piStack72;\n}\n",
        "token_count": 759
    },
    "0042f040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042f040(ulong arg1)\n\n{\n    int64_t iVar1;\n    int32_t *in_RAX;\n    int32_t *piVar2;\n    int64_t iVar3;\n    int64_t arg1_00;\n    uint64_t uVar4;\n    int64_t arg4;\n    int64_t iVar5;\n    int64_t arg3;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    if (*(in_RAX + 8) != 0) {\n        fcn.0042f3c0();\n    }\n    if (*(in_RAX + 6) != 0) {\n        fcn.0042f400();\n    }\n    if (*(in_RAX + 5) == '\\0') {\n        return;\n    }\n    if (*in_RAX < 9) {\n        uVar4 = 0;\n    }\n    else {\n        uVar4 = *in_RAX + 7U >> 4;\n    }\n    if (4 < uVar4) {\n        return;\n    }\n    arg3 = *(*(unaff_R14 + 0x30) + 0xa0);\n    arg4 = uVar4 * 3;\n    if (*(arg3 + 0x78 + uVar4 * 0x18) == *(arg3 + 0x70 + uVar4 * 0x18)) {\n        fcn.00456f00();\n        in_XMM15_Da = 0;\n        in_XMM15_Db = 0;\n        in_XMM15_Dc = 0;\n        in_XMM15_Dd = 0;\n    }\n    *in_RAX = 0;\n    *(in_RAX + 1) = 0;\n    *(in_RAX + 6) = 0;\n    *(in_RAX + 2) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n    *(in_RAX + 0x10) = 0;\n    *(in_RAX + 0xe) = 0;\n    iVar5 = arg3;\n    iVar6 = arg4;\n    if (*0x557ed0 == 0) {\n        *(in_RAX + 0xc) = 0;\n        *(in_RAX + 10) = 0;\n        piVar2 = in_RAX;\n    }\n    else {\n        fcn.004593a0(arg1, 0, arg3, arg4);\n        piVar2 = fcn.004593a0(arg1, 0, iVar5, iVar6);\n    }\n    arg1_00 = *(iVar5 + 0x70 + iVar6 * 8);\n    iVar1 = *(iVar5 + 0x68 + iVar6 * 8);\n    iVar3 = iVar1;\n    if (*(iVar5 + 0x78 + iVar6 * 8) < arg1_00 + 1U) {\n        iVar3 = fcn.004425c0(arg1_00);\n        *(arg3 + 0x78 + uVar4 * 0x18) = arg1_00;\n        if (*0x557ed0 == 0) {\n            *(arg3 + 0x68 + uVar4 * 0x18) = iVar3;\n            piVar2 = in_RAX;\n            arg1_00 = iVar1;\n            iVar5 = arg3;\n            iVar6 = arg4;\n        }\n        else {\n            iVar3 = fcn.00459280(arg1_00, arg4, arg3, iVar6);\n            piVar2 = in_RAX;\n            arg1_00 = iVar1;\n            iVar5 = arg3;\n            iVar6 = arg4;\n        }\n    }\n    *(iVar5 + 0x70 + iVar6 * 8) = arg1_00 + 1;\n    if (*0x557ed0 == 0) {\n        *(iVar3 + arg1_00 * 8) = piVar2;\n    }\n    else {\n        fcn.00459280(arg1_00, arg1_00 + 1, iVar5, iVar6);\n    }\n    return;\n}\n",
        "token_count": 959
    },
    "0042f440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042f440(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    char cVar3;\n    uint32_t *puVar4;\n    ulong arg1;\n    uint64_t arg3;\n    int64_t unaff_R14;\n    ulong auStackX8 [4];\n    \n    puVar4 = *(unaff_R14 + 0x28);\n    if (puVar4 == NULL) {\n        return;\n    }\n    if (*(puVar4 + 2) != auStackX8) {\n        return;\n    }\n    if (*(puVar4 + 6) == '\\0') {\n        uVar1 = *puVar4;\n        arg3 = uVar1;\n        if (uVar1 != 0) {\n            if (uVar1 == 8) {\n                auStackX8[0] = *(puVar4 + 0x12);\n            }\n            else {\n                fcn.0045a040(uVar1);\n            }\n        }\n        arg1 = *(puVar4 + 6);\n        if (*0x557ed0 == 0) {\n            *(puVar4 + 6) = 0;\n        }\n        else {\n            arg3 = 0;\n            puVar4 = fcn.00459400(arg1, puVar4 + 6, 0, param_4);\n        }\n        if (*0x557ed0 == 0) {\n            *(unaff_R14 + 0x28) = *(puVar4 + 10);\n        }\n        else {\n            fcn.004593a0(arg1, *(puVar4 + 10), arg3, param_4);\n        }\n        fcn.0042f040(arg1);\n        fcn.00458e60();\n        return;\n    }\n    cVar3 = fcn.0042fc60(param_1, auStackX8, param_3, param_4);\n    if (cVar3 != '\\0') {\n        if (*0x557ed0 == 0) {\n            *(unaff_R14 + 0x28) = *(puVar4 + 10);\n        }\n        else {\n            fcn.004593a0(unaff_R14, *(puVar4 + 10), param_3, param_4);\n        }\n        fcn.0042f040(unaff_R14);\n        return;\n    }\n    fcn.00430d40();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 569
    },
    "0042f5c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042f5c0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    for (; in_RAX != 0; in_RAX = *(in_RAX + 0x18)) {\n        uVar2 = *(in_RAX + 0x10);\n        if (*(in_RAX + 8) != 0) {\n            iVar1 = fcn.00408f40(uVar2);\n            if (iVar1 == 0) {\n                iVar1 = fcn.00408f40(uVar2);\n                if (iVar1 != 0) {\n                    (**(iVar1 + 0x18))();\n                    uVar2 = fcn.00408d60();\n                    *(in_RAX + 8) = 0x475d60;\n                    if (*0x557ed0 == 0) {\n                        *(in_RAX + 0x10) = uVar2;\n                    }\n                    else {\n                        fcn.00459280(0x475d60, in_RAX, param_3, param_4);\n                    }\n                }\n            }\n            else {\n                (**(iVar1 + 0x18))();\n                uVar2 = fcn.00408d60();\n                *(in_RAX + 8) = 0x475d60;\n                if (*0x557ed0 == 0) {\n                    *(in_RAX + 0x10) = uVar2;\n                }\n                else {\n                    fcn.00459280(0x475d60, in_RAX, param_3, param_4);\n                }\n            }\n        }\n    }\n    fcn.00453d40();\n    return;\n}\n",
        "token_count": 449
    },
    "0042f720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042f720(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if ((*(in_RAX + 0x18) != 0) && (fcn.0042f720(),  *(*(in_RAX + 0x18) + 0x32) == '\\0')) {\n        fcn.004324c0();\n        fcn.00432dc0();\n        fcn.00432540();\n    }\n    if (*(in_RAX + 0x32) != '\\0') {\n        return;\n    }\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432540();\n    fcn.00406f60(*(in_RAX + 8));\n    if (*(in_RAX + 0x30) != '\\0') {\n        fcn.004324c0();\n        fcn.00432dc0();\n        fcn.00432540();\n    }\n    fcn.004324c0();\n    fcn.00432720();\n    fcn.00432540();\n    return;\n}\n",
        "token_count": 291
    },
    "0042fc60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0042fc60(ulong noname_0, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    ulong uVar3;\n    uint32_t uVar4;\n    ulong in_RAX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint8_t *puVar7;\n    uint64_t uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    int32_t *unaff_RBX;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    uint8_t *puVar12;\n    int64_t iVar13;\n    uint64_t uVar14;\n    uchar uVar15;\n    uint64_t arg4_00;\n    int32_t *piVar16;\n    uint32_t uVar17;\n    int32_t iVar18;\n    int64_t unaff_R14;\n    \ncode_r0x0042fc60:\n    puVar11 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar11 = *0x20 + -0x78;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        iVar13 = 0;\n        puVar7 = *(unaff_RBX + 0xc);\n        do {\n            puVar12 = puVar7 + 1;\n            if (*puVar7 < 0x80) {\n                if (iVar13 < 0) goto code_r0x00430480;\n                iVar9 = 0;\n                uVar14 = 0;\n                goto code_r0x0042fcbf;\n            }\n            if (iVar13 < 0) goto code_r0x00430498;\n            iVar13 = iVar13 + 7;\n            puVar7 = puVar12;\n        } while (iVar13 < 0x1d);\n        goto code_r0x00430485;\n    }\n    goto code_r0x0043049e;\n    while( true ) {\n        if (uVar14 < 0) goto code_r0x00430478;\n        iVar9 = ((uVar1 & 0xffffff7f) << (uVar14 & 0x1f) & -(uVar14 < 0x20)) + iVar9;\n        uVar14 = uVar14 + 7;\n        if (0x1c < uVar14) break;\ncode_r0x0042fcbf:\n        uVar1 = *puVar12;\n        puVar12 = puVar12 + 1;\n        if (uVar1 < 0x80) {\n            if (uVar14 < 0) goto code_r0x00430460;\n            uVar10 = (uVar1 << (uVar14 & 0x1f) & -(uVar14 < 0x20)) + iVar9;\n            uVar8 = uVar10;\n            iVar9 = 0;\n            uVar14 = 0;\n            goto code_r0x0042fd19;\n        }\n    }\n    goto code_r0x00430465;\n    while( true ) {\n        if (uVar14 < 0) goto code_r0x00430458;\n        iVar9 = ((uVar1 & 0xffffff7f) << (uVar14 & 0x1f) & -(uVar14 < 0x20)) + iVar9;\n        uVar14 = uVar14 + 7;\n        if (0x1c < uVar14) break;\ncode_r0x0042fd19:\n        uVar1 = *puVar12;\n        puVar12 = puVar12 + 1;\n        if (uVar1 < 0x80) {\n            if (uVar14 < 0) goto code_r0x00430440;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x58) = uVar10;\n            arg4_00 = *(*(unaff_RBX + 0xe) - uVar8);\n            uVar14 = (uVar1 << (uVar14 & 0x1f) & -(uVar14 < 0x20)) + iVar9;\n            goto code_r0x0042fda0;\n        }\n    }\n    goto code_r0x00430445;\ncode_r0x0042fda0:\n    uVar14 = uVar14 - 1;\n    if (uVar14 < 0) {\n        return 1;\n    }\n    iVar9 = 0;\n    uVar5 = 0;\n    while( true ) {\n        uVar1 = *puVar12;\n        puVar12 = puVar12 + 1;\n        if (uVar1 < 0x80) break;\n        if (uVar5 < 0) goto code_r0x00430438;\n        iVar9 = ((uVar1 & 0xffffff7f) << (uVar5 & 0x1f) & -(uVar5 < 0x20)) + iVar9;\n        uVar5 = uVar5 + 7;\n        if (0x1c < uVar5) goto code_r0x00430425;\n    }\n    if (uVar5 < 0) goto code_r0x00430420;\n    uVar10 = (uVar1 << (uVar5 & 0x1f) & -(uVar5 < 0x20)) + iVar9;\n    puVar7 = uVar10;\n    iVar9 = 0;\n    uVar5 = 0;\n    while( true ) {\n        uVar1 = *puVar12;\n        puVar12 = puVar12 + 1;\n        if (uVar1 < 0x80) break;\n        if (uVar5 < 0) goto code_r0x00430418;\n        iVar9 = ((uVar1 & 0xffffff7f) << (uVar5 & 0x1f) & -(uVar5 < 0x20)) + iVar9;\n        uVar5 = uVar5 + 7;\n        if (0x1c < uVar5) goto code_r0x00430405;\n    }\n    if (uVar5 < 0) goto code_r0x00430400;\n    iVar18 = 0;\n    uVar6 = 0;\n    while( true ) {\n        uVar2 = *puVar12;\n        puVar12 = puVar12 + 1;\n        if (uVar2 < 0x80) break;\n        if (uVar6 < 0) goto code_r0x004303f8;\n        iVar18 = ((uVar2 & 0xffffff7f) << (uVar6 & 0x1f) & -(uVar6 < 0x20)) + iVar18;\n        uVar6 = uVar6 + 7;\n        if (0x1c < uVar6) goto code_r0x004303e5;\n    }\n    if (uVar6 < 0) goto code_r0x004303e0;\n    uVar17 = (uVar2 << (uVar6 & 0x1f) & -(uVar6 < 0x20)) + iVar18;\n    if (uVar10 != 0) goto code_r0x004303ca;\n    *(*0x20 + -0x38) = uVar14;\n    uVar10 = -(uVar14 < 0x20) & 1 << (uVar14 & 0x1f);\n    if ((uVar10 & arg4_00) == 0) {\n        for (uVar10 = 0; uVar10 < uVar17; uVar10 = uVar10 + 1) {\n            iVar13 = 0;\n            while (0x7f < *puVar12) {\n                if (iVar13 < 0) goto code_r0x004303c5;\n                iVar13 = iVar13 + 7;\n                puVar12 = puVar12 + 1;\n                if (0x1c < iVar13) goto code_r0x004303b0;\n            }\n            if (iVar13 < 0) {\ncode_r0x004303ab:\n                *(*0x20 + -0x80) = 0x4303b0;\n                fcn.0042e7c0();\ncode_r0x004303b0:\n                *(*0x20 + -0x80) = 0x4303c5;\n                fcn.004305a0();\ncode_r0x004303c5:\n                *(*0x20 + -0x80) = 0x4303ca;\n                fcn.0042e7c0();\n                goto code_r0x004303ca;\n            }\n            iVar13 = 0;\n            puVar7 = puVar12 + 1;\n            while (0x7f < *puVar7) {\n                if (iVar13 < 0) goto code_r0x004303a6;\n                iVar13 = iVar13 + 7;\n                puVar7 = puVar7 + 1;\n                if (0x1c < iVar13) goto code_r0x00430393;\n            }\n            if (iVar13 < 0) {\ncode_r0x0043038e:\n                *(*0x20 + -0x80) = 0x430393;\n                fcn.0042e7c0();\ncode_r0x00430393:\n                *(*0x20 + -0x80) = 0x4303a6;\n                fcn.004305a0();\ncode_r0x004303a6:\n                *(*0x20 + -0x80) = 0x4303ab;\n                fcn.0042e7c0();\n                goto code_r0x004303ab;\n            }\n            iVar13 = 0;\n            puVar7 = puVar7 + 1;\n            while (puVar12 = puVar7 + 1,  0x7f < *puVar7) {\n                if (iVar13 < 0) goto code_r0x00430389;\n                iVar13 = iVar13 + 7;\n                puVar7 = puVar12;\n                if (0x1c < iVar13) goto code_r0x00430376;\n            }\n            if (iVar13 < 0) {\n                *(*0x20 + -0x80) = 0x430376;\n                fcn.0042e7c0();\ncode_r0x00430376:\n                *(*0x20 + -0x80) = 0x430389;\n                fcn.004305a0();\ncode_r0x00430389:\n                *(*0x20 + -0x80) = 0x43038e;\n                fcn.0042e7c0();\n                goto code_r0x0043038e;\n            }\ncode_r0x004302bd:\n        }\n        uVar10 = arg4_00;\n    }\n    else {\n        uVar3 = *(*(unaff_RBX + 0xe) - ((uVar1 << (uVar5 & 0x1f) & -(uVar5 < 0x20)) + iVar9));\n        if (*0x557ed0 == 0) {\n            *(unaff_RBX + 6) = uVar3;\n        }\n        else {\n            *(*0x20 + -0x80) = 0x42fe75;\n            fcn.00459400(uVar14, uVar8, uVar3, arg4_00);\n        }\n        if (*unaff_RBX == 0) {\n            piVar16 = NULL;\n        }\n        else {\n            piVar16 = unaff_RBX + 0x12;\n        }\n        *(*0x20 + -0x44) = puVar7;\n        *(*0x20 + -0x4c) = uVar17;\n        *(*0x20 + -0x59) = uVar10;\n        *(*0x20 + -0x10) = unaff_RBX + 6;\n        *(*0x20 + -0x30) = piVar16;\n        *(*0x20 + -0x5a) = arg4_00;\n        uVar4 = 0;\n        while (uVar4 < uVar17) {\n            *(*0x20 + -0x40) = 0;\n            while (uVar1 = *puVar12,  puVar12 = puVar12 + 1,  0x7f < uVar1) {\n                uVar14 = *(*0x20 + -0x40);\n                if (uVar14 < 0) goto code_r0x004302b8;\n                puVar7 = -(uVar14 < 0x20);\n                if (0x1c < uVar14 + 7) goto code_r0x004302a5;\n                puVar7 = *(*0x20 + -0x44);\n                *(*0x20 + -0x40) = uVar14 + 7;\n            }\n            if (*(*0x20 + -0x40) < 0) goto code_r0x004302a0;\n            puVar7 = NULL;\n            uVar14 = 0;\n            while( true ) {\n                *(*0x20 + -0x54) = puVar7;\n                uVar1 = *puVar12;\n                puVar7 = uVar1;\n                puVar12 = puVar12 + 1;\n                if (uVar1 < 0x80) break;\n                if (uVar14 < 0) goto code_r0x00430298;\n                puVar7 = ((uVar1 & 0xffffff7f) << (uVar14 & 0x1f) & -(uVar14 < 0x20)) + *(*0x20 + -0x54);\n                uVar14 = uVar14 + 7;\n                if (0x1c < uVar14) goto code_r0x00430285;\n            }\n            if (uVar14 < 0) {\ncode_r0x00430280:\n                *(*0x20 + -0x80) = 0x430285;\n                fcn.0042e7c0();\ncode_r0x00430285:\n                *(*0x20 + -0x80) = 0x430298;\n                fcn.004305a0();\ncode_r0x00430298:\n                *(*0x20 + -0x80) = 0x43029d;\n                fcn.0042e7c0();\ncode_r0x004302a0:\n                *(*0x20 + -0x80) = 0x4302a5;\n                fcn.0042e7c0();\ncode_r0x004302a5:\n                unaff_RBX = 0x49e660;\n                *(*0x20 + -0x80) = 0x4302b8;\n                fcn.004305a0();\ncode_r0x004302b8:\n                puVar12 = puVar7;\n                *(*0x20 + -0x80) = 0x4302bd;\n                uVar10 = fcn.0042e7c0();\n                goto code_r0x004302bd;\n            }\n            uVar8 = 0;\n            puVar7 = NULL;\n            while( true ) {\n                uVar2 = *puVar12;\n                puVar12 = puVar12 + 1;\n                if (uVar2 < 0x80) break;\n                if (puVar7 < 0) goto code_r0x00430278;\n                *(*0x20 + -0x50) = uVar8;\n                uVar8 = *(*0x20 + -0x50) + ((uVar2 & 0xffffff7f) << (puVar7 & 0x1f) & -(puVar7 < 0x20));\n                puVar7 = puVar7 + 7;\n                if (0x1c < puVar7) goto code_r0x00430265;\n                arg4_00 = *(*0x20 + -0x5a);\n            }\n            if (puVar7 < 0) {\n                *(*0x20 + -0x80) = 0x430265;\n                fcn.0042e7c0();\n                uVar8 = arg4_00;\ncode_r0x00430265:\n                *(*0x20 + -0x80) = 0x430278;\n                fcn.004305a0();\n                arg4_00 = uVar8;\ncode_r0x00430278:\n                *(*0x20 + -0x80) = 0x43027d;\n                fcn.0042e7c0();\n                goto code_r0x00430280;\n            }\n            *(*0x20 + -0x48) = uVar4;\n            *(*0x20 + -0x18) = puVar12;\n            *(*0x20 + -0x80) = 0x430070;\n            fcn.0045a040(*(*0x20 + -0x54) + (uVar1 << (uVar14 & 0x1f) & -(uVar14 < 0x20)));\n            puVar12 = *(*0x20 + -0x18);\n            uVar14 = *(*0x20 + -0x38);\n            uVar8 = *(*0x20 + -0x58);\n            unaff_RBX = *(*0x20 + 0x10);\n            arg4_00 = *(*0x20 + -0x5a);\n            puVar7 = *(*0x20 + -0x44);\n            uVar17 = *(*0x20 + -0x4c);\n            uVar10 = *(*0x20 + -0x59);\n            uVar4 = *(*0x20 + -0x48) + 1;\n        }\n        *(*0x20 + -0x20) = puVar12;\n        iVar13 = *(unaff_RBX + 0xe);\n        uVar10 = arg4_00 & ~uVar10;\n        uVar15 = uVar10;\n        *(*0x20 + -0x59) = uVar15;\n        *(iVar13 - uVar8) = uVar15;\n        *(*0x20 + -0x28) = *(unaff_RBX + 8);\n        uVar3 = *(unaff_RBX + 6);\n        *(*0x20 + -0x80) = 0x42fedb;\n        fcn.004304c0(uVar3, uVar8, uVar14, uVar10);\n        if ((*(*0x20 + -0x28) != 0) && (*(*(*0x20 + -0x28) + 0x31) != '\\0')) {\n            return 1;\n        }\n        if (*0x557ed0 == 0) {\n            *(*(*0x20 + 0x10) + 0x18) = 0;\n        }\n        else {\n            *(*0x20 + -0x80) = 0x42ff16;\n            fcn.00459380(0);\n        }\n        *(*0x20 + -0x80) = 0x42ff25;\n        uVar14 = fcn.00459d80();\n        unaff_RBX = *(*0x20 + 0x10);\n        if ((*(unaff_RBX + 8) != 0) && (*(*(unaff_RBX + 8) + 0x30) != '\\0')) {\n            return uVar14 & 0xffffffffffffff00 | *(*0x20 + -0x59) == '\\0';\n        }\n        puVar12 = *(*0x20 + -0x20);\n        uVar10 = *(*0x20 + -0x59);\n    }\n    uVar14 = *(*0x20 + -0x38);\n    arg4_00 = uVar10;\n    uVar8 = *(*0x20 + -0x58);\n    goto code_r0x0042fda0;\ncode_r0x004303ca:\n    *(*0x20 + -0x80) = 0x4303db;\n    fcn.00430d40();\ncode_r0x004303e0:\n    *(*0x20 + -0x80) = 0x4303e5;\n    fcn.0042e7c0();\ncode_r0x004303e5:\n    *(*0x20 + -0x80) = 0x4303f8;\n    fcn.004305a0();\ncode_r0x004303f8:\n    *(*0x20 + -0x80) = 0x4303fd;\n    fcn.0042e7c0();\ncode_r0x00430400:\n    *(*0x20 + -0x80) = 0x430405;\n    fcn.0042e7c0();\ncode_r0x00430405:\n    *(*0x20 + -0x80) = 0x430418;\n    fcn.004305a0();\ncode_r0x00430418:\n    *(*0x20 + -0x80) = 0x43041d;\n    fcn.0042e7c0();\ncode_r0x00430420:\n    *(*0x20 + -0x80) = 0x430425;\n    fcn.0042e7c0();\ncode_r0x00430425:\n    *(*0x20 + -0x80) = 0x430438;\n    fcn.004305a0();\ncode_r0x00430438:\n    *(*0x20 + -0x80) = 0x43043d;\n    fcn.0042e7c0();\ncode_r0x00430440:\n    *(*0x20 + -0x80) = 0x430445;\n    fcn.0042e7c0();\ncode_r0x00430445:\n    *(*0x20 + -0x80) = 0x430458;\n    fcn.004305a0();\ncode_r0x00430458:\n    *(*0x20 + -0x80) = 0x43045d;\n    fcn.0042e7c0();\ncode_r0x00430460:\n    *(*0x20 + -0x80) = 0x430465;\n    fcn.0042e7c0();\ncode_r0x00430465:\n    *(*0x20 + -0x80) = 0x430478;\n    fcn.004305a0();\ncode_r0x00430478:\n    *(*0x20 + -0x80) = 0x43047d;\n    fcn.0042e7c0();\ncode_r0x00430480:\n    *(*0x20 + -0x80) = 0x430485;\n    fcn.0042e7c0();\ncode_r0x00430485:\n    unaff_RBX = 0x49e660;\n    *(*0x20 + -0x80) = 0x430498;\n    fcn.004305a0();\ncode_r0x00430498:\n    *(*0x20 + -0x80) = 0x43049d;\n    in_RAX = fcn.0042e7c0();\ncode_r0x0043049e:\n    *(puVar11 + 8) = in_RAX;\n    *(puVar11 + 0x10) = unaff_RBX;\n    *(puVar11 + -8) = 0x4304ad;\n    fcn.00457040();\n    in_RAX = *(puVar11 + 8);\n    unaff_RBX = *(puVar11 + 0x10);\n    *0x20 = puVar11;\n    goto code_r0x0042fc60;\n}\n",
        "token_count": 5298
    },
    "004304c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004304c0(ulong *arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    ulong *arg1_00;\n    code **unaff_RBX;\n    int64_t unaff_R14;\n    ulong in_stack_00000000;\n    ulong *puStackX8;\n    code **ppcStackX16;\n    \n    puStackX8 = in_RAX;\n    ppcStackX16 = unaff_RBX;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    arg1_00 = arg1;\n    if (puStackX8 != NULL) {\n        uVar1 = fcn.00430ce0();\n        arg1_00 = puStackX8;\n        if (*0x557ed0 == 0) {\n            *puStackX8 = uVar1;\n        }\n        else {\n            fcn.00459280(arg1, noname_1, arg3, arg4);\n        }\n        arg1_00[4] = in_stack_00000000;\n        if (*0x557ed0 == 0) {\n            arg1_00[5] = &puStackX8;\n        }\n        else {\n            fcn.00459280(arg1_00, noname_1, arg3, arg4);\n        }\n    }\n    (**ppcStackX16)();\n    if (puStackX8 != NULL) {\n        puStackX8[4] = 0;\n        if (*0x557ed0 == 0) {\n            puStackX8[5] = 0;\n        }\n        else {\n            fcn.00459280(arg1_00, ppcStackX16, arg3, arg4);\n        }\n    }\n    return;\n}\n",
        "token_count": 428
    },
    "004305a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004305a0(ulong param_1, ulong param_2, ulong param_3, int64_t param_4)\n\n{\n    code *pcVar1;\n    ulong noname_1;\n    char cVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    ulong unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x38 && *0x20 + -0x38 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0xb8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            iVar3 = *(unaff_R14 + 0x30);\n            if (*(iVar3 + 0x90) == unaff_R14) {\n                if (*(iVar3 + 0xc0) == 0) {\n                    *(*0x20 + -0x48) = unaff_R14;\n                    if (*(iVar3 + 0xd0) == 0) {\n                        if (*(iVar3 + 0xd8) == 0) {\n                            *(*0x20 + -0x40) = 0;\n                            *(*0x20 + -0x38) = in_XMM15;\n                            *(*0x20 + -0x28) = in_XMM15;\n                            *(*0x20 + -0x18) = in_XMM15;\n                            *(*0x20 + -0x38) = in_RAX;\n                            *(*0x20 + -0x30) = unaff_RBX;\n                            *(*0x20 + -0x28) = *(unaff_R14 + 0x20);\n                            *(*0x20 + -0x50) = unaff_R14 + 0x20;\n                            if (*0x557ed0 == 0) {\n                                *(unaff_R14 + 0x20) = *0x20 + -0x40;\n                            }\n                            else {\n                                *(*0x20 + -0xc0) = 0x43068c;\n                                fcn.004593a0(param_1, *0x20 + -0x40, param_3, param_4);\n                            }\n                            LOCK();\n                            *0x557cd0 = *0x557cd0 + 1;\n                            *(*0x20 + -0xc0) = 0x4306b4;\n                            fcn.0042f820(*0x20 + 8);\ncode_r0x004306b4:\n                            do {\n                                iVar3 = *(*0x20 + -0x48);\n                                iVar6 = *(iVar3 + 0x28);\n                                if (iVar6 == 0) {\n                                    uVar4 = *(iVar3 + 0x20);\n                                    *(*0x20 + -0xc0) = 0x43093a;\n                                    fcn.0042f5c0(uVar4);\n                                    *(*0x20 + -0xc0) = 0x430948;\n                                    fcn.004310a0();\n                                    _pe_dos_header = 0;\n                                    return;\n                                }\n                                iVar7 = iVar3 + 0x28;\n                                if (*(iVar6 + 4) != '\\0') {\n                                    if (*(iVar6 + 0x20) != 0) {\n                                        *(*(iVar6 + 0x20) + 0x31) = 1;\n                                    }\n                                    if (*0x557ed0 == 0) {\n                                        *(iVar6 + 0x20) = 0;\n                                    }\n                                    else {\n                                        *(*0x20 + -0xc0) = 0x43070d;\n                                        iVar3 = fcn.004593e0(iVar6 + 0x20, iVar7, param_3, param_4);\n                                    }\n                                    if (*(iVar6 + 6) == '\\0') {\n                                        if (*0x557ed0 == 0) {\n                                            *(iVar6 + 0x18) = 0;\n                                        }\n                                        else {\n                                            *(*0x20 + -0xc0) = 0x43073a;\n                                            iVar3 = fcn.004593e0(iVar6 + 0x18, iVar7, param_3, param_4);\n                                        }\n                                        uVar4 = *(iVar6 + 0x28);\n                                        if (*0x557ed0 == 0) {\n                                            *(iVar3 + 0x28) = uVar4;\n                                        }\n                                        else {\n                                            *(*0x20 + -0xc0) = 0x430755;\n                                            fcn.00459380();\n                                        }\n                                        *(*0x20 + -0xc0) = 0x43075d;\n                                        fcn.0042f040(uVar4);\n                                        goto code_r0x004306b4;\n                                    }\n                                }\n                                *(iVar6 + 4) = 1;\n                                iVar3 = iVar6 + 0x20;\n                                if (*0x557ed0 == 0) {\n                                    *(iVar6 + 0x20) = *0x20 + -0x40;\n                                }\n                                else {\n                                    *(*0x20 + -0xc0) = 0x430793;\n                                    fcn.004593e0(iVar3, iVar7, param_3, param_4);\n                                }\n                                *(*0x20 + -0x58) = iVar7;\n                                *(*0x20 + -0x70) = iVar6;\n                                *(*0x20 + -0x60) = iVar3;\n                                if (*(iVar6 + 6) == '\\0') {\n                                    *(*0x20 + -0xc0) = 0x4307f2;\n                                    uVar4 = fcn.00430ce0();\n                                    *(*0x20 + -0x40) = uVar4;\n                                    pcVar1 = **(*(*0x20 + -0x70) + 0x18);\n                                    *(*0x20 + -0xc0) = 0x430806;\n                                    (*pcVar1)();\n                                    iVar3 = *(*0x20 + -0x70);\n                                    cVar2 = '\\x01';\n                                }\n                                else {\n                                    *(*0x20 + -0xc0) = 0x4307b5;\n                                    cVar2 = fcn.0042fc60(iVar3, *0x20 + -0x40, param_3, param_4);\n                                    if (cVar2 == '\\0') {\n                                        iVar3 = *(*0x20 + -0x70);\n                                    }\n                                    else {\n                                        iVar3 = *(*0x20 + -0x70);\n                                        if (*(*(iVar3 + 0x20) + 0x30) == '\\0') {\n                                            *(*0x20 + -0x9a) = cVar2;\n                                            *(*0x20 + -0xc0) = 0x4307da;\n                                            fcn.0042f820(0);\n                                            cVar2 = *(*0x20 + -0x9a);\n                                            iVar3 = *(*0x20 + -0x70);\n                                        }\n                                    }\n                                }\n                                *(*0x20 + -0x40) = 0;\n                                iVar6 = *(*0x20 + -0x48);\n                                if (*(iVar6 + 0x28) != iVar3) goto code_r0x00430acf;\n                                if (*0x557ed0 == 0) {\n                                    *(iVar3 + 0x20) = 0;\n                                }\n                                else {\n                                    *(*0x20 + -0xc0) = 0x430849;\n                                    cVar2 = fcn.004593e0(iVar6, iVar3, param_3, param_4);\n                                }\n                                uVar4 = *(iVar3 + 0x10);\n                                *(*0x20 + -0x98) = uVar4;\n                                param_3 = *(iVar3 + 8);\n                                *(*0x20 + -0x88) = param_3;\n                                if (cVar2 != '\\0') {\n                                    if (*0x557ed0 == 0) {\n                                        *(iVar3 + 0x18) = 0;\n                                    }\n                                    else {\n                                        *(*0x20 + -0xc0) = 0x43087d;\n                                        cVar2 = fcn.004593c0(iVar6, iVar3, param_3, param_4);\n                                    }\n                                    *(*0x20 + -0x99) = cVar2;\n                                    if (*0x557ed0 == 0) {\n                                        *(iVar6 + 0x28) = *(iVar3 + 0x28);\n                                    }\n                                    else {\n                                        *(*0x20 + -0xc0) = 0x43089e;\n                                        fcn.004593c0(iVar6, iVar3, param_3, param_4);\n                                    }\n                                    *(*0x20 + -0xc0) = 0x4308a6;\n                                    fcn.0042f040(iVar6);\n                                    cVar2 = *(*0x20 + -0x99);\n                                    iVar6 = *(*0x20 + -0x48);\n                                    uVar4 = *(*0x20 + -0x98);\n                                    param_3 = *(*0x20 + -0x88);\n                                }\n                            } while (*(*0x20 + -0x10) == '\\0');\n                            iVar3 = *(*0x20 + -0x28);\n                            if (*0x557ed0 == 0) {\n                                *(iVar6 + 0x20) = iVar3;\n                                iVar7 = *(*0x20 + -0x50);\n                            }\n                            else {\n                                iVar7 = *(*0x20 + -0x50);\n                                *(*0x20 + -0xc0) = 0x4308ee;\n                                cVar2 = fcn.004593a0(iVar6, iVar3, param_3, param_4);\n                            }\n                            if (((iVar3 == 0) || (*(iVar3 + 0x32) == '\\0')) || (*(iVar3 + 0x31) == '\\0')) {\n                                LOCK();\n                                *0x557cd0 = *0x557cd0 + -1;\n                                iVar3 = *(iVar6 + 0x28);\n                                if (cVar2 == '\\0') {\n                                    iVar5 = iVar3;\n                                    iVar3 = *(iVar3 + 0x28);\n                                }\n                                else {\n                                    iVar5 = 0;\n                                }\n                                while ((iVar3 != 0 && (*(iVar3 + 4) == '\\0'))) {\n                                    if (*(iVar3 + 6) == '\\0') {\n                                        iVar5 = iVar3;\n                                        iVar3 = *(iVar3 + 0x28);\n                                    }\n                                    else {\n                                        *(*0x20 + -0x80) = iVar5;\n                                        if (iVar5 == 0) {\n                                            if (*0x557ed0 == 0) {\n                                                *(iVar6 + 0x28) = *(iVar3 + 0x28);\n                                                param_4 = *(*0x20 + -0x50);\n                                            }\n                                            else {\n                                                *(*0x20 + -0xc0) = 0x4309e5;\n                                                fcn.004593c0(iVar6, iVar3, param_3, iVar7);\n                                                param_4 = iVar7;\n                                            }\n                                        }\n                                        else if (*0x557ed0 == 0) {\n                                            *(iVar5 + 0x28) = *(iVar3 + 0x28);\n                                        }\n                                        else {\n                                            param_4 = iVar5 + 0x28;\n                                            *(*0x20 + -0xc0) = 0x4309b4;\n                                            fcn.004593c0(iVar6, iVar3, param_3, param_4);\n                                        }\n                                        uVar4 = *(iVar3 + 0x28);\n                                        *(*0x20 + -0x78) = uVar4;\n                                        *(*0x20 + -0xc0) = 0x4309f6;\n                                        fcn.0042f040(uVar4);\n                                        iVar6 = *(*0x20 + -0x48);\n                                        uVar4 = *(*0x20 + -0x98);\n                                        iVar7 = *(*0x20 + -0x50);\n                                        param_3 = *(*0x20 + -0x88);\n                                        iVar3 = *(*0x20 + -0x78);\n                                        iVar5 = *(*0x20 + -0x80);\n                                    }\n                                }\n                                if (*0x557ed0 == 0) {\n                                    *(iVar6 + 0x20) = *(*0x20 + -0x28);\n                                }\n                                else {\n                                    *(*0x20 + -0xc0) = 0x430a35;\n                                    fcn.004593a0(iVar6, *(*0x20 + -0x28), param_3, param_4);\n                                }\n                                while( true ) {\n                                    iVar3 = *(iVar6 + 0x20);\n                                    if (iVar3 == 0) goto code_r0x00430a90;\n                                    if (*(iVar3 + 0x31) == '\\0') break;\n                                    noname_1 = *(iVar3 + 0x18);\n                                    if (*0x557ed0 == 0) {\n                                        *(iVar6 + 0x20) = noname_1;\n                                    }\n                                    else {\n                                        *(*0x20 + -0xc0) = 0x430a5c;\n                                        fcn.004593a0(iVar6, noname_1, param_3, param_4);\n                                    }\n                                }\n                                if (iVar3 == 0) goto code_r0x00430a90;\n                                do {\n                                    *(iVar6 + 0x110) = param_3;\n                                    *(iVar6 + 0x118) = uVar4;\n                                    *(*0x20 + -0xc0) = 0x430a7f;\n                                    fcn.00456e80();\n                                    *(*0x20 + -0xc0) = 0x430a90;\n                                    fcn.00430d40();\ncode_r0x00430a90:\n                                    *(iVar6 + 0xf0) = 0;\n                                } while( true );\n                            }\n                            *(iVar6 + 0x110) = *(iVar3 + 0x28);\n                            *(iVar6 + 0x118) = *(iVar3 + 0x20);\n                            *(*0x20 + -0xc0) = 0x430abe;\n                            fcn.00456e80();\n                            *(*0x20 + -0xc0) = 0x430acf;\n                            fcn.00430d40();\ncode_r0x00430acf:\n                            *(*0x20 + -0xc0) = 0x430ae5;\n                            fcn.00430d40();\n                        }\n                        *(*0x20 + -0xc0) = 0x430aea;\n                        fcn.004324c0();\n                        *(*0x20 + -0xc0) = 0x430afb;\n                        fcn.00432dc0();\n                        *(*0x20 + -0xc0) = 0x430b05;\n                        fcn.00432540();\n                        *(*0x20 + -0xc0) = 0x430b1a;\n                        fcn.00406f60();\n                        *(*0x20 + -0xc0) = 0x430b1f;\n                        fcn.004324c0();\n                        *(*0x20 + -0xc0) = 0x430b25;\n                        fcn.00432720();\n                        *(*0x20 + -0xc0) = 0x430b2a;\n                        fcn.00432540();\n                        *(*0x20 + -0xc0) = 0x430b3b;\n                        fcn.00430d40();\n                    }\n                    *(*0x20 + -0xc0) = 0x430b45;\n                    fcn.004324c0();\n                    *(*0x20 + -0xc0) = 0x430b56;\n                    fcn.00432dc0();\n                    *(*0x20 + -0xc0) = 0x430b5b;\n                    fcn.00432540();\n                    *(*0x20 + -0xc0) = 0x430b70;\n                    fcn.00406f60();\n                    *(*0x20 + -0xc0) = 0x430b75;\n                    fcn.004324c0();\n                    *(*0x20 + -0xc0) = 0x430b7a;\n                    fcn.00432720();\n                    *(*0x20 + -0xc0) = 0x430b7f;\n                    fcn.00432540();\n                    *(*0x20 + -0xc0) = 0x430b85;\n                    fcn.004324c0();\n                    *(*0x20 + -0xc0) = 0x430b96;\n                    fcn.00432dc0();\n                    *(*0x20 + -0xc0) = 0x430b9b;\n                    fcn.00432540();\n                    iVar3 = *(*(*0x20 + -0x48) + 0x30);\n                    param_1 = *(iVar3 + 200);\n                    *(*0x20 + -0x68) = param_1;\n                    *(*0x20 + -0x90) = *(iVar3 + 0xd0);\n                    *(*0x20 + -0xc0) = 0x430bc5;\n                    fcn.004324c0();\n                    *(*0x20 + -0xc0) = 0x430bd4;\n                    fcn.00432dc0();\n                    *(*0x20 + -0xc0) = 0x430bd9;\n                    fcn.00432540();\n                    *(*0x20 + -0xc0) = 0x430bde;\n                    fcn.004324c0();\n                    *(*0x20 + -0xc0) = 0x430be5;\n                    fcn.00432720();\n                    *(*0x20 + -0xc0) = 0x430bea;\n                    fcn.00432540();\n                    *(*0x20 + -0xc0) = 0x430bfb;\n                    fcn.00430d40();\n                }\n                *(*0x20 + -0xc0) = 0x430c05;\n                fcn.004324c0();\n                *(*0x20 + -0xc0) = 0x430c16;\n                fcn.00432dc0();\n                *(*0x20 + -0xc0) = 0x430c1b;\n                fcn.00432540();\n                *(*0x20 + -0xc0) = 0x430c30;\n                fcn.00406f60();\n                *(*0x20 + -0xc0) = 0x430c35;\n                fcn.004324c0();\n                *(*0x20 + -0xc0) = 0x430c3a;\n                fcn.00432720();\n                *(*0x20 + -0xc0) = 0x430c3f;\n                fcn.00432540();\n                *(*0x20 + -0xc0) = 0x430c50;\n                fcn.00430d40();\n            }\n            *(*0x20 + -0xc0) = 0x430c55;\n            fcn.004324c0();\n            *(*0x20 + -0xc0) = 0x430c66;\n            fcn.00432dc0();\n            *(*0x20 + -0xc0) = 0x430c6b;\n            fcn.00432540();\n            *(*0x20 + -0xc0) = 0x430c85;\n            fcn.00406f60();\n            *(*0x20 + -0xc0) = 0x430c8a;\n            fcn.004324c0();\n            *(*0x20 + -0xc0) = 0x430c8f;\n            fcn.00432720();\n            *(*0x20 + -0xc0) = 0x430c94;\n            fcn.00432540();\n            unaff_RBX = 0x15;\n            *(*0x20 + -0xc0) = 0x430ca5;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x430cb5;\n        fcn.00457040();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 4682
    },
    "00430d00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00430d00(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    piVar1 = *(unaff_R14 + 0x20);\n    if ((((piVar1 != NULL) && (*(piVar1 + 0x32) == '\\0')) && (*(piVar1 + 6) == '\\0')) && (in_RAX == *piVar1)) {\n        *(piVar1 + 6) = 1;\n        return piVar1[1];\n    }\n    return 0;\n}\n",
        "token_count": 135
    },
    "00430d40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00430d40(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    \n    fcn.00456f00();\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    if (*(iVar1 + 0xc4) == 0) {\n        *(iVar1 + 0xc4) = 1;\n    }\n    fcn.00430fa0();\n    _pe_dos_header = 0;\n    return;\n}\n",
        "token_count": 115
    },
    "00431220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00431220(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (*0x5309c8 == 0) {\n        fcn.004324c0();\n        fcn.00432dc0();\n        fcn.00432540();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xc0;\n    *piVar1 = *piVar1 + 1;\n    if (*(*(unaff_R14 + 0x30) + 0xd8) < 0) {\n        *(*(unaff_R14 + 0x30) + 0xd8) = 1;\n    }\n    iVar3 = *(unaff_R14 + 0x30);\n    iVar2 = *(iVar3 + 0xdc);\n    if (iVar2 != 0) {\n        if (iVar2 != 1) {\n            if (iVar2 == 2) {\n                *(iVar3 + 0xdc) = 3;\n                fcn.004324c0();\n                fcn.00432dc0();\n                fcn.00432540();\n                fcn.0042c260();\n            }\n            fcn.0042c260();\n            return 0;\n        }\n        *(iVar3 + 0xdc) = 2;\n        fcn.004324c0();\n        fcn.00432dc0();\n        fcn.00432540();\n        return 0;\n    }\n    *(iVar3 + 0xdc) = 1;\n    iVar2 = *0x557cc8;\n    LOCK();\n    *0x557cc8 = *0x557cc8 + 1;\n    fcn.004092c0(iVar2);\n    if ((0 < *0x5580d0) || (0 < *0x5580cc)) {\n        fcn.0043df20();\n    }\n    fcn.00434ac0();\n    return 1;\n}\n",
        "token_count": 495
    },
    "004313a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.004313a0(ulong arg1, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    bool bVar6;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (*(in_RAX + 0xf0) != 0) {\n        fcn.004324c0();\n        fcn.00432dc0();\n        fcn.00432c20();\n        fcn.00432540();\n        fcn.004324c0();\n        fcn.00432dc0();\n        fcn.00432c20();\n        fcn.00432dc0();\n        fcn.00432c20();\n        fcn.00432dc0();\n        fcn.00432c20();\n        fcn.00432dc0();\n        fcn.00432540();\n    }\n    uVar4 = *0x4f0188;\n    if (*(*(unaff_R14 + 0x30) + 0xc4) < 1) {\n        bVar6 = (*0x4f0188 >> 1 & 1) != 0;\n    }\n    else {\n        bVar6 = true;\n    }\n    uVar1 = *(*(unaff_R14 + 0x30) + 0xf9);\n    uVar5 = *0x4f0188 >> 2;\n    if (uVar1 != 0) {\n        uVar5 = uVar1;\n    }\n    if (uVar5 != 0) {\n        iVar2 = (*(in_RAX + 0x30))[0x12];\n        if (**(in_RAX + 0x30) == in_RAX) {\n            if ((1 < uVar5) || (uVar5 = *(unaff_R14 + 0x30),  0 < *(uVar5 + 0xc4))) {\n                fcn.004324c0(arg1, uVar5, *0x4f0188);\n                fcn.00432dc0();\n                fcn.00432540();\n                fcn.0044f4c0(0);\n            }\n        }\n        else {\n            fcn.004324c0(arg1, uVar5, *0x4f0188);\n            fcn.00432720();\n            fcn.00432540();\n            fcn.00450240();\n            fcn.0044f4c0(0);\n        }\n        if ((*0x557c65 == '\\0') && (iVar2 != in_RAX | bVar6)) {\n            *0x557c65 = '\\x01';\n            fcn.00450480();\n        }\n    }\n    fcn.00409520();\n    LOCK();\n    iVar3 = *0x557cc8 + -1;\n    bVar6 = *0x557cc8 != 1;\n    *0x557cc8 = iVar3;\n    if (bVar6) {\n        fcn.00409300();\n        fcn.00409300();\n    }\n    return uVar4 & 1;\n}\n",
        "token_count": 759
    },
    "00431640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00431640(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    iVar1 = *(unaff_R14 + 0x30);\n    if ((in_RAX == 0) || (*(iVar1 + 0x90) != in_RAX)) {\n        return 0;\n    }\n    if ((((*(iVar1 + 0xd8) == 0) && (*(iVar1 + 0xc0) == 0)) && (*(iVar1 + 0xc4) == 0)) &&\n       ((*(iVar1 + 0xd0) == 0 && (*(iVar1 + 0xdc) == 0)))) {\n        if (((*(in_RAX + 0x90) & 0xffffefff) == 2) && (*(in_RAX + 0x70) == 0)) {\n            if (*(iVar1 + 0x2d0) != 0) {\n                return 0;\n            }\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 242
    },
    "004316c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.004316c0(void)\n\n{\n    uint64_t uVar1;\n    \n    uVar1 = fcn.004478a0();\n    if (uVar1 != 0) {\n        return uVar1 & 0xffffffffffffff00 | *(uVar1 + 0x28) == '\\x01';\n    }\n    return 0;\n}\n",
        "token_count": 82
    },
    "00431c60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00431c60(uchar param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int64_t in_RAX;\n    char unaff_BL;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_BL != '\\0') {\n                return;\n            }\n            *(*0x20 + -0x29) = param_1;\n            *(*0x20 + -0x10) = in_RAX;\n            uVar1 = *(in_RAX + 0x90);\n            if ((uVar1 == 0x1001) || (uVar1 - 0x1003 < 2)) {\n                *(*0x20 + -0x50) = 0x431cb4;\n                fcn.00434b60(uVar1 & 0xffffefff);\n                if (*(*0x20 + -0x29) != '\\0') {\n                    *(*0x20 + -0x50) = 0x431cce;\n                    fcn.004348a0(1);\n                }\n                return;\n            }\n            *(*0x20 + -0x18) = unaff_R14;\n            *(*0x20 + -0x28) = *(in_RAX + 0x90);\n            *(*0x20 + -0x20) = *(in_RAX + 0x98);\n            *(*0x20 + -0x50) = 0x431d05;\n            fcn.004324c0();\n            *(*0x20 + -0x50) = 0x431d16;\n            fcn.00432dc0();\n            *(*0x20 + -0x50) = 0x431d25;\n            fcn.00432d40();\n            *(*0x20 + -0x50) = 0x431d36;\n            fcn.00432dc0();\n            *(*0x20 + -0x50) = 0x431d45;\n            fcn.00432bc0();\n            *(*0x20 + -0x50) = 0x431d56;\n            fcn.00432dc0();\n            *(*0x20 + -0x50) = 0x431d65;\n            fcn.00432ac0();\n            *(*0x20 + -0x50) = 0x431d6a;\n            fcn.00432720();\n            *(*0x20 + -0x50) = 0x431d6f;\n            fcn.00432540();\n            uVar2 = *(*(*0x20 + -0x18) + 0x90);\n            param_1 = uVar2;\n            *(*0x20 + -0x24) = uVar2;\n            *(*0x20 + -0x20) = *(*(*0x20 + -0x18) + 0x98);\n            *(*0x20 + -0x50) = 0x431d8f;\n            fcn.004324c0();\n            *(*0x20 + -0x50) = 0x431da5;\n            fcn.00432dc0();\n            *(*0x20 + -0x50) = 0x431daf;\n            fcn.00432d40();\n            *(*0x20 + -0x50) = 0x431dc5;\n            fcn.00432dc0();\n            *(*0x20 + -0x50) = 0x431dcf;\n            fcn.00432bc0();\n            *(*0x20 + -0x50) = 0x431de5;\n            fcn.00432dc0();\n            *(*0x20 + -0x50) = 0x431df0;\n            fcn.00432ac0();\n            *(*0x20 + -0x50) = 0x431df5;\n            fcn.00432720();\n            *(*0x20 + -0x50) = 0x431dfa;\n            fcn.00432540();\n            unaff_BL = '\\x13';\n            *(*0x20 + -0x50) = 0x431e0b;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar3 + 8) = in_RAX;\n        puVar3[0x10] = unaff_BL;\n        puVar3[0x11] = param_1;\n        *(puVar3 + -8) = 0x431e1e;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        unaff_BL = puVar3[0x10];\n        param_1 = puVar3[0x11];\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1165
    },
    "00432540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00432540(void)\n\n{\n    char cVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    cVar1 = *(*(unaff_R14 + 0x30) + 0xe7);\n    *(*(unaff_R14 + 0x30) + 0xe7) = cVar1 + -1;\n    if (cVar1 == '\\x01') {\n        fcn.00409520();\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "004325a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004325a0(uint64_t arg1)\n\n{\n    uint64_t arg2;\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t arg1_00;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == 0) {\n                return;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x38) = 0x4325dd;\n            fcn.00432340(arg1);\n            if (unaff_R14 == 0) {\ncode_r0x0043267d:\n                *(*0x20 + -0x38) = 0x432691;\n                fcn.00453180(*(*0x20 + 0x18));\n                return;\n            }\n            if ((*(unaff_R14 + 0xf8) == 0) || (0 < *(*(unaff_R14 + 0x30) + 0xdc))) goto code_r0x0043267d;\n            iVar1 = *(unaff_R14 + 0x108) - *(unaff_R14 + 0x100);\n            arg1_00 = iVar1;\n            if (*(*0x20 + 0x10) < iVar1) {\n                arg1_00 = *(*0x20 + 0x10);\n            }\n            iVar2 = unaff_R14;\n            if (*(*0x20 + 8) != *(unaff_R14 + 0xf8) + (*(unaff_R14 + 0x100) & -iVar1 >> 0x3f)) {\n                *(*0x20 + -0x10) = unaff_R14;\n                *(*0x20 + -0x18) = arg1_00;\n                *(*0x20 + -0x38) = 0x43264c;\n                fcn.0045a040(arg1_00);\n                arg1_00 = *(*0x20 + -0x18);\n                iVar2 = *(*0x20 + -0x10);\n            }\n            arg2 = *(iVar2 + 0x108);\n            unaff_RBX = *(iVar2 + 0x100);\n            arg1 = arg1_00 + unaff_RBX;\n            if (arg1 <= arg2) {\n                *(iVar2 + 0x100) = arg1;\n                return;\n            }\n            *(*0x20 + -0x38) = 0x4326ad;\n            in_RAX = fcn.004597a0(arg1, arg2);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x4326c5;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 864
    },
    "00433640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00433640(uint64_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong in_RAX;\n    int64_t arg2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    uchar unaff_DIL;\n    int64_t arg3;\n    int64_t arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            arg2 = *(unaff_R14 + 0x30);\n            arg3 = *(arg2 + 0x90);\n            if ((*(arg3 + 0x90) == 2) || (*(arg3 + 0x90) == 0x1002)) {\n                if (*0x557ed0 == 0) {\n                    *(arg2 + 600) = unaff_RBX;\n                    *(arg2 + 0x250) = in_RAX;\n                }\n                else {\n                    arg4 = arg2 + 600;\n                    *(*0x20 + -0x20) = 0x4336be;\n                    fcn.004593c0(param_1, arg2, arg3, arg4);\n                    *(*0x20 + -0x20) = 0x4336ca;\n                    fcn.00459280(param_1, arg2, arg3, arg4);\n                }\n                *(arg3 + 0xb0) = param_1;\n                *(arg2 + 0x260) = unaff_DIL;\n                *(arg2 + 0x268) = unaff_RSI;\n                iVar2 = *(arg2 + 0xd8);\n                *(arg2 + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                *(*0x20 + -0x20) = 0x433716;\n                fcn.00456e80();\n                return;\n            }\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x20) = 0x433732;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        puVar3[0x18] = param_1;\n        puVar3[0x19] = unaff_DIL;\n        *(puVar3 + 0x20) = unaff_RSI;\n        *(puVar3 + -8) = 0x433750;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        param_1 = puVar3[0x18];\n        unaff_DIL = puVar3[0x19];\n        unaff_RSI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 824
    },
    "00433860": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00433860(ulong param_1, uint64_t param_2)\n\n{\n    ulong *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t arg4;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    int64_t arg4_00;\n    int64_t unaff_R14;\n    int64_t iStack40;\n    uint64_t uStack24;\n    uint64_t uStack16;\n    \n    piVar2 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar2 = *piVar2 + 1;\n    iVar9 = *(unaff_R14 + 0x30);\n    uVar7 = *(iVar9 + 0xa0);\n    uVar8 = uVar7;\n    if (*(uVar7 + 0xe18) != 0) goto code_r0x004338c5;\n    arg4 = unaff_R14;\n    fcn.00409300();\n    param_2 = uVar7 + 0xe10;\n    iStack40 = iVar9;\n    uStack24 = param_2;\n    uStack16 = uVar7;\n    do {\n        while ((uVar8 = *0x504860,  uVar10 = *(uVar7 + 0xe20) >> 1,  *(uVar7 + 0xe18) < uVar10 &&\n               (uVar10 = *0x504860,  *0x504860 != 0))) {\n            if (*0x557ed0 == 0) {\n                puVar1 = *0x504860 + 8;\n                *0x504860 = *(*0x504860 + 8);\n                *puVar1 = 0;\n            }\n            else {\n                fcn.00459420(uVar7, param_2, *0x504860);\n                fcn.00459420(uVar7, param_2, uVar8);\n            }\n            arg4 = *(uVar7 + 0xe18);\n            iVar9 = *(uVar7 + 0xe10);\n            iVar4 = iVar9;\n            if (*(uVar7 + 0xe20) < arg4 + 1U) {\n                uVar10 = uVar8;\n                arg4_00 = arg4;\n                iVar4 = fcn.004425c0(arg4);\n                *(uStack16 + 0xe20) = arg4;\n                uVar7 = uStack16;\n                param_2 = uStack24;\n                if (*0x557ed0 == 0) {\n                    *(uStack16 + 0xe10) = iVar4;\n                    arg4 = iVar9;\n                }\n                else {\n                    iVar4 = fcn.00459280(arg4, uStack16, uVar10, arg4_00);\n                    arg4 = iVar9;\n                }\n            }\n            *(uVar7 + 0xe18) = arg4 + 1;\n            if (*0x557ed0 == 0) {\n                *(iVar4 + arg4 * 8) = uVar8;\n            }\n            else {\n                fcn.00459400(uVar7, param_2, uVar8, arg4);\n            }\n        }\n        fcn.00409520();\n        iVar9 = iStack40;\n        uVar8 = uStack16;\n        if (*(uStack16 + 0xe18) == 0) {\n            uVar5 = fcn.0040b3c0();\n            param_2 = *(uStack16 + 0xe18);\n            uVar7 = *(uStack16 + 0xe10);\n            uVar6 = uVar7;\n            if (*(uStack16 + 0xe20) < param_2 + 1) {\n                uVar6 = fcn.004425c0(param_2);\n                *(uStack16 + 0xe20) = param_2;\n                if (*0x557ed0 == 0) {\n                    *(uStack16 + 0xe10) = uVar6;\n                    param_2 = uVar7;\n                }\n                else {\n                    uVar6 = fcn.00459280(param_2, uStack16, uVar10, arg4);\n                    param_2 = uVar7;\n                }\n            }\n            *(uVar8 + 0xe18) = param_2 + 1;\n            if (*0x557ed0 == 0) {\n                *(uVar6 + param_2 * 8) = uVar5;\n            }\n            else {\n                fcn.00459280(uVar8, param_2, uVar10, arg4);\n            }\n        }\ncode_r0x004338c5:\n        uVar7 = *(uVar8 + 0xe18);\n        arg4 = *(uVar8 + 0xe10);\n        uVar10 = uVar7 - 1;\n        if (uVar10 < uVar7) {\n            iVar4 = *(arg4 + -8 + uVar7 * 8);\n            if (*0x557ed0 == 0) {\n                *(arg4 + -8 + uVar7 * 8) = 0;\n            }\n            else {\n                arg4 = 0;\n                uVar10 = fcn.00459420(uVar7, param_2, uVar8);\n            }\n            param_2 = *(uVar8 + 0xe20);\n            if (uVar10 <= param_2) {\n                *(uVar8 + 0xe18) = uVar10;\n                if (*(iVar4 + 0x18) == 0) {\n                    iVar3 = *(iVar9 + 0xd8);\n                    *(iVar9 + 0xd8) = iVar3 + -1;\n                    if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                    }\n                    return iVar4;\n                }\n                uVar10 = fcn.00430d40();\n            }\n            fcn.004597a0(uVar10, param_2);\n            uVar7 = uVar10;\n        }\n        fcn.00459720(uVar7);\n    } while( true );\n}\n",
        "token_count": 1419
    },
    "00433b60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00433b60(void)\n\n{\n    uint64_t arg1;\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t arg1_00;\n    int64_t arg2;\n    int64_t arg2_00;\n    int64_t arg3;\n    int64_t iVar7;\n    int64_t iVar8;\n    uint64_t arg1_01;\n    int64_t unaff_R14;\n    \n    if (*(in_RAX + 0x18) == 0) {\n        if (*(in_RAX + 0x34) == '\\0') {\n            if (*(in_RAX + 8) == 0) {\n                if (*(in_RAX + 0x10) == 0) {\n                    if (*(in_RAX + 0x40) == 0) {\n                        if (*(in_RAX + 0x50) == 0) {\n                            if (*(unaff_R14 + 0x88) == 0) {\n                                piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                                *piVar1 = *piVar1 + 1;\n                                arg3 = *(unaff_R14 + 0x30);\n                                arg2 = *(arg3 + 0xa0);\n                                if (*(arg2 + 0xe18) == *(arg2 + 0xe20)) {\n                                    iVar5 = 0;\n                                    iVar6 = 0;\n                                    iVar7 = arg3;\n                                    iVar4 = arg2;\n                                    while( true ) {\n                                        arg1_01 = *(iVar4 + 0xe18);\n                                        if (arg1_01 <= *(iVar4 + 0xe20) >> 1) break;\n                                        arg1 = arg1_01 - 1;\n                                        if (arg1_01 <= arg1) {\ncode_r0x00433e11:\n                                            fcn.00459720(arg1_01);\n                                            goto code_r0x00433e1c;\n                                        }\n                                        iVar8 = *(*(iVar4 + 0xe10) + -8 + arg1_01 * 8);\n                                        if (*0x557ed0 == 0) {\n                                            *(*(iVar4 + 0xe10) + -8 + arg1_01 * 8) = 0;\n                                            arg1_00 = iVar5;\n                                            arg2_00 = iVar6;\n                                            iVar5 = iVar8;\n                                        }\n                                        else {\n                                            fcn.004593c0(iVar5, iVar6, iVar7, iVar4);\n                                            arg1_00 = iVar5;\n                                            arg2_00 = iVar6;\n                                            iVar5 = iVar8;\n                                        }\n                                        if (*(iVar4 + 0xe20) < arg1) {\n                                            fcn.004597a0(arg1, *(iVar4 + 0xe20));\n                                            goto code_r0x00433e11;\n                                        }\n                                        *(iVar4 + 0xe18) = arg1;\n                                        iVar6 = iVar5;\n                                        if (arg2_00 != 0) {\n                                            if (*0x557ed0 == 0) {\n                                                *(arg1_00 + 8) = iVar5;\n                                                iVar6 = arg2_00;\n                                            }\n                                            else {\n                                                fcn.004593c0(arg1_00, arg2_00, iVar7, iVar4);\n                                                iVar6 = arg2_00;\n                                            }\n                                        }\n                                    }\n                                    fcn.00409300();\n                                    if (*0x557ed0 == 0) {\n                                        *(iVar5 + 8) = *0x504860;\n                                        *0x504860 = iVar6;\n                                    }\n                                    else {\n                                        fcn.004593a0(iVar5, *0x504860, iVar7, iVar4);\n                                        fcn.00459380(iVar6);\n                                    }\n                                    fcn.00409520();\n                                }\n                                iVar6 = *(arg2 + 0xe18);\n                                iVar7 = *(arg2 + 0xe10);\n                                iVar4 = iVar7;\n                                if (*(arg2 + 0xe20) < iVar6 + 1U) {\n                                    iVar5 = arg3;\n                                    iVar8 = arg2;\n                                    iVar4 = fcn.004425c0(iVar6);\n                                    *(arg2 + 0xe20) = iVar6;\n                                    if (*0x557ed0 == 0) {\n                                        *(arg2 + 0xe10) = iVar4;\n                                        iVar6 = iVar7;\n                                    }\n                                    else {\n                                        iVar4 = fcn.00459280(iVar6, arg2, iVar5, iVar8);\n                                        iVar6 = iVar7;\n                                    }\n                                }\n                                *(arg2 + 0xe18) = iVar6 + 1;\n                                if (*0x557ed0 == 0) {\n                                    *(iVar4 + iVar6 * 8) = in_RAX;\n                                }\n                                else {\n                                    fcn.00459280(iVar6, iVar6 + 1, arg3, arg2);\n                                }\n                                iVar2 = *(arg3 + 0xd8);\n                                *(arg3 + 0xd8) = iVar2 + -1;\n                                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                                }\n                                return;\n                            }\ncode_r0x00433e1c:\n                            fcn.00430d40();\n                        }\n                        fcn.00430d40();\n                    }\n                    fcn.00430d40();\n                }\n                fcn.00430d40();\n            }\n            fcn.00430d40();\n        }\n        fcn.00430d40();\n    }\n    fcn.00430d40();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 1307
    },
    "00434000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00434000(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t arg1;\n    uint64_t arg1_00;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x90) != 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x58) = 0x43403b;\n                fcn.00409300();\n                uVar2 = *0x503f20;\n                arg1_00 = *0x503f28;\n                uVar3 = *0x503f20;\n                if (*0x503f30 < *0x503f28 + 1) {\n                    *(*0x20 + -0x58) = 0x434065;\n                    arg1 = *0x503f28;\n                    uVar3 = fcn.004425c0(*0x503f28);\n                    arg1_00 = uVar2;\n                    uVar2 = uVar3;\n                    *0x503f30 = arg1;\n                    if (*0x557ed0 != 0) {\n                        *(*0x20 + -0x58) = 0x43408a;\n                        uVar3 = fcn.00459280(arg1, param_2, param_3, param_4);\n                        uVar2 = *0x503f20;\n                    }\n                }\n                *0x503f20 = uVar2;\n                *0x503f28 = arg1_00 + 1;\n                if (*0x557ed0 == 0) {\n                    param_2 = *(*0x20 + 8);\n                    *(uVar3 + arg1_00 * 8) = param_2;\n                }\n                else {\n                    param_2 = *(*0x20 + 8);\n                    *(*0x20 + -0x58) = 0x4340bd;\n                    fcn.004593a0(arg1_00, param_2, param_3, param_4);\n                }\n                if (*0x503f28 != 0) {\n                    uVar2 = *0x5035e8;\n                    if ((*0x5035e8 != *0x503f20) && (uVar2 = *0x503f20,  *0x557ed0 != '\\0')) {\n                        *(*0x20 + -0x10) = *0x503f20;\n                        *(*0x20 + -0x58) = 0x4340f4;\n                        fcn.00402960();\n                        uVar2 = *(*0x20 + -0x10);\n                    }\n                    *0x5035e8 = uVar2;\n                    uVar1 = *0x557d08;\n                    *0x557d08 = *0x503f28;\n                    *(*0x20 + -0x58) = 0x434125;\n                    fcn.00409520(uVar1);\n                    return;\n                }\n                *(*0x20 + -0x58) = 0x434136;\n                fcn.00459720(0);\n            }\n            *(*0x20 + -0x58) = 0x434147;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x434152;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 935
    },
    "004346c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004346c0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t *piVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int64_t in_RAX;\n    ulong uVar4;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (**(unaff_R14 + 0x30) != unaff_R14) {\n        fcn.0044fd80(0x20);\n    }\n    fcn.00409300();\n    if (unaff_RBX < 0) {\n        uVar4 = fcn.00434660();\n        *(in_RAX + 0xb8) = uVar4;\n    }\n    else {\n        *(in_RAX + 0xb8) = unaff_RBX;\n    }\n    arg2 = in_RAX;\n    uVar2 = fcn.004591e0();\n    *(in_RAX + 0xf0) = uVar2;\n    fcn.00459140(in_RAX, arg2);\n    uVar3 = fcn.004591e0();\n    *(in_RAX + 0xf4) = uVar3;\n    if ((*(in_RAX + 0xf0) | uVar3) == 0) {\n        *(in_RAX + 0xf4) = 1;\n    }\n    piVar1 = *(in_RAX + 0x50);\n    if (piVar1 != NULL) {\n        arg2 = *piVar1 + 0x13a0;\n        piVar1[3] = arg2;\n    }\n    if (*0x557ed0 == 0) {\n        *(in_RAX + 0x128) = *0x5035f0;\n    }\n    else {\n        fcn.00459380();\n    }\n    if (*0x557ed0 != '\\0') {\n        fcn.00402960();\n    }\n    *0x5035f0 = in_RAX;\n    fcn.00409520();\n    uVar4 = fcn.0040b3c0();\n    if (*0x557ed0 == 0) {\n        *(in_RAX + 0x110) = uVar4;\n    }\n    else {\n        fcn.00459280(in_RAX, arg2, param_3, param_4);\n    }\n    return;\n}\n",
        "token_count": 591
    },
    "004348a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004348a0(uchar param_1)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    ulong uVar5;\n    int64_t in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x31) = param_1;\n            *(*0x20 + 8) = in_RAX;\n            if (*0x509e70 != '\\0') {\n                *(*0x20 + -0x58) = 0x4348cf;\n                fcn.0044caa0();\n                in_RAX = *(*0x20 + 8);\n            }\n            uVar2 = *(in_RAX + 0x90);\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            uVar5 = *(unaff_R14 + 0x30);\n            if ((uVar2 & 0xffffefff) == 4) {\n                *(*0x20 + -0x10) = unaff_R14;\n                *(*0x20 + -0x20) = uVar5;\n                *(*0x20 + -0x58) = 0x434911;\n                fcn.00435000(1);\n                *(*0x20 + -0x58) = 0x434930;\n                fcn.0043eda0(*(*0x20 + -0x31));\n                *(*0x20 + -0x58) = 0x434935;\n                fcn.00437620();\n                iVar3 = *(*(*0x20 + -0x20) + 0xd8);\n                *(*(*0x20 + -0x20) + 0xd8) = iVar3 + -1;\n                if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(*0x20 + -0x18) = unaff_R14;\n            *(*0x20 + -0x30) = *(in_RAX + 0x90);\n            *(*0x20 + -0x28) = *(in_RAX + 0x98);\n            *(*0x20 + -0x58) = 0x43498c;\n            fcn.004324c0();\n            *(*0x20 + -0x58) = 0x43499d;\n            fcn.00432dc0();\n            *(*0x20 + -0x58) = 0x4349a7;\n            fcn.00432d40();\n            *(*0x20 + -0x58) = 0x4349b8;\n            fcn.00432dc0();\n            *(*0x20 + -0x58) = 0x4349c5;\n            fcn.00432bc0();\n            *(*0x20 + -0x58) = 0x4349d6;\n            fcn.00432dc0();\n            *(*0x20 + -0x58) = 0x4349e5;\n            fcn.00432ac0();\n            *(*0x20 + -0x58) = 0x4349ea;\n            fcn.00432720();\n            *(*0x20 + -0x58) = 0x4349ef;\n            fcn.00432540();\n            uVar4 = *(*(*0x20 + -0x18) + 0x90);\n            param_1 = uVar4;\n            *(*0x20 + -0x2c) = uVar4;\n            *(*0x20 + -0x28) = *(*(*0x20 + -0x18) + 0x98);\n            *(*0x20 + -0x58) = 0x434a0f;\n            fcn.004324c0();\n            *(*0x20 + -0x58) = 0x434a25;\n            fcn.00432dc0();\n            *(*0x20 + -0x58) = 0x434a2f;\n            fcn.00432d40();\n            *(*0x20 + -0x58) = 0x434a45;\n            fcn.00432dc0();\n            *(*0x20 + -0x58) = 0x434a4f;\n            fcn.00432bc0();\n            *(*0x20 + -0x58) = 0x434a65;\n            fcn.00432dc0();\n            *(*0x20 + -0x58) = 0x434a70;\n            fcn.00432ac0();\n            *(*0x20 + -0x58) = 0x434a75;\n            fcn.00432720();\n            *(*0x20 + -0x58) = 0x434a7a;\n            fcn.00432540();\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x58) = 0x434a8b;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        puVar6[0x18] = param_1;\n        *(puVar6 + -8) = 0x434a9f;\n        fcn.00457040();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        param_1 = puVar6[0x18];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1401
    },
    "00435000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t * fcn.00435000(ulong arg1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int64_t in_RAX;\n    int64_t *piVar3;\n    uint32_t unaff_EBX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    ulong uStack64;\n    int64_t *piStack40;\n    int64_t iStack32;\n    uchar auStack24 [16];\n    \n    if ((((unaff_EBX >> 0xc & 1) != 0) || ((arg1 >> 0xc & 1) != 0)) || (unaff_EBX == arg1)) {\n        auStack24 = CONCAT412(arg1, CONCAT48(unaff_EBX, 0x435380));\n        uStack64 = auStack24;\n        fcn.00456f00();\n    }\n    iVar8 = 0;\n    piVar3 = NULL;\n    while( true ) {\n        LOCK();\n        if (unaff_EBX == *(in_RAX + 0x90)) break;\n        if ((unaff_EBX == 4) && (*(in_RAX + 0x90) == 1)) {\n            fcn.00430d40();\n            pcVar1 = swi(3);\n            piVar3 = (*pcVar1)();\n            return piVar3;\n        }\n        if (iVar8 == 0) {\n            fcn.0045afe0();\n            piVar3 = uStack64 + 0x271;\n        }\n        fcn.0045afe0();\n        piStack40 = piVar3;\n        iStack32 = iVar8;\n        if (uStack64 < piVar3) {\n            uVar5 = 0;\n            while ((piVar3 = piStack40,  uVar5 < 10 && (*(in_RAX + 0x90) != unaff_EBX))) {\ncode_r0x004352fc:\n                uStack64 = CONCAT44(uStack64._4_4_, 1);\n                fcn.00458e20();\n                uVar5 = uVar5 + 1;\n            }\n        }\n        else {\n            uStack64 = 0x48a658;\n            fcn.00456f00();\n            fcn.0045afe0();\n            piVar3 = 0x48b01c;\n        }\n        iVar8 = iStack32 + 1;\n    }\n    *(in_RAX + 0x90) = arg1;\n    uVar2 = unaff_EBX;\n    if (unaff_EBX == 2) {\n        if ((*(in_RAX + 0xbd) & 7) == 0) {\n            *(in_RAX + 0xbc) = 1;\n        }\n        uVar2 = *(in_RAX + 0xbd) + 1;\n        *(in_RAX + 0xbd) = uVar2;\n    }\n    piVar3 = uVar2;\n    if (*(in_RAX + 0xbc) != '\\0') {\n        fcn.0045afe0();\n        piVar3 = uStack64;\n        if (unaff_EBX == 1) {\n            piVar3 = uStack64 - *(in_RAX + 0xc0);\n            *(in_RAX + 200) = *(in_RAX + 200) + piVar3;\n            *(in_RAX + 0xc0) = 0;\n        }\n        if (arg1 == 1) {\n            *(in_RAX + 0xc0) = uStack64;\n        }\n        else if (arg1 == 2) {\n            *(in_RAX + 0xbc) = 0;\n            uVar5 = *(in_RAX + 200);\n            if (uVar5 < 0) {\n                LOCK();\n                piVar3 = *0x505f88;\n                *0x505f88 = *0x505f88 + 1;\n            }\n            else {\n                if (uVar5 < 0x10) {\n                    iVar8 = 0;\n                    uVar7 = uVar5;\n                }\n                else {\n                    iVar6 = 0x3f;\n                    if (uVar5 != 0) {\n                        for (; uVar5 >> iVar6 == 0; iVar6 = iVar6 + -1) {\n                        }\n                    }\n                    if (uVar5 == 0) {\n                        iVar6 = -1;\n                    }\n                    iVar8 = iVar6 + -3;\n                    if (iVar8 * 0x10 < 0x2d0) {\n                        iVar6 = uVar5 >> ((iVar6 - 4U | ~-(iVar6 - 4U < 0x40)) & 0x3f);\n                        iVar4 = ((iVar6 >> 0x3f) >> 0x3c) + iVar6 >> 4;\n                        uVar5 = iVar4 * 0x10;\n                        uVar7 = iVar6 + iVar4 * -0x10;\n                    }\n                    else {\n                        iVar8 = 0x2c;\n                        uVar7 = 0xf;\n                    }\n                }\n                uVar7 = iVar8 * 0x10 + uVar7;\n                if (0x2cf < uVar7) {\n                    fcn.00459740(0x2d0);\n                    goto code_r0x004352fc;\n                }\n                piVar3 = uVar7 * 8 + 0x504908;\n                LOCK();\n                *piVar3 = *piVar3 + 1;\n            }\n            *(in_RAX + 200) = 0;\n        }\n    }\n    return piVar3;\n}\n",
        "token_count": 1270
    },
    "00435420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.00435420(ulong arg1)\n\n{\n    int64_t in_RAX;\n    int32_t unaff_EBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((unaff_EBX == 2) && (arg1 == 0x1009)) {\n                do {\n                    LOCK();\n                } while (*(in_RAX + 0x90) != 2);\n                *(in_RAX + 0x90) = 0x1009;\n                return 2;\n            }\n            unaff_EBX = 0x10;\n            *(*0x20 + -0x20) = 0x435485;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_EBX;\n        *(puVar1 + 0x14) = arg1;\n        *(puVar1 + -8) = 0x435498;\n        fcn.00457040();\n        in_RAX = *(puVar1 + 8);\n        unaff_EBX = *(puVar1 + 0x10);\n        arg1._0_4_ = *(puVar1 + 0x14);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 399
    },
    "004357c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004357c0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uchar in_AL;\n    ulong uVar4;\n    int64_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \ncode_r0x004357c0:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0x58;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_AL;\n        piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n        *piVar1 = *piVar1 + 1;\n        *(*0x20 + -0x20) = *(unaff_R14 + 0x30);\n        if (*0x557cb8 != 0) {\n            *(*0x20 + -0x60) = 0x435805;\n            uVar4 = fcn.0042a4a0();\n            *(*0x20 + -0x28) = uVar4;\n            *(*0x20 + -0x60) = 0x435814;\n            fcn.00438ea0();\n        }\n        *(*0x20 + -0x60) = 0x435825;\n        fcn.00409300();\n        if (*0x557cc4 != 0) {\n            *0x557cc4 = 0;\n        }\n        *(*0x20 + -0x60) = 0x43584b;\n        uVar4 = fcn.0043c780();\n        *(*0x20 + -0x18) = uVar4;\n        *0x5048a0 = 0;\n        if (*0x5048b0 != 0) {\n            *0x5048b0 = 0;\n            *(*0x20 + -0x60) = 0x435879;\n            fcn.00409600();\n        }\n        *(*0x20 + -0x60) = 0x435887;\n        fcn.00409520();\n        iVar5 = *(*0x20 + -0x18);\n        do {\n            if (iVar5 == 0) {\n                *(*0x20 + -0x60) = 0x4358f5;\n                fcn.0045afe0();\n                iVar5 = **(in_GS_OFFSET + 0x28);\n                *(*0x20 + -0x30) = *(*0x20 + -0x58);\n                if (*(*0x20 + 8) != '\\0') {\n                    *(*0x20 + -0x60) = 0x435934;\n                    fcn.0044b680(0);\n                }\n                *(*0x20 + -0x60) = 0x435939;\n                fcn.00437620();\n                iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(iVar5 + 0xb1) != '\\0')) {\n                    *(iVar5 + 0x10) = 0xfffffffffffffade;\n                }\n                return *(*0x20 + -0x30);\n            }\n            iVar3 = *(iVar5 + 0x38);\n            *(*0x20 + -0x10) = *(iVar5 + 8);\n            if (iVar3 == 0) {\n                *(*0x20 + -0x60) = 0x4358ed;\n                fcn.00436a00(0xffffffffffffffff);\n            }\n            else {\n                *(iVar5 + 0x38) = 0;\n                if (*(iVar3 + 0xa8) != 0) goto code_r0x00435974;\n                *(iVar3 + 0xa8) = iVar5;\n                *(*0x20 + -0x60) = 0x4358da;\n                fcn.00409600();\n            }\n            iVar5 = *(*0x20 + -0x10);\n        } while( true );\n    }\n    goto code_r0x00435986;\ncode_r0x00435974:\n    *(*0x20 + -0x60) = 0x435985;\n    in_AL = fcn.00430d40();\ncode_r0x00435986:\n    puVar6[8] = in_AL;\n    *(puVar6 + -8) = 0x43598f;\n    fcn.00457040();\n    in_AL = puVar6[8];\n    *0x20 = puVar6;\n    goto code_r0x004357c0;\n}\n",
        "token_count": 1117
    },
    "00435b40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00435b40(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (*0x557c64 == '\\0') {\n        *0x557c64 = '\\x01';\n        fcn.00436640();\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "00435be0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00435be0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    uchar in_AL;\n    int64_t *piVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar4 = *(unaff_R14 + 0x30);\n            if (iVar4 != 0x5043a0) {\n                *(*0x20 + 8) = in_AL;\n                *(*0x20 + -0x10) = iVar4;\n                *(*0x20 + -0x28) = 0x435c1a;\n                fcn.0042d280();\n                if (*(*(*0x20 + -0x10) + 0x50) != 0) {\n                    *(*0x20 + -0x28) = 0x435c34;\n                    fcn.00443680();\n                    if (*0x557ed0 == 0) {\n                        *(*(*0x20 + -0x10) + 0x50) = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x435c5c;\n                        fcn.004593a0(*(*0x20 + -0x10), 0, param_3, param_4);\n                    }\n                }\n                *(*0x20 + -0x28) = 0x435c69;\n                fcn.00409300();\n                iVar4 = *(*0x20 + -0x10);\n                piVar3 = 0x5035f0;\n                while (iVar2 = *piVar3,  iVar2 != 0) {\n                    if (iVar2 == iVar4) {\n                        iVar2 = *(iVar4 + 0x128);\n                        if (*0x557ed0 == 0) {\n                            *piVar3 = iVar2;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x435cac;\n                            fcn.004593a0(iVar4, iVar2, param_3, param_4);\n                        }\n                        uVar1 = *(*0x20 + 8);\n                        if (uVar1 == 0) {\n                            *(iVar4 + 0xec) = 1;\n                            if (*0x557ed0 == 0) {\n                                *(iVar4 + 0x278) = *0x504898;\n                                *0x504898 = iVar4;\n                            }\n                            else {\n                                *(*0x20 + -0x28) = 0x435cee;\n                                fcn.004593c0(iVar4, uVar1, param_3, param_4);\n                                *(*0x20 + -0x28) = 0x435cfa;\n                                fcn.00459380();\n                            }\n                        }\n                        *(*0x20 + -0x28) = 0x435d08;\n                        fcn.00409520();\n                        iVar4 = *0x557dc8;\n                        LOCK();\n                        *0x557dc8 = *0x557dc8 + *(*(*0x20 + -0x10) + 0x100);\n                        *(*0x20 + -0x28) = 0x435d25;\n                        fcn.0043d140(*(*0x20 + -0x10), iVar4);\n                        *(*0x20 + -0x28) = 0x435d2a;\n                        fcn.00437340();\n                        *(*0x20 + -0x28) = 0x435d38;\n                        fcn.00409300();\n                        *0x5047e0 = *0x5047e0 + 1;\n                        *(*0x20 + -0x28) = 0x435d45;\n                        fcn.0043d300();\n                        *(*0x20 + -0x28) = 0x435d53;\n                        fcn.00409520();\n                        *(*0x20 + -0x28) = 0x435d5d;\n                        fcn.0042d320();\n                        if (*(*0x20 + 8) != '\\0') {\n                            return;\n                        }\n                        *(*0x20 + -0x28) = 0x435d85;\n                        fcn.0042ce80(*(*0x20 + -0x10));\n                        return;\n                    }\n                    piVar3 = iVar2 + 0x128;\n                }\n                *(*0x20 + -0x28) = 0x435da5;\n                fcn.00430d40();\n            }\n            *(*0x20 + -0x28) = 0x435daa;\n            fcn.0043d140();\n            *(*0x20 + -0x28) = 0x435daf;\n            fcn.00437340();\n            *(*0x20 + -0x28) = 0x435dbd;\n            fcn.00409300();\n            *0x5047e0 = *0x5047e0 + 1;\n            *(*0x20 + -0x28) = 0x435dc9;\n            fcn.0043d300();\n            *(*0x20 + -0x28) = 0x435dd7;\n            fcn.00409520();\n            *(*0x20 + -0x28) = 0x435ddc;\n            fcn.00435b80();\n            *(*0x20 + -0x28) = 0x435ded;\n            in_AL = fcn.00430d40();\n        }\n        puVar5[8] = in_AL;\n        *(puVar5 + -8) = 0x435df7;\n        fcn.00457040();\n        in_AL = puVar5[8];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1400
    },
    "00435e20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00435e20(ulong param_1, ulong param_2, uint64_t param_3, ulong param_4)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    code *pcVar6;\n    char cVar7;\n    ulong in_RAX;\n    int64_t iVar8;\n    ulong arg1;\n    int64_t iVar9;\n    ulong arg2;\n    int64_t iVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t iVar12;\n    int64_t unaff_R14;\n    bool bVar13;\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar11 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x28) = unaff_R14;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            arg1 = *(*(unaff_R14 + 0x30) + 0xa0);\n            arg2 = *(*(*0x20 + -0x28) + 0x30);\n            *(*0x20 + -0x38) = arg2;\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + -0x68) = 0x435e79;\n            fcn.00409300();\n            if (*0x5048d0 == 0) {\n                *0x5048d0 = *0x557cb0 + -1;\n                if (*0x557ed0 == 0) {\n                    *0x5048c8 = *(*0x20 + 8);\n                }\n                else {\n                    *(*0x20 + -0x68) = 0x435ebc;\n                    fcn.00459280(arg1, arg2, param_3, param_4);\n                }\n                iVar10 = *0x503f48;\n                iVar9 = *0x503f40;\n                iVar8 = *(*0x20 + -0x10);\n                for (iVar12 = 0; iVar12 < iVar10; iVar12 = iVar12 + 1) {\n                    iVar5 = *(iVar9 + iVar12 * 8);\n                    if (iVar8 != iVar5) {\n                        puVar2 = iVar5 + 0x26d0;\n                        uVar3 = *puVar2;\n                        *puVar2 = 1;\n                        param_3 = uVar3;\n                    }\n                }\n                *(*0x20 + -0x68) = 0x435efb;\n                fcn.0043dde0();\n                for (iVar8 = *0x5047f0; iVar8 != 0; iVar8 = *(iVar8 + 8)) {\n                    LOCK();\n                    if (*(iVar8 + 0x26d0) == 1) {\n                        *(iVar8 + 0x26d0) = 0;\n                        *(*0x20 + -0x18) = iVar8;\n                        pcVar6 = **(*0x20 + 8);\n                        *(*0x20 + -0x68) = 0x435f3a;\n                        (*pcVar6)();\n                        *0x5048d0 = *0x5048d0 + -1;\n                        iVar8 = *(*0x20 + -0x18);\n                    }\n                }\n                *(*0x20 + -0x4c) = *0x5048d0;\n                *(*0x20 + -0x68) = 0x435f65;\n                fcn.00409520();\n                pcVar6 = **(*0x20 + 8);\n                *(*0x20 + -0x68) = 0x435f74;\n                (*pcVar6)();\n                *(*0x20 + -0x20) = *0x503f40;\n                *(*0x20 + -0x40) = *0x503f48;\n                iVar9 = *0x503f40;\n                iVar10 = *0x503f48;\n                for (iVar8 = 0; iVar8 < iVar10; iVar8 = iVar8 + 1) {\n                    iVar12 = *(iVar9 + iVar8 * 8);\n                    if (*(iVar12 + 4) == 2) {\n                        if (*(iVar12 + 0x26d0) == 1) {\n                            LOCK();\n                            bVar13 = *(iVar12 + 4) == 2;\n                            if (bVar13) {\n                                *(iVar12 + 4) = 0;\n                            }\n                        }\n                        else {\n                            bVar13 = false;\n                        }\n                    }\n                    else {\n                        bVar13 = false;\n                    }\n                    if (bVar13) {\n                        *(*0x20 + -0x48) = iVar8;\n                        if (*0x509e70 != '\\0') {\n                            *(*0x20 + -0x30) = iVar12;\n                            *(*0x20 + -0x68) = 0x435ff8;\n                            fcn.0044cca0();\n                            *(*0x20 + -0x68) = 0x436005;\n                            fcn.0044c500();\n                            iVar12 = *(*0x20 + -0x30);\n                        }\n                        *(iVar12 + 0x14) = *(iVar12 + 0x14) + 1;\n                        *(*0x20 + -0x68) = 0x436015;\n                        fcn.00437340();\n                        iVar9 = *(*0x20 + -0x20);\n                        iVar10 = *(*0x20 + -0x40);\n                        iVar8 = *(*0x20 + -0x48);\n                    }\n                    param_3 = 0;\n                }\n                if (0 < *(*0x20 + -0x4c)) {\n                    while( true ) {\n                        *(*0x20 + -0x68) = 0x43604c;\n                        cVar7 = fcn.00409a60();\n                        if (cVar7 != '\\0') break;\n                        *(*0x20 + -0x68) = 0x43603b;\n                        fcn.0043dde0();\n                    }\n                    *0x5048d8 = 0;\n                }\n                if (*0x5048d0 == 0) {\n                    iVar8 = 0;\n                    while( true ) {\n                        if (*0x503f48 <= iVar8) {\n                            *(*0x20 + -0x68) = 0x4360a5;\n                            fcn.00409300();\n                            if (*0x557ed0 == 0) {\n                                *0x5048c8 = 0;\n                            }\n                            else {\n                                *(*0x20 + -0x68) = 0x4360c9;\n                                fcn.00459380(0);\n                            }\n                            *(*0x20 + -0x68) = 0x4360d7;\n                            fcn.00409520();\n                            iVar4 = *(*(*0x20 + -0x38) + 0xd8);\n                            *(*(*0x20 + -0x38) + 0xd8) = iVar4 + -1;\n                            if ((iVar4 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                            }\n                            return;\n                        }\n                        if (*(*(*0x503f40 + iVar8 * 8) + 0x26d0) != 0) break;\n                        iVar8 = iVar8 + 1;\n                    }\n                    *(*0x20 + -0x68) = 0x43611e;\n                    fcn.00430d40();\n                }\n                *(*0x20 + -0x68) = 0x43612f;\n                fcn.00430d40();\n            }\n            *(*0x20 + -0x68) = 0x436145;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + -8) = 0x436150;\n        fcn.0045b6e0();\n        in_RAX = *(puVar11 + 8);\n        *0x20 = puVar11;\n    } while( true );\n}\n",
        "token_count": 1939
    },
    "00436160": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00436160(void)\n\n{\n    uint32_t *puVar1;\n    uint64_t uVar2;\n    int32_t iVar3;\n    int64_t unaff_R14;\n    bool bVar4;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    LOCK();\n    puVar1 = *(*(unaff_R14 + 0x30) + 0xa0) + 0x26d0;\n    if (*puVar1 != 1) {\n        return *puVar1;\n    }\n    *puVar1 = 0;\n    (***0x5048c8)();\n    fcn.00409300();\n    iVar3 = *0x5048d0 + -1;\n    bVar4 = *0x5048d0 == 1;\n    *0x5048d0 = iVar3;\n    if (bVar4) {\n        fcn.00409600();\n    }\n    uVar2 = fcn.00409520();\n    return uVar2;\n}\n",
        "token_count": 260
    },
    "00436220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.00436220(ulong arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    int64_t *piVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    int64_t arg2;\n    int64_t iVar6;\n    int64_t unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    int64_t iStack40;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    arg2 = *(unaff_R14 + 0x30);\n    iVar6 = unaff_R14;\n    if (*(arg2 + 0xa0) == 0) {\n        fcn.0043cfc0();\n    }\n    if (*0x504898 != 0) {\n        fcn.00409300(arg1);\n        iStack40 = *0x504898;\n        iVar4 = 0;\n        while (iStack40 != 0) {\n            if (*(iStack40 + 0xec) == 0) {\n                fcn.00456f00();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                iStack40 = *(iStack40 + 0x278);\n            }\n            else {\n                arg2 = *(iStack40 + 0x278);\n                if (*0x557ed0 == 0) {\n                    *(iStack40 + 0x278) = iVar4;\n                    iVar4 = iStack40;\n                    iStack40 = arg2;\n                }\n                else {\n                    fcn.00459280(iStack40, arg2, in_R8, in_R9);\n                    iVar4 = iStack40;\n                    iStack40 = arg2;\n                }\n            }\n        }\n        if (*0x557ed0 != 0) {\n            fcn.00459280(0, arg2, in_R8, in_R9);\n            iVar4 = *0x504898;\n        }\n        *0x504898 = iVar4;\n        fcn.00409520();\n    }\n    piVar3 = fcn.0040b3c0();\n    if (*0x557ed0 == 0) {\n        piVar3[0x11] = unaff_RBX;\n    }\n    else {\n        piVar3 = fcn.00459380();\n    }\n    fcn.004346c0();\n    iVar4 = fcn.0043b200();\n    if (*0x557ed0 == 0) {\n        *piVar3 = iVar4;\n    }\n    else {\n        iVar4 = fcn.00459280(unaff_RBX, arg2, in_R8, in_R9);\n    }\n    piVar5 = piVar3;\n    if (*0x557ed0 == 0) {\n        *(iVar4 + 0x30) = piVar3;\n    }\n    else {\n        fcn.00459380();\n    }\n    if (in_RAX == *(*(iVar6 + 0x30) + 0xa0)) {\n        fcn.0043d140();\n        piVar5 = piVar3;\n    }\n    iVar2 = *(*(iVar6 + 0x30) + 0xd8);\n    *(*(iVar6 + 0x30) + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return piVar5;\n}\n",
        "token_count": 881
    },
    "004366c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004366c0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    iVar2 = fcn.00436220(0xffffffffffffffff);\n    iVar3 = fcn.0043b200();\n    *(iVar3 + 0x40) = 0x459241;\n    iVar5 = *(iVar3 + 8) + -0x20;\n    *(iVar3 + 0x38) = iVar5;\n    *(iVar3 + 0x60) = 0;\n    *(iVar3 + 0x48) = iVar3;\n    *(iVar3 + 0x78) = *(iVar3 + 0x40);\n    *(iVar3 + 0x70) = iVar5;\n    uVar4 = *(iVar3 + 0x38);\n    *(iVar3 + 0x80) = uVar4;\n    fcn.00435000(6);\n    iVar5 = iVar2;\n    if (*0x557ed0 == 0) {\n        *(iVar3 + 0x30) = iVar2;\n    }\n    else {\n        iVar3 = fcn.00459380();\n    }\n    if (*0x557ed0 == 0) {\n        *(iVar5 + 0x90) = iVar3;\n    }\n    else {\n        iVar3 = fcn.00459280(iVar5, uVar4, param_3, param_4);\n    }\n    *(iVar5 + 0x244) = *(iVar5 + 0x244) + 1;\n    *(iVar5 + 0x138) = iVar3;\n    *(iVar3 + 0xe8) = iVar5;\n    LOCK();\n    iVar5 = *0x5047a0 + 1;\n    *0x5047a0 = *0x5047a0 + 1;\n    *(iVar3 + 0x98) = iVar5;\n    fcn.00434000();\n    iVar1 = *0x5047e8;\n    LOCK();\n    *0x5047e8 = *0x5047e8 + 1;\n    uVar4 = fcn.00436900(iVar1);\n    *(iVar2 + 0x130) = uVar4;\n    *0x557c90 = *0x557c90 + 1;\n    *0x557d58 = iVar2;\n    return;\n}\n",
        "token_count": 619
    },
    "00436900": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004369a0)\n\nuint64_t fcn.00436900(void)\n\n{\n    bool bVar1;\n    char in_AL;\n    uint64_t uVar2;\n    \n    bVar1 = false;\n    while( true ) {\n        while (*0x557d58 == 1) {\n            fcn.0045afc0();\n        }\n        if ((*0x557d58 != 0) || (in_AL != '\\0')) break;\n        if (!bVar1) {\n            LOCK();\n            *0x557c94 = *0x557c94 + 1;\n        }\n        fcn.0045aee0();\n        bVar1 = true;\n    }\n    LOCK();\n    uVar2 = *0x557d58;\n    *0x557d58 = *0x557d58 ^ *0x557d58 ^ 1;\n    return uVar2;\n}\n",
        "token_count": 205
    },
    "00436a00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00436a00(int64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x30) = 0x436a2b;\n            iVar2 = fcn.00436220(arg1);\n            iVar1 = *(*0x20 + 0x10);\n            *(iVar2 + 0x118) = iVar1 != 0;\n            *(iVar2 + 0xa8) = iVar1;\n            if (((unaff_R14 == 0) || (arg1 = *(unaff_R14 + 0x30),  arg1 == 0)) ||\n               ((*(*0x20 + -0x10) = iVar2,  *(arg1 + 0x240) == 0 && (*(arg1 + 0xe8) == '\\0')))) {\n                *(*0x20 + -0x30) = 0x436ad9;\n                fcn.00436b20();\n                return;\n            }\n            *(*0x20 + -0x30) = 0x436a7c;\n            fcn.00409300();\n            if (*0x557fa0 != 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(iVar1 + 0x130) = *0x557f88;\n                *0x557f88 = iVar1;\n                if (*0x557f90 != '\\0') {\n                    *0x557f90 = '\\0';\n                    *(*0x20 + -0x30) = 0x436abc;\n                    fcn.00409600();\n                }\n                *(*0x20 + -0x30) = 0x436aca;\n                fcn.00409520();\n                return;\n            }\n            unaff_RBX = 0x2a;\n            *(*0x20 + -0x30) = 0x436af4;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x436b09;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 713
    },
    "00436b20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00436b20(void)\n\n{\n    ulong *in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x557c6c == '\\0') {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x40) = 0x436bed;\n                fcn.004406a0();\n                *(*0x20 + -0x40) = 0x436bf7;\n                fcn.0042cd00();\n                *(*0x20 + -0x40) = 0x436c05;\n                fcn.004407e0();\n                return;\n            }\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x18) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            if (*0x5033b0 != 0) {\n                *(*0x20 + -0x20) = *in_RAX;\n                *(*0x20 + -0x18) = in_RAX + 0xb;\n                *(*0x20 + -0x10) = CONCAT71(*0x48a599, vtable.I_f.0);\n                *(*0x20 + -0x40) = 0x436b98;\n                fcn.004406a0();\n                *(*0x20 + -0x38) = *0x5033b0;\n                *(*0x20 + -0x30) = *0x20 + -0x20;\n                *(*0x20 + -0x40) = 0x436bb2;\n                fcn.00458e80();\n                *(*0x20 + -0x40) = 0x436bd2;\n                fcn.004407e0();\n                return;\n            }\n            *(*0x20 + -0x40) = 0x436c25;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x436c30;\n        fcn.00457040();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 661
    },
    "00436c40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00436c40(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar3 = *(unaff_R14 + 0x30);\n    LOCK();\n    if (*0x557fa0 != 0) {\n        iVar2 = *(iVar3 + 0xd8);\n        *(iVar3 + 0xd8) = iVar2 + -1;\n        if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        return;\n    }\n    *0x557fa0 = 1;\n    fcn.00436a00(0xffffffffffffffff);\n    iVar2 = *(iVar3 + 0xd8);\n    *(iVar3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 345
    },
    "00436d20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00436d20(void)\n\n{\n    code **ppcVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    if (*(*(unaff_R14 + 0x30) + 0x288) == 0) {\n        return 0;\n    }\n    fcn.00409300();\n    ppcVar1 = *(*(unaff_R14 + 0x30) + 0x290);\n    if (ppcVar1 != NULL) {\n        if (*0x557cac != 0) {\n            fcn.00430d40();\n            pcVar2 = swi(3);\n            uVar3 = (*pcVar2)();\n            return uVar3;\n        }\n        (**ppcVar1)();\n        *(*(unaff_R14 + 0x30) + 0x290) = 0;\n        *(*(unaff_R14 + 0x30) + 0x288) = 0;\n    }\n    uVar3 = fcn.00409520();\n    return uVar3 & 0xffffffffffffff00 | ppcVar1 != NULL;\n}\n",
        "token_count": 258
    },
    "00436f60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00436f60(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(unaff_R14 + 0x30);\n            if (*(iVar1 + 0xd8) == 0) {\n                if (*(iVar1 + 0xa0) == 0) {\n                    if (*(iVar1 + 0xe4) == '\\0') {\n                        *(*0x20 + -0x10) = unaff_R14;\n                        *(*0x20 + -0x28) = 0x436fb5;\n                        fcn.00409300();\n                        *(*0x20 + -0x28) = 0x436fc5;\n                        fcn.0043e8c0();\n                        *(*0x20 + -0x28) = 0x436fd3;\n                        fcn.00409520();\n                        *(*0x20 + -0x28) = 0x436fd8;\n                        fcn.00435b80();\n                        *(*0x20 + -0x28) = 0x436fed;\n                        fcn.0043cfc0();\n                        *(*(*(*0x20 + -0x10) + 0x30) + 0xa8) = 0;\n                        return;\n                    }\n                    *(*0x20 + -0x28) = 0x43701c;\n                    fcn.00430d40();\n                }\n                *(*0x20 + -0x28) = 0x43702d;\n                fcn.00430d40();\n            }\n            *(*0x20 + -0x28) = 0x43703e;\n            fcn.00430d40();\n        }\n        *(puVar2 + -8) = 0x437045;\n        fcn.00457040();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 522
    },
    "00437080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00437080(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    char cVar4;\n    ulong in_RAX;\n    int64_t iVar5;\n    ulong uVar6;\n    uint32_t uVar7;\n    uchar unaff_BL;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uint64_t uVar8;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_BL;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            *(*0x20 + -0x20) = *(unaff_R14 + 0x30);\n            *(*0x20 + -0x48) = 0x4370c5;\n            fcn.00409300();\n            iVar5 = *(*0x20 + 8);\n            if (iVar5 == 0) {\n                *(*0x20 + -0x48) = 0x4370d4;\n                iVar5 = fcn.0043ec80();\n                if (iVar5 == 0) {\n                    *(*0x20 + -0x48) = 0x4371e5;\n                    fcn.00409520();\n                    if (*(*0x20 + 0x10) == '\\0') {\ncode_r0x00437205:\n                        iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                        *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                        if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return;\n                    }\n                    LOCK();\n                    iVar2 = *0x5047fc + -1;\n                    uVar7 = *0x5047fc - 1;\n                    uVar8 = uVar7;\n                    *0x5047fc = iVar2;\n                    if (-1 < uVar7) goto code_r0x00437205;\n                    *(*0x20 + -0x48) = 0x43724b;\n                    cVar4 = fcn.00430d40();\n                    goto code_r0x0043724b;\n                }\n            }\n            iVar3 = *0x5047c0;\n            if (*0x5047c0 != 0) {\n                *0x5047c0 = *(*0x5047c0 + 0x130);\n                *0x5047c8 = *0x5047c8 + -1;\n            }\n            *(*0x20 + -0x18) = iVar5;\n            if (iVar3 == 0) {\n                *(*0x20 + -0x48) = 0x437110;\n                uVar6 = fcn.00434660();\n                *(*0x20 + -0x28) = uVar6;\n                *(*0x20 + -0x48) = 0x437125;\n                fcn.00409520();\n                *(*0x20 + -0x48) = 0x43714f;\n                fcn.00436a00(*(*0x20 + -0x28));\n                iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(*0x20 + -0x10) = iVar3;\n            *(*0x20 + -0x48) = 0x437198;\n            fcn.00409520();\n            uVar8 = *(*0x20 + -0x10);\n            if (*(uVar8 + 0xe4) == '\\0') {\n                if (*(uVar8 + 0xa8) == 0) {\n                    cVar4 = *(*0x20 + 0x10);\n                    if (cVar4 == '\\0') {\n                        cVar4 = '\\0';\ncode_r0x0043724b:\n                        *(uVar8 + 0xe4) = cVar4;\n                        *(uVar8 + 0xa8) = *(*0x20 + -0x18);\n                        *(*0x20 + -0x48) = 0x437269;\n                        fcn.00409600();\n                        iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                        *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                        if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return;\n                    }\n                    iVar5 = *(*0x20 + -0x18);\n                    do {\n                    } while (*(iVar5 + 0x5f4) != *(iVar5 + 0x5f4));\n                    if ((*(iVar5 + 0x5f4) == *(iVar5 + 0x5f0)) && (*(iVar5 + 0xdf8) == 0)) goto code_r0x0043724b;\n                    *(*0x20 + -0x48) = 0x4372e7;\n                    fcn.00430d40();\n                }\n                *(*0x20 + -0x48) = 0x4372f8;\n                fcn.00430d40();\n            }\n            unaff_BL = 0x15;\n            *(*0x20 + -0x48) = 0x437309;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar9 + 8) = in_RAX;\n        puVar9[0x10] = unaff_BL;\n        *(puVar9 + -8) = 0x437318;\n        fcn.00457040();\n        in_RAX = *(puVar9 + 8);\n        unaff_BL = puVar9[0x10];\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 1540
    },
    "00437340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00437340(void)\n\n{\n    int64_t iVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    do {\n    } while (*(in_RAX + 0x5f4) != *(in_RAX + 0x5f4));\n    if (((*(in_RAX + 0x5f4) != *(in_RAX + 0x5f0)) || (*(in_RAX + 0xdf8) != 0)) || (*0x504810 != 0)) {\n        fcn.00437080();\n        return;\n    }\n    if (*0x557ca4 != 0) {\n        if ((*(in_RAX + 0x1698) == 0) || ((*(*(in_RAX + 0x1698) + 0x10) == 0 && (*(*(in_RAX + 0x16a0) + 0x10) == 0)))) {\n            if (*0x558700 == 0) {\n                if (*0x558788 < *0x55878c) {\n                    bVar5 = true;\n                }\n                else {\n                    bVar5 = false;\n                }\n            }\n            else {\n                bVar5 = true;\n            }\n        }\n        else {\n            bVar5 = true;\n        }\n        if (bVar5) {\n            fcn.00437080();\n            return;\n        }\n    }\n    uVar2 = *0x5047fc + *0x5047f8;\n    if ((*0x5047fc + *0x5047f8 == 0) && (LOCK(),  uVar2 = in_RAX,  *0x5047fc == 0)) {\n        *0x5047fc = 1;\n        fcn.00437080();\n        return;\n    }\n    fcn.00409300(uVar2);\n    if (*0x5048a0 != 0) {\n        *(in_RAX + 4) = 3;\n        iVar3 = *0x5048a4 + -1;\n        bVar5 = *0x5048a4 == 1;\n        *0x5048a4 = iVar3;\n        if (bVar5) {\n            fcn.00409600();\n        }\n        fcn.00409520();\n        return;\n    }\n    if (*(in_RAX + 0x26d0) == 0) {\n        bVar5 = false;\n    }\n    else {\n        LOCK();\n        bVar5 = *(in_RAX + 0x26d0) == 1;\n        if (bVar5) {\n            *(in_RAX + 0x26d0) = 0;\n        }\n    }\n    if (bVar5) {\n        (***0x5048c8)();\n        iVar3 = *0x5048d0 + -1;\n        bVar5 = *0x5048d0 == 1;\n        *0x5048d0 = iVar3;\n        if (bVar5) {\n            fcn.00409600();\n        }\n    }\n    if (*0x504810 == 0) {\n        if ((*0x5047f8 == *0x557cb0 + -1) && (*0x5047a8 != 0)) {\n            fcn.00409520();\n            fcn.00437080();\n            return;\n        }\n        iVar1 = *(in_RAX + 0x1668);\n        iVar4 = *(in_RAX + 0x1670);\n        if ((iVar1 != 0) && ((iVar4 == 0 || (iVar1 <= iVar4)))) {\n            iVar4 = iVar1;\n        }\n        fcn.0043eb60();\n        fcn.00409520();\n        if (iVar4 != 0) {\n            fcn.00438dc0();\n        }\n        return;\n    }\n    fcn.00409520();\n    fcn.00437080();\n    return;\n}\n",
        "token_count": 945
    },
    "004376a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004376a0(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar2 = *(unaff_R14 + 0x30);\n            if ((*(iVar2 + 0x138) != 0) && (*(*(iVar2 + 0x138) + 0xe8) == iVar2)) {\n                *(*0x20 + -0x20) = unaff_R14;\n                if (*(iVar2 + 0xa0) != 0) {\n                    *(*0x20 + -0x50) = 0x4376f0;\n                    fcn.0043d140();\n                    *(*0x20 + -0x50) = 0x4376f5;\n                    fcn.00437340();\n                }\n                *(*0x20 + -0x50) = 0x4376ff;\n                fcn.0043d2a0();\n                *(*0x20 + -0x50) = 0x437705;\n                fcn.00435b80();\n                uVar1 = *(*(*(*(*0x20 + -0x20) + 0x30) + 0x138) + 0x90);\n                if ((uVar1 & 0xffffefff) == 1) {\n                    *(*0x20 + -0x50) = 0x437736;\n                    fcn.0043cfc0();\n                    *(*(*(*0x20 + -0x20) + 0x30) + 0xa8) = 0;\n                    return;\n                }\n                *(*0x20 + -0x2c) = uVar1;\n                *(*0x20 + -0x50) = 0x43775d;\n                fcn.004324c0();\n                *(*0x20 + -0x50) = 0x43776e;\n                fcn.00432dc0();\n                *(*0x20 + -0x50) = 0x437779;\n                fcn.00432ac0();\n                *(*0x20 + -0x50) = 0x43778a;\n                fcn.00432dc0();\n                *(*0x20 + -0x50) = 0x43778f;\n                fcn.00432540();\n                iVar2 = *(*(*(*0x20 + -0x20) + 0x30) + 0x138);\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x18) = unaff_R14;\n                *(*0x20 + -0x34) = *(iVar2 + 0x90);\n                *(*0x20 + -0x28) = *(iVar2 + 0x98);\n                *(*0x20 + -0x50) = 0x4377c5;\n                fcn.004324c0();\n                *(*0x20 + -0x50) = 0x4377d6;\n                fcn.00432dc0();\n                *(*0x20 + -0x50) = 0x4377e5;\n                fcn.00432d40();\n                *(*0x20 + -0x50) = 0x4377f6;\n                fcn.00432dc0();\n                *(*0x20 + -0x50) = 0x437805;\n                fcn.00432bc0();\n                *(*0x20 + -0x50) = 0x437816;\n                fcn.00432dc0();\n                *(*0x20 + -0x50) = 0x437825;\n                fcn.00432ac0();\n                *(*0x20 + -0x50) = 0x43782a;\n                fcn.00432720();\n                *(*0x20 + -0x50) = 0x43782f;\n                fcn.00432540();\n                *(*0x20 + -0x30) = *(*(*0x20 + -0x18) + 0x90);\n                *(*0x20 + -0x28) = *(*(*0x20 + -0x18) + 0x98);\n                *(*0x20 + -0x50) = 0x43784f;\n                fcn.004324c0();\n                *(*0x20 + -0x50) = 0x437865;\n                fcn.00432dc0();\n                *(*0x20 + -0x50) = 0x43786f;\n                fcn.00432d40();\n                *(*0x20 + -0x50) = 0x437885;\n                fcn.00432dc0();\n                *(*0x20 + -0x50) = 0x43788f;\n                fcn.00432bc0();\n                *(*0x20 + -0x50) = 0x4378a5;\n                fcn.00432dc0();\n                *(*0x20 + -0x50) = 0x4378b0;\n                fcn.00432ac0();\n                *(*0x20 + -0x50) = 0x4378b5;\n                fcn.00432720();\n                *(*0x20 + -0x50) = 0x4378ba;\n                fcn.00432540();\n                *(*0x20 + -0x50) = 0x4378cb;\n                fcn.00430d40();\n            }\n            *(*0x20 + -0x50) = 0x4378dc;\n            fcn.00430d40();\n        }\n        *(puVar3 + -8) = 0x4378e5;\n        fcn.00457040();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1383
    },
    "00437900": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00437900(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(in_RAX + 0xe8);\n            if (*(unaff_R14 + 0x30) != iVar1) {\n                if (*(iVar1 + 0xa8) == 0) {\n                    *(*0x20 + -0x10) = iVar1;\n                    *(*0x20 + -0x28) = 0x43793f;\n                    fcn.0043d2a0();\n                    *(*0x20 + -0x28) = 0x437945;\n                    uVar2 = fcn.0043d140();\n                    *(*(*0x20 + -0x10) + 0xa8) = uVar2;\n                    *(*0x20 + -0x28) = 0x43795e;\n                    fcn.00409600();\n                    *(*0x20 + -0x28) = 0x437965;\n                    fcn.00436f60();\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x437985;\n                fcn.00430d40();\n            }\n            *(*0x20 + -0x28) = 0x437996;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x4379a5;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 488
    },
    "004379c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004379c0(void)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x5048a0 != 0) {\n                if (*(*(unaff_R14 + 0x30) + 0xe4) == '\\0') {\ncode_r0x00437a10:\n                    *(*0x20 + -0x28) = 0x437a15;\n                    uVar2 = fcn.0043d140();\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x28) = 0x437a28;\n                    fcn.00409300();\n                    *(*(*0x20 + -0x10) + 4) = 3;\n                    iVar1 = *0x5048a4 + -1;\n                    bVar5 = *0x5048a4 == 1;\n                    *0x5048a4 = iVar1;\n                    if (bVar5) {\n                        *(*0x20 + -0x28) = 0x437a54;\n                        fcn.00409600();\n                    }\n                    *(*0x20 + -0x28) = 0x437a65;\n                    fcn.00409520();\n                    *(*0x20 + -0x28) = 0x437a6a;\n                    fcn.00436f60();\n                    return;\n                }\n                *(*(unaff_R14 + 0x30) + 0xe4) = 0;\n                LOCK();\n                iVar1 = *0x5047fc + -1;\n                iVar3 = *0x5047fc + -1;\n                *0x5047fc = iVar1;\n                if (-1 < iVar3) goto code_r0x00437a10;\n                *(*0x20 + -0x28) = 0x437a85;\n                fcn.00430d40();\n            }\n            *(*0x20 + -0x28) = 0x437a96;\n            fcn.00430d40();\n        }\n        *(puVar4 + -8) = 0x437a9c;\n        fcn.00457040();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 626
    },
    "00437ac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00437ac0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    int64_t *in_RAX;\n    char unaff_BL;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (*0x557ed0 == 0) {\n        *(*(unaff_R14 + 0x30) + 0x90) = in_RAX;\n    }\n    else {\n        in_RAX = fcn.00459280(arg1, *(unaff_R14 + 0x30), arg3, arg4);\n    }\n    if (*0x557ed0 == 0) {\n        in_RAX[6] = *(unaff_R14 + 0x30);\n    }\n    else {\n        in_RAX = fcn.004593e0(arg1, unaff_R14, arg3, arg4);\n    }\n    fcn.00435000(2);\n    in_RAX[0x15] = 0;\n    *(in_RAX + 0xb1) = 0;\n    in_RAX[2] = *in_RAX + 0x13a0;\n    if (unaff_BL == '\\0') {\n        piVar1 = *(*(unaff_R14 + 0x30) + 0xa0) + 0x10;\n        *piVar1 = *piVar1 + 1;\n    }\n    if (*(*(unaff_R14 + 0x30) + 0xe0) != *0x5048e0) {\n        fcn.0042da80();\n    }\n    if (*0x509e70 != '\\0') {\n        if ((in_RAX[0xe] != 0) && (*(in_RAX + 0xbb) != '\\0')) {\n            fcn.0044cbc0();\n        }\n        fcn.0044c860();\n    }\n    fcn.00456e60();\n    return;\n}\n",
        "token_count": 481
    },
    "00437c40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00437e78)\n// WARNING: Removing unreachable block (ram,0x00437e7d)\n\nuint64_t fcn.00437c40(void)\n\n{\n    char cVar1;\n    uint64_t uVar2;\n    ulong arg3;\n    ulong noname_2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    int64_t *piVar10;\n    uint32_t uVar11;\n    int64_t unaff_R14;\n    bool bVar12;\n    int64_t iStack232;\n    uint64_t uStack104;\n    ulong uStack96;\n    uint64_t uStack88;\n    ulong uStack80;\n    ulong uStack72;\n    uint64_t uStack64;\n    uint64_t uStack56;\n    ulong uStack48;\n    int64_t iStack40;\n    \n    while (&uStack104 < *(unaff_R14 + 0x10) || &uStack104 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\ncode_r0x00437c6e:\n    while (uVar2 = *(*(unaff_R14 + 0x30) + 0xa0),  *0x5048a0 != 0) {\n        fcn.004379c0();\n    }\n    if (*(uVar2 + 0x26d0) != 0) {\n        fcn.00436160();\n    }\n    uVar3 = fcn.004395c0();\n    if (((*0x557c67 != '\\0') && (*0x557c68 != '\\0')) && (iVar4 = fcn.00413b80(),  iVar4 != 0)) {\n        fcn.004348a0(1);\n    }\n    iVar4 = **0x4fcc10;\n    if (iVar4 != 0) {\n        fcn.00458e80();\n        iStack232 = iVar4;\n    }\n    uVar5 = fcn.0043f1e0();\n    if (uVar5 != 0) {\n        return uVar5;\n    }\n    if (*0x504810 != 0) {\n        fcn.00409300();\n        uStack64 = fcn.0043e920();\n        fcn.00409520();\n        if (uStack64 != 0) {\n            return uStack64;\n        }\n    }\n    if (*0x557cb8 == 0) {\n        bVar12 = false;\n    }\n    else if (*0x557cbc == 0) {\n        bVar12 = false;\n    }\n    else {\n        bVar12 = *0x5047a8 != 0;\n    }\n    if ((bVar12) && (uVar5 = fcn.0042a4a0(),  uVar5 != 0)) {\n        fcn.00438ea0();\n        fcn.00435000(1);\n        if (*0x509e70 != '\\0') {\n            fcn.0044caa0();\n        }\n        return uVar5;\n    }\n    if (*(*(unaff_R14 + 0x30) + 0xe4) == '\\0') {\n        uVar11 = *0x557cb0 - *0x5047f8;\n        bVar12 = *0x5047fc << 1 < uVar11;\n    }\n    else {\n        bVar12 = true;\n        uVar11 = *0x557cb0;\n    }\n    uVar5 = uVar11;\n    if (bVar12) goto code_r0x00437e28;\n    uVar5 = 0;\n    goto code_r0x00437e87;\ncode_r0x00437e28:\n    uVar3 = *(unaff_R14 + 0x30);\n    if (*(uVar3 + 0xe4) == '\\0') {\n        *(uVar3 + 0xe4) = 1;\n        LOCK();\n        uVar3 = *0x5047fc;\n        *0x5047fc = *0x5047fc + 1;\n    }\n    uVar9 = fcn.004386e0();\n    if (uVar9 != 0) {\n        return uVar9;\n    }\n    if (!bVar12) {\n        if (uVar5 == 0) {\n            uVar5 = 0;\n        }\ncode_r0x00437e87:\n        if (*0x557ca4 == 0) {\n            bVar12 = false;\n        }\n        else if ((*(uVar2 + 0x1698) == 0) || ((*(*(uVar2 + 0x1698) + 0x10) == 0 && (*(*(uVar2 + 0x16a0) + 0x10) == 0))))\n        {\n            if (*0x558700 == 0) {\n                if (*0x558788 < *0x55878c) {\n                    bVar12 = true;\n                }\n                else {\n                    bVar12 = false;\n                }\n            }\n            else {\n                bVar12 = true;\n            }\n        }\n        else {\n            bVar12 = true;\n        }\n        uVar9 = uVar2;\n        if (!bVar12) goto code_r0x00437f0c;\n        while( true ) {\n            if (*0x557d88 == 0) {\n                piVar10 = NULL;\n            }\n            else {\n                piVar10 = (*0x557d88 >> 0x13) << 3;\n                *0x557d88 = *piVar10;\n                LOCK();\n            }\n            if (piVar10 != NULL) {\n                *(uVar9 + 0x1688) = 3;\n                uVar2 = piVar10[2];\n                fcn.00435000(1);\n                if (*0x509e70 != '\\0') {\n                    fcn.0044caa0();\n                }\n                return uVar2;\n            }\ncode_r0x00437f0c:\n            noname_2 = *0x503ff0;\n            arg3 = *0x503fb0;\n            uStack48 = *0x503f40;\n            uStack104 = *0x503f48;\n            uStack96 = *0x503f50;\n            uStack72 = *0x503fa0;\n            uStack80 = *0x503fe0;\n            uVar9 = *0x503f48;\n            fcn.00409300();\n            if ((*0x5048a0 != 0) || (*(uVar2 + 0x26d0) != 0)) break;\n            if (*0x504810 != 0) {\n                uStack56 = fcn.0043e920();\n                fcn.00409520();\n                return uStack56;\n            }\n            uVar6 = fcn.0043d140();\n            if (uVar6 == uVar2) {\n                fcn.0043eb60();\n                fcn.00409520();\n                uVar6 = uStack104;\n                cVar1 = *(*(unaff_R14 + 0x30) + 0xe4);\n                uVar7 = uVar5;\n                if (cVar1 == '\\0') {\ncode_r0x00438103:\n                    iVar4 = *0x5047a8;\n                    if (*0x557cb8 == 0) {\n                        bVar12 = false;\n                    }\n                    else if ((*0x557cbc == 0) && (uVar7 == 0)) {\n                        bVar12 = false;\n                    }\n                    else {\n                        *0x5047a8 = 0;\n                        bVar12 = iVar4 != 0;\n                    }\n                    if (!bVar12) {\n                        if ((uVar7 != 0 && *0x557cb8 != 0) && ((*0x5047b0 == 0 || (uVar7 < *0x5047b0)))) {\n                            fcn.0042a3a0();\n                        }\ncode_r0x004384c0:\n                        fcn.00436f60();\n                        goto code_r0x00437c6e;\n                    }\n                    uVar9 = 0x5047b0;\n                    *0x5047b0 = uVar7;\n                    if (*(*(unaff_R14 + 0x30) + 0xa0) == 0) {\n                        if (*(*(unaff_R14 + 0x30) + 0xe4) == '\\0') {\n                            if ((uVar7 != 0) && (uVar3 == 0)) {\n                                uStack88 = uVar7;\n                                fcn.0045afe0();\n                            }\n                            uVar3 = fcn.0042a4a0(unaff_R14, 0x5047b0);\n                            uVar2 = *0x5047b0;\n                            *0x5047b0 = 0;\n                            fcn.0045afe0(uVar2);\n                            iVar4 = *0x5047a8;\n                            *0x5047a8 = iStack232;\n                            if ((*0x557d60 == 0) || (uVar3 != 0)) {\n                                fcn.00409300(iVar4);\n                                iStack40 = fcn.0043ec80();\n                                fcn.00409520();\n                                if (iStack40 == 0) {\n                                    fcn.00438ea0();\n                                    goto code_r0x004384c0;\n                                }\n                                fcn.0043cfc0();\n                                if (uVar3 != 0) {\n                                    fcn.00438ea0();\n                                    fcn.00435000(1);\n                                    if (*0x509e70 != '\\0') {\n                                        fcn.0044caa0();\n                                    }\n                                    return uVar3;\n                                }\n                                if (cVar1 != '\\0') {\n                                    *(*(unaff_R14 + 0x30) + 0xe4) = 1;\n                                    LOCK();\n                                    *0x5047fc = *0x5047fc + 1;\n                                }\n                            }\n                            else {\n                                fcn.00436f60();\n                            }\n                            goto code_r0x00437c6e;\n                        }\n                        fcn.00430d40();\n                    }\n                    fcn.00430d40();\n                }\n                else {\n                    *(*(unaff_R14 + 0x30) + 0xe4) = 0;\n                    LOCK();\n                    uVar11 = *0x5047fc - 1;\n                    uVar8 = *0x5047fc - 1;\n                    uVar9 = uVar8;\n                    *0x5047fc = uVar11;\n                    if (-1 < uVar8) {\n                        iVar4 = fcn.00438a60(uStack96, uVar9, arg3);\n                        if (iVar4 == 0) {\n                            iVar4 = fcn.00438c40();\n                            if (iVar4 != 0) {\n                                iStack40 = iVar4;\n                                fcn.0043cfc0();\n                                *(*(unaff_R14 + 0x30) + 0xe4) = 1;\n                                LOCK();\n                                *0x5047fc = *0x5047fc + 1;\n                                *(iStack40 + 0x1688) = 3;\n                                fcn.00435000(1);\n                                if (*0x509e70 != '\\0') {\n                                    fcn.0044caa0();\n                                }\n                                return uVar6;\n                            }\n                            uVar7 = fcn.00438ba0(uStack96, uVar9, noname_2, uVar5);\n                            goto code_r0x00438103;\n                        }\n                        fcn.0043cfc0();\n                        *(*(unaff_R14 + 0x30) + 0xe4) = 1;\n                        LOCK();\n                        *0x5047fc = *0x5047fc + 1;\n                        goto code_r0x00437c6e;\n                    }\n                }\n                fcn.00430d40();\n            }\n            fcn.00430d40();\n        }\n        fcn.00409520();\n    }\n    goto code_r0x00437c6e;\n}\n",
        "token_count": 2735
    },
    "00438c40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00438d19)\n\nint64_t fcn.00438c40(void)\n\n{\n    bool bVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (*0x557ca4 == 0) {\n        return 0;\n    }\n    if (*0x558700 == 0) {\n        if (*0x558788 < *0x55878c) {\n            bVar1 = true;\n        }\n        else {\n            bVar1 = false;\n        }\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        fcn.00409300();\n        iVar2 = fcn.0043ec80();\n        if (iVar2 == 0) {\n            fcn.00409520();\n            return 0;\n        }\n        if (*0x557ca4 != 0) {\n            if (*0x557d88 == 0) {\n                piVar3 = NULL;\n            }\n            else {\n                piVar3 = (*0x557d88 >> 0x13) << 3;\n                *0x557d88 = *piVar3;\n                LOCK();\n            }\n            if (piVar3 == NULL) {\n                fcn.0043eb60();\n                fcn.00409520();\n                return 0;\n            }\n            fcn.00409520();\n            return iVar2;\n        }\n        fcn.0043eb60();\n        fcn.00409520();\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 400
    },
    "00438e20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00438e20(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(*(unaff_R14 + 0x30) + 0xe4) != '\\0') {\n                *(*(unaff_R14 + 0x30) + 0xe4) = 0;\n                LOCK();\n                if (-1 < *0x5047fc + -1) {\n                    *(*0x20 + -0x20) = 0x438e65;\n                    *0x5047fc = *0x5047fc + -1;\n                    fcn.00437620();\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x438e85;\n                *0x5047fc = *0x5047fc + -1;\n                fcn.00430d40();\n            }\n            *(*0x20 + -0x20) = 0x438e96;\n            fcn.00430d40();\n        }\n        *(puVar1 + -8) = 0x438e9c;\n        fcn.00457040();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 368
    },
    "00438ea0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t * fcn.00438ea0(void)\n\n{\n    int64_t *in_RAX;\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t arg1;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    int64_t iStack64;\n    uchar auStack48 [40];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    iVar2 = *in_RAX;\n    if (iVar2 == 0) {\n        return in_RAX;\n    }\n    if (*0x509e70 != '\\0') {\n        for (; iVar2 != 0; iVar2 = *(iVar2 + 0xa0)) {\n            fcn.0044caa0();\n        }\n    }\n    arg1 = 0;\n    iStack64 = *in_RAX;\n    iVar2 = iStack64;\n    iVar3 = 0;\n    while (iVar4 = iVar2,  iVar4 != 0) {\n        fcn.00435000(1);\n        arg1 = arg1 + 1;\n        iVar3 = iVar4;\n        iVar2 = *(iVar4 + 0xa0);\n    }\n    *in_RAX = 0;\n    piVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (piVar1 == NULL) {\n        fcn.00409300();\n        iVar2 = *0x504800;\n        iVar4 = *0x504808;\n        if ((iVar3 != 0) && (*(iVar3 + 0xa0) = 0,  iVar2 = iStack64,  iVar4 = iVar3,  *0x504808 != 0)) {\n            *(*0x504808 + 0xa0) = iStack64;\n            iVar2 = *0x504800;\n        }\n        *0x504808 = iVar4;\n        *0x504800 = iVar2;\n        *0x504810 = *0x504810 + arg1;\n        piVar1 = fcn.00409520();\n        while ((arg1 != 0 && (*0x5047f8 != 0))) {\n            piVar1 = fcn.00437080();\n            arg1 = arg1 + -1;\n        }\n        return piVar1;\n    }\n    uVar5 = *0x5047f8;\n    iVar2 = 0;\n    auStack48._0_16_ = in_XMM15;\n    while( true ) {\n        iVar3 = iStack64;\n        if ((uVar5 <= iVar2) || (iStack64 == 0)) break;\n        if (iStack64 != 0) {\n            iStack64 = *(iStack64 + 0xa0);\n        }\n        *(iVar3 + 0xa0) = 0;\n        if (auStack48._8_8_ == 0) {\n            auStack48._0_8_ = iVar3;\n        }\n        else {\n            *(auStack48._8_8_ + 0xa0) = iVar3;\n        }\n        auStack48._0_16_ = CONCAT88(iVar3, auStack48._0_8_);\n        iVar2 = iVar2 + 1;\n    }\n    if (0 < iVar2) {\n        fcn.00409300();\n        if (auStack48._8_8_ != 0) {\n            *(auStack48._8_8_ + 0xa0) = 0;\n            if (*0x504808 == 0) {\n                *0x504800 = auStack48._0_8_;\n            }\n            else {\n                *(*0x504808 + 0xa0) = auStack48._0_8_;\n            }\n            *0x504808 = auStack48._8_8_;\n        }\n        *0x504810 = *0x504810 + iVar2;\n        fcn.00409520();\n        iVar3 = iVar2;\n        while ((iVar3 != 0 && (*0x5047f8 != 0))) {\n            fcn.00437080();\n            iVar3 = iVar3 + -1;\n        }\n        arg1 = arg1 - iVar2;\n    }\n    if (iStack64 != 0) {\n        piVar1 = fcn.0043f0a0(arg1);\n    }\n    return piVar1;\n}\n",
        "token_count": 1025
    },
    "004391c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004391c0(ulong param_1, uint64_t param_2, ulong param_3, ulong param_4)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uchar uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar3 = *(unaff_R14 + 0x30);\n            if (*(iVar3 + 0xd8) == 0) {\n                *(*0x20 + -0x20) = unaff_R14;\n                if (*(iVar3 + 0x138) != 0) {\n                    *(*0x20 + -0x48) = 0x4391fd;\n                    fcn.004376a0();\n                    uVar4 = *(*(*(*0x20 + -0x20) + 0x30) + 0x138);\n                    *(*0x20 + -0x48) = 0x439217;\n                    fcn.00437ac0(uVar4, param_2, param_3, param_4);\n                }\n                uVar5 = *(*0x20 + -0x20);\n                param_2 = *(uVar5 + 0x30);\n                if (*(param_2 + 0xe8) == '\\0') {\n                    while( true ) {\n                        while( true ) {\n                            iVar3 = *(*(uVar5 + 0x30) + 0xa0);\n                            *(iVar3 + 0x2708) = 0;\n                            if (*0x5048a0 == 0) break;\n                            *(*0x20 + -0x48) = 0x43955a;\n                            fcn.004379c0();\n                            uVar5 = *(*0x20 + -0x20);\n                        }\n                        if (*(iVar3 + 0x26d0) != 0) {\n                            *(*0x20 + -0x10) = iVar3;\n                            *(*0x20 + -0x48) = 0x43926c;\n                            fcn.00436160();\n                            iVar3 = *(*0x20 + -0x10);\n                            uVar5 = *(*0x20 + -0x20);\n                        }\n                        param_2 = *(uVar5 + 0x30);\n                        if ((*(param_2 + 0xe4) != '\\0') &&\n                           ((*(iVar3 + 0xdf8) != 0 ||\n                            (param_2 = *(iVar3 + 0x5f0),  *(iVar3 + 0x5f4) != *(iVar3 + 0x5f0))))) break;\n                        *(*0x20 + -0x48) = 0x4392b3;\n                        fcn.004395c0();\n                        if ((*0x509e70 == '\\0') && (*0x509e71 == '\\0')) {\n                            iVar3 = 0;\n                            uVar5 = 0;\n                        }\n                        else {\n                            *(*0x20 + -0x48) = 0x4392ca;\n                            iVar3 = fcn.0044b500();\n                            bVar9 = iVar3 == 0;\n                            if (!bVar9) {\n                                *(*0x20 + -0x28) = iVar3;\n                                uVar5 = 0;\n                                *(*0x20 + -0x48) = 0x4392e5;\n                                fcn.00435000(1);\n                                *(*0x20 + -0x48) = 0x4392f1;\n                                fcn.0044caa0();\n                                iVar3 = *(*0x20 + -0x28);\n                                bVar9 = iVar3 == 0;\n                            }\n                            uVar5 = uVar5 & 0xffffffffffffff00 | !bVar9;\n                        }\n                        uVar7 = 0;\n                        if ((iVar3 == 0) && (*0x557ca4 != 0)) {\n                            *(*0x20 + -0x2b) = uVar5;\n                            iVar6 = *(*0x20 + -0x20);\n                            uVar7 = *(*(iVar6 + 0x30) + 0xa0);\n                            *(*0x20 + -0x48) = 0x439334;\n                            iVar3 = fcn.0041b6a0();\n                            uVar5 = iVar6 & 0xffffff00 | iVar3 != 0 | *(*0x20 + -0x2b);\n                        }\n                        *(*0x20 + -0x29) = uVar5;\n                        if (iVar3 == 0) {\n                            iVar6 = *(*0x20 + -0x20);\n                            if ((*(*(*(iVar6 + 0x30) + 0xa0) + 0x10) * -0x3ef368eb < 0x4325c54) && (0 < *0x504810)) {\n                                *(*0x20 + -0x48) = 0x439389;\n                                fcn.00409300();\n                                uVar7 = 1;\n                                *(*0x20 + -0x48) = 0x4393a5;\n                                uVar4 = fcn.0043e920();\n                                *(*0x20 + -0x18) = uVar4;\n                                *(*0x20 + -0x48) = 0x4393b8;\n                                fcn.00409520();\n                                uVar5 = *(*0x20 + -0x29);\n                                iVar6 = *(*0x20 + -0x20);\n                                iVar3 = *(*0x20 + -0x18);\n                            }\n                        }\n                        else {\n                            iVar6 = *(*0x20 + -0x20);\n                        }\n                        if (iVar3 == 0) {\n                            *(*0x20 + -0x48) = 0x4393e5;\n                            iVar3 = fcn.0043f1e0();\n                            uVar5 = *(*0x20 + -0x29);\n                            iVar6 = *(*0x20 + -0x20);\n                        }\n                        else {\n                            uVar7 = 0;\n                        }\n                        if (iVar3 == 0) {\n                            *(*0x20 + -0x48) = 0x4393f9;\n                            iVar3 = fcn.00437c40();\n                            uVar5 = *(*0x20 + -0x29);\n                            iVar6 = *(*0x20 + -0x20);\n                        }\n                        *(*0x20 + -0x2a) = uVar7;\n                        *(*0x20 + -0x18) = iVar3;\n                        if (*(*(iVar6 + 0x30) + 0xe4) != '\\0') {\n                            *(*0x20 + -0x48) = 0x43941e;\n                            fcn.00438e20();\n                            iVar3 = *(*0x20 + -0x18);\n                            uVar5 = *(*0x20 + -0x29);\n                            iVar6 = *(*0x20 + -0x20);\n                        }\n                        if (*0x504818 == '\\0') {\n                            uVar1 = 0;\n                        }\n                        else {\n                            *(*0x20 + -0x48) = 0x439449;\n                            uVar1 = fcn.004508c0();\n                            uVar1 = uVar1 ^ 1;\n                            uVar5 = *(*0x20 + -0x29);\n                            iVar6 = *(*0x20 + -0x20);\n                            iVar3 = *(*0x20 + -0x18);\n                        }\n                        if (uVar1 == 0) {\ncode_r0x0043951b:\n                            if (uVar5 != '\\0') {\n                                *(*0x20 + -0x48) = 0x439525;\n                                fcn.00437620();\n                                iVar3 = *(*0x20 + -0x18);\n                                iVar6 = *(*0x20 + -0x20);\n                            }\n                            if (*(iVar3 + 0xe8) == 0) {\n                                *(*0x20 + -0x48) = 0x43954b;\n                                fcn.00437ac0(uVar5, iVar6, param_3, param_4);\n                                return;\n                            }\n                            *(*0x20 + -0x48) = 0x439233;\n                            fcn.00437900();\n                            uVar5 = *(*0x20 + -0x20);\n                        }\n                        else {\n                            *(*0x20 + -0x48) = 0x439479;\n                            fcn.00409300();\n                            if (*0x504818 == '\\0') {\n                                cVar2 = '\\x01';\n                            }\n                            else {\n                                *(*0x20 + -0x48) = 0x439498;\n                                cVar2 = fcn.004508c0();\n                            }\n                            if (cVar2 != '\\0') {\n                                *(*0x20 + -0x48) = 0x439507;\n                                fcn.00409520();\n                                iVar3 = *(*0x20 + -0x18);\n                                uVar5 = *(*0x20 + -0x29);\n                                iVar6 = *(*0x20 + -0x20);\n                                goto code_r0x0043951b;\n                            }\n                            iVar3 = *(*0x20 + -0x18);\n                            *(iVar3 + 0xa0) = 0;\n                            iVar6 = iVar3;\n                            if (*0x504828 != 0) {\n                                *(*0x504828 + 0xa0) = iVar3;\n                                iVar6 = *0x504820;\n                            }\n                            *0x504820 = iVar6;\n                            *0x504830 = *0x504830 + 1;\n                            *(*0x20 + -0x48) = 0x4394ef;\n                            *0x504828 = iVar3;\n                            fcn.00409520();\n                            uVar5 = *(*0x20 + -0x20);\n                        }\n                    }\n                    *(*0x20 + -0x48) = 0x439578;\n                    fcn.00430d40();\n                }\n                *(*0x20 + -0x48) = 0x439589;\n                fcn.00430d40();\n            }\n            *(*0x20 + -0x48) = 0x43959a;\n            fcn.00430d40();\n        }\n        *(puVar8 + -8) = 0x4395a5;\n        fcn.00457040();\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 2441
    },
    "004395c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004395c0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    int64_t iStack64;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    iVar1 = *(in_RAX + 0x1668);\n    iVar2 = *(in_RAX + 0x1670);\n    if ((iVar1 != 0) && ((iVar2 == 0 || (iVar1 <= iVar2)))) {\n        iVar2 = iVar1;\n    }\n    if (iVar2 == 0) {\n        return unaff_RBX;\n    }\n    if (unaff_RBX == 0) {\n        fcn.0045afe0();\n        unaff_R14 = **(in_GS_OFFSET + 0x28);\n        unaff_RBX = iStack64;\n    }\n    if ((unaff_RBX < iVar2) &&\n       ((in_RAX != *(*(unaff_R14 + 0x30) + 0xa0) || (*(in_RAX + 0x26fc) <= *(in_RAX + 0x26f8) >> 2)))) {\n        return unaff_RBX;\n    }\n    fcn.00409300();\n    if (0 < *(in_RAX + 0x26e8)) {\n        fcn.0044a2a0();\n        do {\n            if (*(in_RAX + 0x26e8) < 1) break;\n            iVar1 = fcn.0044a6e0();\n        } while (iVar1 == 0);\n    }\n    if ((in_RAX == *(*(unaff_R14 + 0x30) + 0xa0)) && (*(in_RAX + 0x26e8) >> 2 < *(in_RAX + 0x26fc))) {\n        fcn.0044ab40();\n    }\n    fcn.00409520();\n    return unaff_RBX;\n}\n",
        "token_count": 494
    },
    "00439980": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00439980(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if ((*(in_RAX + 0x90) & 0xffffefff) == 2) {\n                *(*0x20 + -0x38) = 0x4399bf;\n                fcn.00435000(1);\n                *(*(*(unaff_R14 + 0x30) + 0x90) + 0x30) = 0;\n                *(*(unaff_R14 + 0x30) + 0x90) = 0;\n                *(*0x20 + -0x38) = 0x4399ee;\n                fcn.00409300();\n                iVar1 = *(*0x20 + 8);\n                *(iVar1 + 0xa0) = 0;\n                iVar2 = iVar1;\n                if (*0x504808 != 0) {\n                    *(*0x504808 + 0xa0) = iVar1;\n                    iVar2 = *0x504800;\n                }\n                *0x504800 = iVar2;\n                *0x504810 = *0x504810 + 1;\n                *(*0x20 + -0x38) = 0x439a3f;\n                *0x504808 = iVar1;\n                fcn.00409520();\n                *(*0x20 + -0x38) = 0x439a45;\n                fcn.004391c0();\n                return;\n            }\n            *(*0x20 + -0x10) = unaff_R14;\n            *(*0x20 + -0x1c) = *(in_RAX + 0x90);\n            *(*0x20 + -0x18) = *(in_RAX + 0x98);\n            *(*0x20 + -0x38) = 0x439a70;\n            fcn.004324c0();\n            *(*0x20 + -0x38) = 0x439a85;\n            fcn.00432dc0();\n            *(*0x20 + -0x38) = 0x439a8f;\n            fcn.00432d40();\n            *(*0x20 + -0x38) = 0x439aa5;\n            fcn.00432dc0();\n            *(*0x20 + -0x38) = 0x439aaf;\n            fcn.00432bc0();\n            *(*0x20 + -0x38) = 0x439ac5;\n            fcn.00432dc0();\n            *(*0x20 + -0x38) = 0x439ad0;\n            fcn.00432ac0();\n            *(*0x20 + -0x38) = 0x439ad5;\n            fcn.00432720();\n            *(*0x20 + -0x38) = 0x439ada;\n            fcn.00432540();\n            *(*0x20 + -0x20) = *(*(*0x20 + -0x10) + 0x90);\n            *(*0x20 + -0x18) = *(*(*0x20 + -0x10) + 0x98);\n            *(*0x20 + -0x38) = 0x439afa;\n            fcn.004324c0();\n            *(*0x20 + -0x38) = 0x439b0b;\n            fcn.00432dc0();\n            *(*0x20 + -0x38) = 0x439b15;\n            fcn.00432d40();\n            *(*0x20 + -0x38) = 0x439b26;\n            fcn.00432dc0();\n            *(*0x20 + -0x38) = 0x439b30;\n            fcn.00432bc0();\n            *(*0x20 + -0x38) = 0x439b45;\n            fcn.00432dc0();\n            *(*0x20 + -0x38) = 0x439b50;\n            fcn.00432ac0();\n            *(*0x20 + -0x38) = 0x439b55;\n            fcn.00432720();\n            *(*0x20 + -0x38) = 0x439b5a;\n            fcn.00432540();\n            *(*0x20 + -0x38) = 0x439b6b;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x439b76;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1193
    },
    "00439ce0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00439ce0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (*0x509e70 != '\\0') {\n        *(unaff_R14 + 0xe0) = *(*(unaff_R14 + 0x30) + 0xa0);\n        fcn.0044b680(0);\n    }\n    fcn.00439980();\n    return;\n}\n",
        "token_count": 137
    },
    "00439d60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00439d60(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (*0x509e70 != '\\0') {\n                unaff_RBX = 0;\n                *(*0x20 + -0x48) = 0x439d92;\n                fcn.0044ca20();\n                in_RAX = *(*0x20 + 8);\n            }\n            if ((*(in_RAX + 0x90) & 0xffffefff) == 2) {\n                *(in_RAX + 0xb0) = 0x19;\n                if (*(in_RAX + 0xb4) == '\\0') goto code_r0x00439dde;\n                *(*0x20 + -0x48) = 0x439dc7;\n                iVar1 = fcn.004478a0();\n                if (iVar1 != 0) {\n                    if ((*(iVar1 + 0x29) & 2) == 0) {\ncode_r0x00439dde:\n                        *(*0x20 + -0x48) = 0x439ded;\n                        fcn.00435420(0x1009);\n                        *(*(*(unaff_R14 + 0x30) + 0x90) + 0x30) = 0;\n                        *(*(unaff_R14 + 0x30) + 0x90) = 0;\n                        *(*0x20 + -0x48) = 0x439e25;\n                        fcn.00434b60(9);\n                        *(*0x20 + -0x48) = 0x439e2a;\n                        fcn.004391c0();\n                        return;\n                    }\n                    *(*0x20 + -0x48) = 0x439e39;\n                    uVar2 = fcn.00447f80();\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x20) = unaff_RBX;\n                    *(*0x20 + -0x48) = 0x439e48;\n                    fcn.004324c0();\n                    *(*0x20 + -0x48) = 0x439e59;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x48) = 0x439e68;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x48) = 0x439e79;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x48) = 0x439e7e;\n                    fcn.00432540();\n                    *(*0x20 + -0x48) = 0x439e8f;\n                    fcn.00430d40();\n                }\n                *(*0x20 + -0x48) = 0x439ea5;\n                in_RAX = fcn.00430d40();\n            }\n            *(*0x20 + -0x18) = unaff_R14;\n            *(*0x20 + -0x2c) = *(in_RAX + 0x90);\n            *(*0x20 + -0x28) = *(in_RAX + 0x98);\n            *(*0x20 + -0x48) = 0x439ec6;\n            fcn.004324c0();\n            *(*0x20 + -0x48) = 0x439ed7;\n            fcn.00432dc0();\n            *(*0x20 + -0x48) = 0x439ee5;\n            fcn.00432d40();\n            *(*0x20 + -0x48) = 0x439ef6;\n            fcn.00432dc0();\n            *(*0x20 + -0x48) = 0x439f05;\n            fcn.00432bc0();\n            *(*0x20 + -0x48) = 0x439f16;\n            fcn.00432dc0();\n            *(*0x20 + -0x48) = 0x439f25;\n            fcn.00432ac0();\n            *(*0x20 + -0x48) = 0x439f2a;\n            fcn.00432720();\n            *(*0x20 + -0x48) = 0x439f2f;\n            fcn.00432540();\n            *(*0x20 + -0x30) = *(*(*0x20 + -0x18) + 0x90);\n            *(*0x20 + -0x28) = *(*(*0x20 + -0x18) + 0x98);\n            *(*0x20 + -0x48) = 0x439f4f;\n            fcn.004324c0();\n            *(*0x20 + -0x48) = 0x439f65;\n            fcn.00432dc0();\n            *(*0x20 + -0x48) = 0x439f6f;\n            fcn.00432d40();\n            *(*0x20 + -0x48) = 0x439f85;\n            fcn.00432dc0();\n            *(*0x20 + -0x48) = 0x439f8f;\n            fcn.00432bc0();\n            *(*0x20 + -0x48) = 0x439fa5;\n            fcn.00432dc0();\n            *(*0x20 + -0x48) = 0x439fb0;\n            fcn.00432ac0();\n            *(*0x20 + -0x48) = 0x439fb5;\n            fcn.00432720();\n            *(*0x20 + -0x48) = 0x439fba;\n            fcn.00432540();\n            unaff_RBX = 0xc;\n            *(*0x20 + -0x48) = 0x439fcb;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x439fd6;\n        fcn.0045b6e0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1532
    },
    "0045b4e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045b4e0(void)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    \n    iVar2 = **(in_GS_OFFSET + 0x28);\n    while (puVar1 = iVar2 + 0x10,  *0x20 < *puVar1 || *0x20 == *puVar1) {\n        fcn.00457040();\n    }\n    if (*0x509e70 != '\\0') {\n        fcn.0044b680(0);\n    }\n    fcn.00456e80();\n    return;\n}\n",
        "token_count": 142
    },
    "0043a3e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043a3e0(void)\n\n{\n    code *pcVar1;\n    ulong in_RAX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    if ((**(unaff_R14 + 0x30) != unaff_R14) && ((*(unaff_R14 + 0x30))[10] != unaff_R14)) {\n        *(unaff_R14 + 0x40) = in_RAX;\n        *(unaff_R14 + 0x38) = unaff_RBX;\n        *(unaff_R14 + 0x60) = 0;\n        *(unaff_R14 + 0x58) = 0;\n        if (*(unaff_R14 + 0x50) != 0) {\n            fcn.00433fe0();\n        }\n        return;\n    }\n    fcn.00430d40();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 216
    },
    "0043a460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043a460(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t in_RAX;\n    uint64_t unaff_RBX;\n    uint64_t *unaff_R14;\n    \n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + 1;\n    unaff_R14[2] = 0xfffffffffffffade;\n    *(unaff_R14 + 0xb7) = 1;\n    fcn.0043a3e0();\n    unaff_R14[0xe] = unaff_RBX;\n    unaff_R14[0xf] = in_RAX;\n    fcn.00435000(3);\n    uVar1 = unaff_R14[0xe];\n    if ((uVar1 <= *unaff_R14 && *unaff_R14 != uVar1) || (unaff_R14[1] < uVar1)) {\n        fcn.00456f00();\n    }\n    if (*0x509e70 != '\\0') {\n        fcn.00456f00();\n        fcn.0043a3e0();\n    }\n    if (*0x5048b0 != 0) {\n        fcn.00456f00();\n        fcn.0043a3e0();\n    }\n    if (*(*(unaff_R14[6] + 0xa0) + 0x26d0) != 0) {\n        fcn.00456f00();\n        fcn.0043a3e0();\n    }\n    *(unaff_R14[6] + 0x274) = *(*(unaff_R14[6] + 0xa0) + 0x14);\n    *(unaff_R14 + 0xbb) = 1;\n    iVar2 = *(unaff_R14[6] + 0xa0);\n    *(iVar2 + 0x38) = 0;\n    *(unaff_R14[6] + 0xb0) = iVar2;\n    *(unaff_R14[6] + 0xa0) = 0;\n    *(iVar2 + 4) = 2;\n    if (*0x5048a0 != 0) {\n        fcn.00456f00();\n        fcn.0043a3e0();\n    }\n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + -1;\n    return;\n}\n",
        "token_count": 563
    },
    "0043ad20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043adf9)\n\nulong fcn.0043ad20(void)\n\n{\n    int64_t in_RAX;\n    \n    if (*0x5048a4 == 0x7fffffff) {\n        return 0;\n    }\n    if ((in_RAX != 0) && (*(in_RAX + 4) == 2)) {\n        LOCK();\n        if (*(in_RAX + 4) == 2) {\n            *(in_RAX + 4) = 0;\n            fcn.0043d020();\n            fcn.0043aee0();\n            return 1;\n        }\n    }\n    if (*0x5047f0 != 0) {\n        fcn.00456f00();\n    }\n    return 0;\n}\n",
        "token_count": 175
    },
    "0043aee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043aee0(void)\n\n{\n    int32_t *piVar1;\n    int64_t unaff_R14;\n    \n    if (*(*(*(unaff_R14 + 0x30) + 0xa0) + 0x14) != *(*(unaff_R14 + 0x30) + 0x274)) {\n        if (*0x509e70 != '\\0') {\n            fcn.00456f00();\n        }\n        piVar1 = *(*(unaff_R14 + 0x30) + 0xa0) + 0x14;\n        *piVar1 = *piVar1 + 1;\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "0043b480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0043b480(ulong arg1)\n\n{\n    int64_t iVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    ulong *puVar5;\n    char cVar6;\n    int64_t in_RAX;\n    int64_t iVar7;\n    ulong uVar8;\n    ulong uVar9;\n    int64_t iVar10;\n    ulong *puVar11;\n    ulong arg2;\n    ulong unaff_RBX;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    uint32_t uVar13;\n    ulong arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar12 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (arg1 == 0) {\n                if (in_RAX != 0) {\n                    piVar2 = *(unaff_R14 + 0x30) + 0xd8;\n                    *piVar2 = *piVar2 + 1;\n                    *(*0x20 + -0x10) = unaff_R14;\n                    *(*0x20 + -0x34) = 0;\n                    *(*0x20 + -0x18) = unaff_RDI;\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + 0x28) = unaff_RSI;\n                    *(*0x20 + -0x20) = *(*(unaff_R14 + 0x30) + 0xa0);\n                    *(*0x20 + -0x50) = 0x43b505;\n                    iVar7 = fcn.0043bd20();\n                    if (iVar7 == 0) {\n                        *(*0x20 + -0x50) = 0x43b514;\n                        uVar8 = fcn.0043b200();\n                        *(*0x20 + -0x28) = uVar8;\n                        *(*0x20 + -0x50) = 0x43b525;\n                        fcn.00435000(6);\n                        *(*0x20 + -0x50) = 0x43b52f;\n                        fcn.00434000();\n                        iVar7 = *(*0x20 + -0x28);\n                    }\n                    if (*(iVar7 + 8) != 0) {\n                        if (*(iVar7 + 0x90) == 6) {\n                            *(*0x20 + -0x28) = iVar7;\n                            uVar8 = *(iVar7 + 8);\n                            *(*0x20 + -0x30) = uVar8;\n                            *(*0x20 + -0x50) = 0x43b56d;\n                            fcn.00459d80(uVar8, iVar7 + 0x38);\n                            iVar7 = (*(*0x20 + -0x30) - (*(*0x20 + -0x34) + (-(*(*0x20 + -0x34) + 0x20) & 7U))) + -0x20;\n                            iVar10 = *(*0x20 + -0x28);\n                            *(iVar10 + 0x38) = iVar7;\n                            *(iVar10 + 0x80) = iVar7;\n                            *(iVar10 + 0x40) = 0x459241;\n                            *(iVar10 + 0x48) = iVar10;\n                            puVar11 = *(iVar10 + 0x38) + -8;\n                            puVar5 = *(*0x20 + 8);\n                            uVar8 = *puVar5;\n                            arg4 = *(iVar10 + 0x40);\n                            *puVar11 = arg4;\n                            *(iVar10 + 0x38) = puVar11;\n                            *(iVar10 + 0x40) = uVar8;\n                            if (*0x557ed0 == 0) {\n                                *(iVar10 + 0x50) = puVar5;\n                            }\n                            else {\n                                *(*0x20 + -0x50) = 0x43b5f7;\n                                fcn.00459280(iVar10, iVar10 + 0x50, uVar8, arg4);\n                            }\n                            arg2 = *(*0x20 + 0x28);\n                            *(iVar10 + 0x128) = arg2;\n                            *(*0x20 + -0x50) = 0x43b60d;\n                            uVar9 = fcn.0043b860();\n                            if (*0x557ed0 == 0) {\n                                iVar7 = *(*0x20 + -0x28);\n                                *(iVar7 + 0x130) = uVar9;\n                            }\n                            else {\n                                iVar7 = *(*0x20 + -0x28);\n                                *(*0x20 + -0x50) = 0x43b635;\n                                fcn.00459280(iVar7, arg2, uVar8, arg4);\n                            }\n                            *(iVar7 + 0x138) = **(*0x20 + 8);\n                            iVar10 = *(*(*(*0x20 + -0x10) + 0x30) + 0x90);\n                            if (iVar10 != 0) {\n                                if (*0x557ed0 == 0) {\n                                    *(iVar7 + 0x168) = *(iVar10 + 0x168);\n                                }\n                                else {\n                                    *(*0x20 + -0x50) = 0x43b67e;\n                                    fcn.004593e0(iVar7, *(*0x20 + -0x10), uVar8, arg4);\n                                }\n                            }\n                            *(*0x20 + -0x50) = 0x43b688;\n                            cVar6 = fcn.004508c0();\n                            if (cVar6 != '\\0') {\n                                LOCK();\n                                *0x5047e8 = *0x5047e8 + 1;\n                            }\n                            iVar7 = *(unaff_R14 + 0x30);\n                            uVar13 = *(iVar7 + 0xf0);\n                            uVar3 = *(iVar7 + 0xf4);\n                            *(iVar7 + 0xf0) = uVar3;\n                            uVar13 = uVar13 ^ uVar13 << 0x11;\n                            uVar13 = uVar3 >> 0x10 ^ uVar13 >> 7 ^ uVar3 ^ uVar13;\n                            *(iVar7 + 0xf4) = uVar13;\n                            uVar3 = uVar3 + uVar13;\n                            iVar7 = *(*0x20 + -0x28);\n                            *(iVar7 + 0xbd) = uVar3;\n                            if ((uVar3 & 7) == 0) {\n                                *(iVar7 + 0xbc) = 1;\n                            }\n                            *(*0x20 + -0x50) = 0x43b6fe;\n                            fcn.00435000(1);\n                            iVar10 = *0x5047a0;\n                            iVar7 = *(*0x20 + -0x20);\n                            if (*(iVar7 + 0x5e8) == *(iVar7 + 0x5e0)) {\n                                LOCK();\n                                iVar1 = *0x5047a0 + 1;\n                                *0x5047a0 = *0x5047a0 + 0x10;\n                                *(iVar7 + 0x5e0) = iVar1;\n                                *(iVar7 + 0x5e8) = iVar10 + 0x11;\n                            }\n                            iVar10 = *(*0x20 + -0x28);\n                            *(iVar10 + 0x98) = *(iVar7 + 0x5e0);\n                            *(iVar7 + 0x5e0) = *(iVar7 + 0x5e0) + 1;\n                            if (*0x509e70 != '\\0') {\n                                *(*0x20 + -0x50) = 0x43b769;\n                                fcn.0044c780();\n                                iVar10 = *(*0x20 + -0x28);\n                            }\n                            iVar4 = *(*(*(*0x20 + -0x10) + 0x30) + 0xd8);\n                            *(*(*(*0x20 + -0x10) + 0x30) + 0xd8) = iVar4 + -1;\n                            if ((iVar4 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                            }\n                            return iVar10;\n                        }\n                        *(*0x20 + -0x50) = 0x43b7b8;\n                        fcn.00430d40();\n                    }\n                    *(*0x20 + -0x50) = 0x43b7c9;\n                    fcn.00430d40();\n                    *(*0x20 + -0x50) = 0x43b7da;\n                    fcn.00430d40();\n                }\n                iVar7 = *(unaff_R14 + 0x30);\n                *(iVar7 + 0xc4) = 0xffffffff;\n                *(*0x20 + -0x50) = 0x43b7f9;\n                fcn.00430d40();\n                arg1._0_4_ = iVar7;\n            }\n            unaff_RBX = 0x17;\n            *(*0x20 + -0x50) = 0x43b80a;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = unaff_RBX;\n        *(puVar12 + 0x18) = arg1;\n        *(puVar12 + 0x20) = unaff_RDI;\n        *(puVar12 + 0x28) = unaff_RSI;\n        *(puVar12 + -8) = 0x43b828;\n        fcn.0045b6e0();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        arg1._0_4_ = *(puVar12 + 0x18);\n        unaff_RDI = *(puVar12 + 0x20);\n        unaff_RSI = *(puVar12 + 0x28);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 2392
    },
    "0043b860": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.0043b860(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    int64_t in_RAX;\n    ulong uVar4;\n    uchar *puVar5;\n    ulong *puVar6;\n    int64_t iVar7;\n    uint64_t noname_1;\n    uchar *unaff_RBP;\n    ulong uVar8;\n    int32_t iVar9;\n    int64_t iVar10;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x350 && *0x20 + -0x350 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x3d0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*0x5580d4 < 1) || (*(in_RAX + 0x98) == 0)) {\n                return NULL;\n            }\n            *(*0x20 + 8) = in_RAX;\n            puVar6 = *(in_RAX + 0x130);\n            if (puVar6 == NULL) {\n                uVar8 = 0;\n                uVar4 = 0;\n            }\n            else {\n                uVar4 = *puVar6;\n                uVar8 = puVar6[1];\n            }\n            *(*0x20 + -0x378) = uVar8;\n            *(*0x20 + -0x48) = uVar4;\n            iVar9 = uVar8 + 1;\n            if (*0x5580d4 < iVar9) {\n                iVar9 = *0x5580d4;\n            }\n            *(*0x20 + -0x370) = iVar9;\n            *(*0x20 + -0x3d8) = 0x43b905;\n            uVar4 = fcn.004424e0(iVar9);\n            if (*(*0x20 + -0x370) != 0) {\n                *(*0x20 + -0x38) = uVar4;\n                iVar10 = *(*0x20 + -0x370) + -1;\n                noname_1 = -iVar10 >> 0x3f & 0x28;\n                *(*0x20 + -0x3d8) = 0x43b94e;\n                fcn.0040ed20(iVar10);\n                *(*0x20 + -0x3e0) = unaff_RBP;\n                *(*0x20 + -0x3d8) = 0x43b96f;\n                fcn.004598ae();\n                *(*0x20 + -0x3d0) = 0;\n                *(*0x20 + -0x3d8) = 0x43b9a8;\n                uVar4 = fcn.0044d020(0, noname_1, *0x20 + -0x368, 100);\n                *(*0x20 + -0x380) = uVar4;\n                *(*0x20 + -0x3d8) = 0x43b9bf;\n                puVar5 = fcn.004424e0(uVar4);\n                iVar10 = *(*0x20 + -0x380);\n                iVar7 = iVar10;\n                if (100 < iVar10) {\n                    iVar7 = 100;\n                }\n                if (puVar5 != *0x20 + -0x368) {\n                    *(*0x20 + -0x40) = puVar5;\n                    *(*0x20 + -0x3d8) = 0x43b9ef;\n                    fcn.0045a040(iVar7 << 3);\n                    puVar5 = *(*0x20 + -0x40);\n                    iVar10 = *(*0x20 + -0x380);\n                }\n                *(*0x20 + -0x30) = 0;\n                *(*0x20 + -0x28) = in_XMM15;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x30) = puVar5;\n                *(*0x20 + -0x28) = iVar10;\n                *(*0x20 + -0x20) = iVar10;\n                *(*0x20 + -0x18) = *(*(*0x20 + 8) + 0x98);\n                *(*0x20 + -0x10) = *(*(*0x20 + 8) + 0x128);\n                if (*0x557ed0 == 0) {\n                    puVar6 = *(*0x20 + -0x38);\n                    *puVar6 = *(*0x20 + -0x30);\n                    uVar1 = *(*0x20 + -0x24);\n                    uVar2 = *(*0x20 + -0x20);\n                    uVar3 = *(*0x20 + -0x1c);\n                    *(puVar6 + 1) = *(*0x20 + -0x28);\n                    *(puVar6 + 0xc) = uVar1;\n                    *(puVar6 + 2) = uVar2;\n                    *(puVar6 + 0x14) = uVar3;\n                    uVar1 = *(*0x20 + -0x14);\n                    uVar2 = *(*0x20 + -0x10);\n                    uVar3 = *(*0x20 + -0xc);\n                    *(puVar6 + 3) = *(*0x20 + -0x18);\n                    *(puVar6 + 0x1c) = uVar1;\n                    *(puVar6 + 4) = uVar2;\n                    *(puVar6 + 0x24) = uVar3;\n                }\n                else {\n                    *(*0x20 + -0x3d8) = 0x43bab0;\n                    fcn.0040eb60(*0x20 + -0x30);\n                }\n                *(*0x20 + -0x3d8) = 0x43babc;\n                puVar6 = fcn.0040b3c0();\n                uVar4 = *(*0x20 + -0x370);\n                puVar6[1] = uVar4;\n                puVar6[2] = uVar4;\n                if (*0x557ed0 == 0) {\n                    *puVar6 = *(*0x20 + -0x38);\n                }\n                else {\n                    *(*0x20 + -0x3d8) = 0x43baef;\n                    puVar6 = fcn.00459380(*(*0x20 + -0x38));\n                }\n                return puVar6;\n            }\n            *(*0x20 + -0x3d8) = 0x43bb09;\n            in_RAX = fcn.004597e0(0);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x43bb14;\n        fcn.00457040();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1622
    },
    "0043bb20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043bb20(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int32_t iVar2;\n    uchar (*unaff_RBX) [16];\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*unaff_RBX[9] == 6) {\n                if (*(*unaff_RBX + 8) - **unaff_RBX != 0x2000) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    *(*0x20 + -0x68) = 0x43bb74;\n                    fcn.00443680();\n                    unaff_RBX = *(*0x20 + 0x10);\n                    *unaff_RBX = in_XMM15;\n                    *unaff_RBX[1] = 0;\n                    in_RAX = *(*0x20 + 8);\n                }\n                *unaff_RBX[10] = *(in_RAX + 0xe00);\n                *(in_RAX + 0xe00) = unaff_RBX;\n                iVar2 = *(in_RAX + 0xe08) + 1;\n                *(in_RAX + 0xe08) = iVar2;\n                if (0x3f < iVar2) {\n                    *(*0x20 + -0x48) = in_XMM15;\n                    *(*0x20 + -0x18) = in_XMM15;\n                    iVar2 = 0;\n                    while (0x1f < *(in_RAX + 0xe08)) {\n                        piVar1 = *(in_RAX + 0xe00);\n                        if (piVar1 != NULL) {\n                            *(in_RAX + 0xe00) = piVar1[0x14];\n                        }\n                        *(in_RAX + 0xe08) = *(in_RAX + 0xe08) + -1;\n                        if (*piVar1 == 0) {\n                            piVar1[0x14] = *(*0x20 + -0x18);\n                            *(*0x20 + -0x18) = piVar1;\n                            if (*(*0x20 + -0x10) == 0) {\n                                *(*0x20 + -0x10) = piVar1;\n                            }\n                        }\n                        else {\n                            piVar1[0x14] = *(*0x20 + -0x48);\n                            *(*0x20 + -0x48) = piVar1;\n                            if (*(*0x20 + -0x40) == 0) {\n                                *(*0x20 + -0x40) = piVar1;\n                            }\n                        }\n                        iVar2 = iVar2 + 1;\n                    }\n                    *(*0x20 + -0x4c) = iVar2;\n                    *(*0x20 + -0x68) = 0x43bc65;\n                    fcn.00409300();\n                    *(*0x20 + -0x28) = *(*0x20 + -0x18);\n                    *(*0x20 + -0x20) = *(*0x20 + -0x10);\n                    if (*(*0x20 + -0x18) != 0) {\n                        *(*(*0x20 + -0x10) + 0xa0) = *0x504848;\n                        *0x504848 = *(*0x20 + -0x28);\n                    }\n                    *(*0x20 + -0x38) = *(*0x20 + -0x48);\n                    *(*0x20 + -0x30) = *(*0x20 + -0x40);\n                    if (*(*0x20 + -0x48) != 0) {\n                        *(*(*0x20 + -0x40) + 0xa0) = *0x504840;\n                        *0x504840 = *(*0x20 + -0x38);\n                    }\n                    *0x504850 = *0x504850 + *(*0x20 + -0x4c);\n                    *(*0x20 + -0x68) = 0x43bce5;\n                    fcn.00409520();\n                }\n                return;\n            }\n            unaff_RBX = 0x1d;\n            *(*0x20 + -0x68) = 0x43bcfb;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x43bd0b;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1181
    },
    "0043bd20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.0043bd20(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    do {\n        piVar1 = *(in_RAX + 0xe00);\n        if ((piVar1 != NULL) || ((*0x504840 == 0 && (*0x504848 == 0)))) {\n            if (piVar1 != NULL) {\n                *(in_RAX + 0xe00) = piVar1[0x14];\n                *(in_RAX + 0xe08) = *(in_RAX + 0xe08) + -1;\n                if (*piVar1 == 0) {\n                    fcn.00456f00();\n                    piVar1[2] = *piVar1 + 0x13a0;\n                }\n                return piVar1;\n            }\n            return NULL;\n        }\n        fcn.00409300();\n        while (*(in_RAX + 0xe08) < 0x20) {\n            if (*0x504840 == 0) {\n                if (*0x504848 == 0) break;\n                iVar2 = *0x504848;\n                *0x504848 = *(*0x504848 + 0xa0);\n            }\n            else {\n                iVar2 = *0x504840;\n                *0x504840 = *(*0x504840 + 0xa0);\n            }\n            *0x504850 = *0x504850 + -1;\n            *(iVar2 + 0xa0) = *(in_RAX + 0xe00);\n            *(in_RAX + 0xe00) = iVar2;\n            *(in_RAX + 0xe08) = *(in_RAX + 0xe08) + 1;\n        }\n        fcn.00409520();\n    } while( true );\n}\n",
        "token_count": 464
    },
    "0043bf20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0043bf20(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int32_t iVar2;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uchar auStack72 [48];\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    iVar2 = 0;\n    auStack72._0_16_ = in_XMM15;\n    auStack24 = in_XMM15;\n    while( true ) {\n        piVar1 = *(in_RAX + 0xe00);\n        if (piVar1 == NULL) break;\n        if (piVar1 != NULL) {\n            *(in_RAX + 0xe00) = piVar1[0x14];\n        }\n        *(in_RAX + 0xe08) = *(in_RAX + 0xe08) + -1;\n        if (*piVar1 == 0) {\n            piVar1[0x14] = auStack24._0_8_;\n            auStack24 = CONCAT88(auStack24._8_8_, piVar1);\n            if (auStack24._8_8_ == 0) {\n                auStack24 = CONCAT88(piVar1, piVar1);\n            }\n        }\n        else {\n            piVar1[0x14] = auStack72._0_8_;\n            auStack72._0_16_ = CONCAT88(auStack72._8_8_, piVar1);\n            if (auStack72._8_8_ == 0) {\n                auStack72._0_16_ = CONCAT88(piVar1, piVar1);\n            }\n        }\n        iVar2 = iVar2 + 1;\n    }\n    fcn.00409300();\n    if (auStack24._0_8_ != 0) {\n        *(auStack24._8_8_ + 0xa0) = *0x504848;\n        *0x504848 = auStack24._0_8_;\n    }\n    if (auStack72._0_8_ != 0) {\n        *(auStack72._8_8_ + 0xa0) = *0x504840;\n        *0x504840 = auStack72._0_8_;\n    }\n    *0x504850 = *0x504850 + iVar2;\n    fcn.00409520();\n    return;\n}\n",
        "token_count": 579
    },
    "0043c080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043c080(void)\n\n{\n    int32_t *piVar1;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    int64_t iVar2;\n    \n    iVar2 = unaff_R14;\n    if (*(*(unaff_R14 + 0x30) + 0x244) == 0) {\n        fcn.00456f00();\n        unaff_R14 = **(in_GS_OFFSET + 0x28);\n    }\n    piVar1 = *(iVar2 + 0x30) + 0x244;\n    *piVar1 = *piVar1 + -1;\n    iVar2 = *(unaff_R14 + 0x30);\n    if ((*(iVar2 + 0x244) == 0) && (*(iVar2 + 0x240) == 0)) {\n        *(iVar2 + 0x138) = 0;\n        *(unaff_R14 + 0xe8) = 0;\n    }\n    return;\n}\n",
        "token_count": 226
    },
    "0043c160": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043c160(void)\n\n{\n    uint32_t *puVar1;\n    uint64_t arg1;\n    uint *in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint unaff_EBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *in_RAX = unaff_EBX;\n            in_RAX[1] = 3;\n            *(in_RAX + 0x386) = 0;\n            *(in_RAX + 0x388) = 0x80;\n            if (*0x557ed0 == 0) {\n                *(in_RAX + 900) = in_RAX + 0x38a;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x43c1bc;\n                in_RAX = fcn.00459380();\n            }\n            for (iVar5 = 0; iVar5 < 5; iVar5 = iVar5 + 1) {\n                *(in_RAX + iVar5 * 6 + 0x1c) = 0;\n                *(in_RAX + iVar5 * 6 + 0x1e) = 0x20;\n                if (*0x557ed0 == 0) {\n                    *(in_RAX + iVar5 * 6 + 0x1a) = in_RAX + iVar5 * 0x40 + 0x38;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x43c211;\n                    in_RAX = fcn.00459380();\n                }\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x20) = 0x43c22b;\n            fcn.00429b20(in_RAX + 0x5b0);\n            if (*(*(*0x20 + 8) + 0x40) == 0) {\n                iVar6 = *(*0x20 + 0x10);\n                if (iVar6 != 0) {\n                    *(*0x20 + -0x20) = 0x43c265;\n                    uVar2 = fcn.00411a00();\n                    *(*(*0x20 + 8) + 0x40) = uVar2;\n                    iVar6 = *(*0x20 + 0x10);\n                    goto code_r0x0043c272;\n                }\n                if (*0x557db0 != 0) {\n                    *(*(*0x20 + 8) + 0x40) = *0x557db0;\n                    goto code_r0x0043c272;\n                }\n            }\n            else {\n                iVar6 = *(*0x20 + 0x10);\ncode_r0x0043c272:\n                arg1 = *0x503fe8;\n                iVar7 = ((iVar6 >> 0x1f) >> 0x1b) + iVar6 >> 5;\n                uVar4 = iVar6 + iVar7 * -0x20;\n                if (-1 < uVar4) {\n                    uVar4 = 1 << (uVar4 & 0x1f) & -(uVar4 < 0x20);\n                    uVar3 = iVar7;\n                    if (uVar3 < *0x503fe8) {\n                        puVar1 = *0x503fe0 + uVar3 * 4;\n                        LOCK();\n                        *puVar1 = *puVar1 | uVar4;\n                        if (uVar3 < *0x503fa8) {\n                            puVar1 = *0x503fa0 + uVar3 * 4;\n                            LOCK();\n                            *puVar1 = *puVar1 & ~uVar4;\n                            return;\n                        }\n                        *(*0x20 + -0x20) = 0x43c2e6;\n                        fcn.00459720(*0x503fa8);\n                    }\n                    *(*0x20 + -0x20) = 0x43c2ee;\n                    fcn.00459720(arg1);\n                }\n                *(*0x20 + -0x20) = 0x43c2f3;\n                fcn.0042e7c0();\n            }\n            unaff_EBX = 0xf;\n            *(*0x20 + -0x20) = 0x43c305;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_EBX;\n        *(puVar8 + -8) = 0x43c314;\n        fcn.00457040();\n        in_RAX = *(puVar8 + 8);\n        unaff_EBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1226
    },
    "0043c340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043c340(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint32_t uVar2;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    while (*(in_RAX + 0x5f0) != *(in_RAX + 0x5f4)) {\n        uVar2 = *(in_RAX + 0x5f4) - 1;\n        *(in_RAX + 0x5f4) = uVar2;\n        iVar1 = *(in_RAX + 0x5f8 + (uVar2 & 0xff) * 8);\n        *(iVar1 + 0xa0) = *0x504800;\n        if (*0x504808 == 0) {\n            *0x504808 = iVar1;\n        }\n        *0x504810 = *0x504810 + 1;\n        *0x504800 = iVar1;\n    }\n    iVar1 = *(in_RAX + 0xdf8);\n    if (iVar1 != 0) {\n        *(iVar1 + 0xa0) = *0x504800;\n        if (*0x504808 == 0) {\n            *0x504808 = iVar1;\n        }\n        *0x504810 = *0x504810 + 1;\n        *0x504800 = iVar1;\n        *(in_RAX + 0xdf8) = 0;\n    }\n    if (0 < *(in_RAX + 0x26e8)) {\n        fcn.00409300();\n        fcn.00409300();\n        fcn.0044a040(*(in_RAX + 0x26e8));\n        *(in_RAX + 0x26e8) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        iVar1 = in_RAX;\n        if (*0x557ed0 == 0) {\n            *(in_RAX + 0x26e0) = 0;\n        }\n        else {\n            fcn.004593a0(in_RAX, 0, param_3, param_4);\n        }\n        *(iVar1 + 0x26f8) = 0;\n        *(iVar1 + 0x1668) = 0;\n        fcn.00409520();\n        fcn.00409520();\n    }\n    if (*0x557cac != 0) {\n        fcn.00429c60();\n        fcn.0041fca0(in_RAX);\n    }\n    fcn.0040ee60(in_RAX + 0xe28);\n    *(in_RAX + 0xe18) = 0;\n    *(in_RAX + 0xe20) = 0x80;\n    if (*0x557ed0 == 0) {\n        *(in_RAX + 0xe10) = in_RAX + 0xe28;\n    }\n    else {\n        fcn.004593a0(in_RAX, in_RAX + 0xe28, param_3, param_4);\n    }\n    for (iVar1 = 0; iVar1 < 5; iVar1 = iVar1 + 1) {\n        fcn.0040ee60();\n        *(in_RAX + 0x70 + iVar1 * 0x18) = 0;\n        *(in_RAX + 0x78 + iVar1 * 0x18) = 0x20;\n        if (*0x557ed0 == 0) {\n            *(in_RAX + 0x68 + iVar1 * 0x18) = in_RAX + iVar1 * 0x100 + 0xe0;\n        }\n        else {\n            fcn.00459280(iVar1, iVar1 * 3, in_RAX + iVar1 * 0x18 + 0x68, param_4);\n        }\n    }\n    fcn.00456f00();\n    fcn.00411b60(*(in_RAX + 0x40));\n    *(in_RAX + 0x40) = 0;\n    fcn.0043bf20();\n    fcn.0044b5c0();\n    *(in_RAX + 0x1678) = 0;\n    *(in_RAX + 4) = 4;\n    return;\n}\n",
        "token_count": 1065
    },
    "0043c780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043c780(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int32_t in_EAX;\n    ulong uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    int64_t *piVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    int64_t *piVar15;\n    int64_t *unaff_RBX;\n    int64_t *piVar16;\n    uchar *puVar17;\n    uchar *unaff_RBP;\n    int64_t *unaff_RSI;\n    uint32_t uVar18;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint64_t arg4;\n    \n    do {\n        puVar17 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x28 && *0x20 + -0x28 != *(unaff_R14 + 0x10)) {\n            puVar17 = *0x20 + -0xa8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((-1 < *0x557cb0) && (0 < in_EAX)) {\n                *(*0x20 + -0x68) = *0x557cb0;\n                *(*0x20 + 8) = in_EAX;\n                if (*0x509e70 != '\\0') {\n                    *(*0x20 + -0x38) = 0;\n                    *(*0x20 + -0x38) = in_EAX;\n                    unaff_RBX = 0x1;\n                    unaff_RSI = 0x1;\n                    *(*0x20 + -0xb0) = 0x43c7fc;\n                    fcn.0044b680(*0x20 + -0x38);\n                }\n                *(*0x20 + -0xb0) = 0x43c805;\n                fcn.0045afe0();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                iVar6 = *(*0x20 + -0xa8);\n                if (*0x5048e8 == 0) {\n                    uVar13 = *(*0x20 + -0x68);\n                }\n                else {\n                    uVar13 = *(*0x20 + -0x68);\n                    *0x5048f0 = *0x5048f0 + uVar13 * (iVar6 - *0x5048e8);\n                }\n                uVar14 = *(*0x20 + 8);\n                uVar7 = uVar14;\n                uVar18 = ((uVar14 + 0x1f >> 0x1f) >> 0x1b) + uVar14 + 0x1f >> 5;\n                arg4 = uVar18;\n                *(*0x20 + -100) = uVar18;\n                *0x5048e8 = iVar6;\n                if (*0x503f48 < uVar14) {\n                    *(*0x20 + -0xb0) = 0x43c897;\n                    fcn.00409300();\n                    iVar1 = *(*0x20 + 8);\n                    if (*0x503f50 < iVar1) {\n                        *(*0x20 + -0x48) = iVar1;\n                        *(*0x20 + -0xb0) = 0x43c8dc;\n                        uVar5 = fcn.004424e0(iVar1);\n                        *(*0x20 + -0x10) = uVar5;\n                        uVar5 = *(*0x20 + -0x48);\n                        *(*0x20 + -0xb0) = 0x43c906;\n                        fcn.0040ed20(uVar5);\n                        *0x503f48 = *(*0x20 + -0x48);\n                        *0x503f50 = *0x503f48;\n                        if (*0x557ed0 == 0) {\n                            *0x503f40 = *(*0x20 + -0x10);\n                            piVar16 = *0x503f48;\n                        }\n                        else {\n                            *(*0x20 + -0xb0) = 0x43c947;\n                            fcn.004593e0(uVar5, *0x503f48, uVar7, arg4);\n                            piVar16 = *0x503f48;\n                        }\ncode_r0x0043c94e:\n                        *0x503f48 = piVar16;\n                        unaff_RSI = *0x503fa8;\n                        uVar13 = *(*0x20 + -100);\n                        uVar7 = uVar13;\n                        if (*0x503fb0 < uVar13) {\n                            *(*0x20 + -0x50) = uVar13;\n                            *(*0x20 + -0xb0) = 0x43c9b3;\n                            uVar5 = fcn.00442380(*0x503fa8);\n                            unaff_RBX = *(*0x20 + -0x50);\n                            piVar16 = unaff_RBX;\n                            piVar15 = unaff_RBX;\n                            if (*0x557ed0 != 0) {\n                                *(*0x20 + -0xb0) = 0x43c9e5;\n                                piVar16 = *0x503fa8;\n                                *0x503fa8 = unaff_RBX;\n                                piVar15 = *0x503fb0;\n                                *0x503fb0 = unaff_RBX;\n                                fcn.00459280(piVar16, piVar15, uVar7, arg4);\n                                uVar5 = *0x503fa0;\n                                piVar16 = *0x503fa8;\n                                piVar15 = *0x503fb0;\n                            }\n                            *0x503fb0 = piVar15;\n                            *0x503fa8 = piVar16;\n                            *0x503fa0 = uVar5;\n                            *(*0x20 + -0xb0) = 0x43c9ff;\n                            uVar5 = fcn.00442380(*0x503fe8);\n                            *0x503ff0 = *(*0x20 + -0x50);\n                            piVar16 = *0x503ff0;\n                            if (*0x557ed0 != 0) {\n                                *(*0x20 + -0xb0) = 0x43ca30;\n                                piVar16 = *0x503fe8;\n                                *0x503fe8 = *0x503ff0;\n                                fcn.00459280(piVar16, *0x503ff0, uVar7, arg4);\n                                uVar5 = *0x503fe0;\n                                piVar16 = *0x503fe8;\n                            }\ncode_r0x0043ca32:\n                            *0x503fe8 = piVar16;\n                            *0x503fe0 = uVar5;\n                            *(*0x20 + -0xb0) = 0x43ca3e;\n                            fcn.00409520();\n                            uVar13 = *(*0x20 + -0x68);\n                            uVar7 = *(*0x20 + 8);\n                            arg4 = *(*0x20 + -100);\n                            goto code_r0x0043ca80;\n                        }\n                        unaff_RBX = uVar13;\n                        piVar15 = *0x503fb0;\n                        if (unaff_RBX <= *0x503fb0) {\n                            piVar15 = *0x503ff0;\n                            *0x503fa8 = unaff_RBX;\n                            uVar5 = *0x503fe0;\n                            piVar16 = unaff_RBX;\n                            if (unaff_RBX <= *0x503ff0) goto code_r0x0043ca32;\n                            goto code_r0x0043cf79;\n                        }\n                        goto code_r0x0043cf85;\n                    }\n                    unaff_RSI = iVar1;\n                    piVar15 = *0x503f50;\n                    piVar16 = unaff_RSI;\n                    if (unaff_RSI <= *0x503f50) goto code_r0x0043c94e;\n                }\n                else {\ncode_r0x0043ca80:\n                    while( true ) {\n                        piVar16 = uVar13;\n                        if (uVar7 <= uVar13) break;\n                        unaff_RSI = uVar13;\n                        piVar12 = *0x503f48;\n                        piVar15 = piVar16;\n                        if (*0x503f48 <= unaff_RSI) goto code_r0x0043cf71;\n                        *(*0x20 + -0x58) = uVar13;\n                        *(*0x20 + -0x40) = unaff_RSI;\n                        iVar6 = (*0x503f40)[unaff_RSI];\n                        if (iVar6 == 0) {\n                            *(*0x20 + -0xb0) = 0x43cac7;\n                            iVar6 = fcn.0040b3c0();\n                            piVar16 = *(*0x20 + -0x58);\n                        }\n                        *(*0x20 + -0x28) = iVar6;\n                        *(*0x20 + -0xb0) = 0x43cae5;\n                        fcn.0043c160();\n                        piVar12 = *0x503f48;\n                        piVar15 = *0x503f40;\n                        if (*0x503f48 <= *(*0x20 + -0x40)) goto code_r0x0043cf6c;\n                        piVar15 = *0x503f40 + *(*0x20 + -0x40);\n                        if (*0x557ed0 != '\\0') {\n                            *(*0x20 + -0x18) = piVar15;\n                            piVar16 = *(*0x20 + -0x28);\n                            *(*0x20 + -0xb0) = 0x43cb2f;\n                            fcn.00402960();\n                            piVar15 = *(*0x20 + -0x18);\n                        }\n                        *piVar15 = *(*0x20 + -0x28);\n                        uVar13 = *(*0x20 + -0x58) + 1;\n                        uVar7 = *(*0x20 + 8);\n                        arg4 = *(*0x20 + -100);\n                        unaff_RBX = piVar16;\n                    }\n                    *(*0x20 + -0x20) = unaff_R14;\n                    piVar2 = *(*(unaff_R14 + 0x30) + 0xa0);\n                    if (piVar2 == NULL) {\ncode_r0x0043cbf8:\n                        piVar15 = *(*0x20 + -0x20);\ncode_r0x0043cc00:\n                        *(piVar15[6] + 0xa0) = 0;\n                        piVar16 = *0x503f40;\n                        piVar12 = *0x503f48;\n                        if (*0x503f48 != NULL) {\n                            iVar6 = **0x503f40;\n                            *(iVar6 + 0x38) = 0;\n                            *(iVar6 + 4) = 0;\n                            *(*0x20 + -0xb0) = 0x43cc45;\n                            fcn.0043cfc0();\n                            if (*0x509e70 != '\\0') {\n                                *(*0x20 + -0xb0) = 0x43cc53;\n                                fcn.0044c860();\n                            }\n                            goto code_r0x0043cc53;\n                        }\n                    }\n                    else {\n                        if (uVar7 <= *piVar2) {\n                            if (piVar2 == NULL) goto code_r0x0043cbf8;\n                            if (*0x509e70 != '\\0') {\n                                *(unaff_R14 + 0xe0) = piVar2;\n                                unaff_RSI = NULL;\n                                *(*0x20 + -0xb0) = 0x43cb95;\n                                fcn.0044b680(0);\n                                *(*0x20 + -0xb0) = 0x43cbad;\n                                fcn.0044c500();\n                                arg4 = *(*0x20 + -100);\n                            }\n                            piVar15 = *(*0x20 + -0x20);\n                            *(*(piVar15[6] + 0xa0) + 0x38) = 0;\n                            goto code_r0x0043cc00;\n                        }\n                        piVar2[1] = 1;\n                        *(*0x20 + -0xb0) = 0x43cbf6;\n                        fcn.004123a0();\n                        piVar16 = unaff_RBX;\ncode_r0x0043cc53:\n                        *0x557db0 = 0;\n                        uVar14 = *(*0x20 + -0x68);\n                        uVar13 = *(*0x20 + 8);\n                        uVar18 = uVar13;\n                        while (piVar12 = *0x503f48,  piVar15 = uVar14,  uVar13 < uVar14) {\n                            piVar16 = uVar13;\n                            unaff_RSI = *0x503f48;\n                            if (*0x503f48 <= piVar16) goto code_r0x0043cf58;\n                            *(*0x20 + -0x5c) = uVar13;\n                            *(*0x20 + -0xb0) = 0x43cc7a;\n                            fcn.0043c340();\n                            uVar18 = *(*0x20 + 8);\n                            uVar14 = *(*0x20 + -0x68);\n                            unaff_RSI = piVar12;\n                            uVar13 = *(*0x20 + -0x5c) + 1;\n                        }\n                        if (uVar18 == *0x503f48) {\ncode_r0x0043cd45:\n                            uVar9 = uVar18;\n                            iVar6 = *(*0x20 + -0x20);\n                            uVar7 = 0;\n                            while( true ) {\n                                uVar18 = uVar18 - 1;\n                                piVar12 = uVar18;\n                                *(*0x20 + -0x30) = uVar7;\n                                if (uVar18 < 0) {\n                                    *0x504060 = uVar9;\n                                    *0x504070 = 0;\n                                    for (uVar13 = 1; uVar7 = *0x504068,  uVar11 = uVar9,  uVar14 = uVar13, \n                                        uVar13 <= uVar9; uVar13 = uVar13 + 1) {\n                                        while (uVar18 = uVar11,  uVar18 != 0) {\n                                            uVar11 = uVar14 % uVar11;\n                                            uVar14 = uVar18;\n                                        }\n                                        if (uVar14 == 1) {\n                                            uVar11 = *0x504070 + 1;\n                                            uVar10 = *0x504070;\n                                            uVar8 = *0x504068;\n                                            if (*0x504078 < uVar11) {\n                                                *(*0x20 + -0x54) = uVar13;\n                                                *(*0x20 + -0xb0) = 0x43ce7e;\n                                                uVar9 = *0x504070;\n                                                uVar10 = *0x504068;\n                                                uVar8 = fcn.004425c0(*0x504070);\n                                                uVar4 = uVar8;\n                                                *0x504078 = uVar9;\n                                                if (*0x557ed0 != 0) {\n                                                    *(*0x20 + -0xb0) = 0x43cea5;\n                                                    uVar8 = fcn.00459280(uVar9, uVar11, uVar10, arg4);\n                                                    uVar4 = *0x504068;\n                                                }\n                                                *0x504068 = uVar4;\n                                                uVar9 = *(*0x20 + 8);\n                                                uVar13 = *(*0x20 + -0x54);\n                                                uVar10 = uVar7;\n                                            }\n                                            *0x504070 = uVar10 + 1;\n                                            *(uVar8 + uVar10 * 4) = uVar13;\n                                        }\n                                    }\n                                    *0x557cb0 = uVar9;\n                                    return;\n                                }\n                                if (*0x503f48 <= uVar18) break;\n                                uVar11 = (*0x503f40)[uVar18];\n                                arg4 = uVar7;\n                                if (*(*(iVar6 + 0x30) + 0xa0) != uVar11) {\n                                    *(uVar11 + 4) = 0;\n                                    iVar3 = *0x5047c0;\n                                    do {\n                                    } while (*(uVar11 + 0x5f4) != *(uVar11 + 0x5f4));\n                                    if ((*(uVar11 + 0x5f4) == *(uVar11 + 0x5f0)) && (*(uVar11 + 0xdf8) == 0)) {\n                                        *(*0x20 + -0x60) = uVar18;\n                                        *(*0x20 + -0xb0) = 0x43cdc5;\n                                        fcn.0043eb60();\n                                        uVar9 = *(*0x20 + 8);\n                                        uVar18 = *(*0x20 + -0x60);\n                                        iVar6 = *(*0x20 + -0x20);\n                                        uVar7 = *(*0x20 + -0x30);\n                                        arg4 = *(*0x20 + -0x30);\n                                    }\n                                    else {\n                                        if (*0x5047c0 != 0) {\n                                            *0x5047c0 = *(*0x5047c0 + 0x130);\n                                            *0x5047c8 = *0x5047c8 + -1;\n                                        }\n                                        *(uVar11 + 0x38) = iVar3;\n                                        *(uVar11 + 8) = uVar7;\n                                        uVar7 = uVar11;\n                                        arg4 = uVar11;\n                                    }\n                                }\n                            }\n                            *(*0x20 + -0xb0) = 0x43cf3a;\n                            fcn.00459720(*0x503f48);\ncode_r0x0043cf3a:\n                            *(*0x20 + -0xb0) = 0x43cf45;\n                            fcn.004597a0(piVar16, piVar12);\ncode_r0x0043cf45:\n                            *(*0x20 + -0xb0) = 0x43cf4d;\n                            fcn.004597a0(piVar16, piVar12);\n                        }\n                        else {\n                            *(*0x20 + -0xb0) = 0x43cccc;\n                            fcn.00409300();\n                            piVar15 = *(*0x20 + 8);\n                            piVar12 = piVar15;\n                            piVar16 = *0x503f50;\n                            if (piVar15 <= *0x503f50) {\n                                piVar16 = *(*0x20 + -100);\n                                piVar12 = *0x503fb0;\n                                *0x503f48 = piVar15;\n                                if (piVar16 <= *0x503fb0) {\n                                    piVar12 = *0x503ff0;\n                                    *0x503fa8 = piVar16;\n                                    if (piVar16 <= *0x503ff0) {\n                                        *(*0x20 + -0xb0) = 0x43cd3e;\n                                        *0x503fe8 = piVar16;\n                                        fcn.00409520();\n                                        uVar18 = *(*0x20 + 8);\n                                        goto code_r0x0043cd45;\n                                    }\n                                    goto code_r0x0043cf3a;\n                                }\n                                goto code_r0x0043cf45;\n                            }\n                        }\n                        *(*0x20 + -0xb0) = 0x43cf58;\n                        piVar15 = piVar16;\n                        fcn.004597a0(piVar12, piVar16);\ncode_r0x0043cf58:\n                        *(*0x20 + -0xb0) = 0x43cf65;\n                        piVar12 = unaff_RSI;\n                        fcn.00459720(unaff_RSI);\n                    }\n                    *(*0x20 + -0xb0) = 0x43cf6c;\n                    fcn.00459720(piVar12);\ncode_r0x0043cf6c:\n                    *(*0x20 + -0xb0) = 0x43cf71;\n                    fcn.00459720(piVar12);\n                    unaff_RBX = piVar16;\ncode_r0x0043cf71:\n                    *(*0x20 + -0xb0) = 0x43cf79;\n                    fcn.00459720(piVar12);\ncode_r0x0043cf79:\n                    *(*0x20 + -0xb0) = 0x43cf85;\n                    fcn.004597a0(unaff_RBX, piVar15);\ncode_r0x0043cf85:\n                    *(*0x20 + -0xb0) = 0x43cf8d;\n                    fcn.004597a0(unaff_RBX, piVar15);\n                }\n                *(*0x20 + -0xb0) = 0x43cf95;\n                fcn.004597a0(unaff_RSI, piVar15);\n            }\n            unaff_RBX = 0x17;\n            *(*0x20 + -0xb0) = 0x43cfa6;\n            in_EAX = fcn.00430d40();\n        }\n        *(puVar17 + 8) = in_EAX;\n        *(puVar17 + -8) = 0x43cfb0;\n        fcn.00457040();\n        in_EAX = *(puVar17 + 8);\n        *0x20 = puVar17;\n    } while( true );\n}\n",
        "token_count": 4917
    },
    "0043cfc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043cfc0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.0043d020();\n    fcn.004123a0();\n    if (*0x509e70 != '\\0') {\n        fcn.0044c4a0();\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "0043d020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043d020(void)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    if (*(*(unaff_R14 + 0x30) + 0xa0) != 0) {\n        fcn.00430d40();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if ((*(in_RAX + 0x38) == 0) && (*(in_RAX + 4) == 0)) {\n        *(*(unaff_R14 + 0x30) + 0xa0) = in_RAX;\n        *(in_RAX + 0x38) = *(unaff_R14 + 0x30);\n        *(in_RAX + 4) = 1;\n        return;\n    }\n    do {\n        fcn.004324c0();\n        fcn.00432dc0();\n        fcn.00432ac0();\n        fcn.00432dc0();\n        fcn.00432bc0();\n        fcn.00432dc0();\n        fcn.00432ac0();\n        fcn.00432720();\n        fcn.00432540();\n        fcn.00430d40();\n    } while( true );\n}\n",
        "token_count": 286
    },
    "0043d140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043d140(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(unaff_R14 + 0x30);\n            iVar3 = *(iVar1 + 0xa0);\n            if (iVar3 != 0) {\n                *(*0x20 + -0x10) = iVar1;\n                *(*0x20 + -0x18) = iVar3;\n                iVar2 = *(iVar3 + 0x38);\n                *(*0x20 + -0x30) = iVar2;\n                if ((iVar2 == iVar1) && (*(iVar3 + 4) == 1)) {\n                    *(*0x20 + -0x20) = unaff_R14;\n                    if (*0x509e70 != '\\0') {\n                        *(*0x20 + -0x48) = 0x43d19e;\n                        fcn.0044c500();\n                        iVar3 = *(*0x20 + -0x18);\n                    }\n                    *(*(*(*0x20 + -0x20) + 0x30) + 0xa0) = 0;\n                    *(iVar3 + 0x38) = 0;\n                    *(iVar3 + 4) = 0;\n                    return;\n                }\n                *(*0x20 + -0x28) = *(iVar3 + 4);\n                *(*0x20 + -0x48) = 0x43d1dd;\n                fcn.004324c0();\n                *(*0x20 + -0x48) = 0x43d1ee;\n                fcn.00432dc0();\n                *(*0x20 + -0x48) = 0x43d1f8;\n                fcn.00432d40();\n                *(*0x20 + -0x48) = 0x43d209;\n                fcn.00432dc0();\n                *(*0x20 + -0x48) = 0x43d213;\n                fcn.00432d40();\n                *(*0x20 + -0x48) = 0x43d225;\n                fcn.00432dc0();\n                *(*0x20 + -0x48) = 0x43d22f;\n                fcn.00432c20();\n                *(*0x20 + -0x48) = 0x43d245;\n                fcn.00432dc0();\n                *(*0x20 + -0x48) = 0x43d24f;\n                fcn.00432ac0();\n                *(*0x20 + -0x48) = 0x43d254;\n                fcn.00432720();\n                *(*0x20 + -0x48) = 0x43d259;\n                fcn.00432540();\n                *(*0x20 + -0x48) = 0x43d26a;\n                fcn.00430d40();\n            }\n            *(*0x20 + -0x48) = 0x43d27b;\n            fcn.00430d40();\n        }\n        *(puVar4 + -8) = 0x43d285;\n        fcn.00457040();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 839
    },
    "0043d300": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043d300(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint64_t *puVar3;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint32_t uVar11;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*0x557c6d != '\\0') || (*0x557c6b != '\\0')) {\n                return;\n            }\n            if (*0x557cc8 != 0) {\n                return;\n            }\n            if ((*0x557c6c == '\\0') && (*0x557c64 != '\\0')) {\n                *(*0x20 + -0x50) = 0x43d366;\n                *0x557d58 = fcn.00436900();\n                uVar5 = *0x557c90 != 0;\n            }\n            else {\n                uVar5 = 0;\n            }\n            iVar1 = *0x5047cc;\n            uVar6 = *0x5047c8;\n            iVar8 = *0x5047d0 - *0x5047e0;\n            uVar12 = *0x5047dc;\n            uVar7 = ((iVar8 - *0x5047c8) - *0x5047cc) - *0x5047dc;\n            uVar9 = uVar7;\n            if (uVar5 < uVar7) {\n                return;\n            }\n            uVar5 = *0x5047c8;\n            uVar11 = *0x5047dc;\n            if (-1 < uVar7) {\n                *(*0x20 + -0x28) = 0;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = 0x43d5e0;\n                *(*0x20 + -0x10) = *0x20 + -0x28;\n                *(*0x20 + -0x50) = 0x43d3ee;\n                fcn.00434160();\n                uVar11 = uVar12;\n                uVar5 = uVar6;\n                if (*(*0x20 + -0x28) != 0) {\n                    if (*0x557d60 == 0) {\ncode_r0x0043d41e:\n                        uVar6 = *0x503f48;\n                        iVar2 = 0;\n                        while( true ) {\n                            if (*0x503f48 <= iVar2) {\n                                uVar4 = *(unaff_R14 + 0x30);\n                                *(uVar4 + 0xc4) = 0xffffffff;\n                                *(*0x20 + -0x50) = 0x43d47b;\n                                fcn.00409520();\n                                uVar9 = 0x25;\n                                *(*0x20 + -0x50) = 0x43d48c;\n                                fcn.00430d40();\n                                goto code_r0x0043d48c;\n                            }\n                            if (0 < *(*(*0x503f40 + iVar2 * 8) + 0x26e8)) break;\n                            iVar2 = iVar2 + 1;\n                        }\n                        return;\n                    }\n                    *(*0x20 + -0x50) = 0x43d409;\n                    iVar2 = fcn.0044afe0();\n                    if (uVar9 == 0) goto code_r0x0043d41e;\n                    puVar3 = 0x5047f0;\n                    *0x557d60 = iVar2;\n                    while( true ) {\n                        uVar11 = uVar12;\n                        uVar4 = *puVar3;\n                        if (uVar4 == 0) break;\n                        if (uVar9 == uVar4) {\n                            *puVar3 = *(uVar9 + 8);\n                            break;\n                        }\ncode_r0x0043d48c:\n                        puVar3 = uVar4 + 8;\n                    }\n                    uVar12 = *0x5047c0;\n                    if (*0x5047c0 != 0) {\n                        uVar6 = *(*0x5047c0 + 0x130);\n                        *0x5047c8 = *0x5047c8 - 1;\n                        *0x5047c0 = uVar6;\n                    }\n                    uVar5 = uVar6;\n                    if (uVar12 != 0) {\n                        *(uVar12 + 0xa8) = uVar9;\n                        *(*0x20 + -0x50) = 0x43d4e5;\n                        fcn.00409600();\n                        return;\n                    }\n                    *(*0x20 + -0x50) = 0x43d505;\n                    fcn.00430d40();\n                }\n                *(*0x20 + -0x50) = 0x43d513;\n                fcn.00409520();\n                *(*0x20 + -0x50) = 0x43d525;\n                fcn.00430d40();\n            }\n            *(*0x20 + -0x20) = iVar8;\n            *(*0x20 + -0x2c) = uVar5;\n            *(*0x20 + -0x30) = iVar1;\n            *(*0x20 + -0x34) = uVar11;\n            *(*0x20 + -0x50) = 0x43d53c;\n            fcn.004324c0();\n            *(*0x20 + -0x50) = 0x43d54d;\n            fcn.00432dc0();\n            *(*0x20 + -0x50) = 0x43d559;\n            fcn.00432bc0();\n            *(*0x20 + -0x50) = 0x43d56a;\n            fcn.00432dc0();\n            *(*0x20 + -0x50) = 0x43d576;\n            fcn.00432bc0();\n            *(*0x20 + -0x50) = 0x43d587;\n            fcn.00432dc0();\n            *(*0x20 + -0x50) = 0x43d594;\n            fcn.00432bc0();\n            *(*0x20 + -0x50) = 0x43d5a5;\n            fcn.00432dc0();\n            *(*0x20 + -0x50) = 0x43d5b1;\n            fcn.00432bc0();\n            *(*0x20 + -0x50) = 0x43d5b6;\n            fcn.00432720();\n            *(*0x20 + -0x50) = 0x43d5bb;\n            fcn.00432540();\n            *(*0x20 + -0x50) = 0x43d5cc;\n            fcn.00430d40();\n        }\n        *(puVar10 + -8) = 0x43d5d2;\n        fcn.00457040();\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 1731
    },
    "0043dba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0043dba0(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    bool bVar6;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00409300();\n    iVar4 = 0;\n    for (iVar3 = 0; iVar3 < *0x503f48; iVar3 = iVar3 + 1) {\n        iVar2 = *(*0x503f40 + iVar3 * 8);\n        if (iVar2 != 0) {\n            iVar1 = *(iVar2 + 4);\n            if ((iVar1 == 1) || (iVar1 == 2)) {\n                if (*(iVar2 + 0x18) == *(iVar2 + 0x10)) {\n                    iVar5 = *(iVar2 + 0x20) + 10000000;\n                    if (iVar5 <= in_RAX) {\n                        fcn.0043de80();\n                    }\n                    bVar6 = iVar5 <= in_RAX;\n                }\n                else {\n                    *(iVar2 + 0x18) = *(iVar2 + 0x10);\n                    *(iVar2 + 0x20) = in_RAX;\n                    bVar6 = false;\n                }\n            }\n            else {\n                bVar6 = false;\n            }\n            if (iVar1 == 2) {\n                if ((bVar6) || (*(iVar2 + 0x28) == *(iVar2 + 0x14))) {\n                    do {\n                    } while (*(iVar2 + 0x5f4) != *(iVar2 + 0x5f4));\n                    if (*(iVar2 + 0x5f4) == *(iVar2 + 0x5f0)) {\n                        if (*(iVar2 + 0xdf8) == 0) {\n                            bVar6 = *0x5047fc + *0x5047f8 != 0;\n                        }\n                        else {\n                            bVar6 = false;\n                        }\n                    }\n                    else {\n                        bVar6 = false;\n                    }\n                    if ((!bVar6) || (*(iVar2 + 0x30) + 10000000 <= in_RAX)) {\n                        fcn.00409520();\n                        fcn.0043d2a0();\n                        LOCK();\n                        if (*(iVar2 + 4) == 2) {\n                            *(iVar2 + 4) = 0;\n                            if (*0x509e70 != '\\0') {\n                                fcn.0044cca0();\n                                fcn.0044c500();\n                            }\n                            *(iVar2 + 0x14) = *(iVar2 + 0x14) + 1;\n                            fcn.00437340();\n                            iVar4 = iVar4 + 1;\n                        }\n                        fcn.0043d2a0();\n                        fcn.00409300();\n                    }\n                }\n                else {\n                    *(iVar2 + 0x28) = *(iVar2 + 0x14);\n                    *(iVar2 + 0x30) = in_RAX;\n                }\n            }\n        }\n    }\n    fcn.00409520();\n    return iVar4;\n}\n",
        "token_count": 753
    },
    "0043dde0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.0043dde0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    int64_t unaff_R14;\n    \n    while (iVar2 = *0x503f48,  iVar1 = *0x503f40,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    uVar5 = 0;\n    for (iVar4 = 0; iVar4 < iVar2; iVar4 = iVar4 + 1) {\n        if (*(*(iVar1 + iVar4 * 8) + 4) == 1) {\n            uVar3 = fcn.0043de80();\n            uVar5 = uVar5 & 0xff | uVar3;\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 226
    },
    "0043de80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0043de80(void)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    piVar1 = *(in_RAX + 0x38);\n    if ((piVar1 != NULL) && (*(unaff_R14 + 0x30) != piVar1)) {\n        iVar2 = piVar1[0x12];\n        if ((iVar2 != 0) && (*piVar1 != iVar2)) {\n            *(iVar2 + 0xb1) = 1;\n            *(iVar2 + 0x10) = 0xfffffffffffffade;\n            if (*0x5580d8 == 0) {\n                *(in_RAX + 0x2708) = 1;\n                fcn.0042db60();\n            }\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 257
    },
    "0043df20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043df20(void)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    char in_AL;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    int64_t iStack184;\n    uint64_t uStack56;\n    uint64_t uStack48;\n    int64_t iStack40;\n    int64_t iStack32;\n    ulong uStack24;\n    int64_t iStack16;\n    \n    while (&uStack56 < *(unaff_R14 + 0x10) || &uStack56 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.0045afe0();\n    if (*0x557e38 == 0) {\n        *0x557e38 = iStack184;\n    }\n    fcn.00409300();\n    iStack40 = *0x557e38;\n    uStack48 = *0x5047f8;\n    uStack56 = *0x5047fc;\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432bc0(iStack184 - iStack40 >> 0x3f, (iStack184 - iStack40) / 1000000);\n    fcn.00432dc0();\n    fcn.00432bc0();\n    fcn.00432dc0();\n    fcn.00432ac0();\n    fcn.00432dc0();\n    fcn.00432bc0();\n    fcn.00432dc0();\n    fcn.00432ac0();\n    fcn.00432dc0();\n    fcn.00432bc0();\n    fcn.00432dc0();\n    fcn.00432bc0();\n    fcn.00432540();\n    if (in_AL != '\\0') {\n        uStack48 = *0x5048a0;\n        iStack40 = *0x5047cc;\n        uStack56 = *0x5048b0;\n        fcn.004324c0();\n        fcn.00432dc0();\n        fcn.00432ac0();\n        fcn.00432dc0();\n        fcn.00432bc0();\n        fcn.00432dc0();\n        fcn.00432bc0();\n        fcn.00432dc0();\n        fcn.00432ac0();\n        fcn.00432720();\n        fcn.00432540();\n    }\n    iVar3 = *0x503f48;\n    iStack16 = *0x503f40;\n    for (iVar4 = 0; iVar4 < iVar3; iVar4 = iVar4 + 1) {\n        iVar2 = *(iStack16 + iVar4 * 8);\n        uVar1 = *(iVar2 + 0x5f0);\n        if (in_AL == '\\0') {\n            fcn.004324c0();\n            fcn.004326e0();\n            fcn.00432540();\n            if (iVar4 == 0) {\n                fcn.004324c0();\n                fcn.00432dc0();\n                fcn.00432540();\n            }\n            fcn.004324c0();\n            fcn.00432ac0(uVar1);\n            fcn.00432540();\n            if (iVar4 == *0x503f48 + -1) {\n                fcn.004324c0();\n                fcn.00432dc0();\n                fcn.00432540();\n            }\n        }\n        else {\n            uStack48 = *(iVar2 + 4);\n            uStack56 = *(iVar2 + 0x10);\n            iStack40 = *(iVar2 + 0xe08);\n            fcn.004324c0();\n            fcn.00432dc0();\n            fcn.00432bc0();\n            fcn.00432dc0();\n            fcn.00432ac0();\n            fcn.00432dc0();\n            fcn.00432ac0();\n            fcn.00432dc0();\n            fcn.00432ac0();\n            fcn.00432dc0();\n            fcn.00432bc0();\n            fcn.00432dc0();\n            fcn.00432ac0(uVar1);\n            fcn.00432dc0();\n            fcn.00432bc0();\n            fcn.00432dc0();\n            fcn.00432bc0();\n            fcn.00432720();\n            fcn.00432540();\n        }\n    }\n    iVar4 = *0x5035f0;\n    if (in_AL != '\\0') {\n        while (iVar4 != 0) {\n            iStack40 = *(iVar4 + 0xb8);\n            uStack24 = *(iVar4 + 200);\n            iStack32 = iVar4;\n            fcn.004324c0();\n            fcn.00432dc0();\n            fcn.00432bc0();\n            fcn.00432dc0();\n            fcn.00432bc0();\n            fcn.00432dc0();\n            fcn.00432bc0();\n            fcn.00432dc0();\n            fcn.00432bc0();\n            fcn.00432dc0();\n            fcn.00432bc0();\n            fcn.00432dc0();\n            fcn.00432dc0();\n            fcn.00432dc0();\n            fcn.00432bc0();\n            fcn.00432dc0();\n            fcn.00432bc0();\n            fcn.00432dc0();\n            fcn.00432760();\n            fcn.00432dc0();\n            fcn.00432760();\n            fcn.00432dc0();\n            fcn.00432bc0();\n            fcn.00432720();\n            fcn.00432540();\n            iVar4 = *(iStack32 + 0x128);\n        }\n        fcn.00434160();\n        fcn.004094e0();\n        return;\n    }\n    fcn.004094e0();\n    return;\n}\n",
        "token_count": 1339
    },
    "0043e720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043e720(void)\n\n{\n    uint8_t in_AL;\n    uint8_t uVar1;\n    int32_t iVar2;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00409300();\n    iVar2 = *0x504830;\n    uVar1 = in_AL ^ 1;\n    if (*0x504818 != uVar1) {\n        *0x504818 = uVar1;\n        if (in_AL == 0) {\n            fcn.00409520();\n        }\n        else {\n            *0x504830 = 0;\n            if (*0x504828 != 0) {\n                *(*0x504828 + 0xa0) = 0;\n                if (*0x504808 == 0) {\n                    *0x504800 = *0x504820;\n                }\n                else {\n                    *(*0x504808 + 0xa0) = *0x504820;\n                }\n                *0x504808 = *0x504828;\n            }\n            *0x504810 = *0x504810 + iVar2;\n            *0x504820 = in_XMM15;\n            fcn.00409520();\n            while ((iVar2 != 0 && (*0x5047f8 != 0))) {\n                fcn.00437080();\n                iVar2 = iVar2 + -1;\n            }\n        }\n        return;\n    }\n    fcn.00409520();\n    return;\n}\n",
        "token_count": 375
    },
    "0043e860": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0043e860(void)\n\n{\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (*0x504818 != '\\0') {\n        uVar1 = fcn.004508c0();\n        return uVar1;\n    }\n    return 1;\n}\n",
        "token_count": 113
    },
    "0043f0a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043f0a0(ulong arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong uVar5;\n    int64_t in_RAX;\n    uchar (*unaff_RBX) [16];\n    int32_t iVar6;\n    int32_t iVar7;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    iVar1 = *(in_RAX + 0x5f0);\n    iVar7 = 0;\n    for (iVar6 = *(in_RAX + 0x5f4); (iVar2 = **unaff_RBX,  iVar2 != 0 && (iVar6 - iVar1 < 0x100)); iVar6 = iVar6 + 1) {\n        if ((iVar2 != 0) && (iVar3 = *(iVar2 + 0xa0),  **unaff_RBX = iVar3,  iVar3 == 0)) {\n            *(*unaff_RBX + 8) = 0;\n        }\n        *(in_RAX + 0x5f8 + iVar6 * 8) = iVar2;\n        iVar7 = iVar7 + 1;\n    }\n    *(in_RAX + 0x5f4) = iVar6;\n    if (**unaff_RBX != 0) {\n        fcn.00409300();\n        iVar2 = *(*unaff_RBX + 8);\n        uVar4 = **unaff_RBX;\n        uVar5 = *0x504800;\n        iVar3 = *0x504808;\n        if ((iVar2 != 0) && (*(iVar2 + 0xa0) = 0,  uVar5 = uVar4,  iVar3 = iVar2,  *0x504808 != 0)) {\n            *(*0x504808 + 0xa0) = uVar4;\n            uVar5 = *0x504800;\n        }\n        *0x504808 = iVar3;\n        *0x504800 = uVar5;\n        *0x504810 = *0x504810 + (arg1 - iVar7);\n        *unaff_RBX = in_XMM15;\n        fcn.00409520();\n    }\n    return;\n}\n",
        "token_count": 549
    },
    "0043f3c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.0043f3c0(uint64_t arg1)\n\n{\n    uint64_t *puVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    int64_t unaff_RBX;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    char unaff_DIL;\n    int64_t unaff_R14;\n    \n    while (uVar5 = arg1,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n        arg1 = arg1 & 0xffffffff;\n    }\n    do {\n        while( true ) {\n            iVar2 = *(in_RAX + 0x5f0);\n            uVar6 = *(in_RAX + 0x5f4) - iVar2;\n            uVar6 = uVar6 - (uVar6 >> 1);\n            if (uVar6 == 0) break;\n            if (uVar6 < 0x81) {\n                for (uVar7 = 0; uVar7 < uVar6; uVar7 = uVar7 + 1) {\n                    *(unaff_RBX + (uVar7 + uVar5 & 0xff) * 8) = *(in_RAX + 0x5f8 + (uVar7 + iVar2 & 0xff) * 8);\n                }\n                LOCK();\n                if (iVar2 == *(in_RAX + 0x5f0)) {\n                    *(in_RAX + 0x5f0) = uVar6 + iVar2;\n                    return uVar6;\n                }\n            }\n        }\n        if ((unaff_DIL == '\\0') || (uVar3 = *(in_RAX + 0xdf8),  uVar3 == 0)) {\n            return 0;\n        }\n        if (*(in_RAX + 4) == 1) {\n            fcn.00456f00();\n            uVar5 = arg1 & 0xffffffff;\n        }\n        LOCK();\n        puVar1 = in_RAX + 0xdf8;\n        uVar4 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar3 == uVar4) * *puVar1;\n    } while (uVar3 != uVar4);\n    *(unaff_RBX + (uVar5 & 0xff) * 8) = uVar3;\n    return 1;\n}\n",
        "token_count": 581
    },
    "0043f560": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0043f560(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    int32_t iVar5;\n    int64_t in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar2 = *(in_RAX + 0x5f4);\n            *(*0x20 + -0xc) = uVar2;\n            *(*0x20 + -0x30) = 0x43f59d;\n            iVar5 = fcn.0043f3c0(uVar2);\n            if (iVar5 == 0) {\n                return 0;\n            }\n            iVar1 = iVar5 + *(*0x20 + -0xc) + -1;\n            iVar3 = *(*0x20 + 8);\n            uVar4 = *(iVar3 + 0x5f8 + iVar1 * 8);\n            if (iVar5 == 1) {\n                return uVar4;\n            }\n            uVar2 = ((*(*0x20 + -0xc) - *(iVar3 + 0x5f0)) + iVar5) - 1;\n            arg1._0_1_ = uVar2;\n            if (uVar2 < 0x100) {\n                *(iVar3 + 0x5f4) = iVar1;\n                return uVar4;\n            }\n            unaff_RBX = 0x18;\n            *(*0x20 + -0x30) = 0x43f61a;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        puVar6[0x18] = arg1;\n        *(puVar6 + -8) = 0x43f62e;\n        fcn.00457040();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1._0_1_ = puVar6[0x18];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 619
    },
    "0043f660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043f660(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    int64_t *in_RAX;\n    ulong uVar4;\n    ulong uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    ulong uVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t *piVar10;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xb0 && *0x20 + -0xb0 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x130;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*in_RAX != 1) {\n                if (*in_RAX == 2) {\n                    return;\n                }\n                *(*0x20 + 8) = in_RAX;\n                *in_RAX = 1;\n                uVar6 = 0;\n                while (uVar6 <= in_RAX[1] && in_RAX[1] != uVar6) {\n                    *(*0x20 + -0xf0) = uVar6;\n                    *(*0x20 + -0x138) = 0x43f6d1;\n                    fcn.0043f660();\n                    in_RAX = *(*0x20 + 8);\n                    uVar6 = *(*0x20 + -0xf0) + 1;\n                }\n                if (in_RAX[2] == 0) {\n                    *in_RAX = 2;\n                    return;\n                }\n                if (*0x557f20 == '\\0') {\n                    uVar4 = 0;\n                    uVar5 = 0;\n                    uVar8 = 0;\n                }\n                else {\n                    *(*0x20 + -0x138) = 0x43f705;\n                    fcn.0045afe0();\n                    uVar4 = *(*0x20 + -0x130);\n                    in_RAX = *(*0x20 + 8);\n                    uVar5 = *0x557f38;\n                    uVar8 = *0x557f30;\n                }\n                *(*0x20 + -0xe8) = uVar5;\n                *(*0x20 + -0xe0) = uVar8;\n                *(*0x20 + -0x108) = uVar4;\n                iVar1 = in_RAX[1];\n                *(*0x20 + -0xc0) = iVar1;\n                piVar10 = in_RAX + iVar1 + 3;\n                *(*0x20 + -0x20) = piVar10;\n                uVar6 = 0;\n                while (uVar6 <= in_RAX[2] && in_RAX[2] != uVar6) {\n                    *(*0x20 + -0xf8) = uVar6;\n                    pcVar2 = piVar10[uVar6];\n                    *(*0x20 + -0x138) = 0x43f78a;\n                    (*pcVar2)(uVar5, piVar10 + uVar6);\n                    in_RAX = *(*0x20 + 8);\n                    uVar5 = *(*0x20 + -0xe8);\n                    uVar4 = *(*0x20 + -0x108);\n                    piVar10 = *(*0x20 + -0x20);\n                    uVar6 = *(*0x20 + -0xf8) + 1;\n                }\n                if (*0x557f20 == '\\0') goto code_r0x0043f982;\n                *(*0x20 + -0x138) = 0x43f7d0;\n                fcn.0045afe0(uVar5, uVar4);\n                uVar11 = 0;\n                uVar12 = 0;\n                uVar13 = 0;\n                uVar14 = 0;\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                *(*0x20 + -200) = *0x557f30;\n                *(*0x20 + -0xd0) = *0x557f38;\n                *(*0x20 + -0x110) = *(*0x20 + -0x130);\n                uVar5 = *(*(*0x20 + 8) + 0x18 + *(*0x20 + -0xc0) * 8);\n                *(*0x20 + -0x138) = 0x43f829;\n                fcn.004478a0();\n                *(*0x20 + -0x138) = 0x43f82e;\n                uVar4 = fcn.00448040();\n                *(*0x20 + -0x18) = uVar4;\n                *(*0x20 + -0x100) = uVar5;\n                *(*0x20 + -0xb8) = 0;\n                *(*0x20 + -0xb0) = CONCAT412(uVar14, CONCAT48(uVar13, CONCAT44(uVar12, uVar11)));\n                *(*0x20 + -0x138) = 0x43f855;\n                fcn.004324c0();\n                *(*0x20 + -0x138) = 0x43f866;\n                fcn.00432dc0();\n                *(*0x20 + -0x138) = 0x43f878;\n                fcn.00432dc0();\n                *(*0x20 + -0x138) = 0x43f889;\n                fcn.00432dc0();\n                *(*0x20 + -0x138) = 0x43f88e;\n                fcn.00432540();\n                *(*0x20 + -0x138) = 0x43f8af;\n                uVar5 = fcn.004173e0(0x18);\n                *(*0x20 + -0x138) = 0x43f8c5;\n                uVar4 = fcn.00446300(0x18);\n                *(*0x20 + -0x10) = uVar4;\n                *(*0x20 + -0xd8) = uVar5;\n                *(*0x20 + -0x138) = 0x43f8d7;\n                fcn.004324c0();\n                *(*0x20 + -0x138) = 0x43f8e9;\n                fcn.00432dc0();\n                *(*0x20 + -0x138) = 0x43f8fa;\n                fcn.00432dc0();\n                *(*0x20 + -0x138) = 0x43f8ff;\n                fcn.00432540();\n                *(*0x20 + -0x138) = 0x43f91e;\n                uVar5 = fcn.004173e0(0x18);\n                *(*0x20 + -0x138) = 0x43f931;\n                uVar4 = fcn.00446300(0x18);\n                *(*0x20 + -0x10) = uVar4;\n                *(*0x20 + -0xd8) = uVar5;\n                *(*0x20 + -0x138) = 0x43f945;\n                fcn.004324c0();\n                *(*0x20 + -0x138) = 0x43f957;\n                fcn.00432dc0();\n                *(*0x20 + -0x138) = 0x43f968;\n                fcn.00432dc0();\n                *(*0x20 + -0x138) = 0x43f96d;\n                fcn.00432540();\n                uVar6 = *(*0x20 + -0xd0) - *(*0x20 + -0xe8);\n                uVar7 = 0x17;\n                while (cVar3 = uVar6,  9 < uVar6) {\n                    uVar6 = uVar6 / 10;\n                    if (0x17 < uVar7) goto code_r0x0043fb65;\n                    *(*0x20 + (uVar7 - 0xb8)) = cVar3 + uVar6 * -10 + '0';\n                    uVar7 = uVar7 - 1;\n                }\n                if (uVar7 < 0x18) {\n                    *(*0x20 + (uVar7 - 0xb8)) = cVar3 + '0';\n                    *(*0x20 + -0x138) = 0x43fa18;\n                    uVar5 = fcn.00446300(-(uVar7 - 0x18));\n                    *(*0x20 + -0x10) = uVar5;\n                    *(*0x20 + -0xd8) = *0x20 + ((uVar7 & uVar7 - 0x18 >> 0x3f) - 0xb8);\n                    *(*0x20 + -0x138) = 0x43fa2a;\n                    fcn.004324c0();\n                    *(*0x20 + -0x138) = 0x43fa3c;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x138) = 0x43fa4d;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x138) = 0x43fa52;\n                    fcn.00432540();\n                    uVar7 = *(*0x20 + -200) - *(*0x20 + -0xe0);\n                    uVar6 = 0x17;\n                    while (cVar3 = uVar7,  9 < uVar7) {\n                        uVar7 = uVar7 / 10;\n                        if (0x17 < uVar6) goto code_r0x0043fb46;\n                        *(*0x20 + (uVar6 - 0xb8)) = cVar3 + uVar7 * -10 + '0';\n                        uVar6 = uVar6 - 1;\n                    }\n                    if (uVar6 < 0x18) {\n                        *(*0x20 + (uVar6 - 0xb8)) = cVar3 + '0';\n                        *(*0x20 + -0x138) = 0x43fae5;\n                        uVar5 = fcn.00446300(-(uVar6 - 0x18));\n                        *(*0x20 + -0x10) = uVar5;\n                        *(*0x20 + -0xd8) = *0x20 + ((uVar6 & uVar6 - 0x18 >> 0x3f) - 0xb8);\n                        *(*0x20 + -0x138) = 0x43faf7;\n                        fcn.004324c0();\n                        *(*0x20 + -0x138) = 0x43fb09;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x138) = 0x43fb1a;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x138) = 0x43fb1f;\n                        fcn.00432540();\n                        *(*0x20 + -0x138) = 0x43fb25;\n                        fcn.004324c0();\n                        *(*0x20 + -0x138) = 0x43fb2a;\n                        fcn.00432720();\n                        *(*0x20 + -0x138) = 0x43fb2f;\n                        fcn.00432540();\n                        in_RAX = *(*0x20 + 8);\ncode_r0x0043f982:\n                        *in_RAX = 2;\n                        return;\n                    }\n                    *(*0x20 + -0x138) = 0x43fb46;\n                    fcn.00459720(0x18);\ncode_r0x0043fb46:\n                    *(*0x20 + -0x138) = 0x43fb53;\n                    fcn.00459720(0x18);\n                }\n                *(*0x20 + -0x138) = 0x43fb65;\n                fcn.00459720(0x18);\ncode_r0x0043fb65:\n                *(*0x20 + -0x138) = 0x43fb72;\n                fcn.00459720(0x18);\n            }\n            *(*0x20 + -0x138) = 0x43fb85;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + -8) = 0x43fb90;\n        fcn.00457040();\n        in_RAX = *(puVar9 + 8);\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 2900
    },
    "0043fba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043fba0(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    uint in_EAX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    uVar1 = unaff_RBX;\n    *0x557c84 = in_EAX;\n    if (*0x557ed0 != 0) {\n        fcn.004593c0(arg1, arg2, arg3, arg4);\n        uVar1 = *0x5035f8;\n    }\n    *0x5035f8 = uVar1;\n    return;\n}\n",
        "token_count": 190
    },
    "0043fc00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043fd3a)\n// WARNING: Removing unreachable block (ram,0x0043fd4b)\n// WARNING: Removing unreachable block (ram,0x0043fd5c)\n// WARNING: Removing unreachable block (ram,0x0043fd6d)\n// WARNING: Removing unreachable block (ram,0x0043fd7e)\n// WARNING: Removing unreachable block (ram,0x0043fd8f)\n// WARNING: Removing unreachable block (ram,0x0043fda5)\n// WARNING: Removing unreachable block (ram,0x0043fdb6)\n// WARNING: Removing unreachable block (ram,0x0043fdc7)\n// WARNING: Removing unreachable block (ram,0x0043fdd8)\n\nulong fcn.0043fc00(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    LOCK();\n    LOCK();\n    LOCK();\n    *0x557e50 = 0x2a;\n    *0x557e58 = 0x30000000003;\n    return 0x2a;\n}\n",
        "token_count": 284
    },
    "004407e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004407e0(void)\n\n{\n    int32_t *piVar1;\n    int64_t in_RAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            piVar1 = in_RAX + 0x28;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            iVar2 = iVar2 + -1;\n            if (-1 < iVar2) goto code_r0x00440856;\n            if ((iVar2 != -1) && (iVar2 != -0x40000001)) {\n                LOCK();\n                piVar1 = in_RAX + 0x2c;\n                iVar2 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                if (iVar2 == 1) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x20) = 0x440830;\n                    fcn.00409300();\n                    if (*(*(*0x20 + 8) + 0x20) != 0) {\n                        *(*0x20 + -0x20) = 0x44084a;\n                        fcn.00409600();\n                    }\n                    *(*0x20 + -0x20) = 0x440856;\n                    fcn.00409520();\n                }\ncode_r0x00440856:\n                iVar2 = *(*(unaff_R14 + 0x30) + 0xd8);\n                *(*(unaff_R14 + 0x30) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(*0x20 + -0x20) = 0x44089b;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x4408a6;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 626
    },
    "004408c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004408c0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong in_RDX;\n    int64_t unaff_R14;\n    ulong uStack32;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (*(in_RAX + 0x28) != 0) {\n        fcn.00459140(arg1, in_RDX);\n        *(in_RAX + 0x28) = uStack32;\n    }\n    fcn.00433780();\n    return;\n}\n",
        "token_count": 152
    },
    "00440960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00440960(ulong arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint32_t *in_RAX;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uchar unaff_BL;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    bool bVar11;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(*(unaff_R14 + 0x30) + 0x90) == unaff_R14) break;\n            unaff_BL = 0x1d;\n            *(*0x20 + -0x68) = 0x440c5c;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar10 + 8) = in_RAX;\n        puVar10[0x10] = unaff_BL;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + -8) = 0x440c75;\n        fcn.00457040();\n        in_RAX = *(puVar10 + 8);\n        unaff_BL = puVar10[0x10];\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        *0x20 = puVar10;\n    } while( true );\n    while( true ) {\n        uVar4 = *in_RAX;\n        if (uVar4 == 0) break;\n        LOCK();\n        if (uVar4 == *in_RAX) {\n            *in_RAX = uVar4 - 1;\n            return uVar4;\n        }\n    }\n    *(*0x20 + 0x18) = arg1;\n    *(*0x20 + 0x20) = unaff_RDI;\n    *(*0x20 + -0x39) = unaff_BL;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + -0x68) = 0x4409d2;\n    iVar5 = fcn.00433860();\n    *(*0x20 + -0x18) = iVar5;\n    uVar6 = *(*0x20 + 8);\n    *(iVar5 + 0x28) = 0;\n    *(iVar5 + 0x20) = 0;\n    *(iVar5 + 0x30) = 0;\n    uVar6 = uVar6 >> 3;\n    uVar8 = SUB168(ZEXT816(0x5197f7d73404147) * ZEXT816(uVar6) >> 0x40, 0);\n    uVar8 = (uVar8 + uVar6 >> 1 | CARRY8(uVar8, uVar6) << 0x3f) >> 7;\n    iVar7 = uVar6 + uVar8 * -0xfb;\n    *(*0x20 + -0x28) = iVar7;\n    uVar4 = *(*0x20 + 0x18);\n    if (((*(*0x20 + 0x18) & 1) == 0) || (*0x557d28 == 0)) {\n        iVar9 = 0;\n    }\n    else {\n        *(*0x20 + -0x68) = 0x440a45;\n        fcn.00459140(iVar7, uVar8);\n        iVar9 = *(*0x20 + -0x60);\n        *(*(*0x20 + -0x18) + 0x28) = 0xffffffffffffffff;\n        iVar7 = *(*0x20 + -0x28);\n        iVar5 = *(*0x20 + -0x18);\n        uVar4 = *(*0x20 + 0x18);\n    }\n    if (((uVar4 >> 1 & 1) != 0) && (*0x557dc0 != 0)) {\n        if (iVar9 == 0) {\n            *(*0x20 + -0x68) = 0x440a9f;\n            fcn.00459140(iVar7, 0);\n            iVar9 = *(*0x20 + -0x60);\n            iVar7 = *(*0x20 + -0x28);\n            iVar5 = *(*0x20 + -0x18);\n        }\n        *(iVar5 + 0x20) = iVar9;\n    }\n    *(*0x20 + -0x38) = iVar9;\n    iVar7 = iVar7 * 0x40;\n    *(*0x20 + -0x30) = iVar7;\n    *(*0x20 + -0x20) = iVar7 + 0x505fa0;\n    do {\n        *(*0x20 + -0x10) = iVar7 + 0x505fa0;\n        *(*0x20 + -0x68) = 0x440b05;\n        fcn.00409300();\n        piVar1 = *(*0x20 + -0x30) + 0x505fb0;\n        LOCK();\n        *piVar1 = *piVar1 + 1;\n        piVar3 = *(*0x20 + 8);\n        do {\n            iVar2 = *piVar3;\n            if (iVar2 == 0) goto code_r0x00440b2f;\n            LOCK();\n        } while (iVar2 != *piVar3);\n        *piVar3 = iVar2 + -1;\ncode_r0x00440b2f:\n        if (iVar2 != 0) {\n            LOCK();\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            *(*0x20 + -0x68) = 0x440be6;\n            fcn.00409520(iVar2);\ncode_r0x00440be6:\n            iVar5 = *(*(*0x20 + -0x18) + 0x28);\n            if (0 < iVar5) {\n                *(*0x20 + -0x68) = 0x440c10;\n                fcn.00427d20(iVar5 - *(*0x20 + -0x38), *(*0x20 + 0x20));\n            }\n            *(*0x20 + -0x68) = 0x440c1a;\n            uVar6 = fcn.00433b60();\n            return uVar6;\n        }\n        *(*0x20 + -0x68) = 0x440b4c;\n        fcn.00440ec0(*(*0x20 + -0x18));\n        *(*0x20 + -0x68) = 0x440b73;\n        fcn.00433640(0x12);\n        if (*(*(*0x20 + -0x18) + 0x30) == 0) {\n            piVar1 = *(*0x20 + 8);\n            do {\n                iVar2 = *piVar1;\n                if (iVar2 == 0) goto code_r0x00440b9e;\n                LOCK();\n            } while (iVar2 != *piVar1);\n            *piVar1 = iVar2 + -1;\ncode_r0x00440b9e:\n            bVar11 = iVar2 != 0;\n        }\n        else {\n            bVar11 = true;\n        }\n        if (bVar11) goto code_r0x00440be6;\n        iVar7 = *(*0x20 + -0x30);\n    } while( true );\n}\n",
        "token_count": 1802
    },
    "00440ca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00440ca0(int64_t arg1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *in_RAX;\n    uint64_t uVar3;\n    ulong uVar4;\n    uint64_t uVar5;\n    uchar unaff_BL;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            *in_RAX = *in_RAX + 1;\n            uVar3 = in_RAX >> 3;\n            uVar5 = SUB168(ZEXT816(0x5197f7d73404147) * ZEXT816(uVar3) >> 0x40, 0);\n            iVar7 = (uVar3 + ((uVar5 + uVar3 >> 1 | CARRY8(uVar5, uVar3) << 0x3f) >> 7) * -0xfb) * 0x40;\n            if (*(iVar7 + 0x505fb0) == 0) {\n                return SUB168(ZEXT816(0x5197f7d73404147) * ZEXT816(uVar3), 0);\n            }\n            *(*0x20 + 0x10) = unaff_BL;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x10) = iVar7 + 0x505fb0;\n            *(*0x20 + -0x30) = iVar7;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x20) = iVar7 + 0x505fa0;\n            *(*0x20 + -0x50) = 0x440d34;\n            fcn.00409300();\n            if (**(*0x20 + -0x10) == 0) {\n                *(*0x20 + -0x50) = 0x440de6;\n                uVar4 = fcn.00409520();\n                return uVar4;\n            }\n            uVar4 = *(*0x20 + -0x18);\n            *(*0x20 + -0x50) = 0x440d65;\n            iVar7 = fcn.00441260(*(*0x20 + -0x30));\n            *(*0x20 + -0x28) = iVar7;\n            *(*0x20 + -0x38) = uVar4;\n            if (iVar7 != 0) {\n                LOCK();\n                **(*0x20 + -0x10) = **(*0x20 + -0x10) + -1;\n            }\n            *(*0x20 + -0x50) = 0x440d8e;\n            fcn.00409520();\n            iVar7 = *(*0x20 + -0x28);\n            if (iVar7 == 0) {\n                return 0;\n            }\n            arg1 = *(iVar7 + 0x20);\n            if (arg1 != 0) {\n                arg1 = *(*0x20 + 0x18);\n                *(*0x20 + -0x50) = 0x440dbb;\n                fcn.00454260();\n                iVar7 = *(*0x20 + -0x28);\n            }\n            if (*(iVar7 + 0x30) == 0) break;\n            unaff_BL = 0x1a;\n            *(*0x20 + -0x50) = 0x440e85;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar6 + 8) = in_RAX;\n        puVar6[0x10] = unaff_BL;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + -8) = 0x440e99;\n        fcn.00457040();\n        in_RAX = *(puVar6 + 8);\n        unaff_BL = puVar6[0x10];\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n    if (*(*0x20 + 0x10) != '\\0') {\n        piVar2 = *(*0x20 + -0x18);\n        do {\n            iVar1 = *piVar2;\n            if (iVar1 == 0) goto code_r0x00440e60;\n            LOCK();\n        } while (iVar1 != *piVar2);\n        *piVar2 = iVar1 + -1;\ncode_r0x00440e60:\n        if (iVar1 != 0) {\n            *(iVar7 + 0x30) = 1;\n        }\n    }\n    *(*0x20 + -0x50) = 0x440e12;\n    uVar4 = fcn.004408c0(*(*0x20 + 0x18));\n    if ((*(*(*0x20 + -0x28) + 0x30) == 1) && (*(*(unaff_R14 + 0x30) + 0xd8) == 0)) {\n        *(*0x20 + -0x50) = 0x440e37;\n        uVar4 = fcn.00456e80();\n    }\n    return uVar4;\n}\n",
        "token_count": 1269
    },
    "00440ec0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00440ec0(int64_t *arg1)\n\n{\n    uint32_t uVar1;\n    int64_t *piVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t *arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t **unaff_RDI;\n    uint64_t uVar5;\n    int64_t **arg3;\n    int64_t *arg4;\n    int64_t *noname_1;\n    uint32_t uVar6;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x00440ec0:\n    puVar4 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar4 = *0x20 + -0x18;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        arg2 = arg1 + 1;\n        if (*0x557ed0 == 0) {\n            *arg1 = unaff_R14;\n            arg1[3] = unaff_RBX;\n            *(arg1 + 1) = in_XMM15;\n        }\n        else {\n            uVar5 = unaff_RDI & 0xffffffff;\n            *(*0x20 + -0x20) = 0x440f0a;\n            fcn.00459420(arg1, arg2, uVar5);\n            *(*0x20 + -0x20) = 0x440f16;\n            fcn.004593c0(arg1, arg2, uVar5, arg1 + 3);\n            *(*0x20 + -0x20) = 0x440f25;\n            fcn.00459420(arg1, arg2, uVar5);\n            *(*0x20 + -0x20) = 0x440f2d;\n            in_RAX = fcn.00459420(arg1, arg2, uVar5);\n            unaff_RDI = uVar5 & 0xffffffff;\n        }\n        arg3 = in_RAX + 8;\n        piVar2 = *(in_RAX + 8);\n        noname_1 = NULL;\n        while (arg4 = piVar2,  arg4 != NULL) {\n            if (unaff_RBX == arg4[3]) {\n                if (unaff_RDI == '\\0') {\n                    if (arg4[9] == 0) {\n                        if (*0x557ed0 == 0) {\n                            arg4[8] = arg1;\n                        }\n                        else {\n                            *(*0x20 + -0x20) = 0x441117;\n                            fcn.00459380();\n                        }\n                    }\n                    else if (*0x557ed0 == 0) {\n                        *(arg4[9] + 0x40) = arg1;\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x4410fd;\n                        fcn.00459380();\n                    }\n                    if (*0x557ed0 == 0) {\n                        arg4[9] = arg1;\n                        arg1[8] = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x441139;\n                        fcn.00459380();\n                        *(*0x20 + -0x20) = 0x441145;\n                        fcn.00459280(arg1, arg2, arg3, arg4);\n                    }\n                }\n                else {\n                    if (*0x557ed0 == 0) {\n                        *arg3 = arg1;\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x440f91;\n                        fcn.00459380();\n                    }\n                    *(arg1 + 6) = *(arg4 + 6);\n                    arg1[4] = arg4[4];\n                    if (*0x557ed0 == 0) {\n                        arg1[7] = arg4[7];\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x440fbc;\n                        fcn.00459280(arg1, arg2, arg3, arg4);\n                    }\n                    iVar3 = arg4[2];\n                    if (*0x557ed0 == 0) {\n                        arg1[2] = iVar3;\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x440fd7;\n                        iVar3 = fcn.00459280(arg1, arg2, arg3, arg4);\n                    }\n                    if (*0x557ed0 == 0) {\n                        arg1[1] = arg4[1];\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x440ff2;\n                        iVar3 = fcn.004593c0(arg1, arg2, arg3, arg4);\n                    }\n                    if (iVar3 != 0) {\n                        if (*0x557ed0 == 0) {\n                            *(iVar3 + 0x38) = arg1;\n                        }\n                        else {\n                            *(*0x20 + -0x20) = 0x441011;\n                            fcn.00459380();\n                        }\n                    }\n                    if (arg1[1] != 0) {\n                        if (*0x557ed0 == 0) {\n                            *(arg1[1] + 0x38) = arg1;\n                        }\n                        else {\n                            *(*0x20 + -0x20) = 0x441032;\n                            fcn.00459380();\n                        }\n                    }\n                    if (*0x557ed0 == 0) {\n                        arg1[8] = arg4;\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x44104b;\n                        fcn.00459420(arg1, arg2, arg3);\n                    }\n                    iVar3 = arg4[9];\n                    if (*0x557ed0 == 0) {\n                        arg1[9] = iVar3;\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x441067;\n                        iVar3 = fcn.00459280(arg1, arg2, arg3, arg4);\n                    }\n                    if (iVar3 == 0) {\n                        if (*0x557ed0 == 0) {\n                            arg1[9] = arg4;\n                        }\n                        else {\n                            *(*0x20 + -0x20) = 0x441085;\n                            fcn.00459420(arg1, arg2, arg3);\n                        }\n                    }\n                    if (*0x557ed0 == 0) {\n                        arg4[7] = 0;\n                        arg4[2] = 0;\n                        arg4[1] = 0;\n                        arg4[9] = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x4410be;\n                        fcn.00459280(arg1, arg2, arg3, arg4);\n                        *(*0x20 + -0x20) = 0x4410c7;\n                        fcn.00459280(arg1, arg2, arg3, arg4);\n                        *(*0x20 + -0x20) = 0x4410d0;\n                        fcn.00459280(arg1, arg2, arg3, arg4);\n                        *(*0x20 + -0x20) = 0x4410d9;\n                        fcn.00459280(arg1, arg2, arg3, arg4);\n                    }\n                }\n                return;\n            }\n            if (unaff_RBX < arg4[3]) {\n                arg3 = arg4 + 2;\n            }\n            else {\n                arg3 = arg4 + 1;\n            }\n            noname_1 = arg4;\n            piVar2 = *arg3;\n        }\n        iVar3 = *(unaff_R14 + 0x30);\n        uVar6 = *(iVar3 + 0xf0);\n        uVar1 = *(iVar3 + 0xf4);\n        *(iVar3 + 0xf0) = uVar1;\n        uVar6 = uVar6 ^ uVar6 << 0x11;\n        uVar5 = uVar1;\n        uVar6 = uVar1 >> 0x10 ^ uVar6 >> 7 ^ uVar1 ^ uVar6;\n        *(iVar3 + 0xf4) = uVar6;\n        *(arg1 + 6) = uVar1 + uVar6 | 1;\n        if (*0x557ed0 == 0) {\n            arg1[7] = noname_1;\n            *arg3 = arg1;\n        }\n        else {\n            *(*0x20 + -0x20) = 0x4411b4;\n            unaff_RDI = arg3;\n            fcn.004593a0(arg1, noname_1, arg3, uVar5);\n            *(*0x20 + -0x20) = 0x4411bc;\n            arg3 = unaff_RDI;\n            in_RAX = fcn.00459380();\n        }\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + 8) = in_RAX;\n        do {\n            iVar3 = arg1[7];\n            if ((iVar3 == 0) || (uVar6 = *(iVar3 + 0x30),  uVar6 <= *(arg1 + 6))) {\n                return;\n            }\n            if (*(iVar3 + 0x10) == arg1) {\n                *(*0x20 + -0x20) = 0x4411fd;\n                fcn.004416e0(arg1, uVar6, arg3, uVar5);\n            }\n            else {\n                if (*(iVar3 + 8) != arg1) goto code_r0x00441209;\n                *(*0x20 + -0x20) = 0x4411f6;\n                fcn.004415a0(arg1, uVar6, arg3, uVar5);\n            }\n            arg1 = *(*0x20 + 0x18);\n        } while( true );\n    }\n    goto code_r0x0044121d;\ncode_r0x00441209:\n    unaff_RBX = 0x49e550;\n    *(*0x20 + -0x20) = 0x44121c;\n    in_RAX = fcn.004305a0();\ncode_r0x0044121d:\n    *(puVar4 + 8) = in_RAX;\n    *(puVar4 + 0x10) = unaff_RBX;\n    *(puVar4 + 0x18) = arg1;\n    puVar4[0x20] = unaff_RDI;\n    *(puVar4 + -8) = 0x441236;\n    fcn.00457040();\n    in_RAX = *(puVar4 + 8);\n    unaff_RBX = *(puVar4 + 0x10);\n    arg1 = *(puVar4 + 0x18);\n    unaff_RDI = puVar4[0x20];\n    *0x20 = puVar4;\n    goto code_r0x00440ec0;\n}\n",
        "token_count": 2532
    },
    "00441260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00441260(ulong param_1, ulong param_2, uint64_t param_3, ulong param_4)\n\n{\n    int64_t *arg2;\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int64_t in_RAX;\n    int64_t *piVar4;\n    int64_t noname_0;\n    int64_t iVar5;\n    ulong uVar6;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    ulong uStack56;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    arg2 = in_RAX + 8;\n    noname_0 = *(in_RAX + 8);\n    piVar4 = arg2;\n    while( true ) {\n        if (noname_0 == 0) {\n            return 0;\n        }\n        if (unaff_RBX == *(noname_0 + 0x18)) break;\n        if (unaff_RBX < *(noname_0 + 0x18)) {\n            piVar4 = noname_0 + 0x10;\n        }\n        else {\n            piVar4 = noname_0 + 8;\n        }\n        noname_0 = *piVar4;\n        param_3 = unaff_RBX;\n    }\n    if (*(noname_0 + 0x20) == 0) {\n        uStack56 = 0;\n    }\n    else {\n        fcn.00459140(noname_0, arg2);\n        in_XMM15_Da = 0;\n        in_XMM15_Db = 0;\n        in_XMM15_Dc = 0;\n        in_XMM15_Dd = 0;\n    }\n    iVar3 = *(noname_0 + 0x40);\n    if (iVar3 == 0) {\n        while( true ) {\n            while (*(noname_0 + 8) != 0) {\n                if ((*(noname_0 + 0x10) != 0) &&\n                   (uVar2 = *(*(noname_0 + 0x10) + 0x30),  puVar1 = *(noname_0 + 8) + 0x30, \n                   uVar2 <= *puVar1 && *puVar1 != uVar2)) goto code_r0x004414e7;\n                fcn.004415a0(noname_0, arg2, param_3, param_4);\n            }\n            if (*(noname_0 + 0x10) == 0) break;\ncode_r0x004414e7:\n            fcn.004416e0(noname_0, arg2, param_3, param_4);\n        }\n        iVar3 = *(noname_0 + 0x38);\n        if (iVar3 == 0) {\n            if (*0x557ed0 == 0) {\n                *(in_RAX + 8) = 0;\n            }\n            else {\n                fcn.004593a0(noname_0, 0, param_3, param_4);\n            }\n        }\n        else if (*(iVar3 + 0x10) == noname_0) {\n            if (*0x557ed0 == 0) {\n                *(iVar3 + 0x10) = 0;\n            }\n            else {\n                fcn.004593a0(noname_0, 0, param_3, param_4);\n            }\n        }\n        else if (*0x557ed0 == 0) {\n            *(iVar3 + 8) = 0;\n        }\n        else {\n            fcn.004593a0(noname_0, 0, param_3, param_4);\n        }\n    }\n    else {\n        if (*0x557ed0 == 0) {\n            *piVar4 = iVar3;\n        }\n        else {\n            fcn.004593e0(noname_0, arg2, param_3, param_4);\n        }\n        *(iVar3 + 0x30) = *(noname_0 + 0x30);\n        if (*0x557ed0 == 0) {\n            *(iVar3 + 0x38) = *(noname_0 + 0x38);\n        }\n        else {\n            fcn.004593a0(noname_0, *(noname_0 + 0x38), param_3, param_4);\n        }\n        iVar5 = *(noname_0 + 0x10);\n        if (*0x557ed0 == 0) {\n            *(iVar3 + 0x10) = iVar5;\n        }\n        else {\n            fcn.004593a0(noname_0, iVar5, param_3, param_4);\n        }\n        if (iVar5 != 0) {\n            if (*0x557ed0 == 0) {\n                *(iVar5 + 0x38) = iVar3;\n            }\n            else {\n                fcn.004593e0(noname_0, iVar5, param_3, param_4);\n            }\n        }\n        iVar5 = *(noname_0 + 8);\n        if (*0x557ed0 == 0) {\n            *(iVar3 + 8) = iVar5;\n        }\n        else {\n            fcn.004593a0(noname_0, iVar5, param_3, param_4);\n        }\n        if (iVar5 != 0) {\n            if (*0x557ed0 == 0) {\n                *(iVar5 + 0x38) = iVar3;\n            }\n            else {\n                fcn.004593e0(noname_0, iVar5, param_3, param_4);\n            }\n        }\n        if (*(iVar3 + 0x40) == 0) {\n            if (*0x557ed0 == 0) {\n                *(iVar3 + 0x48) = 0;\n            }\n            else {\n                fcn.004593a0(noname_0, 0, param_3, param_4);\n            }\n        }\n        else if (*0x557ed0 == 0) {\n            *(iVar3 + 0x48) = *(noname_0 + 0x48);\n        }\n        else {\n            fcn.004593a0(noname_0, *(noname_0 + 0x48), param_3, param_4);\n        }\n        *(iVar3 + 0x20) = uStack56;\n        if (*0x557ed0 == 0) {\n            *(noname_0 + 0x40) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        }\n        else {\n            uVar6 = 0;\n            fcn.004593a0(noname_0, 0, param_3, param_4);\n            fcn.004593a0(noname_0, uVar6, param_3, param_4);\n        }\n    }\n    if (*0x557ed0 == 0) {\n        *(noname_0 + 0x38) = 0;\n        *(noname_0 + 0x18) = 0;\n        *(noname_0 + 8) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n    }\n    else {\n        uVar6 = 0;\n        fcn.004593a0(noname_0, 0, param_3, param_4);\n        fcn.004593e0(noname_0, uVar6, param_3, param_4);\n        fcn.004593a0(noname_0, uVar6, param_3, param_4);\n        fcn.004593a0(noname_0, uVar6, param_3, param_4);\n    }\n    *(noname_0 + 0x30) = 0;\n    return noname_0;\n}\n",
        "token_count": 1853
    },
    "004415a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004415a0(ulong noname_0, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t arg1;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            arg1 = *(unaff_RBX + 8);\n            arg2 = *(unaff_RBX + 0x38);\n            iVar1 = *(arg1 + 0x10);\n            if (*0x557ed0 == 0) {\n                *(arg1 + 0x10) = unaff_RBX;\n                *(unaff_RBX + 0x38) = arg1;\n                *(unaff_RBX + 8) = iVar1;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x4415e5;\n                fcn.004593c0(arg1, arg2, arg3, arg4);\n                *(*0x20 + -0x20) = 0x4415ee;\n                fcn.00459380();\n                *(*0x20 + -0x20) = 0x4415f7;\n                in_RAX = fcn.004593e0(arg1, arg2, arg3, arg4);\n            }\n            if (iVar1 != 0) {\n                if (*0x557ed0 == 0) {\n                    *(iVar1 + 0x38) = unaff_RBX;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x441614;\n                    in_RAX = fcn.004593c0(arg1, arg2, arg3, arg4);\n                }\n            }\n            if (*0x557ed0 == 0) {\n                *(arg1 + 0x38) = arg2;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x44162c;\n                in_RAX = fcn.004593a0(arg1, arg2, arg3, arg4);\n            }\n            if (arg2 == 0) {\n                if (*0x557ed0 == 0) {\n                    *(in_RAX + 8) = arg1;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x44168d;\n                fcn.00459380();\n                return;\n            }\n            if (*(arg2 + 0x10) == unaff_RBX) {\n                if (*0x557ed0 == 0) {\n                    *(arg2 + 0x10) = arg1;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x441651;\n                fcn.00459380();\n                return;\n            }\n            if (*(arg2 + 8) == unaff_RBX) {\n                if (*0x557ed0 == 0) {\n                    *(arg2 + 8) = arg1;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x441671;\n                    fcn.00459380();\n                }\n                return;\n            }\n            unaff_RBX = 0x13;\n            *(*0x20 + -0x20) = 0x4416a8;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x4416b8;\n        fcn.00457040();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 954
    },
    "004416e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004416e0(ulong noname_0, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t arg1;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            arg1 = *(unaff_RBX + 0x10);\n            arg2 = *(unaff_RBX + 0x38);\n            iVar1 = *(arg1 + 8);\n            if (*0x557ed0 == 0) {\n                *(arg1 + 8) = unaff_RBX;\n                *(unaff_RBX + 0x38) = arg1;\n                *(unaff_RBX + 0x10) = iVar1;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x441725;\n                fcn.004593c0(arg1, arg2, arg3, arg4);\n                *(*0x20 + -0x20) = 0x44172e;\n                fcn.00459380();\n                *(*0x20 + -0x20) = 0x441737;\n                in_RAX = fcn.004593e0(arg1, arg2, arg3, arg4);\n            }\n            if (iVar1 != 0) {\n                if (*0x557ed0 == 0) {\n                    *(iVar1 + 0x38) = unaff_RBX;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x441754;\n                    in_RAX = fcn.004593c0(arg1, arg2, arg3, arg4);\n                }\n            }\n            if (*0x557ed0 == 0) {\n                *(arg1 + 0x38) = arg2;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x44176c;\n                in_RAX = fcn.004593a0(arg1, arg2, arg3, arg4);\n            }\n            if (arg2 == 0) {\n                if (*0x557ed0 == 0) {\n                    *(in_RAX + 8) = arg1;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x4417cd;\n                fcn.00459380();\n                return;\n            }\n            if (*(arg2 + 0x10) == unaff_RBX) {\n                if (*0x557ed0 == 0) {\n                    *(arg2 + 0x10) = arg1;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x441791;\n                fcn.00459380();\n                return;\n            }\n            if (*(arg2 + 8) == unaff_RBX) {\n                if (*0x557ed0 == 0) {\n                    *(arg2 + 8) = arg1;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x4417b1;\n                    fcn.00459380();\n                }\n                return;\n            }\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x20) = 0x4417e8;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x4417f8;\n        fcn.00457040();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 952
    },
    "004418c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004418c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.0042d5e0();\n    if (*0x503578 == 0) {\n        fcn.0042d560();\n    }\n    else {\n        fcn.0042d5e0();\n        fcn.0042d5e0();\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "00441a00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00441a00(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t *in_RAX;\n    ulong *puVar3;\n    int64_t unaff_RBX;\n    \n    if (*(unaff_RBX + 0xf8) < *0x4f5470) {\n        return 0;\n    }\n    if (*(unaff_RBX + 0xf8) <= *0x4f5478) {\n        uVar1 = *in_RAX;\n        if (uVar1 < 0xc000008f) {\n            if (uVar1 < 0xc0000006) {\n                if ((uVar1 != 0x80000003) && (uVar1 != 0xc0000005)) {\n                    return 0;\n                }\n            }\n            else if (((uVar1 != 0xc000001d) && (uVar1 != 0xc000008d)) && (uVar1 != 0xc000008e)) {\n                return 0;\n            }\n        }\n        else if (uVar1 < 0xc0000092) {\n            if ((uVar1 != 0xc000008f) && (uVar1 != 0xc0000091)) {\n                return 0;\n            }\n        }\n        else if (((uVar1 != 0xc0000093) && (uVar1 != 0xc0000094)) && (uVar1 != 0xc0000095)) {\n            return 0;\n        }\n        if ((*(arg1 + 0xb7) != '\\0') || (cVar2 = fcn.004316c0(),  cVar2 != '\\0')) {\n            fcn.00441ce0(arg1);\n        }\n        *(arg1 + 0xf0) = *in_RAX;\n        *(arg1 + 0x110) = *(in_RAX + 8);\n        *(arg1 + 0x118) = *(in_RAX + 10);\n        *(arg1 + 0x120) = *(unaff_RBX + 0xf8);\n        if ((*(unaff_RBX + 0xf8) != 0) && (CONCAT71(*0x48a3b9, *0x48a3b8) != *(unaff_RBX + 0xf8))) {\n            puVar3 = *(unaff_RBX + 0x98) + -8;\n            *(unaff_RBX + 0x98) = puVar3;\n            *puVar3 = *(unaff_RBX + 0xf8);\n        }\n        *(unaff_RBX + 0xf8) = CONCAT71(*0x48a631, *0x48a630);\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 620
    },
    "00441c80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00441c80(ulong arg1)\n\n{\n    if ((*0x557c6d == '\\0') && (*0x557c6b == '\\0')) {\n        if (*0x557c70 != '\\0') {\n            return 0;\n        }\n        fcn.00441ce0(arg1);\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 85
    },
    "00441ce0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00441ce0(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    uint32_t uVar2;\n    ulong *unaff_R14;\n    ulong *puVar3;\n    \n    puVar3 = unaff_R14;\n    if (*0x557cc8 != 0) {\n        fcn.0042c260();\n    }\n    *0x557cc8 = 1;\n    *puVar3 = 0;\n    puVar3[2] = 0x13a0;\n    puVar3[3] = 0x13a0;\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432c20();\n    fcn.004326e0();\n    fcn.00432c20();\n    fcn.004326e0();\n    fcn.00432c20();\n    fcn.004326e0();\n    fcn.00432c20();\n    fcn.00432720();\n    fcn.00432540();\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432c20();\n    fcn.00432720();\n    fcn.00432540();\n    piVar1 = puVar3[6];\n    if (((piVar1[0x27] != 0) && (0 < *(piVar1 + 0x21))) && (*piVar1 == arg1)) {\n        if (*0x557c6c != '\\0') {\n            fcn.004324c0();\n            fcn.00432dc0();\n            fcn.00432540();\n        }\n        arg1 = *(puVar3[6] + 0x138);\n    }\n    fcn.004324c0();\n    fcn.00432720();\n    fcn.00432540();\n    *(puVar3[6] + 0xc4) = 1;\n    *(puVar3[6] + 0x98) = arg1;\n    uVar2 = *0x4f0188 >> 2;\n    if (*(unaff_R14[6] + 0xf9) != 0) {\n        uVar2 = *(unaff_R14[6] + 0xf9);\n    }\n    if (uVar2 != 0) {\n        fcn.0044f520(0);\n        fcn.00450480();\n        fcn.00405de0();\n    }\n    fcn.0042c260();\n    return;\n}\n",
        "token_count": 557
    },
    "00442380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00442380(uint64_t arg1)\n\n{\n    uchar auVar1 [16];\n    uint64_t *in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX <= arg1) {\n                uVar2 = *in_RAX * unaff_RBX;\n                uVar4 = uVar2;\n                goto code_r0x004423ea;\n            }\n            uVar4 = *in_RAX;\n            *(*0x20 + -0x18) = uVar4;\n            auVar1 = ZEXT816(unaff_RBX) * ZEXT816(uVar4);\n            uVar2 = SUB168(auVar1, 0);\n            if (((SUB168(auVar1 >> 0x40, 0) == 0) && (uVar2 < 0x1000000000001)) && (-1 < unaff_RBX)) {\n                uVar4 = arg1 * *(*0x20 + -0x18);\ncode_r0x004423ea:\n                *(*0x20 + 0x20) = unaff_RDI;\n                *(*0x20 + -0x20) = uVar4;\n                if (in_RAX[1] == 0) {\n                    *(*0x20 + -0x28) = uVar2;\n                    *(*0x20 + -0x48) = 0x442409;\n                    iVar3 = fcn.0040a9e0(0);\n                    uVar4 = *(*0x20 + -0x20);\n                    if (uVar4 < *(*0x20 + -0x28)) {\n                        *(*0x20 + -0x10) = iVar3;\n                        *(*0x20 + -0x48) = 0x44242c;\n                        fcn.00459d80(uVar4, iVar3 + uVar4);\n                        iVar3 = *(*0x20 + -0x10);\n                        uVar4 = *(*0x20 + -0x20);\n                    }\n                }\n                else {\n                    *(*0x20 + -0x48) = 0x442445;\n                    iVar3 = fcn.0040a9e0(1);\n                    uVar4 = *(*0x20 + -0x20);\n                    if ((uVar4 != 0) && (*0x557ed0 != '\\0')) {\n                        *(*0x20 + -0x10) = iVar3;\n                        *(*0x20 + -0x48) = 0x442467;\n                        fcn.0040fa60(uVar4);\n                        iVar3 = *(*0x20 + -0x10);\n                        uVar4 = *(*0x20 + -0x20);\n                    }\n                }\n                *(*0x20 + -0x10) = iVar3;\n                *(*0x20 + -0x48) = 0x442485;\n                fcn.0045a040(uVar4);\n                return *(*0x20 + -0x10);\n            }\n            unaff_RBX = 0x49e560;\n            *(*0x20 + -0x48) = 0x4424a8;\n            in_RAX = fcn.004305a0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x4424c5;\n        fcn.00457040();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1012
    },
    "004425c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.004425c0(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t *in_RAX;\n    uint64_t uVar3;\n    ulong uVar4;\n    uint8_t uVar5;\n    int64_t arg1_00;\n    int64_t *piVar6;\n    int64_t *piVar7;\n    int64_t *piVar8;\n    ulong unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t *unaff_RSI;\n    int64_t *piVar10;\n    int64_t *unaff_RDI;\n    char *pcVar11;\n    int64_t unaff_R14;\n    bool bVar12;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (unaff_RDI <= unaff_RSI) break;\n            unaff_RBX = 0x49e580;\n            *(*0x20 + -0x68) = 0x442c45;\n            in_RAX = fcn.004305a0();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + 0x18) = arg1;\n        *(puVar9 + 0x20) = unaff_RDI;\n        *(puVar9 + 0x28) = unaff_RSI;\n        *(puVar9 + -8) = 0x442c65;\n        fcn.00457040();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        arg1 = *(puVar9 + 0x18);\n        unaff_RDI = *(puVar9 + 0x20);\n        unaff_RSI = *(puVar9 + 0x28);\n        *0x20 = puVar9;\n    } while( true );\n    piVar6 = *in_RAX;\n    if (piVar6 == NULL) {\n        return 0x557e78;\n    }\n    pcVar11 = unaff_RDI * 2;\n    piVar7 = unaff_RSI;\n    if ((unaff_RSI <= pcVar11) && (piVar7 = pcVar11,  0x3ff < unaff_RDI)) {\n        for (; 0 < unaff_RDI; unaff_RDI = (unaff_RDI >> 2) + unaff_RDI) {\n            if (unaff_RSI <= unaff_RDI) {\n                piVar7 = unaff_RDI;\n                pcVar11 = unaff_RDI;\n                if (0 < unaff_RDI) goto code_r0x0044262e;\n                break;\n            }\n        }\n        piVar7 = unaff_RSI;\n        pcVar11 = unaff_RSI;\n    }\ncode_r0x0044262e:\n    do {\n        piVar8 = piVar7;\n        if (piVar6 == 0x1) {\n            if (0x7fff < piVar8) {\n                piVar6 = piVar8;\n                if (piVar8 <= piVar8 + 0x400) {\n                    piVar6 = piVar8 + 0x1fffU & 0xffffffffffffe000;\n                }\ncode_r0x004426f9:\n                bVar12 = 0x1000000000000 < piVar8;\n                pcVar11 = arg1;\n                piVar7 = piVar6;\n                goto code_r0x00442a29;\n            }\n            if (0x3f8 < piVar8) {\n                piVar6 = piVar8 - 0x381U >> 7;\n                if (piVar6 < 0xf9) {\n                    pcVar11 = \n                    \" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                    ;\n                    piVar6 = *(piVar6 + 0x9e78c);\n                    if (piVar6 < 0x44) {\n                        piVar6 = *(piVar6 * 2 + 0x4f30c0);\n                        goto code_r0x004426f9;\n                    }\n                    goto code_r0x00442bb9;\n                }\n                goto code_r0x00442bc6;\n            }\n            piVar6 = piVar8 + 7U >> 3;\n            if (piVar6 < 0x81) {\n                pcVar11 = 0x4f2f80;\n                piVar6 = *(piVar6 + 0x9e5f0);\n                if (piVar6 < 0x44) {\n                    piVar6 = *(piVar6 * 2 + 0x4f30c0);\n                    goto code_r0x004426f9;\n                }\n                goto code_r0x00442bd3;\n            }\n        }\n        else {\n            if (piVar6 == 0x8) {\n                piVar6 = piVar8 * 8;\n                if (0x7fff < piVar6) {\n                    if (piVar6 <= piVar6 + 0x400) {\n                        piVar6 = piVar6 + 0x1fffU & 0xffffffffffffe000;\n                    }\ncode_r0x004427d4:\n                    bVar12 = 0x200000000000 < piVar8;\n                    pcVar11 = arg1 << 3;\n                    unaff_RSI = unaff_RSI << 3;\n                    piVar7 = piVar6 >> 3;\n                    goto code_r0x00442a29;\n                }\n                if (0x3f8 < piVar6) {\n                    piVar10 = piVar6 - 0x381U >> 7;\n                    if (piVar10 < 0xf9) {\n                        pcVar11 = \n                        \" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                        ;\n                        piVar10 = *(piVar10 + 0x9e78c);\n                        if (piVar10 < 0x44) {\n                            piVar6 = *(piVar10 * 2 + 0x4f30c0);\n                            goto code_r0x004427d4;\n                        }\n                        goto code_r0x00442b85;\n                    }\n                    goto code_r0x00442b92;\n                }\n                piVar10 = piVar6 + 7U >> 3;\n                piVar6 = piVar8;\n                if (piVar10 < 0x81) {\n                    pcVar11 = 0x4f2f80;\n                    piVar10 = *(piVar10 + 0x9e5f0);\n                    if (piVar10 < 0x44) {\n                        piVar6 = *(piVar10 * 2 + 0x4f30c0);\n                        goto code_r0x004427d4;\n                    }\n                    goto code_r0x00442b9f;\n                }\n            }\n            else {\n                if ((piVar6 & piVar6 - 1U) == 0) {\n                    piVar7 = NULL;\n                    if (piVar6 != NULL) {\n                        for (; (piVar6 >> piVar7 & 1) == 0; piVar7 = piVar7 + 1) {\n                        }\n                    }\n                    uVar5 = piVar7;\n                    pcVar11 = arg1 << (uVar5 & 0x3f);\n                    unaff_RSI = unaff_RSI << (uVar5 & 0x3f);\n                    piVar6 = piVar8 << (uVar5 & 0x3f);\n                    if (0x7fff < piVar6) {\n                        if (piVar6 <= piVar6 + 0x400) {\n                            piVar6 = piVar6 + 0x1fffU & 0xffffffffffffe000;\n                        }\ncode_r0x004428f4:\n                        bVar12 = 0x1000000000000U >> (uVar5 & 0x3f) < piVar8;\n                        piVar7 = piVar6 >> (uVar5 & 0x3f);\ncode_r0x00442a29:\n                        piVar10 = 0x1000000000000;\n                        if ((!bVar12) && (piVar6 < 0x1000000000001)) {\n                            *(*0x20 + -0x10) = unaff_RBX;\n                            *(*0x20 + -0x38) = pcVar11;\n                            *(*0x20 + -0x28) = arg1;\n                            *(*0x20 + -0x40) = piVar7;\n                            if (in_RAX[1] == 0) {\n                                *(*0x20 + -0x30) = piVar6;\n                                *(*0x20 + -0x48) = unaff_RSI;\n                                *(*0x20 + -0x68) = 0x442a6c;\n                                uVar4 = fcn.0040a9e0(0);\n                                *(*0x20 + -0x18) = uVar4;\n                                *(*0x20 + -0x68) = 0x442a89;\n                                fcn.00459d80();\n                                arg1_00 = *(*0x20 + -0x38);\n                                uVar4 = *(*0x20 + -0x18);\n                            }\n                            else {\n                                *(*0x20 + 8) = in_RAX;\n                                *(*0x20 + -0x68) = 0x442aaa;\n                                uVar4 = fcn.0040a9e0(1);\n                                arg1_00 = *(*0x20 + -0x38);\n                                if ((arg1_00 != 0) && (*0x557ed0 != '\\0')) {\n                                    *(*0x20 + -0x18) = uVar4;\n                                    iVar1 = **(*0x20 + 8);\n                                    iVar2 = (*(*0x20 + 8))[1];\n                                    *(*0x20 + -0x68) = 0x442adb;\n                                    fcn.0040fa60((arg1_00 - iVar1) + iVar2);\n                                    uVar4 = *(*0x20 + -0x18);\n                                    arg1_00 = *(*0x20 + -0x38);\n                                }\n                            }\n                            *(*0x20 + -0x18) = uVar4;\n                            *(*0x20 + -0x68) = 0x442af4;\n                            fcn.0045a040(arg1_00);\n                            return *(*0x20 + -0x18);\n                        }\n                        unaff_RBX = 0x49e580;\n                        *(*0x20 + -0x68) = 0x442b25;\n                        fcn.004305a0();\n                        piVar7 = piVar6;\n                        piVar8 = arg1;\n                        in_RAX = piVar10;\ncode_r0x00442b25:\n                        *(*0x20 + -0x68) = 0x442b2f;\n                        fcn.00459720(0x44);\ncode_r0x00442b2f:\n                        *(*0x20 + -0x68) = 0x442b39;\n                        fcn.00459740(0xf9);\ncode_r0x00442b39:\n                        *(*0x20 + -0x68) = 0x442b45;\n                        fcn.00459720(0x44);\n                        piVar10 = piVar8;\n                        goto code_r0x00442b45;\n                    }\n                    if (0x3f8 < piVar6) {\n                        piVar10 = piVar6 - 0x381U >> 7;\n                        if (piVar10 < 0xf9) {\n                            piVar10 = *(piVar10 + 0x9e78c);\n                            if (piVar10 < 0x44) {\n                                piVar6 = *(piVar10 * 2 + 0x4f30c0);\n                                goto code_r0x004428f4;\n                            }\n                            goto code_r0x00442b4f;\n                        }\n                        goto code_r0x00442b5c;\n                    }\n                    piVar10 = piVar6 + 7U >> 3;\n                    if (piVar10 < 0x81) {\n                        piVar10 = *(piVar10 + 0x9e5f0);\n                        if (piVar10 < 0x44) {\n                            piVar6 = *(piVar10 * 2 + 0x4f30c0);\n                            goto code_r0x004428f4;\n                        }\n                        goto code_r0x00442b69;\n                    }\n                }\n                else {\n                    *(*0x20 + -0x20) = piVar6;\n                    piVar6 = piVar8 * piVar6;\n                    piVar7 = *(*0x20 + -0x20);\n                    pcVar11 = arg1 * piVar7;\n                    unaff_RSI = unaff_RSI * piVar7;\n                    if (0x7fff < piVar6) {\n                        if (piVar6 < piVar6 + 0x400 || piVar6 - (piVar6 + 0x400) == 0) {\n                            piVar6 = piVar6 + 0x1fffU & 0xffffffffffffe000;\n                        }\ncode_r0x004429f5:\n                        *(*0x20 + -0x20) = piVar6 / piVar7;\n                        bVar12 = SUB168(ZEXT816(piVar8) * ZEXT816(piVar7) >> 0x40, 0) != 0;\n                        piVar7 = *(*0x20 + -0x20);\n                        goto code_r0x00442a29;\n                    }\n                    if (0x3f8 < piVar6) {\n                        uVar3 = piVar6 - 0x381U >> 7;\n                        if (uVar3 < 0xf9) {\n                            if (\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                [uVar3] < 0x44) {\n                                piVar6 = *(\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                           [uVar3] * 2 + 0x4f30c0);\n                                goto code_r0x004429f5;\n                            }\n                            goto code_r0x00442b25;\n                        }\n                        goto code_r0x00442b2f;\n                    }\n                    uVar3 = piVar6 + 7U >> 3;\n                    piVar10 = piVar8;\n                    if (uVar3 < 0x81) {\n                        uVar3 = *(uVar3 + 0x4f2f80);\n                        if (uVar3 < 0x44) {\n                            piVar6 = *(uVar3 * 2 + 0x4f30c0);\n                            goto code_r0x004429f5;\n                        }\n                        goto code_r0x00442b39;\n                    }\ncode_r0x00442b45:\n                    pcVar11 = in_RAX;\n                    *(*0x20 + -0x68) = 0x442b4f;\n                    fcn.00459740(0x81);\ncode_r0x00442b4f:\n                    *(*0x20 + -0x68) = 0x442b5c;\n                    fcn.00459720(0x44);\ncode_r0x00442b5c:\n                    *(*0x20 + -0x68) = 0x442b69;\n                    fcn.00459740(0xf9);\ncode_r0x00442b69:\n                    *(*0x20 + -0x68) = 0x442b76;\n                    fcn.00459720(0x44);\n                }\n                *(*0x20 + -0x68) = 0x442b85;\n                fcn.00459740(0x81);\n                piVar8 = piVar7;\ncode_r0x00442b85:\n                *(*0x20 + -0x68) = 0x442b92;\n                fcn.00459720(0x44);\ncode_r0x00442b92:\n                *(*0x20 + -0x68) = 0x442b9f;\n                fcn.00459740(0xf9);\ncode_r0x00442b9f:\n                *(*0x20 + -0x68) = 0x442bac;\n                fcn.00459720(0x44);\n                piVar6 = piVar8;\n            }\n            *(*0x20 + -0x68) = 0x442bb9;\n            fcn.00459740(0x81);\n            piVar8 = piVar10;\ncode_r0x00442bb9:\n            *(*0x20 + -0x68) = 0x442bc6;\n            fcn.00459720(0x44);\ncode_r0x00442bc6:\n            *(*0x20 + -0x68) = 0x442bd3;\n            fcn.00459740(0xf9);\ncode_r0x00442bd3:\n            *(*0x20 + -0x68) = 0x442be5;\n            fcn.00459720(0x44);\n        }\n        arg1 = 0x81;\n        *(*0x20 + -0x68) = 0x442bf2;\n        in_RAX = fcn.00459740(0x81);\n        piVar7 = pcVar11;\n        unaff_RSI = piVar8;\n    } while( true );\n}\n",
        "token_count": 4218
    },
    "00442ca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00442ca0(void)\n\n{\n    int64_t iVar1;\n    \n    for (iVar1 = 0; iVar1 < 2; iVar1 = iVar1 + 1) {\n        *(iVar1 * 0x40 + 0x558208) = 0;\n        *(iVar1 * 0x40 + 0x558210) = 0;\n    }\n    for (iVar1 = 0; iVar1 < 0x23; iVar1 = iVar1 + 1) {\n        *(iVar1 * 0x10 + 0x558cc8) = 0;\n        *(iVar1 * 0x10 + 0x558cd0) = 0;\n    }\n    return;\n}\n",
        "token_count": 162
    },
    "00442d00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong * fcn.00442d00(void)\n\n{\n    uint8_t in_AL;\n    int64_t iVar1;\n    ulong *puVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_AL < 2) {\n                iVar3 = in_AL * 0x40;\n                iVar1 = *(iVar3 + 0x558208);\n                if (iVar1 != 0) goto code_r0x00442d9e;\n                *(*0x20 + 8) = in_AL;\n                *(*0x20 + -0x18) = iVar3 + 0x558208;\n                *(*0x20 + -0x40) = 0x442d66;\n                iVar1 = fcn.00421680();\n                if (iVar1 != 0) {\n                    if (*(iVar1 + 0x60) == 0) {\n                        if (*(iVar1 + 0x28) == 0) {\n                            *(iVar1 + 0x68) = 0x2000 << (*(*0x20 + 8) & 0x3f);\n                            puVar2 = NULL;\n                            do {\n                                if (0x7fff < puVar2) {\n                                    *(*0x20 + -0x20) = iVar1;\n                                    *(*0x20 + -0x40) = 0x442e2f;\n                                    fcn.004229c0();\n                                    iVar1 = *(*0x20 + -0x20);\ncode_r0x00442d9e:\n                                    puVar2 = *(iVar1 + 0x28);\n                                    if (puVar2 != NULL) {\n                                        *(iVar1 + 0x28) = *puVar2;\n                                        *(iVar1 + 0x60) = *(iVar1 + 0x60) + 1;\n                                        if (*(iVar1 + 0x28) == 0) {\n                                            *(*0x20 + -0x10) = puVar2;\n                                            *(*0x20 + -0x40) = 0x442dd5;\n                                            fcn.00422840();\n                                            puVar2 = *(*0x20 + -0x10);\n                                        }\n                                        return puVar2;\n                                    }\n                                    *(*0x20 + -0x40) = 0x442df8;\n                                    iVar1 = fcn.00430d40();\n                                }\n                                puVar4 = *(iVar1 + 0x18) + puVar2;\n                                *puVar4 = *(iVar1 + 0x28);\n                                *(iVar1 + 0x28) = puVar4;\n                                puVar2 = puVar2 + *(iVar1 + 0x68);\n                            } while( true );\n                        }\n                        *(*0x20 + -0x40) = 0x442e4f;\n                        fcn.00430d40();\n                    }\n                    *(*0x20 + -0x40) = 0x442e65;\n                    fcn.00430d40();\n                }\n                *(*0x20 + -0x40) = 0x442e76;\n                fcn.00430d40();\n            }\n            *(*0x20 + -0x40) = 0x442e85;\n            in_AL = fcn.00459720(2);\n        }\n        puVar5[8] = in_AL;\n        *(puVar5 + -8) = 0x442e8f;\n        fcn.00457040();\n        in_AL = puVar5[8];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 897
    },
    "00442ea0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00442ea0(void)\n\n{\n    int16_t iVar1;\n    ulong *in_RAX;\n    uint64_t uVar2;\n    uint8_t unaff_BL;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = in_RAX + 0x100000000000 >> 0x2a;\n            if (uVar2 < 0x40) {\n                iVar4 = *(*(*(uVar2 * 8 + 0x52a0d8) + (in_RAX + 0x100000000000 >> 0x16 & 0xfffff) * 8) + 0x20000 +\n                         (in_RAX >> 0xd & 0x1ff) * 8);\n                if (*(iVar4 + 99) == '\\x02') {\n                    *(*0x20 + -0x18) = iVar4;\n                    if (*(iVar4 + 0x28) == 0) {\n                        if (unaff_BL < 2) {\n                            *(*0x20 + 0x10) = unaff_BL;\n                            *(*0x20 + -0x10) = in_RAX;\n                            *(*0x20 + -0x38) = 0x442f56;\n                            fcn.004229c0(0x558200);\n                            unaff_BL = *(*0x20 + 0x10);\n                            in_RAX = *(*0x20 + -0x10);\n                            iVar4 = *(*0x20 + -0x18);\n                            goto code_r0x00442f65;\n                        }\n                    }\n                    else {\ncode_r0x00442f65:\n                        *in_RAX = *(iVar4 + 0x28);\n                        *(iVar4 + 0x28) = in_RAX;\n                        iVar1 = *(iVar4 + 0x60);\n                        *(iVar4 + 0x60) = iVar1 + -1;\n                        if (*0x557cac != 0) {\n                            return;\n                        }\n                        if (iVar1 != 1) {\n                            return;\n                        }\n                        if (unaff_BL < 2) {\n                            *(*0x20 + -0x38) = 0x442fb3;\n                            fcn.00422840(0x558200);\n                            *(*(*0x20 + -0x18) + 0x28) = 0;\n                            *(*0x20 + -0x38) = 0x442fd1;\n                            fcn.00422420(1);\n                            return;\n                        }\n                        *(*0x20 + -0x38) = 0x442fe5;\n                        fcn.00459720(2);\n                    }\n                    *(*0x20 + -0x38) = 0x442fef;\n                    fcn.00459720(2);\n                }\n                unaff_BL = 0x21;\n                *(*0x20 + -0x38) = 0x443005;\n                fcn.00430d40();\n            }\n            *(*0x20 + -0x38) = 0x443012;\n            in_RAX = fcn.00459740(0x40);\n        }\n        *(puVar3 + 8) = in_RAX;\n        puVar3[0x10] = unaff_BL;\n        *(puVar3 + -8) = 0x443025;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        unaff_BL = puVar3[0x10];\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 895
    },
    "00443040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00443040(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    ulong *puVar3;\n    uint64_t uVar4;\n    uint8_t unaff_BL;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar4 = unaff_BL;\n            if (uVar4 < 2) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x18) = uVar4;\n                *(*0x20 + 0x10) = unaff_BL;\n                *(*0x20 + -0x10) = uVar4 * 0x40 + 0x558200;\n                *(*0x20 + -0x40) = 0x443091;\n                fcn.00409300();\n                uVar4 = 0;\n                puVar3 = NULL;\n                while( true ) {\n                    *(*0x20 + -0x28) = uVar4;\n                    *(*0x20 + -0x20) = puVar3;\n                    if (0x3fff < uVar4) break;\n                    *(*0x20 + -0x40) = 0x4430a5;\n                    puVar3 = fcn.00442d00();\n                    *puVar3 = *(*0x20 + -0x20);\n                    uVar4 = (0x2000 << (*(*0x20 + 0x10) & 0x3f)) + *(*0x20 + -0x28);\n                }\n                *(*0x20 + -0x40) = 0x4430f4;\n                fcn.00409520();\n                iVar1 = *(*0x20 + 8);\n                iVar2 = *(*0x20 + -0x18);\n                *(iVar1 + 0x468 + iVar2 * 0x10) = *(*0x20 + -0x20);\n                *(iVar1 + 0x470 + iVar2 * 0x10) = *(*0x20 + -0x28);\n                return;\n            }\n            *(*0x20 + -0x40) = 0x443135;\n            in_RAX = fcn.00459720(2);\n        }\n        *(puVar5 + 8) = in_RAX;\n        puVar5[0x10] = unaff_BL;\n        *(puVar5 + -8) = 0x443145;\n        fcn.0045b6e0();\n        in_RAX = *(puVar5 + 8);\n        unaff_BL = puVar5[0x10];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 698
    },
    "00443160": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00443160(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    uint8_t unaff_BL;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = unaff_BL;\n            if (uVar2 < 2) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x10) = unaff_BL;\n                iVar4 = uVar2 * 0x10;\n                *(*0x20 + -0x18) = iVar4;\n                *(*0x20 + -0x28) = *(in_RAX + 0x468 + iVar4);\n                *(*0x20 + -0x20) = *(in_RAX + 0x470 + iVar4);\n                *(*0x20 + -0x10) = uVar2 * 0x40 + 0x558200;\n                *(*0x20 + -0x40) = 0x4431d4;\n                fcn.00409300();\n                puVar3 = *(*0x20 + -0x28);\n                uVar2 = *(*0x20 + -0x20);\n                while (*(*0x20 + -0x20) = uVar2,  0x4000 < uVar2) {\n                    *(*0x20 + -0x28) = *puVar3;\n                    *(*0x20 + -0x40) = 0x4431f7;\n                    fcn.00442ea0();\n                    puVar3 = *(*0x20 + -0x28);\n                    uVar2 = *(*0x20 + -0x20) - (0x2000 << (*(*0x20 + 0x10) & 0x3f));\n                }\n                *(*0x20 + -0x28) = puVar3;\n                *(*0x20 + -0x40) = 0x44322f;\n                fcn.00409520();\n                iVar4 = *(*0x20 + -0x18);\n                iVar1 = *(*0x20 + 8);\n                *(iVar1 + 0x468 + iVar4) = *(*0x20 + -0x28);\n                *(iVar1 + 0x470 + iVar4) = *(*0x20 + -0x20);\n                return;\n            }\n            *(*0x20 + -0x40) = 0x44326a;\n            in_RAX = fcn.00459720(2);\n        }\n        *(puVar5 + 8) = in_RAX;\n        puVar5[0x10] = unaff_BL;\n        *(puVar5 + -8) = 0x443279;\n        fcn.0045b6e0();\n        in_RAX = *(puVar5 + 8);\n        unaff_BL = puVar5[0x10];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 775
    },
    "004432a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004432a0(void)\n\n{\n    int64_t in_RAX;\n    uint8_t uVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045b6e0();\n    }\n    for (uVar1 = 0; uVar1 < 2; uVar1 = uVar1 + 1) {\n        fcn.00409300();\n        iVar2 = uVar1 * 0x10;\n        puVar3 = *(in_RAX + 0x468 + iVar2);\n        while (puVar3 != NULL) {\n            puVar3 = *puVar3;\n            fcn.00442ea0();\n        }\n        *(in_RAX + 0x468 + iVar2) = 0;\n        *(in_RAX + 0x470 + iVar2) = 0;\n        fcn.00409520();\n    }\n    return;\n}\n",
        "token_count": 250
    },
    "004433a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.004433a0(void)\n\n{\n    uint32_t uVar1;\n    uint64_t in_RAX;\n    ulong *puVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t *piVar8;\n    int64_t iVar9;\n    uint32_t uVar10;\n    uint64_t uVar11;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        uVar1 = in_RAX;\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar12 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar8 = *(unaff_R14 + 0x30);\n            if (*piVar8 == unaff_R14) {\n                uVar7 = uVar1 - 1;\n                if ((uVar1 - 1 & uVar1) == 0) {\n                    if (*0x5580a8 != 0) {\n                        uVar6 = -*0x557df8;\n                        piVar8 = (*0x557df8 + (in_RAX & 0xffffffff)) - 1 & uVar6;\n                        *(*0x20 + -0x18) = piVar8 & 0xffffffff;\n                        *(*0x20 + -0x78) = 0x44342c;\n                        puVar2 = fcn.004131a0();\n                        if (puVar2 != NULL) {\n                            return puVar2;\n                        }\n                        uVar11 = 0x1a;\n                        *(*0x20 + -0x78) = 0x443455;\n                        fcn.00430d40();\n                        goto code_r0x00443455;\n                    }\n                    *(*0x20 + 8) = uVar1;\n                    if (0x7fff < uVar1) {\n                        piVar8 = in_RAX & 0xffffffff;\n                        uVar7 = 0;\n                        uVar6 = piVar8 >> 0xd;\n                        uVar11 = uVar6;\n                        for (; 1 < uVar6; uVar6 = uVar6 >> 1) {\ncode_r0x00443455:\n                            uVar7 = uVar7 + 1;\n                        }\n                        *(*0x20 + -0x18) = uVar11;\n                        *(*0x20 + -0x20) = piVar8;\n                        *(*0x20 + -0x40) = uVar7;\n                        *(*0x20 + -0x78) = 0x443485;\n                        fcn.00409300();\n                        if (*(*0x20 + -0x40) < 0x23) {\n                            iVar3 = *(*(*0x20 + -0x40) * 0x10 + 0x558cc8);\n                            if (iVar3 == 0) {\n                                uVar4 = 0;\n                            }\n                            else {\n                                *(*0x20 + -0x28) = iVar3;\n                                *(*0x20 + -0x78) = 0x4434b9;\n                                fcn.00422840();\n                                uVar4 = *(*0x20 + -0x28);\n                            }\n                            *(*0x20 + -0x48) = uVar4;\n                            *(*0x20 + -0x78) = 0x4434d1;\n                            fcn.00409520();\n                            iVar3 = *(*0x20 + -0x48);\n                            if (iVar3 == 0) {\n                                *(*0x20 + -0x78) = 0x4434f1;\n                                iVar3 = fcn.00421680(1);\n                                if (iVar3 == 0) {\n                                    uVar11 = 0xd;\n                                    *(*0x20 + -0x78) = 0x44352e;\n                                    fcn.00430d40();\n                                    goto code_r0x0044352e;\n                                }\n                                *(iVar3 + 0x68) = *(*0x20 + -0x20);\n                            }\n                            return *(iVar3 + 0x18);\n                        }\ncode_r0x0044352e:\n                        uVar10 = uVar11;\n                        uVar7 = 0x23;\n                        *(*0x20 + -0x78) = 0x443538;\n                        uVar1 = fcn.00459720(0x23);\n                        goto code_r0x00443538;\n                    }\n                    uVar7 = in_RAX & 0xffffffff;\n                    uVar10 = 0;\n                    while( true ) {\n                        uVar5 = uVar7;\n                        uVar1 = in_RAX;\n                        if (uVar1 < 0x2001) break;\ncode_r0x00443538:\n                        uVar10 = uVar10 + 1;\n                        in_RAX = uVar1 >> 1;\n                    }\n                    if ((piVar8[0x14] == 0) || (piVar8[0x1a] != 0)) {\n                        if ((uVar10 & 0xff) < 2) {\n                            *(*0x20 + -0x51) = uVar10;\n                            *(*0x20 + -0x10) = (uVar10 & 0xff) * 0x40 + 0x558200;\n                            *(*0x20 + -0x78) = 0x443587;\n                            fcn.00409300();\n                            *(*0x20 + -0x78) = 0x443591;\n                            uVar4 = fcn.00442d00();\n                            *(*0x20 + -0x50) = uVar4;\n                            *(*0x20 + -0x78) = 0x4435a5;\n                            fcn.00409520();\n                            return *(*0x20 + -0x50);\n                        }\n                    }\n                    else {\n                        iVar3 = *(piVar8[0x14] + 0x40);\n                        if ((uVar10 & 0xff) < 2) {\n                            iVar9 = (uVar10 & 0xff) * 0x10;\n                            puVar2 = *(iVar3 + 0x468 + iVar9);\n                            if (puVar2 == NULL) {\n                                *(*0x20 + -0x38) = iVar3;\n                                *(*0x20 + -0x30) = iVar9;\n                                *(*0x20 + -0x78) = 0x4435e5;\n                                fcn.00443040();\n                                iVar9 = *(*0x20 + -0x30);\n                                iVar3 = *(*0x20 + -0x38);\n                                puVar2 = *(iVar3 + 0x468 + iVar9);\n                                uVar5 = *(*0x20 + 8);\n                            }\n                            *(iVar3 + 0x468 + iVar9) = *puVar2;\n                            piVar8 = iVar3 + 0x470 + iVar9;\n                            *piVar8 = *piVar8 - uVar5;\n                            return puVar2;\n                        }\n                        *(*0x20 + -0x78) = 0x443632;\n                        fcn.00459720(2);\n                    }\n                    *(*0x20 + -0x78) = 0x44363c;\n                    fcn.00459720(2);\n                }\n                *(*0x20 + -0x78) = 0x44364d;\n                fcn.00430d40();\n            }\n            *(*0x20 + -0x78) = 0x44365e;\n            uVar1 = fcn.00430d40();\n        }\n        *(puVar12 + 8) = uVar1;\n        *(puVar12 + -8) = 0x443668;\n        fcn.0045b6e0();\n        in_RAX = *(puVar12 + 8);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 1820
    },
    "00443680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00443680(void)\n\n{\n    int64_t *piVar1;\n    ulong *in_RAX;\n    int32_t iVar2;\n    uint64_t uVar3;\n    ulong *puVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar7 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar5 = unaff_RBX - in_RAX;\n            if ((uVar5 & uVar5 - 1) == 0) {\n                if (unaff_RBX <= uVar5 + in_RAX) {\n                    if (*0x5580a8 != 0) {\n                        *(*0x20 + -0x80) = 0x443773;\n                        fcn.00413220();\n                        return;\n                    }\n                    puVar4 = in_RAX;\n                    uVar6 = uVar5;\n                    if (0x7fff < uVar5) {\n                        uVar5 = in_RAX + 0x100000000000 >> 0x2a;\n                        if (uVar5 < 0x40) {\n                            iVar8 = *(*(*(uVar5 * 8 + 0x52a0d8) + (in_RAX + 0x100000000000 >> 0x16 & 0xfffff) * 8) +\n                                      0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n                            puVar4 = in_RAX >> 0xd & 0x100 | *(iVar8 + 99);\n                            if (*(iVar8 + 99) == 2) {\n                                if (*0x557cac == 0) {\n                                    *(*0x20 + -0x80) = 0x44376b;\n                                    fcn.00422420(1);\n                                    return;\n                                }\n                                iVar9 = 0;\n                                for (uVar5 = *(iVar8 + 0x20); 1 < uVar5; uVar5 = uVar5 >> 1) {\n                                    iVar9 = iVar9 + 1;\n                                }\n                                *(*0x20 + -0x58) = iVar8;\n                                *(*0x20 + -0x48) = iVar9;\n                                *(*0x20 + -0x80) = 0x4437ab;\n                                fcn.00409300();\n                                if (*(*0x20 + -0x48) < 0x23) {\n                                    *(*0x20 + -0x80) = 0x4437ce;\n                                    fcn.004229c0(0x558cc8);\n                                    *(*0x20 + -0x80) = 0x4437dc;\n                                    fcn.00409520();\n                                    return;\n                                }\n                                *(*0x20 + -0x80) = 0x4437e8;\n                                in_RAX = fcn.00459720(0x23);\n                            }\n                            *(*0x20 + -0x20) = in_RAX;\n                            *(*0x20 + -0x50) = *(iVar8 + 0x18);\n                            *(*0x20 + -0x80) = 0x4437fb;\n                            fcn.004324c0();\n                            *(*0x20 + -0x80) = 0x443805;\n                            fcn.00432c20();\n                            *(*0x20 + -0x80) = 0x44380a;\n                            fcn.004326e0();\n                            *(*0x20 + -0x80) = 0x443814;\n                            fcn.00432d40();\n                            *(*0x20 + -0x80) = 0x443819;\n                            fcn.00432720();\n                            *(*0x20 + -0x80) = 0x44381e;\n                            fcn.00432540();\n                            uVar6 = 0xe;\n                            *(*0x20 + -0x80) = 0x44382f;\n                            fcn.00430d40();\n                        }\n                        iVar2 = 0x40;\n                        *(*0x20 + -0x80) = 0x44383c;\n                        uVar5 = fcn.00459740(0x40);\n                        goto code_r0x0044383c;\n                    }\n                    *(*0x20 + -0x10) = unaff_R14;\n                    uVar3 = 0;\n                    for (; iVar2 = uVar3,  0x2000 < uVar6; uVar6 = uVar6 >> 1) {\ncode_r0x0044383c:\n                        uVar3 = iVar2 + 1;\n                    }\n                    *(*0x20 + -0x28) = puVar4;\n                    iVar8 = *(*(*(*0x20 + -0x10) + 0x30) + 0xa0);\n                    if ((iVar8 == 0) || (*(*(*(*0x20 + -0x10) + 0x30) + 0xd0) != 0)) {\n                        if ((uVar3 & 0xff) < 2) {\n                            *(*0x20 + -0x59) = uVar3;\n                            *(*0x20 + -0x18) = (uVar3 & 0xff) * 0x40 + 0x558200;\n                            *(*0x20 + -0x80) = 0x443899;\n                            fcn.00409300();\n                            *(*0x20 + -0x80) = 0x4438a8;\n                            fcn.00442ea0();\n                            *(*0x20 + -0x80) = 0x4438b4;\n                            fcn.00409520();\n                            return;\n                        }\n                    }\n                    else {\n                        iVar8 = *(iVar8 + 0x40);\n                        if ((uVar3 & 0xff) < 2) {\n                            iVar9 = (uVar3 & 0xff) * 0x10;\n                            if (0x7fff < *(iVar8 + 0x470 + iVar9)) {\n                                *(*0x20 + -0x30) = uVar5;\n                                *(*0x20 + -0x40) = iVar8;\n                                *(*0x20 + -0x38) = iVar9;\n                                *(*0x20 + -0x80) = 0x4438f6;\n                                fcn.00443160();\n                                uVar5 = *(*0x20 + -0x30);\n                                puVar4 = *(*0x20 + -0x28);\n                                iVar8 = *(*0x20 + -0x40);\n                                iVar9 = *(*0x20 + -0x38);\n                            }\n                            *puVar4 = *(iVar8 + 0x468 + iVar9);\n                            *(iVar8 + 0x468 + iVar9) = puVar4;\n                            piVar1 = iVar8 + 0x470 + iVar9;\n                            *piVar1 = *piVar1 + uVar5;\n                            return;\n                        }\n                        *(*0x20 + -0x80) = 0x44393a;\n                        fcn.00459720(2);\n                    }\n                    *(*0x20 + -0x80) = 0x443945;\n                    fcn.00459720(2);\n                }\n                *(*0x20 + -0x80) = 0x443956;\n                fcn.00430d40();\n            }\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x80) = 0x443967;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + -8) = 0x443977;\n        fcn.0045b6e0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1896
    },
    "004439a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004439a0(uint64_t *arg1)\n\n{\n    int64_t iVar1;\n    uint64_t *puVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    uint64_t in_RAX;\n    uint64_t uVar8;\n    ulong uVar9;\n    int32_t *unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    int64_t unaff_RDI;\n    uint64_t uVar11;\n    uint32_t uVar12;\n    uint64_t uVar13;\n    int64_t unaff_R14;\n    \n    while (puVar10 = *0x20,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\ncode_r0x00443b71:\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + 0x28) = unaff_RSI;\n        *(puVar10 + -8) = 0x443b8f;\n        fcn.00457040();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        unaff_RSI = *(puVar10 + 0x28);\n        *0x20 = puVar10;\n    }\n    puVar10 = *0x20 + -0x60;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    *(*0x20 + 0x20) = unaff_RDI;\n    *(*0x20 + 0x28) = unaff_RSI;\n    *(*0x20 + -0x10) = unaff_RSI;\n    uVar3 = *arg1;\n    uVar4 = arg1[1];\n    uVar5 = arg1[2];\n    uVar11 = *unaff_RBX;\n    *(*0x20 + -0x28) = uVar11;\n    *(*0x20 + -0x30) = in_RAX;\n    uVar6 = arg1[0x23];\n    uVar13 = 0;\n    uVar8 = in_RAX;\n    do {\n        if (uVar11 <= uVar13) {\n            return;\n        }\n        *(*0x20 + -0x40) = uVar13;\n        uVar12 = *((uVar13 >> 3) + *(unaff_RBX + 2));\n        while (uVar12 != '\\0') {\n            uVar7 = 0;\n            if (uVar12 != 0) {\n                for (; (uVar12 >> uVar7 & 1) == 0; uVar7 = uVar7 + 1) {\n                }\n            }\n            uVar12 = uVar12 & uVar12 - 1;\n            *(*0x20 + -0x49) = uVar12;\n            iVar1 = uVar7 + uVar13;\n            puVar2 = in_RAX + iVar1 * 8;\n            while( true ) {\n                uVar13 = *(in_RAX + iVar1 * 8);\n                *(*0x20 + -0x48) = uVar13;\n                if (unaff_RDI != 0) {\n                    if (uVar13 - 1 < 0xfff) {\n                        if (*0x5580c0 != 0) {\n                            *(*0x20 + -0x20) = puVar2;\n                            arg1 = *(unaff_R14 + 0x30);\n                            *(arg1 + 0xf9) = 2;\n                            *(*0x20 + -0x68) = 0x443af0;\n                            uVar9 = fcn.00447f80();\n                            *(*0x20 + -0x18) = uVar9;\n                            *(*0x20 + -0x38) = unaff_RSI;\n                            *(*0x20 + -0x68) = 0x443aff;\n                            fcn.004324c0();\n                            *(*0x20 + -0x68) = 0x443b10;\n                            fcn.00432dc0();\n                            *(*0x20 + -0x68) = 0x443b1f;\n                            fcn.00432dc0();\n                            *(*0x20 + -0x68) = 0x443b30;\n                            fcn.00432dc0();\n                            *(*0x20 + -0x68) = 0x443b3a;\n                            fcn.00432d40();\n                            *(*0x20 + -0x68) = 0x443b4b;\n                            fcn.00432dc0();\n                            *(*0x20 + -0x68) = 0x443b55;\n                            fcn.00432c20();\n                            *(*0x20 + -0x68) = 0x443b5a;\n                            fcn.00432720();\n                            *(*0x20 + -0x68) = 0x443b5f;\n                            fcn.00432540();\n                            unaff_RBX = 0x1e;\n                            *(*0x20 + -0x68) = 0x443b70;\n                            in_RAX = fcn.00430d40();\n                            goto code_r0x00443b71;\n                        }\n                        uVar12 = *(*0x20 + -0x49);\n                    }\n                    else {\n                        uVar12 = *(*0x20 + -0x49);\n                    }\n                }\n                if ((uVar13 < uVar3) || (uVar4 <= uVar13)) goto code_r0x00443a1e;\n                if (uVar6 <= uVar8) {\n                    *(in_RAX + iVar1 * 8) = uVar13 + uVar5;\n                    goto code_r0x00443a1e;\n                }\n                LOCK();\n                uVar11 = *puVar2;\n                *puVar2 = *puVar2 ^ (uVar13 == uVar11) * (*puVar2 ^ *(*0x20 + -0x48) + uVar5);\n                if (uVar13 == uVar11) break;\n                uVar8 = *(*0x20 + -0x30);\n                unaff_RSI = *(*0x20 + -0x10);\n            }\n            uVar8 = *(*0x20 + -0x30);\n            unaff_RSI = *(*0x20 + -0x10);\ncode_r0x00443a1e:\n            uVar13 = *(*0x20 + -0x40);\n            uVar11 = *(*0x20 + -0x28);\n        }\n        uVar13 = uVar13 + 8;\n    } while( true );\n}\n",
        "token_count": 1608
    },
    "004441c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004441c0(void)\n\n{\n    int64_t *piVar1;\n    int64_t *in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x128 && *0x20 + -0x128 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x1a8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX[0xe] == 0) {\n                iVar7 = in_RAX[1];\n                iVar4 = *in_RAX;\n                if (iVar4 != 0) {\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x130) = iVar7;\n                    *(*0x20 + -0x138) = iVar4;\n                    *(*0x20 + -0x140) = in_RAX[7];\n                    *(*0x20 + -0x1b0) = 0x444234;\n                    uVar2 = fcn.004433a0();\n                    *(*0x20 + -0x148) = uVar2;\n                    *(*0x20 + -0x150) = unaff_RBX;\n                    *(*0x20 + -0x1b8) = unaff_RBP;\n                    *(*0x20 + -0x1b0) = 0x444259;\n                    fcn.00459966();\n                    uVar3 = *(*0x20 + -0x138);\n                    *(*0x20 + -0x128) = uVar3;\n                    uVar8 = *(*0x20 + -0x130);\n                    *(*0x20 + -0x120) = uVar8;\n                    *(*0x20 + -0x118) = unaff_RBX - uVar8;\n                    iVar4 = uVar8 - *(*0x20 + -0x140);\n                    *(*0x20 + -0x158) = iVar4;\n                    iVar7 = *(*0x20 + 8);\n                    if (*(iVar7 + 0xb8) == '\\0') {\n                        uVar9 = *(*0x20 + 0x10);\n                        if ((uVar9 < uVar8 - uVar3) &&\n                           (uVar6 = uVar8 - uVar3 & 0xffffffffffffff00 | *(iVar7 + 0xb9),  *(iVar7 + 0xb9) != 0)) {\n                            *(*0x20 + -0x1b0) = 0x444486;\n                            fcn.00430d40();\n                            goto code_r0x00444486;\n                        }\n                        for (iVar7 = *(iVar7 + 0x148); iVar7 != 0; iVar7 = *(iVar7 + 0x40)) {\n                            uVar3 = *(iVar7 + 0x18);\n                            if ((*(*0x20 + -0x128) < uVar3 || *(*0x20 + -0x128) == uVar3) &&\n                               (uVar3 <= *(*0x20 + -0x120) && *(*0x20 + -0x120) != uVar3)) {\n                                *(iVar7 + 0x18) = uVar3 + *(*0x20 + -0x118);\n                            }\n                        }\n                    }\n                    else {\n                        uVar9 = 0;\n                        uVar6 = uVar8;\n                        for (uVar8 = *(iVar7 + 0x148); uVar8 != 0; uVar8 = *(uVar8 + 0x40)) {\n                            uVar10 = *(*(uVar8 + 0x50) + 0x18) + *(uVar8 + 0x18);\n                            if (((uVar3 <= uVar10) && (uVar10 < uVar6)) && (uVar9 < uVar10)) {\n                                uVar9 = uVar10;\n                            }\ncode_r0x00444486:\n                        }\n                        *(*0x20 + -0x10) = uVar9;\n                        *(*0x20 + -0x1b0) = 0x4444cf;\n                        iVar4 = fcn.00444040(*0x20 + -0x128);\n                        iVar4 = *(*0x20 + -0x158) - iVar4;\n                    }\n                    *(*0x20 + -0x1b0) = 0x44432f;\n                    fcn.0045a040(iVar4);\n                    iVar7 = *(*0x20 + 8);\n                    uVar3 = *(iVar7 + 0x50);\n                    if ((*(*0x20 + -0x128) < uVar3 || *(*0x20 + -0x128) == uVar3) &&\n                       (uVar3 <= *(*0x20 + -0x120) && *(*0x20 + -0x120) != uVar3)) {\n                        *(iVar7 + 0x50) = *(*0x20 + -0x118) + uVar3;\n                    }\n                    uVar3 = *(iVar7 + 0x68);\n                    if ((*(*0x20 + -0x128) < uVar3 || *(*0x20 + -0x128) == uVar3) &&\n                       (uVar3 <= *(*0x20 + -0x120) && *(*0x20 + -0x120) != uVar3)) {\n                        *(iVar7 + 0x68) = uVar3 + *(*0x20 + -0x118);\n                    }\n                    *(*0x20 + -0x1b0) = 0x444398;\n                    fcn.00443f00();\n                    piVar1 = *(*0x20 + 8);\n                    uVar3 = piVar1[4];\n                    if ((*(*0x20 + -0x128) < uVar3 || *(*0x20 + -0x128) == uVar3) &&\n                       (uVar3 <= *(*0x20 + -0x120) && *(*0x20 + -0x120) != uVar3)) {\n                        piVar1[4] = *(*0x20 + -0x118) + uVar3;\n                    }\n                    if (*(*0x20 + -0x10) != 0) {\n                        *(*0x20 + -0x10) = *(*0x20 + -0x10) + *(*0x20 + -0x118);\n                    }\n                    iVar7 = *(*0x20 + -0x148);\n                    *piVar1 = iVar7;\n                    iVar4 = *(*0x20 + -0x150);\n                    piVar1[1] = iVar4;\n                    piVar1[2] = iVar7 + 0x13a0;\n                    piVar1[7] = iVar4 - *(*0x20 + -0x158);\n                    iVar7 = *(*0x20 + -0x118);\n                    piVar1[0x10] = piVar1[0x10] + iVar7;\n                    *(*0x20 + -0x1a8) = 0;\n                    *(*0x20 + -0x1b0) = 0x444453;\n                    fcn.0044d020(0, iVar7, 0, 0x7fffffff);\n                    *(*0x20 + -0x1b0) = 0x444465;\n                    fcn.00443680();\n                    return;\n                }\n                *(*0x20 + -0x1b0) = 0x4444f7;\n                fcn.00430d40();\n            }\n            unaff_RBX = 0x27;\n            *(*0x20 + -0x1b0) = 0x444508;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x444518;\n        fcn.00457040();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1948
    },
    "00445120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00445120(void)\n\n{\n    int64_t *piVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t *unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (unaff_R14[2] <= *0x20 && *0x20 != unaff_R14[2]) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*in_RAX != 0) {\n                if (((*(in_RAX + 0x12) >> 0xc & 1) != 0) ||\n                   (((in_RAX == *(unaff_R14[6] + 0x90) && (unaff_R14 != *(unaff_R14[6] + 0x90))) &&\n                    (*(in_RAX + 0x12) == 2)))) {\n                    if (in_RAX[0xe] == 0) {\n                        if (*(in_RAX + 0xb4) == '\\0') {\n                            bVar5 = *(in_RAX + 0xb9) == '\\0';\n                        }\n                        else {\n                            bVar5 = false;\n                        }\n                    }\n                    else {\n                        bVar5 = false;\n                    }\n                    if (bVar5) {\n                        if ((*(unaff_R14[6] + 0x90) != in_RAX) || (*(in_RAX[6] + 0x2d0) == 0)) {\n                            if (0 < *0x5580b4) {\n                                return;\n                            }\n                            *(*0x20 + 8) = in_RAX;\n                            iVar2 = in_RAX[0x27];\n                            *(*0x20 + -0x20) = 0x4451e9;\n                            iVar2 = fcn.004478a0(iVar2);\n                            if ((iVar2 != 0) && (*(iVar2 + 0x28) == '\\x06')) {\n                                return;\n                            }\n                            piVar1 = *(*0x20 + 8);\n                            uVar3 = piVar1[1] - *piVar1;\n                            if (uVar3 >> 1 < 0x2000) {\n                                return;\n                            }\n                            if (uVar3 >> 2 <= (piVar1[1] - piVar1[7]) + 800U) {\n                                return;\n                            }\n                            *(*0x20 + -0x20) = 0x445246;\n                            fcn.004441c0();\n                            return;\n                        }\n                        *(*0x20 + -0x20) = 0x445275;\n                        fcn.00430d40();\n                    }\n                    *(*0x20 + -0x20) = 0x445286;\n                    fcn.00430d40();\n                }\n                *(*0x20 + -0x20) = 0x445297;\n                fcn.00430d40();\n            }\n            *(*0x20 + -0x20) = 0x4452a8;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x4452b3;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 808
    },
    "00445460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00445460(uchar param_1)\n\n{\n    int32_t iVar1;\n    int64_t **in_RAX;\n    ulong uVar2;\n    int64_t *piVar3;\n    int32_t *piVar4;\n    int32_t **ppiVar5;\n    int64_t iVar6;\n    ulong *puVar7;\n    int64_t iVar8;\n    ulong unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t *piVar10;\n    int32_t iVar11;\n    int64_t *piVar12;\n    int32_t iVar13;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x50 && *0x20 + -0x50 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0xd0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x18) = in_XMM15;\n            piVar3 = in_RAX[3];\n            if (piVar3 == NULL) {\n                return 0;\n            }\n            *(*0x20 + 8) = in_RAX;\n            piVar10 = *in_RAX;\n            *(*0x20 + -0x28) = piVar10;\n            piVar12 = in_RAX[1];\n            *(*0x20 + -0x30) = piVar12;\n            if (*piVar10 == piVar3) {\n                iVar1 = -1;\n            }\n            else {\n                *(*0x20 + -0x98) = piVar3 + -1;\n                *(*0x20 + -0xd8) = 0x4454f0;\n                iVar1 = fcn.00448680(1);\n                piVar10 = *(*0x20 + -0x28);\n                piVar12 = *(*0x20 + -0x30);\n                piVar3 = *(*0x20 + -0x98);\n                in_RAX = *(*0x20 + 8);\n            }\n            *(*0x20 + -0x98) = piVar3;\n            if (iVar1 == -1) {\n                iVar1 = 0;\n            }\n            *(*0x20 + -0xa4) = iVar1;\n            if (in_RAX[7] - in_RAX[5] == 0) {\n                iVar13 = 0;\n                iVar6 = 0;\n                goto code_r0x00445647;\n            }\n            *(*0x20 + -0x90) = in_RAX[7] - in_RAX[5];\n            if (*(piVar10 + 0x2b) < 2) {\n                piVar4 = NULL;\n            }\n            else {\n                iVar6 = piVar10 + *(piVar10 + 4) * 4 + 0x2c;\n                if ((iVar6 >> 2 & 1) != 0) {\n                    if ((piVar10 >> 2 & 1) != 0) {\n                        *(*0x20 + -0x50) = iVar6;\n                        *(*0x20 + -0xd8) = 0x44557f;\n                        fcn.004324c0();\n                        *(*0x20 + -0xd8) = 0x445590;\n                        fcn.00432dc0();\n                        *(*0x20 + -0xd8) = 0x44559d;\n                        fcn.00432d40();\n                        *(*0x20 + -0xd8) = 0x4455a5;\n                        fcn.00432720();\n                        *(*0x20 + -0xd8) = 0x4455aa;\n                        fcn.00432540();\n                        in_RAX = *(*0x20 + 8);\n                        iVar1 = *(*0x20 + -0xa4);\n                        piVar12 = *(*0x20 + -0x30);\n                        iVar6 = *(*0x20 + -0x50);\n                        piVar10 = *(*0x20 + -0x28);\n                    }\n                    iVar6 = iVar6 + 4;\n                }\n                piVar4 = *(iVar6 + 8);\n            }\n            piVar3 = piVar12;\n            if ((piVar4 != NULL) && (iVar11 = *piVar4,  0 < iVar11)) {\n                iVar13 = piVar4[1];\n                if (iVar13 < 1) {\n                    iVar13 = 0;\n                    iVar6 = 0;\ncode_r0x00445647:\n                    *(*0x20 + -0x38) = iVar6;\n                    *(*0x20 + -0x9c) = iVar13;\n                    if (in_RAX[9] == NULL) {\n                        iVar11 = 0;\n                        iVar6 = 0;\n                        goto code_r0x004457a2;\n                    }\n                    piVar3 = in_RAX[10];\n                    if (piVar3 != NULL) {\n                        iVar1 = in_RAX[9] >> 3;\n                        iVar11 = *piVar3;\n                        if (iVar1 < *piVar3) {\n                            iVar11 = iVar1;\n                        }\n                        iVar6 = piVar3[1];\n                        goto code_r0x004457a2;\n                    }\n                    if (*(piVar10 + 0x2b) == '\\0') {\n                        piVar4 = NULL;\n                    }\n                    else {\n                        ppiVar5 = piVar10 + *(piVar10 + 4) * 4 + 0x2c;\n                        if ((ppiVar5 >> 2 & 1) != 0) {\n                            if ((piVar10 >> 2 & 1) != 0) {\n                                *(*0x20 + -0x68) = ppiVar5;\n                                *(*0x20 + -0xd8) = 0x4456d3;\n                                fcn.004324c0();\n                                *(*0x20 + -0xd8) = 0x4456e5;\n                                fcn.00432dc0();\n                                *(*0x20 + -0xd8) = 0x4456f2;\n                                fcn.00432d40();\n                                *(*0x20 + -0xd8) = 0x4456f7;\n                                fcn.00432720();\n                                *(*0x20 + -0xd8) = 0x4456fc;\n                                fcn.00432540();\n                                in_RAX = *(*0x20 + 8);\n                                iVar1 = *(*0x20 + -0xa4);\n                                ppiVar5 = *(*0x20 + -0x68);\n                                piVar12 = *(*0x20 + -0x30);\n                                iVar13 = *(*0x20 + -0x9c);\n                                piVar10 = *(*0x20 + -0x28);\n                            }\n                            ppiVar5 = ppiVar5 + 4;\n                        }\n                        piVar4 = *ppiVar5;\n                    }\n                    piVar3 = piVar12;\n                    if ((piVar4 != NULL) && (iVar11 = *piVar4,  0 < iVar11)) {\n                        *(*0x20 + -0x48) = piVar4;\n                        if ((-1 < iVar1) && (iVar1 < iVar11)) {\n                            iVar11 = piVar4[1];\n                            if (iVar11 < 1) {\n                                iVar11 = 0;\n                                iVar6 = 0;\n                            }\n                            else {\n                                iVar6 = piVar4 + iVar1 * (iVar11 + 7 >> 3) + 8;\n                            }\ncode_r0x004457a2:\n                            if (in_RAX[10] == NULL) {\n                                if (*(piVar10 + 0x2b) < 3) {\n                                    puVar7 = NULL;\n                                }\n                                else {\n                                    iVar8 = piVar10 + *(piVar10 + 4) * 4 + 0x2c;\n                                    if ((iVar8 >> 2 & 1) != 0) {\n                                        if ((piVar10 >> 2 & 1) != 0) {\n                                            *(*0x20 + -0x60) = iVar8;\n                                            *(*0x20 + -0x40) = iVar6;\n                                            *(*0x20 + -0xa0) = iVar11;\n                                            *(*0x20 + -0xd8) = 0x44582a;\n                                            fcn.004324c0();\n                                            *(*0x20 + -0xd8) = 0x44583b;\n                                            fcn.00432dc0();\n                                            *(*0x20 + -0xd8) = 0x445848;\n                                            fcn.00432d40();\n                                            *(*0x20 + -0xd8) = 0x44584d;\n                                            fcn.00432720();\n                                            *(*0x20 + -0xd8) = 0x445852;\n                                            fcn.00432540();\n                                            iVar8 = *(*0x20 + -0x60);\n                                            iVar13 = *(*0x20 + -0x9c);\n                                        }\n                                        iVar8 = iVar8 + 4;\n                                    }\n                                    puVar7 = *(iVar8 + 0x10);\n                                }\n                                if (puVar7 != NULL) {\n                                    uVar2 = *puVar7;\n                                    *(*0x20 + -0x20) = puVar7 + 1;\n                                    *(*0x20 + -0x18) = uVar2;\n                                    *(*0x20 + -0x10) = uVar2;\n                                }\n                            }\n                            else {\n                                *(*0x20 + -0x20) = *0x4fd5f0;\n                                *(*0x20 + -0x18) = *0x4fd5f8;\n                                *(*0x20 + -0x10) = *0x4fd600;\n                            }\n                            return iVar13;\n                        }\n                        *(*0x20 + -0xd8) = 0x445905;\n                        uVar2 = fcn.00447f80();\n                        *(*0x20 + -0x38) = uVar2;\n                        *(*0x20 + -0x70) = piVar12;\n                        *(*0x20 + -0x78) = **(*0x20 + -0x48);\n                        *(*0x20 + -0xd8) = 0x445927;\n                        fcn.004324c0();\n                        *(*0x20 + -0xd8) = 0x445938;\n                        fcn.00432dc0();\n                        *(*0x20 + -0xd8) = 0x445945;\n                        fcn.00432bc0(*(*0x20 + -0xa4));\n                        *(*0x20 + -0xd8) = 0x445956;\n                        fcn.00432dc0();\n                        *(*0x20 + -0xd8) = 0x445965;\n                        fcn.00432bc0();\n                        *(*0x20 + -0xd8) = 0x445976;\n                        fcn.00432dc0();\n                        *(*0x20 + -0xd8) = 0x445988;\n                        fcn.00432dc0();\n                        *(*0x20 + -0xd8) = 0x445999;\n                        fcn.00432dc0();\n                        *(*0x20 + -0xd8) = 0x4459a5;\n                        fcn.00432c20();\n                        *(*0x20 + -0xd8) = 0x4459b6;\n                        fcn.00432dc0();\n                        *(*0x20 + -0xd8) = 0x4459bb;\n                        fcn.00432540();\n                        *(*0x20 + -0xd8) = 0x4459cc;\n                        fcn.00430d40();\n                    }\n                    *(*0x20 + -0xd8) = 0x4459d7;\n                    piVar12 = piVar3;\n                    uVar2 = fcn.00447f80();\n                    *(*0x20 + -0x38) = uVar2;\n                    *(*0x20 + -0x70) = piVar3;\n                    *(*0x20 + -0x80) = *(*(*0x20 + 8) + 0x40);\n                    *(*0x20 + -0x88) = *(*(*0x20 + 8) + 0x48);\n                    *(*0x20 + -0xd8) = 0x445a05;\n                    fcn.004324c0();\n                    *(*0x20 + -0xd8) = 0x445a16;\n                    fcn.00432dc0();\n                    *(*0x20 + -0xd8) = 0x445a28;\n                    fcn.00432dc0();\n                    *(*0x20 + -0xd8) = 0x445a39;\n                    fcn.00432dc0();\n                    *(*0x20 + -0xd8) = 0x445a45;\n                    fcn.00432c20();\n                    *(*0x20 + -0xd8) = 0x445a56;\n                    fcn.00432dc0();\n                    *(*0x20 + -0xd8) = 0x445a65;\n                    fcn.00432c20();\n                    *(*0x20 + -0xd8) = 0x445a6a;\n                    fcn.00432720();\n                    *(*0x20 + -0xd8) = 0x445a6f;\n                    fcn.00432540();\n                    *(*0x20 + -0xd8) = 0x445a85;\n                    fcn.00430d40();\n                }\n                else {\n                    *(*0x20 + -0x58) = piVar4;\n                    if ((-1 < iVar1) && (iVar1 < iVar11)) {\n                        iVar6 = piVar4 + (iVar13 + 7 >> 3) * iVar1 + 8;\n                        goto code_r0x00445647;\n                    }\n                }\n                *(*0x20 + -0xd8) = 0x445a90;\n                piVar3 = piVar12;\n                uVar2 = fcn.00447f80();\n                *(*0x20 + -0x38) = uVar2;\n                *(*0x20 + -0x70) = piVar12;\n                *(*0x20 + -0x78) = **(*0x20 + -0x58);\n                *(*0x20 + -0xd8) = 0x445aaf;\n                fcn.004324c0();\n                *(*0x20 + -0xd8) = 0x445ac5;\n                fcn.00432dc0();\n                *(*0x20 + -0xd8) = 0x445ad1;\n                fcn.00432bc0(*(*0x20 + -0xa4));\n                *(*0x20 + -0xd8) = 0x445ae5;\n                fcn.00432dc0();\n                *(*0x20 + -0xd8) = 0x445aef;\n                fcn.00432bc0();\n                *(*0x20 + -0xd8) = 0x445b05;\n                fcn.00432dc0();\n                *(*0x20 + -0xd8) = 0x445b17;\n                fcn.00432dc0();\n                *(*0x20 + -0xd8) = 0x445b28;\n                fcn.00432dc0();\n                *(*0x20 + -0xd8) = 0x445b32;\n                fcn.00432c20();\n                *(*0x20 + -0xd8) = 0x445b45;\n                fcn.00432dc0();\n                *(*0x20 + -0xd8) = 0x445b4a;\n                fcn.00432540();\n                *(*0x20 + -0xd8) = 0x445b5b;\n                fcn.00430d40();\n            }\n            *(*0x20 + -0xd8) = 0x445b66;\n            uVar2 = fcn.00447f80();\n            *(*0x20 + -0x38) = uVar2;\n            *(*0x20 + -0x70) = piVar3;\n            *(*0x20 + -0x80) = *(*(*0x20 + 8) + 0x38);\n            *(*0x20 + -0xd8) = 0x445b89;\n            fcn.004324c0();\n            *(*0x20 + -0xd8) = 0x445b9a;\n            fcn.00432dc0();\n            *(*0x20 + -0xd8) = 0x445bac;\n            fcn.00432dc0();\n            *(*0x20 + -0xd8) = 0x445bbd;\n            fcn.00432dc0();\n            param_1 = *(*0x20 + -0x90);\n            *(*0x20 + -0xd8) = 0x445bcf;\n            fcn.00432c20();\n            *(*0x20 + -0xd8) = 0x445be5;\n            fcn.00432dc0();\n            *(*0x20 + -0xd8) = 0x445bef;\n            fcn.00432c20();\n            *(*0x20 + -0xd8) = 0x445bf4;\n            fcn.00432720();\n            *(*0x20 + -0xd8) = 0x445bf9;\n            fcn.00432540();\n            unaff_RBX = 0x10;\n            *(*0x20 + -0xd8) = 0x445c0a;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        puVar9[0x18] = param_1;\n        *(puVar9 + -8) = 0x445c1e;\n        fcn.00457040();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        param_1 = puVar9[0x18];\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 4125
    },
    "00445ca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00445ca0(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t *unaff_RBX;\n    int64_t *piVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint32_t uVar6;\n    int64_t *piVar7;\n    int64_t *piVar8;\n    int64_t *unaff_RDI;\n    int64_t *piVar9;\n    int64_t *in_R8;\n    int64_t *piVar10;\n    int64_t *in_R9;\n    uint64_t *unaff_R14;\n    bool bVar11;\n    \ncode_r0x00445ca0:\n    puVar5 = *0x20;\n    piVar10 = in_R9;\n    if (unaff_R14[2] <= *0x20 && *0x20 != unaff_R14[2]) {\n        puVar5 = *0x20 + -0x70;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x10) = unaff_RBX;\n        if (arg1 < 1) {\n            piVar7 = NULL;\n            piVar8 = NULL;\n            piVar9 = NULL;\n            piVar10 = in_R8;\n            goto code_r0x00445ce0;\n        }\n        in_R9 = NULL;\n        unaff_RDI = NULL;\n        piVar7 = NULL;\n        piVar10 = NULL;\n        piVar4 = unaff_RBX;\n        do {\n            if (piVar4[1] != 0) {\n                in_R8 = piVar10 + piVar4[1];\n                if (in_R8 < piVar10) goto code_r0x00445ee5;\n                unaff_RDI = unaff_RDI + 1;\n                piVar7 = in_R9;\n                piVar10 = in_R8;\n            }\n            in_R9 = in_R9 + 1;\n            piVar8 = unaff_RDI;\n            piVar9 = piVar10;\n            if (arg1 <= in_R9) {\ncode_r0x00445ce0:\n                unaff_RDI = piVar9;\n                piVar4 = unaff_RBX;\n                unaff_RBX = piVar8;\n                if (unaff_RBX == NULL) {\n                    return 0;\n                }\n                if (unaff_RBX == 0x1) {\n                    if (in_RAX != 0) {\n                        piVar8 = 0x1;\n                        goto code_r0x00445d47;\n                    }\n                    if (piVar7 < arg1) {\n                        iVar2 = piVar4[piVar7 * 2 + 1];\n                        *(*0x20 + -0x18) = piVar4[piVar7 * 2];\n                        *(*0x20 + -0x10) = iVar2;\n                        uVar1 = *(*0x20 + -0x18);\n                        if (*unaff_R14 < uVar1 || *unaff_R14 == uVar1) {\n                            uVar6 = uVar1 & 0xffffff00 | uVar1 < unaff_R14[1];\n                        }\n                        else {\n                            uVar6 = 0;\n                        }\n                        piVar8 = uVar6 ^ 1;\n                        goto code_r0x00445d47;\n                    }\n                }\n                else {\n                    piVar8 = NULL;\ncode_r0x00445d47:\n                    if (piVar8 != '\\0') {\n                        if (arg1 <= piVar7) {\n                            *(*0x20 + -0x78) = 0x445dbb;\n                            iVar2 = fcn.00459720(arg1);\n                            return iVar2;\n                        }\n                        return piVar4[piVar7 * 2];\n                    }\n                    *(*0x20 + 0x18) = arg1;\n                    *(*0x20 + 0x10) = piVar4;\n                    *(*0x20 + -0x78) = 0x445d65;\n                    iVar2 = fcn.00446400();\n                    unaff_RBX = *(*0x20 + 0x18);\n                    if (unaff_RBX < 1) {\n                        return iVar2;\n                    }\n                    *(*0x20 + -0x30) = iVar2;\n                    *(*0x20 + -0x50) = unaff_RDI;\n                    piVar10 = *(*0x20 + 0x10);\n                    in_R9 = NULL;\n                    piVar4 = unaff_RDI;\n                    while( true ) {\n                        piVar7 = piVar10[1];\n                        piVar9 = unaff_RDI;\n                        if (piVar7 < unaff_RDI) {\n                            piVar9 = piVar7;\n                        }\n                        if (arg1 == *piVar10) {\n                            bVar11 = unaff_RDI < piVar7;\n                            piVar3 = arg1;\n                            arg1 = unaff_RDI;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = arg1;\n                            *(*0x20 + -0x38) = in_R9;\n                            *(*0x20 + -0x20) = piVar10;\n                            *(*0x20 + -0x40) = unaff_RDI;\n                            *(*0x20 + -0x48) = piVar8;\n                            *(*0x20 + -0x58) = piVar7;\n                            *(*0x20 + -0x78) = 0x445e1c;\n                            fcn.0045a040(piVar9);\n                            arg1 = *(*0x20 + -0x40);\n                            piVar7 = *(*0x20 + -0x58);\n                            bVar11 = arg1 < piVar7;\n                            unaff_RBX = *(*0x20 + 0x18);\n                            piVar4 = *(*0x20 + -0x50);\n                            piVar8 = *(*0x20 + -0x48);\n                            piVar10 = *(*0x20 + -0x20);\n                            in_R9 = *(*0x20 + -0x38);\n                            iVar2 = *(*0x20 + -0x30);\n                            piVar3 = *(*0x20 + -0x28);\n                        }\n                        if (bVar11) break;\n                        in_R9 = in_R9 + 1;\n                        piVar8 = piVar8 - piVar7;\n                        unaff_RDI = arg1 - piVar7;\n                        arg1 = piVar3 + (piVar7 & -piVar8 >> 0x3f);\n                        if (unaff_RBX <= in_R9) {\n                            return iVar2;\n                        }\n                        piVar10 = piVar10 + 2;\n                    }\n                    *(*0x20 + -0x78) = 0x445e90;\n                    fcn.004597e0(arg1);\n                    piVar7 = piVar8;\n                    unaff_RDI = piVar9;\n                }\n                *(*0x20 + -0x78) = 0x445e98;\n                in_RAX = fcn.00459720(arg1);\n            }\n            piVar4 = piVar4 + 2;\n        } while( true );\n    }\n    goto code_r0x00445ef7;\ncode_r0x00445ee5:\n    unaff_RBX = 0x1d;\n    *(*0x20 + -0x78) = 0x445ef6;\n    in_RAX = fcn.00430d40();\ncode_r0x00445ef7:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + 0x10) = unaff_RBX;\n    *(puVar5 + 0x18) = arg1;\n    *(puVar5 + 0x20) = unaff_RDI;\n    *(puVar5 + -8) = 0x445f10;\n    fcn.00457040();\n    in_RAX = *(puVar5 + 8);\n    unaff_RBX = *(puVar5 + 0x10);\n    arg1 = *(puVar5 + 0x18);\n    unaff_RDI = *(puVar5 + 0x20);\n    *0x20 = puVar5;\n    in_R9 = piVar10;\n    goto code_r0x00445ca0;\n}\n",
        "token_count": 1882
    },
    "00446300": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00446300(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    uint8_t *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (arg1 != 0) {\n        if (arg1 != 1) {\n            if ((in_RAX == 0) || (0x20 < arg1)) {\n                in_RAX = fcn.0040a9e0(0);\n            }\n            fcn.0045a040(arg1);\n            return in_RAX;\n        }\n        return *unaff_RBX * 8 + 0x4fa820;\n    }\n    return 0;\n}\n",
        "token_count": 195
    },
    "00446fa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00446fa0(ulong param_1, ulong param_2, int64_t *param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    uint uVar2;\n    int64_t **ppiVar3;\n    int64_t *piVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    int64_t *piVar7;\n    int64_t iVar8;\n    int64_t *piVar9;\n    int64_t *arg2;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x60) = 0x446fc5;\n            ppiVar3 = fcn.0040b3c0();\n            *(*0x20 + -0x18) = ppiVar3;\n            for (iVar6 = 0x4f53c0; iVar6 != 0; iVar6 = *(iVar6 + 0x210)) {\n                if (*(iVar6 + 0x208) == '\\0') {\n                    *(*0x20 + -0x10) = iVar6;\n                    piVar7 = ppiVar3[1];\n                    piVar9 = *ppiVar3;\n                    piVar4 = piVar9;\n                    if (ppiVar3[2] < piVar7 + 1U) {\n                        *(*0x20 + -0x60) = 0x44701a;\n                        arg2 = piVar7;\n                        piVar4 = fcn.004425c0(piVar7);\n                        ppiVar3 = *(*0x20 + -0x18);\n                        ppiVar3[2] = piVar7;\n                        if (*0x557ed0 == 0) {\n                            *ppiVar3 = piVar4;\n                        }\n                        else {\n                            *(*0x20 + -0x60) = 0x447036;\n                            piVar4 = fcn.00459280(piVar7, arg2, param_3, param_4);\n                        }\n                        iVar6 = *(*0x20 + -0x10);\n                        piVar7 = piVar9;\n                    }\n                    param_3 = piVar7 + 1;\n                    ppiVar3[1] = param_3;\n                    if (*0x557ed0 == 0) {\n                        piVar4[piVar7] = iVar6;\n                    }\n                    else {\n                        *(*0x20 + -0x60) = 0x447065;\n                        ppiVar3 = fcn.00459380();\n                    }\n                    if ((*(iVar6 + 0x1e0) == 0) && (*(iVar6 + 0x1e8) == 0)) {\n                        iVar1 = *(iVar6 + 0xd8);\n                        iVar6 = *(iVar6 + 0xd0);\n                        *(*0x20 + -0x60) = 0x4470a5;\n                        uVar2 = fcn.004111e0();\n                        iVar8 = *(*0x20 + -0x10);\n                        *(iVar8 + 0x1e0) = uVar2;\n                        if (*0x557ed0 == 0) {\n                            *(iVar8 + 0x1e8) = iVar1 - iVar6;\n                        }\n                        else {\n                            *(*0x20 + -0x60) = 0x4470ce;\n                            fcn.004593c0(iVar8, piVar7, param_3, param_4);\n                        }\n                        iVar1 = *(iVar8 + 0xe8);\n                        iVar8 = *(iVar8 + 0xe0);\n                        *(*0x20 + -0x60) = 0x4470e8;\n                        uVar2 = fcn.004111e0();\n                        iVar6 = *(*0x20 + -0x10);\n                        *(iVar6 + 0x1f0) = uVar2;\n                        if (*0x557ed0 == 0) {\n                            *(iVar6 + 0x1f8) = iVar1 - iVar8;\n                        }\n                        else {\n                            *(*0x20 + -0x60) = 0x447111;\n                            fcn.004593c0(iVar6, piVar7, param_3, param_4);\n                        }\n                        ppiVar3 = *(*0x20 + -0x18);\n                    }\n                }\n            }\n            piVar7 = ppiVar3[1];\n            piVar9 = NULL;\n            while( true ) {\n                if (piVar7 <= piVar9) goto code_r0x00447186;\n                iVar6 = (*ppiVar3)[piVar9];\n                if (*(iVar6 + 0x1d8) != '\\0') break;\n                piVar9 = piVar9 + 1;\n            }\n            if (*0x557ed0 == 0) {\n                **ppiVar3 = iVar6;\n            }\n            else {\n                *(*0x20 + -0x60) = 0x44714e;\n                ppiVar3 = fcn.004593e0(piVar9, piVar7, param_3, param_4);\n            }\n            piVar7 = ppiVar3[1];\n            if (piVar9 < piVar7) {\n                if (*0x557ed0 == 0) {\n                    (*ppiVar3)[piVar9] = 0x4f53c0;\n                }\n                else {\n                    *(*0x20 + -0x60) = 0x447185;\n                    ppiVar3 = fcn.00459380(0x4f53c0);\n                }\ncode_r0x00447186:\n                if (*0x557ed0 != '\\0') {\n                    *(*0x20 + -0x60) = 0x44719e;\n                    fcn.00402960();\n                    ppiVar3 = *(*0x20 + -0x18);\n                }\n                uVar5 = *0x503640;\n                *0x503640 = ppiVar3;\n                return uVar5;\n            }\n            *(*0x20 + -0x60) = 0x4471c5;\n            fcn.00459720(piVar7);\n        }\n        *(puVar10 + -8) = 0x4471cb;\n        fcn.00457040();\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 1499
    },
    "004471e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004471e0(void)\n\n{\n    int32_t **ppiVar1;\n    int64_t arg1;\n    char cVar2;\n    int32_t **in_RAX;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int64_t iVar5;\n    int32_t *arg1_00;\n    ulong *puVar6;\n    int32_t *piVar7;\n    int64_t unaff_R14;\n    int32_t *piStack112;\n    int32_t *piStack96;\n    ulong uStack80;\n    ulong *puStack72;\n    int32_t *piStack64;\n    int64_t iStack56;\n    ulong uStack48;\n    int32_t iStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    int32_t iStack12;\n    \n    while (&uStack80 < *(unaff_R14 + 0x10) || &uStack80 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    piVar4 = *in_RAX;\n    if ((((*piVar4 == -6) && (*(piVar4 + 1) == '\\0')) && (*(piVar4 + 5) == '\\0')) &&\n       ((*(piVar4 + 6) == '\\x01' && (*(piVar4 + 7) == '\\b')))) {\n        ppiVar1 = in_RAX[0x10];\n        arg1_00 = in_RAX[0x11];\n        iVar5 = arg1_00 + -1;\n        piVar4 = NULL;\ncode_r0x0044726a:\n        piVar7 = piVar4;\n        if (piVar7 < iVar5) {\n            piVar4 = piVar7 + 1;\n            if (piVar4 < arg1_00) goto code_r0x0044728b;\n            goto code_r0x00447775;\n        }\n        if (arg1_00 != NULL) {\n            if ((*ppiVar1 == in_RAX[0x14]) && (ppiVar1[iVar5 * 2] == in_RAX[0x15])) {\n                piVar4 = in_RAX[0x39];\n                puVar6 = in_RAX[0x38];\n                if (piVar4 < 1) {\n                    return;\n                }\n                iVar5 = 0;\n                while( true ) {\n                    uStack48 = *puVar6;\n                    iStack40 = *(puVar6 + 1);\n                    iStack36 = *(puVar6 + 0xc);\n                    iStack32 = *(puVar6 + 2);\n                    iStack28 = *(puVar6 + 0x14);\n                    iStack24 = *(puVar6 + 3);\n                    iStack20 = *(puVar6 + 0x1c);\n                    arg1 = puVar6[3];\n                    iStack16 = *(puVar6 + 4);\n                    iStack12 = *(puVar6 + 0x24);\n                    if ((*(puVar6[4] + 8) != arg1) ||\n                       (puStack72 = puVar6,  cVar2 = fcn.004021a0(arg1, piVar4),  cVar2 == '\\0')) break;\n                    iVar5 = iVar5 + 1;\n                    if (piVar4 <= iVar5) {\n                        return;\n                    }\n                    puVar6 = puStack72 + 5;\n                }\n                arg1_00 = in_RAX[0x36];\n                piStack96 = in_RAX[0x37];\n                uStack80 = uStack48;\n                piStack64 = arg1_00;\n                fcn.004324c0();\n                fcn.00432dc0();\n                fcn.00432dc0();\n                fcn.00432dc0();\n                fcn.00432dc0();\n                fcn.00432720();\n                fcn.00432540();\n                fcn.00430d40();\n            }\n            fcn.00430d40();\n        }\n        piVar4 = fcn.00459720(arg1_00);\n        do {\n            piStack64 = piVar4;\n            fcn.004324c0();\n            fcn.00432dc0();\n            fcn.00432c20();\n            fcn.004326e0();\n            fcn.00432dc0();\n            fcn.00432720();\n            fcn.00432540();\n            piStack112 = piStack112 + 1;\ncode_r0x004476a6:\n            arg1_00 = piStack112;\n            if (piStack96 < piStack112) goto code_r0x0044773b;\n            piVar7 = in_RAX[0xe];\n            piVar3 = in_RAX[0x11];\n            if (piVar3 <= piStack112) goto code_r0x00447730;\n            arg1_00 = piStack112 * 0x10;\n            piVar3 = piStack112;\n            if (piVar7 <= *(arg1_00 + 2 + in_RAX[0x10])) goto code_r0x00447725;\n            piVar4 = fcn.00447f80();\n            arg1_00 = in_RAX[0x11];\n            piVar7 = in_RAX[0x10];\n        } while (piStack112 < arg1_00);\n        fcn.00459720(arg1_00);\ncode_r0x00447725:\n        fcn.00459740(piVar7);\ncode_r0x00447730:\n        fcn.00459720(piVar3);\ncode_r0x0044773b:\n        fcn.00430d40();\n        goto code_r0x0044774c;\n    }\ncode_r0x0044777d:\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432c20();\n    fcn.00432c20();\n    fcn.00432c20();\n    fcn.00432c20();\n    fcn.00432c20();\n    fcn.00432540();\n    piVar4 = in_RAX[0x31];\n    if (in_RAX[0x32] != NULL) goto code_r0x0044782f;\n    do {\n        fcn.004324c0();\n        fcn.00432720();\n        fcn.00432540();\n        piVar4 = fcn.00430d40();\ncode_r0x0044782f:\n        piStack64 = piVar4;\n        fcn.004324c0();\n        fcn.00432dc0();\n        fcn.00432dc0();\n        fcn.00432540();\n    } while( true );\ncode_r0x0044728b:\n    if (ppiVar1[piVar4 * 2] < ppiVar1[piVar7 * 2]) goto code_r0x0044729b;\n    goto code_r0x0044726a;\ncode_r0x0044729b:\n    arg1_00 = in_RAX[0xe];\n    if (ppiVar1[piVar7 * 2 + 1] < arg1_00) {\n        if (ppiVar1[piVar4 * 2 + 1] < arg1_00) {\n            if (piVar4 < iVar5) {\n                iStack56 = ppiVar1[piVar7 * 2 + 1] + in_RAX[0xd];\n                fcn.00447f80(ppiVar1[piVar4 * 2 + 1] + in_RAX[0xd]);\n            }\n            piVar3 = fcn.00447f80();\n            arg1_00 = in_RAX[0x11];\n            if (piVar7 < arg1_00) {\n                if (piVar4 < arg1_00) {\n                    piStack64 = piVar3;\n                    fcn.004324c0();\n                    fcn.00432dc0();\n                    fcn.00432c20();\n                    fcn.00432dc0();\n                    fcn.00432dc0();\n                    fcn.00432c20();\n                    fcn.00432dc0();\n                    fcn.00432540();\n                    if (in_RAX[0x32] != NULL) {\n                        piStack64 = in_RAX[0x31];\n                        fcn.004324c0();\n                        fcn.00432dc0();\n                        fcn.00432dc0();\n                        fcn.00432540();\n                    }\n                    fcn.004324c0();\n                    fcn.00432720();\n                    fcn.00432540();\n                    piStack112 = NULL;\n                    piStack96 = piVar7;\n                    goto code_r0x004476a6;\n                }\ncode_r0x0044774c:\n                fcn.00459720(arg1_00);\n            }\n            fcn.00459720(arg1_00);\n        }\n        fcn.00459740(arg1_00);\n    }\n    fcn.00459740(arg1_00);\ncode_r0x00447775:\n    fcn.00459720(arg1_00);\n    goto code_r0x0044777d;\n}\n",
        "token_count": 2068
    },
    "00447a60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00447cba)\n// WARNING: Removing unreachable block (ram,0x00447cc7)\n// WARNING: Removing unreachable block (ram,0x00447dfd)\n// WARNING: Removing unreachable block (ram,0x00447cd7)\n// WARNING: Removing unreachable block (ram,0x00447dc9)\n// WARNING: Removing unreachable block (ram,0x00447e90)\n// WARNING: Removing unreachable block (ram,0x00447ebd)\n// WARNING: Removing unreachable block (ram,0x00447e14)\n// WARNING: Removing unreachable block (ram,0x00447ece)\n\nuint fcn.00447a60(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint64_t *in_RAX;\n    int32_t iVar5;\n    int64_t unaff_RBX;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    uint64_t in_R8;\n    uint64_t **ppuVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    uint64_t arg1_00;\n    uint64_t **ppuVar11;\n    int64_t unaff_R14;\n    int32_t iStackX24;\n    uint64_t uStackX32;\n    int64_t in_stack_00000028;\n    uint uStack100;\n    uint64_t uStack88;\n    uint64_t *apuStack24 [2];\n    \n    while( true ) {\n        ppuVar11 = apuStack24;\n        iVar5 = arg1;\n        if (*(unaff_R14 + 0x10) <= ppuVar11 && ppuVar11 != *(unaff_R14 + 0x10)) break;\n        fcn.00457040();\n        arg1 = arg1 & 0xffffffff;\n        in_R8 = in_R8 & 0xff;\n        iStackX24 = iVar5;\n        uStackX32 = unaff_RDI;\n        in_stack_00000028 = unaff_RSI;\n    }\n    if (iVar5 == 0) {\n        return 0xffffffff;\n    }\n    arg1_00 = arg1;\n    if (unaff_RSI == 0) goto code_r0x00447aca;\n    uVar6 = unaff_RDI >> 3 & 1;\n    ppuVar8 = NULL;\n    do {\n        arg1_00 = arg1;\n        if (ppuVar8 < 8) {\n            iVar1 = unaff_RSI + uVar6 * 0x80;\n            iVar10 = ppuVar8 * 0x10;\n            ppuVar11 = ppuVar8;\n            if ((*(iVar1 + 8 + iVar10) == arg1) && (*(iVar1 + iVar10) == unaff_RDI)) {\n                return *(iVar1 + 0xc + iVar10);\n            }\n        }\n        else {\ncode_r0x00447aca:\n            if (in_RAX == NULL) {\n                if ((in_R8 == '\\0') || (*0x557cc8 != 0)) {\n                    return 0xffffffff;\n                }\n                fcn.004324c0();\n                fcn.00432dc0();\n                fcn.00432c20();\n                fcn.00432720();\n                fcn.00432540();\n                fcn.00430d40();\ncode_r0x00447bc1:\n                do {\n                    fcn.004487c0(arg1_00);\n                } while (uStack88 <= uStackX32);\n                if (in_stack_00000028 != 0) {\n                    iVar1 = *(unaff_R14 + 0x30);\n                    uVar7 = *(iVar1 + 0xf0);\n                    uVar2 = *(iVar1 + 0xf4);\n                    *(iVar1 + 0xf0) = uVar2;\n                    uVar7 = uVar7 ^ uVar7 << 0x11;\n                    uVar7 = uVar2 >> 0x10 ^ uVar7 >> 7 ^ uVar2 ^ uVar7;\n                    *(iVar1 + 0xf4) = uVar7;\n                    iVar9 = (uStackX32 >> 3 & 1) * 0x80;\n                    iVar1 = in_stack_00000028 + iVar9;\n                    iVar10 = (uVar7 + uVar2 & 7) * 0x10;\n                    uVar3 = *(in_stack_00000028 + 8 + iVar9);\n                    uVar4 = *(in_stack_00000028 + 0xc + iVar9);\n                    *(iVar1 + iVar10) = *(in_stack_00000028 + iVar9);\n                    *(iVar1 + 8 + iVar10) = uVar3;\n                    *(iVar1 + 0xc + iVar10) = uVar4;\n                    *(in_stack_00000028 + iVar9) = uStackX32;\n                    *(in_stack_00000028 + 8 + iVar9) = iStackX24;\n                    *(in_stack_00000028 + 0xc + iVar9) = uStack100;\n                }\n                return uStack100;\n            }\n            arg1 = *(unaff_RBX + 0x58);\n            uVar6 = *(unaff_RBX + 0x60);\n            iVar5 = arg1_00;\n            if ((arg1_00 & 0xffffffff) <= arg1) {\n                uStack88 = *in_RAX;\n                uStack100 = 0xffffffff;\n                arg1_00 = uVar6 - (arg1_00 & 0xffffffff);\n                iStackX24 = iVar5;\n                uStackX32 = unaff_RDI;\n                in_stack_00000028 = unaff_RSI;\n                apuStack24[0] = in_RAX;\n                goto code_r0x00447bc1;\n            }\n            unaff_RDI = arg1;\n            in_RAX = fcn.004597e0(arg1);\n        }\n        ppuVar8 = ppuVar11 + 1;\n    } while( true );\n}\n",
        "token_count": 1371
    },
    "00448960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00448960(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    bool bVar7;\n    char cVar8;\n    ulong *in_RAX;\n    int64_t iVar9;\n    ulong arg1;\n    int64_t iVar10;\n    uint64_t *unaff_RBX;\n    uint64_t uVar11;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    uint8_t uVar13;\n    int64_t *piVar14;\n    int64_t *piVar15;\n    int64_t arg4;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*unaff_RBX < 9) {\n                uVar13 = *(unaff_RBX + 0x17) & 0x1f;\n                if ((uVar13 != 0xd) && (uVar13 != 0xe)) {\n                    if (*unaff_RBX != 0) {\n                        *(*0x20 + 0x10) = unaff_RBX;\n                        *(*0x20 + 8) = in_RAX;\n                        *(*0x20 + -0x10) = *in_RAX;\n                        *(*0x20 + -0x48) = in_RAX[1];\n                        *(*0x20 + -0x40) = in_RAX[2];\n                        arg1 = 0;\n                        *(*0x20 + -0x90) = 0x4489ee;\n                        cVar8 = fcn.00448c40(0);\n                        if (cVar8 == '\\0') {\n                            piVar14 = *(*0x20 + 8);\n                            piVar14[1] = *(*0x20 + -0x48);\n                            piVar14[2] = *(*0x20 + -0x40);\n                            if (*0x557ed0 == 0) {\n                                *piVar14 = *(*0x20 + -0x10);\n                            }\n                            else {\n                                *(*0x20 + -0x90) = 0x448a65;\n                                fcn.004593a0(arg1, *(*0x20 + -0x10), param_3, param_4);\n                            }\n                            piVar15 = *(*0x20 + 0x10);\n                            piVar14[4] = -*(piVar15 + 0x15) & (*(piVar15 + 0x15) + piVar14[4]) - 1;\n                            *(*0x20 + -0x38) = 0;\n                            *(*0x20 + -0x30) = in_XMM15;\n                            *(*0x20 + -0x20) = in_XMM15;\n                            *(*0x20 + -0x38) = 1;\n                            iVar9 = piVar14[3];\n                            *(*0x20 + -0x30) = iVar9;\n                            arg4 = piVar14[4];\n                            *(*0x20 + -0x28) = arg4;\n                            iVar10 = *piVar15;\n                            *(*0x20 + -0x18) = iVar10;\n                            iVar1 = *piVar14;\n                            iVar2 = piVar14[1];\n                            if (iVar2 == 0) {\n                                bVar7 = true;\n                            }\n                            else {\n                                if (*(iVar1 + -0x28 + iVar2 * 0x28) == 1) {\n                                    iVar3 = *(iVar1 + -8 + iVar2 * 0x28);\n                                    if ((iVar9 == *(iVar1 + -0x20 + iVar2 * 0x28) + iVar3) &&\n                                       (arg4 == *(iVar1 + -0x18 + iVar2 * 0x28) + iVar3)) {\n                                        *(iVar1 + -8 + iVar2 * 0x28) = iVar3 + iVar10;\n                                        uVar13 = 1;\n                                    }\n                                    else {\n                                        uVar13 = 0;\n                                    }\n                                }\n                                else {\n                                    uVar13 = 0;\n                                }\n                                bVar7 = uVar13 ^ 1;\n                            }\n                            if (bVar7) {\n                                iVar10 = piVar14[1];\n                                iVar1 = *piVar14;\n                                uVar11 = piVar14[2];\n                                iVar9 = iVar1;\n                                if (uVar11 < iVar10 + 1U) {\n                                    *(*0x20 + -0x90) = 0x448b47;\n                                    iVar9 = fcn.004425c0(iVar10);\n                                    piVar14 = *(*0x20 + 8);\n                                    piVar14[2] = iVar10;\n                                    if (*0x557ed0 == 0) {\n                                        *piVar14 = iVar9;\n                                    }\n                                    else {\n                                        *(*0x20 + -0x90) = 0x448b67;\n                                        iVar9 = fcn.00459280(iVar10, uVar11, piVar15, arg4);\n                                    }\n                                    piVar15 = *(*0x20 + 0x10);\n                                    iVar10 = iVar1;\n                                }\n                                piVar14[1] = iVar10 + 1;\n                                *(iVar9 + iVar10 * 0x28) = *(*0x20 + -0x38);\n                                iVar9 = iVar9 + iVar10 * 0x28;\n                                uVar4 = *(*0x20 + -0x2c);\n                                uVar5 = *(*0x20 + -0x28);\n                                uVar6 = *(*0x20 + -0x24);\n                                *(iVar9 + 8) = *(*0x20 + -0x30);\n                                *(iVar9 + 0xc) = uVar4;\n                                *(iVar9 + 0x10) = uVar5;\n                                *(iVar9 + 0x14) = uVar6;\n                                uVar4 = *(*0x20 + -0x1c);\n                                uVar5 = *(*0x20 + -0x18);\n                                uVar6 = *(*0x20 + -0x14);\n                                *(iVar9 + 0x18) = *(*0x20 + -0x20);\n                                *(iVar9 + 0x1c) = uVar4;\n                                *(iVar9 + 0x20) = uVar5;\n                                *(iVar9 + 0x24) = uVar6;\n                            }\n                            piVar14[4] = piVar14[4] + *piVar15;\n                        }\n                        else {\n                            piVar14 = *(*0x20 + 8);\n                            piVar15 = *(*0x20 + 0x10);\n                            uVar11 = *(piVar15 + 0x15);\n                            uVar11 = -uVar11 & (piVar14[5] + uVar11) - 1;\n                            piVar14[5] = uVar11;\n                            piVar14[5] = *piVar15 + uVar11;\n                        }\n                        piVar14[3] = piVar14[3] + 8;\n                        return;\n                    }\n                    in_RAX[4] = -*(unaff_RBX + 0x15) & (in_RAX[4] + *(unaff_RBX + 0x15)) - 1;\n                    return;\n                }\n                *(*0x20 + -0x90) = 0x448bfc;\n                fcn.004305a0();\n            }\n            unaff_RBX = 0x49e590;\n            *(*0x20 + -0x90) = 0x448c0f;\n            in_RAX = fcn.004305a0();\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = unaff_RBX;\n        *(puVar12 + -8) = 0x448c1f;\n        fcn.00457040();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 1907
    },
    "00448c40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00448c40(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    char cVar5;\n    int64_t *in_RAX;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uint8_t uVar10;\n    uint32_t uVar11;\n    ulong uVar12;\n    int64_t iVar13;\n    ulong *unaff_RBX;\n    uchar *puVar14;\n    uchar *unaff_RBP;\n    int64_t iVar15;\n    int64_t unaff_R14;\n    bool bVar16;\n    bool bVar17;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar14 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar14 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar11 = *(unaff_RBX + 0x17) & 0x1f;\n            uVar6 = uVar11;\n            uVar10 = uVar11;\n            if (uVar10 < 0xc) {\n                if (uVar10 < 7) {\n                    if (4 < uVar10 - 1) {\n                        if (uVar10 == 6) {\ncode_r0x00448e39:\n                            uVar12 = *unaff_RBX;\n                            iVar13 = in_RAX[6];\n                            bVar17 = SBORROW8(*0x4f0268, iVar13);\n                            iVar7 = *0x4f0268 - iVar13;\n                            bVar16 = *0x4f0268 == iVar13;\n                            if (iVar13 < *0x4f0268) {\n                                *(*0x20 + -0x58) = 0;\n                                *(*0x20 + -0x50) = in_XMM15;\n                                *(*0x20 + -0x40) = in_XMM15;\n                                *(*0x20 + -0x58) = 2;\n                                *(*0x20 + -0x50) = in_RAX[3] + arg1;\n                                *(*0x20 + -0x40) = in_RAX[6];\n                                *(*0x20 + -0x38) = uVar12;\n                                iVar8 = in_RAX[1];\n                                iVar1 = *in_RAX;\n                                iVar7 = iVar1;\n                                iVar15 = *0x4f0268;\n                                if (in_RAX[2] < iVar8 + 1U) {\n                                    *(*0x20 + -0x60) = iVar13;\n                                    *(*0x20 + -0x68) = *0x4f0268;\n                                    *(*0x20 + -0xb8) = 0x448ebb;\n                                    iVar7 = fcn.004425c0(iVar8);\n                                    in_RAX = *(*0x20 + 8);\n                                    in_RAX[2] = iVar8;\n                                    if (*0x557ed0 == 0) {\n                                        *in_RAX = iVar7;\n                                    }\n                                    else {\n                                        *(*0x20 + -0xb8) = 0x448eda;\n                                        iVar7 = fcn.00459280(iVar8, uVar12, iVar13, iVar15);\n                                    }\n                                    iVar13 = *(*0x20 + -0x60);\n                                    iVar15 = *(*0x20 + -0x68);\n                                    iVar8 = iVar1;\n                                }\n                                in_RAX[1] = iVar8 + 1;\n                                *(iVar7 + iVar8 * 0x28) = *(*0x20 + -0x58);\n                                iVar7 = iVar7 + iVar8 * 0x28;\n                                uVar2 = *(*0x20 + -0x4c);\n                                uVar3 = *(*0x20 + -0x48);\n                                uVar4 = *(*0x20 + -0x44);\n                                *(iVar7 + 8) = *(*0x20 + -0x50);\n                                *(iVar7 + 0xc) = uVar2;\n                                *(iVar7 + 0x10) = uVar3;\n                                *(iVar7 + 0x14) = uVar4;\n                                uVar2 = *(*0x20 + -0x3c);\n                                uVar3 = *(*0x20 + -0x38);\n                                uVar4 = *(*0x20 + -0x34);\n                                *(iVar7 + 0x18) = *(*0x20 + -0x40);\n                                *(iVar7 + 0x1c) = uVar2;\n                                *(iVar7 + 0x20) = uVar3;\n                                *(iVar7 + 0x24) = uVar4;\n                                in_RAX[6] = in_RAX[6] + 1;\n                                bVar17 = SBORROW8(iVar15, iVar13);\n                                iVar7 = iVar15 - iVar13;\n                                bVar16 = iVar15 == iVar13;\n                            }\n                            return in_RAX & 0xffffffffffffff00 | (!bVar16 && bVar17 == iVar7 < 0);\n                        }\ncode_r0x00448f35:\n                        *(*0x20 + -0xb8) = 0x448f3d;\n                        fcn.00450e40();\n                        *(*0x20 + -0xb8) = 0x448f65;\n                        fcn.00445fe0(0x16, uVar6, 0x48910d, 0x37);\n                        *(*0x20 + -0xb8) = 0x448f6a;\n                        fcn.00408d60();\n                        *(*0x20 + -0xb8) = 0x448f79;\n                        fcn.004305a0();\n                        goto code_r0x00448f79;\n                    }\n                }\n                else if (10 < uVar10) {\n                    if (uVar10 == 0xb) goto code_r0x00448e39;\n                    goto code_r0x00448f35;\n                }\ncode_r0x00448d17:\n                uVar12 = *unaff_RBX;\n                iVar13 = in_RAX[6];\n                bVar17 = SBORROW8(*0x4f0268, iVar13);\n                iVar7 = *0x4f0268 - iVar13;\n                bVar16 = *0x4f0268 == iVar13;\n                if (iVar13 < *0x4f0268) {\n                    *(*0x20 + -0x30) = 0;\n                    *(*0x20 + -0x28) = in_XMM15;\n                    *(*0x20 + -0x18) = in_XMM15;\n                    *(*0x20 + -0x30) = 2;\n                    *(*0x20 + -0x28) = in_RAX[3] + arg1;\n                    *(*0x20 + -0x18) = in_RAX[6];\n                    *(*0x20 + -0x10) = uVar12;\n                    iVar8 = in_RAX[1];\n                    iVar1 = *in_RAX;\n                    iVar7 = iVar1;\n                    iVar15 = *0x4f0268;\n                    if (in_RAX[2] < iVar8 + 1U) {\n                        *(*0x20 + -0x60) = iVar13;\n                        *(*0x20 + -0x68) = *0x4f0268;\n                        *(*0x20 + -0xb8) = 0x448dab;\n                        iVar7 = fcn.004425c0(iVar8);\n                        in_RAX = *(*0x20 + 8);\n                        in_RAX[2] = iVar8;\n                        if (*0x557ed0 == 0) {\n                            *in_RAX = iVar7;\n                        }\n                        else {\n                            *(*0x20 + -0xb8) = 0x448dcc;\n                            iVar7 = fcn.00459280(iVar8, uVar12, iVar13, iVar15);\n                        }\n                        iVar13 = *(*0x20 + -0x60);\n                        iVar15 = *(*0x20 + -0x68);\n                        iVar8 = iVar1;\n                    }\n                    in_RAX[1] = iVar8 + 1;\n                    *(iVar7 + iVar8 * 0x28) = *(*0x20 + -0x30);\n                    iVar7 = iVar7 + iVar8 * 0x28;\n                    uVar2 = *(*0x20 + -0x24);\n                    uVar3 = *(*0x20 + -0x20);\n                    uVar4 = *(*0x20 + -0x1c);\n                    *(iVar7 + 8) = *(*0x20 + -0x28);\n                    *(iVar7 + 0xc) = uVar2;\n                    *(iVar7 + 0x10) = uVar3;\n                    *(iVar7 + 0x14) = uVar4;\n                    uVar2 = *(*0x20 + -0x14);\n                    uVar3 = *(*0x20 + -0x10);\n                    uVar4 = *(*0x20 + -0xc);\n                    *(iVar7 + 0x18) = *(*0x20 + -0x18);\n                    *(iVar7 + 0x1c) = uVar2;\n                    *(iVar7 + 0x20) = uVar3;\n                    *(iVar7 + 0x24) = uVar4;\n                    in_RAX[6] = in_RAX[6] + 1;\n                    bVar17 = SBORROW8(iVar15, iVar13);\n                    iVar7 = iVar15 - iVar13;\n                    bVar16 = iVar15 == iVar13;\n                }\n                return in_RAX & 0xffffffffffffff00 | (!bVar16 && bVar17 == iVar7 < 0);\n            }\n            if (uVar10 < 0x12) {\n                if (uVar10 != 0xc) {\n                    if ((uVar10 == 0x11) && (unaff_RBX[8] == 1)) {\n                        *(*0x20 + -0xb8) = 0x448cdd;\n                        uVar6 = fcn.00448c40(arg1);\n                        return uVar6;\n                    }\n                    goto code_r0x00448f35;\n                }\n                goto code_r0x00448d17;\n            }\n            if (uVar10 == 0x16) goto code_r0x00448d17;\n            if (uVar10 != 0x19) {\n                if (uVar10 != 0x1a) goto code_r0x00448f35;\n                goto code_r0x00448d17;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            iVar13 = unaff_RBX[8];\n            *(*0x20 + -0x60) = iVar13;\n            uVar6 = 0;\n            uVar9 = arg1;\n            while( true ) {\n                if (iVar13 <= uVar6) {\n                    return 1;\n                }\n                iVar13 = unaff_RBX[7];\n                arg1 = unaff_RBX[8];\n                if (arg1 <= uVar6) break;\n                *(*0x20 + -0x70) = uVar6;\n                uVar6 = *(iVar13 + 0x10 + uVar6 * 0x18);\n                *(*0x20 + -0xb8) = 0x448fd3;\n                cVar5 = fcn.00448c40((uVar6 >> 1) + uVar9);\n                if (cVar5 == '\\0') {\n                    return 0;\n                }\ncode_r0x00448f79:\n                uVar6 = *(*0x20 + -0x70) + 1;\n                iVar13 = *(*0x20 + -0x60);\n                unaff_RBX = *(*0x20 + 0x10);\n                uVar9 = *(*0x20 + 0x18);\n            }\n            *(*0x20 + -0xb8) = 0x449009;\n            in_RAX = fcn.00459720(arg1);\n        }\n        *(puVar14 + 8) = in_RAX;\n        *(puVar14 + 0x10) = unaff_RBX;\n        *(puVar14 + 0x18) = arg1;\n        *(puVar14 + -8) = 0x44901e;\n        fcn.00457040();\n        in_RAX = *(puVar14 + 8);\n        unaff_RBX = *(puVar14 + 0x10);\n        arg1 = *(puVar14 + 0x18);\n        *0x20 = puVar14;\n    } while( true );\n}\n",
        "token_count": 2914
    },
    "00449300": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00449300(int64_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong arg1;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t *unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t arg3;\n    int64_t arg3_00;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*0x557cb8 == 0) {\n                *(*0x20 + -0x58) = 0x449330;\n                fcn.00429f20();\n                in_RAX = *(*0x20 + 8);\n                unaff_RBX = *(*0x20 + 0x10);\n            }\n            if (*unaff_RBX == 0) {\n                *unaff_RBX = in_RAX;\n                iVar4 = *(in_RAX + 0x26e8);\n                arg3_00 = *(in_RAX + 0x26e0);\n                arg4 = *(in_RAX + 0x26f0);\n                if (arg4 < iVar4 + 1U) {\n                    *(*0x20 + -0x10) = iVar4;\n                    *(*0x20 + -0x58) = 0x44938c;\n                    arg3 = arg3_00;\n                    iVar3 = fcn.004425c0(iVar4);\n                    in_RAX = *(*0x20 + 8);\n                    *(in_RAX + 0x26f0) = iVar4;\n                    if (*0x557ed0 == 0) {\n                        *(in_RAX + 0x26e0) = iVar3;\n                    }\n                    else {\n                        *(*0x20 + -0x58) = 0x4493b7;\n                        iVar3 = fcn.00459280(iVar4, in_RAX, arg3, arg4);\n                    }\n                    unaff_RBX = *(*0x20 + 0x10);\n                    param_1 = iVar4;\n                    iVar4 = arg3_00;\n                    arg3_00 = iVar3;\n                }\n                *(in_RAX + 0x26e8) = iVar4 + 1;\n                if (*0x557ed0 == 0) {\n                    *(arg3_00 + iVar4 * 8) = unaff_RBX;\n                }\n                else {\n                    *(*0x20 + -0x58) = 0x4493ed;\n                    fcn.004593c0(param_1, in_RAX, arg3_00, arg4);\n                }\n                arg1 = *(in_RAX + 0x26f0);\n                *(*0x20 + -0x58) = 0x44940d;\n                fcn.0044b0c0(arg1, in_RAX, arg3_00, arg4);\n                iVar4 = *(*0x20 + 8);\n                param_1 = *(iVar4 + 0x26e8);\n                if (param_1 != 0) {\n                    if (**(iVar4 + 0x26e0) == *(*0x20 + 0x10)) {\n                        *(iVar4 + 0x1668) = *(*(*0x20 + 0x10) + 8);\n                    }\n                    LOCK();\n                    piVar1 = iVar4 + 0x26f8;\n                    iVar2 = *piVar1;\n                    *piVar1 = *piVar1 + 1;\n                    return iVar2;\n                }\n                *(*0x20 + -0x58) = 0x449458;\n                fcn.00459720(0);\n            }\n            unaff_RBX = 0x22;\n            *(*0x20 + -0x58) = 0x449469;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x449479;\n        fcn.00457040();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1093
    },
    "004494a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.004494a0(void)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t *in_RAX;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    do {\n        while( true ) {\n            while (uVar2 = *(in_RAX + 8),  5 < uVar2) {\n                if (uVar2 < 8) {\n                    if (uVar2 == 6) {\n                        fcn.00456f00();\n                        unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    }\n                    else {\n                        piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                        *piVar1 = *piVar1 + 1;\n                        iVar4 = *(unaff_R14 + 0x30);\n                        LOCK();\n                        if (uVar2 == *(in_RAX + 8)) {\n                            *(in_RAX + 8) = 6;\n                            iVar5 = *in_RAX;\n                            LOCK();\n                            if (*(in_RAX + 8) == 6) {\n                                *(in_RAX + 8) = 3;\n                            }\n                            else {\n                                fcn.0044b460();\n                            }\n                            iVar3 = *(iVar4 + 0xd8);\n                            *(iVar4 + 0xd8) = iVar3 + -1;\n                            if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                            }\n                            LOCK();\n                            *(iVar5 + 0x26fc) = *(iVar5 + 0x26fc) + 1;\n                            return 1;\n                        }\n                        iVar3 = *(iVar4 + 0xd8);\n                        *(iVar4 + 0xd8) = iVar3 + -1;\n                        if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                    }\n                }\n                else {\n                    if (uVar2 == 8) goto code_r0x00449590;\n                    if (uVar2 == 9) goto code_r0x004495f8;\n                    fcn.0044b460();\n                }\n            }\n            if (1 < uVar2) break;\n            if (uVar2 == 0) {\n                return 0;\n            }\ncode_r0x00449590:\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            iVar4 = *(unaff_R14 + 0x30);\n            LOCK();\n            if (uVar2 == *(in_RAX + 8)) {\n                *(in_RAX + 8) = 6;\n                iVar5 = *in_RAX;\n                LOCK();\n                if (*(in_RAX + 8) == 6) {\n                    *(in_RAX + 8) = 3;\n                }\n                else {\n                    fcn.0044b460();\n                }\n                iVar3 = *(iVar4 + 0xd8);\n                *(iVar4 + 0xd8) = iVar3 + -1;\n                if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                LOCK();\n                *(iVar5 + 0x26fc) = *(iVar5 + 0x26fc) + 1;\n                return 1;\n            }\n            iVar3 = *(iVar4 + 0xd8);\n            *(iVar4 + 0xd8) = iVar3 + -1;\n            if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n        }\n        if (uVar2 != 2) {\n            return 0;\n        }\ncode_r0x004495f8:\n        fcn.00456f00();\n        unaff_R14 = **(in_GS_OFFSET + 0x28);\n    } while( true );\n}\n",
        "token_count": 1028
    },
    "00449760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00449760(ulong noname_0, uint64_t arg2)\n\n{\n    int64_t *piVar1;\n    ulong arg1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t arg3;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar3 = *(in_RAX + 0x26e8);\n            if (unaff_RBX < uVar3) {\n                piVar1 = *(*(in_RAX + 0x26e0) + unaff_RBX * 8);\n                if (in_RAX == *piVar1) {\n                    *piVar1 = 0;\n                    uVar3 = *(in_RAX + 0x26e8);\n                    arg3 = uVar3 - 1;\n                    if (unaff_RBX == arg3) {\ncode_r0x004497f6:\n                        arg4 = *(in_RAX + 0x26e8);\n                        if (arg3 < arg4) {\n                            if (*0x557ed0 == 0) {\n                                *(*(in_RAX + 0x26e0) + -8 + uVar3 * 8) = 0;\n                            }\n                            else {\n                                *(*0x20 + -0x38) = 0x449830;\n                                in_RAX = fcn.004593e0(uVar3, arg2, arg3, arg4);\n                            }\n                            arg2 = *(in_RAX + 0x26f0);\n                            if (arg3 <= arg2) {\n                                *(in_RAX + 0x26e8) = arg3;\n                                uVar3 = unaff_RBX;\n                                if (unaff_RBX != arg3) {\n                                    *(*0x20 + 8) = in_RAX;\n                                    *(*0x20 + 0x10) = unaff_RBX;\n                                    uVar2 = *(in_RAX + 0x26e0);\n                                    arg1 = *(in_RAX + 0x26f0);\n                                    *(*0x20 + -0x38) = 0x449885;\n                                    uVar2 = fcn.0044b0c0(arg1, uVar2, arg3, arg4);\n                                    *(*0x20 + -0x10) = uVar2;\n                                    uVar2 = *(*(*0x20 + 8) + 0x26f0);\n                                    *(*0x20 + -0x38) = 0x4498b1;\n                                    fcn.0044b240(uVar2);\n                                    in_RAX = *(*0x20 + 8);\n                                    unaff_RBX = *(*0x20 + 0x10);\n                                    uVar3 = *(*0x20 + -0x10);\n                                }\n                                if (unaff_RBX == 0) {\n                                    if (*(in_RAX + 0x26e8) == 0) {\n                                        *(in_RAX + 0x1668) = 0;\n                                    }\n                                    else {\n                                        *(in_RAX + 0x1668) = *(**(in_RAX + 0x26e0) + 8);\n                                    }\n                                }\n                                LOCK();\n                                *(in_RAX + 0x26f8) = *(in_RAX + 0x26f8) + -1;\n                                return uVar3;\n                            }\n                            *(*0x20 + -0x38) = 0x449912;\n                            fcn.004597a0(arg3, arg2);\n                        }\n                        uVar3 = arg4;\n                        *(*0x20 + -0x38) = 0x44991d;\n                        fcn.00459720(uVar3);\ncode_r0x0044991d:\n                        *(*0x20 + -0x38) = 0x449925;\n                        fcn.00459720(uVar3);\n                    }\n                    else if (arg3 < uVar3) {\n                        if (unaff_RBX < uVar3) {\n                            if (*0x557ed0 == 0) {\n                                *(*(in_RAX + 0x26e0) + unaff_RBX * 8) = *(*(in_RAX + 0x26e0) + -8 + uVar3 * 8);\n                            }\n                            else {\n                                *(*0x20 + -0x38) = 0x4497f6;\n                                in_RAX = fcn.00459420(uVar3, arg2, arg3);\n                            }\n                            goto code_r0x004497f6;\n                        }\n                        goto code_r0x0044991d;\n                    }\n                    *(*0x20 + -0x38) = 0x44992d;\n                    fcn.00459720(uVar3);\n                }\n                unaff_RBX = 0x13;\n                *(*0x20 + -0x38) = 0x44993e;\n                fcn.00430d40();\n            }\n            *(*0x20 + -0x38) = 0x449946;\n            in_RAX = fcn.00459720(uVar3);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x449956;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1345
    },
    "00449980": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00449980(ulong noname_0, uint64_t arg2)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t arg3;\n    int64_t in_RAX;\n    uint64_t arg1;\n    uint64_t arg4;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            arg4 = *(in_RAX + 0x26e8);\n            if (arg4 != 0) {\n                if (in_RAX == ***(in_RAX + 0x26e0)) {\n                    ***(in_RAX + 0x26e0) = 0;\n                    iVar1 = *(in_RAX + 0x26e8);\n                    arg1 = iVar1 - 1;\n                    if (0 < arg1) {\n                        uVar2 = (*(in_RAX + 0x26e0))[iVar1 + -1];\n                        if (*0x557ed0 == 0) {\n                            **(in_RAX + 0x26e0) = uVar2;\n                        }\n                        else {\n                            *(*0x20 + -0x30) = 0x4499ff;\n                            in_RAX = fcn.00459400(arg1, arg2, uVar2, in_R9);\n                        }\n                    }\n                    arg3 = *(in_RAX + 0x26e0);\n                    arg4 = *(in_RAX + 0x26e8);\n                    if (arg1 < arg4) {\n                        if (*0x557ed0 == 0) {\n                            *(arg3 + -8 + iVar1 * 8) = 0;\n                        }\n                        else {\n                            *(*0x20 + -0x30) = 0x449a39;\n                            in_RAX = fcn.004593e0(arg1, arg2, arg3, arg4);\n                        }\n                        arg2 = *(in_RAX + 0x26f0);\n                        if (arg1 <= arg2) {\n                            *(in_RAX + 0x26e8) = arg1;\n                            if (0 < arg1) {\n                                *(*0x20 + 8) = in_RAX;\n                                uVar2 = *(in_RAX + 0x26f0);\n                                *(*0x20 + -0x30) = 0x449a74;\n                                fcn.0044b240(uVar2);\n                                in_RAX = *(*0x20 + 8);\n                            }\n                            if (*(in_RAX + 0x26e8) == 0) {\n                                *(in_RAX + 0x1668) = 0;\n                            }\n                            else {\n                                *(in_RAX + 0x1668) = *(**(in_RAX + 0x26e0) + 8);\n                            }\n                            LOCK();\n                            *(in_RAX + 0x26f8) = *(in_RAX + 0x26f8) + -1;\n                            return;\n                        }\n                        *(*0x20 + -0x30) = 0x449ac5;\n                        fcn.004597a0(arg1, arg2);\n                    }\n                    *(*0x20 + -0x30) = 0x449ad0;\n                    in_R9 = arg4;\n                    fcn.00459720(arg4);\n                }\n                *(*0x20 + -0x30) = 0x449ae5;\n                fcn.00430d40();\n            }\n            *(*0x20 + -0x30) = 0x449aec;\n            in_RAX = fcn.00459720(arg4);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x449af7;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 967
    },
    "0044a9a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044a9a0(int64_t arg1)\n\n{\n    code **arg2;\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045b6e0();\n    }\n    arg2 = *(unaff_RBX + 0x18);\n    uVar1 = *(unaff_RBX + 0x30);\n    iVar2 = *(unaff_RBX + 0x10);\n    if (iVar2 < 1) {\n        fcn.00449980(arg1, arg2);\n        LOCK();\n        if (*(unaff_RBX + 0x40) == 2) {\n            *(unaff_RBX + 0x40) = 0;\n        }\n        else {\n            fcn.0044b460();\n        }\n    }\n    else {\n        iVar2 = iVar2 * ((arg1 - *(unaff_RBX + 8)) / iVar2 + 1) + *(unaff_RBX + 8);\n        *(unaff_RBX + 8) = iVar2;\n        if (iVar2 < 0) {\n            *(unaff_RBX + 8) = 0x7fffffffffffffff;\n        }\n        fcn.0044b240(*(in_RAX + 0x26f0));\n        LOCK();\n        if (*(unaff_RBX + 0x40) == 2) {\n            *(unaff_RBX + 0x40) = 1;\n        }\n        else {\n            fcn.0044b460();\n        }\n        if (*(in_RAX + 0x26e8) == 0) {\n            *(in_RAX + 0x1668) = 0;\n        }\n        else {\n            *(in_RAX + 0x1668) = *(**(in_RAX + 0x26e0) + 8);\n        }\n    }\n    fcn.00409520();\n    (**arg2)(uVar1);\n    fcn.00409300();\n    return;\n}\n",
        "token_count": 497
    },
    "0044b0c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0044b0c0(uint64_t arg1, ulong noname_1, uint64_t arg3, int64_t arg4)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    bool bVar4;\n    bool bVar5;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            bVar4 = unaff_RBX < unaff_RDI;\n            bVar5 = unaff_RBX == unaff_RDI;\n            if (unaff_RBX <= unaff_RDI) {\n                *(*0x20 + -0x28) = 0x44b0f1;\n                fcn.0044b460();\n                arg1 = *(*0x20 + 0x10);\n                bVar4 = arg1 < *(*0x20 + 0x20);\n                bVar5 = arg1 == *(*0x20 + 0x20);\n                in_RAX = *(*0x20 + 8);\n                unaff_RDI = *(*0x20 + 0x20);\n                unaff_RBX = arg1;\n            }\n            if (!bVar4 && !bVar5) {\n                iVar2 = *(*(in_RAX + unaff_RDI * 8) + 8);\n                if (iVar2 < 1) {\n                    *(*0x20 + -0x10) = iVar2;\n                    *(*0x20 + -0x28) = 0x44b128;\n                    fcn.0044b460();\n                    in_RAX = *(*0x20 + 8);\n                    iVar2 = *(*0x20 + -0x10);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RDI = *(*0x20 + 0x20);\n                }\n                iVar1 = *(in_RAX + unaff_RDI * 8);\n                while (0 < unaff_RDI) {\n                    arg3 = unaff_RDI - 1 >> 2;\n                    if (unaff_RBX <= arg3) goto code_r0x0044b1da;\n                    arg4 = *(in_RAX + arg3 * 8);\n                    if (*(arg4 + 8) == iVar2 || *(arg4 + 8) < iVar2) break;\n                    if (unaff_RBX <= unaff_RDI) goto code_r0x0044b1cf;\n                    if (*0x557ed0 == 0) {\n                        *(in_RAX + unaff_RDI * 8) = arg4;\n                        unaff_RDI = arg3;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x44b186;\n                        unaff_RDI = arg3;\n                        in_RAX = fcn.00459420(arg1, iVar2, arg3);\n                        arg3 = unaff_RDI;\n                    }\n                }\n                if (unaff_RDI < unaff_RBX) {\n                    iVar2 = *(in_RAX + unaff_RDI * 8);\n                    if (iVar2 != iVar1) {\n                        if (*0x557ed0 == 0) {\n                            *(in_RAX + unaff_RDI * 8) = iVar1;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x44b1b4;\n                            unaff_RDI = fcn.004593e0(iVar2, in_RAX + unaff_RDI * 8, arg3, arg4);\n                        }\n                    }\n                    return unaff_RDI;\n                }\n                *(*0x20 + -0x28) = 0x44b1cf;\n                fcn.00459720(unaff_RBX);\ncode_r0x0044b1cf:\n                *(*0x20 + -0x28) = 0x44b1da;\n                fcn.00459720(unaff_RBX);\ncode_r0x0044b1da:\n                *(*0x20 + -0x28) = 0x44b1e5;\n                fcn.00459720(unaff_RBX);\n            }\n            *(*0x20 + -0x28) = 0x44b1f0;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.00459720(unaff_RBX);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + -8) = 0x44b20a;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1283
    },
    "0044b240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044b240(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    uint64_t arg3;\n    uint64_t arg4;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int64_t unaff_R14;\n    bool bVar8;\n    bool bVar9;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            bVar8 = unaff_RBX < unaff_RDI;\n            bVar9 = unaff_RBX == unaff_RDI;\n            if (unaff_RBX <= unaff_RDI) {\n                *(*0x20 + -0x28) = 0x44b271;\n                fcn.0044b460();\n                arg1 = *(*0x20 + 0x10);\n                bVar8 = arg1 < *(*0x20 + 0x20);\n                bVar9 = arg1 == *(*0x20 + 0x20);\n                in_RAX = *(*0x20 + 8);\n                unaff_RDI = *(*0x20 + 0x20);\n                unaff_RBX = arg1;\n            }\n            if (!bVar8 && !bVar9) {\n                arg2 = *(*(in_RAX + unaff_RDI * 8) + 8);\n                if (arg2 < 1) {\n                    *(*0x20 + -0x10) = arg2;\n                    *(*0x20 + -0x28) = 0x44b2a8;\n                    fcn.0044b460();\n                    in_RAX = *(*0x20 + 8);\n                    arg2 = *(*0x20 + -0x10);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RDI = *(*0x20 + 0x20);\n                }\n                iVar1 = *(in_RAX + unaff_RDI * 8);\n                arg3 = unaff_RDI;\n                while( true ) {\n                    unaff_RDI = arg3 * 4;\n                    arg4 = unaff_RDI + 1;\n                    if (unaff_RBX <= arg4) break;\n                    if (unaff_RBX <= arg4) goto code_r0x0044b407;\n                    iVar4 = *(*(in_RAX + 8 + arg3 * 0x20) + 8);\n                    uVar5 = unaff_RDI + 2;\n                    if (uVar5 < unaff_RBX) {\n                        if (unaff_RBX <= uVar5) goto code_r0x0044b3fc;\n                        iVar7 = *(*(in_RAX + 0x10 + arg3 * 0x20) + 8);\n                        if (iVar7 < iVar4) {\n                            arg4 = uVar5;\n                            iVar4 = iVar7;\n                        }\n                    }\n                    uVar5 = unaff_RDI + 3;\n                    uVar6 = arg4;\n                    iVar7 = iVar4;\n                    if (uVar5 < unaff_RBX) {\n                        if (unaff_RBX <= uVar5) goto code_r0x0044b3f1;\n                        iVar7 = *(*(in_RAX + 0x18 + arg3 * 0x20) + 8);\n                        uVar6 = unaff_RDI + 4;\n                        if (uVar6 < unaff_RBX) {\n                            if (unaff_RBX <= uVar6) goto code_r0x0044b3e6;\n                            iVar2 = *(*(in_RAX + 0x20 + arg3 * 0x20) + 8);\n                            if (iVar2 < iVar7) {\n                                uVar5 = uVar6;\n                                iVar7 = iVar2;\n                            }\n                        }\n                        uVar6 = uVar5;\n                        if (iVar4 <= iVar7) {\n                            uVar6 = arg4;\n                            iVar7 = iVar4;\n                        }\n                    }\n                    if (arg2 <= iVar7) break;\n                    if (unaff_RBX <= uVar6) goto code_r0x0044b3db;\n                    if (unaff_RBX <= arg3) goto code_r0x0044b3d0;\n                    if (*0x557ed0 == 0) {\n                        *(in_RAX + arg3 * 8) = *(in_RAX + uVar6 * 8);\n                        arg3 = uVar6;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x44b390;\n                        in_RAX = fcn.00459420(arg1, arg2, arg3);\n                        arg3 = uVar6;\n                    }\n                }\n                if (arg3 < unaff_RBX) {\n                    iVar4 = *(in_RAX + arg3 * 8);\n                    if (iVar4 != iVar1) {\n                        if (*0x557ed0 == 0) {\n                            *(in_RAX + arg3 * 8) = iVar1;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x44b3bb;\n                            fcn.004593e0(iVar4, arg2, arg3, arg4);\n                        }\n                    }\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x44b3d0;\n                fcn.00459720(unaff_RBX);\ncode_r0x0044b3d0:\n                *(*0x20 + -0x28) = 0x44b3db;\n                fcn.00459720(unaff_RBX);\ncode_r0x0044b3db:\n                *(*0x20 + -0x28) = 0x44b3e6;\n                fcn.00459720(unaff_RBX);\ncode_r0x0044b3e6:\n                *(*0x20 + -0x28) = 0x44b3f1;\n                fcn.00459720(unaff_RBX);\ncode_r0x0044b3f1:\n                *(*0x20 + -0x28) = 0x44b3fc;\n                fcn.00459720(unaff_RBX);\ncode_r0x0044b3fc:\n                *(*0x20 + -0x28) = 0x44b407;\n                fcn.00459720(unaff_RBX);\ncode_r0x0044b407:\n                *(*0x20 + -0x28) = 0x44b412;\n                fcn.00459720(unaff_RBX);\n            }\n            *(*0x20 + -0x28) = 0x44b41d;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.00459720(unaff_RBX);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + -8) = 0x44b437;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1835
    },
    "0044b500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0044b500(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if ((*0x509ec8 != 0) && ((*0x509eb8 != 0 || (*0x509e71 != '\\0')))) {\n        fcn.00409300();\n        iVar1 = *0x509ec8;\n        if ((*0x509ec8 != 0) && ((*0x509eb8 != 0 || (*0x509e71 != '\\0')))) {\n            *0x509ec8 = 0;\n            fcn.00409520();\n            return iVar1;\n        }\n        fcn.00409520();\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 213
    },
    "0044b5c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044b5c0(void)\n\n{\n    ulong *puVar1;\n    ulong *puVar2;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    puVar1 = *(in_RAX + 0x1630);\n    *(in_RAX + 0x1630) = 0;\n    if (puVar1 == NULL) {\n        return;\n    }\n    fcn.00409300();\n    *puVar1 = 0;\n    puVar2 = puVar1;\n    if (*0x509eb8 != NULL) {\n        **0x509ec0 = puVar1;\n        puVar2 = *0x509eb8;\n    }\n    *0x509eb8 = puVar2;\n    *0x509ec0 = puVar1;\n    fcn.00409520();\n    return;\n}\n",
        "token_count": 239
    },
    "0044b680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044b680(ulong arg1)\n\n{\n    int64_t iVar1;\n    uint64_t noname_1;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    iVar1 = fcn.0044bd20();\n    if ((*0x509e70 == '\\0') && (*(iVar1 + 0x270) == '\\0')) {\n        fcn.0044bda0();\n        return;\n    }\n    noname_1 = unaff_RBX;\n    if ((0 < unaff_RBX) && (*(iVar1 + 0x90) == unaff_R14)) {\n        noname_1 = unaff_RBX + 1;\n    }\n    fcn.0044b780(unaff_RBX & 0xffffffff, noname_1, noname_1, arg1);\n    fcn.0044bda0();\n    return;\n}\n",
        "token_count": 248
    },
    "0044bc00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0044bc00(uint64_t arg1)\n\n{\n    uint uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            iVar2 = *(in_RAX + 0x90);\n            *(*0x20 + -0x10) = iVar2;\n            if (unaff_R14 == iVar2) {\n                *(*0x20 + -0x40) = 0x44bc76;\n                arg1 = fcn.0044fd80(arg1);\n                unaff_RBX = *(*0x20 + 0x10);\n                unaff_RDI = *(*0x20 + 0x20);\n                iVar2 = *(*0x20 + -0x10);\n            }\n            else if (iVar2 == 0) {\n                arg1 = 0;\n            }\n            else {\n                *(*0x20 + -0x40) = 0x44bc59;\n                arg1 = fcn.0044ff00(unaff_RBX, unaff_RBX);\n                unaff_RBX = *(*0x20 + 0x10);\n                unaff_RDI = *(*0x20 + 0x20);\n                iVar2 = *(*0x20 + -0x10);\n            }\n            unaff_RSI = arg1 - 1;\n            if (0 < arg1) {\n                arg1 = unaff_RSI;\n            }\n            if ((0 < arg1) && (*(iVar2 + 0x98) == 1)) {\n                arg1 = arg1 - 1;\n            }\n            if (arg1 <= unaff_RDI) {\n                *(*0x20 + -0x40) = 0x44bcb6;\n                uVar1 = fcn.0044c0a0(arg1);\n                return uVar1;\n            }\n            *(*0x20 + -0x40) = 0x44bcca;\n            in_RAX = fcn.004597a0(arg1, unaff_RDI);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + 0x28) = unaff_RSI;\n        *(puVar3 + -8) = 0x44bce9;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        unaff_RSI = *(puVar3 + 0x28);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 810
    },
    "0044bda0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044bda0(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (in_EAX == -1) {\n        fcn.00409520();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0xd8);\n    *(*(unaff_R14 + 0x30) + 0xd8) = iVar1 + -1;\n    if ((iVar1 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 204
    },
    "0044be20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0044be20(void)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong *in_RAX;\n    ulong *puVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint unaff_EBX;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x509e68 == 0) {\n                uVar4 = 1;\n            }\n            else {\n                uVar4 = *0x509e68 & 0xffffffffffffff00 | *(*(unaff_R14 + 0x30) + 0x90) != *0x509e68;\n            }\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x19) = uVar4;\n            if (uVar4 != '\\0') {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x38) = 0x44be79;\n                fcn.00409300();\n                in_RAX = *(*0x20 + 8);\n                uVar4 = *(*0x20 + -0x19);\n            }\n            puVar3 = *0x509eb8;\n            puVar2 = *0x509ec0;\n            if ((in_RAX != NULL) && (*in_RAX = 0,  puVar3 = in_RAX,  puVar2 = in_RAX,  *0x509eb8 != NULL)) {\n                **0x509ec0 = in_RAX;\n                puVar3 = *0x509eb8;\n                puVar2 = in_RAX;\n            }\n            *0x509ec0 = puVar2;\n            *0x509eb8 = puVar3;\n            if (*0x509eb0 == NULL) {\n                *(*0x20 + -0x38) = 0x44bee8;\n                puVar3 = fcn.004131a0();\n                if (puVar3 != NULL) goto code_r0x0044bef1;\n            }\n            else {\n                puVar3 = *0x509eb0;\n                *0x509eb0 = **0x509eb0;\ncode_r0x0044bef1:\n                *(*0x20 + -0x18) = puVar3;\n                *(*0x20 + -0x10) = puVar3;\n                *puVar3 = 0;\n                puVar3[2] = 0;\n                *(*0x20 + -0x38) = 0x44bf0d;\n                fcn.00459140(uVar4, 0);\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                uVar4 = *(*0x20 + -0x30) >> 6;\n                iVar1 = *(*0x20 + -0x10);\n                *(iVar1 + 8) = uVar4;\n                if (*(iVar1 + 0x10) < 0xfbe8) {\n                    *(iVar1 + 0x418 + *(iVar1 + 0x10)) = 0x41;\n                    uVar5 = *(iVar1 + 0x10) + 1;\n                    *(iVar1 + 0x10) = uVar5;\n                    for (uVar6 = *(*0x20 + 0x10); 0x7f < uVar6; uVar6 = uVar6 >> 7) {\n                        if (0xfbe7 < uVar5) goto code_r0x0044c052;\n                        *(iVar1 + 0x418 + uVar5) = uVar6 | 0x80;\n                        uVar5 = uVar5 + 1;\n                    }\n                    if (uVar5 < 0xfbe8) {\n                        *(iVar1 + 0x418 + uVar5) = uVar6;\n                        uVar5 = uVar5 + 1;\n                        *(iVar1 + 0x10) = uVar5;\n                        for (; 0x7f < uVar4; uVar4 = uVar4 >> 7) {\n                            if (0xfbe7 < uVar5) goto code_r0x0044c035;\n                            *(iVar1 + 0x418 + uVar5) = uVar4 | 0x80;\n                            uVar5 = uVar5 + 1;\n                        }\n                        if (uVar5 < 0xfbe8) {\n                            *(iVar1 + 0x418 + uVar5) = uVar4;\n                            *(iVar1 + 0x10) = uVar5 + 1;\n                            if (*(*0x20 + -0x19) != '\\0') {\n                                *(*0x20 + -0x38) = 0x44c019;\n                                fcn.00409520();\n                            }\n                            return *(*0x20 + -0x18);\n                        }\n                        *(*0x20 + -0x38) = 0x44c035;\n                        fcn.00459720(0xfbe8);\ncode_r0x0044c035:\n                        *(*0x20 + -0x38) = 0x44c045;\n                        fcn.00459720(0xfbe8);\n                    }\n                    *(*0x20 + -0x38) = 0x44c052;\n                    fcn.00459720(0xfbe8);\ncode_r0x0044c052:\n                    *(*0x20 + -0x38) = 0x44c05f;\n                    fcn.00459720(0xfbe8);\n                }\n                *(*0x20 + -0x38) = 0x44c06c;\n                fcn.00459720(0xfbe8);\n            }\n            unaff_EBX = 0x14;\n            *(*0x20 + -0x38) = 0x44c07d;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_EBX;\n        *(puVar7 + -8) = 0x44c08c;\n        fcn.00457040();\n        in_RAX = *(puVar7 + 8);\n        unaff_EBX = *(puVar7 + 0x10);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1537
    },
    "0044c380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0044c380(void)\n\n{\n    int64_t **in_RAX;\n    int64_t *piVar1;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = unaff_RBX + 7U & 0xfffffffffffffff8;\n            if ((*in_RAX == NULL) || (0xfff8 < in_RAX[1] + uVar2)) {\n                if (uVar2 < 0xfff9) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x28) = 0x44c3e8;\n                    piVar1 = fcn.004131a0();\n                    if (piVar1 != NULL) {\n                        in_RAX = *(*0x20 + 8);\n                        *piVar1 = *in_RAX;\n                        *in_RAX = piVar1;\n                        in_RAX[1] = NULL;\n                        uVar2 = *(*0x20 + -0x10);\n                        goto code_r0x0044c40c;\n                    }\n                    goto code_r0x0044c445;\n                }\n            }\n            else {\ncode_r0x0044c40c:\n                piVar1 = in_RAX[1];\n                if (piVar1 < 0xfff8) {\n                    in_RAX[1] = piVar1 + uVar2;\n                    return *in_RAX + piVar1 + 8;\n                }\n                *(*0x20 + -0x28) = 0x44c445;\n                fcn.00459740(0xfff8);\ncode_r0x0044c445:\n                *(*0x20 + -0x28) = 0x44c456;\n                fcn.00430d40();\n            }\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x28) = 0x44c467;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x44c477;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 675
    },
    "0044c500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044c500(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar3 = *(unaff_R14 + 0x30);\n    uVar4 = *(iVar3 + 0xa0);\n    *(iVar3 + 0xa0) = in_RAX;\n    fcn.0044b680(0);\n    *(iVar3 + 0xa0) = uVar4;\n    iVar2 = *(iVar3 + 0xd8);\n    *(iVar3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 290
    },
    "0044c5c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044c5c0(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n            if (*(iVar1 + 0x1638) == '\\0') {\n                *(iVar1 + 0x1638) = 1;\n                *(iVar1 + 0x1640) = in_XMM15;\n                return;\n            }\n            *(*0x20 + -0x20) = 0x44c614;\n            fcn.00430d40();\n        }\n        *(puVar2 + -8) = 0x44c61a;\n        fcn.00457040();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 297
    },
    "0044c620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044c620(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (*(iVar1 + 0x1638) != '\\0') {\n        if (*(iVar1 + 0x1640) == 0) {\n            fcn.0044b680(0);\n        }\n        *(iVar1 + 0x1640) = *(iVar1 + 0x1640) + in_RAX;\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "0044c6c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044c6c0(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n            if (*(iVar1 + 0x1638) != '\\0') {\n                if (*(iVar1 + 0x1640) != 0) {\n                    *(*0x20 + -0x10) = iVar1;\n                    *(*0x20 + -0x20) = in_XMM15;\n                    *(*0x20 + -0x20) = *(iVar1 + 0x1640);\n                    *(*0x20 + -0x18) = *(iVar1 + 0x1648);\n                    *(*0x20 + -0x50) = 0x44c737;\n                    fcn.0044b680(*0x20 + -0x20);\n                    iVar1 = *(*0x20 + -0x10);\n                }\n                *(iVar1 + 0x1638) = 0;\n                return;\n            }\n            *(*0x20 + -0x50) = 0x44c75e;\n            fcn.00430d40();\n        }\n        *(puVar2 + -8) = 0x44c765;\n        fcn.00457040();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 426
    },
    "0044c860": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044c860(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n            iVar2 = *(*(iVar1 + 0x30) + 0xa0);\n            *(iVar1 + 0xd8) = *(iVar1 + 0xd8) + 1;\n            if (*(iVar2 + 0x1688) == 0) {\n                if (*(iVar1 + 0xe0) == iVar2) {\n                    *(*0x20 + -0x38) = 0;\n                    *(*0x20 + -0x38) = *(iVar1 + 0x98);\n                    *(*0x20 + -0x68) = 0x44c95c;\n                    fcn.0044b680(*0x20 + -0x38);\n                    return;\n                }\n                *(iVar1 + 0xe0) = iVar2;\n                *(*0x20 + -0x30) = in_XMM15;\n                *(*0x20 + -0x30) = *(iVar1 + 0x98);\n                *(*0x20 + -0x28) = *(iVar1 + 0xd8);\n                *(*0x20 + -0x68) = 0x44c99f;\n                fcn.0044b680(*0x20 + -0x30);\n                return;\n            }\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x18) = in_XMM15;\n            *(*0x20 + -0x20) = *(iVar1 + 0x98);\n            *(*0x20 + -0x18) = *(iVar1 + 0xd8);\n            if (*(iVar2 + 0x1688) < 4) {\n                *(*0x20 + -0x10) = *(*(iVar2 + 0x1688) * 8 + 0x519f08);\n                *(*0x20 + -0x68) = 0x44c918;\n                fcn.0044b680(*0x20 + -0x20);\n                return;\n            }\n            *(*0x20 + -0x68) = 0x44c9b3;\n            fcn.00459720(4);\n        }\n        *(puVar3 + -8) = 0x44c9b9;\n        fcn.00457040();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 691
    },
    "0044cca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044cca0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar3 = *(unaff_R14 + 0x30);\n    uVar4 = *(iVar3 + 0xa0);\n    *(iVar3 + 0xa0) = in_RAX;\n    fcn.0044b680(0);\n    *(iVar3 + 0xa0) = uVar4;\n    iVar2 = *(iVar3 + 0xd8);\n    *(iVar3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 290
    },
    "0044ce00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044ce00(ulong arg1)\n\n{\n    int32_t iVar1;\n    ulong *puVar2;\n    code *pcVar3;\n    char cVar4;\n    ulong in_RAX;\n    int64_t iVar5;\n    ulong uVar6;\n    code **unaff_RBX;\n    uchar *puVar7;\n    ulong unaff_RBP;\n    int32_t *piVar8;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x0044ce00:\n    puVar7 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x28 && *0x20 + -0x28 != *(unaff_R14 + 0x10)) {\n        puVar7 = *0x20 + -0xa8;\n        *(*0x20 + -8) = unaff_RBP;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -0x68) = arg1;\n        *(*0x20 + -0x60) = 0;\n        *(*0x20 + -0xb8) = *0x20 + -8;\n        *(*0x20 + -0xb0) = 0x44ce54;\n        iVar5 = fcn.004599b0();\n        unaff_RBP = *(*0x20 + -0xb8);\n        iVar5 = *(iVar5 + 0x28);\n        do {\n            if (iVar5 == 0) {\n                return;\n            }\n            *(*0x20 + -0x70) = iVar5;\n            puVar2 = *(iVar5 + 0x18);\n            if (puVar2 == NULL) {\n                *(*0x20 + -0x50) = 0;\n                *(*0x20 + -0x60) = in_XMM15;\n                *(*0x20 + -0x20) = in_XMM15;\n                *(*0x20 + -0x10) = 0;\n            }\n            else {\n                *(*0x20 + -0x78) = puVar2;\n                *(*0x20 + -0x50) = *puVar2;\n                *(*0x20 + -0xb0) = 0x44cec6;\n                iVar5 = fcn.004478a0();\n                if (iVar5 == 0) goto code_r0x0044cf98;\n                *(*0x20 + -0x60) = iVar5;\n                *(*0x20 + -0x58) = unaff_RBX;\n                if (**(*0x20 + -0x70) == 0) {\n                    piVar8 = NULL;\n                }\n                else {\n                    piVar8 = *(*0x20 + -0x70) + 0x12;\n                }\n                *(*0x20 + -0x20) = piVar8;\n                iVar1 = *(iVar5 + 0xc);\n                *(*0x20 + -0x18) = iVar1;\n                *(*0x20 + -0x10) = 0;\n                if (iVar1 == -0x80000000) {\n                    *(*0x20 + -0xb0) = 0x44cf34;\n                    uVar6 = fcn.0044ee20(unaff_RBX);\n                    *(*0x20 + -0x18) = uVar6;\n                    *(*0x20 + -0x10) = iVar5;\n                }\n                unaff_RBX = *(*0x20 + 0x10);\n            }\n            *(*0x20 + -0x48) = *(*0x20 + -0x50);\n            pcVar3 = *unaff_RBX;\n            *(*0x20 + -0xb0) = 0x44cf70;\n            cVar4 = (*pcVar3)();\n            if (cVar4 == '\\0') {\n                return;\n            }\n            iVar5 = *(*(*0x20 + -0x70) + 0x28);\n            arg1 = *(*0x20 + -0x68);\n            unaff_RBX = *(*0x20 + 0x10);\n        } while( true );\n    }\n    goto code_r0x0044cfe6;\ncode_r0x0044cf98:\n    *(*0x20 + -0x80) = *(*0x20 + -0x50);\n    *(*0x20 + -0xb0) = 0x44cfa7;\n    fcn.004324c0();\n    *(*0x20 + -0xb0) = 0x44cfb8;\n    fcn.00432dc0();\n    *(*0x20 + -0xb0) = 0x44cfc5;\n    fcn.00432c20();\n    *(*0x20 + -0xb0) = 0x44cfca;\n    fcn.00432720();\n    *(*0x20 + -0xb0) = 0x44cfcf;\n    fcn.00432540();\n    unaff_RBX = 0xa;\n    *(*0x20 + -0xb0) = 0x44cfe5;\n    in_RAX = fcn.00430d40();\ncode_r0x0044cfe6:\n    *(puVar7 + 8) = in_RAX;\n    *(puVar7 + 0x10) = unaff_RBX;\n    *(puVar7 + 0x18) = arg1;\n    *(puVar7 + -8) = 0x44cffa;\n    fcn.00457040();\n    in_RAX = *(puVar7 + 8);\n    unaff_RBX = *(puVar7 + 0x10);\n    arg1 = *(puVar7 + 0x18);\n    *0x20 = puVar7;\n    goto code_r0x0044ce00;\n}\n",
        "token_count": 1297
    },
    "0044ea80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044ea80(ulong arg1)\n\n{\n    uint8_t uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*(in_RAX + 0x2b) < 6) {\n                iVar4 = 0;\n            }\n            else {\n                iVar4 = in_RAX + *(in_RAX + 0x20) * 4 + 0x2c;\n                if ((iVar4 >> 2 & 1) != 0) {\n                    if ((in_RAX >> 2 & 1) != 0) {\n                        *(*0x20 + -0x20) = in_RAX;\n                        *(*0x20 + -0x30) = iVar4;\n                        *(*0x20 + 0x18) = arg1;\n                        *(*0x20 + -0x60) = 0x44eae5;\n                        fcn.004324c0();\n                        unaff_RBX = 0x19;\n                        *(*0x20 + -0x60) = 0x44eaf6;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x60) = 0x44eb05;\n                        fcn.00432d40();\n                        *(*0x20 + -0x60) = 0x44eb0a;\n                        fcn.00432720();\n                        *(*0x20 + -0x60) = 0x44eb0f;\n                        fcn.00432540();\n                        arg1 = *(*0x20 + 0x18);\n                        iVar4 = *(*0x20 + -0x30);\n                    }\n                    iVar4 = iVar4 + 4;\n                }\n                iVar4 = *(iVar4 + 0x28);\n            }\n            if (iVar4 == 0) {\n                return;\n            }\n            *(*0x20 + -0x28) = iVar4;\n            *(*0x20 + -0x18) = in_XMM15;\n            *(*0x20 + -0x18) = 0x44eda0;\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + -0x42) = 1;\n            uVar2 = 0;\n            while (uVar2 < 0xab) {\n                uVar1 = *(iVar4 + uVar2);\n                uVar5 = uVar2 + 1;\n                *(*0x20 + -0x40) = uVar5;\n                if (uVar1 < 0xfd) {\n                    if (uVar1 == 0xfb) {\n                        if (*(*0x20 + -0x42) == '\\0') {\n                            *(*0x20 + -0x60) = 0x44eb9d;\n                            fcn.004324c0();\n                            *(*0x20 + -0x60) = 0x44ebae;\n                            fcn.00432dc0();\n                            *(*0x20 + -0x60) = 0x44ebb3;\n                            fcn.00432540();\n                        }\n                        *(*0x20 + -0x60) = 0x44ebb8;\n                        fcn.004324c0();\n                        unaff_RBX = 1;\n                        *(*0x20 + -0x60) = 0x44ebc9;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x60) = 0x44ebce;\n                        fcn.00432540();\n                        uVar2 = *(*0x20 + -0x40);\n                    }\n                    else if (uVar1 == 0xfc) {\n                        if (*(*0x20 + -0x42) == '\\0') {\n                            *(*0x20 + -0x60) = 0x44ebf7;\n                            fcn.004324c0();\n                            *(*0x20 + -0x60) = 0x44ec08;\n                            fcn.00432dc0();\n                            *(*0x20 + -0x60) = 0x44ec0d;\n                            fcn.00432540();\n                        }\n                        *(*0x20 + -0x60) = 0x44ec12;\n                        fcn.004324c0();\n                        unaff_RBX = 3;\n                        *(*0x20 + -0x60) = 0x44ec25;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x60) = 0x44ec2a;\n                        fcn.00432540();\n                        uVar2 = *(*0x20 + -0x40);\n                    }\n                    else {\ncode_r0x0044ecaa:\n                        *(*0x20 + -0x38) = uVar2;\n                        if (*(*0x20 + -0x42) == '\\0') {\n                            *(*0x20 + -0x41) = uVar1;\n                            *(*0x20 + -0x60) = 0x44ecc5;\n                            fcn.004324c0();\n                            unaff_RBX = 2;\n                            *(*0x20 + -0x60) = 0x44ecd6;\n                            fcn.00432dc0();\n                            *(*0x20 + -0x60) = 0x44ecdb;\n                            fcn.00432540();\n                            uVar2 = *(*0x20 + -0x38);\n                            iVar4 = *(*0x20 + -0x28);\n                            uVar5 = *(*0x20 + -0x40);\n                        }\n                        if (0xaa < uVar5) {\n                            *(*0x20 + -0x60) = 0x44ed5c;\n                            fcn.00459720(0xab);\n                            break;\n                        }\n                        unaff_RBX = *(uVar2 + 1 + iVar4);\n                        *(*0x20 + -0x60) = 0x44ed0b;\n                        (**(*0x20 + -0x18))(*(*0x20 + -0x18), *0x20 + -0x18);\n                        uVar2 = *(*0x20 + -0x38) + 2;\n                    }\ncode_r0x0044ed36:\n                    *(*0x20 + -0x42) = 0;\n                }\n                else {\n                    if (uVar1 == 0xfd) {\n                        *(*0x20 + -0x60) = 0x44ed1b;\n                        fcn.004324c0();\n                        unaff_RBX = 1;\n                        *(*0x20 + -0x60) = 0x44ed2c;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x60) = 0x44ed31;\n                        fcn.00432540();\n                        uVar2 = *(*0x20 + -0x40);\n                        goto code_r0x0044ed36;\n                    }\n                    if (uVar1 != 0xfe) {\n                        if (uVar1 == 0xff) {\n                            return;\n                        }\n                        goto code_r0x0044ecaa;\n                    }\n                    if (*(*0x20 + -0x42) == '\\0') {\n                        *(*0x20 + -0x60) = 0x44ec53;\n                        fcn.004324c0();\n                        *(*0x20 + -0x60) = 0x44ec65;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x60) = 0x44ec6a;\n                        fcn.00432540();\n                    }\n                    *(*0x20 + -0x60) = 0x44ec6f;\n                    fcn.004324c0();\n                    unaff_RBX = 1;\n                    *(*0x20 + -0x60) = 0x44ec85;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x60) = 0x44ec8a;\n                    fcn.00432540();\n                    *(*0x20 + -0x42) = 1;\n                    uVar2 = *(*0x20 + -0x40);\n                }\n                iVar4 = *(*0x20 + -0x28);\n            }\n            arg1 = 0xab;\n            *(*0x20 + -0x60) = 0x44ed66;\n            in_RAX = fcn.00459720(0xab);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x44ed7b;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 2158
    },
    "0044f280": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0044f280(ulong param_1, ulong param_2)\n\n{\n    ulong arg1;\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    arg1 = *(in_RAX + 0x128);\n    iVar2 = fcn.004478a0();\n    if (iVar2 == 0) {\n        cVar1 = '\\0';\n    }\n    else {\n        cVar1 = fcn.0044ffa0(in_RAX, param_2, 0);\n    }\n    if ((cVar1 != '\\0') && (*(in_RAX + 0x98) != 1)) {\n        iVar2 = fcn.0044f320(arg1);\n    }\n    return iVar2;\n}\n",
        "token_count": 227
    },
    "0044f8e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0044f8e0(ulong arg1)\n\n{\n    ulong arg1_00;\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t unaff_RBX;\n    ulong unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    ulong uStack0000000000000028;\n    \n    uStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432bc0();\n    fcn.00432dc0();\n    fcn.00432540();\n    for (uVar3 = 0; uVar3 < unaff_RBX; uVar3 = uVar3 + 1) {\n        arg1_00 = *(in_RAX + uVar3 * 8);\n        uVar4 = uVar3;\n        fcn.004478a0();\n        cVar1 = fcn.00450060(uVar4 & 0xffffff00 | uVar3 == 0);\n        if (cVar1 != '\\0') {\n            fcn.0044faa0(arg1_00);\n        }\n    }\n    if (unaff_RBX == 100) {\n        fcn.004324c0();\n        fcn.00432dc0();\n        fcn.00432540();\n    }\n    iVar2 = fcn.004478a0();\n    if (iVar2 == 0) {\n        cVar1 = '\\0';\n    }\n    else {\n        cVar1 = fcn.00450060();\n    }\n    if ((cVar1 != '\\0') && (unaff_RDI != 1)) {\n        iVar2 = fcn.0044f320(uStack0000000000000028);\n    }\n    return iVar2;\n}\n",
        "token_count": 475
    },
    "0044ffa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0044ffa0(int64_t arg1, ulong noname_1, ulong arg3)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    uint32_t unaff_EDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n        unaff_EDI = unaff_EDI & 0xff;\n    }\n    iVar1 = *(unaff_R14 + 0x30);\n    if (((0 < *(iVar1 + 0xc4)) && (arg1 != 0)) && ((*(iVar1 + 0x90) == arg1 || (arg1 == *(iVar1 + 0x98))))) {\n        return 1;\n    }\n    uVar2 = fcn.00450060(unaff_EDI);\n    return uVar2;\n}\n",
        "token_count": 216
    },
    "00450060": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool fcn.00450060(uint64_t param_1)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int64_t in_RAX;\n    int64_t *piVar3;\n    bool bVar4;\n    uint64_t noname_0;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    char unaff_SIL;\n    char unaff_DIL;\n    int64_t unaff_R14;\n    int64_t iStack32;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n        param_1 = param_1 & 0xff;\n    }\n    uVar1 = *(*(unaff_R14 + 0x30) + 0xf9);\n    arg2 = *0x4f0188 >> 2;\n    if (uVar1 != 0) {\n        arg2 = uVar1;\n    }\n    if (1 < arg2) {\n        return true;\n    }\n    if (in_RAX == 0) {\n        return false;\n    }\n    if ((((unaff_DIL == '\\x16') && (unaff_SIL != '\\t')) && (unaff_SIL != '\\x13')) && (unaff_SIL != '\\x0f')) {\n        return false;\n    }\n    noname_0 = param_1;\n    piVar3 = fcn.00447f80();\n    if ((((unaff_RBX == 0xf) && (noname_0 = 0x2e656d69746e7572,  *piVar3 == 0x2e656d69746e7572)) &&\n        ((*(piVar3 + 1) == 0x61706f67 && ((*(piVar3 + 0xc) == 0x696e && (*(piVar3 + 0xe) == 'c')))))) &&\n       (arg2 = param_1 & 0xff,  param_1 == '\\0')) {\n        return true;\n    }\n    fcn.00402300(noname_0, arg2);\n    if (iStack32 < 0) {\n        bVar4 = false;\n    }\n    else {\n        if (unaff_RBX < 8) {\n            cVar2 = '\\0';\n        }\n        else {\n            cVar2 = fcn.004021a0(8, unaff_RBX);\n        }\n        if (cVar2 == '\\0') {\n            bVar4 = true;\n        }\n        else if (((unaff_RBX < 9) || (*piVar3 != 0x2e656d69746e7572)) || (*(piVar3 + 1) < 0x41)) {\n            bVar4 = false;\n        }\n        else {\n            bVar4 = *(piVar3 + 1) < 0x5b;\n        }\n    }\n    return bVar4;\n}\n",
        "token_count": 661
    },
    "004509a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004509a0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    ulong auStack64 [7];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (*0x503610 != 0) {\n        auStack64[0] = 0;\n        for (iVar1 = 0; (iVar1 < 0x20 && (*(in_RAX + iVar1 * 8) != 0)); iVar1 = iVar1 + 1) {\n            fcn.00450ae0(auStack64);\n        }\n        auStack64[0] = 0;\n        fcn.00450ce0();\n        return;\n    }\n    for (iVar1 = 0; (iVar1 < 0x20 && (*(in_RAX + iVar1 * 8) != 0)); iVar1 = iVar1 + 1) {\n        fcn.004324c0();\n        fcn.00432dc0();\n        fcn.00432c20();\n        fcn.00432720();\n        fcn.00432540();\n    }\n    return;\n}\n",
        "token_count": 289
    },
    "00450ae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00450ae0(ulong *arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    *arg1 = in_RAX;\n    iVar1 = 0;\n    do {\n        if (unaff_RBX < iVar1) {\n            return iVar1;\n        }\n        fcn.00450ce0();\n        if (arg1[3] == 0) {\n            fcn.004324c0();\n            fcn.00432dc0();\n            fcn.00432540();\n        }\n        else {\n            fcn.00446c80();\n            fcn.004324c0();\n            fcn.00432dc0();\n            fcn.00432720();\n            fcn.00432540();\n        }\n        fcn.004324c0();\n        fcn.00432dc0();\n        fcn.00432540();\n        if (arg1[1] != 0) {\n            fcn.00446c80();\n            fcn.004324c0();\n            fcn.00432dc0();\n            fcn.00432dc0();\n            fcn.00432ac0();\n            fcn.004326e0();\n            fcn.00432540();\n        }\n        fcn.004324c0();\n        fcn.00432dc0();\n        fcn.00432c20();\n        fcn.00432720();\n        fcn.00432540();\n        iVar1 = iVar1 + 1;\n    } while (arg1[5] != 0);\n    return iVar1;\n}\n",
        "token_count": 407
    },
    "00450ce0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00450ce0(void)\n\n{\n    code **ppcVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if ((*0x557cc8 == 0) && (*(*(unaff_R14 + 0x30) + 0x90) == unaff_R14)) {\n        ppcVar1 = 0x48a400;\n    }\n    else {\n        ppcVar1 = 0x48a3a0;\n    }\n    (**ppcVar1)(ppcVar1, ppcVar1);\n    return;\n}\n",
        "token_count": 170
    },
    "00450d60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00450d60(int64_t arg1)\n\n{\n    code *pcVar1;\n    ulong in_RAX;\n    code **ppcVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*0x503618 == 0) {\n                return;\n            }\n            if ((*0x557cc8 == 0) && (unaff_RDI = unaff_R14,  *(*(unaff_R14 + 0x30) + 0x90) == unaff_R14)) {\n                ppcVar2 = 0x48a400;\n            }\n            else {\n                ppcVar2 = 0x48a3a0;\n            }\n            if (arg1 != 0) {\n                *(*0x20 + -0x28) = in_XMM15;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x28) = in_RAX;\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = arg1;\n                pcVar1 = *ppcVar2;\n                *(*0x20 + -0x40) = 0x450dea;\n                (*pcVar1)();\n                return;\n            }\n            *(*0x20 + -0x40) = 0x450e05;\n            in_RAX = fcn.00459720(0);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + -8) = 0x450e1f;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 631
    },
    "00450e40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00450e40(uint64_t param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        uVar2 = param_1;\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar2 = *(in_RAX + 0x28);\n            *(*0x20 + -0x20) = 0x450e65;\n            fcn.00451020();\n            *(*0x20 + -0x20) = 0x450e6a;\n            iVar1 = fcn.00451880(param_1, param_2, param_3, param_4);\n            if ((*(*(*0x20 + 8) + 0x14) & 2) == 0) {\n                return iVar1;\n            }\n            if (uVar2 != 0) {\n                return iVar1 + (-(uVar2 - 1) >> 0x3f & 1U);\n            }\n            *(*0x20 + -0x20) = 0x450eb6;\n            in_RAX = fcn.004597e0(0);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x450ec5;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        param_1 = uVar2;\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 472
    },
    "00451580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00451580(ulong param_1, uint64_t param_2)\n\n{\n    uint64_t uVar1;\n    uint64_t in_RAX;\n    uint64_t *puVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint32_t unaff_EBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (unaff_EBX == 0xffffffff) {\n        return CONCAT71(*0x48a691, *0x48a690);\n    }\n    for (uVar4 = 0x4f53c0; uVar4 != 0; uVar4 = *(uVar4 + 0x210)) {\n        if ((*(uVar4 + 0x118) < in_RAX || *(uVar4 + 0x118) == in_RAX) &&\n           (in_RAX <= *(uVar4 + 0x120) && *(uVar4 + 0x120) != in_RAX)) goto code_r0x004515e4;\n    }\n    uVar4 = 0;\ncode_r0x004515e4:\n    if (uVar4 == 0) {\n        fcn.00409300();\n        puVar2 = fcn.0040d400(unaff_EBX);\n        uVar5 = *puVar2;\n        uVar4 = uVar5;\n        fcn.00409520();\n        if (uVar5 != 0) {\n            return uVar5;\n        }\n        fcn.004324c0();\n        fcn.00432dc0();\n        fcn.00432c20();\n        fcn.00432dc0();\n        fcn.00432c20();\n        fcn.00432dc0();\n        fcn.00432540();\n        for (iVar3 = 0x4f53c0; iVar3 != 0; iVar3 = *(iVar3 + 0x210)) {\n            uVar4 = *(iVar3 + 0x118);\n            param_2 = *(iVar3 + 0x120);\n            fcn.004324c0();\n            fcn.00432dc0();\n            fcn.00432c20();\n            fcn.00432dc0();\n            fcn.00432c20();\n            fcn.00432720();\n            fcn.00432540();\n        }\n        fcn.00430d40();\n        goto code_r0x0045175b;\n    }\n    param_2 = *(uVar4 + 0x128);\n    uVar5 = *(uVar4 + 0x130);\n    if (uVar5 < 2) {\n        param_2 = unaff_EBX + *(uVar4 + 0xb0);\n        goto code_r0x0045175b;\n    }\n    iVar3 = 0;\n    do {\n        if (iVar3 < uVar5) {\n            uVar1 = *(param_2 + iVar3 * 0x18);\n            uVar6 = unaff_EBX;\n            if ((uVar1 <= uVar6) && (uVar6 < *(param_2 + 8 + iVar3 * 0x18) + uVar1)) {\n                param_2 = (*(param_2 + 0x10 + iVar3 * 0x18) + uVar6) - uVar1;\n                goto code_r0x0045175b;\n            }\n        }\n        else {\n            param_2 = 0;\ncode_r0x0045175b:\n            uVar5 = *(uVar4 + 0xb8);\n            if (param_2 <= uVar5) {\n                return param_2;\n            }\n            fcn.004324c0();\n            fcn.00432dc0();\n            fcn.00432c20();\n            fcn.00432dc0();\n            fcn.00432c20();\n            fcn.00432dc0();\n            fcn.00432c20();\n            fcn.00432720();\n            fcn.00432540();\n            unaff_EBX = 0x21;\n            iVar3 = fcn.00430d40();\n        }\n        iVar3 = iVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 988
    },
    "00451ba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00451ba0(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint uVar4;\n    ulong in_RAX;\n    ulong uVar5;\n    uint64_t uVar6;\n    int64_t *piVar7;\n    ulong *puVar8;\n    uchar (*arg1) [16];\n    int64_t iVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    int64_t *piVar12;\n    int64_t iVar13;\n    int64_t iVar14;\n    uchar *puVar15;\n    uchar *unaff_RBP;\n    int64_t *piVar16;\n    int64_t iVar17;\n    uint64_t uVar18;\n    int64_t iVar19;\n    int64_t arg4;\n    int64_t iVar20;\n    int64_t iVar21;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar15 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x238 && *0x20 + -0x238 != *(unaff_R14 + 0x10)) {\n            puVar15 = *0x20 + -0x2b8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x4f55d0 == 0) {\n                return in_RAX;\n            }\n            arg1 = *0x20 + -0x1b8;\n            *arg1 = in_XMM15;\n            *(*0x20 + -0x1a8) = in_XMM15;\n            *(*0x20 + -0x198) = in_XMM15;\n            if (*0x4f5508 < 9) {\n                *(*0x20 + -0x2c8) = unaff_RBP;\n                *(*0x20 + -0x2c0) = 0x451c2f;\n                fcn.00459978();\n                unaff_RBP = *(*0x20 + -0x2c8);\n                *(*0x20 + -0x1a8) = *0x20 + -0xf8;\n            }\n            *(*0x20 + -0x2c0) = 0x451c4f;\n            uVar5 = fcn.0040bf60(arg1);\n            if (*0x503640 == NULL) {\n                piVar16 = NULL;\n                piVar7 = NULL;\n                piVar12 = NULL;\n            }\n            else {\n                piVar7 = **0x503640;\n                piVar16 = (*0x503640)[1];\n                piVar12 = (*0x503640)[2];\n            }\n            if (piVar16 != NULL) {\n                *(*0x20 + -0x238) = uVar5;\n                iVar19 = *piVar7;\n                iVar13 = (-(piVar12 + -1) >> 0x3f & 8U) + piVar7;\n                *(*0x20 + -0x1f0) = iVar13;\n                iVar21 = piVar16 + -1;\n                *(*0x20 + -0x240) = iVar21;\n                iVar9 = 0;\n                do {\n                    if (iVar21 <= iVar9) {\n                        return uVar5;\n                    }\n                    *(*0x20 + -0x248) = iVar9;\n                    *(*0x20 + -0x218) = iVar19;\n                    iVar17 = *(iVar13 + iVar9 * 8);\n                    *(*0x20 + -0x1f8) = iVar17;\n                    arg4 = *(iVar19 + 0x140);\n                    *(*0x20 + -0x200) = arg4;\n                    iVar20 = *(iVar19 + 0x148);\n                    *(*0x20 + -0x250) = iVar20;\n                    iVar14 = 0;\n                    while (iVar14 < iVar20) {\n                        *(*0x20 + -600) = iVar14;\n                        uVar1 = *(arg4 + iVar14 * 4);\n                        if (*(iVar19 + 0x200) == 0) {\n                            iVar21 = uVar1 + *(iVar19 + 0x118);\n                        }\n                        else {\n                            *(*0x20 + -0x2c0) = 0x451ea7;\n                            piVar7 = fcn.0040d400(uVar1);\n                            iVar21 = *piVar7;\n                        }\n                        *(*0x20 + -0x220) = iVar21;\n                        uVar1 = *(iVar21 + 0x10);\n                        *(*0x20 + -0x2c0) = 0x451ecd;\n                        piVar7 = fcn.0040d400(uVar1);\n                        uVar11 = piVar7[1];\n                        iVar21 = *piVar7;\n                        iVar9 = *(*0x20 + -0x220);\n                        for (iVar13 = 0; iVar13 < uVar11; iVar13 = iVar13 + 1) {\n                            if (*(iVar21 + iVar13 * 8) == iVar9) goto code_r0x00451e2b;\n                        }\n                        uVar10 = uVar11 + 1;\n                        uVar6 = uVar11;\n                        iVar13 = iVar21;\n                        uVar18 = piVar7[2];\n                        if (piVar7[2] < uVar10) {\n                            *(*0x20 + -0x270) = uVar11;\n                            *(*0x20 + -0x2c0) = 0x451f05;\n                            iVar13 = fcn.004425c0(uVar11);\n                            uVar10 = iVar21 + 1;\n                            iVar9 = *(*0x20 + -0x220);\n                            uVar6 = *(*0x20 + -0x270);\n                            uVar18 = uVar11;\n                        }\n                        *(*0x20 + -0x210) = iVar13;\n                        *(*0x20 + -0x260) = uVar10;\n                        *(*0x20 + -0x268) = uVar18;\n                        iVar21 = iVar13 + uVar6 * 8;\n                        if (*0x557ed0 == 0) {\n                            *(iVar13 + uVar6 * 8) = iVar9;\n                        }\n                        else {\n                            *(*0x20 + -0x2c0) = 0x451f4a;\n                            fcn.004593a0(uVar6, iVar9, iVar21, arg4);\n                        }\n                        uVar11 = *(iVar9 + 0x10);\n                        *(*0x20 + -0x2c0) = 0x451f65;\n                        puVar8 = fcn.0040d740(uVar11);\n                        puVar8[1] = *(*0x20 + -0x260);\n                        puVar8[2] = *(*0x20 + -0x268);\n                        if (*0x557ed0 == 0) {\n                            *puVar8 = *(*0x20 + -0x210);\n                        }\n                        else {\n                            *(*0x20 + -0x2c0) = 0x451fa5;\n                            fcn.004593a0(uVar11, *(*0x20 + -0x210), iVar21, arg4);\n                        }\ncode_r0x00451e2b:\n                        uVar5 = *(*0x20 + -0x238);\n                        iVar9 = *(*0x20 + -0x248);\n                        iVar13 = *(*0x20 + -0x1f0);\n                        iVar21 = *(*0x20 + -0x240);\n                        iVar17 = *(*0x20 + -0x1f8);\n                        iVar19 = *(*0x20 + -0x218);\n                        arg4 = *(*0x20 + -0x200);\n                        iVar20 = *(*0x20 + -0x250);\n                        iVar14 = *(*0x20 + -600) + 1;\n                    }\n                    if (*(iVar17 + 0x200) == 0) {\n                        *(*0x20 + -0x2c0) = 0x451d25;\n                        uVar5 = fcn.0040bf60(0);\n                        uVar11 = *0x503fc0;\n                        uVar10 = *0x503fc8;\n                        uVar6 = *0x503fc0;\n                        if (*0x503fd0 < *0x503fc8 + 1) {\n                            *(*0x20 + -0x230) = uVar5;\n                            *(*0x20 + -0x2c0) = 0x451d59;\n                            uVar6 = fcn.004425c0(*0x503fc8);\n                            uVar18 = uVar6;\n                            *0x503fd0 = uVar10;\n                            if (*0x557ed0 != 0) {\n                                *(*0x20 + -0x2c0) = 0x451d7e;\n                                uVar6 = fcn.00459280(uVar10, iVar13, iVar19, arg4);\n                                uVar18 = *0x503fc0;\n                            }\n                            *0x503fc0 = uVar18;\n                            uVar5 = *(*0x20 + -0x230);\n                            uVar10 = uVar11;\n                        }\n                        *0x503fc8 = uVar10 + 1;\n                        if (*0x557ed0 == 0) {\n                            *(uVar6 + uVar10 * 8) = uVar5;\n                            iVar21 = *(*0x20 + -0x1f8);\n                            *(iVar21 + 0x200) = uVar5;\n                        }\n                        else {\n                            *(*0x20 + -0x2c0) = 0x451dbe;\n                            fcn.00459280(uVar10, *0x503fc8, iVar19, arg4);\n                            iVar21 = *(*0x20 + -0x1f8);\n                            *(*0x20 + -0x2c0) = 0x451dd2;\n                            fcn.00459280(uVar10, iVar21, iVar19, arg4);\n                        }\n                        iVar13 = *(iVar21 + 0x140);\n                        *(*0x20 + -0x200) = iVar13;\n                        iVar19 = *(iVar21 + 0x148);\n                        *(*0x20 + -0x250) = iVar19;\n                        iVar9 = 0;\n                        while (iVar9 < iVar19) {\n                            *(*0x20 + -600) = iVar9;\n                            iVar2 = *(iVar13 + iVar9 * 4);\n                            *(*0x20 + -0x274) = iVar2;\n                            iVar19 = iVar2 + *(iVar21 + 0x118);\n                            *(*0x20 + -0x208) = iVar19;\n                            uVar1 = *(iVar19 + 0x10);\n                            *(*0x20 + -0x2c0) = 0x452007;\n                            piVar7 = fcn.0040d400(uVar1);\n                            iVar9 = *piVar7;\n                            *(*0x20 + -0x210) = iVar9;\n                            iVar13 = piVar7[1];\n                            *(*0x20 + -0x260) = iVar13;\n                            iVar21 = 0;\n                            while (iVar21 < iVar13) {\n                                *(*0x20 + -0x268) = iVar21;\n                                *(*0x20 + -0x228) = *(iVar9 + iVar21 * 8);\n                                *(*0x20 + -0x1e8) = in_XMM15;\n                                *(*0x20 + -0x1d8) = in_XMM15;\n                                *(*0x20 + -0x1c8) = in_XMM15;\n                                *(*0x20 + -0x2c8) = unaff_RBP;\n                                *(*0x20 + -0x2c0) = 0x4520f9;\n                                fcn.00459999();\n                                unaff_RBP = *(*0x20 + -0x2c8);\n                                *(*0x20 + -0x1d8) = *0x20 + -0x188;\n                                *(*0x20 + -0x2c0) = 0x452112;\n                                uVar4 = fcn.00446f60();\n                                *(*0x20 + -0x1dc) = uVar4;\n                                *(*0x20 + -0x2c0) = 0x452136;\n                                cVar3 = fcn.00452180(*0x20 + -0x1e8);\n                                if (cVar3 != '\\0') {\n                                    uVar5 = *(*0x20 + -0x228);\n                                    goto code_r0x00452037;\n                                }\n                                iVar19 = *(*0x20 + -0x268);\n                                iVar9 = *(*0x20 + -0x210);\n                                iVar13 = *(*0x20 + -0x260);\n                                iVar21 = iVar19 + 1;\n                            }\n                            uVar5 = *(*0x20 + -0x208);\ncode_r0x00452037:\n                            *(*0x20 + -0x228) = uVar5;\n                            uVar11 = *(*0x20 + -0x274);\n                            *(*0x20 + -0x2c0) = 0x45205e;\n                            puVar8 = fcn.0040d740(uVar11);\n                            if (*0x557ed0 == 0) {\n                                *puVar8 = *(*0x20 + -0x228);\n                            }\n                            else {\n                                *(*0x20 + -0x2c0) = 0x452089;\n                                fcn.004593a0(uVar11, *(*0x20 + -0x228), iVar19, arg4);\n                            }\n                            iVar21 = *(*0x20 + -0x1f8);\n                            iVar13 = *(*0x20 + -0x200);\n                            iVar19 = *(*0x20 + -0x250);\n                            iVar9 = *(*0x20 + -600) + 1;\n                        }\n                        uVar5 = *(*0x20 + -0x238);\n                        iVar9 = *(*0x20 + -0x248);\n                        iVar13 = *(*0x20 + -0x1f0);\n                        iVar21 = *(*0x20 + -0x240);\n                        iVar17 = *(*0x20 + -0x1f8);\n                    }\n                    iVar9 = iVar9 + 1;\n                    iVar19 = iVar17;\n                } while( true );\n            }\n            *(*0x20 + -0x2c0) = 0x452169;\n            fcn.00459720(0);\n        }\n        *(puVar15 + -8) = 0x45216f;\n        in_RAX = fcn.00457040();\n        *0x20 = puVar15;\n    } while( true );\n}\n",
        "token_count": 3307
    },
    "004541a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004541a0(void)\n\n{\n    if (*0x557ed0 != '\\0') {\n        fcn.00402960();\n    }\n    fcn.00401080();\n    return;\n}\n",
        "token_count": 47
    },
    "00454200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00454200(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    uVar1 = in_RAX;\n    if (*0x557ed0 != 0) {\n        fcn.00459280(arg1, arg2, arg3, arg4);\n        uVar1 = *0x503650;\n    }\n    *0x503650 = uVar1;\n    return;\n}\n",
        "token_count": 163
    },
    "00454380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00454380(void)\n\n{\n    int32_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x38) = 0x4543a9;\n            iVar2 = fcn.0042a120();\n            *(*0x20 + -0x18) = iVar2;\n            *(*0x20 + -0x10) = iVar2 + 8;\n            *(*0x20 + -0x38) = 0x4543c5;\n            fcn.00409300();\n            iVar2 = *(*0x20 + -0x18);\n            if ((*(iVar2 + 0x88) == 0) || (*(iVar2 + 0x88) == 1)) {\n                if ((*(iVar2 + 0x28) == 0) || (*(iVar2 + 0x28) == 1)) {\n                    *(iVar2 + 0x10) = *(*0x20 + 8);\n                    *(iVar2 + 0x18) = 0;\n                    *(iVar2 + 0x20) = *(iVar2 + 0x20) + 1;\n                    *(iVar2 + 0x28) = 0;\n                    *(iVar2 + 0x78) = 0;\n                    *(iVar2 + 0x80) = *(iVar2 + 0x80) + 1;\n                    *(iVar2 + 0x88) = 0;\n                    *(iVar2 + 0xd8) = 0;\n                    *(iVar2 + 0xe0) = iVar2;\n                    *(*0x20 + -0x38) = 0x45444c;\n                    fcn.00409520();\n                    *(*0x20 + -0x38) = 0x45445b;\n                    iVar1 = fcn.0042a2e0();\n                    if (iVar1 != 0) {\n                        *(*0x20 + -0x1c) = iVar1;\n                        *(*0x20 + -0x38) = 0x454474;\n                        fcn.00429fa0();\n                        return 0;\n                    }\n                    return *(*0x20 + -0x18);\n                }\n                *(*0x20 + -0x38) = 0x4544a9;\n                fcn.00430d40();\n            }\n            *(*0x20 + -0x38) = 0x4544ba;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x4544c5;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 752
    },
    "004544e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004544e0(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x18) != '\\0') {\n                if ((*(in_RAX + 0x88) == 0) || (*(in_RAX + 0x88) == 1)) {\n                    if ((*(in_RAX + 0x28) == 0) || (*(in_RAX + 0x28) == 1)) {\n                        *(*0x20 + -0x20) = 0x45452e;\n                        fcn.00429fa0();\n                        return;\n                    }\n                    *(*0x20 + -0x20) = 0x454549;\n                    fcn.00430d40();\n                }\n                *(*0x20 + -0x20) = 0x45455a;\n                fcn.00430d40();\n            }\n            *(*0x20 + -0x20) = 0x45456b;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x454576;\n        fcn.00457040();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 415
    },
    "004545a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004545a0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    int32_t iVar3;\n    int64_t in_RAX;\n    int64_t arg1;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x10) = in_RAX + 8;\n            *(*0x20 + -0x38) = 0x4545d1;\n            fcn.00409300();\n            arg1 = *(*0x20 + 8);\n            if (*(arg1 + 0x18) == '\\0') break;\n            *(*0x20 + -0x38) = 0x45476f;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x45477a;\n        fcn.00457040();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n    *(arg1 + 0x18) = 1;\n    *(arg1 + 0x20) = *(arg1 + 0x20) + 1;\n    *(arg1 + 0x80) = *(arg1 + 0x80) + 1;\n    *(*0x20 + -0x18) = 0;\n    *(*0x20 + -0x18) = 0;\n    do {\n        uVar4 = *(arg1 + 0x28);\n        if (uVar4 == 1) {\n            uVar4 = 0;\n            goto code_r0x0045463c;\n        }\n        if (uVar4 == 0) {\n            uVar4 = 0;\n            goto code_r0x0045463c;\n        }\n        LOCK();\n        puVar1 = arg1 + 0x28;\n        uVar2 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar4 == uVar2) * *puVar1;\n    } while (uVar4 != uVar2);\n    if (uVar4 == 2) {\n        uVar4 = 0;\n    }\ncode_r0x0045463c:\n    *(*0x20 + -0x18) = uVar4;\n    while( true ) {\n        uVar4 = *(arg1 + 0x88);\n        if (uVar4 == 1) {\n            uVar4 = 0;\n            goto code_r0x00454678;\n        }\n        if (uVar4 == 0) break;\n        LOCK();\n        puVar1 = arg1 + 0x88;\n        uVar2 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar4 == uVar2) * *puVar1;\n        if (uVar4 == uVar2) {\n            if (uVar4 == 2) {\n                uVar4 = 0;\n            }\ncode_r0x00454678:\n            *(*0x20 + -0x20) = uVar4;\n            if (*(arg1 + 0x48) != 0) {\n                *(*0x20 + -0x38) = 0x45468d;\n                fcn.004494a0();\n                if (*0x557ed0 == 0) {\n                    arg1 = *(*0x20 + 8);\n                    *(arg1 + 0x48) = 0;\n                }\n                else {\n                    arg1 = *(*0x20 + 8);\n                    *(*0x20 + -0x38) = 0x4546b5;\n                    fcn.004593a0(arg1, 0, param_3, param_4);\n                }\n            }\n            if (*(arg1 + 0xa8) != 0) {\n                *(*0x20 + -0x38) = 0x4546d0;\n                fcn.004494a0();\n                if (*0x557ed0 == 0) {\n                    *(*(*0x20 + 8) + 0xa8) = 0;\n                }\n                else {\n                    *(*0x20 + -0x38) = 0x4546fe;\n                    fcn.00459380(0);\n                }\n            }\n            *(*0x20 + -0x38) = 0x45470a;\n            fcn.00409520();\n            iVar3 = *0x557cbc;\n            if (*(*0x20 + -0x18) != 0) {\n                LOCK();\n                *0x557cbc = *0x557cbc + -1;\n                *(*0x20 + -0x38) = 0x45472f;\n                fcn.00433780(iVar3);\n            }\n            iVar3 = *0x557cbc;\n            if (*(*0x20 + -0x20) != 0) {\n                LOCK();\n                *0x557cbc = *0x557cbc + -1;\n                *(*0x20 + -0x38) = 0x454754;\n                fcn.00433780(iVar3);\n            }\n            return;\n        }\n    }\n    uVar4 = 0;\n    goto code_r0x00454678;\n}\n",
        "token_count": 1315
    },
    "00454840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00454840(ulong param_1, int64_t param_2)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    char cVar5;\n    int64_t *unaff_R14;\n    uchar auStackX8 [32];\n    int64_t iStack40;\n    \n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + 1;\n    if (unaff_R14[0xe] < auStackX8) {\n        fcn.00430d40();\n        pcVar4 = swi(3);\n        (*pcVar4)();\n        return;\n    }\n    unaff_R14[0x15] = 0;\n    iVar2 = *(unaff_R14[6] + 0xb0);\n    *(unaff_R14[6] + 0xb0) = 0;\n    cVar5 = fcn.0043ad20();\n    if (cVar5 != '\\0') {\n        if (*0x509e70 != '\\0') {\n            iVar3 = *(unaff_R14[6] + 0xa0);\n            if ((iVar3 != iVar2) || (*(iVar3 + 0x14) != *(unaff_R14[6] + 0x274))) {\n                fcn.00456f00();\n            }\n        }\n        piVar1 = *(unaff_R14[6] + 0xa0) + 0x14;\n        *piVar1 = *piVar1 + 1;\n        fcn.00435000(2);\n        unaff_R14[0xe] = 0;\n        *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + -1;\n        if (*(unaff_R14 + 0xb1) == '\\0') {\n            unaff_R14[2] = *unaff_R14 + 0x13a0;\n        }\n        else {\n            unaff_R14[2] = -0x522;\n        }\n        *(unaff_R14 + 0xb7) = 0;\n        if ((*0x504818 != '\\0') && (cVar5 = fcn.0043e860(),  cVar5 == '\\0')) {\n            fcn.00433600();\n        }\n        return;\n    }\n    unaff_R14[0x1a] = 0;\n    if (*0x509e70 != '\\0') {\n        while ((iVar2 != 0 && (param_2 = unaff_R14[6],  *(param_2 + 0x274) == *(iVar2 + 0x14)))) {\n            iStack40 = 0x48a658;\n            fcn.00456f00();\n        }\n        fcn.00459140(unaff_R14, param_2);\n        unaff_R14[0x1a] = iStack40;\n    }\n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + -1;\n    fcn.00456e80();\n    unaff_R14[0xe] = 0;\n    piVar1 = *(unaff_R14[6] + 0xa0) + 0x14;\n    *piVar1 = *piVar1 + 1;\n    *(unaff_R14 + 0xb7) = 0;\n    return;\n}\n",
        "token_count": 787
    },
    "00454a80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00454a80(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    if (((3 < in_RAX) || (*0x557cb4 < 2)) || (*0x557cb0 <= *0x5047f8 + *0x5047fc + 1)) {\n        return 0;\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    do {\n    } while (*(iVar1 + 0x5f4) != *(iVar1 + 0x5f4));\n    if ((*(iVar1 + 0x5f4) == *(iVar1 + 0x5f0)) && (*(iVar1 + 0xdf8) == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 196
    },
    "00454f40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00454f40(uchar param_1)\n\n{\n    uint16_t uVar1;\n    int64_t in_RAX;\n    int64_t **ppiVar2;\n    ulong *puVar3;\n    char cVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    int64_t *arg1;\n    uint64_t arg2;\n    ulong uVar7;\n    ulong unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uchar *arg1_00;\n    int64_t *piVar9;\n    uint64_t arg3;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    bool bVar10;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x78 && *0x20 + -0x78 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0xf8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if ((in_RAX != 0) && ((*(in_RAX + 0x17) & 0x1f) == 0x13)) {\n                *(*0x20 + -0x98) = in_XMM15;\n                *(*0x20 + -0x88) = in_XMM15;\n                *(*0x20 + -0x78) = in_XMM15;\n                *(*0x20 + -0x68) = in_XMM15;\n                if ((*(in_RAX + 0x14) & 1) == 0) {\n                    iVar6 = 0x38;\n                }\n                else {\n                    iVar6 = 0x48;\n                }\n                arg1_00 = *(in_RAX + 0x30);\n                if (arg1_00 < 0x100001) {\n                    *(*0x20 + -0xb0) = in_RAX;\n                    *(*0x20 + -0xc0) = iVar6 + in_RAX;\n                    *(*0x20 + -0xb8) = unaff_RBX;\n                    *(*0x20 + -200) = arg1_00;\n                    iVar6 = 0;\n                    while (iVar6 < arg1_00) {\n                        *(*0x20 + -0xd0) = iVar6;\n                        *(*0x20 + -0x100) = 0x455016;\n                        fcn.00448960();\n                        in_RAX = *(*0x20 + -0xb0);\n                        arg1_00 = *(*0x20 + -200);\n                        iVar6 = *(*0x20 + -0xd0) + 1;\n                    }\n                    arg2 = *(*0x20 + -0x78) + 7U & 0xfffffffffffffff8;\n                    *(*0x20 + -0x78) = arg2;\n                    *(*0x20 + -0x60) = arg2;\n                    uVar1 = *(in_RAX + 0x30);\n                    piVar9 = uVar1;\n                    arg1_00 = (*(in_RAX + 0x32) & 0x7fff) + uVar1;\n                    arg1 = arg1_00 & 0xffff;\n                    if (piVar9 <= arg1) {\n                        arg4 = uVar1;\n                        arg3 = piVar9 << 3;\n                        arg1_00 = piVar9 + -0x20000 >> 0x3f & arg3;\n                        arg1 = arg1 - arg4;\n                        if (arg1 == 0x1) {\n                            if ((*(in_RAX + 0x14) & 1) == 0) {\n                                iVar6 = 0x38;\n                            }\n                            else {\n                                iVar6 = 0x48;\n                            }\n                            arg1 = *(arg1_00 + iVar6 + in_RAX);\n                            if (*arg1 == 8) {\n                                if ((*(in_RAX + 0x14) & 1) == 0) {\n                                    iVar6 = 0x38;\n                                }\n                                else {\n                                    iVar6 = 0x48;\n                                }\n                                uVar5 = *(*(arg1_00 + iVar6 + in_RAX) + 0x17) & 0x1f;\n                                arg1 = uVar5;\n                                cVar4 = uVar5;\n                                if ((cVar4 != '\\r') && (cVar4 != '\\x0e')) {\n                                    if (*0x4f0268 == 0) {\n                                        *(*0x20 + -0x78) = arg2 + 8;\n                                    }\n                                    arg1 = (*(*0x20 + -0x78) + 7U & 0xfffffffffffffff8) + *(*0x20 + -0x70);\n                                    if (arg1 < 0x201) {\n                                        *(*0x20 + -0x100) = 0x45515b;\n                                        fcn.00409300();\n                                        iVar6 = *0x557c48;\n                                        *(*0x20 + -0xa8) = *(*0x20 + -0xb8);\n                                        *(*0x20 + -0xa0) = 0;\n                                        *(*0x20 + -0x100) = 0x455185;\n                                        ppiVar2 = fcn.0040c380(*0x20 + -0xa8);\n                                        arg1 = *ppiVar2;\n                                        if (iVar6 != '\\0') {\n                                            *(*0x20 + -0xd8) = arg1;\n                                            *(*0x20 + -0x100) = 0x455328;\n                                            fcn.00409520();\n                                            return *(*0x20 + -0xd8) * 5 + CONCAT71(*0x48a3f1, *0x48a3f0);\n                                        }\n                                        iVar6 = *0x557c48;\n                                        if (*0x557c48 == 0) {\n                                            *(*0x20 + -0x100) = 0x45519f;\n                                            iVar6 = fcn.0040bee0();\n                                            if (*0x557ed0 != 0) {\n                                                arg1_00 = 0x557c48;\n                                                *(*0x20 + -0x100) = 0x4551bd;\n                                                fcn.00459280(arg1, arg2, arg3, arg4);\n                                                iVar6 = *0x557c48;\n                                            }\n                                        }\n                                        *0x557c48 = iVar6;\n                                        bVar10 = *0x557c50 < 2000;\n                                        if (*0x557c50 < 2000) {\n                                            arg1_00 = *0x20 + -0x88;\n                                            *(*0x20 + -0x108) = unaff_RBP;\n                                            *(*0x20 + -0x100) = 0x4551ef;\n                                            iVar6 = fcn.004599b0();\n                                            unaff_RBP = *(*0x20 + -0x108);\n                                            uVar7 = *(*0x20 + -0xb8);\n                                            *(*0x20 + -0x58) = uVar7;\n                                            *(*0x20 + -0x48) = *(*0x20 + -0x98);\n                                            *(*0x20 + -0x44) = *(*0x20 + -0x94);\n                                            *(*0x20 + -0x40) = *(*0x20 + -0x90);\n                                            *(*0x20 + -0x3c) = *(*0x20 + -0x8c);\n                                            *(*0x20 + -0x38) = *(*0x20 + -0x88);\n                                            *(*0x20 + -0x34) = *(*0x20 + -0x84);\n                                            *(*0x20 + -0x30) = *(*0x20 + -0x80);\n                                            *(*0x20 + -0x2c) = *(*0x20 + -0x7c);\n                                            *(*0x20 + -0x28) = *(*0x20 + -0x78);\n                                            *(*0x20 + -0x24) = *(*0x20 + -0x74);\n                                            *(*0x20 + -0x20) = *(*0x20 + -0x70);\n                                            *(*0x20 + -0x1c) = *(*0x20 + -0x6c);\n                                            *(*0x20 + -0x18) = *(*0x20 + -0x68);\n                                            *(*0x20 + -0x14) = *(*0x20 + -100);\n                                            *(*0x20 + -0x10) = *(*0x20 + -0x60);\n                                            *(*0x20 + -0xc) = *(*0x20 + -0x5c);\n                                            if (bVar10) {\n                                                *(*0x20 + -0xe0) = iVar6;\n                                                *(*0x20 + -200) = iVar6 * 5;\n                                                if (*0x557ed0 == 0) {\n                                                    *(*0x20 + -0x108) = unaff_RBP;\n                                                    *(*0x20 + -0x100) = 0x45528f;\n                                                    fcn.00459d1a();\n                                                }\n                                                else {\n                                                    *(*0x20 + -0x100) = 0x4552ac;\n                                                    fcn.0040eb60(*0x20 + -0x58);\n                                                    uVar7 = *(*0x20 + -0xb8);\n                                                }\n                                                *(*0x20 + -0xa8) = uVar7;\n                                                *(*0x20 + -0xa0) = 0;\n                                                *(*0x20 + -0x100) = 0x4552d3;\n                                                puVar3 = fcn.0040c5c0(*0x20 + -0xa8);\n                                                *puVar3 = *(*0x20 + -0xe0);\n                                                *0x557c50 = *0x557c50 + 1;\n                                                *(*0x20 + -0x100) = 0x4552f0;\n                                                fcn.00409520();\n                                                return *(*0x20 + -200) + CONCAT71(*0x48a3f1, *0x48a3f0);\n                                            }\n                                            arg1 = 0x7d0;\n                                            *(*0x20 + -0x100) = 0x45535b;\n                                            fcn.00459720(2000);\n                                        }\n                                        *(*0x20 + -0x100) = 0x455369;\n                                        fcn.00409520();\n                                        *(*0x20 + -0x100) = 0x45537a;\n                                        fcn.00430d40();\n                                    }\n                                    *(*0x20 + -0x100) = 0x45538d;\n                                    fcn.004305a0();\n                                }\n                                *(*0x20 + -0x100) = 0x4553a5;\n                                fcn.004305a0();\n                            }\n                            *(*0x20 + -0x100) = 0x4553b8;\n                            fcn.004305a0();\n                        }\n                        *(*0x20 + -0x100) = 0x4553cb;\n                        fcn.004305a0();\n                    }\n                    *(*0x20 + -0x100) = 0x4553d3;\n                    fcn.004597e0(arg1);\n                }\n                *(*0x20 + -0x100) = 0x4553e5;\n                fcn.00459760(arg1_00, 0x100000);\n                param_1 = SUB81(arg1_00, 0);\n            }\n            unaff_RBX = 0x49e5b0;\n            *(*0x20 + -0x100) = 0x4553f8;\n            in_RAX = fcn.004305a0();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        puVar8[0x18] = param_1;\n        *(puVar8 + -8) = 0x45540c;\n        fcn.00457040();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        param_1 = puVar8[0x18];\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 2805
    },
    "00455440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00455440(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    uint64_t uStackX8;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    ulong uStackX32;\n    uchar auStack32 [16];\n    uint uStack16;\n    \n    iStackX24 = 0;\n    uStackX32 = 0;\n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30) + 0x244;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    *(*(iVar2 + 0x30) + 0x138) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    if (*0x557c74 == '\\0') {\n        *(iVar2 + 0x2e0) = _sym.imp.kernel32.dll_LoadLibraryW;\n        *(iVar2 + 0x2e8) = 1;\n        *(iVar2 + 0x2f0) = auStackX16;\n    }\n    else {\n        *(iVar2 + 0x2e0) = *0x503590;\n        *(iVar2 + 0x2e8) = 3;\n        auStack32 = ZEXT816(uStackX8);\n        uStack16 = 0x800;\n        *(iVar2 + 0x2f0) = auStack32;\n    }\n    fcn.00402a00();\n    iStackX24 = *(iVar2 + 0x2f8);\n    if (iStackX24 == 0) {\n        uStackX32 = *(iVar2 + 0x308);\n    }\n    fcn.0043c080();\n    return;\n}\n",
        "token_count": 445
    },
    "00458e80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00458e80(void)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint uVar4;\n    code *pcVar5;\n    int64_t *piVar6;\n    uint64_t uVar7;\n    int64_t in_GS_OFFSET;\n    code *pcStackX8;\n    ulong uStackX16;\n    \n    piVar6 = *(in_GS_OFFSET + 0x28);\n    if (*piVar6 != 0) {\n        piVar1 = *(*piVar6 + 0x30);\n        iVar2 = *piVar6;\n        if ((*piVar1 != iVar2) && (piVar1[10] != iVar2)) {\n            iVar3 = *piVar1;\n            pcVar5 = fcn.00456100();\n            *piVar6 = iVar3;\n            uVar7 = *(iVar3 + 0x38) - 0x40U & 0xfffffffffffffff0;\n            *(uVar7 + 0x30) = iVar2;\n            *(uVar7 + 0x28) = *(iVar2 + 8) - *0x20;\n            *(uVar7 - 8) = 0x458ef3;\n            uVar4 = (*pcVar5)(uStackX16);\n            iVar2 = *(*(uVar7 + 0x30) + 8);\n            iVar3 = *(uVar7 + 0x28);\n            **(in_GS_OFFSET + 0x28) = *(uVar7 + 0x30);\n            *((iVar2 - iVar3) + 0x18) = uVar4;\n            return;\n        }\n    }\n    uVar4 = (*pcStackX8)(uStackX16);\n    *(*0x20 + 0x18) = uVar4;\n    return;\n}\n",
        "token_count": 412
    },
    "00458f60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00458f60(void)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    int64_t in_GS_OFFSET;\n    ulong uStackX8;\n    ulong uStackX16;\n    ulong uStackX24;\n    ulong uStack32;\n    int64_t *piStack16;\n    \n    piVar3 = *(in_GS_OFFSET + 0x28);\n    iVar4 = 0;\n    if (piVar3 != NULL) {\n        iVar4 = *piVar3;\n    }\n    if (iVar4 == 0) {\n        fcn.0045aec0();\n        (*0x4364e0)();\n        piStack16 = NULL;\n        piVar3 = *(in_GS_OFFSET + 0x28);\n        piVar5 = *(*piVar3 + 0x30);\n        *(*piVar5 + 0x38) = &stack0xffffffffffffffe0;\n    }\n    else {\n        piVar5 = *(iVar4 + 0x30);\n        piStack16 = piVar5;\n    }\n    uStack32 = *(*piVar5 + 0x38);\n    *(*piVar5 + 0x38) = &stack0xffffffffffffffe0;\n    iVar4 = piVar5[0x12];\n    *piVar3 = iVar4;\n    iVar1 = *(iVar4 + 0x38);\n    *(iVar1 + -8) = *(iVar4 + 0x40);\n    *(iVar1 + -0x28) = uStackX8;\n    *(iVar1 + -0x20) = uStackX16;\n    *(iVar1 + -0x18) = uStackX24;\n    *(iVar1 + -0x30) = 0x459037;\n    (*0x45b120)();\n    piVar3 = *(in_GS_OFFSET + 0x28);\n    iVar4 = *piVar3;\n    *(iVar4 + 0x40) = *(iVar1 + -8);\n    *(iVar4 + 0x38) = iVar1;\n    iVar4 = **(*piVar3 + 0x30);\n    *piVar3 = iVar4;\n    puVar2 = *(iVar4 + 0x38);\n    *(iVar4 + 0x38) = *puVar2;\n    if (puVar2[2] == 0) {\n        puVar2[-1] = 0x459096;\n        (*0x45b4c0)();\n        puVar2[-1] = 0x45909e;\n        fcn.0045aec0();\n    }\n    return;\n}\n",
        "token_count": 596
    },
    "00459140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00459140(ulong noname_0, ulong arg2)\n\n{\n    rdtsc();\n    return;\n}\n",
        "token_count": 29
    },
    "00459160": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop",
            "encrypt data using AES via x86 extensions"
        ],
        "decompiled_code": "\nuint64_t fcn.00459160(uint64_t arg1)\n\n{\n    uchar (*in_RAX) [16];\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uchar auVar5 [16];\n    uchar auVar6 [16];\n    uchar auVar7 [16];\n    uchar auVar8 [16];\n    uchar auVar9 [16];\n    uchar auVar10 [16];\n    uchar auVar11 [16];\n    uchar auVar12 [16];\n    uchar auVar13 [16];\n    \n    if (*0x557c72 == '\\0') {\n        uVar1 = unaff_RBX ^ *0x557f00 ^ 0xa0761d6478bd642f;\n        if (arg1 == 0) {\n            return uVar1;\n        }\n        if (arg1 < 4) {\n            uVar2 = CONCAT12(in_RAX[-1][arg1 + 0xf], CONCAT11((*in_RAX)[arg1 >> 1], (*in_RAX)[0]));\n            uVar3 = 0;\n        }\n        else if (arg1 == 4) {\n            uVar2 = **in_RAX;\n            uVar3 = **in_RAX;\n        }\n        else if (arg1 < 8) {\n            uVar2 = **in_RAX;\n            uVar3 = *(in_RAX[-1] + arg1 + 0xc);\n        }\n        else if (arg1 == 8) {\n            uVar2 = **in_RAX;\n            uVar3 = uVar2;\n        }\n        else if (arg1 < 0x11) {\n            uVar2 = **in_RAX;\n            uVar3 = *(in_RAX[-1] + arg1 + 8);\n        }\n        else {\n            uVar3 = arg1;\n            uVar2 = uVar1;\n            uVar4 = uVar1;\n            if (0x30 < arg1) {\n                for (; 0x30 < uVar3; uVar3 = uVar3 - 0x30) {\n                    auVar5 = ZEXT816(*(*in_RAX + 8) ^ uVar1) * ZEXT816(**in_RAX ^ 0xe7037ed1a0b428db);\n                    auVar6 = ZEXT816(*(in_RAX[1] + 8) ^ uVar2) * ZEXT816(*in_RAX[1] ^ 0x8ebc6af09c88c6e3);\n                    auVar7 = ZEXT816(*(in_RAX[2] + 8) ^ uVar4) * ZEXT816(*in_RAX[2] ^ 0x589965cc75374cc3);\n                    uVar1 = SUB168(auVar5, 0) ^ SUB168(auVar5 >> 0x40, 0);\n                    in_RAX = in_RAX[3];\n                    uVar2 = SUB168(auVar6, 0) ^ SUB168(auVar6 >> 0x40, 0);\n                    uVar4 = SUB168(auVar7, 0) ^ SUB168(auVar7 >> 0x40, 0);\n                }\n                uVar1 = uVar1 ^ uVar2 ^ uVar4;\n            }\n            for (; 0x10 < uVar3; uVar3 = uVar3 - 0x10) {\n                auVar5 = ZEXT816(*(*in_RAX + 8) ^ uVar1) * ZEXT816(**in_RAX ^ 0xe7037ed1a0b428db);\n                uVar1 = SUB168(auVar5, 0) ^ SUB168(auVar5 >> 0x40, 0);\n                in_RAX = in_RAX[1];\n            }\n            uVar2 = *(in_RAX[-1] + uVar3);\n            uVar3 = *(in_RAX[-1] + uVar3 + 8);\n        }\n        auVar5 = ZEXT816(uVar3 ^ uVar1) * ZEXT816(uVar2 ^ 0xe7037ed1a0b428db);\n        auVar5 = ZEXT816(SUB168(auVar5, 0) ^ SUB168(auVar5 >> 0x40, 0)) * ZEXT816(arg1 ^ 0x1d8e4e27c47d124f);\n        return SUB168(auVar5, 0) ^ SUB168(auVar5 >> 0x40, 0);\n    }\n    auVar5 = pinsrw(ZEXT816(unaff_RBX), arg1, 4);\n    auVar5 = pshufhw(auVar5, auVar5, 0);\n    auVar6 = aesenc(auVar5 ^ *0x558180, auVar5 ^ *0x558180);\n    if (arg1 < 0x10) {\n        if (arg1 == 0) {\n            auVar5 = aesenc(auVar6, auVar6);\n            return SUB168(auVar5, 0);\n        }\n        if ((in_RAX[1] & 0xff0) == 0) {\n            auVar5 = pshufb(*(in_RAX[-1] + arg1), *(arg1 * 0x10 + 0x49fd60));\n        }\n        else {\n            auVar5 = *in_RAX & *(arg1 * 0x10 + 0x49fc60);\n        }\n    }\n    else {\n        if (arg1 != 0x10) {\n            if (arg1 < 0x21) {\n                auVar5 = aesenc(auVar5 ^ *0x558190, auVar5 ^ *0x558190);\n                auVar5 = *(in_RAX[-1] + arg1) ^ auVar5;\n                auVar6 = aesenc(*in_RAX ^ auVar6, *in_RAX ^ auVar6);\n                auVar7 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar6 = aesenc(auVar7, auVar7);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                return SUB168(auVar5, 0) ^ SUB168(auVar6, 0);\n            }\n            if (arg1 < 0x41) {\n                auVar7 = aesenc(auVar5 ^ *0x558190, auVar5 ^ *0x558190);\n                auVar8 = aesenc(auVar5 ^ *0x5581a0, auVar5 ^ *0x5581a0);\n                auVar5 = aesenc(auVar5 ^ *0x5581b0, auVar5 ^ *0x5581b0);\n                auVar8 = *(in_RAX[-2] + arg1) ^ auVar8;\n                auVar5 = *(in_RAX[-1] + arg1) ^ auVar5;\n                auVar6 = aesenc(*in_RAX ^ auVar6, *in_RAX ^ auVar6);\n                auVar7 = aesenc(in_RAX[1] ^ auVar7, in_RAX[1] ^ auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                auVar9 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar6 = aesenc(auVar7, auVar7);\n                auVar7 = aesenc(auVar8, auVar8);\n                auVar8 = aesenc(auVar9, auVar9);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                return SUB168(auVar5, 0) ^ SUB168(auVar7, 0) ^ SUB168(auVar6, 0) ^ SUB168(auVar8, 0);\n            }\n            if (arg1 < 0x81) {\n                auVar7 = aesenc(auVar5 ^ *0x558190, auVar5 ^ *0x558190);\n                auVar8 = aesenc(auVar5 ^ *0x5581a0, auVar5 ^ *0x5581a0);\n                auVar9 = aesenc(auVar5 ^ *0x5581b0, auVar5 ^ *0x5581b0);\n                auVar10 = aesenc(auVar5 ^ *0x5581c0, auVar5 ^ *0x5581c0);\n                auVar11 = aesenc(auVar5 ^ *0x5581d0, auVar5 ^ *0x5581d0);\n                auVar12 = aesenc(auVar5 ^ *0x5581e0, auVar5 ^ *0x5581e0);\n                auVar5 = aesenc(auVar5 ^ *0x5581f0, auVar5 ^ *0x5581f0);\n                auVar10 = *(in_RAX[-4] + arg1) ^ auVar10;\n                auVar11 = *(in_RAX[-3] + arg1) ^ auVar11;\n                auVar12 = *(in_RAX[-2] + arg1) ^ auVar12;\n                auVar5 = *(in_RAX[-1] + arg1) ^ auVar5;\n                auVar6 = aesenc(*in_RAX ^ auVar6, *in_RAX ^ auVar6);\n                auVar7 = aesenc(in_RAX[1] ^ auVar7, in_RAX[1] ^ auVar7);\n                auVar8 = aesenc(in_RAX[2] ^ auVar8, in_RAX[2] ^ auVar8);\n                auVar9 = aesenc(in_RAX[3] ^ auVar9, in_RAX[3] ^ auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                auVar12 = aesenc(auVar12, auVar12);\n                auVar13 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar6 = aesenc(auVar7, auVar7);\n                auVar7 = aesenc(auVar8, auVar8);\n                auVar8 = aesenc(auVar9, auVar9);\n                auVar9 = aesenc(auVar10, auVar10);\n                auVar10 = aesenc(auVar11, auVar11);\n                auVar11 = aesenc(auVar12, auVar12);\n                auVar12 = aesenc(auVar13, auVar13);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                auVar9 = aesenc(auVar9, auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                auVar12 = aesenc(auVar12, auVar12);\n                return SUB168(auVar5, 0) ^ SUB168(auVar9, 0) ^ SUB168(auVar7, 0) ^ SUB168(auVar11, 0) ^\n                       SUB168(auVar6, 0) ^ SUB168(auVar10, 0) ^ SUB168(auVar8, 0) ^ SUB168(auVar12, 0);\n            }\n            auVar7 = aesenc(auVar5 ^ *0x558190, auVar5 ^ *0x558190);\n            auVar8 = aesenc(auVar5 ^ *0x5581a0, auVar5 ^ *0x5581a0);\n            auVar9 = aesenc(auVar5 ^ *0x5581b0, auVar5 ^ *0x5581b0);\n            auVar10 = aesenc(auVar5 ^ *0x5581c0, auVar5 ^ *0x5581c0);\n            auVar11 = aesenc(auVar5 ^ *0x5581d0, auVar5 ^ *0x5581d0);\n            auVar12 = aesenc(auVar5 ^ *0x5581e0, auVar5 ^ *0x5581e0);\n            auVar5 = aesenc(auVar5 ^ *0x5581f0, auVar5 ^ *0x5581f0);\n            auVar6 = *(in_RAX[-8] + arg1) ^ auVar6;\n            auVar7 = *(in_RAX[-7] + arg1) ^ auVar7;\n            auVar8 = *(in_RAX[-6] + arg1) ^ auVar8;\n            auVar9 = *(in_RAX[-5] + arg1) ^ auVar9;\n            auVar10 = *(in_RAX[-4] + arg1) ^ auVar10;\n            auVar11 = *(in_RAX[-3] + arg1) ^ auVar11;\n            auVar12 = *(in_RAX[-2] + arg1) ^ auVar12;\n            auVar5 = *(in_RAX[-1] + arg1) ^ auVar5;\n            uVar1 = arg1 - 1 >> 7;\n            do {\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                auVar9 = aesenc(auVar9, auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                auVar12 = aesenc(auVar12, auVar12);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, *in_RAX);\n                auVar7 = aesenc(auVar7, in_RAX[1]);\n                auVar8 = aesenc(auVar8, in_RAX[2]);\n                auVar9 = aesenc(auVar9, in_RAX[3]);\n                auVar10 = aesenc(auVar10, in_RAX[4]);\n                auVar11 = aesenc(auVar11, in_RAX[5]);\n                auVar12 = aesenc(auVar12, in_RAX[6]);\n                auVar5 = aesenc(auVar5, in_RAX[7]);\n                in_RAX = in_RAX[8];\n                uVar1 = uVar1 - 1;\n            } while (uVar1 != 0);\n            auVar6 = aesenc(auVar6, auVar6);\n            auVar7 = aesenc(auVar7, auVar7);\n            auVar8 = aesenc(auVar8, auVar8);\n            auVar9 = aesenc(auVar9, auVar9);\n            auVar10 = aesenc(auVar10, auVar10);\n            auVar11 = aesenc(auVar11, auVar11);\n            auVar12 = aesenc(auVar12, auVar12);\n            auVar13 = aesenc(auVar5, auVar5);\n            auVar5 = aesenc(auVar6, auVar6);\n            auVar6 = aesenc(auVar7, auVar7);\n            auVar7 = aesenc(auVar8, auVar8);\n            auVar8 = aesenc(auVar9, auVar9);\n            auVar9 = aesenc(auVar10, auVar10);\n            auVar10 = aesenc(auVar11, auVar11);\n            auVar11 = aesenc(auVar12, auVar12);\n            auVar12 = aesenc(auVar13, auVar13);\n            auVar5 = aesenc(auVar5, auVar5);\n            auVar6 = aesenc(auVar6, auVar6);\n            auVar7 = aesenc(auVar7, auVar7);\n            auVar8 = aesenc(auVar8, auVar8);\n            auVar9 = aesenc(auVar9, auVar9);\n            auVar10 = aesenc(auVar10, auVar10);\n            auVar11 = aesenc(auVar11, auVar11);\n            auVar12 = aesenc(auVar12, auVar12);\n            return SUB168(auVar5, 0) ^ SUB168(auVar9, 0) ^ SUB168(auVar7, 0) ^ SUB168(auVar11, 0) ^\n                   SUB168(auVar6, 0) ^ SUB168(auVar10, 0) ^ SUB168(auVar8, 0) ^ SUB168(auVar12, 0);\n        }\n        auVar5 = *in_RAX;\n    }\n    auVar5 = aesenc(auVar5 ^ auVar6, auVar5 ^ auVar6);\n    auVar5 = aesenc(auVar5, auVar5);\n    auVar5 = aesenc(auVar5, auVar5);\n    return SUB168(auVar5, 0);\n}\n",
        "token_count": 3958
    },
    "004591e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "encrypt data using AES via x86 extensions"
        ],
        "decompiled_code": "\nuint64_t fcn.004591e0(void)\n\n{\n    uint64_t *in_RAX;\n    uint64_t unaff_RBX;\n    uchar auVar1 [16];\n    \n    if (*0x557c72 != '\\0') {\n        auVar1 = pinsrq(ZEXT816(unaff_RBX), *in_RAX, 1);\n        auVar1 = aesenc(auVar1, *0x558180);\n        auVar1 = aesenc(auVar1, *0x558190);\n        auVar1 = aesenc(auVar1, *0x5581a0);\n        return SUB168(auVar1, 0);\n    }\n    auVar1 = ZEXT816(*in_RAX ^ 0xe7037ed1a0b428db) * ZEXT816(*in_RAX ^ unaff_RBX ^ *0x557f00 ^ 0xa0761d6478bd642f);\n    auVar1 = ZEXT816(0x1d8e4e27c47d1247) * ZEXT816(SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0));\n    return SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n}\n",
        "token_count": 290
    },
    "00459d80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00459d80(void)\n\n{\n    uint *puVar1;\n    uchar auVar2 [32];\n    uchar (*in_RAX) [32];\n    uint64_t unaff_RBX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uchar (*pauVar5) [32];\n    uchar (*pauVar6) [32];\n    uchar in_YMM0 [32];\n    uchar auVar7 [32];\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    while( true ) {\n        if (unaff_RBX == 0) {\n            return;\n        }\n        if (unaff_RBX < 3) {\n            (*in_RAX)[0] = 0;\n            in_RAX[-1][unaff_RBX + 0x1f] = 0;\n            return;\n        }\n        if (unaff_RBX < 5) {\n            **in_RAX = 0;\n            *(in_RAX[-1] + unaff_RBX + 0x1e) = 0;\n            return;\n        }\n        if (unaff_RBX < 8) {\n            **in_RAX = 0;\n            *(in_RAX[-1] + unaff_RBX + 0x1c) = 0;\n            return;\n        }\n        if (unaff_RBX == 8) {\n            **in_RAX = 0;\n            return;\n        }\n        if (unaff_RBX < 0x11) {\n            **in_RAX = 0;\n            *(in_RAX[-1] + unaff_RBX + 0x18) = 0;\n            return;\n        }\n        if (unaff_RBX < 0x21) {\n            **in_RAX = in_XMM15_Da;\n            *(*in_RAX + 4) = in_XMM15_Db;\n            *(*in_RAX + 8) = in_XMM15_Dc;\n            *(*in_RAX + 0xc) = in_XMM15_Dd;\n            puVar1 = in_RAX[-1] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            return;\n        }\n        if (unaff_RBX < 0x41) break;\n        if (unaff_RBX < 0x81) {\n            **in_RAX = in_XMM15_Da;\n            *(*in_RAX + 4) = in_XMM15_Db;\n            *(*in_RAX + 8) = in_XMM15_Dc;\n            *(*in_RAX + 0xc) = in_XMM15_Dd;\n            *(*in_RAX + 0x10) = in_XMM15_Da;\n            *(*in_RAX + 0x14) = in_XMM15_Db;\n            *(*in_RAX + 0x18) = in_XMM15_Dc;\n            *(*in_RAX + 0x1c) = in_XMM15_Dd;\n            *in_RAX[1] = in_XMM15_Da;\n            *(in_RAX[1] + 4) = in_XMM15_Db;\n            *(in_RAX[1] + 8) = in_XMM15_Dc;\n            *(in_RAX[1] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[1] + 0x10) = in_XMM15_Da;\n            *(in_RAX[1] + 0x14) = in_XMM15_Db;\n            *(in_RAX[1] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[1] + 0x1c) = in_XMM15_Dd;\n            puVar1 = in_RAX[-2] + unaff_RBX;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-2] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-1] + unaff_RBX;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-1] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            return;\n        }\n        if (unaff_RBX < 0x101) {\n            **in_RAX = in_XMM15_Da;\n            *(*in_RAX + 4) = in_XMM15_Db;\n            *(*in_RAX + 8) = in_XMM15_Dc;\n            *(*in_RAX + 0xc) = in_XMM15_Dd;\n            *(*in_RAX + 0x10) = in_XMM15_Da;\n            *(*in_RAX + 0x14) = in_XMM15_Db;\n            *(*in_RAX + 0x18) = in_XMM15_Dc;\n            *(*in_RAX + 0x1c) = in_XMM15_Dd;\n            *in_RAX[1] = in_XMM15_Da;\n            *(in_RAX[1] + 4) = in_XMM15_Db;\n            *(in_RAX[1] + 8) = in_XMM15_Dc;\n            *(in_RAX[1] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[1] + 0x10) = in_XMM15_Da;\n            *(in_RAX[1] + 0x14) = in_XMM15_Db;\n            *(in_RAX[1] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[1] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[2] = in_XMM15_Da;\n            *(in_RAX[2] + 4) = in_XMM15_Db;\n            *(in_RAX[2] + 8) = in_XMM15_Dc;\n            *(in_RAX[2] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[2] + 0x10) = in_XMM15_Da;\n            *(in_RAX[2] + 0x14) = in_XMM15_Db;\n            *(in_RAX[2] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[2] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[3] = in_XMM15_Da;\n            *(in_RAX[3] + 4) = in_XMM15_Db;\n            *(in_RAX[3] + 8) = in_XMM15_Dc;\n            *(in_RAX[3] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[3] + 0x10) = in_XMM15_Da;\n            *(in_RAX[3] + 0x14) = in_XMM15_Db;\n            *(in_RAX[3] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[3] + 0x1c) = in_XMM15_Dd;\n            puVar1 = in_RAX[-4] + unaff_RBX;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-4] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-3] + unaff_RBX;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-3] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-2] + unaff_RBX;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-2] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-1] + unaff_RBX;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-1] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            return;\n        }\n        if (*0x5584a3 == '\\x01') {\n            auVar7 = vpxor_avx2(in_YMM0, in_YMM0);\n            if (0x1ffffff < unaff_RBX) {\n                auVar2 = vmovdqu_avx(auVar7);\n                *in_RAX = auVar2;\n                uVar3 = in_RAX + (unaff_RBX - (in_RAX[1] & 0xffffffffffffffe0));\n                pauVar5 = in_RAX[1] & 0xffffffffffffffe0;\n                do {\n                    pauVar6 = pauVar5;\n                    uVar4 = uVar3;\n                    auVar2 = vmovntdq_avx(auVar7);\n                    *pauVar6 = auVar2;\n                    auVar2 = vmovntdq_avx(auVar7);\n                    pauVar6[1] = auVar2;\n                    auVar2 = vmovntdq_avx(auVar7);\n                    pauVar6[2] = auVar2;\n                    auVar2 = vmovntdq_avx(auVar7);\n                    pauVar6[3] = auVar2;\n                    uVar3 = uVar4 - 0x80;\n                    pauVar5 = pauVar6[4];\n                } while (0x7f < uVar4 - 0x80);\n                auVar2 = vmovdqu_avx(auVar7);\n                *(pauVar6[-1] + uVar4) = auVar2;\n                auVar2 = vmovdqu_avx(auVar7);\n                *(pauVar6[-2] + uVar4) = auVar2;\n                auVar2 = vmovdqu_avx(auVar7);\n                *(pauVar6[-3] + uVar4) = auVar2;\n                auVar7 = vmovdqu_avx(auVar7);\n                *(pauVar6[-4] + uVar4) = auVar7;\n                vzeroupper_avx();\n                return;\n            }\n            do {\n                pauVar5 = in_RAX;\n                uVar3 = unaff_RBX;\n                auVar2 = vmovdqu_avx(auVar7);\n                *pauVar5 = auVar2;\n                auVar2 = vmovdqu_avx(auVar7);\n                pauVar5[1] = auVar2;\n                auVar2 = vmovdqu_avx(auVar7);\n                pauVar5[2] = auVar2;\n                auVar2 = vmovdqu_avx(auVar7);\n                pauVar5[3] = auVar2;\n                unaff_RBX = uVar3 - 0x80;\n                in_RAX = pauVar5[4];\n            } while (0x7f < uVar3 - 0x80);\n            auVar2 = vmovdqu_avx(auVar7);\n            *(pauVar5[-1] + uVar3) = auVar2;\n            auVar2 = vmovdqu_avx(auVar7);\n            *(pauVar5[-2] + uVar3) = auVar2;\n            auVar2 = vmovdqu_avx(auVar7);\n            *(pauVar5[-3] + uVar3) = auVar2;\n            auVar7 = vmovdqu_avx(auVar7);\n            *(pauVar5[-4] + uVar3) = auVar7;\n            vzeroupper_avx();\n            return;\n        }\n        do {\n            **in_RAX = in_XMM15_Da;\n            *(*in_RAX + 4) = in_XMM15_Db;\n            *(*in_RAX + 8) = in_XMM15_Dc;\n            *(*in_RAX + 0xc) = in_XMM15_Dd;\n            *(*in_RAX + 0x10) = in_XMM15_Da;\n            *(*in_RAX + 0x14) = in_XMM15_Db;\n            *(*in_RAX + 0x18) = in_XMM15_Dc;\n            *(*in_RAX + 0x1c) = in_XMM15_Dd;\n            *in_RAX[1] = in_XMM15_Da;\n            *(in_RAX[1] + 4) = in_XMM15_Db;\n            *(in_RAX[1] + 8) = in_XMM15_Dc;\n            *(in_RAX[1] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[1] + 0x10) = in_XMM15_Da;\n            *(in_RAX[1] + 0x14) = in_XMM15_Db;\n            *(in_RAX[1] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[1] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[2] = in_XMM15_Da;\n            *(in_RAX[2] + 4) = in_XMM15_Db;\n            *(in_RAX[2] + 8) = in_XMM15_Dc;\n            *(in_RAX[2] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[2] + 0x10) = in_XMM15_Da;\n            *(in_RAX[2] + 0x14) = in_XMM15_Db;\n            *(in_RAX[2] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[2] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[3] = in_XMM15_Da;\n            *(in_RAX[3] + 4) = in_XMM15_Db;\n            *(in_RAX[3] + 8) = in_XMM15_Dc;\n            *(in_RAX[3] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[3] + 0x10) = in_XMM15_Da;\n            *(in_RAX[3] + 0x14) = in_XMM15_Db;\n            *(in_RAX[3] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[3] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[4] = in_XMM15_Da;\n            *(in_RAX[4] + 4) = in_XMM15_Db;\n            *(in_RAX[4] + 8) = in_XMM15_Dc;\n            *(in_RAX[4] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[4] + 0x10) = in_XMM15_Da;\n            *(in_RAX[4] + 0x14) = in_XMM15_Db;\n            *(in_RAX[4] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[4] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[5] = in_XMM15_Da;\n            *(in_RAX[5] + 4) = in_XMM15_Db;\n            *(in_RAX[5] + 8) = in_XMM15_Dc;\n            *(in_RAX[5] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[5] + 0x10) = in_XMM15_Da;\n            *(in_RAX[5] + 0x14) = in_XMM15_Db;\n            *(in_RAX[5] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[5] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[6] = in_XMM15_Da;\n            *(in_RAX[6] + 4) = in_XMM15_Db;\n            *(in_RAX[6] + 8) = in_XMM15_Dc;\n            *(in_RAX[6] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[6] + 0x10) = in_XMM15_Da;\n            *(in_RAX[6] + 0x14) = in_XMM15_Db;\n            *(in_RAX[6] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[6] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[7] = in_XMM15_Da;\n            *(in_RAX[7] + 4) = in_XMM15_Db;\n            *(in_RAX[7] + 8) = in_XMM15_Dc;\n            *(in_RAX[7] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[7] + 0x10) = in_XMM15_Da;\n            *(in_RAX[7] + 0x14) = in_XMM15_Db;\n            *(in_RAX[7] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[7] + 0x1c) = in_XMM15_Dd;\n            unaff_RBX = unaff_RBX - 0x100;\n            in_RAX = in_RAX[8];\n        } while (0xff < unaff_RBX);\n    }\n    **in_RAX = in_XMM15_Da;\n    *(*in_RAX + 4) = in_XMM15_Db;\n    *(*in_RAX + 8) = in_XMM15_Dc;\n    *(*in_RAX + 0xc) = in_XMM15_Dd;\n    *(*in_RAX + 0x10) = in_XMM15_Da;\n    *(*in_RAX + 0x14) = in_XMM15_Db;\n    *(*in_RAX + 0x18) = in_XMM15_Dc;\n    *(*in_RAX + 0x1c) = in_XMM15_Dd;\n    puVar1 = in_RAX[-1] + unaff_RBX;\n    *puVar1 = in_XMM15_Da;\n    puVar1[1] = in_XMM15_Db;\n    puVar1[2] = in_XMM15_Dc;\n    puVar1[3] = in_XMM15_Dd;\n    puVar1 = in_RAX[-1] + unaff_RBX + 0x10;\n    *puVar1 = in_XMM15_Da;\n    puVar1[1] = in_XMM15_Db;\n    puVar1[2] = in_XMM15_Dc;\n    puVar1[3] = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 4867
    },
    "0045a040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0045a040(uint64_t arg1)\n\n{\n    uint *puVar1;\n    uchar uVar2;\n    uint uVar3;\n    ulong uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    uint uVar17;\n    uint uVar18;\n    uint uVar19;\n    uint uVar20;\n    uint uVar21;\n    uint uVar22;\n    uint uVar23;\n    uint uVar24;\n    uint uVar25;\n    uint uVar26;\n    uint uVar27;\n    uint uVar28;\n    uint uVar29;\n    uint uVar30;\n    uint uVar31;\n    uint uVar32;\n    uint uVar33;\n    uint uVar34;\n    uint uVar35;\n    uint uVar36;\n    uint uVar37;\n    uint uVar38;\n    uint uVar39;\n    uint uVar40;\n    uint uVar41;\n    uint uVar42;\n    uint uVar43;\n    uint uVar44;\n    uint uVar45;\n    uint uVar46;\n    uint uVar47;\n    uint uVar48;\n    uint uVar49;\n    uint uVar50;\n    uint uVar51;\n    uint uVar52;\n    uint uVar53;\n    uint uVar54;\n    uint uVar55;\n    uint uVar56;\n    uint uVar57;\n    uint uVar58;\n    uint uVar59;\n    uint uVar60;\n    uint uVar61;\n    uint uVar62;\n    uint uVar63;\n    uint uVar64;\n    uint uVar65;\n    uint uVar66;\n    uchar (*in_RAX) [32];\n    uint64_t uVar67;\n    uchar (*unaff_RBX) [32];\n    uint64_t uVar68;\n    int64_t iVar69;\n    ulong *puVar70;\n    uchar (*pauVar71) [32];\n    ulong *puVar72;\n    uchar (*pauVar73) [32];\n    uchar (*pauVar74) [32];\n    uchar *puVar75;\n    bool bVar76;\n    uchar auVar77 [32];\n    uchar auVar78 [32];\n    uchar auVar79 [32];\n    uchar auVar80 [32];\n    uchar auVar81 [32];\n    \n    while( true ) {\n        if (arg1 == 0) {\n            return;\n        }\n        if (arg1 < 3) {\n            uVar2 = unaff_RBX[-1][arg1 + 0x1f];\n            (*in_RAX)[0] = (*unaff_RBX)[0];\n            in_RAX[-1][arg1 + 0x1f] = uVar2;\n            return;\n        }\n        if (arg1 < 4) {\n            uVar2 = (*unaff_RBX)[2];\n            **in_RAX = **unaff_RBX;\n            (*in_RAX)[2] = uVar2;\n            return;\n        }\n        if (arg1 < 5) {\n            **in_RAX = **unaff_RBX;\n            return;\n        }\n        if (arg1 < 8) {\n            uVar3 = *(unaff_RBX[-1] + arg1 + 0x1c);\n            **in_RAX = **unaff_RBX;\n            *(in_RAX[-1] + arg1 + 0x1c) = uVar3;\n            return;\n        }\n        if (arg1 == 8) {\n            **in_RAX = **unaff_RBX;\n            return;\n        }\n        if (arg1 < 0x11) {\n            uVar4 = *(unaff_RBX[-1] + arg1 + 0x18);\n            **in_RAX = **unaff_RBX;\n            *(in_RAX[-1] + arg1 + 0x18) = uVar4;\n            return;\n        }\n        if (arg1 < 0x21) break;\n        if (arg1 < 0x41) {\n            uVar3 = *(*unaff_RBX + 4);\n            uVar5 = *(*unaff_RBX + 8);\n            uVar6 = *(*unaff_RBX + 0xc);\n            uVar7 = *(*unaff_RBX + 0x10);\n            uVar8 = *(*unaff_RBX + 0x14);\n            uVar9 = *(*unaff_RBX + 0x18);\n            uVar10 = *(*unaff_RBX + 0x1c);\n            puVar1 = unaff_RBX[-1] + arg1;\n            uVar11 = *puVar1;\n            uVar12 = puVar1[1];\n            uVar13 = puVar1[2];\n            uVar14 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1 + 0x10;\n            uVar15 = *puVar1;\n            uVar16 = puVar1[1];\n            uVar17 = puVar1[2];\n            uVar18 = puVar1[3];\n            **in_RAX = **unaff_RBX;\n            *(*in_RAX + 4) = uVar3;\n            *(*in_RAX + 8) = uVar5;\n            *(*in_RAX + 0xc) = uVar6;\n            *(*in_RAX + 0x10) = uVar7;\n            *(*in_RAX + 0x14) = uVar8;\n            *(*in_RAX + 0x18) = uVar9;\n            *(*in_RAX + 0x1c) = uVar10;\n            puVar1 = in_RAX[-1] + arg1;\n            *puVar1 = uVar11;\n            puVar1[1] = uVar12;\n            puVar1[2] = uVar13;\n            puVar1[3] = uVar14;\n            puVar1 = in_RAX[-1] + arg1 + 0x10;\n            *puVar1 = uVar15;\n            puVar1[1] = uVar16;\n            puVar1[2] = uVar17;\n            puVar1[3] = uVar18;\n            return;\n        }\n        if (arg1 < 0x81) {\n            uVar3 = *(*unaff_RBX + 4);\n            uVar5 = *(*unaff_RBX + 8);\n            uVar6 = *(*unaff_RBX + 0xc);\n            uVar7 = *(*unaff_RBX + 0x10);\n            uVar8 = *(*unaff_RBX + 0x14);\n            uVar9 = *(*unaff_RBX + 0x18);\n            uVar10 = *(*unaff_RBX + 0x1c);\n            uVar11 = *unaff_RBX[1];\n            uVar12 = *(unaff_RBX[1] + 4);\n            uVar13 = *(unaff_RBX[1] + 8);\n            uVar14 = *(unaff_RBX[1] + 0xc);\n            uVar15 = *(unaff_RBX[1] + 0x10);\n            uVar16 = *(unaff_RBX[1] + 0x14);\n            uVar17 = *(unaff_RBX[1] + 0x18);\n            uVar18 = *(unaff_RBX[1] + 0x1c);\n            puVar1 = unaff_RBX[-2] + arg1;\n            uVar19 = *puVar1;\n            uVar20 = puVar1[1];\n            uVar21 = puVar1[2];\n            uVar22 = puVar1[3];\n            puVar1 = unaff_RBX[-2] + arg1 + 0x10;\n            uVar23 = *puVar1;\n            uVar24 = puVar1[1];\n            uVar25 = puVar1[2];\n            uVar26 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1;\n            uVar27 = *puVar1;\n            uVar28 = puVar1[1];\n            uVar29 = puVar1[2];\n            uVar30 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1 + 0x10;\n            uVar31 = *puVar1;\n            uVar32 = puVar1[1];\n            uVar33 = puVar1[2];\n            uVar34 = puVar1[3];\n            **in_RAX = **unaff_RBX;\n            *(*in_RAX + 4) = uVar3;\n            *(*in_RAX + 8) = uVar5;\n            *(*in_RAX + 0xc) = uVar6;\n            *(*in_RAX + 0x10) = uVar7;\n            *(*in_RAX + 0x14) = uVar8;\n            *(*in_RAX + 0x18) = uVar9;\n            *(*in_RAX + 0x1c) = uVar10;\n            *in_RAX[1] = uVar11;\n            *(in_RAX[1] + 4) = uVar12;\n            *(in_RAX[1] + 8) = uVar13;\n            *(in_RAX[1] + 0xc) = uVar14;\n            *(in_RAX[1] + 0x10) = uVar15;\n            *(in_RAX[1] + 0x14) = uVar16;\n            *(in_RAX[1] + 0x18) = uVar17;\n            *(in_RAX[1] + 0x1c) = uVar18;\n            puVar1 = in_RAX[-2] + arg1;\n            *puVar1 = uVar19;\n            puVar1[1] = uVar20;\n            puVar1[2] = uVar21;\n            puVar1[3] = uVar22;\n            puVar1 = in_RAX[-2] + arg1 + 0x10;\n            *puVar1 = uVar23;\n            puVar1[1] = uVar24;\n            puVar1[2] = uVar25;\n            puVar1[3] = uVar26;\n            puVar1 = in_RAX[-1] + arg1;\n            *puVar1 = uVar27;\n            puVar1[1] = uVar28;\n            puVar1[2] = uVar29;\n            puVar1[3] = uVar30;\n            puVar1 = in_RAX[-1] + arg1 + 0x10;\n            *puVar1 = uVar31;\n            puVar1[1] = uVar32;\n            puVar1[2] = uVar33;\n            puVar1[3] = uVar34;\n            return;\n        }\n        if (arg1 < 0x101) {\n            uVar3 = *(*unaff_RBX + 4);\n            uVar5 = *(*unaff_RBX + 8);\n            uVar6 = *(*unaff_RBX + 0xc);\n            uVar7 = *(*unaff_RBX + 0x10);\n            uVar8 = *(*unaff_RBX + 0x14);\n            uVar9 = *(*unaff_RBX + 0x18);\n            uVar10 = *(*unaff_RBX + 0x1c);\n            uVar11 = *unaff_RBX[1];\n            uVar12 = *(unaff_RBX[1] + 4);\n            uVar13 = *(unaff_RBX[1] + 8);\n            uVar14 = *(unaff_RBX[1] + 0xc);\n            uVar15 = *(unaff_RBX[1] + 0x10);\n            uVar16 = *(unaff_RBX[1] + 0x14);\n            uVar17 = *(unaff_RBX[1] + 0x18);\n            uVar18 = *(unaff_RBX[1] + 0x1c);\n            uVar19 = *unaff_RBX[2];\n            uVar20 = *(unaff_RBX[2] + 4);\n            uVar21 = *(unaff_RBX[2] + 8);\n            uVar22 = *(unaff_RBX[2] + 0xc);\n            uVar23 = *(unaff_RBX[2] + 0x10);\n            uVar24 = *(unaff_RBX[2] + 0x14);\n            uVar25 = *(unaff_RBX[2] + 0x18);\n            uVar26 = *(unaff_RBX[2] + 0x1c);\n            uVar27 = *unaff_RBX[3];\n            uVar28 = *(unaff_RBX[3] + 4);\n            uVar29 = *(unaff_RBX[3] + 8);\n            uVar30 = *(unaff_RBX[3] + 0xc);\n            uVar31 = *(unaff_RBX[3] + 0x10);\n            uVar32 = *(unaff_RBX[3] + 0x14);\n            uVar33 = *(unaff_RBX[3] + 0x18);\n            uVar34 = *(unaff_RBX[3] + 0x1c);\n            puVar1 = unaff_RBX[-4] + arg1;\n            uVar35 = *puVar1;\n            uVar36 = puVar1[1];\n            uVar37 = puVar1[2];\n            uVar38 = puVar1[3];\n            puVar1 = unaff_RBX[-4] + arg1 + 0x10;\n            uVar39 = *puVar1;\n            uVar40 = puVar1[1];\n            uVar41 = puVar1[2];\n            uVar42 = puVar1[3];\n            puVar1 = unaff_RBX[-3] + arg1;\n            uVar43 = *puVar1;\n            uVar44 = puVar1[1];\n            uVar45 = puVar1[2];\n            uVar46 = puVar1[3];\n            puVar1 = unaff_RBX[-3] + arg1 + 0x10;\n            uVar47 = *puVar1;\n            uVar48 = puVar1[1];\n            uVar49 = puVar1[2];\n            uVar50 = puVar1[3];\n            puVar1 = unaff_RBX[-2] + arg1;\n            uVar51 = *puVar1;\n            uVar52 = puVar1[1];\n            uVar53 = puVar1[2];\n            uVar54 = puVar1[3];\n            puVar1 = unaff_RBX[-2] + arg1 + 0x10;\n            uVar55 = *puVar1;\n            uVar56 = puVar1[1];\n            uVar57 = puVar1[2];\n            uVar58 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1;\n            uVar59 = *puVar1;\n            uVar60 = puVar1[1];\n            uVar61 = puVar1[2];\n            uVar62 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1 + 0x10;\n            uVar63 = *puVar1;\n            uVar64 = puVar1[1];\n            uVar65 = puVar1[2];\n            uVar66 = puVar1[3];\n            **in_RAX = **unaff_RBX;\n            *(*in_RAX + 4) = uVar3;\n            *(*in_RAX + 8) = uVar5;\n            *(*in_RAX + 0xc) = uVar6;\n            *(*in_RAX + 0x10) = uVar7;\n            *(*in_RAX + 0x14) = uVar8;\n            *(*in_RAX + 0x18) = uVar9;\n            *(*in_RAX + 0x1c) = uVar10;\n            *in_RAX[1] = uVar11;\n            *(in_RAX[1] + 4) = uVar12;\n            *(in_RAX[1] + 8) = uVar13;\n            *(in_RAX[1] + 0xc) = uVar14;\n            *(in_RAX[1] + 0x10) = uVar15;\n            *(in_RAX[1] + 0x14) = uVar16;\n            *(in_RAX[1] + 0x18) = uVar17;\n            *(in_RAX[1] + 0x1c) = uVar18;\n            *in_RAX[2] = uVar19;\n            *(in_RAX[2] + 4) = uVar20;\n            *(in_RAX[2] + 8) = uVar21;\n            *(in_RAX[2] + 0xc) = uVar22;\n            *(in_RAX[2] + 0x10) = uVar23;\n            *(in_RAX[2] + 0x14) = uVar24;\n            *(in_RAX[2] + 0x18) = uVar25;\n            *(in_RAX[2] + 0x1c) = uVar26;\n            *in_RAX[3] = uVar27;\n            *(in_RAX[3] + 4) = uVar28;\n            *(in_RAX[3] + 8) = uVar29;\n            *(in_RAX[3] + 0xc) = uVar30;\n            *(in_RAX[3] + 0x10) = uVar31;\n            *(in_RAX[3] + 0x14) = uVar32;\n            *(in_RAX[3] + 0x18) = uVar33;\n            *(in_RAX[3] + 0x1c) = uVar34;\n            puVar1 = in_RAX[-4] + arg1;\n            *puVar1 = uVar35;\n            puVar1[1] = uVar36;\n            puVar1[2] = uVar37;\n            puVar1[3] = uVar38;\n            puVar1 = in_RAX[-4] + arg1 + 0x10;\n            *puVar1 = uVar39;\n            puVar1[1] = uVar40;\n            puVar1[2] = uVar41;\n            puVar1[3] = uVar42;\n            puVar1 = in_RAX[-3] + arg1;\n            *puVar1 = uVar43;\n            puVar1[1] = uVar44;\n            puVar1[2] = uVar45;\n            puVar1[3] = uVar46;\n            puVar1 = in_RAX[-3] + arg1 + 0x10;\n            *puVar1 = uVar47;\n            puVar1[1] = uVar48;\n            puVar1[2] = uVar49;\n            puVar1[3] = uVar50;\n            puVar1 = in_RAX[-2] + arg1;\n            *puVar1 = uVar51;\n            puVar1[1] = uVar52;\n            puVar1[2] = uVar53;\n            puVar1[3] = uVar54;\n            puVar1 = in_RAX[-2] + arg1 + 0x10;\n            *puVar1 = uVar55;\n            puVar1[1] = uVar56;\n            puVar1[2] = uVar57;\n            puVar1[3] = uVar58;\n            puVar1 = in_RAX[-1] + arg1;\n            *puVar1 = uVar59;\n            puVar1[1] = uVar60;\n            puVar1[2] = uVar61;\n            puVar1[3] = uVar62;\n            puVar1 = in_RAX[-1] + arg1 + 0x10;\n            *puVar1 = uVar63;\n            puVar1[1] = uVar64;\n            puVar1[2] = uVar65;\n            puVar1[3] = uVar66;\n            return;\n        }\n        if ((*0x557c71 & 1) != 0) {\n            if (in_RAX - unaff_RBX < arg1) {\n                uVar3 = **unaff_RBX;\n                uVar5 = *(*unaff_RBX + 4);\n                uVar6 = *(*unaff_RBX + 8);\n                uVar7 = *(*unaff_RBX + 0xc);\n                uVar8 = *(*unaff_RBX + 0x10);\n                uVar9 = *(*unaff_RBX + 0x14);\n                uVar10 = *(*unaff_RBX + 0x18);\n                uVar11 = *(*unaff_RBX + 0x1c);\n                puVar75 = *in_RAX + arg1;\n                uVar12 = *unaff_RBX[1];\n                uVar13 = *(unaff_RBX[1] + 4);\n                uVar14 = *(unaff_RBX[1] + 8);\n                uVar15 = *(unaff_RBX[1] + 0xc);\n                uVar16 = *(unaff_RBX[1] + 0x10);\n                uVar17 = *(unaff_RBX[1] + 0x14);\n                uVar18 = *(unaff_RBX[1] + 0x18);\n                uVar19 = *(unaff_RBX[1] + 0x1c);\n                uVar20 = *unaff_RBX[2];\n                uVar21 = *(unaff_RBX[2] + 4);\n                uVar22 = *(unaff_RBX[2] + 8);\n                uVar23 = *(unaff_RBX[2] + 0xc);\n                uVar24 = *(unaff_RBX[2] + 0x10);\n                uVar25 = *(unaff_RBX[2] + 0x14);\n                uVar26 = *(unaff_RBX[2] + 0x18);\n                uVar27 = *(unaff_RBX[2] + 0x1c);\n                uVar68 = puVar75 & 0x1f;\n                uVar28 = *unaff_RBX[3];\n                uVar29 = *(unaff_RBX[3] + 4);\n                uVar30 = *(unaff_RBX[3] + 8);\n                uVar31 = *(unaff_RBX[3] + 0xc);\n                uVar32 = *(unaff_RBX[3] + 0x10);\n                uVar33 = *(unaff_RBX[3] + 0x14);\n                uVar34 = *(unaff_RBX[3] + 0x18);\n                uVar35 = *(unaff_RBX[3] + 0x1c);\n                uVar67 = puVar75 ^ uVar68;\n                auVar81 = vmovdqu_avx(*(unaff_RBX[-1] + arg1));\n                iVar69 = unaff_RBX + (arg1 - uVar68);\n                arg1 = arg1 - uVar68;\n                if (0x100000 < arg1) {\n                    arg1 = arg1 - 0x80;\n                    do {\n                        auVar77 = vmovdqu_avx(*(iVar69 + -0x20));\n                        auVar78 = vmovdqu_avx(*(iVar69 + -0x40));\n                        auVar79 = vmovdqu_avx(*(iVar69 + -0x60));\n                        auVar80 = vmovdqu_avx(*(iVar69 + -0x80));\n                        iVar69 = iVar69 + -0x80;\n                        auVar77 = vmovntdq_avx(auVar77);\n                        *(uVar67 - 0x20) = auVar77;\n                        auVar77 = vmovntdq_avx(auVar78);\n                        *(uVar67 - 0x40) = auVar77;\n                        auVar77 = vmovntdq_avx(auVar79);\n                        *(uVar67 - 0x60) = auVar77;\n                        auVar77 = vmovntdq_avx(auVar80);\n                        *(uVar67 - 0x80) = auVar77;\n                        uVar67 = uVar67 - 0x80;\n                        bVar76 = 0x7f < arg1;\n                        arg1 = arg1 - 0x80;\n                    } while (bVar76 && arg1 != 0);\n                    auVar81 = vmovdqu_avx(auVar81);\n                    *(puVar75 + -0x20) = auVar81;\n                    vzeroupper_avx();\n                    **in_RAX = uVar3;\n                    *(*in_RAX + 4) = uVar5;\n                    *(*in_RAX + 8) = uVar6;\n                    *(*in_RAX + 0xc) = uVar7;\n                    *(*in_RAX + 0x10) = uVar8;\n                    *(*in_RAX + 0x14) = uVar9;\n                    *(*in_RAX + 0x18) = uVar10;\n                    *(*in_RAX + 0x1c) = uVar11;\n                    *in_RAX[1] = uVar12;\n                    *(in_RAX[1] + 4) = uVar13;\n                    *(in_RAX[1] + 8) = uVar14;\n                    *(in_RAX[1] + 0xc) = uVar15;\n                    *(in_RAX[1] + 0x10) = uVar16;\n                    *(in_RAX[1] + 0x14) = uVar17;\n                    *(in_RAX[1] + 0x18) = uVar18;\n                    *(in_RAX[1] + 0x1c) = uVar19;\n                    *in_RAX[2] = uVar20;\n                    *(in_RAX[2] + 4) = uVar21;\n                    *(in_RAX[2] + 8) = uVar22;\n                    *(in_RAX[2] + 0xc) = uVar23;\n                    *(in_RAX[2] + 0x10) = uVar24;\n                    *(in_RAX[2] + 0x14) = uVar25;\n                    *(in_RAX[2] + 0x18) = uVar26;\n                    *(in_RAX[2] + 0x1c) = uVar27;\n                    *in_RAX[3] = uVar28;\n                    *(in_RAX[3] + 4) = uVar29;\n                    *(in_RAX[3] + 8) = uVar30;\n                    *(in_RAX[3] + 0xc) = uVar31;\n                    *(in_RAX[3] + 0x10) = uVar32;\n                    *(in_RAX[3] + 0x14) = uVar33;\n                    *(in_RAX[3] + 0x18) = uVar34;\n                    *(in_RAX[3] + 0x1c) = uVar35;\n                    return;\n                }\n                arg1 = arg1 - 0x80;\n                do {\n                    auVar77 = vmovdqu_avx(*(iVar69 + -0x20));\n                    auVar78 = vmovdqu_avx(*(iVar69 + -0x40));\n                    auVar79 = vmovdqu_avx(*(iVar69 + -0x60));\n                    auVar80 = vmovdqu_avx(*(iVar69 + -0x80));\n                    iVar69 = iVar69 + -0x80;\n                    *(uVar67 - 0x20) = auVar77;\n                    *(uVar67 - 0x40) = auVar78;\n                    *(uVar67 - 0x60) = auVar79;\n                    *(uVar67 - 0x80) = auVar80;\n                    uVar67 = uVar67 - 0x80;\n                    bVar76 = 0x7f < arg1;\n                    arg1 = arg1 - 0x80;\n                } while (bVar76 && arg1 != 0);\n                auVar81 = vmovdqu_avx(auVar81);\n                *(puVar75 + -0x20) = auVar81;\n                vzeroupper_avx();\n                **in_RAX = uVar3;\n                *(*in_RAX + 4) = uVar5;\n                *(*in_RAX + 8) = uVar6;\n                *(*in_RAX + 0xc) = uVar7;\n                *(*in_RAX + 0x10) = uVar8;\n                *(*in_RAX + 0x14) = uVar9;\n                *(*in_RAX + 0x18) = uVar10;\n                *(*in_RAX + 0x1c) = uVar11;\n                *in_RAX[1] = uVar12;\n                *(in_RAX[1] + 4) = uVar13;\n                *(in_RAX[1] + 8) = uVar14;\n                *(in_RAX[1] + 0xc) = uVar15;\n                *(in_RAX[1] + 0x10) = uVar16;\n                *(in_RAX[1] + 0x14) = uVar17;\n                *(in_RAX[1] + 0x18) = uVar18;\n                *(in_RAX[1] + 0x1c) = uVar19;\n                *in_RAX[2] = uVar20;\n                *(in_RAX[2] + 4) = uVar21;\n                *(in_RAX[2] + 8) = uVar22;\n                *(in_RAX[2] + 0xc) = uVar23;\n                *(in_RAX[2] + 0x10) = uVar24;\n                *(in_RAX[2] + 0x14) = uVar25;\n                *(in_RAX[2] + 0x18) = uVar26;\n                *(in_RAX[2] + 0x1c) = uVar27;\n                *in_RAX[3] = uVar28;\n                *(in_RAX[3] + 4) = uVar29;\n                *(in_RAX[3] + 8) = uVar30;\n                *(in_RAX[3] + 0xc) = uVar31;\n                *(in_RAX[3] + 0x10) = uVar32;\n                *(in_RAX[3] + 0x14) = uVar33;\n                *(in_RAX[3] + 0x18) = uVar34;\n                *(in_RAX[3] + 0x1c) = uVar35;\n                return;\n            }\n            if (0xfffff < arg1) {\n                puVar1 = unaff_RBX[-4] + arg1;\n                uVar3 = *puVar1;\n                uVar5 = puVar1[1];\n                uVar6 = puVar1[2];\n                uVar7 = puVar1[3];\n                uVar8 = *(unaff_RBX[-4] + arg1 + 0x10);\n                uVar9 = *(unaff_RBX[-4] + arg1 + 0x14);\n                uVar10 = *(unaff_RBX[-4] + arg1 + 0x18);\n                uVar11 = *(unaff_RBX[-4] + arg1 + 0x1c);\n                uVar12 = *(unaff_RBX[-3] + arg1);\n                uVar13 = *(unaff_RBX[-3] + arg1 + 4);\n                uVar14 = *(unaff_RBX[-3] + arg1 + 8);\n                uVar15 = *(unaff_RBX[-3] + arg1 + 0xc);\n                uVar16 = *(unaff_RBX[-3] + arg1 + 0x10);\n                uVar17 = *(unaff_RBX[-3] + arg1 + 0x14);\n                uVar18 = *(unaff_RBX[-3] + arg1 + 0x18);\n                uVar19 = *(unaff_RBX[-3] + arg1 + 0x1c);\n                uVar20 = *(unaff_RBX[-2] + arg1);\n                uVar21 = *(unaff_RBX[-2] + arg1 + 4);\n                uVar22 = *(unaff_RBX[-2] + arg1 + 8);\n                uVar23 = *(unaff_RBX[-2] + arg1 + 0xc);\n                uVar24 = *(unaff_RBX[-2] + arg1 + 0x10);\n                uVar25 = *(unaff_RBX[-2] + arg1 + 0x14);\n                uVar26 = *(unaff_RBX[-2] + arg1 + 0x18);\n                uVar27 = *(unaff_RBX[-2] + arg1 + 0x1c);\n                uVar28 = *(unaff_RBX[-1] + arg1);\n                uVar29 = *(unaff_RBX[-1] + arg1 + 4);\n                uVar30 = *(unaff_RBX[-1] + arg1 + 8);\n                uVar31 = *(unaff_RBX[-1] + arg1 + 0xc);\n                uVar32 = *(unaff_RBX[-1] + arg1 + 0x10);\n                uVar33 = *(unaff_RBX[-1] + arg1 + 0x14);\n                uVar34 = *(unaff_RBX[-1] + arg1 + 0x18);\n                uVar35 = *(unaff_RBX[-1] + arg1 + 0x1c);\n                auVar81 = vmovdqu_avx(*unaff_RBX);\n                pauVar74 = (in_RAX & 0xffffffffffffffe0) + 0x20;\n                iVar69 = arg1 - (pauVar74 - in_RAX);\n                pauVar73 = unaff_RBX + (pauVar74 - in_RAX);\n                uVar67 = iVar69 - 0x80;\n                pauVar71 = pauVar74;\n                do {\n                    auVar77 = vmovdqu_avx(*pauVar73);\n                    auVar78 = vmovdqu_avx(pauVar73[1]);\n                    auVar79 = vmovdqu_avx(pauVar73[2]);\n                    auVar80 = vmovdqu_avx(pauVar73[3]);\n                    pauVar73 = pauVar73[4];\n                    auVar77 = vmovntdq_avx(auVar77);\n                    *pauVar71 = auVar77;\n                    auVar77 = vmovntdq_avx(auVar78);\n                    pauVar71[1] = auVar77;\n                    auVar77 = vmovntdq_avx(auVar79);\n                    pauVar71[2] = auVar77;\n                    auVar77 = vmovntdq_avx(auVar80);\n                    pauVar71[3] = auVar77;\n                    pauVar71 = pauVar71[4];\n                    bVar76 = 0x7f < uVar67;\n                    uVar67 = uVar67 - 0x80;\n                } while (bVar76 && uVar67 != 0);\n                auVar81 = vmovdqu_avx(auVar81);\n                *in_RAX = auVar81;\n                vzeroupper_avx();\n                *(pauVar74 + iVar69 + -0x80) = uVar3;\n                *(pauVar74 + iVar69 + -0x7c) = uVar5;\n                *(pauVar74 + iVar69 + -0x78) = uVar6;\n                *(pauVar74 + iVar69 + -0x74) = uVar7;\n                *(pauVar74 + iVar69 + -0x70) = uVar8;\n                *(pauVar74 + iVar69 + -0x6c) = uVar9;\n                *(pauVar74 + iVar69 + -0x68) = uVar10;\n                *(pauVar74 + iVar69 + -100) = uVar11;\n                *(pauVar74 + iVar69 + -0x60) = uVar12;\n                *(pauVar74 + iVar69 + -0x5c) = uVar13;\n                *(pauVar74 + iVar69 + -0x58) = uVar14;\n                *(pauVar74 + iVar69 + -0x54) = uVar15;\n                *(pauVar74 + iVar69 + -0x50) = uVar16;\n                *(pauVar74 + iVar69 + -0x4c) = uVar17;\n                *(pauVar74 + iVar69 + -0x48) = uVar18;\n                *(pauVar74 + iVar69 + -0x44) = uVar19;\n                *(pauVar74 + iVar69 + -0x40) = uVar20;\n                *(pauVar74 + iVar69 + -0x3c) = uVar21;\n                *(pauVar74 + iVar69 + -0x38) = uVar22;\n                *(pauVar74 + iVar69 + -0x34) = uVar23;\n                *(pauVar74 + iVar69 + -0x30) = uVar24;\n                *(pauVar74 + iVar69 + -0x2c) = uVar25;\n                *(pauVar74 + iVar69 + -0x28) = uVar26;\n                *(pauVar74 + iVar69 + -0x24) = uVar27;\n                *(pauVar74 + iVar69 + -0x20) = uVar28;\n                *(pauVar74 + iVar69 + -0x1c) = uVar29;\n                *(pauVar74 + iVar69 + -0x18) = uVar30;\n                *(pauVar74 + iVar69 + -0x14) = uVar31;\n                *(pauVar74 + iVar69 + -0x10) = uVar32;\n                *(pauVar74 + iVar69 + -0xc) = uVar33;\n                *(pauVar74 + iVar69 + -8) = uVar34;\n                *(pauVar74 + iVar69 + -4) = uVar35;\n                return;\n            }\n            uVar3 = *(unaff_RBX[-4] + arg1);\n            uVar5 = *(unaff_RBX[-4] + arg1 + 4);\n            uVar6 = *(unaff_RBX[-4] + arg1 + 8);\n            uVar7 = *(unaff_RBX[-4] + arg1 + 0xc);\n            uVar8 = *(unaff_RBX[-4] + arg1 + 0x10);\n            uVar9 = *(unaff_RBX[-4] + arg1 + 0x14);\n            uVar10 = *(unaff_RBX[-4] + arg1 + 0x18);\n            uVar11 = *(unaff_RBX[-4] + arg1 + 0x1c);\n            pauVar73 = (in_RAX & 0xffffffffffffffe0) + 0x20;\n            uVar12 = *(unaff_RBX[-3] + arg1);\n            uVar13 = *(unaff_RBX[-3] + arg1 + 4);\n            uVar14 = *(unaff_RBX[-3] + arg1 + 8);\n            uVar15 = *(unaff_RBX[-3] + arg1 + 0xc);\n            uVar16 = *(unaff_RBX[-3] + arg1 + 0x10);\n            uVar17 = *(unaff_RBX[-3] + arg1 + 0x14);\n            uVar18 = *(unaff_RBX[-3] + arg1 + 0x18);\n            uVar19 = *(unaff_RBX[-3] + arg1 + 0x1c);\n            uVar20 = *(unaff_RBX[-2] + arg1);\n            uVar21 = *(unaff_RBX[-2] + arg1 + 4);\n            uVar22 = *(unaff_RBX[-2] + arg1 + 8);\n            uVar23 = *(unaff_RBX[-2] + arg1 + 0xc);\n            uVar24 = *(unaff_RBX[-2] + arg1 + 0x10);\n            uVar25 = *(unaff_RBX[-2] + arg1 + 0x14);\n            uVar26 = *(unaff_RBX[-2] + arg1 + 0x18);\n            uVar27 = *(unaff_RBX[-2] + arg1 + 0x1c);\n            uVar28 = *(unaff_RBX[-1] + arg1);\n            uVar29 = *(unaff_RBX[-1] + arg1 + 4);\n            uVar30 = *(unaff_RBX[-1] + arg1 + 8);\n            uVar31 = *(unaff_RBX[-1] + arg1 + 0xc);\n            uVar32 = *(unaff_RBX[-1] + arg1 + 0x10);\n            uVar33 = *(unaff_RBX[-1] + arg1 + 0x14);\n            uVar34 = *(unaff_RBX[-1] + arg1 + 0x18);\n            uVar35 = *(unaff_RBX[-1] + arg1 + 0x1c);\n            auVar81 = vmovdqu_avx(*unaff_RBX);\n            pauVar71 = unaff_RBX + (pauVar73 - in_RAX);\n            uVar67 = (arg1 - (pauVar73 - in_RAX)) - 0x80;\n            do {\n                uVar68 = uVar67;\n                auVar77 = vmovdqu_avx(*pauVar71);\n                auVar78 = vmovdqu_avx(pauVar71[1]);\n                auVar79 = vmovdqu_avx(pauVar71[2]);\n                auVar80 = vmovdqu_avx(pauVar71[3]);\n                pauVar71 = pauVar71[4];\n                *pauVar73 = auVar77;\n                pauVar73[1] = auVar78;\n                pauVar73[2] = auVar79;\n                pauVar73[3] = auVar80;\n                pauVar73 = pauVar73[4];\n                uVar67 = uVar68 - 0x80;\n            } while (0x7f < uVar68 && uVar68 - 0x80 != 0);\n            auVar81 = vmovdqu_avx(auVar81);\n            *in_RAX = auVar81;\n            vzeroupper_avx();\n            *(pauVar73[-4] + uVar68) = uVar3;\n            *(pauVar73[-4] + uVar68 + 4) = uVar5;\n            *(pauVar73[-4] + uVar68 + 8) = uVar6;\n            *(pauVar73[-4] + uVar68 + 0xc) = uVar7;\n            *(pauVar73[-4] + uVar68 + 0x10) = uVar8;\n            *(pauVar73[-4] + uVar68 + 0x14) = uVar9;\n            *(pauVar73[-4] + uVar68 + 0x18) = uVar10;\n            *(pauVar73[-4] + uVar68 + 0x1c) = uVar11;\n            *(pauVar73[-3] + uVar68) = uVar12;\n            *(pauVar73[-3] + uVar68 + 4) = uVar13;\n            *(pauVar73[-3] + uVar68 + 8) = uVar14;\n            *(pauVar73[-3] + uVar68 + 0xc) = uVar15;\n            *(pauVar73[-3] + uVar68 + 0x10) = uVar16;\n            *(pauVar73[-3] + uVar68 + 0x14) = uVar17;\n            *(pauVar73[-3] + uVar68 + 0x18) = uVar18;\n            *(pauVar73[-3] + uVar68 + 0x1c) = uVar19;\n            *(pauVar73[-2] + uVar68) = uVar20;\n            *(pauVar73[-2] + uVar68 + 4) = uVar21;\n            *(pauVar73[-2] + uVar68 + 8) = uVar22;\n            *(pauVar73[-2] + uVar68 + 0xc) = uVar23;\n            *(pauVar73[-2] + uVar68 + 0x10) = uVar24;\n            *(pauVar73[-2] + uVar68 + 0x14) = uVar25;\n            *(pauVar73[-2] + uVar68 + 0x18) = uVar26;\n            *(pauVar73[-2] + uVar68 + 0x1c) = uVar27;\n            *(pauVar73[-1] + uVar68) = uVar28;\n            *(pauVar73[-1] + uVar68 + 4) = uVar29;\n            *(pauVar73[-1] + uVar68 + 8) = uVar30;\n            *(pauVar73[-1] + uVar68 + 0xc) = uVar31;\n            *(pauVar73[-1] + uVar68 + 0x10) = uVar32;\n            *(pauVar73[-1] + uVar68 + 0x14) = uVar33;\n            *(pauVar73[-1] + uVar68 + 0x18) = uVar34;\n            *(pauVar73[-1] + uVar68 + 0x1c) = uVar35;\n            return;\n        }\n        if ((in_RAX < unaff_RBX) || (*unaff_RBX + arg1 <= in_RAX)) {\n            if (arg1 < 0x801) {\n                do {\n                    arg1 = arg1 - 0x100;\n                    uVar48 = *(*unaff_RBX + 4);\n                    uVar49 = *(*unaff_RBX + 8);\n                    uVar50 = *(*unaff_RBX + 0xc);\n                    uVar51 = *(*unaff_RBX + 0x10);\n                    uVar52 = *(*unaff_RBX + 0x14);\n                    uVar53 = *(*unaff_RBX + 0x18);\n                    uVar54 = *(*unaff_RBX + 0x1c);\n                    uVar55 = *unaff_RBX[1];\n                    uVar56 = *(unaff_RBX[1] + 4);\n                    uVar57 = *(unaff_RBX[1] + 8);\n                    uVar58 = *(unaff_RBX[1] + 0xc);\n                    uVar59 = *(unaff_RBX[1] + 0x10);\n                    uVar60 = *(unaff_RBX[1] + 0x14);\n                    uVar61 = *(unaff_RBX[1] + 0x18);\n                    uVar62 = *(unaff_RBX[1] + 0x1c);\n                    uVar63 = *unaff_RBX[2];\n                    uVar64 = *(unaff_RBX[2] + 4);\n                    uVar65 = *(unaff_RBX[2] + 8);\n                    uVar66 = *(unaff_RBX[2] + 0xc);\n                    uVar3 = *(unaff_RBX[2] + 0x10);\n                    uVar5 = *(unaff_RBX[2] + 0x14);\n                    uVar6 = *(unaff_RBX[2] + 0x18);\n                    uVar7 = *(unaff_RBX[2] + 0x1c);\n                    uVar8 = *unaff_RBX[3];\n                    uVar9 = *(unaff_RBX[3] + 4);\n                    uVar10 = *(unaff_RBX[3] + 8);\n                    uVar11 = *(unaff_RBX[3] + 0xc);\n                    uVar12 = *(unaff_RBX[3] + 0x10);\n                    uVar13 = *(unaff_RBX[3] + 0x14);\n                    uVar14 = *(unaff_RBX[3] + 0x18);\n                    uVar15 = *(unaff_RBX[3] + 0x1c);\n                    uVar16 = *unaff_RBX[4];\n                    uVar17 = *(unaff_RBX[4] + 4);\n                    uVar18 = *(unaff_RBX[4] + 8);\n                    uVar19 = *(unaff_RBX[4] + 0xc);\n                    uVar20 = *(unaff_RBX[4] + 0x10);\n                    uVar21 = *(unaff_RBX[4] + 0x14);\n                    uVar22 = *(unaff_RBX[4] + 0x18);\n                    uVar23 = *(unaff_RBX[4] + 0x1c);\n                    uVar24 = *unaff_RBX[5];\n                    uVar25 = *(unaff_RBX[5] + 4);\n                    uVar26 = *(unaff_RBX[5] + 8);\n                    uVar27 = *(unaff_RBX[5] + 0xc);\n                    uVar28 = *(unaff_RBX[5] + 0x10);\n                    uVar29 = *(unaff_RBX[5] + 0x14);\n                    uVar30 = *(unaff_RBX[5] + 0x18);\n                    uVar31 = *(unaff_RBX[5] + 0x1c);\n                    uVar32 = *unaff_RBX[6];\n                    uVar33 = *(unaff_RBX[6] + 4);\n                    uVar34 = *(unaff_RBX[6] + 8);\n                    uVar35 = *(unaff_RBX[6] + 0xc);\n                    uVar36 = *(unaff_RBX[6] + 0x10);\n                    uVar37 = *(unaff_RBX[6] + 0x14);\n                    uVar38 = *(unaff_RBX[6] + 0x18);\n                    uVar39 = *(unaff_RBX[6] + 0x1c);\n                    uVar40 = *unaff_RBX[7];\n                    uVar41 = *(unaff_RBX[7] + 4);\n                    uVar42 = *(unaff_RBX[7] + 8);\n                    uVar43 = *(unaff_RBX[7] + 0xc);\n                    uVar44 = *(unaff_RBX[7] + 0x10);\n                    uVar45 = *(unaff_RBX[7] + 0x14);\n                    uVar46 = *(unaff_RBX[7] + 0x18);\n                    uVar47 = *(unaff_RBX[7] + 0x1c);\n                    **in_RAX = **unaff_RBX;\n                    *(*in_RAX + 4) = uVar48;\n                    *(*in_RAX + 8) = uVar49;\n                    *(*in_RAX + 0xc) = uVar50;\n                    *(*in_RAX + 0x10) = uVar51;\n                    *(*in_RAX + 0x14) = uVar52;\n                    *(*in_RAX + 0x18) = uVar53;\n                    *(*in_RAX + 0x1c) = uVar54;\n                    *in_RAX[1] = uVar55;\n                    *(in_RAX[1] + 4) = uVar56;\n                    *(in_RAX[1] + 8) = uVar57;\n                    *(in_RAX[1] + 0xc) = uVar58;\n                    *(in_RAX[1] + 0x10) = uVar59;\n                    *(in_RAX[1] + 0x14) = uVar60;\n                    *(in_RAX[1] + 0x18) = uVar61;\n                    *(in_RAX[1] + 0x1c) = uVar62;\n                    *in_RAX[2] = uVar63;\n                    *(in_RAX[2] + 4) = uVar64;\n                    *(in_RAX[2] + 8) = uVar65;\n                    *(in_RAX[2] + 0xc) = uVar66;\n                    *(in_RAX[2] + 0x10) = uVar3;\n                    *(in_RAX[2] + 0x14) = uVar5;\n                    *(in_RAX[2] + 0x18) = uVar6;\n                    *(in_RAX[2] + 0x1c) = uVar7;\n                    *in_RAX[3] = uVar8;\n                    *(in_RAX[3] + 4) = uVar9;\n                    *(in_RAX[3] + 8) = uVar10;\n                    *(in_RAX[3] + 0xc) = uVar11;\n                    *(in_RAX[3] + 0x10) = uVar12;\n                    *(in_RAX[3] + 0x14) = uVar13;\n                    *(in_RAX[3] + 0x18) = uVar14;\n                    *(in_RAX[3] + 0x1c) = uVar15;\n                    *in_RAX[4] = uVar16;\n                    *(in_RAX[4] + 4) = uVar17;\n                    *(in_RAX[4] + 8) = uVar18;\n                    *(in_RAX[4] + 0xc) = uVar19;\n                    *(in_RAX[4] + 0x10) = uVar20;\n                    *(in_RAX[4] + 0x14) = uVar21;\n                    *(in_RAX[4] + 0x18) = uVar22;\n                    *(in_RAX[4] + 0x1c) = uVar23;\n                    *in_RAX[5] = uVar24;\n                    *(in_RAX[5] + 4) = uVar25;\n                    *(in_RAX[5] + 8) = uVar26;\n                    *(in_RAX[5] + 0xc) = uVar27;\n                    *(in_RAX[5] + 0x10) = uVar28;\n                    *(in_RAX[5] + 0x14) = uVar29;\n                    *(in_RAX[5] + 0x18) = uVar30;\n                    *(in_RAX[5] + 0x1c) = uVar31;\n                    *in_RAX[6] = uVar32;\n                    *(in_RAX[6] + 4) = uVar33;\n                    *(in_RAX[6] + 8) = uVar34;\n                    *(in_RAX[6] + 0xc) = uVar35;\n                    *(in_RAX[6] + 0x10) = uVar36;\n                    *(in_RAX[6] + 0x14) = uVar37;\n                    *(in_RAX[6] + 0x18) = uVar38;\n                    *(in_RAX[6] + 0x1c) = uVar39;\n                    *in_RAX[7] = uVar40;\n                    *(in_RAX[7] + 4) = uVar41;\n                    *(in_RAX[7] + 8) = uVar42;\n                    *(in_RAX[7] + 0xc) = uVar43;\n                    *(in_RAX[7] + 0x10) = uVar44;\n                    *(in_RAX[7] + 0x14) = uVar45;\n                    *(in_RAX[7] + 0x18) = uVar46;\n                    *(in_RAX[7] + 0x1c) = uVar47;\n                    unaff_RBX = unaff_RBX[8];\n                    in_RAX = in_RAX[8];\n                } while (0xff < arg1);\n            }\n            else {\n                if ((*0x5584a6 == '\\x01') && (((unaff_RBX | in_RAX) & 7) != 0)) {\n                    for (; arg1 != 0; arg1 = arg1 - 1) {\n                        (*in_RAX)[0] = (*unaff_RBX)[0];\n                        unaff_RBX = *unaff_RBX + 1;\n                        in_RAX = *in_RAX + 1;\n                    }\n                    return;\n                }\n                uVar68 = arg1 & 7;\n                for (uVar67 = arg1 >> 3; arg1 = uVar68,  uVar67 != 0; uVar67 = uVar67 - 1) {\n                    **in_RAX = **unaff_RBX;\n                    unaff_RBX = *unaff_RBX + 8;\n                    in_RAX = *in_RAX + 8;\n                }\n            }\n        }\n        else {\n            uVar67 = arg1 >> 3;\n            uVar68 = arg1 & 7;\n            puVar70 = *unaff_RBX + arg1;\n            puVar72 = *in_RAX + arg1;\n            while( true ) {\n                if (uVar67 == 0) break;\n                uVar67 = uVar67 - 1;\n                puVar72[-1] = puVar70[-1];\n                puVar70 = puVar70 + -1;\n                puVar72 = puVar72 + -1;\n            }\n            in_RAX = puVar72 - uVar68;\n            unaff_RBX = puVar70 - uVar68;\n            arg1 = uVar68;\n        }\n    }\n    uVar3 = *(*unaff_RBX + 4);\n    uVar5 = *(*unaff_RBX + 8);\n    uVar6 = *(*unaff_RBX + 0xc);\n    puVar1 = unaff_RBX[-1] + arg1 + 0x10;\n    uVar7 = *puVar1;\n    uVar8 = puVar1[1];\n    uVar9 = puVar1[2];\n    uVar10 = puVar1[3];\n    **in_RAX = **unaff_RBX;\n    *(*in_RAX + 4) = uVar3;\n    *(*in_RAX + 8) = uVar5;\n    *(*in_RAX + 0xc) = uVar6;\n    puVar1 = in_RAX[-1] + arg1 + 0x10;\n    *puVar1 = uVar7;\n    puVar1[1] = uVar8;\n    puVar1[2] = uVar9;\n    puVar1[3] = uVar10;\n    return;\n}\n",
        "token_count": 13218
    },
    "0045afe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045afe0(void)\n\n{\n    if (*0x557c75 == '\\0') {\n        return;\n    }\n    fcn.0042bb00();\n    return;\n}\n",
        "token_count": 43
    },
    "0045b040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0045b040(ulong noname_0, ulong arg2)\n\n{\n    int64_t iVar1;\n    \n    if (*0x557c75 == '\\0') {\n        return (*0x7ffe0014 + -0x19db1ded53e8000) * 0x5fca6af2bd215e5c;\n    }\n    iVar1 = fcn.0042bb80();\n    return iVar1;\n}\n",
        "token_count": 102
    },
    "0045b2c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045b2c0(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t in_GS_OFFSET;\n    uint32_t uVar4;\n    \n    uVar4 = 0;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    while (puVar1 = iVar2 + 0x10,  *0x20 < *puVar1 || *0x20 == *puVar1) {\n        fcn.00457040();\n    }\n    uVar3 = CONCAT71(*0x48a3a9, *0x48a3a8);\n    if (*0x557ed0 != 0) {\n        fcn.00459280(arg1, arg2, arg3, arg4);\n        uVar3 = *0x503600;\n    }\n    *0x503600 = uVar3;\n    fcn.00442160();\n    fcn.0042abe0();\n    fcn.00441820();\n    fcn.004418c0();\n    fcn.0042b660();\n    *0x557cd4 = fcn.0042b5a0();\n    fcn.0042b720();\n    *0x557cb4 = fcn.0042b480();\n    fcn.0042d560();\n    *0x557df8 = uVar4;\n    fcn.0042d5e0();\n    return;\n}\n",
        "token_count": 343
    },
    "0045b360": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045b360(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    \n    iVar1 = **(in_GS_OFFSET + 0x28);\n    *(iVar1 + 0xb4) = 1;\n    if (*(iVar1 + 0xb2) == '\\0') {\n        fcn.00456e80();\n    }\n    else {\n        fcn.00456e80();\n    }\n    *(iVar1 + 0xb4) = 0;\n    return;\n}\n",
        "token_count": 118
    },
    "0045b460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00434464)\n\nvoid fcn.0045b460(ulong param_1, int64_t param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t arg1;\n    uchar *puVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t in_GS_OFFSET;\n    \n    iVar2 = **(in_GS_OFFSET + 0x28);\n    puVar4 = *0x20;\n    do {\n        puVar5 = puVar4;\n        if (*(iVar2 + 0x10) <= puVar4 && puVar4 != *(iVar2 + 0x10)) {\n            puVar5 = puVar4 + -0x50;\n            *(puVar4 + -8) = unaff_RBP;\n            unaff_RBP = puVar4 + -8;\n            *(puVar4 + -0x18) = iVar2;\n            *0x5047d8 = 10000;\n            iVar2 = 0x4f53c0;\n            while (iVar2 != 0) {\n                *(puVar4 + -0x20) = iVar2;\n                *(puVar4 + -0x58) = 0x43437a;\n                fcn.004471e0();\n                iVar2 = *(*(puVar4 + -0x20) + 0x210);\n            }\n            *(puVar4 + -0x58) = 0x434390;\n            fcn.00442ca0();\n            *(puVar4 + -0x58) = 0x434395;\n            fcn.00409ca0();\n            *(puVar4 + -0x58) = 0x4343aa;\n            fcn.0042bf60(8);\n            uVar1 = *(*(puVar4 + -0x18) + 0x30);\n            *(puVar4 + -0x58) = 0x4343c5;\n            fcn.004346c0(uVar1);\n            *(puVar4 + -0x58) = 0x4343ca;\n            fcn.004342c0();\n            *(puVar4 + -0x58) = 0x4343cf;\n            fcn.004028a0();\n            *(puVar4 + -0x58) = 0x4343d4;\n            fcn.00446fa0();\n            *(puVar4 + -0x58) = 0x4343d9;\n            fcn.00451ba0();\n            *(puVar4 + -0x58) = 0x4343de;\n            fcn.00408b80();\n            *(puVar4 + -0x58) = 0x4343ee;\n            fcn.0042c000();\n            *(puVar4 + -0x58) = 0x4343f3;\n            fcn.00440200();\n            *(puVar4 + -0x58) = 0x4343f8;\n            fcn.00414920();\n            *(puVar4 + -0x58) = 0x434406;\n            fcn.00409300();\n            *(puVar4 + -0x58) = 0x43440b;\n            fcn.0045afe0();\n            iVar2 = **(in_GS_OFFSET + 0x28);\n            *0x5047a8 = *(puVar4 + -0x50);\n            *(puVar4 + -0x34) = *0x557cb4;\n            *(puVar4 + -0x58) = 0x434445;\n            fcn.00406320();\n            *(puVar4 + -0x58) = 0x43444a;\n            fcn.00446ba0();\n            arg1 = *(puVar4 + -0x34);\n            *(puVar4 + -0x58) = 0x434473;\n            iVar3 = fcn.0043c780();\n            if (iVar3 == 0) {\n                *(puVar4 + -0x58) = 0x43448a;\n                fcn.00409520();\n                if (1 < *0x5580a0) {\n                    *0x557ed5 = 1;\n                    *0x557ed0 = CONCAT31(*0x557ed1, 1);\n                    *(puVar4 + -0x10) = *0x503f40;\n                    *(puVar4 + -0x28) = *0x503f48;\n                    iVar2 = 0;\n                    arg1 = *0x503f40;\n                    param_2 = *0x503f48;\n                    while (iVar2 < param_2) {\n                        *(puVar4 + -0x30) = iVar2;\n                        iVar2 = *(arg1 + iVar2 * 8);\n                        *(puVar4 + -0x58) = 0x434565;\n                        fcn.00429b20(arg1, iVar2 + 0x16c0);\n                        arg1 = *(puVar4 + -0x10);\n                        param_2 = *(puVar4 + -0x28);\n                        iVar2 = *(puVar4 + -0x30) + 1;\n                    }\n                }\n                if (*0x4fd458 == 0) {\n                    *0x4fd458 = 7;\n                    if (*0x557ed0 == 0) {\n                        *0x4fd450 = 0x481739;\n                    }\n                    else {\n                        *(puVar4 + -0x58) = 0x434506;\n                        fcn.00459280(arg1, param_2, param_3, param_4);\n                    }\n                }\n                if (*0x4fd4a8 == 1) {\n                    *0x4fd4a8 = 0;\n                    if (*0x557ed0 == 0) {\n                        *0x4fd4a0 = 0;\n                    }\n                    else {\n                        *(puVar4 + -0x58) = 0x43453f;\n                        fcn.00459280(arg1, param_2, param_3, param_4);\n                    }\n                }\n                return;\n            }\n            *(puVar4 + -0x58) = 0x434596;\n            fcn.00430d40();\n        }\n        *(puVar5 + -8) = 0x43459c;\n        fcn.00457040();\n        puVar4 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1463
    },
    "0045b4a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045b4a0(void)\n\n{\n    int64_t in_GS_OFFSET;\n    int64_t iStack24;\n    int64_t *piStack16;\n    \n    piStack16 = **(in_GS_OFFSET + 0x28);\n    if (*piStack16 == 0) {\n        iStack24 = piStack16[1];\n        if (iStack24 == 0) {\n            iStack24 = 0x2000;\n        }\n        piStack16[1] = &iStack24;\n        *piStack16 = &stack0x000003e8 + -iStack24;\n    }\n    piStack16[2] = *piStack16 + 0x13a0;\n    piStack16[3] = *piStack16 + 0x13a0;\n    fcn.00435a40();\n    fcn.00435be0();\n    return;\n}\n",
        "token_count": 201
    },
    "0045b580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00440006)\n// WARNING: Removing unreachable block (ram,0x00440008)\n// WARNING: Removing unreachable block (ram,0x0044000e)\n// WARNING: Removing unreachable block (ram,0x00440029)\n// WARNING: Removing unreachable block (ram,0x0044002f)\n// WARNING: Removing unreachable block (ram,0x00440031)\n// WARNING: Removing unreachable block (ram,0x00440037)\n// WARNING: Removing unreachable block (ram,0x0044004a)\n// WARNING: Removing unreachable block (ram,0x00440050)\n// WARNING: Removing unreachable block (ram,0x00440069)\n// WARNING: Removing unreachable block (ram,0x0044006b)\n// WARNING: Removing unreachable block (ram,0x00440077)\n// WARNING: Removing unreachable block (ram,0x00440091)\n// WARNING: Removing unreachable block (ram,0x00440093)\n// WARNING: Removing unreachable block (ram,0x004400b2)\n// WARNING: Removing unreachable block (ram,0x004400bc)\n// WARNING: Removing unreachable block (ram,0x004400cd)\n// WARNING: Removing unreachable block (ram,0x00440074)\n// WARNING: Removing unreachable block (ram,0x004400de)\n// WARNING: Removing unreachable block (ram,0x004400ef)\n// WARNING: Removing unreachable block (ram,0x00440105)\n// WARNING: Removing unreachable block (ram,0x00440116)\n// WARNING: Removing unreachable block (ram,0x00440127)\n\nvoid fcn.0045b580(void)\n\n{\n    uint64_t *puVar1;\n    int32_t *piVar2;\n    uint8_t *puVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t iVar10;\n    int64_t in_GS_OFFSET;\n    \n    iVar4 = **(in_GS_OFFSET + 0x28);\n    puVar8 = *0x20;\n    do {\n        puVar1 = iVar4 + 0x10;\n        puVar9 = puVar8;\n        if (*puVar1 <= puVar8 && puVar8 != *puVar1) {\n            puVar9 = puVar8 + -0x40;\n            *(puVar8 + -8) = unaff_RBP;\n            unaff_RBP = puVar8 + -8;\n            *(puVar8 + -0x1c) = 0;\n            *(puVar8 + -0x20) = 0;\n            *(puVar8 + -0x24) = 0;\n            *(puVar8 + -0x10) = 0;\n            *(puVar8 + -0x18) = 0;\n            *(puVar8 + -0x28) = 0;\n            uVar5 = 0;\n            iVar7 = 0xb3a4b57ce31;\n            for (iVar6 = 0x1e; -1 < iVar6; iVar6 = iVar6 + -1) {\n                iVar10 = 1000000000 << (iVar6 & 0x3f);\n                if (iVar10 <= iVar7) {\n                    iVar7 = iVar7 - iVar10;\n                    uVar5 = uVar5 | 1 << (iVar6 & 0x1f);\n                }\n            }\n            if (iVar7 < 1000000000) {\n                *(puVar8 + -0x1c) = iVar7;\n            }\n            else {\n                *(puVar8 + -0x1c) = 0;\n                uVar5 = 0x7fffffff;\n            }\n            if ((uVar5 == 0x3039) && (*(puVar8 + -0x1c) == 0xd431)) {\n                *(puVar8 + -0x2c) = 0;\n                *(puVar8 + -0x2c) = 1;\n                piVar2 = puVar8 + -0x2c;\n                LOCK();\n                if (*piVar2 == 1) {\n                    *piVar2 = 2;\n                    if (*(puVar8 + -0x2c) == 2) {\n                        *(puVar8 + -0x2c) = 4;\n                        LOCK();\n                        if (*piVar2 == 5) {\n                            *piVar2 = 6;\n                        }\n                        else {\n                            if (*(puVar8 + -0x2c) == 4) {\n                                *(puVar8 + -0x2c) = 0xffffffff;\n                                LOCK();\n                                if (*piVar2 == -1) {\n                                    *piVar2 = -2;\n                                    if (*(puVar8 + -0x2c) == -2) {\n                                        *(puVar8 + -0x28) = 0;\n                                        *(puVar8 + -0x28) = 0x1010101;\n                                        puVar3 = puVar8 + -0x27;\n                                        LOCK();\n                                        *puVar3 = *puVar3 | 0xf0;\n                                        if ((((puVar8[-0x28] == '\\x01') && (puVar8[-0x27] == -0xf)) &&\n                                            (puVar8[-0x26] == '\\x01')) && (puVar8[-0x25] == '\\x01')) {\n                                            *(puVar8 + -0x28) = 0;\n                                            *(puVar8 + -0x28) = 0xffffffff;\n                                            LOCK();\n                                            *puVar3 = *puVar3 & 1;\n                                            if (((puVar8[-0x28] == -1) && (puVar8[-0x27] == '\\x01')) &&\n                                               ((puVar8[-0x26] == -1 && (puVar8[-0x25] == -1)))) {\n                                                *(puVar8 + -0x10) = 0xffffffffffffffff;\n                                                *(puVar8 + -0x48) = 0x440149;\n                                                fcn.00430d40();\n                                            }\n                                            *(puVar8 + -0x48) = 0x44015a;\n                                            fcn.00430d40();\n                                        }\n                                        *(puVar8 + -0x48) = 0x44016b;\n                                        fcn.00430d40();\n                                    }\n                                    *(puVar8 + -0x48) = 0x44017c;\n                                    fcn.00430d40();\n                                }\n                                *(puVar8 + -0x48) = 0x44018d;\n                                fcn.00430d40();\n                            }\n                            *(puVar8 + -0x48) = 0x44019e;\n                            fcn.00430d40();\n                        }\n                        *(puVar8 + -0x48) = 0x4401af;\n                        fcn.00430d40();\n                    }\n                    *(puVar8 + -0x48) = 0x4401c5;\n                    fcn.00430d40();\n                }\n                *(puVar8 + -0x48) = 0x4401d6;\n                fcn.00430d40();\n            }\n            *(puVar8 + -0x48) = 0x4401e7;\n            fcn.00430d40();\n        }\n        *(puVar9 + -8) = 0x4401ed;\n        fcn.00457040();\n        puVar8 = puVar9;\n    } while( true );\n}\n",
        "token_count": 1679
    },
    "0045b6c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045b6c0(void)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    uint64_t **ppuVar3;\n    int64_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    int32_t iVar8;\n    int64_t iVar9;\n    uint64_t *puVar10;\n    uint64_t uVar11;\n    ulong *puVar12;\n    ulong uVar13;\n    uint64_t uVar14;\n    ulong unaff_RBX;\n    uchar *puVar15;\n    uchar *puVar16;\n    uchar *unaff_RBP;\n    int64_t in_GS_OFFSET;\n    \n    iVar9 = **(in_GS_OFFSET + 0x28);\n    puVar15 = *0x20;\n    do {\n        puVar16 = puVar15;\n        if (*(iVar9 + 0x10) <= puVar15 + -0x128 && puVar15 + -0x128 != *(iVar9 + 0x10)) {\n            puVar16 = puVar15 + -0x1a8;\n            *(puVar15 + -8) = unaff_RBP;\n            unaff_RBP = puVar15 + -8;\n            puVar12 = *(iVar9 + 0x30);\n            puVar1 = puVar12[3];\n            if (puVar1[2] != 0xfffffffffffffb2e) {\n                *(puVar15 + -0xf0) = iVar9;\n                puVar10 = puVar12[0x12];\n                *(puVar15 + -0xe0) = puVar10;\n                if (puVar1 == puVar10) break;\n                *(puVar15 + -200) = puVar12;\n                *(puVar15 + -0x130) = puVar1;\n                *(puVar15 + -0xd0) = *puVar12;\n                *(puVar15 + -0xd8) = puVar12[10];\n                *(puVar15 + -0x1b0) = 0x444fde;\n                fcn.004324c0();\n                *(puVar15 + -0x1b0) = 0x444fef;\n                fcn.00432dc0();\n                *(puVar15 + -0x1b0) = 0x444ff9;\n                fcn.00432c20();\n                *(puVar15 + -0x1b0) = 0x44500a;\n                fcn.00432dc0();\n                *(puVar15 + -0x1b0) = 0x445017;\n                fcn.00432d40();\n                *(puVar15 + -0x1b0) = 0x445028;\n                fcn.00432dc0();\n                *(puVar15 + -0x1b0) = 0x445035;\n                fcn.00432d40();\n                *(puVar15 + -0x1b0) = 0x445046;\n                fcn.00432dc0();\n                *(puVar15 + -0x1b0) = 0x445053;\n                fcn.00432d40();\n                *(puVar15 + -0x1b0) = 0x445065;\n                fcn.00432dc0();\n                *(puVar15 + -0x1b0) = 0x445072;\n                fcn.00432d40();\n                *(puVar15 + -0x1b0) = 0x445077;\n                fcn.00432720();\n                *(puVar15 + -0x1b0) = 0x44507c;\n                fcn.00432540();\n                iVar4 = *(*(puVar15 + -0xf0) + 0x30);\n                *(puVar15 + -0x40) = *(iVar4 + 8);\n                uVar5 = *(iVar4 + 0x14);\n                uVar6 = *(iVar4 + 0x18);\n                uVar7 = *(iVar4 + 0x1c);\n                *(puVar15 + -0x38) = *(iVar4 + 0x10);\n                *(puVar15 + -0x34) = uVar5;\n                *(puVar15 + -0x30) = uVar6;\n                *(puVar15 + -0x2c) = uVar7;\n                uVar5 = *(iVar4 + 0x24);\n                uVar6 = *(iVar4 + 0x28);\n                uVar7 = *(iVar4 + 0x2c);\n                *(puVar15 + -0x28) = *(iVar4 + 0x20);\n                *(puVar15 + -0x24) = uVar5;\n                *(puVar15 + -0x20) = uVar6;\n                *(puVar15 + -0x1c) = uVar7;\n                uVar5 = *(iVar4 + 0x34);\n                uVar6 = *(iVar4 + 0x38);\n                uVar7 = *(iVar4 + 0x3c);\n                *(puVar15 + -0x18) = *(iVar4 + 0x30);\n                *(puVar15 + -0x14) = uVar5;\n                *(puVar15 + -0x10) = uVar6;\n                *(puVar15 + -0xc) = uVar7;\n                *(puVar15 + -0x1b0) = 0x4450e5;\n                fcn.0044f5c0(*(puVar15 + -0x18));\n                *(puVar15 + -0x1b0) = 0x4450f6;\n                fcn.00430d40();\n            }\n            unaff_RBX = 0x17;\n            *(puVar15 + -0x1b0) = 0x445107;\n            fcn.00430d40();\n        }\n        *(puVar16 + -8) = 0x44510d;\n        fcn.00457040();\n        puVar15 = puVar16;\n    } while( true );\n    if (*(puVar10 + 0xb7) == '\\0') {\n        *(puVar15 + -0xb0) = puVar12[1];\n        uVar5 = *(puVar12 + 0x14);\n        uVar6 = *(puVar12 + 3);\n        uVar7 = *(puVar12 + 0x1c);\n        *(puVar15 + -0xa8) = *(puVar12 + 2);\n        *(puVar15 + -0xa4) = uVar5;\n        *(puVar15 + -0xa0) = uVar6;\n        *(puVar15 + -0x9c) = uVar7;\n        uVar5 = *(puVar12 + 0x24);\n        uVar6 = *(puVar12 + 5);\n        uVar7 = *(puVar12 + 0x2c);\n        *(puVar15 + -0x98) = *(puVar12 + 4);\n        *(puVar15 + -0x94) = uVar5;\n        *(puVar15 + -0x90) = uVar6;\n        *(puVar15 + -0x8c) = uVar7;\n        uVar5 = *(puVar12 + 0x34);\n        uVar6 = *(puVar12 + 7);\n        uVar7 = *(puVar12 + 0x3c);\n        *(puVar15 + -0x88) = *(puVar12 + 6);\n        *(puVar15 + -0x84) = uVar5;\n        *(puVar15 + -0x80) = uVar6;\n        *(puVar15 + -0x7c) = uVar7;\n        *(*(iVar9 + 0x30) + 0x10) = 0;\n        *(*(iVar9 + 0x30) + 0x30) = 0;\n        *(*(iVar9 + 0x30) + 8) = 0;\n        *(*(iVar9 + 0x30) + 0x18) = 0;\n        puVar12 = puVar10[2];\n        *(puVar15 + -0x138) = puVar12;\n        if ((puVar12 == 0xfffffffffffffade) &&\n           ((((iVar9 = *(iVar9 + 0x30),  *(iVar9 + 0xd8) != 0 || (*(iVar9 + 0xc0) != 0)) || (*(iVar9 + 0xd0) != 0)) ||\n            (*(*(iVar9 + 0xa0) + 4) != 1)))) {\n            puVar10[2] = *puVar10 + 0x13a0;\n            *(puVar15 + -0x1a8) = puVar10 + 7;\n            *(puVar15 + -0x1b0) = 0x444671;\n            fcn.00456e60();\n            puVar10 = *(puVar15 + -0xe0);\n            puVar12 = *(puVar15 + -0x138);\n        }\n        uVar14 = *puVar10;\n        if (uVar14 != 0) {\n            uVar2 = puVar10[7];\n            uVar11 = uVar2 - 8;\n            *(puVar15 + -0x178) = uVar11;\n            if (uVar11 < uVar14) {\n                *(puVar15 + -0x140) = uVar14;\n                *(puVar15 + -0x148) = uVar2;\n                *(puVar15 + -0x150) = puVar10[1];\n                *(puVar15 + -0xf8) = *(puVar15 + -0xa8);\n                *(puVar15 + -0x100) = *(puVar15 + -0xb0);\n                *(puVar15 + -0x108) = *(puVar15 + -0x88);\n                *(puVar15 + -0x110) = puVar10[8];\n                *(puVar15 + -0x118) = puVar10[0xc];\n                *(puVar15 + -0xb8) = puVar10[10];\n                *(puVar15 + -0x1b0) = 0x444725;\n                fcn.004324c0();\n                *(puVar15 + -0x1b0) = 0x444736;\n                fcn.00432dc0();\n                *(puVar15 + -0x1b0) = 0x444745;\n                fcn.00432c20();\n                *(puVar15 + -0x1b0) = 0x444756;\n                fcn.00432dc0();\n                *(puVar15 + -0x1b0) = 0x444765;\n                fcn.00432c20();\n                *(puVar15 + -0x1b0) = 0x444776;\n                fcn.00432dc0();\n                *(puVar15 + -0x1b0) = 0x444785;\n                fcn.00432c20();\n                *(puVar15 + -0x1b0) = 0x444796;\n                fcn.00432dc0();\n                *(puVar15 + -0x1b0) = 0x4447a5;\n                fcn.00432c20();\n                *(puVar15 + -0x1b0) = 0x4447b6;\n                fcn.00432dc0();\n                *(puVar15 + -0x1b0) = 0x4447c5;\n                fcn.00432c20();\n                *(puVar15 + -0x1b0) = 0x4447d6;\n                fcn.00432dc0();\n                *(puVar15 + -0x1b0) = 0x4447e5;\n                fcn.00432c20();\n                *(puVar15 + -0x1b0) = 0x4447f6;\n                fcn.00432dc0();\n                *(puVar15 + -0x1b0) = 0x444805;\n                fcn.00432c20();\n                *(puVar15 + -0x1b0) = 0x444816;\n                fcn.00432dc0();\n                *(puVar15 + -0x1b0) = 0x444825;\n                fcn.00432c20();\n                *(puVar15 + -0x1b0) = 0x444836;\n                fcn.00432dc0();\n                *(puVar15 + -0x1b0) = 0x444845;\n                fcn.00432c20();\n                *(puVar15 + -0x1b0) = 0x444856;\n                fcn.00432dc0();\n                *(puVar15 + -0x1b0) = 0x444865;\n                fcn.00432d40();\n                *(puVar15 + -0x1b0) = 0x444876;\n                fcn.00432dc0();\n                *(puVar15 + -0x1b0) = 0x44487b;\n                fcn.00432540();\n                puVar10 = *(puVar15 + -0xe0);\n                puVar12 = *(puVar15 + -0x138);\n                uVar11 = *(puVar15 + -0x178);\n            }\n            if (*puVar10 < uVar11 || *puVar10 == uVar11) {\n                if (puVar12 != 0xfffffffffffffade) {\ncode_r0x0044491a:\n                    uVar14 = puVar10[1];\n                    uVar11 = *puVar10;\n                    *(puVar15 + -0x160) = uVar14 - uVar11;\n                    uVar2 = puVar10[8];\n                    *(puVar15 + -0x1b0) = 0x444932;\n                    iVar9 = fcn.004478a0(uVar14 - uVar11, uVar2);\n                    uVar14 = *(puVar15 + -0x160);\n                    uVar11 = uVar14 << 1;\n                    if (iVar9 != 0) {\n                        *(puVar15 + -0x120) = uVar11;\n                        *(puVar15 + -0x1b0) = 0x444952;\n                        iVar8 = fcn.00448580();\n                        for (uVar11 = *(puVar15 + -0x120);\n                            uVar11 - (*(*(puVar15 + -0xe0) + 8) - *(*(puVar15 + -0xe0) + 0x38)) < iVar8 + 0x13a0U;\n                            uVar11 = uVar11 << 1) {\n                        }\n                        uVar14 = *(puVar15 + -0x160);\n                    }\n                    if (*(*(puVar15 + -0xe0) + 0x10) == -0x113) {\n                        uVar11 = uVar14;\n                    }\n                    if ((uVar11 <= *0x4f0298) && (uVar11 <= *0x4f0290)) {\n                        *(puVar15 + -0x158) = uVar11;\n                        *(puVar15 + -0x1b0) = 0x4449bd;\n                        fcn.00435000(8);\n                        *(puVar15 + -0x1b0) = 0x4449cf;\n                        fcn.004441c0();\n                        *(puVar15 + -0x1b0) = 0x4449e6;\n                        fcn.00435000(2);\n                        *(puVar15 + -0x1a8) = *(puVar15 + -0xe0) + 0x38;\n                        *(puVar15 + -0x1b0) = 0x4449fb;\n                        fcn.00456e60();\n                        return;\n                    }\n                    if (*0x4f0290 <= *0x4f0298) goto code_r0x00444b0c;\n                    *(puVar15 + -0x1b0) = 0x444a32;\n                    fcn.004324c0();\n                    *(puVar15 + -0x1b0) = 0x444a45;\n                    fcn.00432dc0();\n                    *(puVar15 + -0x1b0) = 0x444a51;\n                    fcn.00432ac0();\n                    *(puVar15 + -0x1b0) = 0x444a65;\n                    fcn.00432dc0();\n                    *(puVar15 + -0x1b0) = 0x444a6a;\n                    fcn.00432540();\n                    do {\n                        *(puVar15 + -0x140) = **(puVar15 + -0xe0);\n                        *(puVar15 + -0x148) = (*(puVar15 + -0xe0))[1];\n                        *(puVar15 + -0x1b0) = 0x444a88;\n                        fcn.004324c0();\n                        *(puVar15 + -0x1b0) = 0x444a99;\n                        fcn.00432dc0();\n                        *(puVar15 + -0x1b0) = 0x444aa5;\n                        fcn.00432c20();\n                        *(puVar15 + -0x1b0) = 0x444ab6;\n                        fcn.00432dc0();\n                        *(puVar15 + -0x1b0) = 0x444ac5;\n                        fcn.00432c20();\n                        *(puVar15 + -0x1b0) = 0x444ad6;\n                        fcn.00432dc0();\n                        *(puVar15 + -0x1b0) = 0x444ae5;\n                        fcn.00432c20();\n                        *(puVar15 + -0x1b0) = 0x444af6;\n                        fcn.00432dc0();\n                        *(puVar15 + -0x1b0) = 0x444afb;\n                        fcn.00432540();\n                        *(puVar15 + -0x1b0) = 0x444b0c;\n                        fcn.00430d40();\ncode_r0x00444b0c:\n                        *(puVar15 + -0x1b0) = 0x444b11;\n                        fcn.004324c0();\n                        *(puVar15 + -0x1b0) = 0x444b25;\n                        fcn.00432dc0();\n                        *(puVar15 + -0x1b0) = 0x444b31;\n                        fcn.00432ac0();\n                        *(puVar15 + -0x1b0) = 0x444b45;\n                        fcn.00432dc0();\n                        *(puVar15 + -0x1b0) = 0x444b4a;\n                        fcn.00432540();\n                    } while( true );\n                }\n                ppuVar3 = *(*(puVar15 + -0xf0) + 0x30);\n                if (*ppuVar3 != puVar10) {\n                    if ((ppuVar3[0x14] != NULL) || (*(ppuVar3 + 0x1b) != 0)) {\n                        if (*(puVar10 + 0xb3) != '\\0') {\n                            *(puVar10 + 0xb3) = 0;\n                            *(puVar15 + -0x1b0) = 0x4448e5;\n                            fcn.00445120();\n                            puVar10 = *(puVar15 + -0xe0);\n                        }\n                        if (*(puVar10 + 0xb2) != '\\0') {\n                            *(puVar15 + -0x1b0) = 0x444905;\n                            fcn.00439d60();\n                        }\n                        *(puVar15 + -0x1b0) = 0x444912;\n                        fcn.00439ce0();\n                        puVar10 = *(puVar15 + -0xe0);\n                        goto code_r0x0044491a;\n                    }\n                    *(puVar15 + -0x1b0) = 0x444b85;\n                    fcn.00430d40();\n                }\n                *(puVar15 + -0x1b0) = 0x444b96;\n                puVar10 = fcn.00430d40();\n            }\n            puVar12 = *(puVar10 + 0x12);\n            *(puVar15 + -0x17c) = *(puVar10 + 0x12);\n            *(puVar15 + -0x128) = puVar10[0x13];\n            *(puVar15 + -0x1b0) = 0x444bb4;\n            fcn.004324c0();\n            *(puVar15 + -0x1b0) = 0x444bc5;\n            fcn.00432dc0();\n            *(puVar15 + -0x1b0) = 0x444bd2;\n            fcn.00432d40();\n            *(puVar15 + -0x1b0) = 0x444be5;\n            fcn.00432dc0();\n            *(puVar15 + -0x1b0) = 0x444bf2;\n            fcn.00432bc0();\n            *(puVar15 + -0x1b0) = 0x444c05;\n            fcn.00432dc0();\n            *(puVar15 + -0x1b0) = 0x444c10;\n            fcn.00432c20();\n            *(puVar15 + -0x1b0) = 0x444c25;\n            fcn.00432dc0();\n            *(puVar15 + -0x1b0) = 0x444c2a;\n            fcn.00432540();\n            *(puVar15 + -0x140) = **(puVar15 + -0xe0);\n            *(puVar15 + -0x1b0) = 0x444c3f;\n            fcn.004324c0();\n            *(puVar15 + -0x1b0) = 0x444c50;\n            fcn.00432dc0();\n            *(puVar15 + -0x1b0) = 0x444c5a;\n            fcn.00432c20();\n            *(puVar15 + -0x1b0) = 0x444c6b;\n            fcn.00432dc0();\n            *(puVar15 + -0x1b0) = 0x444c75;\n            fcn.00432c20();\n            *(puVar15 + -0x1b0) = 0x444c7a;\n            fcn.00432720();\n            *(puVar15 + -0x1b0) = 0x444c7f;\n            fcn.00432540();\n            *(puVar15 + -0x1b0) = 0x444c90;\n            fcn.00430d40();\n        }\n        unaff_RBX = 0x19;\n        *(puVar15 + -0x1b0) = 0x444ca5;\n        puVar10 = fcn.00430d40();\n    }\n    *(puVar15 + -0x78) = puVar12[1];\n    uVar5 = *(puVar12 + 0x14);\n    uVar6 = *(puVar12 + 3);\n    uVar7 = *(puVar12 + 0x1c);\n    *(puVar15 + -0x70) = *(puVar12 + 2);\n    *(puVar15 + -0x6c) = uVar5;\n    *(puVar15 + -0x68) = uVar6;\n    *(puVar15 + -100) = uVar7;\n    uVar5 = *(puVar12 + 0x24);\n    uVar6 = *(puVar12 + 5);\n    uVar7 = *(puVar12 + 0x2c);\n    *(puVar15 + -0x60) = *(puVar12 + 4);\n    *(puVar15 + -0x5c) = uVar5;\n    *(puVar15 + -0x58) = uVar6;\n    *(puVar15 + -0x54) = uVar7;\n    uVar5 = *(puVar12 + 0x34);\n    uVar6 = *(puVar12 + 7);\n    uVar7 = *(puVar12 + 0x3c);\n    *(puVar15 + -0x50) = *(puVar12 + 6);\n    *(puVar15 + -0x4c) = uVar5;\n    *(puVar15 + -0x48) = uVar6;\n    *(puVar15 + -0x44) = uVar7;\n    puVar10[0xe] = *(puVar15 + -0x78);\n    puVar10[0xf] = *(puVar15 + -0x70);\n    uVar14 = puVar10[8];\n    *(puVar15 + -0x1b0) = 0x444cf9;\n    iVar9 = fcn.004478a0(uVar14);\n    if (iVar9 != 0) goto code_r0x00444f86;\n    unaff_RBX = 9;\n    uVar13 = 0x481a6a;\n    iVar9 = 0;\n    do {\n        *(puVar15 + -0x168) = unaff_RBX;\n        *(puVar15 + -0xe8) = uVar13;\n        *(puVar15 + -0x170) = iVar9;\n        puVar12 = *(puVar15 + -0xe0);\n        *(puVar15 + -0x140) = puVar12[7];\n        *(puVar15 + -0x148) = *puVar12;\n        *(puVar15 + -0x150) = puVar12[1];\n        *(puVar15 + -0xf8) = *(puVar15 + -0x70);\n        *(puVar15 + -0x100) = *(puVar15 + -0x78);\n        *(puVar15 + -0x108) = *(puVar15 + -0x50);\n        *(puVar15 + -0x110) = puVar12[8];\n        *(puVar15 + -0x118) = puVar12[0xc];\n        *(puVar15 + -0xb8) = puVar12[10];\n        *(puVar15 + -0x1b0) = 0x444da5;\n        fcn.004324c0();\n        *(puVar15 + -0x1b0) = 0x444db6;\n        fcn.00432dc0();\n        *(puVar15 + -0x1b0) = 0x444dc8;\n        fcn.00432dc0();\n        *(puVar15 + -0x1b0) = 0x444dd9;\n        fcn.00432dc0();\n        *(puVar15 + -0x1b0) = 0x444de5;\n        fcn.00432c20();\n        *(puVar15 + -0x1b0) = 0x444df6;\n        fcn.00432dc0();\n        *(puVar15 + -0x1b0) = 0x444e05;\n        fcn.00432c20();\n        *(puVar15 + -0x1b0) = 0x444e16;\n        fcn.00432dc0();\n        *(puVar15 + -0x1b0) = 0x444e25;\n        fcn.00432c20();\n        *(puVar15 + -0x1b0) = 0x444e36;\n        fcn.00432dc0();\n        *(puVar15 + -0x1b0) = 0x444e45;\n        fcn.00432c20();\n        *(puVar15 + -0x1b0) = 0x444e56;\n        fcn.00432dc0();\n        *(puVar15 + -0x1b0) = 0x444e65;\n        fcn.00432c20();\n        *(puVar15 + -0x1b0) = 0x444e76;\n        fcn.00432dc0();\n        *(puVar15 + -0x1b0) = 0x444e85;\n        fcn.00432c20();\n        *(puVar15 + -0x1b0) = 0x444e96;\n        fcn.00432dc0();\n        *(puVar15 + -0x1b0) = 0x444ea5;\n        fcn.00432c20();\n        *(puVar15 + -0x1b0) = 0x444eb6;\n        fcn.00432dc0();\n        *(puVar15 + -0x1b0) = 0x444ec5;\n        fcn.00432c20();\n        *(puVar15 + -0x1b0) = 0x444ed6;\n        fcn.00432dc0();\n        *(puVar15 + -0x1b0) = 0x444ee5;\n        fcn.00432c20();\n        *(puVar15 + -0x1b0) = 0x444ef6;\n        fcn.00432dc0();\n        *(puVar15 + -0x1b0) = 0x444f05;\n        fcn.00432c20();\n        *(puVar15 + -0x1b0) = 0x444f16;\n        fcn.00432dc0();\n        *(puVar15 + -0x1b0) = 0x444f25;\n        fcn.00432d40();\n        *(puVar15 + -0x1b0) = 0x444f36;\n        fcn.00432dc0();\n        *(puVar15 + -0x1b0) = 0x444f3b;\n        fcn.00432540();\n        *(*(*(puVar15 + -0xf0) + 0x30) + 0xf9) = 2;\n        *(puVar15 + -0x1b0) = 0x444f75;\n        fcn.0044f5c0(*(puVar15 + -0x50));\n        unaff_RBX = 0x20;\n        *(puVar15 + -0x1b0) = 0x444f86;\n        iVar9 = fcn.00430d40();\ncode_r0x00444f86:\n        *(puVar15 + -0xc0) = iVar9;\n        *(puVar15 + -0x1b0) = 0x444f93;\n        uVar13 = fcn.00447f80();\n        iVar9 = *(*(puVar15 + -0xe0) + 0x40) - **(puVar15 + -0xc0);\n    } while( true );\n}\n",
        "token_count": 6974
    },
    "0045f100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.0045f100(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    bool bVar3;\n    int32_t iVar4;\n    uint32_t *in_RAX;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    uVar7 = *in_RAX;\n    bVar3 = false;\n    bVar1 = false;\n    iVar5 = 0;\n    while( true ) {\n        while( true ) {\n            while( true ) {\n                uVar8 = uVar7 & 5;\n                if (uVar8 == 1) {\n                    cVar2 = fcn.00454a80();\n                }\n                else {\n                    cVar2 = '\\0';\n                }\n                if (cVar2 == '\\0') break;\n                if (((!bVar1) && ((uVar7 >> 1 & 1) == 0)) && (uVar7 >> 3 != 0)) {\n                    LOCK();\n                    if (uVar7 == *in_RAX) {\n                        *in_RAX = uVar7 | 2;\n                        bVar1 = true;\n                    }\n                }\n                fcn.00454b00();\n                uVar7 = *in_RAX;\n            }\n            uVar9 = uVar7;\n            if ((uVar7 & 4) == 0) {\n                uVar9 = uVar7 | 1;\n            }\n            if (uVar8 != 0) {\n                uVar9 = uVar9 + 8;\n            }\n            if ((bVar3) && ((uVar7 & 1) != 0)) {\n                uVar9 = uVar9 | 4;\n            }\n            if (bVar1) {\n                if ((uVar9 >> 1 & 1) == 0) {\n                    fcn.004547a0();\n                }\n                uVar9 = uVar9 & 0xfffffffd;\n            }\n            LOCK();\n            if (uVar7 == *in_RAX) break;\n            uVar7 = *in_RAX;\n        }\n        *in_RAX = uVar9;\n        if (uVar8 == 0) break;\n        if (iVar5 == 0) {\n            iVar5 = fcn.00454ec0();\n        }\n        fcn.00454d80(1);\n        if (bVar3) {\n            bVar3 = true;\n        }\n        else {\n            iVar6 = fcn.00454ec0();\n            bVar3 = 1000000 < iVar6 - iVar5;\n        }\n        uVar7 = *in_RAX;\n        if ((uVar7 >> 2 & 1) != 0) {\n            if (((uVar7 & 3) != 0) || (uVar7 >> 3 == 0)) {\n                fcn.004547a0();\n            }\n            if ((bVar3) && (uVar7 >> 3 != 1)) {\n                iVar4 = -7;\n            }\n            else {\n                iVar4 = -0xb;\n            }\n            LOCK();\n            uVar7 = *in_RAX;\n            *in_RAX = *in_RAX + iVar4;\n            return uVar7;\n        }\n        bVar1 = true;\n    }\n    return uVar7;\n}\n",
        "token_count": 798
    },
    "0045f4e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045f4e0(void)\n\n{\n    int32_t *in_RAX;\n    code **unaff_RBX;\n    int64_t unaff_R14;\n    bool bVar1;\n    uchar in_XMM15 [16];\n    uchar auStack64 [16];\n    uchar auStack48 [16];\n    uint uStack32;\n    code **ppcStack24;\n    code **ppcStack16;\n    \n    while (ppcStack24 = SUB168(in_XMM15, 0),  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    LOCK();\n    bVar1 = in_RAX[1] == 0;\n    if (bVar1) {\n        in_RAX[1] = 1;\n    }\n    if (!bVar1) {\n        fcn.0045f100();\n    }\n    auStack64 = CONCAT88(in_RAX + 1, 0x45f680);\n    ppcStack16 = auStack64;\n    if (*in_RAX == 0) {\n        auStack48 = CONCAT88(in_RAX, 0x45f640);\n        uStack32 = 1;\n        ppcStack24 = auStack48;\n        (**unaff_RBX)(in_RAX, unaff_RBX);\n        (**ppcStack24)();\n    }\n    (**ppcStack16)();\n    return;\n}\n",
        "token_count": 329
    },
    "004603e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.004603e0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    char *pcVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    ulong uVar5;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    ulong arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x28 && *0x20 + -0x28 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0xa8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x48) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0xb0) = 0x460418;\n            uVar1 = fcn.00461c00();\n            iVar3 = *0x503530;\n            if (unaff_RDI == 0) {\n                if (unaff_RBX != 0) {\n                    unaff_RDI = 0;\n                    goto code_r0x0046042f;\n                }\n            }\n            else {\n                uVar1 = 0;\ncode_r0x0046042f:\n                if (unaff_RDI != 0) {\n                    return NULL;\n                }\n                *(*0x20 + -0x20) = uVar1;\n                *(*0x20 + -0xb0) = 0x460465;\n                pcVar2 = fcn.0040dec0(*(*0x20 + 8));\n                unaff_RBX = *0x503e30;\n                if (*pcVar2 == '\\0') {\n                    *(*0x20 + -0xb0) = 0x4604ec;\n                    uVar1 = fcn.0045b7c0();\n                    goto code_r0x004604ec;\n                }\n                unaff_RDI = *(*0x20 + 8);\n                *(*0x20 + -0xb0) = 0x46048f;\n                fcn.00445f40(*0x503e38);\n                *(*0x20 + -0xb0) = 0x460494;\n                iVar3 = fcn.00461c00();\n                if (unaff_RDI != 0) {\n                    iVar3 = 0;\n                    goto code_r0x004604ad;\n                }\n                if (unaff_RBX != 0) {\n                    unaff_RDI = 0;\ncode_r0x004604ad:\n                    if (unaff_RDI != 0) {\n                        return NULL;\n                    }\n                    *(*0x20 + -0xb0) = 0x4604c5;\n                    uVar1 = fcn.0045b760();\ncode_r0x004604ec:\n                    if (iVar3 != 0) {\n                        *(*0x20 + -0x58) = iVar3;\n                        *(*0x20 + -0xb0) = 0x460505;\n                        uVar1 = fcn.00461d60();\n                        *(*0x20 + -0x10) = uVar1;\n                        *(*0x20 + -0x50) = iVar3;\n                        *(*0x20 + -0xb0) = 0x46051e;\n                        uVar1 = fcn.0040b3c0();\n                        *(*0x20 + -0x18) = uVar1;\n                        *(*0x20 + -0xb0) = 0x460530;\n                        uVar1 = fcn.00408ce0();\n                        uVar5 = 0x49e7c0;\n                        puVar4 = *(*0x20 + -0x18);\n                        *puVar4 = 0x49e7c0;\n                        if (*0x557ed0 == 0) {\n                            puVar4[1] = uVar1;\n                        }\n                        else {\n                            *(*0x20 + -0xb0) = 0x46055a;\n                            fcn.00459280(0x49e7c0, puVar4, param_3, param_4);\n                        }\n                        puVar4[3] = *(*0x20 + -0x48);\n                        if (*0x557ed0 == 0) {\n                            puVar4[2] = *(*0x20 + 8);\n                        }\n                        else {\n                            puVar4 = *(*0x20 + 8);\n                            *(*0x20 + -0xb0) = 0x46058b;\n                            fcn.004593a0(uVar5, puVar4, param_3, param_4);\n                        }\n                        uVar5 = 0x48100f;\n                        arg4 = 2;\n                        *(*0x20 + -0xb0) = 0x4605bb;\n                        uVar1 = fcn.004460c0(0xf, puVar4, 0x48100f, 2);\n                        iVar3 = *(*0x20 + -0x18);\n                        *(iVar3 + 0x28) = 0x482bba;\n                        if (*0x557ed0 == 0) {\n                            *(iVar3 + 0x20) = uVar1;\n                        }\n                        else {\n                            *(*0x20 + -0xb0) = 0x4605df;\n                            fcn.00459280(iVar3, puVar4, uVar5, arg4);\n                        }\n                        return NULL;\n                    }\n                    *(*0x20 + -0x60) = uVar1;\n                    *(*0x20 + -0xb0) = 0x460609;\n                    puVar4 = fcn.0040b3c0();\n                    uVar1 = *(*0x20 + -0x48);\n                    puVar4[1] = uVar1;\n                    if (*0x557ed0 == 0) {\n                        *puVar4 = *(*0x20 + 8);\n                    }\n                    else {\n                        *(*0x20 + -0xb0) = 0x460638;\n                        puVar4 = fcn.004593a0(uVar1, *(*0x20 + 8), param_3, param_4);\n                    }\n                    puVar4[2] = *(*0x20 + -0x60);\n                    return puVar4;\n                }\n                *(*0x20 + -0xb0) = 0x460677;\n                fcn.00459720(0);\n            }\n            *(*0x20 + -0xb0) = 0x460685;\n            in_RAX = fcn.00459720(unaff_RBX);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x460695;\n        fcn.00457040();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1638
    },
    "004606c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.004606c0(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    ulong uVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    ulong noname_2;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x40 && *0x20 + -0x40 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0xc0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x80) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            for (iVar4 = 0; iVar4 < arg1; iVar4 = iVar4 + 1) {\n                if (*(unaff_RBX + iVar4) == '\\0') {\n                    arg1 = 0;\n                    iVar6 = 0x49e7c0;\n                    iVar4 = 0;\n                    goto code_r0x00460766;\n                }\n            }\n            *(*0x20 + -0xa0) = arg1 + 1;\n            *(*0x20 + -200) = 0x460745;\n            iVar4 = fcn.00442380(arg1);\n            unaff_RBX = *(*0x20 + 0x10);\n            arg1 = *(*0x20 + -0xa0);\n            iVar6 = 0;\n            in_RAX = *(*0x20 + 8);\ncode_r0x00460766:\n            if (iVar6 != 0) {\n                iVar4 = 0;\n                goto code_r0x00460780;\n            }\n            if (arg1 != 0) {\n                iVar6 = 0;\ncode_r0x00460780:\n                if (iVar6 != 0) {\n                    return NULL;\n                }\n                uVar2 = *(in_RAX + 0x10);\n                *(*0x20 + -200) = 0x460798;\n                iVar6 = iVar4;\n                uVar1 = fcn.0045b800();\n                if (iVar4 != 0) {\n                    *(*0x20 + -0x98) = iVar4;\n                    *(*0x20 + -200) = 0x4607b6;\n                    uVar2 = fcn.00461d60();\n                    *(*0x20 + -0x70) = uVar2;\n                    *(*0x20 + -0x88) = iVar4;\n                    *(*0x20 + -200) = 0x4607cc;\n                    uVar2 = fcn.0040b3c0();\n                    *(*0x20 + -0x78) = uVar2;\n                    *(*0x20 + -200) = 0x4607db;\n                    uVar2 = fcn.00408ce0();\n                    uVar1 = 0x49e7c0;\n                    puVar3 = *(*0x20 + -0x78);\n                    *puVar3 = 0x49e7c0;\n                    if (*0x557ed0 == 0) {\n                        puVar3[1] = uVar2;\n                    }\n                    else {\n                        *(*0x20 + -200) = 0x460805;\n                        fcn.00459280(0x49e7c0, puVar3, iVar6, in_R9);\n                    }\n                    uVar2 = *(*0x20 + -0x80);\n                    puVar3[3] = uVar2;\n                    if (*0x557ed0 == 0) {\n                        noname_2 = *(*0x20 + 0x10);\n                        puVar3[2] = noname_2;\n                    }\n                    else {\n                        noname_2 = *(*0x20 + 0x10);\n                        *(*0x20 + -200) = 0x460836;\n                        fcn.00459400(uVar1, puVar3, noname_2, in_R9);\n                    }\n                    *(*0x20 + -0xd0) = unaff_RBP;\n                    *(*0x20 + -200) = 0x46084f;\n                    fcn.004599ab();\n                    *(*0x20 + -0x68) = 0x482bab;\n                    *(*0x20 + -0x60) = 0xf;\n                    *(*0x20 + -0x58) = noname_2;\n                    *(*0x20 + -0x50) = uVar2;\n                    *(*0x20 + -0x48) = 0x48287a;\n                    *(*0x20 + -0x40) = 0xe;\n                    uVar2 = (*(*0x20 + 8))[1];\n                    *(*0x20 + -0x38) = **(*0x20 + 8);\n                    *(*0x20 + -0x30) = uVar2;\n                    *(*0x20 + -0x28) = 0x48100f;\n                    *(*0x20 + -0x20) = 2;\n                    *(*0x20 + -0x18) = *(*0x20 + -0x70);\n                    uVar2 = *(*0x20 + -0x88);\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -200) = 0x4608f2;\n                    uVar1 = fcn.00445ca0(6);\n                    iVar4 = *(*0x20 + -0x78);\n                    *(iVar4 + 0x28) = *0x20 + -0x68;\n                    if (*0x557ed0 == 0) {\n                        *(iVar4 + 0x20) = uVar1;\n                    }\n                    else {\n                        *(*0x20 + -200) = 0x460913;\n                        fcn.00459280(iVar4, uVar2, noname_2, in_R9);\n                    }\n                    return NULL;\n                }\n                *(*0x20 + -0x90) = uVar1;\n                *(*0x20 + -200) = 0x46093d;\n                puVar3 = fcn.0040b3c0();\n                if (*0x557ed0 == 0) {\n                    *puVar3 = *(*0x20 + 8);\n                }\n                else {\n                    *(*0x20 + -200) = 0x460965;\n                    puVar3 = fcn.004593a0(uVar2, *(*0x20 + 8), iVar6, in_R9);\n                }\n                puVar3[2] = *(*0x20 + -0x80);\n                if (*0x557ed0 == 0) {\n                    puVar3[1] = *(*0x20 + 0x10);\n                }\n                else {\n                    *(*0x20 + -200) = 0x460996;\n                    puVar3 = fcn.004593a0(uVar2, *(*0x20 + 0x10), iVar6, in_R9);\n                }\n                puVar3[3] = *(*0x20 + -0x90);\n                return puVar3;\n            }\n            *(*0x20 + -200) = 0x4609d5;\n            in_RAX = fcn.00459720(0);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x4609ea;\n        fcn.00457040();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1836
    },
    "00461820": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00461820(void)\n\n{\n    int64_t iVar1;\n    bool bVar2;\n    int32_t *in_RAX;\n    int64_t unaff_R14;\n    int64_t iVar3;\n    uchar in_XMM15 [16];\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (iVar3 = SUB168(in_XMM15, 0),  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    ppcStack16 = NULL;\n    if (*(in_RAX + 2) == 0) {\n        LOCK();\n        if (*in_RAX == 0) {\n            *in_RAX = 1;\n        }\n        else {\n            fcn.0045f100();\n        }\n        auStack32 = CONCAT88(in_RAX, 0x461980);\n        ppcStack16 = auStack32;\n        if (*(in_RAX + 2) == 0) {\n            iVar1 = *(in_RAX + 6);\n            fcn.004603e0();\n            if (iVar1 != 0) {\n                (**ppcStack16)();\n                return iVar1;\n            }\n            fcn.004541a0(in_RAX + 2);\n        }\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if (bVar2) {\n        (**ppcStack16)();\n    }\n    return iVar3;\n}\n",
        "token_count": 348
    },
    "004619e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004619e0(void)\n\n{\n    bool bVar1;\n    int32_t *in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    int64_t iVar3;\n    uchar in_XMM15 [16];\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (iVar3 = SUB168(in_XMM15, 0),  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    ppcStack16 = NULL;\n    if (*(in_RAX + 8) == 0) {\n        LOCK();\n        if (*in_RAX == 0) {\n            *in_RAX = 1;\n        }\n        else {\n            fcn.0045f100();\n        }\n        auStack32 = CONCAT88(in_RAX, 0x461ba0);\n        ppcStack16 = auStack32;\n        if (*(in_RAX + 8) == 0) {\n            iVar2 = fcn.00461820();\n            if (iVar2 != 0) {\n                (**ppcStack16)();\n                return iVar2;\n            }\n            iVar2 = *(in_RAX + 2);\n            fcn.004606c0(*(in_RAX + 4));\n            if (iVar2 != 0) {\n                (**ppcStack16)();\n                return iVar2;\n            }\n            fcn.004541a0(in_RAX + 8);\n        }\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n    }\n    if (bVar1) {\n        (**ppcStack16)();\n    }\n    return iVar3;\n}\n",
        "token_count": 392
    },
    "00468ca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00468ca0(void)\n\n{\n    int16_t *in_RAX;\n    ulong uVar1;\n    int64_t arg1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (in_RAX != NULL) {\n        arg1 = 0;\n        for (; *in_RAX != 0; in_RAX = in_RAX + 1) {\n            arg1 = arg1 + 1;\n        }\n        fcn.0045fac0(arg1);\n        uVar1 = fcn.00446660(arg1);\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 181
    },
    "0046a080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0046a080(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    ulong uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            while (uVar1 = *in_RAX,  (uVar1 & 0x7ffff8) != 0) {\n                LOCK();\n                uVar2 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar1 == uVar2) * (*in_RAX ^ uVar1 - 8);\n                if (uVar1 == uVar2) {\n                    if ((uVar1 - 8 & 0x7ffff9) != 1) {\n                        return 0;\n                    }\n                    *(*0x20 + -0x20) = 0x46a0d4;\n                    uVar3 = fcn.0046aae0();\n                    return uVar3;\n                }\n            }\n            *(*0x20 + -0x20) = 0x46a0ff;\n            in_RAX = fcn.004305a0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x46a10a;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 428
    },
    "0046ac00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0046ac00(void)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    cVar1 = fcn.00469f60();\n    if (cVar1 == '\\0') {\n        uVar2 = *0x503c30;\n        if (*(in_RAX + 0x21f) == '\\0') {\n            uVar2 = 0x49e780;\n        }\n        return uVar2;\n    }\n    if (*(in_RAX + 0x220) == '\\x04') {\n        fcn.00461f40(*(in_RAX + 0x10));\n    }\n    if (*(in_RAX + 0x1b8) != 0) {\n        fcn.004545a0();\n    }\n    uVar2 = fcn.0046a080();\n    fcn.00454cc0(in_RAX + 0x218);\n    return uVar2;\n}\n",
        "token_count": 269
    },
    "0046af80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0046af80(void)\n\n{\n    uint8_t uVar1;\n    int64_t *piVar2;\n    uint8_t *in_RAX;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t *piVar5;\n    int64_t unaff_RBX;\n    int64_t *arg1;\n    int64_t iVar6;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t *piVar10;\n    uint8_t uVar11;\n    int64_t *piVar12;\n    int64_t in_R11;\n    int64_t unaff_R14;\n    int64_t *piStack64;\n    int64_t iStack24;\n    uint8_t *puStack16;\n    \n    while (piVar10 = &iStack24,  piVar10 < *(unaff_R14 + 0x10) || piVar10 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    piVar5 = NULL;\n    piVar4 = NULL;\n    iVar6 = 0;\n    arg1 = NULL;\n    uVar8 = 0;\n    do {\n        if (unaff_RBX < 1) {\n            for (; 0 < piVar5; piVar5 = piVar5 - 1) {\n                piVar10 = arg1 + 1;\n                iVar3 = iVar6;\n                if (piVar4 < piVar10) {\n                    piVar4 = arg1;\n                    iVar3 = fcn.004425c0(arg1);\n                    piVar10 = iVar6 + 1;\n                }\n                *(iVar3 + arg1) = 0x5c;\n                arg1 = piVar10;\n                iVar6 = iVar3;\n            }\n            return iVar6;\n        }\n        uVar1 = *in_RAX;\n        uVar9 = uVar8;\n        iStack24 = unaff_RBX;\n        puStack16 = in_RAX;\n        if (uVar1 < 0x21) {\n            if (((uVar1 == 9) || (uVar1 == 0x20)) && (uVar8 == 0)) {\n                for (; 0 < piVar5; piVar5 = piVar5 - 1) {\n                    piVar10 = arg1 + 1;\n                    iVar3 = iVar6;\n                    if (piVar4 < piVar10) {\n                        piVar4 = arg1;\n                        iVar3 = fcn.004425c0(arg1);\n                        piVar10 = iVar6 + 1;\n                    }\n                    *(iVar3 + arg1) = 0x5c;\n                    arg1 = piVar10;\n                    iVar6 = iVar3;\n                }\n                return iVar6;\n            }\ncode_r0x0046b142:\n            for (; 0 < piVar5; piVar5 = piVar5 - 1) {\n                piVar12 = arg1 + 1;\n                iVar3 = iVar6;\n                if (piVar4 < piVar12) {\n                    piVar4 = arg1;\n                    iVar3 = fcn.004425c0(arg1);\n                    piVar12 = iVar6 + 1;\n                    uVar9 = uVar8 & 0xff;\n                    in_RAX = puStack16;\n                    unaff_RBX = iStack24;\n                }\n                *(iVar3 + arg1) = 0x5c;\n                arg1 = piVar12;\n                iVar6 = iVar3;\n            }\n            piVar12 = arg1 + 1;\n            iVar3 = iVar6;\n            if (piVar4 < piVar12) {\n                piVar4 = arg1;\n                iVar3 = fcn.004425c0(arg1);\n                piVar12 = iVar6 + 1;\n                uVar9 = uVar8 & 0xff;\n                in_RAX = puStack16;\n                unaff_RBX = iStack24;\n            }\n            *(iVar3 + arg1) = uVar1;\n            piVar5 = NULL;\n            iVar6 = iVar3;\n        }\n        else {\n            if (uVar1 == 0x22) {\n                in_R11 = piVar5 / 2;\n                piVar2 = uVar1;\n                piVar12 = piVar5;\n                piStack64 = piVar5;\n                goto code_r0x0046b1bf;\n            }\n            if (uVar1 != 0x5c) goto code_r0x0046b142;\n            piVar5 = piVar5 + 1;\n            piVar12 = arg1;\n        }\n        while (unaff_RBX == 0) {\n            in_RAX = fcn.004597e0(0);\n            iVar3 = iVar6;\n            while( true ) {\n                *(iVar3 + arg1) = 0x5c;\n                in_R11 = in_R11 + -1;\n                arg1 = piVar10;\n                iVar6 = iVar3;\n                piVar2 = piVar5;\ncode_r0x0046b1bf:\n                piVar5 = piVar2;\n                uVar7 = uVar9;\n                if (in_R11 < 1) break;\n                piVar10 = arg1 + 1;\n                iVar3 = iVar6;\n                if (piVar4 < piVar10) {\n                    piVar4 = arg1;\n                    iVar3 = fcn.004425c0(arg1);\n                    piVar10 = iVar6 + 1;\n                    uVar9 = uVar8 & 0xff;\n                    piVar5 = uVar1;\n                    in_RAX = puStack16;\n                    unaff_RBX = iStack24;\n                    piVar12 = piStack64;\n                }\n            }\n            if ((piVar12 & 1) == 0) {\n                piVar12 = arg1;\n                if (((uVar9 != '\\0') && (1 < unaff_RBX)) && (in_RAX[1] == 0x22)) {\n                    piVar12 = arg1 + 1;\n                    iVar3 = iVar6;\n                    uVar11 = piVar5;\n                    if (piVar4 < piVar12) {\n                        piVar4 = arg1;\n                        iVar3 = fcn.004425c0(arg1);\n                        piVar12 = iVar6 + 1;\n                        uVar7 = uVar8;\n                        in_RAX = puStack16;\n                        unaff_RBX = iStack24;\n                        uVar11 = uVar1;\n                    }\n                    *(iVar3 + arg1) = uVar11;\n                    in_RAX = in_RAX + 1;\n                    unaff_RBX = unaff_RBX + -1;\n                    iVar6 = iVar3;\n                }\n                uVar9 = uVar7 ^ 1;\n            }\n            else {\n                piVar12 = arg1 + 1;\n                uVar11 = piVar5;\n                if (piVar4 < piVar12) {\n                    piVar4 = arg1;\n                    iVar3 = fcn.004425c0(arg1);\n                    piVar12 = iVar6 + 1;\n                    uVar9 = uVar8 & 0xff;\n                    in_RAX = puStack16;\n                    unaff_RBX = iStack24;\n                    iVar6 = iVar3;\n                    uVar11 = uVar1;\n                }\n                *(iVar6 + arg1) = uVar11;\n            }\n            piVar5 = NULL;\n        }\n        unaff_RBX = unaff_RBX + -1;\n        in_RAX = in_RAX + (-unaff_RBX >> 0x3f & 1);\n        arg1 = piVar12;\n        uVar8 = uVar9;\n        in_R11 = unaff_RBX;\n    } while( true );\n}\n",
        "token_count": 1714
    },
    "0046b3c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0046b3c0(void)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_RAX;\n    ulong uVar2;\n    ulong uVar3;\n    int64_t arg2;\n    uint64_t arg1;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t unaff_RBX;\n    int64_t iVar6;\n    uint64_t uVar7;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    arg1 = 0;\n    uVar5 = 0;\n    iVar6 = 0;\n    while (0 < unaff_RBX) {\n        uVar1 = *in_RAX;\n        if ((uVar1 == 0x20) || (uVar1 == 9)) {\n            in_RAX = in_RAX + (-(unaff_RBX + -1) >> 0x3f & 1);\n            unaff_RBX = unaff_RBX + -1;\n        }\n        else {\n            uVar2 = fcn.0046af80();\n            uVar3 = fcn.00446300(unaff_RBX);\n            uVar7 = uVar5 + 1;\n            arg2 = iVar6;\n            if (arg1 < uVar7) {\n                arg1 = uVar5;\n                arg2 = fcn.004425c0(uVar5);\n                uVar7 = iVar6 + 1;\n            }\n            iVar4 = uVar5 * 0x10;\n            *(arg2 + 8 + iVar4) = uVar2;\n            in_RAX = uVar1;\n            uVar5 = uVar7;\n            unaff_RBX = iVar6;\n            if (*0x557ed0 == 0) {\n                *(arg2 + iVar4) = uVar3;\n                iVar6 = arg2;\n            }\n            else {\n                fcn.00459280(arg1, arg2, arg2 + iVar4, in_R9);\n                iVar6 = arg2;\n            }\n        }\n    }\n    return iVar6;\n}\n",
        "token_count": 504
    },
    "004111e0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.004111e0(void)\n\n{\n    ulong in_RAX;\n    uint64_t arg1;\n    uint64_t uVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = in_RAX;\n            uVar1 = (unaff_RBX >> 3) + 7 >> 3;\n            *(*0x20 + -0x20) = uVar1;\n            *(*0x20 + -0x28) = uVar1 + 1;\n            unaff_RBX = 1;\n            *(*0x20 + -0x50) = 0x41122b;\n            arg1 = fcn.0040b720(0x559b60);\n            uVar1 = *(*0x20 + -0x28);\n            if (uVar1 < 0x40000001) {\n                if (*(*0x20 + -0x20) < uVar1) {\n                    *(*0x20 + -0x18) = arg1;\n                    *(*(*0x20 + -0x20) + arg1) = 0xa1;\n                    *(*0x20 + -0x50) = 0x411265;\n                    fcn.004112e0(arg1);\n                    if (*(*(*0x20 + -0x20) + *(*0x20 + -0x18)) == -0x5f) {\n                        return;\n                    }\n                    unaff_RBX = 0x1b;\n                    *(*0x20 + -0x50) = 0x411293;\n                    fcn.00430d40();\n                    uVar1 = arg1;\n                }\n                *(*0x20 + -0x50) = 0x41129b;\n                fcn.00459720(uVar1);\n            }\n            *(*0x20 + -0x50) = 0x4112a5;\n            in_RAX = fcn.00459780(uVar1, 0x40000000);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x4112b5;\n        fcn.00457040();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 659
    },
    "0042e880": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.0042e880(void)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x0042e880:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x48;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + -0x1c) = 0;\n        *(*0x20 + -0x18) = in_XMM15;\n        for (iVar1 = 0; iVar1 < 5; iVar1 = iVar1 + 1) {\n            *(*0x20 + iVar1 * 4 + -0x1c) = 0xffffffff;\n        }\n        uVar2 = 0;\n        do {\n            if (uVar2 < 9) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = uVar2 + 7 >> 4;\n            }\n            if (4 < uVar3) {\n                return;\n            }\n            if (uVar2 < 9) {\n                uVar4 = 0x50;\n            }\n            else {\n                uVar4 = uVar2 + 0x48;\n            }\n            if (uVar4 < 0x8000) {\n                if (uVar4 < 0x3f9) {\n                    uVar4 = uVar4 + 7 >> 3;\n                    if (0x80 < uVar4) goto code_r0x0042eab2;\n                    uVar4 = *(uVar4 + 0x4f2f80);\n                    if (0x43 < uVar4) goto code_r0x0042eaa5;\n                    uVar4 = *(uVar4 * 2 + 0x4f30c0);\n                }\n                else {\n                    uVar4 = uVar4 - 0x381 >> 7;\n                    if (0xf8 < uVar4) goto code_r0x0042ea97;\n                    if (0x43 < \" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                               [uVar4]) goto code_r0x0042ea8a;\n                    uVar4 = *(\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                              [uVar4] * 2 + 0x4f30c0);\n                }\n            }\n            else if (uVar4 <= uVar4 + 0x2000) {\n                uVar4 = uVar4 + 0x1fff & 0xffffffffffffe000;\n            }\n            if (*(*0x20 + uVar3 * 4 + -0x1c) < 0) {\n                *(*0x20 + uVar3 * 4 + -0x1c) = uVar4;\n            }\n            else if (uVar4 != *(*0x20 + uVar3 * 4 + -0x1c)) goto code_r0x0042ea03;\n            uVar2 = uVar2 + 1;\n        } while( true );\n    }\n    goto code_r0x0042eac0;\ncode_r0x0042ea03:\n    *(*0x20 + -0x30) = uVar3;\n    *(*0x20 + -0x38) = uVar4;\n    *(*0x20 + -0x28) = uVar2;\n    *(*0x20 + -0x50) = 0x42ea17;\n    fcn.004324c0();\n    *(*0x20 + -0x50) = 0x42ea28;\n    fcn.00432dc0();\n    *(*0x20 + -0x50) = 0x42ea32;\n    fcn.00432ac0();\n    *(*0x20 + -0x50) = 0x42ea45;\n    fcn.00432dc0();\n    *(*0x20 + -0x50) = 0x42ea4f;\n    fcn.00432ac0();\n    *(*0x20 + -0x50) = 0x42ea65;\n    fcn.00432dc0();\n    *(*0x20 + -0x50) = 0x42ea6f;\n    fcn.00432ac0();\n    *(*0x20 + -0x50) = 0x42ea74;\n    fcn.00432720();\n    *(*0x20 + -0x50) = 0x42ea79;\n    fcn.00432540();\n    *(*0x20 + -0x50) = 0x42ea8a;\n    fcn.00430d40();\ncode_r0x0042ea8a:\n    *(*0x20 + -0x50) = 0x42ea97;\n    fcn.00459720(0x44);\ncode_r0x0042ea97:\n    *(*0x20 + -0x50) = 0x42eaa5;\n    fcn.00459740(0xf9);\ncode_r0x0042eaa5:\n    *(*0x20 + -0x50) = 0x42eab2;\n    fcn.00459720(0x44);\ncode_r0x0042eab2:\n    *(*0x20 + -0x50) = 0x42eabf;\n    fcn.00459740(0x81);\ncode_r0x0042eac0:\n    *(puVar5 + -8) = 0x42eac5;\n    fcn.00457040();\n    *0x20 = puVar5;\n    goto code_r0x0042e880;\n}\n",
        "token_count": 1460
    },
    "004327c0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004328ab)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004327c0(ulong noname_0, ulong arg2)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    uint uVar4;\n    uint uVar6;\n    double dVar5;\n    uchar in_XMM0 [16];\n    double dVar7;\n    uint uStack20;\n    ushort uStack16;\n    uchar uStack14;\n    uchar uStack13;\n    uchar uStack12;\n    char cStack11;\n    char cStack10;\n    char cStack9;\n    \n    while (dVar5 = SUB168(in_XMM0, 0),  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n        in_XMM0 = in_XMM0 & 0xffffffffffffffff;\n    }\n    uVar4 = SUB164(in_XMM0, 0);\n    uVar6 = SUB164(in_XMM0 >> 0x20, 0);\n    if (dVar5 == dVar5 + dVar5) {\n        if (0.0 < dVar5) {\n            fcn.00432dc0();\n            return;\n        }\n        if ((dVar5 == dVar5 + dVar5) && (dVar5 < 0.0)) {\n            fcn.00432dc0();\n            return;\n        }\n    }\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack14 = 0;\n    if (dVar5 == 0.0) {\n        iVar2 = 0;\n    }\n    else {\n        if (dVar5 < 0.0) {\n            in_XMM0 = ZEXT816(*0x49e288) ^ in_XMM0;\n        }\n        iVar2 = 0;\n        for (; *0x49e248 <= SUB168(in_XMM0, 0);\n            in_XMM0 = CONCAT88(SUB168(in_XMM0 >> 0x40, 0), SUB168(in_XMM0, 0) / *0x49e248)) {\n            iVar2 = iVar2 + 1;\n        }\n        for (; dVar5 = SUB168(in_XMM0, 0),  dVar5 < *0x49e228;\n            in_XMM0 = CONCAT88(SUB168(in_XMM0 >> 0x40, 0), dVar5 * *0x49e248)) {\n            iVar2 = iVar2 + -1;\n        }\n        dVar7 = *0x49e240;\n        for (iVar3 = 0; iVar3 < 7; iVar3 = iVar3 + 1) {\n            dVar7 = dVar7 / *0x49e248;\n        }\n        dVar7 = dVar7 + dVar5;\n        if (*0x49e248 <= dVar7) {\n            iVar2 = iVar2 + 1;\n            dVar7 = dVar7 / *0x49e248;\n        }\n        uVar4 = SUB84(dVar7, 0);\n        uVar6 = dVar7 >> 0x20;\n    }\n    for (iVar3 = 0; iVar3 < 7; iVar3 = iVar3 + 1) {\n        *(&uStack20 + iVar3) = CONCAT44(uVar6, uVar4) + '0';\n        dVar5 = (CONCAT44(uVar6, uVar4) - CONCAT44(uVar6, uVar4)) * *0x49e248;\n        uVar4 = SUB84(dVar5, 0);\n        uVar6 = dVar5 >> 0x20;\n    }\n    uStack20 = CONCAT31(uStack20._1_3_, 0x2e);\n    uStack13 = 0x65;\n    uStack12 = 0x2b;\n    if (iVar2 < 0) {\n        uStack12 = 0x2d;\n        iVar2 = -iVar2;\n    }\n    cStack11 = ((SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(iVar2) >> 0x40, 0) + iVar2 >> 6) - (iVar2 >> 0x3f)) + '0'\n    ;\n    iVar3 = (SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar2) >> 0x40, 0) + iVar2 >> 3) - (iVar2 >> 0x3f);\n    cVar1 = iVar3;\n    cStack10 = cVar1 + ((iVar3 & 0xff) / 10) * -10 + '0';\n    cStack9 = iVar2 + cVar1 * -10 + '0';\n    fcn.004325a0(0xe);\n    return;\n}\n",
        "token_count": 1123
    },
    "004469c0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong fcn.004469c0(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    ulong uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x18) = in_XMM15;\n            if (in_RAX < 0x400000000001) {\n                *(*0x20 + 8) = in_RAX;\n                uVar1 = in_RAX * 4;\n                *(*0x20 + -0x30) = uVar1;\n                if (0x7fff < uVar1) {\n                    if (uVar1 <= uVar1 + 0x2000) {\n                        uVar1 = uVar1 + 0x1fff & 0xffffffffffffe000;\n                    }\n                    goto code_r0x00446ab9;\n                }\n                if (uVar1 < 0x3f9) {\n                    uVar1 = uVar1 + 7 >> 3;\n                    if (uVar1 < 0x81) {\n                        uVar1 = *(uVar1 + 0x4f2f80);\n                        if (0x43 < uVar1) goto code_r0x00446b45;\n                        uVar1 = *(uVar1 * 2 + 0x4f30c0);\ncode_r0x00446ab9:\n                        *(*0x20 + -0x38) = uVar1;\n                        *(*0x20 + -0x58) = 0x446aca;\n                        uVar2 = fcn.0040a9e0(0);\n                        uVar1 = *(*0x20 + -0x38);\n                        if (uVar1 != *(*0x20 + -0x30)) {\n                            *(*0x20 + -0x28) = uVar2;\n                            *(*0x20 + -0x58) = 0x446af5;\n                            fcn.00459d80(uVar1, *(*0x20 + 8));\n                            uVar2 = *(*0x20 + -0x28);\n                            uVar1 = *(*0x20 + -0x38);\n                        }\n                        *(*0x20 + -0x20) = uVar2;\n                        *(*0x20 + -0x18) = *(*0x20 + 8);\n                        *(*0x20 + -0x10) = uVar1 >> 2;\n                        return *(*0x20 + -0x20);\n                    }\n                }\n                else {\n                    uVar1 = uVar1 - 0x381 >> 7;\n                    if (uVar1 < 0xf9) {\n                        if (\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                            [uVar1] < 0x44) {\n                            uVar1 = *(\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                      [uVar1] * 2 + 0x4f30c0);\n                            goto code_r0x00446ab9;\n                        }\n                        *(*0x20 + -0x58) = 0x446b33;\n                        fcn.00459720(0x44);\n                    }\n                    *(*0x20 + -0x58) = 0x446b45;\n                    fcn.00459740(0xf9);\ncode_r0x00446b45:\n                    *(*0x20 + -0x58) = 0x446b52;\n                    fcn.00459720(0x44);\n                }\n                *(*0x20 + -0x58) = 0x446b5f;\n                fcn.00459740(0x81);\n            }\n            *(*0x20 + -0x58) = 0x446b70;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x446b7b;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1147
    },
    "004487c0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint8_t * fcn.004487c0(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint8_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint8_t *puVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    uint64_t unaff_RBX;\n    int32_t *unaff_RSI;\n    int64_t *unaff_RDI;\n    char in_R8B;\n    uint64_t uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint64_t in_R10;\n    int64_t unaff_R12;\n    \n    if (unaff_RBX != 0) {\n        uVar1 = *in_RAX;\n        uVar10 = uVar1;\n        if ((uVar1 == 0) && (in_R8B == '\\0')) {\n            return NULL;\n        }\n        if (-1 < uVar1) {\n            uVar8 = 1;\n            goto code_r0x00448815;\n        }\n        uVar6 = 0;\n        uVar8 = 0;\n        iVar9 = 0;\n        while (uVar6 < unaff_RBX) {\n            puVar5 = in_RAX + uVar6;\n            uVar7 = uVar6 + 1;\n            uVar6 = uVar7;\n            uVar10 = (*puVar5 & 0x7f) << (iVar9 & 0x1f);\n            in_R10 = uVar10;\n            uVar10 = uVar8 | uVar10;\n            uVar8 = uVar10;\n            if ((*puVar5 & 0x80) == 0) {\n                uVar8 = uVar7;\n                unaff_R12 = arg1;\ncode_r0x00448815:\n                uVar10 = -(uVar10 & 1) ^ uVar10 >> 1;\n                uVar6 = uVar10;\n                *unaff_RSI = *unaff_RSI + uVar10;\n                if (uVar8 <= unaff_RBX) {\n                    unaff_RBX = unaff_RBX - uVar8;\n                    uVar6 = arg1 - uVar8;\n                    uVar8 = uVar8 & -uVar6 >> 0x3f;\n                    unaff_RSI = in_RAX + uVar8;\n                    if (unaff_RBX != 0) {\n                        uVar3 = in_RAX[uVar8];\n                        if (-1 < in_RAX[uVar8]) {\n                            uVar4 = 1;\n                            goto code_r0x00448868;\n                        }\n                        uVar10 = 0;\n                        uVar8 = 0;\n                        uVar3 = 0;\n                        while (uVar3 < unaff_RBX) {\n                            uVar4 = uVar3 + 1;\n                            iVar9 = uVar8;\n                            uVar10 = uVar10 | (*(uVar3 + unaff_RSI) & 0x7f) << (uVar8 & 0x1f);\n                            in_R10 = uVar4;\n                            if ((*(uVar3 + unaff_RSI) & 0x80) == 0) {\n                                uVar3 = uVar10;\ncode_r0x00448868:\n                                if (uVar4 <= unaff_RBX) {\n                                    *unaff_RDI = *unaff_RDI + uVar3;\n                                    return (uVar4 & -(uVar6 - uVar4) >> 0x3f) + unaff_RSI;\n                                }\n                                uVar8 = unaff_RBX;\n                                uVar10 = fcn.004597e0(unaff_RBX);\n                                iVar9 = uVar8;\n                            }\n                            uVar8 = iVar9 + 7;\n                            uVar3 = in_R10 & 0xffffffff;\n                        }\n                        fcn.00459720(unaff_RBX);\n                    }\n                    fcn.00459720(unaff_RBX);\n                }\n                uVar3 = unaff_RBX;\n                in_RAX = fcn.004597e0(unaff_RBX);\n                iVar9 = uVar3;\n                arg1 = unaff_R12;\n            }\n            iVar9 = iVar9 + 7;\n        }\n        fcn.00459720(unaff_RBX);\n    }\n    fcn.00459720(unaff_RBX);\n    pcVar2 = swi(3);\n    puVar5 = (*pcVar2)();\n    return puVar5;\n}\n",
        "token_count": 1006
    },
    "00406320": {
        "rules": [
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688",
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653"
        ],
        "decompiled_code": "\nint64_t fcn.00406320(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    char cVar6;\n    char cVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (*0x503f60 != NULL) {\n                if (*0x503f68 < 1) {\n                    return 0;\n                }\n                iVar2 = 0;\n                piVar3 = *0x503f60;\n                while( true ) {\n                    iVar1 = *piVar3;\n                    if ((unaff_RBX < piVar3[1]) && (*(unaff_RBX + iVar1) == '=')) break;\ncode_r0x0040638e:\n                    iVar2 = iVar2 + 1;\n                    if (*0x503f68 <= iVar2) {\n                        return 0;\n                    }\n                    piVar3 = piVar3 + 2;\n                }\n                uVar5 = 0;\n                do {\n                    if (unaff_RBX <= uVar5) {\n                        return iVar1 + (unaff_RBX + 1 & -((piVar3[1] - unaff_RBX) + -1) >> 0x3f);\n                    }\n                    cVar6 = *(uVar5 + iVar1);\n                    if (unaff_RBX <= uVar5) {\n                        *(*0x20 + -0x20) = 0x406413;\n                        fcn.00459720(unaff_RBX);\n                        break;\n                    }\n                    cVar7 = *(uVar5 + in_RAX);\n                    if (cVar7 != cVar6) {\n                        if (cVar6 + 0xbfU < 0x1a) {\n                            cVar6 = cVar6 + ' ';\n                        }\n                        if (cVar7 + 0xbfU < 0x1a) {\n                            cVar7 = cVar7 + ' ';\n                        }\n                        if (cVar6 != cVar7) goto code_r0x0040638e;\n                    }\n                    uVar5 = uVar5 + 1;\n                } while( true );\n            }\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x20) = 0x406425;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x406435;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 757
    },
    "0041da60": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041da60(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            iVar2 = *(in_RAX + 0x138);\n            iVar3 = unaff_RBX;\n            if (iVar2 == 0) {\n                *(*0x20 + -0x28) = 0x41da98;\n                iVar2 = fcn.0041ff20();\n                *(iVar2 + 0x18) = 0;\n                iVar3 = *(*0x20 + 8);\n                *(iVar3 + 0x130) = iVar2;\n                *(iVar3 + 0x138) = iVar2;\n                arg1 = *(*0x20 + 0x18);\n                iVar3 = *(*0x20 + 0x10);\n                in_RAX = *(*0x20 + 8);\n            }\n            iVar4 = *(iVar2 + 0x10);\n            if (iVar4 < 1) {\ncode_r0x0041db4b:\n                uVar1 = *(iVar2 + 0x10);\n                if (uVar1 < 0x3f) {\n                    *(iVar2 + 0x10) = uVar1 + 1;\n                    iVar4 = uVar1 * 0x20;\n                    *(iVar2 + 0x20 + iVar4) = iVar3 - *(in_RAX + 0x100);\n                    *(iVar2 + 0x24 + iVar4) = *(arg1 + 4);\n                    *(iVar2 + 0x28 + iVar4) = arg1;\n                    *(in_RAX + 0x140) = *(in_RAX + 0x140) + 1;\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x41db9b;\n                fcn.00459720(0x3f);\ncode_r0x0041db9b:\n                unaff_RBX = 0x29;\n                *(*0x20 + -0x28) = 0x41dbac;\n                fcn.00430d40();\n            }\n            else {\n                unaff_RBX = iVar3 - *(in_RAX + 0x100);\n                if (iVar4 - 1U < 0x3f) {\n                    iVar6 = (iVar4 - 1U) * 0x20;\n                    if (*(iVar2 + 0x20 + iVar6) + *(iVar2 + 0x24 + iVar6) <= unaff_RBX) {\n                        if (iVar4 == 0x3f) {\n                            *(*0x20 + -0x10) = iVar2;\n                            *(*0x20 + -0x28) = 0x41db19;\n                            iVar2 = fcn.0041ff20();\n                            *(iVar2 + 0x18) = 0;\n                            *(*(*0x20 + -0x10) + 0x18) = iVar2;\n                            in_RAX = *(*0x20 + 8);\n                            *(in_RAX + 0x138) = iVar2;\n                            iVar3 = *(*0x20 + 0x10);\n                            arg1 = *(*0x20 + 0x18);\n                        }\n                        goto code_r0x0041db4b;\n                    }\n                    goto code_r0x0041db9b;\n                }\n            }\n            arg1 = 0x3f;\n            *(*0x20 + -0x28) = 0x41dbb9;\n            in_RAX = fcn.00459720(0x3f);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x41dbce;\n        fcn.00457040();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1120
    },
    "0041dc00": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nulong fcn.0041dc00(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    ulong uVar3;\n    uint64_t arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (arg1 == 0) {\n                return 0;\n            }\n            *(*0x20 + 0x18) = arg1;\n            arg1_00 = arg1 / 2;\n            *(*0x20 + -0x10) = arg1_00;\n            *(*0x20 + -0x50) = 0x41dc45;\n            uVar3 = fcn.0041dc00(arg1_00);\n            if (arg1_00 < 0x3f) {\n                *(*0x20 + -0x30) = uVar3;\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x20) = arg1_00 * 0x20;\n                *(*0x20 + -0x28) = unaff_RBX + arg1_00 * 0x20 + 0x20;\n                *(*0x20 + -0x50) = 0x41dca5;\n                uVar3 = fcn.0041dc00((*(*0x20 + 0x18) - *(*0x20 + -0x10)) + -1);\n                iVar1 = *(*0x20 + -0x20);\n                iVar2 = *(*0x20 + -0x18);\n                *(iVar2 + 0x30 + iVar1) = *(*0x20 + -0x30);\n                *(iVar2 + 0x38 + iVar1) = uVar3;\n                return *(*0x20 + -0x28);\n            }\n            arg1 = 0x3f;\n            *(*0x20 + -0x50) = 0x41dcec;\n            in_RAX = fcn.00459720(0x3f);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x41dd05;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 698
    },
    "00427980": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.00427980(void)\n\n{\n    uint32_t uVar1;\n    int64_t *piVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    while (uVar1 = *0x557da0,  iVar4 = *0x557da8,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    for (; iVar4 != 0; iVar4 = *(iVar4 + 8)) {\n        piVar2 = fcn.00427440(uVar1);\n        uVar3 = uVar1 % 3;\n        *piVar2 = *piVar2 + piVar2[uVar3 * 4 + 4];\n        piVar2[1] = piVar2[1] + piVar2[uVar3 * 4 + 5];\n        piVar2[2] = piVar2[2] + piVar2[uVar3 * 4 + 6];\n        piVar2[3] = piVar2[3] + piVar2[uVar3 * 4 + 7];\n        piVar2[uVar3 * 4 + 4] = 0;\n        piVar2[uVar3 * 4 + 5] = 0;\n        piVar2[uVar3 * 4 + 6] = 0;\n        piVar2[uVar3 * 4 + 7] = 0;\n    }\n    return;\n}\n",
        "token_count": 356
    },
    "00427a60": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.00427a60(void)\n\n{\n    int64_t *piVar1;\n    ulong in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar *unaff_RBX;\n    uchar *puVar5;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xe8 && *0x20 + -0xe8 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x168;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x178) = *0x20 + -8;\n            *(*0x20 + -0x170) = 0x427aaf;\n            fcn.00459974();\n            unaff_RBP = *(*0x20 + -0x178);\n            unaff_RBX = *0x20 + -0x120;\n            *(*0x20 + -0x170) = 0x427aca;\n            uVar2 = fcn.0044fd80(0x20);\n            *(*0x20 + -0x130) = uVar2;\n            *(*0x20 + -0x170) = 0x427add;\n            fcn.00409300();\n            if (*(*0x20 + -0x130) < 0x21) {\n                *(*0x20 + -0x170) = 0x427b11;\n                uVar2 = fcn.00427500(*0x20 + -0x120);\n                *(*0x20 + -0x128) = uVar2;\n                *(*0x20 + -0x134) = *0x557da0;\n                *(*0x20 + -0x170) = 0x427b25;\n                iVar3 = fcn.00427440();\n                iVar4 = (*(*0x20 + -0x134) + ((*(*0x20 + -0x134) + 2U) / 3) * -3 + 2) * 0x20;\n                piVar1 = iVar3 + 0x20 + iVar4;\n                *piVar1 = *piVar1 + 1;\n                piVar1 = iVar3 + 0x30 + iVar4;\n                *piVar1 = *piVar1 + *(*0x20 + 0x10);\n                *(*0x20 + -0x170) = 0x427b6b;\n                fcn.00409520();\n                *(*0x20 + -0x20) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                *(*0x20 + -0x10) = 0;\n                *(*0x20 + -0x20) = 0x427c20;\n                *(*0x20 + -0x18) = *(*0x20 + 8);\n                *(*0x20 + -0x10) = *(*0x20 + -0x128);\n                *(*0x20 + -0x168) = *0x20 + -0x20;\n                *(*0x20 + -0x170) = 0x427bbd;\n                fcn.00456f00();\n                return;\n            }\n            *(*0x20 + -0x170) = 0x427beb;\n            in_RAX = fcn.00459760(*(*0x20 + -0x130), 0x20);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x427bfb;\n        fcn.00457040();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 984
    },
    "00427c60": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.00427c60(void)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00409300();\n    iVar2 = *0x557da0;\n    iVar3 = fcn.00427440();\n    iVar4 = (iVar2 + ((iVar2 + 1U) / 3) * -3 + 1) * 0x20;\n    piVar1 = iVar3 + 0x28 + iVar4;\n    *piVar1 = *piVar1 + 1;\n    piVar1 = iVar3 + 0x38 + iVar4;\n    *piVar1 = *piVar1 + unaff_RBX;\n    fcn.00409520();\n    return;\n}\n",
        "token_count": 244
    },
    "00428a00": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.00428a00(int64_t **arg1)\n\n{\n    ulong in_RAX;\n    int64_t **arg1_00;\n    int64_t *piVar1;\n    int64_t **ppiVar2;\n    int64_t iVar3;\n    int64_t **ppiVar4;\n    int64_t **arg2;\n    int64_t unaff_RBX;\n    int64_t *piVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    int64_t **arg1_01;\n    int64_t iVar8;\n    int64_t **unaff_R13;\n    int64_t unaff_R14;\n    bool bVar9;\n    bool bVar10;\n    \n    do {\n        ppiVar2 = arg1;\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX + 0x800000000000U < arg1 + 0x100000000000) {\n                ppiVar2 = arg1 - unaff_RBX;\n            }\n            else {\n                ppiVar2 = NULL;\n            }\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + -0x20) = unaff_RBX;\n            if (ppiVar2 != NULL) {\n                *(*0x20 + -0x28) = unaff_RBX + 0x800000000000U;\n                *(*0x20 + -0x30) = arg1 + 0x100000000000;\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x68) = 0x428a65;\n                arg1_00 = fcn.004287e0();\n                if (arg1_00 < 1) {\n                    ppiVar4 = *(*0x20 + 8);\n                    iVar7 = *(*0x20 + -0x20);\n                    bVar9 = false;\ncode_r0x00428aae:\n                    ppiVar2 = ppiVar4[1];\n                    piVar1 = *ppiVar4;\n                    arg2 = ppiVar4[2];\n                    if (arg1_00 < ppiVar2) {\n                        if (arg1_00 < ppiVar2) {\n                            iVar8 = *(*0x20 + -0x18);\n                            bVar10 = piVar1[arg1_00 * 2] == iVar8;\n                            goto code_r0x00428aea;\n                        }\n                    }\n                    else {\n                        iVar8 = *(*0x20 + -0x18);\n                        bVar10 = false;\ncode_r0x00428aea:\n                        if (bVar10) {\n                            if (!bVar9) {\ncode_r0x00428c14:\n                                if (bVar10) {\n                                    if (arg1_00 < ppiVar2) {\n                                        piVar1[arg1_00 * 2] = iVar7;\n                                        bVar9 = *(*0x20 + -0x30) < *(*0x20 + -0x28);\n                                        bVar10 = *(*0x20 + -0x30) == *(*0x20 + -0x28);\n                                        goto code_r0x00428e11;\n                                    }\n                                }\n                                else {\n                                    *(*0x20 + -0x38) = arg1_00;\n                                    arg1_01 = ppiVar2 + 1;\n                                    if (arg2 < arg1_01) {\n                                        *(*0x20 + -0x40) = arg2;\n                                        *(*0x20 + -0x48) = ppiVar2;\n                                        *(*0x20 + -0x10) = piVar1;\n                                        ppiVar4[1] = arg1_01;\n                                        ppiVar4[2] = arg2 << 1;\n                                        piVar1 = ppiVar4[4];\n                                        *(*0x20 + -0x68) = 0x428d0d;\n                                        piVar1 = fcn.0040b720(piVar1);\n                                        ppiVar4 = *(*0x20 + 8);\n                                        *ppiVar4 = piVar1;\n                                        arg2 = ppiVar4[2];\n                                        arg1_00 = *(*0x20 + -0x38);\n                                        if (arg1_00 <= arg2) {\n                                            arg2 = *(*0x20 + -0x40);\n                                            if (arg1_00 <= arg2) {\n                                                piVar5 = *(*0x20 + -0x10);\n                                                if (piVar1 != piVar5) {\n                                                    *(*0x20 + -0x68) = 0x428d4e;\n                                                    fcn.0045a040(arg1_00 << 4);\n                                                    arg1_00 = *(*0x20 + -0x38);\n                                                    ppiVar4 = *(*0x20 + 8);\n                                                    piVar5 = *(*0x20 + -0x10);\n                                                    arg2 = *(*0x20 + -0x40);\n                                                }\n                                                arg1_01 = ppiVar4[1];\n                                                if (arg1_00 + 1U <= arg1_01) {\n                                                    iVar7 = arg1_01 + (-1 - arg1_00);\n                                                    if (*(*0x20 + -0x48) - arg1_00 < iVar7) {\n                                                        iVar7 = *(*0x20 + -0x48) - arg1_00;\n                                                    }\n                                                    if (piVar5 + (arg1_00 - arg2 >> 0x3f & arg1_00 << 4) !=\n                                                        *ppiVar4 +\n                                                        (-(ppiVar4[2] + (-1 - arg1_00)) >> 0x3f & (arg1_00 + 1U) * 0x10)\n                                                       ) {\n                                                        *(*0x20 + -0x68) = 0x428dd1;\n                                                        fcn.0045a040(iVar7 << 4);\n                                                        ppiVar4 = *(*0x20 + 8);\n                                                        arg1_00 = *(*0x20 + -0x38);\n                                                    }\n                                                    iVar7 = *(*0x20 + -0x20);\n                                                    iVar8 = *(*0x20 + -0x18);\n                                                    goto code_r0x00428deb;\n                                                }\ncode_r0x00428e32:\n                                                *(*0x20 + -0x68) = 0x428e3a;\n                                                arg1_00 = arg1_01;\n                                                fcn.004597e0(arg1_01);\n                                            }\n                                            *(*0x20 + -0x68) = 0x428e45;\n                                            fcn.004597a0(arg1_00, arg2);\n                                        }\n                                        *(*0x20 + -0x68) = 0x428e4d;\n                                        fcn.004597a0(arg1_00, arg2);\ncode_r0x00428e4d:\n                                        *(*0x20 + -0x68) = 0x428e58;\n                                        fcn.004597e0(arg1_01);\ncode_r0x00428e58:\n                                        *(*0x20 + -0x68) = 0x428e65;\n                                        fcn.004597e0(arg1_01);\n                                    }\n                                    else if (arg1_01 <= arg2) {\n                                        ppiVar4[1] = arg1_01;\n                                        arg2 = *ppiVar4;\n                                        if (arg1_01 < arg1_00 + 1U) goto code_r0x00428e58;\n                                        iVar3 = ppiVar2 - arg1_00;\n                                        if (arg1_01 < arg1_00) goto code_r0x00428e4d;\n                                        if (iVar3 + 1 < iVar3) {\n                                            iVar3 = iVar3 + 1;\n                                        }\n                                        if ((-(ppiVar4[2] - arg1_00) >> 0x3f & arg1_00 << 4) + arg2 !=\n                                            arg2 + (-((ppiVar4[2] - arg1_00) + -1) >> 0x3f & (arg1_00 + 1U) * 0x10)) {\n                                            *(*0x20 + -0x68) = 0x428cc5;\n                                            fcn.0045a040(iVar3 << 4);\n                                            ppiVar4 = *(*0x20 + 8);\n                                            arg1_00 = *(*0x20 + -0x38);\n                                            iVar7 = *(*0x20 + -0x20);\n                                            iVar8 = *(*0x20 + -0x18);\n                                        }\ncode_r0x00428deb:\n                                        piVar1 = *ppiVar4;\n                                        ppiVar2 = ppiVar4[1];\n                                        if (ppiVar2 <= arg1_00) {\n                                            *(*0x20 + -0x68) = 0x428e32;\n                                            fcn.00459720(ppiVar2);\n                                            arg2 = ppiVar4;\n                                            arg1_01 = arg1_00;\n                                            goto code_r0x00428e32;\n                                        }\n                                        piVar1[arg1_00 * 2] = iVar7;\n                                        piVar1[arg1_00 * 2 + 1] = iVar8;\n                                        bVar9 = *(*0x20 + -0x30) < *(*0x20 + -0x28);\n                                        bVar10 = *(*0x20 + -0x30) == *(*0x20 + -0x28);\n                                        goto code_r0x00428e11;\n                                    }\n                                    ppiVar2 = arg1_01;\n                                    *(*0x20 + -0x68) = 0x428e6d;\n                                    fcn.004597a0(ppiVar2, arg2);\n                                }\n                                *(*0x20 + -0x68) = 0x428e75;\n                                fcn.00459720(ppiVar2);\n                                goto code_r0x00428e75;\n                            }\n                            if (arg1_00 < ppiVar2) {\n                                if (ppiVar2 <= arg1_00 - 1U) goto code_r0x00428e92;\n                                piVar1[(arg1_00 - 1U) * 2 + 1] = piVar1[arg1_00 * 2 + 1];\n                                ppiVar2 = ppiVar4[1];\n                                if (ppiVar2 < arg1_00) goto code_r0x00428e8a;\n                                iVar3 = ppiVar2 - arg1_00;\n                                unaff_R13 = ppiVar2;\n                                if (ppiVar2 < arg1_00 + 1) goto code_r0x00428e7f;\n                                if (iVar3 + -1 < iVar3) {\n                                    iVar3 = iVar3 + -1;\n                                }\n                                if (*ppiVar4 + (-((ppiVar4[2] - arg1_00) + -1) >> 0x3f & (arg1_00 + 1) * 0x10) !=\n                                    (-(ppiVar4[2] - arg1_00) >> 0x3f & arg1_00 * 0x10) + *ppiVar4) {\n                                    *(*0x20 + -0x68) = 0x428b9e;\n                                    fcn.0045a040(iVar3 << 4);\n                                    ppiVar4 = *(*0x20 + 8);\n                                    iVar7 = *(*0x20 + -0x20);\n                                    iVar8 = *(*0x20 + -0x18);\n                                }\n                                arg2 = ppiVar4[2];\n                                ppiVar2 = ppiVar4[1] - 1;\n                                if (arg2 < ppiVar2) goto code_r0x00428e7a;\n                                ppiVar4[1] = ppiVar2;\n                                bVar9 = *(*0x20 + -0x30) < *(*0x20 + -0x28);\n                                bVar10 = *(*0x20 + -0x30) == *(*0x20 + -0x28);\ncode_r0x00428e11:\n                                if (bVar9 || bVar10) {\n                                    iVar8 = 0;\n                                }\n                                else {\n                                    iVar8 = iVar8 - iVar7;\n                                }\n                                ppiVar4[3] = ppiVar4[3] + iVar8;\n                                return;\n                            }\n                        }\n                        else {\n                            if (!bVar9) goto code_r0x00428c14;\n                            if (arg1_00 - 1U < ppiVar2) {\n                                piVar1[(arg1_00 - 1U) * 2 + 1] = iVar8;\n                                bVar9 = *(*0x20 + -0x30) < *(*0x20 + -0x28);\n                                bVar10 = *(*0x20 + -0x30) == *(*0x20 + -0x28);\n                                goto code_r0x00428e11;\n                            }\ncode_r0x00428e75:\n                            *(*0x20 + -0x68) = 0x428e7a;\n                            fcn.00459720(ppiVar2);\ncode_r0x00428e7a:\n                            *(*0x20 + -0x68) = 0x428e7f;\n                            fcn.004597a0(ppiVar2, arg2);\ncode_r0x00428e7f:\n                            *(*0x20 + -0x68) = 0x428e8a;\n                            ppiVar2 = unaff_R13;\n                            fcn.004597e0(unaff_R13);\ncode_r0x00428e8a:\n                            *(*0x20 + -0x68) = 0x428e92;\n                            fcn.004597e0(ppiVar2);\ncode_r0x00428e92:\n                            *(*0x20 + -0x68) = 0x428e97;\n                            fcn.00459720(ppiVar2);\n                        }\n                        *(*0x20 + -0x68) = 0x428e9f;\n                        fcn.00459720(ppiVar2);\n                    }\n                    *(*0x20 + -0x68) = 0x428ea5;\n                    fcn.00459720(ppiVar2);\n                }\n                else {\n                    ppiVar4 = *(*0x20 + 8);\n                    ppiVar2 = ppiVar4[1];\n                    if (arg1_00 - 1U < ppiVar2) {\n                        iVar7 = *(*0x20 + -0x20);\n                        bVar9 = *(*ppiVar4 + 8 + (arg1_00 - 1U) * 0x10) == iVar7;\n                        goto code_r0x00428aae;\n                    }\n                }\n                *(*0x20 + -0x68) = 0x428ead;\n                fcn.00459720(ppiVar2);\n            }\n            *(*0x20 + -0x68) = 0x428eb2;\n            fcn.004324c0();\n            *(*0x20 + -0x68) = 0x428ec5;\n            fcn.00432dc0();\n            *(*0x20 + -0x68) = 0x428ecf;\n            fcn.00432c20();\n            *(*0x20 + -0x68) = 0x428ee5;\n            fcn.00432dc0();\n            *(*0x20 + -0x68) = 0x428eef;\n            fcn.00432c20();\n            *(*0x20 + -0x68) = 0x428f05;\n            fcn.00432dc0();\n            *(*0x20 + -0x68) = 0x428f0a;\n            fcn.00432540();\n            unaff_RBX = 0x29;\n            *(*0x20 + -0x68) = 0x428f1b;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = ppiVar2;\n        *(puVar6 + -8) = 0x428f30;\n        fcn.00457040();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 3738
    },
    "0043ea60": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.0043ea60(void)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x26f8) != 0) {\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x10) = in_RAX + 0x26d8;\n            *(*0x20 + -0x28) = 0x43eaa5;\n            fcn.00409300();\n            if ((*(*0x20 + 8))[0x9be] != 0) goto code_r0x0043eb01;\n            iVar2 = **(*0x20 + 8);\n            iVar5 = iVar2 + ((iVar2 >> 0x1f) >> 0x1b) >> 5;\n            uVar4 = iVar2 + iVar5 * -0x20;\n            if (-1 < uVar4) {\n                if (iVar5 < *0x503fe8) {\n                    puVar1 = *0x503fe0 + iVar5 * 4;\n                    LOCK();\n                    *puVar1 = *puVar1 & ~(1 << (uVar4 & 0x1f) & -(uVar4 < 0x20));\ncode_r0x0043eb01:\n                    *(*0x20 + -0x28) = 0x43eb0b;\n                    fcn.00409520();\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x43eb27;\n                fcn.00459720(*0x503fe8);\n            }\n            *(*0x20 + -0x28) = 0x43eb2c;\n            in_RAX = fcn.0042e7c0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x43eb37;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 609
    },
    "0043eb60": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nint32_t fcn.0043eb60(void)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int64_t in_RAX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            do {\n            } while (*(in_RAX + 0x5f4) != *(in_RAX + 0x5f4));\n            if ((*(in_RAX + 0x5f4) == *(in_RAX + 0x5f0)) && (*(in_RAX + 0xdf8) == 0)) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x20) = 0x43ebb3;\n                fcn.0043ea60();\n                piVar2 = *(*0x20 + 8);\n                iVar3 = *piVar2;\n                iVar5 = ((iVar3 >> 0x1f) >> 0x1b) + iVar3 >> 5;\n                uVar6 = iVar3 + iVar5 * -0x20;\n                if (-1 < uVar6) {\n                    if (iVar5 < *0x503fa8) {\n                        puVar1 = *0x503fa0 + iVar5 * 4;\n                        LOCK();\n                        *puVar1 = *puVar1 | 1 << (uVar6 & 0x1f) & -(uVar6 < 0x20);\n                        *(piVar2 + 2) = *0x5047f0;\n                        LOCK();\n                        iVar3 = *0x5047f8;\n                        *0x5047f0 = piVar2;\n                        *0x5047f8 = *0x5047f8 + 1;\n                        return iVar3;\n                    }\n                    *(*0x20 + -0x20) = 0x43ec45;\n                    fcn.00459720(*0x503fa8);\n                }\n                *(*0x20 + -0x20) = 0x43ec4a;\n                fcn.0042e7c0();\n            }\n            *(*0x20 + -0x20) = 0x43ec5b;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x43ec66;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 689
    },
    "0043ec80": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.0043ec80(void)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t *piVar4;\n    uint64_t arg1;\n    uint32_t uVar5;\n    int32_t iVar6;\n    \n    piVar4 = *0x5047f0;\n    if (*0x5047f0 == NULL) {\n        return;\n    }\n    iVar2 = **0x5047f0;\n    iVar6 = iVar2 + ((iVar2 >> 0x1f) >> 0x1b) >> 5;\n    uVar5 = iVar2 + iVar6 * -0x20;\n    if (-1 < uVar5) {\n        arg1 = *0x503fe8;\n        if (iVar6 < *0x503fe8) {\n            puVar1 = *0x503fe0 + iVar6 * 4;\n            LOCK();\n            *puVar1 = *puVar1 | 1 << (uVar5 & 0x1f) & -(uVar5 < 0x20);\n            iVar2 = *piVar4;\n            iVar6 = iVar2 + ((iVar2 >> 0x1f) >> 0x1b) >> 5;\n            uVar5 = iVar2 + iVar6 * -0x20;\n            arg1 = *0x503fa8;\n            if (-1 < uVar5) {\n                if (iVar6 < *0x503fa8) {\n                    puVar1 = *0x503fa0 + iVar6 * 4;\n                    LOCK();\n                    *puVar1 = *puVar1 & ~(1 << (uVar5 & 0x1f) & -(uVar5 < 0x20));\n                    LOCK();\n                    *0x5047f0 = *(piVar4 + 2);\n                    *0x5047f8 = *0x5047f8 + -1;\n                    return;\n                }\n                fcn.00459720(*0x503fa8);\n            }\n            fcn.0042e7c0();\n        }\n        fcn.00459720(arg1);\n    }\n    fcn.0042e7c0();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 508
    },
    "004026e0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint64_t fcn.004026e0(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == 0) {\n                return 1;\n            }\n            if (*(in_RAX + 0x18) != NULL) {\n                if ((*(in_RAX + 0x17) & 0x20) != 0) {\n                    return in_RAX & 0xffffffffffffff00 | unaff_RBX == arg1;\n                }\n                pcVar1 = **(in_RAX + 0x18);\n                *(*0x20 + -0x38) = 0x40272c;\n                uVar2 = (*pcVar1)();\n                return uVar2;\n            }\n            *(*0x20 + -0x38) = 0x40274a;\n            fcn.00450e40();\n            arg1 = 0x1c;\n            *(*0x20 + -0x38) = 0x402765;\n            fcn.00445f40(0x1c);\n            *(*0x20 + -0x38) = 0x40276a;\n            unaff_RBX = fcn.00408d60();\n            *(*0x20 + -0x38) = 0x402779;\n            in_RAX = fcn.004305a0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x40278e;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 568
    },
    "004027c0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint64_t fcn.004027c0(int64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == 0) {\n                return 1;\n            }\n            uVar2 = *(in_RAX + 8);\n            if (*(uVar2 + 0x18) != NULL) {\n                if ((*(uVar2 + 0x17) & 0x20) != 0) {\n                    return uVar2 & 0xffffffffffffff00 | unaff_RBX == arg1;\n                }\n                pcVar1 = **(uVar2 + 0x18);\n                *(*0x20 + -0x38) = 0x40280f;\n                uVar2 = (*pcVar1)();\n                return uVar2;\n            }\n            *(*0x20 + -0x38) = 0x40282d;\n            fcn.00450e40();\n            arg1 = 0x1c;\n            *(*0x20 + -0x38) = 0x402846;\n            fcn.00445f40(0x1c);\n            *(*0x20 + -0x38) = 0x40284b;\n            unaff_RBX = fcn.00408d60();\n            *(*0x20 + -0x38) = 0x40285a;\n            in_RAX = fcn.004305a0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x40286f;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 582
    },
    "00402a00": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "contain loop"
        ],
        "decompiled_code": "\nuint64_t fcn.00402a00(void)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    uint32_t uStack32;\n    \n    if (in_RAX == 0) {\n        fcn.00430d40();\n        pcVar3 = swi(3);\n        uVar4 = (*pcVar3)();\n        return uVar4;\n    }\n    iVar2 = *(unaff_R14 + 0x30);\n    *(iVar2 + 0x100) = *(iVar2 + 0x100) + 1;\n    *(iVar2 + 0x108) = *(iVar2 + 0x108) + 1;\n    **(iVar2 + 0x110) = 0;\n    fcn.00454800();\n    while( true ) {\n        LOCK();\n        if (*(iVar2 + 0x350) == 0) break;\n        fcn.00456f00();\n    }\n    *(iVar2 + 0x350) = 1;\n    *(iVar2 + 0xe8) = 1;\n    fcn.00458e80();\n    *(iVar2 + 0xe8) = 0;\n    *(iVar2 + 0x108) = *(iVar2 + 0x108) + -1;\n    uVar1 = *(iVar2 + 0x350);\n    *(iVar2 + 0x350) = 0;\n    fcn.00454840(iVar2, uVar1);\n    return uStack32;\n}\n",
        "token_count": 364
    },
    "00404660": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404660(ulong arg1)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.0040fe00(arg1);\n    fcn.0045a040(*in_RAX);\n    return;\n}\n",
        "token_count": 105
    },
    "004046e0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004046e0(ulong arg1)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.0040fe00(*(unaff_RBX + 0x18));\n    fcn.0045a040(*in_RAX);\n    return;\n}\n",
        "token_count": 123
    },
    "00408c60": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.00408c60(void)\n\n{\n    ulong *in_RAX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.0040a9e0(1, *in_RAX);\n    fcn.0040eb60(unaff_RBX);\n    return in_RAX;\n}\n",
        "token_count": 121
    },
    "00408e00": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.00408e00(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong *in_RAX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.0040a9e0(0, *in_RAX, param_3, param_4, unaff_RBX);\n    fcn.0045a040(*in_RAX);\n    return in_RAX;\n}\n",
        "token_count": 153
    },
    "0040eec0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.0040eec0(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = *(in_RAX + 0x30);\n            uVar3 = *(in_RAX + 0x38);\n            if (uVar3 == uVar1) {\n                return uVar1;\n            }\n            if (uVar1 <= uVar3) {\n                *(*0x20 + -0x20) = uVar3;\n                *(*0x20 + 8) = in_RAX;\n                uVar5 = *(in_RAX + 0x40);\n                iVar4 = 0;\n                if (uVar5 != 0) {\n                    for (; (uVar5 >> iVar4 & 1) == 0; iVar4 = iVar4 + 1) {\n                    }\n                }\n                if (uVar5 == 0) {\n                    iVar4 = 0x40;\n                }\n                while( true ) {\n                    if (iVar4 != 0x40) {\n                        uVar5 = uVar1 + iVar4;\n                        if (uVar3 <= uVar5) {\n                            *(in_RAX + 0x30) = uVar3;\n                            return uVar3;\n                        }\n                        *(in_RAX + 0x40) = *(in_RAX + 0x40) >> (iVar4 + 1U & 0x3f) & -(iVar4 + 1U < 0x40);\n                        uVar1 = uVar1 + iVar4 + 1;\n                        if (((uVar1 & 0x3f) == 0) && (uVar3 != uVar1)) {\n                            *(*0x20 + -0x10) = uVar5;\n                            *(*0x20 + -0x18) = uVar1;\n                            *(*0x20 + -0x38) = 0x40efc5;\n                            fcn.0040eea0();\n                            in_RAX = *(*0x20 + 8);\n                            uVar1 = *(*0x20 + -0x18);\n                            uVar5 = *(*0x20 + -0x10);\n                        }\n                        *(in_RAX + 0x30) = uVar1;\n                        return uVar5;\n                    }\n                    uVar1 = uVar1 + 0x40 & 0xffffffffffffffc0;\n                    if (uVar3 <= uVar1) break;\n                    *(*0x20 + -0x18) = uVar1;\n                    *(*0x20 + -0x38) = 0x40ef25;\n                    fcn.0040eea0();\n                    in_RAX = *(*0x20 + 8);\n                    uVar3 = *(in_RAX + 0x40);\n                    iVar4 = 0;\n                    if (uVar3 != 0) {\n                        for (; (uVar3 >> iVar4 & 1) == 0; iVar4 = iVar4 + 1) {\n                        }\n                    }\n                    if (uVar3 == 0) {\n                        iVar4 = 0x40;\n                    }\n                    uVar3 = *(*0x20 + -0x20);\n                    uVar1 = *(*0x20 + -0x18);\n                }\n                *(in_RAX + 0x30) = uVar3;\n                return uVar3;\n            }\n            *(*0x20 + -0x38) = 0x40f007;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x40f012;\n        fcn.00457040();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 998
    },
    "0040f540": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0040f540(uint64_t arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n        arg1 = arg1 & 0xffffffff;\n    }\n    fcn.0040f460(arg1);\n    return;\n}\n",
        "token_count": 98
    },
    "00411960": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00411960(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    iVar1 = fcn.00421680(2, (in_RAX + 0x3fU >> 6) + 0x1fff >> 0xd);\n    fcn.004112e0(*(iVar1 + 0x18));\n    return iVar1;\n}\n",
        "token_count": 146
    },
    "00417180": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00417180(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x38) = 0x4171a5;\n            fcn.00434160();\n            *(*0x20 + -0x38) = 0x4171b3;\n            fcn.00409300();\n            *(*0x20 + -0x20) = *0x52a328;\n            *(*0x20 + -0x10) = *0x52a320;\n            *(*0x20 + -0x38) = 0x4171d9;\n            fcn.00409520();\n            iVar2 = *(*0x20 + -0x20);\n            iVar3 = *(*0x20 + -0x10);\n            iVar1 = 0;\n            while( true ) {\n                if (iVar2 <= iVar1) {\n                    *0x558780 = 0;\n                    *0x558810 = *0x558530;\n                    return;\n                }\n                if (0x3f < *(iVar3 + iVar1 * 8) >> 0x14) break;\n                *(*0x20 + -0x18) = iVar1;\n                *(*0x20 + -0x38) = 0x41721b;\n                fcn.00459d80();\n                iVar1 = *(*0x20 + -0x18) + 1;\n                iVar2 = *(*0x20 + -0x20);\n                iVar3 = *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x38) = 0x417278;\n            fcn.00459740(0x40);\n        }\n        *(puVar4 + -8) = 0x41727e;\n        fcn.0045b6e0();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 545
    },
    "00417e20": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00417e20(int64_t arg1)\n\n{\n    uint64_t unaff_RBX;\n    int64_t unaff_RSI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (unaff_RBX <= unaff_RSI * 0x40000) {\n        return;\n    }\n    fcn.00419ba0(arg1 + unaff_RSI * 0x1000);\n    return;\n}\n",
        "token_count": 141
    },
    "00418940": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.00418940(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00409300();\n    iVar2 = *0x558828;\n    iVar1 = *0x558820;\n    if (*0x557ca4 == 0) {\n        fcn.00409520();\n        return 1;\n    }\n    *(unaff_R14 + 0xa0) = 0;\n    iVar3 = unaff_R14;\n    if (*0x558828 != 0) {\n        *(*0x558828 + 0xa0) = unaff_R14;\n        iVar3 = *0x558820;\n    }\n    *0x558820 = iVar3;\n    if (*0x558550 < 1) {\n        *0x558828 = unaff_R14;\n        fcn.00433640(0xb);\n        return 1;\n    }\n    *0x558820 = iVar1;\n    *0x558828 = iVar2;\n    if (iVar2 != 0) {\n        *(iVar2 + 0xa0) = 0;\n    }\n    fcn.00409520();\n    return 0;\n}\n",
        "token_count": 323
    },
    "0041c8a0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.0041c8a0(void)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045b6e0();\n    }\n    iVar2 = *(in_RAX + 0x100e8);\n    uVar1 = fcn.00428f60();\n    if (uVar1 + 0x800000000000 < iVar2 + 0x800000000000U) {\n        iVar2 = iVar2 - uVar1;\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 == 0) {\n        return uVar1;\n    }\n    fcn.00428fe0();\n    return uVar1 & 0xffffffffffc00000;\n}\n",
        "token_count": 222
    },
    "00422840": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00422840(void)\n\n{\n    uchar (**ppauVar1) [16];\n    uchar (**in_RAX) [16];\n    uchar (*unaff_RBX) [16];\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            ppauVar1 = *unaff_RBX[1];\n            if (in_RAX == ppauVar1) {\n                if (*in_RAX == unaff_RBX) {\n                    *in_RAX = **unaff_RBX;\n                }\n                else {\n                    **(*unaff_RBX + 8) = **unaff_RBX;\n                }\n                if (in_RAX[1] == unaff_RBX) {\n                    in_RAX[1] = *(*unaff_RBX + 8);\n                }\n                else {\n                    *(**unaff_RBX + 8) = *(*unaff_RBX + 8);\n                }\n                *unaff_RBX = in_XMM15;\n                *unaff_RBX[1] = 0;\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = ppauVar1;\n            *(*0x20 + -0x18) = *unaff_RBX[2];\n            *(*0x20 + -0x20) = *(*unaff_RBX + 8);\n            *(*0x20 + -0x38) = 0x4228d7;\n            fcn.004324c0();\n            *(*0x20 + -0x38) = 0x4228e8;\n            fcn.00432dc0();\n            *(*0x20 + -0x38) = 0x4228f2;\n            fcn.00432ac0();\n            *(*0x20 + -0x38) = 0x422905;\n            fcn.00432dc0();\n            *(*0x20 + -0x38) = 0x42290f;\n            fcn.00432d80();\n            *(*0x20 + -0x38) = 0x422925;\n            fcn.00432dc0();\n            *(*0x20 + -0x38) = 0x42292f;\n            fcn.00432d80();\n            *(*0x20 + -0x38) = 0x422945;\n            fcn.00432dc0();\n            *(*0x20 + -0x38) = 0x42294f;\n            fcn.00432d80();\n            *(*0x20 + -0x38) = 0x422965;\n            fcn.00432dc0();\n            *(*0x20 + -0x38) = 0x42296f;\n            fcn.00432d80();\n            *(*0x20 + -0x38) = 0x422974;\n            fcn.00432720();\n            *(*0x20 + -0x38) = 0x422979;\n            fcn.00432540();\n            unaff_RBX = 0x10;\n            *(*0x20 + -0x38) = 0x42298a;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x42299a;\n        fcn.00457040();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 933
    },
    "004272a0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004272a0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00426900(arg1);\n    fcn.00426a40(arg1);\n    return;\n}\n",
        "token_count": 96
    },
    "0042d280": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0042d280(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    iVar1 = *(unaff_R14 + 0x30);\n    fcn.00409300();\n    if (*(iVar1 + 0x330) != 0) {\n        fcn.0042d560();\n        *(iVar1 + 0x330) = 0;\n    }\n    fcn.00409520();\n    return;\n}\n",
        "token_count": 105
    },
    "00430fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430fa0(void)\n\n{\n    fcn.00456f00();\n    _pe_dos_header = 0;\n    return;\n}\n",
        "token_count": 35
    },
    "00432340": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00432340(ulong arg1)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    uint64_t arg1_00;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t arg1_01;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x38) = 0x43236c;\n            fcn.004324c0();\n            if (*0x557cc8 != 0) {\ncode_r0x00432389:\n                *(*0x20 + -0x38) = 0x43238e;\n                fcn.00432540();\n                return;\n            }\n            arg1_00 = *(*0x20 + 0x10);\n            iVar3 = *(*0x20 + 0x18);\n            iVar5 = *(*0x20 + 8);\n            uVar1 = 0;\n            while( true ) {\n                if (arg1_00 <= uVar1) goto code_r0x00432389;\n                if (0x200 < *0x557e00) goto code_r0x00432478;\n                iVar6 = *0x557e00 - 0x200;\n                if (arg1_00 < uVar1) break;\n                iVar2 = arg1_00 - uVar1;\n                arg1_01 = -iVar6;\n                if (-iVar2 != iVar6 && iVar2 <= -iVar6) {\n                    arg1_01 = iVar2;\n                }\n                unaff_RBX = iVar5 + (uVar1 - iVar3 >> 0x3f & uVar1);\n                if (unaff_RBX != (iVar6 >> 0x3f & *0x557e00) + 0x5588a0) {\n                    *(*0x20 + -0x10) = uVar1;\n                    *(*0x20 + -0x18) = arg1_01;\n                    *(*0x20 + -0x38) = 0x43244e;\n                    fcn.0045a040(arg1_01);\n                    iVar3 = *(*0x20 + 0x18);\n                    iVar5 = *(*0x20 + 8);\n                    arg1_00 = *(*0x20 + 0x10);\n                    arg1_01 = *(*0x20 + -0x18);\n                    uVar1 = *(*0x20 + -0x10);\n                }\n                iVar6 = *0x557e00 + arg1_01;\n                *0x557e00 = iVar6 + (((iVar6 >> 0x3f) >> 0x37) + iVar6 >> 9) * -0x200;\n                uVar1 = arg1_01 + uVar1;\n            }\n            *(*0x20 + -0x38) = 0x432478;\n            fcn.004597e0(arg1_00);\ncode_r0x00432478:\n            arg1 = 0x200;\n            *(*0x20 + -0x38) = 0x432485;\n            in_RAX = fcn.004597e0(0x200);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x43249a;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 999
    },
    "00447f80": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.00447f80(void)\n\n{\n    int32_t iVar1;\n    uint64_t arg1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if ((in_RAX == 0) || (iVar1 = *(in_RAX + 8),  iVar1 == 0)) {\n                iVar3 = 0;\n                goto code_r0x00447fc6;\n            }\n            arg1 = *(unaff_RBX + 0x10);\n            unaff_RBX = *(unaff_RBX + 8);\n            if (iVar1 < arg1) {\n                iVar3 = unaff_RBX + iVar1;\ncode_r0x00447fc6:\n                *(*0x20 + -0x20) = iVar3;\n                *(*0x20 + -0x38) = 0x447fd3;\n                uVar2 = fcn.00446c80();\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = *(*0x20 + -0x20);\n                *(*0x20 + -0x10) = uVar2;\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x38) = 0x448005;\n            in_RAX = fcn.00459720(arg1);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x448015;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 577
    },
    "004480e0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.004480e0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    uint64_t arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (in_RAX == 0) {\n                iVar2 = 0;\n                goto code_r0x0044811d;\n            }\n            arg1_00 = *(unaff_RBX + 0x10);\n            unaff_RBX = *(unaff_RBX + 8);\n            if (arg1 < arg1_00) {\n                iVar2 = unaff_RBX + arg1;\ncode_r0x0044811d:\n                *(*0x20 + -0x20) = iVar2;\n                *(*0x20 + -0x38) = 0x44812a;\n                uVar1 = fcn.00446c80();\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = *(*0x20 + -0x20);\n                *(*0x20 + -0x10) = uVar1;\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x38) = 0x44815c;\n            in_RAX = fcn.00459720(arg1_00);\n            arg1._0_4_ = arg1_00;\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x448170;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 610
    },
    "004481a0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.004481a0(ulong arg1)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint64_t arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (in_RAX == 0) {\n                return 0x480fec;\n            }\n            arg1_00 = *(unaff_RBX + 0x28);\n            uVar3 = arg1 + *(in_RAX + 0x24);\n            if (uVar3 < arg1_00) {\n                uVar1 = *(*(unaff_RBX + 0x20) + uVar3 * 4);\n                if (uVar1 == 0xffffffff) {\n                    return 0x480fec;\n                }\n                uVar3 = *(unaff_RBX + 0x40);\n                arg1_00 = *(unaff_RBX + 0x38);\n                if (uVar1 < uVar3) {\n                    *(*0x20 + -0x20) = uVar1 + arg1_00;\n                    *(*0x20 + -0x38) = 0x4481f9;\n                    uVar2 = fcn.00446c80();\n                    *(*0x20 + -0x18) = in_XMM15;\n                    *(*0x20 + -0x18) = *(*0x20 + -0x20);\n                    *(*0x20 + -0x10) = uVar2;\n                    return *(*0x20 + -0x18);\n                }\n                *(*0x20 + -0x38) = 0x448254;\n                fcn.00459720(uVar3);\n            }\n            *(*0x20 + -0x38) = 0x44825e;\n            in_RAX = fcn.00459720(arg1_00);\n            arg1._0_4_ = arg1_00;\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x448272;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1._0_4_ = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 722
    },
    "0044a600": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0044a600(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    for (iVar3 = 0; iVar3 < arg1; iVar3 = iVar3 + 1) {\n        iVar2 = *(unaff_RBX + iVar3 * 8);\n        fcn.00449300();\n        LOCK();\n        piVar1 = iVar2 + 0x40;\n        if (*piVar1 == 9) {\n            *piVar1 = 1;\n        }\n        else {\n            fcn.0044b460();\n        }\n    }\n    return;\n}\n",
        "token_count": 211
    },
    "0044c9c0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044c9c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    *(unaff_R14 + 0xe0) = *(*(unaff_R14 + 0x30) + 0xa0);\n    fcn.0044b680(0);\n    return;\n}\n",
        "token_count": 116
    },
    "0044f4c0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044f4c0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.0044f5c0(arg1);\n    return;\n}\n",
        "token_count": 90
    },
    "0044f520": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0044f520(ulong arg1)\n\n{\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (*(*(unaff_RDI + 0x30) + 0x2d0) != 0) {\n        fcn.0044f5c0(0);\n        return;\n    }\n    fcn.0044f5c0(arg1);\n    return;\n}\n",
        "token_count": 142
    },
    "00455720": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00455720(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    uchar auStackX8 [16];\n    int64_t iStackX24;\n    ulong uStackX32;\n    \n    iStackX24 = 0;\n    uStackX32 = 0;\n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30) + 0x244;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    *(*(iVar2 + 0x30) + 0x138) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar2 + 0x2e0) = _sym.imp.kernel32.dll_GetProcAddress;\n    *(iVar2 + 0x2e8) = 2;\n    *(iVar2 + 0x2f0) = auStackX8;\n    fcn.00402a00();\n    iStackX24 = *(iVar2 + 0x2f8);\n    if (iStackX24 == 0) {\n        uStackX32 = *(iVar2 + 0x308);\n    }\n    fcn.0043c080();\n    return;\n}\n",
        "token_count": 326
    },
    "00455880": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "access PEB ldr_data"
        ],
        "decompiled_code": "\nvoid fcn.00455880(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    ulong uStackX8;\n    ulong uStackX16;\n    uchar auStackX24 [16];\n    ulong uStack0000000000000030;\n    ulong uStack0000000000000038;\n    ulong uStack0000000000000040;\n    \n    uStack0000000000000030 = 0;\n    uStack0000000000000038 = 0;\n    uStack0000000000000040 = 0;\n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30) + 0x244;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    *(*(iVar2 + 0x30) + 0x138) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar2 + 0x2e0) = uStackX8;\n    *(iVar2 + 0x2e8) = uStackX16;\n    *(iVar2 + 0x2f0) = auStackX24;\n    fcn.00402a00();\n    uStack0000000000000030 = *(iVar2 + 0x2f8);\n    uStack0000000000000038 = *(iVar2 + 0x300);\n    uStack0000000000000040 = *(iVar2 + 0x308);\n    fcn.0043c080();\n    return;\n}\n",
        "token_count": 389
    },
    "004559e0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004559e0(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    ulong uStackX8;\n    ulong uStackX16;\n    uchar auStackX24 [16];\n    ulong uStack0000000000000048;\n    ulong uStack0000000000000050;\n    ulong uStack0000000000000058;\n    \n    uStack0000000000000048 = 0;\n    uStack0000000000000050 = 0;\n    uStack0000000000000058 = 0;\n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30) + 0x244;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    *(*(iVar2 + 0x30) + 0x138) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar2 + 0x2e0) = uStackX8;\n    *(iVar2 + 0x2e8) = uStackX16;\n    *(iVar2 + 0x2f0) = auStackX24;\n    fcn.00402a00();\n    uStack0000000000000048 = *(iVar2 + 0x2f8);\n    uStack0000000000000050 = *(iVar2 + 0x300);\n    uStack0000000000000058 = *(iVar2 + 0x308);\n    fcn.0043c080();\n    return;\n}\n",
        "token_count": 390
    },
    "004560c0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004560c0(ulong arg1, ulong arg2)\n\n{\n    fcn.0045b220();\n    return;\n}\n",
        "token_count": 32
    },
    "0045ab00": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "write file on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0045ab00(void)\n\n{\n    (*_sym.imp.kernel32.dll_GetStdHandle)();\n    (*_sym.imp.kernel32.dll_WriteFile)();\n    fcn.004590e0();\n    return;\n}\n",
        "token_count": 48
    },
    "0045aee0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045aee0(void)\n\n{\n    int32_t iStackX8;\n    uchar auStack48 [32];\n    int64_t iStack16;\n    uchar *puStack8;\n    \n    puStack8 = auStack48;\n    iStack16 = iStackX8;\n    (**0x503598)(0xffffffffffffffff, 0);\n    return;\n}\n",
        "token_count": 83
    },
    "0045afc0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0045afc0(void)\n\n{\n    (*_sym.imp.kernel32.dll_SwitchToThread)();\n    return;\n}\n",
        "token_count": 29
    },
    "0045b220": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045b220(void)\n\n{\n    ulong uStackX24;\n    \n    fcn.0040ec00(uStackX24);\n    return;\n}\n",
        "token_count": 37
    },
    "0045f920": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0045f920(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t arg1_00;\n    uint32_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            iVar3 = unaff_RBX;\n            for (iVar2 = 0; iVar2 < unaff_RBX; iVar2 = iVar2 + 1) {\n                if (0xffff < *(in_RAX + iVar2 * 4)) {\n                    iVar3 = iVar3 + 1;\n                }\n            }\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x18) = iVar3;\n            *(*0x20 + -0x38) = 0x45f97b;\n            iVar1 = fcn.004424e0(iVar3);\n            iVar3 = *(*0x20 + 8);\n            iVar2 = *(*0x20 + -0x10);\n            arg1 = *(*0x20 + -0x18);\n            arg1_00 = 0;\n            for (unaff_RBX = 0; unaff_RBX < iVar2; unaff_RBX = unaff_RBX + 1) {\n                uVar5 = *(iVar3 + unaff_RBX * 4);\n                if ((uVar5 < 0xd800) || (uVar5 - 0xe000 < 0x2000)) {\n                    if (arg1 <= arg1_00) goto code_r0x0045fa7d;\n                    *(iVar1 + arg1_00 * 2) = uVar5;\n                    arg1_00 = arg1_00 + 1;\n                }\n                else {\n                    uVar5 = uVar5 - 0x10000;\n                    if (uVar5 < 0x100000) {\n                        if (arg1 <= arg1_00) goto code_r0x0045fa75;\n                        *(iVar1 + arg1_00 * 2) = (uVar5 >> 10 & 0x3ff) + 0xd800;\n                        if (arg1 <= arg1_00 + 1) goto code_r0x0045fa6d;\n                        *(iVar1 + 2 + arg1_00 * 2) = (uVar5 & 0x3ff) + 0xdc00;\n                        arg1_00 = arg1_00 + 2;\n                    }\n                    else {\n                        if (arg1 <= arg1_00) goto code_r0x0045fa65;\n                        *(iVar1 + arg1_00 * 2) = 0xfffd;\n                        arg1_00 = arg1_00 + 1;\n                    }\n                }\n            }\n            if (arg1_00 <= arg1) {\n                return;\n            }\n            *(*0x20 + -0x38) = 0x45fa65;\n            fcn.004597a0(arg1_00, arg1);\n            arg1 = arg1_00;\ncode_r0x0045fa65:\n            *(*0x20 + -0x38) = 0x45fa6d;\n            fcn.00459720(arg1);\ncode_r0x0045fa6d:\n            *(*0x20 + -0x38) = 0x45fa75;\n            fcn.00459720(arg1);\ncode_r0x0045fa75:\n            *(*0x20 + -0x38) = 0x45fa7d;\n            fcn.00459720(arg1);\ncode_r0x0045fa7d:\n            *(*0x20 + -0x38) = 0x45fa85;\n            in_RAX = fcn.00459720(arg1);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x45fa9a;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1117
    },
    "00468b60": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuchar fcn.00468b60(void)\n\n{\n    uchar uVar1;\n    int64_t unaff_R14;\n    uchar auStack32 [16];\n    uchar *puStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    puStack16 = NULL;\n    LOCK();\n    if (*0x557eb0 == 0) {\n        *0x557eb0 = 1;\n    }\n    else {\n        fcn.0045f100();\n    }\n    uVar1 = *0x557eb8;\n    auStack32 = CONCAT88(0x557eb0, 0x468c40);\n    puStack16 = auStack32;\n    (*0x468c40)();\n    return uVar1;\n}\n",
        "token_count": 211
    },
    "00401d40": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint64_t fcn.00401d40(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    \n    uVar1 = (in_RAX & 0x5555555555555555) + (in_RAX >> 1 & 0x5555555555555555);\n    uVar1 = (uVar1 >> 2 & 0x3333333333333333) + (uVar1 & 0x3333333333333333);\n    uVar1 = (uVar1 >> 4) + uVar1 & 0xf0f0f0f0f0f0f0f;\n    uVar1 = uVar1 + (uVar1 >> 8);\n    uVar1 = (uVar1 >> 0x10) + uVar1;\n    return (uVar1 >> 0x20) + uVar1 & 0x7f;\n}\n",
        "token_count": 206
    },
    "00403940": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.00403940(uint64_t arg1)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t unaff_RBX;\n    uint8_t *puVar6;\n    uint32_t uVar7;\n    int64_t unaff_RDI;\n    uint64_t uVar8;\n    \n    iVar5 = arg1 - (arg1 & 0xffffffffffffffc0);\n    uVar8 = unaff_RDI + iVar5;\n    puVar6 = unaff_RBX + (arg1 >> 6);\n    iVar4 = (arg1 & 0xffffffffffffffc0) + in_RAX;\n    uVar3 = 0;\n    uVar7 = 0;\n    do {\n        if (uVar8 <= uVar3) {\n            return;\n        }\n        if ((uVar3 & 0x3f) == 0) {\n            uVar7 = *puVar6;\n            puVar6 = puVar6 + 1;\n        }\n        else {\n            uVar7 = uVar7 >> 1;\n        }\n        if (iVar5 == 0) {\n            if (((uVar7 & 1) != 0) && (cVar2 = fcn.004031a0(iVar4, *(iVar4 + uVar3)),  cVar2 != '\\0')) {\n                fcn.00430d40();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        else {\n            iVar5 = iVar5 + -8;\n        }\n        uVar3 = uVar3 + 8;\n    } while( true );\n}\n",
        "token_count": 389
    },
    "00408000": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint64_t fcn.00408000(uint64_t arg1)\n\n{\n    uchar auVar1 [16];\n    uchar auVar2 [16];\n    uchar auVar3 [16];\n    uint64_t *in_RAX;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    \n    uVar5 = unaff_RBX ^ *0x557f00 ^ 0xa0761d6478bd642f;\n    if (arg1 == 0) {\n        return uVar5;\n    }\n    if (arg1 < 4) {\n        uVar4 = CONCAT12(*(in_RAX + (arg1 - 1)), CONCAT11(*(in_RAX + (arg1 >> 1)), *in_RAX));\n        uVar6 = 0;\n    }\n    else if (arg1 == 4) {\n        uVar4 = *in_RAX;\n        uVar6 = *in_RAX;\n    }\n    else if (arg1 < 8) {\n        uVar4 = *in_RAX;\n        uVar6 = *(in_RAX + (arg1 - 4));\n    }\n    else if (arg1 == 8) {\n        uVar4 = *in_RAX;\n        uVar6 = uVar4;\n    }\n    else if (arg1 < 0x11) {\n        uVar4 = *in_RAX;\n        uVar6 = *(in_RAX + (arg1 - 8));\n    }\n    else {\n        uVar6 = arg1;\n        uVar4 = uVar5;\n        uVar7 = uVar5;\n        if (0x30 < arg1) {\n            for (; 0x30 < uVar6; uVar6 = uVar6 - 0x30) {\n                auVar1 = ZEXT816(in_RAX[1] ^ uVar5) * ZEXT816(*in_RAX ^ 0xe7037ed1a0b428db);\n                auVar2 = ZEXT816(in_RAX[3] ^ uVar4) * ZEXT816(in_RAX[2] ^ 0x8ebc6af09c88c6e3);\n                auVar3 = ZEXT816(in_RAX[5] ^ uVar7) * ZEXT816(in_RAX[4] ^ 0x589965cc75374cc3);\n                uVar5 = SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n                in_RAX = in_RAX + 6;\n                uVar4 = SUB168(auVar2, 0) ^ SUB168(auVar2 >> 0x40, 0);\n                uVar7 = SUB168(auVar3, 0) ^ SUB168(auVar3 >> 0x40, 0);\n            }\n            uVar5 = uVar5 ^ uVar4 ^ uVar7;\n        }\n        for (; 0x10 < uVar6; uVar6 = uVar6 - 0x10) {\n            auVar1 = ZEXT816(in_RAX[1] ^ uVar5) * ZEXT816(*in_RAX ^ 0xe7037ed1a0b428db);\n            uVar5 = SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n            in_RAX = in_RAX + 2;\n        }\n        uVar4 = *(in_RAX + (uVar6 - 0x10));\n        uVar6 = *(in_RAX + (uVar6 - 8));\n    }\n    auVar1 = ZEXT816(uVar6 ^ uVar5) * ZEXT816(uVar4 ^ 0xe7037ed1a0b428db);\n    auVar1 = ZEXT816(SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0)) * ZEXT816(arg1 ^ 0x1d8e4e27c47d124f);\n    return SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n}\n",
        "token_count": 940
    },
    "00412c80": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.00412c80(void)\n\n{\n    uint8_t *in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = *in_RAX >> 1;\n            if (uVar1 < 0x44) {\n                *(*0x20 + -0x10) = *(uVar1 + 0x4f20e0);\n                *(*0x20 + -0x18) = *(uVar1 * 2 + 0x4f30c0);\n                *(*0x20 + -0x48) = 0x412ce5;\n                iVar2 = fcn.004214a0();\n                if (iVar2 == 0) {\n                    return 0;\n                }\n                *(iVar2 + 0x70) =\n                     *(*0x20 + -0x18) * (*(*0x20 + -0x10) * 0x2000 * *(iVar2 + 0x5c) >> 0x20) + *(iVar2 + 0x18);\n                uVar1 = *(iVar2 + 0x18) + 0x800000000000;\n                uVar4 = uVar1 >> 0x2a;\n                if (uVar4 < 0x40) {\n                    uVar1 = uVar1 >> 0x16;\n                    if (*(*(uVar4 * 8 + 0x52a0d8) + (uVar1 & 0xfffff) * 8) == 0) {\n                        uVar1 = 0;\n                    }\n                    *(*0x20 + -0x20) = iVar2;\n                    *(*0x20 + -0x48) = 0x412da5;\n                    fcn.00410040(uVar1 & 0xffffffff);\n                    return *(*0x20 + -0x20);\n                }\n                *(*0x20 + -0x48) = 0x412dce;\n                fcn.00459740(0x40);\n            }\n            *(*0x20 + -0x48) = 0x412dd8;\n            in_RAX = fcn.00459720(0x44);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x412de5;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 675
    },
    "00419ba0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.00419ba0(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t arg3;\n    uint64_t uVar4;\n    uint64_t noname_1;\n    uint64_t unaff_RBX;\n    int64_t unaff_RSI;\n    uint64_t arg1_00;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    int64_t iStack0000000000000028;\n    \n    iStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    arg1_00 = 0;\n    while (arg1_00 < unaff_RBX) {\n        uVar1 = *(arg1 + (arg1_00 >> 6));\n        uVar4 = uVar1;\n        if (uVar1 == 0) {\n            arg1_00 = arg1_00 + 0x40;\n        }\n        else {\n            iVar5 = 0;\n            for (; (iVar5 < 8 && (arg1_00 < unaff_RBX)); arg1_00 = arg1_00 + 8) {\n                if (((uVar4 & 1) != 0) && (uVar2 = *(arg1_00 + in_RAX),  uVar2 != 0)) {\n                    arg3 = arg1_00;\n                    noname_1 = uVar4;\n                    iVar3 = fcn.0040f260(arg1_00);\n                    if (iVar3 == 0) {\n                        if (((iStack0000000000000028 != 0) &&\n                            (*(iStack0000000000000028 + 0x100) < uVar2 || *(iStack0000000000000028 + 0x100) == uVar2))\n                           && (uVar2 <= *(iStack0000000000000028 + 0x108) && *(iStack0000000000000028 + 0x108) != uVar2)\n                           ) {\n                            fcn.0041d7e0(0);\n                        }\n                    }\n                    else {\n                        fcn.0041a380(arg1_00, noname_1, arg3);\n                    }\n                }\n                iVar5 = iVar5 + 1;\n                uVar4 = uVar4 >> 1;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 577
    },
    "0041afe0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.0041afe0(void)\n\n{\n    uint64_t uVar1;\n    double dVar2;\n    int32_t *in_RAX;\n    int32_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint uVar7;\n    uint uVar8;\n    \n    iVar3 = *in_RAX;\n    uVar1 = *(in_RAX + 0xe);\n    iVar6 = *(in_RAX + 8);\n    if (iVar3 < 0) {\n        iVar3 = 100000;\n    }\n    if (uVar1 < 0) {\n        dVar2 = uVar1 >> 1 | uVar1 & 1;\n        dVar2 = dVar2 + dVar2;\n        uVar7 = SUB84(dVar2, 0);\n        uVar8 = dVar2 >> 0x20;\n    }\n    else {\n        uVar7 = SUB84(uVar1, 0);\n        uVar8 = uVar1 >> 0x20;\n    }\n    if ((iVar6 < *(in_RAX + 0xc)) ||\n       (uVar4 = (*0x49e258 * CONCAT44(uVar8, uVar7)) / (iVar3 + 100),  uVar4 < *(in_RAX + 0x12))) {\n        iVar6 = *0x49e230 * iVar6;\n        uVar4 = uVar1;\n    }\n    iVar5 = uVar4 - *(in_RAX + 0x12);\n    if (iVar5 < 1000) {\n        iVar5 = 1000;\n    }\n    iVar6 = iVar6 - *(in_RAX + 0xc);\n    if (iVar6 < 1) {\n        iVar6 = 1;\n    }\n    *(in_RAX + 0x22) = iVar5 / iVar6;\n    *(in_RAX + 0x24) = iVar6 / iVar5;\n    return;\n}\n",
        "token_count": 440
    },
    "0041bcc0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nint32_t fcn.0041bcc0(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_RAX;\n    int32_t unaff_EBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (unaff_EBX < 0) {\n        unaff_EBX = -1;\n    }\n    iVar1 = *in_RAX;\n    *in_RAX = unaff_EBX;\n    *(in_RAX + 2) = ((unaff_EBX << 0x16) >> 1) / 0x32;\n    fcn.0041b920(*(in_RAX + 4));\n    return iVar1;\n}\n",
        "token_count": 191
    },
    "0043eea0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.0043eea0(ulong arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    ulong in_RAX;\n    uchar *puVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    ulong unaff_RBX;\n    uchar *puVar8;\n    ulong unaff_RBP;\n    uint32_t uVar9;\n    int32_t unaff_EDI;\n    uchar *puVar10;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x3b8 && *0x20 + -0x3b8 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x438;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + -0x410) = 0;\n            *(*0x20 + -0x448) = *0x20 + -8;\n            *(*0x20 + -0x440) = 0x43eeef;\n            puVar5 = fcn.00459860();\n            unaff_RBP = *(*0x20 + -0x448);\n            uVar7 = unaff_EDI - arg1 >> 1;\n            puVar10 = *0x20 + -0x408;\n            if (uVar7 == 0x80) {\n                uVar6 = 0;\n                while (uVar9 = uVar6,  uVar9 < 0x80) {\n                    *(*0x20 + uVar6 * 8 + -0x410) = *(puVar5 + (uVar9 + arg1 & 0xff) * 8 + 0x5f8);\n                    uVar6 = uVar9 + 1;\n                }\n                LOCK();\n                if (arg1 != *(puVar5 + 0x5f0)) {\n                    return 0;\n                }\n                *(puVar5 + 0x5f0) = arg1 + 0x80;\n                *(*0x20 + uVar7 * 8 + -0x410) = unaff_RBX;\n                uVar6 = 0;\n                while( true ) {\n                    if (0x7f < uVar6) {\n                        *(*0x20 + -0x424) = 0x80;\n                        *(*0x20 + -0x420) = in_XMM15;\n                        *(*0x20 + -0x420) = *(*0x20 + -0x410);\n                        *(*0x20 + -0x418) = *(*0x20 + uVar7 * 8 + -0x410);\n                        *(*0x20 + -0x440) = 0x43efb9;\n                        fcn.00409300();\n                        iVar1 = *(*0x20 + -0x418);\n                        uVar2 = *(*0x20 + -0x420);\n                        uVar3 = *0x504800;\n                        iVar4 = *0x504808;\n                        if ((iVar1 != 0) && (*(iVar1 + 0xa0) = 0,  uVar3 = uVar2,  iVar4 = iVar1,  *0x504808 != 0)) {\n                            *(*0x504808 + 0xa0) = uVar2;\n                            uVar3 = *0x504800;\n                        }\n                        *0x504808 = iVar4;\n                        *0x504800 = uVar3;\n                        *0x504810 = *0x504810 + *(*0x20 + -0x424) + 1;\n                        *(*0x20 + -0x420) = in_XMM15;\n                        *(*0x20 + -0x440) = 0x43f026;\n                        fcn.00409520();\n                        return 1;\n                    }\n                    iVar1 = uVar6 * 8;\n                    uVar6 = uVar6 + 1;\n                    if (0x80 < uVar6) break;\n                    *(*(*0x20 + iVar1 + -0x410) + 0xa0) = *(*0x20 + uVar6 * 8 + -0x410);\n                }\n                arg1._0_4_ = 0x81;\n                *(*0x20 + -0x440) = 0x43f045;\n                fcn.00459720(0x81);\n                puVar10 = puVar5;\n            }\n            unaff_EDI = puVar10;\n            unaff_RBX = 0x1e;\n            *(*0x20 + -0x440) = 0x43f056;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x1c) = unaff_EDI;\n        *(puVar8 + -8) = 0x43f06e;\n        fcn.00457040();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1._0_4_ = *(puVar8 + 0x18);\n        unaff_EDI = *(puVar8 + 0x1c);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1249
    },
    "0040f460": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint64_t fcn.0040f460(ulong arg1)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t iVar5;\n    \n    uVar4 = (unaff_RBX & 0xffffffff) + unaff_RSI >> 2;\n    uVar2 = uVar4 + in_RAX;\n    if (uVar2 <= unaff_RDI) {\n        return in_RAX + uVar4;\n    }\n    uVar2 = (uVar2 - unaff_RDI) - 1;\n    uVar1 = arg1 + (uVar2 >> 0x11) + 1;\n    uVar4 = uVar1 >> 0x14;\n    if (uVar4 < 0x40) {\n        iVar5 = *(uVar4 * 8 + 0x52a0d8);\n        if ((iVar5 == 0) || (iVar5 = *(iVar5 + (uVar1 & 0xfffff) * 8),  iVar5 == 0)) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar2 & 0x1ffff) + iVar5;\n        }\n        return iVar5;\n    }\n    fcn.00459740(0x40);\n    pcVar3 = swi(3);\n    iVar5 = (*pcVar3)();\n    return iVar5;\n}\n",
        "token_count": 359
    },
    "00410040": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid fcn.00410040(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    uint64_t uVar2;\n    int32_t unaff_EBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    ulong unaff_RDI;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = unaff_RDI;\n            uVar2 = (*(unaff_RSI + 0x20) << 0xd) >> 3;\n            if (unaff_EBX == 0) {\n                *(*0x20 + -0x28) = *(unaff_RSI + 0x68);\n                while (uVar2 != 0) {\n                    *(*0x20 + -0x38) = uVar2;\n                    *(*0x20 + -0x10) = in_RAX;\n                    *(*0x20 + -0x68) = 0x4100ce;\n                    uVar1 = fcn.0040f540(arg1);\n                    *(*0x20 + -0x18) = uVar1;\n                    *(*0x20 + -0x3c) = unaff_EBX;\n                    *(*0x20 + -0x40) = arg1;\n                    *(*0x20 + -0x20) = unaff_RDI;\n                    *(*0x20 + -0x30) = uVar2;\n                    if (*(*0x20 + -0x28) == 8) {\n                        puVar3 = *(*0x20 + -0x10);\n                        for (uVar4 = 0; uVar4 < uVar2 >> 2; uVar4 = uVar4 + 1) {\n                            *puVar3 = 0xff;\n                            puVar3 = puVar3 + 1;\n                        }\n                    }\n                    else {\n                        *(*0x20 + -0x68) = 0x41010f;\n                        fcn.00459d80();\n                    }\n                    in_RAX = *(*0x20 + -0x18);\n                    arg1 = *(*0x20 + -0x40);\n                    unaff_EBX = *(*0x20 + -0x3c);\n                    unaff_RDI = *(*0x20 + -0x20);\n                    uVar2 = *(*0x20 + -0x38) - *(*0x20 + -0x30);\n                }\n                return;\n            }\n            *(*0x20 + -0x68) = 0x410145;\n            fcn.00430d40();\n            unaff_EBX = 0x1a;\n            *(*0x20 + -0x68) = 0x410156;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + 0x14) = arg1;\n        *(puVar3 + 0x18) = unaff_RDI;\n        *(puVar3 + 0x20) = unaff_RSI;\n        *(puVar3 + -8) = 0x410173;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x14);\n        unaff_RDI = *(puVar3 + 0x18);\n        unaff_RSI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 924
    },
    "00450480": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid fcn.00450480(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n    if ((iVar1 != 0) && (in_RAX != iVar1)) {\n        fcn.004324c0();\n        fcn.00432720();\n        fcn.00432540();\n        fcn.00450240();\n        fcn.0044f5c0(0);\n    }\n    fcn.00434220();\n    return;\n}\n",
        "token_count": 183
    },
    "0040b5c0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint64_t fcn.0040b5c0(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    double dVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    int64_t unaff_R14;\n    double dVar7;\n    \n    if (in_RAX < 0x7000001) {\n        if (in_RAX == 0) {\n            return 0;\n        }\n    }\n    else {\n        in_RAX = 0x7000000;\n    }\n    iVar2 = *(unaff_R14 + 0x30);\n    uVar6 = *(iVar2 + 0xf0);\n    uVar1 = *(iVar2 + 0xf4);\n    *(iVar2 + 0xf0) = uVar1;\n    uVar6 = uVar6 << 0x11 ^ uVar6;\n    uVar6 = uVar1 >> 0x10 ^ uVar6 >> 7 ^ uVar1 ^ uVar6;\n    *(iVar2 + 0xf4) = uVar6;\n    dVar4 = (uVar6 + uVar1 & 0x3ffffff) + 1;\n    uVar5 = dVar4 >> 0x2f & 0x1f;\n    dVar7 = *(uVar5 * 8 + 0x4f3e80);\n    if (uVar5 + 1 < 0x21) {\n        dVar7 = (((dVar4 >> 0x34 & 0x7ff) - 0x3ff) + dVar7 +\n                *0x49e1e0 * (dVar4 >> 0x1b & 0xfffff) * (*(uVar5 * 8 + 0x4f3e88) - dVar7)) - *0x49e250;\n        if (0.0 < dVar7) {\n            dVar7 = 0.0;\n        }\n        return dVar7 * in_RAX * *0x49e298 + 1;\n    }\n    fcn.00459740(0x21);\n    pcVar3 = swi(3);\n    uVar5 = (*pcVar3)();\n    return uVar5;\n}\n",
        "token_count": 514
    },
    "0040bc00": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.0040bc00(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    int64_t unaff_R14;\n    \n    uVar3 = *(in_RAX + 9);\n    if (0xf < uVar3) {\n        iVar2 = *(unaff_R14 + 0x30);\n        uVar4 = *(iVar2 + 0xf0);\n        uVar1 = *(iVar2 + 0xf4);\n        *(iVar2 + 0xf0) = uVar1;\n        uVar4 = uVar4 ^ uVar4 << 0x11;\n        uVar4 = uVar1 >> 0x10 ^ uVar4 >> 7 ^ uVar1 ^ uVar4;\n        *(iVar2 + 0xf4) = uVar4;\n        uVar3 = uVar3 - 0xf;\n        if (((1 << (uVar3 & 0x1f) & -(uVar3 < 0x20)) - 1 & uVar4 + uVar1) == 0) {\n            *(in_RAX + 10) = *(in_RAX + 10) + 1;\n        }\n        return;\n    }\n    *(in_RAX + 10) = *(in_RAX + 10) + 1;\n    return;\n}\n",
        "token_count": 317
    },
    "0040bee0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.0040bee0(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    iVar3 = fcn.0040b3c0();\n    iVar2 = *(unaff_R14 + 0x30);\n    uVar4 = *(iVar2 + 0xf0);\n    uVar1 = *(iVar2 + 0xf4);\n    *(iVar2 + 0xf0) = uVar1;\n    uVar4 = uVar4 << 0x11 ^ uVar4;\n    uVar4 = uVar1 >> 0x10 ^ uVar4 >> 7 ^ uVar1 ^ uVar4;\n    *(iVar2 + 0xf4) = uVar4;\n    *(iVar3 + 0xc) = uVar1 + uVar4;\n    return;\n}\n",
        "token_count": 254
    },
    "00427d20": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.00427d20(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    bool bVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    uint32_t uVar5;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (in_RAX < 1) {\n        in_RAX = 1;\n    }\n    if (*0x557d28 < 1) {\n        bVar3 = true;\n    }\n    else if (in_RAX < *0x557d28) {\n        iVar2 = *(unaff_R14 + 0x30);\n        uVar1 = *(iVar2 + 0xf4);\n        uVar5 = *(iVar2 + 0xf0) << 0x11 ^ *(iVar2 + 0xf0);\n        uVar5 = uVar1 >> 0x10 ^ uVar5 >> 7 ^ uVar1 ^ uVar5;\n        iVar4 = (uVar1 + uVar5) % *0x557d28;\n        *(iVar2 + 0xf0) = uVar1;\n        *(iVar2 + 0xf4) = uVar5;\n        bVar3 = in_RAX < iVar4;\n    }\n    else {\n        bVar3 = false;\n    }\n    if (!bVar3) {\n        fcn.00427e20(unaff_RBX + 1);\n    }\n    return;\n}\n",
        "token_count": 374
    },
    "00446f60": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nint32_t fcn.00446f60(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int64_t unaff_R14;\n    \n    iVar2 = *(unaff_R14 + 0x30);\n    uVar3 = *(iVar2 + 0xf0);\n    uVar1 = *(iVar2 + 0xf4);\n    *(iVar2 + 0xf0) = uVar1;\n    uVar3 = uVar3 << 0x11 ^ uVar3;\n    uVar3 = uVar1 >> 0x10 ^ uVar3 >> 7 ^ uVar1 ^ uVar3;\n    *(iVar2 + 0xf4) = uVar3;\n    return uVar1 + uVar3;\n}\n",
        "token_count": 178
    },
    "00454260": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.00454260(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uint32_t uVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (0 < *0x557dc0) {\n        iVar2 = *(unaff_R14 + 0x30);\n        uVar1 = *(iVar2 + 0xf4);\n        uVar4 = *(iVar2 + 0xf0) << 0x11 ^ *(iVar2 + 0xf0);\n        uVar4 = uVar1 >> 0x10 ^ uVar4 >> 7 ^ uVar1 ^ uVar4;\n        iVar3 = (uVar1 + uVar4) % *0x557dc0;\n        *(iVar2 + 0xf0) = uVar1;\n        *(iVar2 + 0xf4) = uVar4;\n        if (iVar3 == 0) {\n            fcn.00427e20(unaff_RBX + 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 291
    },
    "0044ca20": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044ca20(void)\n\n{\n    uint64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n        in_RAX = in_RAX & 0xff;\n    }\n    if ((in_RAX & 0x80) != 0) {\n        fcn.0044b680(0);\n    }\n    fcn.0044b680(0);\n    return;\n}\n",
        "token_count": 134
    },
    "00451880": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nint64_t fcn.00451880(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    if (in_RAX == 0) {\n        return 0;\n    }\n    iVar4 = 0;\n    iVar5 = 0;\n    while( true ) {\n        uVar1 = *(iVar4 + in_RAX + 1);\n        uVar3 = iVar4 * 7;\n        if (uVar3 < 0) {\n            fcn.0042e7c0();\n            pcVar2 = swi(3);\n            iVar4 = (*pcVar2)();\n            return iVar4;\n        }\n        iVar5 = iVar5 + ((uVar1 & 0x7f) << (uVar3 & 0x3f) & -(uVar3 < 0x40));\n        if ((uVar1 & 0x80) == 0) break;\n        iVar4 = iVar4 + 1;\n    }\n    if (iVar5 == 0) {\n        return 0;\n    }\n    return iVar4 + in_RAX + 2;\n}\n",
        "token_count": 294
    },
    "00451940": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint8_t * fcn.00451940(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    uint8_t *in_RAX;\n    uint8_t *puVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    \n    if ((*in_RAX & 2) == 0) {\n        return NULL;\n    }\n    iVar5 = 0;\n    iVar7 = 0;\n    while( true ) {\n        uVar3 = iVar5 * 7;\n        if (uVar3 < 0) goto code_r0x00451a2f;\n        iVar7 = iVar7 + ((in_RAX[iVar5 + 1] & 0x7f) << (uVar3 & 0x3f) & -(uVar3 < 0x40));\n        if ((in_RAX[iVar5 + 1] & 0x80) == 0) break;\n        iVar5 = iVar5 + 1;\n    }\n    iVar6 = 0;\n    while( true ) {\n        iVar1 = iVar7 + iVar5 + iVar6;\n        if (iVar6 * 7 < 0) break;\n        if ((in_RAX[iVar1 + 2] & 0x80) == 0) {\n            return in_RAX + iVar1 + 3;\n        }\n        iVar6 = iVar6 + 1;\n    }\n    fcn.0042e7c0();\ncode_r0x00451a2f:\n    fcn.0042e7c0();\n    pcVar2 = swi(3);\n    puVar4 = (*pcVar2)();\n    return puVar4;\n}\n",
        "token_count": 401
    },
    "00451a40": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nulong fcn.00451a40(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    uint64_t uVar1;\n    uint8_t *in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    uint8_t *noname_0_00;\n    uint8_t *noname_1_00;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    int64_t noname_2_00;\n    uint64_t arg4_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((in_RAX == NULL) || ((*in_RAX & 4) == 0)) {\n                return 0;\n            }\n            iVar3 = 0;\n            iVar5 = 0;\n            while( true ) {\n                uVar1 = iVar3 * 7;\n                if (uVar1 < 0) goto code_r0x00451b74;\n                arg4_00 = -(uVar1 < 0x40);\n                iVar5 = ((in_RAX[iVar3 + 1] & 0x7f) << (uVar1 & 0x3f) & arg4_00) + iVar5;\n                if ((in_RAX[iVar3 + 1] & 0x80) == 0) break;\n                iVar3 = iVar3 + 1;\n            }\n            noname_2_00 = iVar5 + iVar3;\n            iVar3 = iVar5 + iVar3 + 2;\n            if ((*in_RAX & 2) == 0) goto code_r0x00451ae2;\n            iVar3 = 0;\n            iVar5 = 0;\n            while( true ) {\n                arg4_00 = iVar3 * 7;\n                if (arg4_00 < 0) break;\n                iVar5 = iVar5 + ((in_RAX[noname_2_00 + iVar3 + 2] & 0x7f) << (arg4_00 & 0x3f) & -(arg4_00 < 0x40));\n                if ((in_RAX[noname_2_00 + iVar3 + 2] & 0x80) == 0) {\n                    iVar3 = iVar5 + iVar3 + noname_2_00 + 3;\ncode_r0x00451ae2:\n                    *(*0x20 + -0xc) = 0;\n                    noname_0_00 = in_RAX + iVar3;\n                    noname_1_00 = *0x20 + -0xc;\n                    if (noname_1_00 != noname_0_00) {\n                        noname_0_00 = *(in_RAX + iVar3);\n                        *(*0x20 + -0xc) = *(in_RAX + iVar3);\n                    }\n                    *(*0x20 + -0x28) = 0x451b0c;\n                    fcn.00451020();\n                    *(*0x20 + -0x28) = 0x451b11;\n                    uVar2 = fcn.00451880(noname_0_00, noname_1_00, noname_2_00, arg4_00);\n                    return uVar2;\n                }\n                iVar3 = iVar3 + 1;\n            }\n            *(*0x20 + -0x28) = 0x451b74;\n            fcn.0042e7c0();\ncode_r0x00451b74:\n            *(*0x20 + -0x28) = 0x451b79;\n            in_RAX = fcn.0042e7c0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x451b85;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 970
    },
    "0045fc40": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nint64_t fcn.0045fc40(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    \n    if (in_RAX == 0) {\n        return 0;\n    }\n    iVar2 = 0;\n    while( true ) {\n        if (iVar2 * 7 < 0) {\n            fcn.0042e7c0();\n            pcVar1 = swi(3);\n            iVar2 = (*pcVar1)();\n            return iVar2;\n        }\n        if ((*(iVar2 + in_RAX + 1) & 0x80) == 0) break;\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2 + in_RAX + 2;\n}\n",
        "token_count": 190
    },
    "00406920": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406920(uint64_t param_1)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *puVar2;\n    uchar *puVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uchar *puVar8;\n    uchar *unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    uchar *arg1;\n    uchar *puVar10;\n    uint8_t unaff_DIL;\n    uchar *puVar11;\n    uint64_t arg1_00;\n    char cVar12;\n    uchar (*pauVar13) [16];\n    int64_t unaff_R14;\n    uchar *unaff_R15;\n    uchar in_XMM15 [16];\n    uint64_t uVar7;\n    \ncode_r0x00406920:\n    cVar12 = param_1;\n    puVar9 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -200 && *0x20 + -200 != *(unaff_R14 + 0x10)) {\n        puVar9 = *0x20 + -0x148;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        uVar6 = unaff_DIL;\n        if (uVar6 < 9) {\n            iVar5 = uVar6 * 0x10;\n            iVar4 = *(iVar5 + 0x5011a0);\n            arg1_00 = *(iVar5 + 0x5011a8);\n            if ((cVar12 == '\\0') || (-1 < in_RAX)) {\ncode_r0x0040699a:\n                *(*0x20 + -0x18) = iVar4;\n                *(*0x20 + -0x101) = cVar12;\n                *(*0x20 + -0xc0) = unaff_RBX;\n                *(*0x20 + -200) = in_RAX;\n                *(*0x20 + -0xf8) = arg1_00;\n                *(*0x20 + -0x8c) = 0;\n                *(*0x20 + -0x158) = unaff_RBP;\n                *(*0x20 + -0x150) = 0x4069ef;\n                puVar1 = fcn.004599ab();\n                unaff_RBP = *(*0x20 + -0x158);\n                *(*0x20 + -0x8c) = 0x20656d69746e7572;\n                *(*0x20 + -0x85) = 0x203a726f72726520;\n                uVar6 = 0;\n                arg1 = 0xf;\n                puVar11 = 0x64;\n                puVar3 = *0x20 + -0x8c;\n                do {\n                    if (arg1_00 <= uVar6) {\n                        *(*0x20 + -0x150) = 0x406c32;\n                        fcn.00446300(arg1);\n                        return;\n                    }\n                    if (arg1_00 <= uVar6) goto code_r0x00406ef0;\n                    *(*0x20 + -0xf0) = arg1;\n                    cVar12 = *(iVar4 + uVar6);\n                    if (cVar12 == '%') {\n                        uVar7 = uVar6 + 1;\n                        if (arg1_00 <= uVar7) goto code_r0x00406ee5;\n                        *(*0x20 + -0xd0) = uVar7;\n                        cVar12 = *(uVar6 + 1 + iVar4);\n                        if (cVar12 == 'x') {\n                            if ((param_1 != '\\0') && (puVar1 < 0)) {\n                                puVar8 = arg1 + 1;\n                                puVar10 = arg1;\n                                puVar2 = puVar3;\n                                if (puVar11 < puVar8) {\n                                    *(*0x20 + -0x150) = 0x406b10;\n                                    puVar2 = fcn.004425c0(arg1);\n                                    puVar8 = puVar3 + 1;\n                                    unaff_RBX = *(*0x20 + -0xc0);\n                                    puVar10 = *(*0x20 + -0xf0);\n                                    arg1_00 = *(*0x20 + -0xf8);\n                                    puVar1 = *(*0x20 + -200);\n                                    puVar11 = arg1;\n                                }\n                                puVar2[puVar10] = 0x2d;\n                                puVar1 = -puVar1;\n                                arg1 = puVar8;\n                                puVar3 = puVar2;\n                            }\n                            *(*0x20 + -0xb4) = 0;\n                            *(*0x20 + -0xb0) = in_XMM15;\n                            uVar6 = 0x13;\n                            while (cVar12 = puVar1,  0x9 < puVar1) {\n                                puVar1 = puVar1 / 10;\n                                cVar12 = cVar12 + puVar1 * -10;\n                                if (0x13 < uVar6) goto code_r0x00406ed8;\ncode_r0x00406d9f:\n                                *(*0x20 + (uVar6 - 0xb4)) = cVar12 + '0';\n                                uVar6 = uVar6 - 1;\n                                unaff_R15 = arg1;\n                            }\n                            if (0x13 < uVar6) goto code_r0x00406ecb;\n                            *(*0x20 + (uVar6 - 0xb4)) = cVar12 + '0';\n                            *(*0x20 + -0xf0) = arg1 + (0x14 - uVar6);\n                            iVar4 = uVar6 - 0x14;\n                            unaff_R15 = *0x20 + ((uVar6 & iVar4 >> 0x3f) - 0xb4);\n                            if (puVar11 < arg1 + (0x14 - uVar6)) {\n                                *(*0x20 + -0xd8) = iVar4;\n                                *(*0x20 + -0x20) = unaff_R15;\n                                *(*0x20 + -0xe0) = arg1;\n                                *(*0x20 + -0x150) = 0x406e53;\n                                puVar3 = fcn.004425c0(arg1);\n                                unaff_R15 = *(*0x20 + -0x20);\n                                iVar4 = *(*0x20 + -0xd8);\n                                puVar11 = arg1;\n                            }\n                            *(*0x20 + -0x10) = puVar3;\n                            *(*0x20 + -0xe8) = puVar11;\n                            *(*0x20 + -0x150) = 0x406e8d;\n                            fcn.0045a040(-iVar4);\n                            puVar1 = *(*0x20 + -200);\n                            param_1 = *(*0x20 + -0x101);\n                            unaff_RBX = *(*0x20 + -0xc0);\n                            arg1_00 = *(*0x20 + -0xf8);\n                            iVar4 = *(*0x20 + -0x18);\n                            uVar7 = *(*0x20 + -0xd0);\n                            puVar11 = *(*0x20 + -0xe8);\n                            arg1 = *(*0x20 + -0xf0);\n                            puVar3 = *(*0x20 + -0x10);\n                        }\n                        else if (cVar12 == 'y') {\n                            if (unaff_RBX < 0) {\n                                puVar8 = arg1 + 1;\n                                puVar10 = arg1;\n                                puVar2 = puVar3;\n                                if (puVar11 < puVar8) {\n                                    *(*0x20 + -0x150) = 0x406bac;\n                                    puVar2 = fcn.004425c0(arg1);\n                                    puVar8 = puVar3 + 1;\n                                    unaff_RBX = *(*0x20 + -0xc0);\n                                    puVar10 = *(*0x20 + -0xf0);\n                                    arg1_00 = *(*0x20 + -0xf8);\n                                    puVar1 = *(*0x20 + -200);\n                                    puVar11 = arg1;\n                                }\n                                puVar2[puVar10] = 0x2d;\n                                unaff_RBX = -unaff_RBX;\n                                arg1 = puVar8;\n                                puVar3 = puVar2;\n                            }\n                            cVar12 = puVar1;\n                            *(*0x20 + -0xa0) = 0;\n                            pauVar13 = *0x20 + -0x9c;\n                            *pauVar13 = in_XMM15;\n                            uVar6 = 0x13;\n                            while (0x9 < unaff_RBX) {\n                                puVar1 = unaff_RBX / 10;\n                                unaff_RBX = unaff_RBX % 10;\n                                if (0x13 < uVar6) goto code_r0x00406d92;\n                                pauVar13 = unaff_RBX + 0x30;\n                                *(*0x20 + (uVar6 - 0xa0)) = pauVar13;\n                                uVar6 = uVar6 - 1;\n                                unaff_RBX = puVar1;\n                                unaff_R15 = arg1;\n                            }\n                            if (0x13 < uVar6) {\n                                *(*0x20 + -0x150) = 0x406d92;\n                                fcn.00459720(0x14);\n                                puVar1 = arg1;\n                                arg1 = unaff_R15;\n                                cVar12 = pauVar13;\ncode_r0x00406d92:\n                                *(*0x20 + -0x150) = 0x406d9f;\n                                fcn.00459720(0x14);\n                                goto code_r0x00406d9f;\n                            }\n                            *(*0x20 + (uVar6 - 0xa0)) = unaff_RBX + '0';\n                            *(*0x20 + -0xf0) = arg1 + (0x14 - uVar6);\n                            iVar4 = uVar6 - 0x14;\n                            unaff_R15 = *0x20 + ((uVar6 & iVar4 >> 0x3f) - 0xa0);\n                            if (puVar11 < arg1 + (0x14 - uVar6)) {\n                                *(*0x20 + -0xd8) = iVar4;\n                                *(*0x20 + -0xe0) = arg1;\n                                *(*0x20 + -0x28) = unaff_R15;\n                                *(*0x20 + -0x150) = 0x406d0c;\n                                puVar3 = fcn.004425c0(arg1);\n                                iVar4 = *(*0x20 + -0xd8);\n                                unaff_R15 = *(*0x20 + -0x28);\n                                puVar11 = arg1;\n                            }\n                            *(*0x20 + -0x10) = puVar3;\n                            *(*0x20 + -0xe8) = puVar11;\n                            *(*0x20 + -0x150) = 0x406d45;\n                            fcn.0045a040(-iVar4);\n                            puVar1 = *(*0x20 + -200);\n                            param_1 = *(*0x20 + -0x101);\n                            unaff_RBX = *(*0x20 + -0xc0);\n                            arg1_00 = *(*0x20 + -0xf8);\n                            iVar4 = *(*0x20 + -0x18);\n                            uVar7 = *(*0x20 + -0xd0);\n                            puVar11 = *(*0x20 + -0xe8);\n                            arg1 = *(*0x20 + -0xf0);\n                            puVar3 = *(*0x20 + -0x10);\n                        }\n                    }\n                    else {\n                        uVar7 = uVar6;\n                        puVar10 = arg1;\n                        puVar8 = arg1 + 1;\n                        if (puVar11 < arg1 + 1) {\n                            *(*0x20 + -0x100) = uVar6;\n                            *(*0x20 + -0x102) = cVar12;\n                            *(*0x20 + -0x150) = 0x406a7e;\n                            puVar2 = fcn.004425c0(arg1);\n                            puVar8 = puVar3 + 1;\n                            uVar7 = *(*0x20 + -0x100);\n                            unaff_RBX = *(*0x20 + -0xc0);\n                            puVar10 = *(*0x20 + -0xf0);\n                            arg1_00 = *(*0x20 + -0xf8);\n                            iVar4 = *(*0x20 + -0x18);\n                            cVar12 = *(*0x20 + -0x102);\n                            puVar1 = *(*0x20 + -200);\n                            param_1 = *(*0x20 + -0x101);\n                            puVar11 = arg1;\n                            puVar3 = puVar2;\n                        }\n                        arg1 = puVar8;\n                        puVar3[puVar10] = cVar12;\n                    }\n                    uVar6 = uVar7 + 1;\n                } while( true );\n            }\n            if (uVar6 < 8) {\n                iVar4 = *(iVar5 + 0x501120);\n                arg1_00 = *(iVar5 + 0x501128);\n                goto code_r0x0040699a;\n            }\n            goto code_r0x00406efb;\n        }\n        goto code_r0x00406f08;\n    }\n    goto code_r0x00406f16;\ncode_r0x00406ecb:\n    *(*0x20 + -0x150) = 0x406ed8;\n    fcn.00459720(0x14);\n    arg1 = unaff_R15;\ncode_r0x00406ed8:\n    *(*0x20 + -0x150) = 0x406ee5;\n    fcn.00459720(0x14);\n    unaff_R15 = arg1;\ncode_r0x00406ee5:\n    *(*0x20 + -0x150) = 0x406ef0;\n    fcn.00459720(arg1_00);\ncode_r0x00406ef0:\n    unaff_DIL = puVar11;\n    *(*0x20 + -0x150) = 0x406efb;\n    fcn.00459720(arg1_00);\ncode_r0x00406efb:\n    *(*0x20 + -0x150) = 0x406f08;\n    fcn.00459720(8);\ncode_r0x00406f08:\n    cVar12 = '\\t';\n    *(*0x20 + -0x150) = 0x406f15;\n    in_RAX = fcn.00459720(9);\ncode_r0x00406f16:\n    *(puVar9 + 8) = in_RAX;\n    *(puVar9 + 0x10) = unaff_RBX;\n    puVar9[0x18] = cVar12;\n    puVar9[0x19] = unaff_DIL;\n    *(puVar9 + -8) = 0x406f2e;\n    fcn.00457040();\n    in_RAX = *(puVar9 + 8);\n    unaff_RBX = *(puVar9 + 0x10);\n    param_1 = puVar9[0x18];\n    unaff_DIL = puVar9[0x19];\n    *0x20 = puVar9;\n    goto code_r0x00406920;\n}\n",
        "token_count": 3498
    },
    "00450ee0": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00450ee0(void)\n\n{\n    int64_t in_RAX;\n    uint8_t uVar1;\n    \n    if ((*(in_RAX + 0x14) & 1) == 0) {\n        return 0;\n    }\n    uVar1 = *(in_RAX + 0x17) & 0x1f;\n    if (uVar1 < 0x15) {\n        if (0x12 < uVar1) {\n            if (uVar1 == 0x13) {\n                return in_RAX + 0x38;\n            }\n            return in_RAX + 0x50;\n        }\n        if (uVar1 == 0x11) {\n            return in_RAX + 0x48;\n        }\n        if (uVar1 == 0x12) {\n            return in_RAX + 0x40;\n        }\n    }\n    else {\n        if (uVar1 < 0x17) {\n            if (uVar1 == 0x15) {\n                return in_RAX + 0x58;\n            }\n            return in_RAX + 0x38;\n        }\n        if (uVar1 == 0x17) {\n            return in_RAX + 0x38;\n        }\n        if (uVar1 == 0x19) {\n            return in_RAX + 0x50;\n        }\n    }\n    return in_RAX + 0x30;\n}\n",
        "token_count": 321
    },
    "00446ba0": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint64_t fcn.00446ba0(void)\n\n{\n    char cVar1;\n    char *in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    \n    if (unaff_RBX == 0) {\n        return 0;\n    }\n    cVar1 = *in_RAX;\n    if (cVar1 == '-') {\n        unaff_RBX = unaff_RBX + -1;\n        in_RAX = in_RAX + (-unaff_RBX >> 0x3f & 1);\n    }\n    uVar2 = 0;\n    for (iVar3 = 0; iVar3 < unaff_RBX; iVar3 = iVar3 + 1) {\n        if (9 < in_RAX[iVar3] - 0x30U) {\n            return 0;\n        }\n        if (0x1999999999999999 < uVar2) {\n            return 0;\n        }\n        uVar4 = uVar2 * 10;\n        uVar2 = (in_RAX[iVar3] + uVar2 * 10) - 0x30;\n        if (uVar2 < uVar4) {\n            return 0;\n        }\n    }\n    if (cVar1 != '-') {\n        if (0x7fffffffffffffff < uVar2) {\n            return 0;\n        }\n        if (cVar1 != '-') goto code_r0x00446c59;\n    }\n    if (0x8000000000000000 < uVar2) {\n        return 0;\n    }\ncode_r0x00446c59:\n    if (cVar1 == '-') {\n        uVar2 = -uVar2;\n    }\n    return uVar2;\n}\n",
        "token_count": 393
    },
    "0041a0c0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0041a0c0(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    ulong unaff_RDI;\n    uint64_t arg3;\n    int64_t unaff_R14;\n    \ncode_r0x0041a0c0:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x50;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + -0x10) = unaff_RDI;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x28) = unaff_RSI;\n        uVar4 = 0;\n        do {\n            if (unaff_RBX <= uVar4) {\n                return;\n            }\n            if (arg1 == 0) {\ncode_r0x0041a159:\n                *(*0x20 + -0x18) = uVar4;\n                uVar4 = *(in_RAX + uVar4);\n                if (((unaff_RSI == 0) || (uVar4 <= *(unaff_RSI + 0x100) && *(unaff_RSI + 0x100) != uVar4)) ||\n                   (*(unaff_RSI + 0x108) < uVar4 || *(unaff_RSI + 0x108) == uVar4)) {\n                    *(*0x20 + -0x20) = uVar4;\n                    *(*0x20 + -0x58) = 0x41a1bc;\n                    iVar3 = fcn.004208c0();\n                    if (iVar3 == 0) {\n                        in_RAX = *(*0x20 + 8);\n                        arg1 = *(*0x20 + 0x18);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        unaff_RSI = *(*0x20 + 0x28);\n                        unaff_RDI = *(*0x20 + -0x10);\n                        uVar4 = *(*0x20 + -0x18);\n                    }\n                    else {\n                        iVar2 = *(iVar3 + 0x18);\n                        uVar4 = (*(*0x20 + -0x20) - iVar2) * *(iVar3 + 0x5c);\n                        arg3 = uVar4 >> 0x20;\n                        if ((*(iVar3 + 0x30) < arg3 || *(iVar3 + 0x30) == arg3) &&\n                           ((*((uVar4 >> 0x23) + *(iVar3 + 0x48)) & 1 << (uVar4 >> 0x20 & 7)) == 0)) {\n                            in_RAX = *(*0x20 + 8);\n                            arg1 = *(*0x20 + 0x18);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            unaff_RSI = *(*0x20 + 0x28);\n                            unaff_RDI = *(*0x20 + -0x10);\n                            uVar4 = *(*0x20 + -0x18);\n                        }\n                        else {\n                            iVar3 = *(iVar3 + 0x68);\n                            *(*0x20 + -0x58) = 0x41a256;\n                            fcn.0041a380(*(*0x20 + -0x18), iVar2 + iVar3 * arg3, arg3);\n                            in_RAX = *(*0x20 + 8);\n                            arg1 = *(*0x20 + 0x18);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            unaff_RSI = *(*0x20 + 0x28);\n                            unaff_RDI = *(*0x20 + -0x10);\n                            uVar4 = *(*0x20 + -0x18);\n                        }\n                    }\n                }\n                else {\n                    *(*0x20 + -0x58) = 0x41a18c;\n                    fcn.0041d7e0(1);\n                    in_RAX = *(*0x20 + 8);\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RSI = *(*0x20 + 0x28);\n                    unaff_RDI = *(*0x20 + -0x10);\n                    uVar4 = *(*0x20 + -0x18);\n                }\n            }\n            else {\n                uVar1 = *(arg1 + (uVar4 >> 6));\n                if (uVar1 == 0) {\n                    if ((uVar4 & 0x3f) != 0) goto code_r0x0041a2a6;\n                    uVar4 = uVar4 + 0x38;\n                }\n                else if ((uVar1 >> (uVar4 >> 3 & 7) & 1) != 0) goto code_r0x0041a159;\n            }\n            uVar4 = uVar4 + 8;\n        } while( true );\n    }\n    goto code_r0x0041a2b8;\ncode_r0x0041a2a6:\n    unaff_RBX = 0xf;\n    *(*0x20 + -0x58) = 0x41a2b7;\n    in_RAX = fcn.00430d40();\ncode_r0x0041a2b8:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + 0x10) = unaff_RBX;\n    *(puVar5 + 0x18) = arg1;\n    *(puVar5 + 0x20) = unaff_RDI;\n    *(puVar5 + 0x28) = unaff_RSI;\n    *(puVar5 + -8) = 0x41a2d6;\n    fcn.00457040();\n    in_RAX = *(puVar5 + 8);\n    unaff_RBX = *(puVar5 + 0x10);\n    arg1 = *(puVar5 + 0x18);\n    unaff_RDI = *(puVar5 + 0x20);\n    unaff_RSI = *(puVar5 + 0x28);\n    *0x20 = puVar5;\n    goto code_r0x0041a0c0;\n}\n",
        "token_count": 1540
    },
    "00452180": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint64_t fcn.00452180(uint64_t arg1)\n\n{\n    uint16_t *puVar1;\n    uint16_t *puVar2;\n    uint8_t uVar3;\n    uint16_t uVar4;\n    uint16_t uVar5;\n    uint32_t uVar6;\n    char cVar7;\n    ulong in_RAX;\n    ulong uVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    uint32_t *noname_0;\n    int64_t iVar11;\n    int64_t iVar12;\n    int64_t iVar13;\n    int64_t unaff_RBX;\n    uchar *puVar14;\n    uchar *unaff_RBP;\n    uint64_t uVar15;\n    uint64_t uVar16;\n    int64_t in_R8;\n    uint64_t in_R9;\n    ulong arg4;\n    int64_t unaff_R14;\n    \n    while (puVar14 = *0x20,  *0x20 + -0xa0 < *(unaff_R14 + 0x10) || *0x20 + -0xa0 == *(unaff_R14 + 0x10)) {\ncode_r0x00452dfe:\n        *(puVar14 + 8) = in_RAX;\n        *(puVar14 + 0x10) = unaff_RBX;\n        *(puVar14 + 0x18) = arg1;\n        *(puVar14 + -8) = 0x452e12;\n        fcn.00457040();\n        in_RAX = *(puVar14 + 8);\n        unaff_RBX = *(puVar14 + 0x10);\n        arg1 = *(puVar14 + 0x18);\n        *0x20 = puVar14;\n    }\n    puVar14 = *0x20 + -0x120;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + -0x20) = arg1;\n    *(*0x20 + -0x18) = in_RAX;\n    *(*0x20 + -0x10) = unaff_RBX;\n    *(*0x20 + -0x128) = 0x4521e8;\n    fcn.0040c380(*0x20 + -0x18);\n    if (arg1 != '\\0') {\n        return 1;\n    }\n    *(*0x20 + -0x18) = *(*0x20 + 8);\n    *(*0x20 + -0x10) = *(*0x20 + 0x10);\n    *(*0x20 + -0x128) = 0x45222c;\n    fcn.0040c5c0(*0x20 + -0x18);\n    iVar12 = *(*0x20 + 0x10);\n    if (*(*0x20 + 8) == iVar12) {\n        return 1;\n    }\n    uVar3 = *(*(*0x20 + 8) + 0x17);\n    if ((*(iVar12 + 0x17) & 0x1f) != (uVar3 & 0x1f)) {\n        return 0;\n    }\n    *(*0x20 + -0x105) = uVar3;\n    *(*0x20 + -0x106) = uVar3 & 0x1f;\n    *(*0x20 + -0x128) = 0x452276;\n    uVar8 = fcn.00450e40();\n    *(*0x20 + -0x28) = uVar8;\n    *(*0x20 + -0xb8) = uVar3;\n    *(*0x20 + -0x128) = 0x452290;\n    unaff_RBX = fcn.00450e40();\n    if (uVar3 != *(*0x20 + -0xb8)) {\n        return 0;\n    }\n    *(*0x20 + -0x128) = 0x4522aa;\n    cVar7 = fcn.004021a0(*(*0x20 + -0xb8), iVar12);\n    if (cVar7 == '\\0') {\n        return 0;\n    }\n    *(*0x20 + -0x128) = 0x4522ce;\n    uVar8 = fcn.00450ee0();\n    *(*0x20 + -0x80) = uVar8;\n    *(*0x20 + -0x128) = 0x4522e5;\n    iVar9 = fcn.00450ee0();\n    noname_0 = *(*0x20 + -0x80);\n    if (noname_0 == NULL) {\n        if (iVar9 != 0) {\n            return 0;\n        }\n    }\n    else {\n        if (iVar9 == 0) {\n            return 0;\n        }\n        *(*0x20 + -0x88) = iVar9;\n        uVar6 = *noname_0;\n        *(*0x20 + -0x128) = 0x452333;\n        fcn.00451020();\n        *(*0x20 + -0x128) = 0x452338;\n        uVar8 = fcn.00451880(noname_0, iVar12, in_R8, in_R9);\n        *(*0x20 + -0x68) = uVar8;\n        *(*0x20 + -0xf0) = uVar6;\n        uVar6 = **(*0x20 + -0x88);\n        uVar15 = uVar6;\n        *(*0x20 + -0x128) = 0x45235e;\n        fcn.00451020();\n        *(*0x20 + -0x128) = 0x452365;\n        unaff_RBX = fcn.00451880(uVar15, iVar12, in_R8, in_R9);\n        if (uVar6 != *(*0x20 + -0xf0)) {\n            return 0;\n        }\n        *(*0x20 + -0x128) = 0x452385;\n        cVar7 = fcn.004021a0(*(*0x20 + -0xf0), iVar12);\n        if (cVar7 == '\\0') {\n            return 0;\n        }\n    }\n    uVar3 = *(*0x20 + -0x106);\n    if (uVar3 - 1 < 0x10) {\n        return 1;\n    }\n    if (uVar3 < 0x16) {\n        if (0x12 < uVar3) {\n            if (uVar3 == 0x13) {\n                iVar12 = *(*0x20 + 8);\n                in_R8 = *(*0x20 + 0x10);\n                if (*(in_R8 + 0x32) != *(iVar12 + 0x32)) {\n                    return 0;\n                }\n                uVar4 = *(iVar12 + 0x30);\n                arg1 = uVar4;\n                uVar5 = *(in_R8 + 0x30);\n                if (uVar5 != uVar4) {\n                    return 0;\n                }\n                if ((*(iVar12 + 0x14) & 1) == 0) {\n                    iVar9 = 0x38;\n                }\n                else {\n                    iVar9 = 0x48;\n                }\n                in_R9 = iVar12 + iVar9;\n                if (arg1 < 0x100001) {\n                    if ((*(in_R8 + 0x14) & 1) == 0) {\n                        iVar9 = 0x38;\n                    }\n                    else {\n                        iVar9 = 0x48;\n                    }\n                    *(*0x20 + -0x102) = uVar4;\n                    *(*0x20 + -0x104) = uVar5;\n                    *(*0x20 + -0x98) = in_R9;\n                    iVar9 = in_R8 + iVar9;\n                    *(*0x20 + -0xa0) = iVar9;\n                    uVar8 = *(*0x20 + -0x20);\n                    uVar15 = 0;\n                    while (uVar16 = uVar5,  uVar15 < arg1) {\n                        if (uVar16 <= uVar15) goto code_r0x00452dec;\n                        *(*0x20 + -0xd0) = uVar15;\n                        iVar11 = *(iVar9 + uVar15 * 8);\n                        *(*0x20 + -0x128) = 0x452c7e;\n                        cVar7 = fcn.00452180(uVar8);\n                        if (cVar7 == '\\0') {\n                            return 0;\n                        }\ncode_r0x00452c1d:\n                        arg1 = *(*0x20 + -0x102);\n                        uVar5 = *(*0x20 + -0x104);\n                        uVar8 = *(*0x20 + -0x20);\n                        iVar9 = *(*0x20 + -0xa0);\n                        in_R9 = *(*0x20 + -0x98);\n                        iVar12 = *(*0x20 + 8);\n                        in_R8 = *(*0x20 + 0x10);\n                        unaff_RBX = iVar11;\n                        uVar15 = *(*0x20 + -0xd0) + 1;\n                    }\n                    if ((*(iVar12 + 0x14) & 1) == 0) {\n                        iVar9 = 0x38;\n                    }\n                    else {\n                        iVar9 = 0x48;\n                    }\n                    uVar16 = *(iVar12 + 0x30);\n                    uVar15 = (*(iVar12 + 0x32) & 0x7fff) + *(iVar12 + 0x30) & 0xffff;\n                    if (uVar16 <= uVar15) {\n                        iVar11 = uVar15 - uVar16;\n                        iVar12 = iVar12 + iVar9 + (uVar16 << 3 & uVar16 - 0x100000 >> 0x3f);\n                        if ((*(in_R8 + 0x14) & 1) == 0) {\n                            iVar9 = 0x38;\n                        }\n                        else {\n                            iVar9 = 0x48;\n                        }\n                        puVar1 = in_R8 + 0x32;\n                        puVar2 = in_R8 + 0x30;\n                        uVar16 = *puVar2;\n                        in_R8 = in_R8 + iVar9;\n                        uVar15 = (*puVar1 & 0x7fff) + *puVar2 & 0xffff;\n                        if (uVar16 <= uVar15) {\n                            *(*0x20 + -0x100) = iVar11;\n                            *(*0x20 + -0xa8) = iVar12;\n                            uVar15 = uVar15 - uVar16;\n                            *(*0x20 + -0xf8) = uVar15;\n                            in_R9 = uVar16 - 0x100000 >> 0x3f;\n                            uVar16 = (uVar16 << 3 & in_R9) + in_R8;\n                            *(*0x20 + -0xb0) = uVar16;\n                            uVar10 = 0;\n                            while( true ) {\n                                if (iVar11 <= uVar10) {\n                                    return 1;\n                                }\n                                in_R8 = *(iVar12 + uVar10 * 8);\n                                if (uVar15 <= uVar10) break;\n                                *(*0x20 + -0xe0) = uVar10;\n                                unaff_RBX = *(uVar16 + uVar10 * 8);\n                                *(*0x20 + -0x128) = 0x452da5;\n                                cVar7 = fcn.00452180(uVar8);\n                                if (cVar7 == '\\0') {\n                                    return 0;\n                                }\n                                uVar10 = *(*0x20 + -0xe0) + 1;\n                                iVar11 = *(*0x20 + -0x100);\n                                uVar15 = *(*0x20 + -0xf8);\n                                uVar8 = *(*0x20 + -0x20);\n                                uVar16 = *(*0x20 + -0xb0);\n                                iVar12 = *(*0x20 + -0xa8);\n                            }\n                            *(*0x20 + -0x128) = 0x452dd8;\n                            fcn.00459720(uVar15);\n                        }\n                        *(*0x20 + -0x128) = 0x452de5;\n                        fcn.004597e0(uVar15);\n                    }\n                    *(*0x20 + -0x128) = 0x452dec;\n                    fcn.004597e0(uVar15);\ncode_r0x00452dec:\n                    arg1 = uVar16 & 0xffffffff;\n                    *(*0x20 + -0x128) = 0x452df3;\n                    fcn.00459720(arg1);\n                }\n                *(*0x20 + -0x128) = 0x452dfd;\n                in_RAX = fcn.00459760(arg1, 0x100000);\n                goto code_r0x00452dfe;\n            }\n            if (uVar3 != 0x14) {\n                *(*0x20 + -0x128) = 0x45253b;\n                cVar7 = fcn.00452180(*(*0x20 + -0x20));\n                if (cVar7 == '\\0') {\n                    uVar15 = 0;\n                }\n                else {\n                    *(*0x20 + -0x128) = 0x452568;\n                    uVar15 = fcn.00452180(*(*0x20 + -0x20));\n                }\n                return uVar15;\n            }\n            *(*0x20 + -0x128) = 0x452486;\n            uVar8 = fcn.00451880(*(*0x20 + 8), iVar12, in_R8, in_R9);\n            *(*0x20 + -0x28) = uVar8;\n            *(*0x20 + -0xb8) = unaff_RBX;\n            uVar8 = *(*(*0x20 + 0x10) + 0x30);\n            *(*0x20 + -0x128) = 0x4524a7;\n            iVar11 = fcn.00451880(*(*0x20 + 0x10), uVar8, in_R8, in_R9);\n            if (unaff_RBX == *(*0x20 + -0xb8)) {\n                *(*0x20 + -0x128) = 0x4524c5;\n                cVar7 = fcn.004021a0(*(*0x20 + -0xb8), uVar8);\n                if (cVar7 != '\\0') {\n                    iVar12 = *(*0x20 + 8);\n                    iVar9 = *(iVar12 + 0x40);\n                    iVar13 = *(*0x20 + 0x10);\n                    if (*(iVar13 + 0x40) != iVar9) {\n                        return 0;\n                    }\n                    *(*0x20 + -0xb8) = iVar9;\n                    uVar15 = 0;\n                    while( true ) {\n                        if (iVar9 <= uVar15) {\n                            return 1;\n                        }\n                        iVar9 = *(iVar12 + 0x38);\n                        uVar16 = *(iVar12 + 0x40);\n                        if (uVar16 <= uVar15) break;\n                        iVar12 = iVar9 + uVar15 * 8;\n                        uVar16 = *(iVar13 + 0x40);\n                        if (uVar16 <= uVar15) {\n                            *(*0x20 + -0x128) = 0x452c18;\n                            fcn.00459720(uVar16);\n                            break;\n                        }\n                        *(*0x20 + -0x40) = *(iVar13 + 0x38);\n                        *(*0x20 + -0x48) = iVar9;\n                        *(*0x20 + -0xd8) = uVar15;\n                        *(*0x20 + -0x78) = iVar12;\n                        *(*0x20 + -0x128) = 0x452a87;\n                        uVar8 = fcn.00451020();\n                        *(*0x20 + -0x50) = uVar8;\n                        iVar11 = *(*0x20 + -0xd8);\n                        iVar13 = *(*0x20 + -0x40);\n                        *(*0x20 + -0x90) = iVar13 + iVar11 * 8;\n                        uVar16 = *(iVar13 + iVar11 * 8);\n                        *(*0x20 + -0x128) = 0x452ab3;\n                        uVar8 = fcn.00451020();\n                        *(*0x20 + -0x58) = uVar8;\n                        *(*0x20 + -0x128) = 0x452ac8;\n                        uVar8 = fcn.00451880(iVar11, iVar13, iVar9, iVar12);\n                        *(*0x20 + -0x60) = uVar8;\n                        *(*0x20 + -0xc0) = uVar16;\n                        *(*0x20 + -0x128) = 0x452ae5;\n                        iVar11 = fcn.00451880(iVar11, iVar13, iVar9, iVar12);\n                        uVar15 = *(*0x20 + -0xc0);\n                        if (uVar16 != uVar15) {\n                            return 0;\n                        }\n                        *(*0x20 + -0x128) = 0x452b05;\n                        cVar7 = fcn.004021a0(uVar15, iVar13);\n                        if (cVar7 == '\\0') {\n                            return 0;\n                        }\n                        *(*0x20 + -0x128) = 0x452b1a;\n                        uVar8 = fcn.00451a40(uVar15, iVar13, iVar9, iVar12);\n                        *(*0x20 + -0x28) = uVar8;\n                        *(*0x20 + -0xc0) = iVar11;\n                        *(*0x20 + -0x128) = 0x452b34;\n                        fcn.00451a40(uVar15, iVar13, iVar9, iVar12);\n                        if (iVar11 != *(*0x20 + -0xc0)) {\n                            return 0;\n                        }\n                        *(*0x20 + -0x128) = 0x452b59;\n                        cVar7 = fcn.004021a0(*(*0x20 + -0xc0), iVar13);\n                        if (cVar7 == '\\0') {\n                            return 0;\n                        }\n                        *(*0x20 + -0x128) = 0x452b7b;\n                        uVar8 = fcn.004512c0();\n                        *(*0x20 + -0x70) = uVar8;\n                        *(*0x20 + -0x128) = 0x452ba5;\n                        iVar11 = fcn.004512c0();\n                        *(*0x20 + -0x128) = 0x452bbd;\n                        cVar7 = fcn.00452180(*(*0x20 + -0x20));\n                        if (cVar7 == '\\0') {\n                            return 0;\n                        }\ncode_r0x00452a10:\n                        uVar15 = *(*0x20 + -0xd8) + 1;\n                        iVar9 = *(*0x20 + -0xb8);\n                        iVar13 = *(*0x20 + 0x10);\n                        iVar12 = *(*0x20 + 8);\n                    }\n                    *(*0x20 + -0x128) = 0x452c1d;\n                    fcn.00459720(uVar16);\n                    goto code_r0x00452c1d;\n                }\n            }\n            return 0;\n        }\n        if (uVar3 == 0x11) {\n            *(*0x20 + -0x128) = 0x4525f4;\n            cVar7 = fcn.00452180(*(*0x20 + -0x20));\n            if (cVar7 == '\\0') {\n                uVar15 = 0;\n            }\n            else {\n                uVar15 = *(*(*0x20 + 8) + 0x40) & 0xffffffffffffff00 |\n                         *(*(*0x20 + 0x10) + 0x40) == *(*(*0x20 + 8) + 0x40);\n            }\n            return uVar15 & 0xffffffff;\n        }\n        if (uVar3 == 0x12) {\n            if (*(*(*0x20 + 0x10) + 0x38) == *(*(*0x20 + 8) + 0x38)) {\n                *(*0x20 + -0x128) = 0x4525bf;\n                uVar15 = fcn.00452180(*(*0x20 + -0x20));\n            }\n            else {\n                uVar15 = 0;\n            }\n            return uVar15;\n        }\n    }\n    else {\n        if (uVar3 < 0x18) {\n            if (uVar3 == 0x16) {\n                *(*0x20 + -0x128) = 0x45265a;\n                uVar15 = fcn.00452180(*(*0x20 + -0x20));\n                return uVar15;\n            }\n            *(*0x20 + -0x128) = 0x45268f;\n            uVar15 = fcn.00452180(*(*0x20 + -0x20));\n            return uVar15;\n        }\n        if (uVar3 == 0x18) {\n            return 1;\n        }\n        if (uVar3 == 0x19) {\n            iVar12 = *(*(*0x20 + 0x10) + 0x40);\n            iVar9 = *(*0x20 + 8);\n            if (*(iVar9 + 0x40) != iVar12) {\n                return 0;\n            }\n            *(*0x20 + -0x128) = 0x4526d7;\n            uVar8 = fcn.00451880(*(*0x20 + 0x10), iVar12, in_R8, in_R9);\n            *(*0x20 + -0x28) = uVar8;\n            *(*0x20 + -0xb8) = iVar9;\n            uVar8 = *(*(*0x20 + 0x10) + 0x30);\n            *(*0x20 + -0x128) = 0x4526f8;\n            fcn.00451880(*(*0x20 + 0x10), uVar8, in_R8, in_R9);\n            if (iVar9 == *(*0x20 + -0xb8)) {\n                *(*0x20 + -0x128) = 0x452715;\n                cVar7 = fcn.004021a0(*(*0x20 + -0xb8), uVar8);\n                if (cVar7 != '\\0') {\n                    iVar9 = *(*0x20 + 8);\n                    iVar11 = *(iVar9 + 0x40);\n                    *(*0x20 + -0xb8) = iVar11;\n                    iVar12 = *(*0x20 + 0x10);\n                    uVar15 = 0;\n                    goto code_r0x00452843;\n                }\n            }\n            return 0;\n        }\n        if (uVar3 == 0x1a) {\n            return 1;\n        }\n    }\n    *(*0x20 + -0x128) = 0x4527e5;\n    fcn.004324c0();\n    *(*0x20 + -0x128) = 0x4527f6;\n    fcn.00432dc0();\n    *(*0x20 + -0x128) = 0x452805;\n    fcn.00432ac0();\n    *(*0x20 + -0x128) = 0x45280a;\n    fcn.00432720();\n    *(*0x20 + -0x128) = 0x45280f;\n    fcn.00432540();\n    *(*0x20 + -0x128) = 0x452825;\n    fcn.00430d40();\n    while( true ) {\n        uVar15 = *(*0x20 + -0xe8) + 1;\n        iVar11 = *(*0x20 + -0xb8);\n        iVar12 = *(*0x20 + 0x10);\n        iVar9 = *(*0x20 + 8);\ncode_r0x00452843:\n        if (iVar11 <= uVar15) {\n            return 1;\n        }\n        uVar8 = *(iVar9 + 0x38);\n        uVar16 = *(iVar9 + 0x40);\n        if (uVar16 <= uVar15) break;\n        iVar13 = uVar15 * 3;\n        arg4 = *(iVar12 + 0x38);\n        uVar16 = *(iVar12 + 0x40);\n        if (uVar16 <= uVar15) {\n            *(*0x20 + -0x128) = 0x452a0b;\n            fcn.00459720(uVar16);\n            break;\n        }\n        *(*0x20 + -0xc0) = iVar13;\n        *(*0x20 + -0x30) = uVar8;\n        *(*0x20 + -0x38) = arg4;\n        *(*0x20 + -0xe8) = uVar15;\n        *(*0x20 + -0x128) = 0x452895;\n        uVar8 = fcn.00451880(uVar16, iVar9, iVar13, arg4);\n        *(*0x20 + -0x28) = uVar8;\n        *(*0x20 + -200) = iVar11;\n        uVar8 = *(*0x20 + -0x38);\n        *(*0x20 + -0x128) = 0x4528bb;\n        fcn.00451880(*(*0x20 + -0xc0), uVar8, iVar13, arg4);\n        if (iVar11 != *(*0x20 + -200)) {\n            return 0;\n        }\n        *(*0x20 + -0x128) = 0x4528d9;\n        cVar7 = fcn.004021a0(*(*0x20 + -200), uVar8);\n        if (cVar7 == '\\0') {\n            return 0;\n        }\n        iVar12 = *(*(*0x20 + -0x38) + 8 + *(*0x20 + -0xc0) * 8);\n        *(*0x20 + -0x128) = 0x452914;\n        cVar7 = fcn.00452180(*(*0x20 + -0x20));\n        if (cVar7 == '\\0') {\n            return 0;\n        }\n        *(*0x20 + -0x128) = 0x452932;\n        uVar8 = fcn.00451940(*(*0x20 + -0xc0), *(*0x20 + -0x30), iVar13, arg4);\n        *(*0x20 + -0x28) = uVar8;\n        *(*0x20 + -200) = iVar12;\n        uVar8 = *(*0x20 + -0x38);\n        *(*0x20 + -0x128) = 0x452958;\n        fcn.00451940(*(*0x20 + -0xc0), uVar8, iVar13, arg4);\n        if (iVar12 != *(*0x20 + -200)) {\n            return 0;\n        }\n        *(*0x20 + -0x128) = 0x452975;\n        cVar7 = fcn.004021a0(*(*0x20 + -200), uVar8);\n        if (cVar7 == '\\0') {\n            return 0;\n        }\n        if (*(*(*0x20 + -0x38) + 0x10 + *(*0x20 + -0xc0) * 8) != *(*(*0x20 + -0x30) + 0x10 + *(*0x20 + -0xc0) * 8)) {\n            return 0;\n        }\n    }\n    *(*0x20 + -0x128) = 0x452a10;\n    fcn.00459720(uVar16);\n    goto code_r0x00452a10;\n}\n",
        "token_count": 6359
    },
    "0043e920": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint64_t fcn.0043e920(void)\n\n{\n    int32_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        iVar2 = *0x504800;\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x504810 == 0) {\n                return 0;\n            }\n            if (*0x557cb0 != 0) {\n                if (*0x557cb0 == -1) {\n                    iVar1 = -*0x504810;\n                }\n                else {\n                    iVar1 = *0x504810 / *0x557cb0;\n                }\n                iVar3 = iVar1 + 1;\n                if (*0x504810 < iVar1 + 1) {\n                    iVar3 = *0x504810;\n                }\n                if ((0 < unaff_EBX) && (unaff_EBX < iVar3)) {\n                    iVar3 = unaff_EBX;\n                }\n                if (0x80 < iVar3) {\n                    iVar3 = 0x80;\n                }\n                *0x504810 = *0x504810 - iVar3;\n                if ((*0x504800 != 0) && (*0x504800 = *(*0x504800 + 0xa0),  *0x504800 == 0)) {\n                    *0x504808 = 0;\n                }\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x18) = in_RAX;\n                while( true ) {\n                    if (iVar3 + -1 < 1) break;\n                    *(*0x20 + -0x1c) = iVar3 + -1;\n                    if ((*0x504800 != 0) && (*0x504800 = *(*0x504800 + 0xa0),  *0x504800 == 0)) {\n                        *0x504808 = 0;\n                    }\n                    *(*0x20 + -0x40) = 0x43e9e7;\n                    fcn.0043eda0(0);\n                    iVar3 = *(*0x20 + -0x1c);\n                    iVar2 = *(*0x20 + -0x10);\n                }\n                return iVar2;\n            }\n            *(*0x20 + -0x40) = 0x43ea3b;\n            in_RAX = fcn.0042e820();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + -8) = 0x43ea4a;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 746
    },
    "004482a0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.004482a0(ulong arg1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    ulong uVar3;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (in_RAX != 0) {\n        uVar1 = fcn.00447a60(*(in_RAX + 0x18));\n        iVar2 = fcn.00447a60(*(in_RAX + 0x1c));\n        if (((uVar1 != 0xffffffff) && (iVar2 != -1)) && (*(unaff_RBX + 0x40) != uVar1 && uVar1 <= *(unaff_RBX + 0x40)))\n        {\n            uVar3 = fcn.004481a0(uVar1);\n            return uVar3;\n        }\n        return 0x480fec;\n    }\n    return 0x480fec;\n}\n",
        "token_count": 260
    },
    "004512c0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint64_t fcn.004512c0(ulong param_1, int64_t param_2)\n\n{\n    uint64_t in_RAX;\n    uint64_t *puVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((unaff_EBX == 0) || (unaff_EBX == 0xffffffff)) {\n                return 0;\n            }\n            for (iVar2 = 0x4f53c0; iVar2 != 0; iVar2 = *(iVar2 + 0x210)) {\n                if ((*(iVar2 + 0x118) < in_RAX || *(iVar2 + 0x118) == in_RAX) &&\n                   (in_RAX <= *(iVar2 + 0x120) && *(iVar2 + 0x120) != in_RAX)) goto code_r0x0045131c;\n            }\n            iVar2 = 0;\ncode_r0x0045131c:\n            *(*0x20 + 0x10) = unaff_EBX;\n            if (iVar2 == 0) {\n                *(*0x20 + -0x38) = in_RAX;\n                *(*0x20 + -0x58) = 0x45139c;\n                fcn.00409300();\n                *(*0x20 + -0x58) = 0x4513b3;\n                puVar1 = fcn.0040d400(*(*0x20 + 0x10));\n                uVar3 = *puVar1;\n                *(*0x20 + -0x20) = uVar3;\n                *(*0x20 + -0x58) = 0x4513ca;\n                fcn.00409520();\n                if (*(*0x20 + -0x20) != 0) {\n                    return *(*0x20 + -0x20);\n                }\n                *(*0x20 + -0x58) = 0x4513d9;\n                fcn.004324c0();\n                *(*0x20 + -0x58) = 0x4513ea;\n                fcn.00432dc0();\n                *(*0x20 + -0x58) = 0x4513f6;\n                fcn.00432c20();\n                *(*0x20 + -0x58) = 0x451407;\n                fcn.00432dc0();\n                *(*0x20 + -0x58) = 0x451411;\n                fcn.00432c20();\n                *(*0x20 + -0x58) = 0x451425;\n                fcn.00432dc0();\n                *(*0x20 + -0x58) = 0x45142a;\n                fcn.00432540();\n                iVar2 = 0x4f53c0;\n                while (iVar2 != 0) {\n                    *(*0x20 + -0x18) = iVar2;\n                    uVar3 = *(iVar2 + 0x118);\n                    *(*0x20 + -0x28) = uVar3;\n                    param_2 = *(iVar2 + 0x120);\n                    *(*0x20 + -0x30) = param_2;\n                    *(*0x20 + -0x58) = 0x45145f;\n                    fcn.004324c0();\n                    *(*0x20 + -0x58) = 0x451470;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x58) = 0x45147a;\n                    fcn.00432c20();\n                    *(*0x20 + -0x58) = 0x45148b;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x58) = 0x451495;\n                    fcn.00432c20();\n                    *(*0x20 + -0x58) = 0x45149a;\n                    fcn.00432720();\n                    *(*0x20 + -0x58) = 0x45149f;\n                    fcn.00432540();\n                    iVar2 = *(*(*0x20 + -0x18) + 0x210);\n                }\n                *(*0x20 + -0x58) = 0x4514c5;\n                fcn.00430d40();\n            }\n            else {\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x58) = 0x451345;\n                puVar1 = fcn.0040d400(unaff_EBX);\n                if (*puVar1 != 0) {\n                    return *puVar1;\n                }\n                param_2 = *(*(*0x20 + -0x10) + 0x118);\n                uVar3 = *(*(*0x20 + -0x10) + 0x120);\n                if (param_2 + *(*0x20 + 0x10) <= uVar3) {\n                    return param_2 + *(*0x20 + 0x10);\n                }\n            }\n            *(*0x20 + -0x28) = param_2;\n            *(*0x20 + -0x30) = uVar3;\n            *(*0x20 + -0x58) = 0x4514d4;\n            fcn.004324c0();\n            *(*0x20 + -0x58) = 0x4514e5;\n            fcn.00432dc0();\n            *(*0x20 + -0x58) = 0x4514f1;\n            fcn.00432c20();\n            *(*0x20 + -0x58) = 0x451505;\n            fcn.00432dc0();\n            *(*0x20 + -0x58) = 0x45150f;\n            fcn.00432c20();\n            *(*0x20 + -0x58) = 0x451525;\n            fcn.00432dc0();\n            *(*0x20 + -0x58) = 0x45152f;\n            fcn.00432c20();\n            *(*0x20 + -0x58) = 0x451534;\n            fcn.00432720();\n            *(*0x20 + -0x58) = 0x451539;\n            fcn.00432540();\n            unaff_EBX = 0x21;\n            *(*0x20 + -0x58) = 0x45154a;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + -8) = 0x451559;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1661
    },
    "00462940": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.00462940(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x28) = *0x503ad0;\n            *(*0x20 + -0x60) = 0x46297c;\n            iVar1 = fcn.004619e0();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 8);\n                *(*0x20 + -0x18) = *(*0x20 + 0x10);\n                *(*0x20 + -0x20) = *(*0x20 + 0x18);\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x60) = 0x4629c8;\n                uVar2 = fcn.0045b860(iVar1);\n                if (((uVar2 == -1) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x30) = uVar2;\n                    *(*0x20 + -0x60) = 0x462a08;\n                    fcn.00408ce0();\n                    uVar2 = *(*0x20 + -0x30);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x60) = 0x462a38;\n            in_RAX = fcn.004305a0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x462a4d;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 644
    },
    "00405580": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00405580(void)\n\n{\n    uint64_t *unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uchar auStackX8 [32];\n    ulong auStack48 [2];\n    uchar auStack32 [16];\n    ulong *puStack16;\n    \n    if (*(unaff_R14[6] + 0x90) != unaff_R14) {\n        return 0x4863f4;\n    }\n    if ((*unaff_R14 < auStackX8) && (auStackX8 <= unaff_R14[1])) {\n        auStack48[0] = CONCAT44(in_XMM15_Db, in_XMM15_Da);\n        auStack32 = CONCAT88(auStackX8, 0x405660);\n        puStack16 = auStack48;\n        fcn.00456f00();\n        return auStack48[0];\n    }\n    return 0x4863f4;\n}\n",
        "token_count": 215
    },
    "00407c60": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00407c60(ulong param_1, uint64_t param_2)\n\n{\n    ulong uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t arg1;\n    ulong unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t arg1_00;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uchar uVar6;\n    uchar uVar7;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xa8 && *0x20 + -0xa8 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x128;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x130) = 0x407c96;\n            fcn.004478a0();\n            *(*0x20 + -0x130) = 0x407c9b;\n            uVar1 = fcn.00447f80();\n            *(*0x20 + -0xa8) = uVar1;\n            *(*0x20 + -0xf8) = unaff_RBX;\n            *(*0x20 + -0x128) = uVar1;\n            *(*0x20 + -0x120) = unaff_RBX;\n            *(*0x20 + -0x118) = 0x28;\n            *(*0x20 + -0x130) = 0x407cbb;\n            fcn.00402300(param_1, param_2);\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            iVar4 = *(*0x20 + -0x110);\n            if (-1 < iVar4) {\n                uVar2 = iVar4 - 1;\n                param_2 = *(*0x20 + -0xf8);\n                if (uVar2 <= param_2) {\n                    arg1_00 = iVar4 + 2;\n                    uVar6 = param_2 < arg1_00;\n                    if (arg1_00 < param_2) goto code_r0x00407d1b;\n                    do {\n                        uVar6 = 0;\n                        iVar4 = 0x31;\n                        *(*0x20 + -0x130) = 0x407d16;\n                        fcn.00445f40(0x31);\n                        *(*0x20 + -0x130) = 0x407d1b;\n                        uVar2 = fcn.00430d40();\ncode_r0x00407d1b:\n                        if (uVar6) goto code_r0x00407fa5;\n                        if (arg1_00 < uVar2) goto code_r0x00407f99;\n                        iVar3 = *(*0x20 + -0xa8);\n                    } while ((CONCAT11(*(iVar4 + iVar3), *(iVar4 + -1 + iVar3)) != 0x282e) ||\n                            (*(iVar4 + 1 + iVar3) != '*'));\n                    *(*0x20 + -0x100) = uVar2;\n                    param_2 = param_2 - iVar4;\n                    *(*0x20 + -0xf0) = param_2;\n                    iVar4 = param_2 - 2;\n                    *(*0x20 + -0xf8) = iVar4;\n                    iVar3 = (-iVar4 >> 0x3f & arg1_00) + iVar3;\n                    *(*0x20 + -0xa0) = iVar3;\n                    *(*0x20 + -0x128) = iVar3;\n                    *(*0x20 + -0x120) = iVar4;\n                    *(*0x20 + -0x118) = 0x29;\n                    *(*0x20 + -0x130) = 0x407d9e;\n                    fcn.00402300(iVar4, param_2);\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    uVar2 = *(*0x20 + -0x110);\n                    if (-1 < uVar2) {\n                        arg1 = uVar2 + 2;\n                        param_2 = *(*0x20 + -0xf8);\n                        uVar6 = arg1 < param_2;\n                        uVar7 = arg1 == param_2;\n                        if (arg1 < param_2) goto code_r0x00407dfa;\n                        do {\n                            uVar6 = 0;\n                            uVar7 = 1;\n                            arg1 = 0x2e;\n                            *(*0x20 + -0x130) = 0x407df5;\n                            fcn.00445f40(0x2e);\n                            *(*0x20 + -0x130) = 0x407dfa;\n                            uVar2 = fcn.00430d40();\ncode_r0x00407dfa:\n                            if (!uVar6 && !uVar7) goto code_r0x00407f6c;\n                            if (arg1 < uVar2) goto code_r0x00407f67;\n                            iVar4 = *(*0x20 + -0xa0);\n                            arg1_00 = *(iVar4 + uVar2);\n                        } while (*(iVar4 + uVar2) != 0x2e29);\n                        *(*0x20 + -0x138) = unaff_RBP;\n                        *(*0x20 + -0x130) = 0x407e4f;\n                        iVar3 = fcn.00459999();\n                        unaff_RBP = *(*0x20 + -0x138);\n                        *(*0x20 + -0x98) = 0x48281c;\n                        *(*0x20 + -0x90) = 0xd;\n                        *(*0x20 + -0x88) = *(*0x20 + -0xa8);\n                        *(*0x20 + -0x80) = *(*0x20 + -0x100);\n                        *(*0x20 + -0x78) = 0x480fe5;\n                        *(*0x20 + -0x70) = 1;\n                        *(*0x20 + -0x68) = iVar4;\n                        *(*0x20 + -0x60) = iVar3;\n                        *(*0x20 + -0x58) = 0x480fe5;\n                        *(*0x20 + -0x50) = 1;\n                        arg1_00 = (*(*0x20 + -0xf0) - iVar3) - 4;\n                        *(*0x20 + -0x48) = (-arg1_00 >> 0x3f & arg1) + iVar4;\n                        *(*0x20 + -0x40) = arg1_00;\n                        *(*0x20 + -0x38) = 0x483841;\n                        *(*0x20 + -0x30) = 0x13;\n                        *(*0x20 + -0x28) = iVar4;\n                        *(*0x20 + -0x20) = iVar3;\n                        param_2 = 0x481797;\n                        *(*0x20 + -0x18) = 0x481797;\n                        *(*0x20 + -0x10) = 8;\n                        arg1 = 9;\n                        *(*0x20 + -0x130) = 0x407f53;\n                        fcn.00445ca0(9);\n                        *(*0x20 + -0x130) = 0x407f58;\n                        fcn.00408d60();\n                        *(*0x20 + -0x130) = 0x407f67;\n                        fcn.004305a0();\ncode_r0x00407f67:\n                        *(*0x20 + -0x130) = 0x407f6c;\n                        fcn.004597e0(arg1);\ncode_r0x00407f6c:\n                        *(*0x20 + -0x130) = 0x407f71;\n                        fcn.00459760(arg1, param_2);\n                    }\n                    *(*0x20 + -0x130) = 0x407f94;\n                    fcn.00445f40(0x13);\n                    *(*0x20 + -0x130) = 0x407f99;\n                    fcn.00430d40();\ncode_r0x00407f99:\n                    *(*0x20 + -0x130) = 0x407fa5;\n                    fcn.004597e0(arg1_00);\ncode_r0x00407fa5:\n                    *(*0x20 + -0x130) = 0x407fad;\n                    uVar2 = fcn.00459760(arg1_00, param_2);\n                }\n                *(*0x20 + -0x130) = 0x407fb5;\n                fcn.00459760(uVar2, param_2);\n            }\n            unaff_RBX = 0x483ca2;\n            param_1 = 0x13;\n            *(*0x20 + -0x130) = 0x407fd8;\n            fcn.00445f40(0x13);\n            *(*0x20 + -0x130) = 0x407fdd;\n            fcn.00430d40();\n        }\n        *(puVar5 + -8) = 0x407fe5;\n        fcn.00457040();\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 2130
    },
    "0041bfa0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0041bfa0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00409300();\n    fcn.0045afe0();\n    fcn.00449b20(*(*0x5040b8 + 0x10), *(*0x5040b8 + 0x10), *(*0x5040b8 + 0x28), *(*0x5040b8 + 0x30));\n    *0x5040b0 = 1;\n    fcn.00433640(0x13);\n    fcn.0045afe0();\n    return 0;\n}\n",
        "token_count": 186
    },
    "0041d4a0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.0041d4a0(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if (((arg1 - 1 & arg1) == 0) && (arg1 != 0)) {\n                if (arg1 < 0x41) {\n                    uVar4 = arg1;\n                    if (unaff_RDI != 0) {\n                        uVar4 = -arg1 & (arg1 + unaff_RDI) - 1;\n                    }\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x10) = uVar4;\n                    uVar4 = unaff_RBX >> 6;\n                    while( true ) {\n                        *(*0x20 + -0x28) = uVar4;\n                        bVar9 = uVar4 < 0;\n                        if (bVar9) break;\n                        if (7 < uVar4) goto code_r0x0041d728;\n                        uVar3 = *(in_RAX + uVar4 * 8);\n                        uVar4 = *(in_RAX + 0x40 + uVar4 * 8);\n                        *(*0x20 + -0x50) = 0x41d551;\n                        iVar2 = fcn.0041d1a0(uVar3 | uVar4, arg1);\n                        if (iVar2 != -1) {\n                            bVar9 = *(*0x20 + -0x28) < 0;\n                            in_RAX = *(*0x20 + 8);\n                            arg1 = *(*0x20 + 0x18);\n                            uVar4 = *(*0x20 + -0x28);\n                            break;\n                        }\n                        uVar4 = *(*0x20 + -0x28) - 1;\n                        in_RAX = *(*0x20 + 8);\n                        arg1 = *(*0x20 + 0x18);\n                    }\n                    if (bVar9) {\n                        return 0;\n                    }\n                    if (uVar4 < 8) break;\n                    *(*0x20 + -0x50) = 0x41d728;\n                    fcn.00459720(8);\ncode_r0x0041d728:\n                    arg1 = 8;\n                    *(*0x20 + -0x50) = 0x41d735;\n                    fcn.00459720(8);\n                }\n                *(*0x20 + -0x50) = 0x41d73a;\n                fcn.004324c0();\n                *(*0x20 + -0x50) = 0x41d74b;\n                fcn.00432dc0();\n                *(*0x20 + -0x50) = 0x41d755;\n                fcn.00432ac0();\n                *(*0x20 + -0x50) = 0x41d75a;\n                fcn.00432720();\n                *(*0x20 + -0x50) = 0x41d75f;\n                fcn.00432540();\n                *(*0x20 + -0x50) = 0x41d770;\n                fcn.00430d40();\n            }\n            *(*0x20 + -0x50) = 0x41d775;\n            fcn.004324c0();\n            *(*0x20 + -0x50) = 0x41d786;\n            fcn.00432dc0();\n            *(*0x20 + -0x50) = 0x41d790;\n            fcn.00432ac0();\n            *(*0x20 + -0x50) = 0x41d795;\n            fcn.00432720();\n            *(*0x20 + -0x50) = 0x41d79a;\n            fcn.00432540();\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x50) = 0x41d7ab;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x41d7c5;\n        fcn.00457040();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n    uVar3 = *(in_RAX + uVar4 * 8);\n    uVar4 = *(in_RAX + 0x40 + uVar4 * 8);\n    *(*0x20 + -0x50) = 0x41d59e;\n    uVar4 = fcn.0041d1a0(uVar3 | uVar4, arg1);\n    uVar3 = ~uVar4;\n    iVar2 = 0x3f;\n    if (uVar3 != 0) {\n        for (; uVar3 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n        }\n    }\n    if (uVar3 == 0) {\n        iVar2 = -1;\n    }\n    iVar1 = *(*0x20 + -0x28);\n    uVar3 = iVar2 + iVar1 * 0x40 + 1;\n    iVar7 = iVar2 + iVar1 * 0x40 + 1;\n    uVar4 = uVar4 << (-(iVar2 + '\\x01') & 0x3fU) & -(-(iVar2 + -0x3f) < 0x40);\n    if (uVar4 == 0) {\n        *(*0x20 + -0x20) = uVar3;\n        *(*0x20 + -0x18) = iVar7;\n        uVar4 = iVar2 + 1;\n        while (-1 < iVar1 + -1) {\n            *(*0x20 + -0x30) = iVar1 + -1;\n            *(*0x20 + -0x38) = uVar4;\n            *(*0x20 + -0x50) = 0x41d66f;\n            uVar3 = fcn.0041d1a0();\n            iVar2 = 0x3f;\n            if (uVar3 != 0) {\n                for (; uVar3 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n                }\n            }\n            if (uVar3 == 0) {\n                iVar2 = -1;\n            }\n            uVar4 = (*(*0x20 + -0x38) - (iVar2 + 1)) + 0x40;\n            if (uVar3 != 0) {\n                iVar7 = *(*0x20 + -0x18);\n                uVar3 = *(*0x20 + -0x20);\n                break;\n            }\n            iVar7 = *(*0x20 + -0x18);\n            uVar3 = *(*0x20 + -0x20);\n            iVar1 = *(*0x20 + -0x30);\n        }\n    }\n    else {\n        iVar2 = 0x3f;\n        if (uVar4 != 0) {\n            for (; uVar4 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n            }\n        }\n        if (uVar4 == 0) {\n            iVar2 = -1;\n        }\n        uVar4 = -(iVar2 + -0x3f);\n    }\n    uVar8 = uVar4;\n    if (*(*0x20 + -0x10) < uVar4) {\n        uVar8 = *(*0x20 + -0x10);\n    }\n    uVar8 = iVar7 - uVar8;\n    if ((((0x2000 < *0x557df0) && (*0x557df8 < *0x557df0)) &&\n        (uVar6 = -(*0x557df0 >> 0xd),  ((uVar8 + (*0x557df0 >> 0xd)) - 1 & uVar6) <= uVar3)) &&\n       (uVar6 = uVar6 & uVar8,  iVar7 - uVar4 <= uVar6)) {\n        uVar8 = uVar6;\n    }\n    return uVar8;\n}\n",
        "token_count": 2106
    },
    "004214a0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t fcn.004214a0(uchar param_1)\n\n{\n    char unaff_DIL;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    int64_t iStack56;\n    ulong uStack48;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    iStack56 = 0;\n    uStack48 = 0x4215e0;\n    auStack24 = CONCAT151(SUB1615(CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da))) >> 8\n                                  , 0), param_1);\n    auStack24 = CONCAT88(&iStack56, auStack24._0_8_);\n    fcn.00456f00();\n    if (iStack56 != 0) {\n        if ((unaff_DIL != '\\0') && (*(iStack56 + 100) != '\\0')) {\n            fcn.00459d80(*(iStack56 + 0x18));\n        }\n        *(iStack56 + 100) = 0;\n        return iStack56;\n    }\n    return 0;\n}\n",
        "token_count": 339
    },
    "00423a40": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00423a40(int64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            uVar3 = arg1 + unaff_RBX + 0x3fffff & 0xffffffffffc00000;\n            *(*0x20 + -0x40) = uVar3;\n            *(*0x20 + -0x48) = unaff_RBX & 0xffffffffffc00000;\n            *(*0x20 + -0x70) = 0x423a94;\n            fcn.00425ce0(uVar3);\n            iVar2 = *(*0x20 + 8);\n            iVar1 = *(*0x20 + -0x48);\n            uVar3 = iVar1 + 0x800000000000U >> 0x16;\n            if ((*(iVar2 + 0x10080) == 0) || (uVar3 < *(iVar2 + 0x10080))) {\n                *(iVar2 + 0x10080) = uVar3;\n            }\n            *(*0x20 + -0x18) = iVar1 + 0x800000000000U;\n            *(*0x20 + -0x20) = uVar3;\n            iVar1 = *(*0x20 + -0x40);\n            uVar3 = iVar1 + 0x800000000000U >> 0x16;\n            *(*0x20 + -0x28) = uVar3;\n            if (*(iVar2 + 0x10088) < uVar3) {\n                *(iVar2 + 0x10088) = uVar3;\n            }\n            *(*0x20 + -0x70) = 0x423b05;\n            fcn.00428520();\n            *(*0x20 + -0x70) = 0x423b25;\n            fcn.00428a00(iVar1);\n            iVar2 = *(*0x20 + 8);\n            if (*(*0x20 + -0x18) < *(iVar2 + 0x10078) + 0x800000000000U) {\n                unaff_RBX = *(*0x20 + -0x48);\n                *(iVar2 + 0x10078) = unaff_RBX;\n            }\n            else {\n                unaff_RBX = *(*0x20 + -0x48);\n            }\n            uVar5 = *(*0x20 + -0x28);\n            uVar3 = *(*0x20 + -0x20);\ncode_r0x00423bab:\n            if (uVar5 <= uVar3) {\n                *(*0x20 + -0x70) = 0x423c3e;\n                fcn.00423ca0(*(*0x20 + 0x18) >> 0xd);\n                return;\n            }\n            uVar5 = uVar3 >> 0xd;\n            if (0x1fff < uVar5) goto code_r0x00423c59;\n            *(*0x20 + -0x30) = uVar3;\n            if (*(iVar2 + 0x78 + uVar5 * 8) != 0) {\ncode_r0x00423b67:\n                *(*0x20 + -0x70) = 0x423b90;\n                fcn.00426900(0x200);\n                uVar3 = *(*0x20 + -0x30) + 1;\n                uVar5 = *(*0x20 + -0x28);\n                iVar2 = *(*0x20 + 8);\n                unaff_RBX = *(*0x20 + -0x48);\n                goto code_r0x00423bab;\n            }\n            *(*0x20 + -0x38) = uVar5;\n            *(*0x20 + -0x10) = iVar2 + uVar5 * 8 + 0x78;\n            *(*0x20 + -0x70) = 0x423c05;\n            iVar2 = fcn.004131a0();\n            if (iVar2 != 0) {\n                **(*0x20 + -0x10) = iVar2;\n                goto code_r0x00423b67;\n            }\n            unaff_RBX = 0x18;\n            *(*0x20 + -0x70) = 0x423c59;\n            fcn.00430d40();\ncode_r0x00423c59:\n            arg1 = 0x2000;\n            *(*0x20 + -0x70) = 0x423c66;\n            in_RAX = fcn.00459740(0x2000);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x423c7b;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1325
    },
    "00424280": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.00424280(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    uint64_t in_RDX;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            iVar3 = unaff_RBX + arg1 * 0x2000;\n            uVar8 = unaff_RBX + 0x800000000000;\n            uVar9 = uVar8 >> 0x16;\n            uVar5 = unaff_RBX + arg1 * 0x2000 + 0x7fffffffffff;\n            uVar6 = uVar5 >> 0x16;\n            unaff_RBX = (unaff_RBX & 0x3fffff) >> 0xd;\n            *(*0x20 + -0x18) = unaff_RBX;\n            uVar7 = (iVar3 - 1U & 0x3fffff) >> 0xd;\n            if (uVar6 == uVar9) {\n                if (0x1fff < uVar8 >> 0x23) {\n                    *(*0x20 + -0x88) = 0x424485;\n                    uVar5 = fcn.00459740(0x2000);\n                    goto code_r0x00424485;\n                }\n                *(*0x20 + -0x10) = *(in_RAX + 0x78 + (uVar8 >> 0x23) * 8);\n                *(*0x20 + -0x40) = (uVar9 & 0x1fff) << 7;\n                iVar3 = (uVar7 - unaff_RBX) + 1;\n                *(*0x20 + -0x48) = iVar3;\n                *(*0x20 + -0x88) = 0x42440f;\n                uVar2 = fcn.00426b80(iVar3);\n                *(*0x20 + -0x50) = uVar2;\n                *(*0x20 + -0x88) = 0x424433;\n                fcn.004272a0(*(*0x20 + -0x48));\n                iVar3 = *(*0x20 + -0x50);\ncode_r0x00424438:\n                *(*0x20 + -0x60) = iVar3;\n                *(*0x20 + -0x88) = 0x424465;\n                fcn.00423ca0(*(*0x20 + 0x18));\n                return *(*0x20 + -0x60) << 0xd;\n            }\n            if (uVar8 >> 0x23 < 0x2000) {\n                *(*0x20 + -0x20) = uVar9;\n                *(*0x20 + -0x28) = uVar5;\n                *(*0x20 + -0x30) = uVar7;\n                *(*0x20 + -0x38) = uVar6;\n                *(*0x20 + -0x10) = *(in_RAX + 0x78 + (uVar8 >> 0x23) * 8);\n                *(*0x20 + -0x40) = (uVar9 & 0x1fff) << 7;\n                *(*0x20 + -0x48) = -(unaff_RBX - 0x200);\n                *(*0x20 + -0x88) = 0x42437c;\n                uVar2 = fcn.00426b80(-(unaff_RBX - 0x200));\n                *(*0x20 + -0x50) = uVar2;\n                unaff_RBX = *(*0x20 + -0x18);\n                *(*0x20 + -0x88) = 0x4243a5;\n                fcn.004272a0(*(*0x20 + -0x48));\n                iVar1 = *(*0x20 + -0x20);\n                uVar6 = *(*0x20 + 8);\n                uVar5 = *(*0x20 + -0x38);\n                iVar3 = *(*0x20 + -0x50);\n                while( true ) {\n                    in_RDX = iVar1 + 1;\n                    *(*0x20 + -0x60) = iVar3;\n                    if (uVar5 <= in_RDX) break;\n                    uVar5 = in_RDX >> 0xd;\n                    if (0x1fff < uVar5) goto code_r0x004245a7;\ncode_r0x00424485:\n                    *(*0x20 + -0x58) = in_RDX;\n                    *(*0x20 + -0x10) = *(uVar6 + 0x78 + uVar5 * 8);\n                    *(*0x20 + -0x40) = (in_RDX & 0x1fff) << 7;\n                    unaff_RBX = 0;\n                    *(*0x20 + -0x88) = 0x4244ba;\n                    uVar2 = fcn.00426b80(0x200);\n                    *(*0x20 + -0x48) = uVar2;\n                    *(*0x20 + -0x88) = 0x4244d4;\n                    fcn.00427320();\n                    iVar1 = *(*0x20 + -0x58);\n                    iVar3 = *(*0x20 + -0x60) + *(*0x20 + -0x48);\n                    uVar6 = *(*0x20 + 8);\n                    uVar5 = *(*0x20 + -0x38);\n                }\n                if (*(*0x20 + -0x28) >> 0x23 < 0x2000) {\n                    *(*0x20 + -0x10) = *(uVar6 + 0x78 + (*(*0x20 + -0x28) >> 0x23) * 8);\n                    *(*0x20 + -0x40) = (uVar5 & 0x1fff) << 7;\n                    *(*0x20 + -0x48) = *(*0x20 + -0x30) + 1;\n                    *(*0x20 + -0x88) = 0x424569;\n                    uVar2 = fcn.00426b80(*(*0x20 + -0x30) + 1);\n                    *(*0x20 + -0x50) = uVar2;\n                    *(*0x20 + -0x88) = 0x42458a;\n                    fcn.004272a0(*(*0x20 + -0x48));\n                    iVar3 = *(*0x20 + -0x60) + *(*0x20 + -0x50);\n                    goto code_r0x00424438;\n                }\n                *(*0x20 + -0x88) = 0x4245a7;\n                fcn.00459740(0x2000);\ncode_r0x004245a7:\n                *(*0x20 + -0x88) = 0x4245b1;\n                fcn.00459740(0x2000);\n            }\n            arg1 = 0x2000;\n            *(*0x20 + -0x88) = 0x4245be;\n            in_RAX = fcn.00459740(0x2000);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x4245d3;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1947
    },
    "00426620": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.00426620(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    ulong uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t arg1;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar5 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar3 = *(in_RAX + 0x10078);\n            uVar2 = uVar3 + 0x800000000000;\n            uVar6 = uVar2 >> 0x16;\n            if (*(in_RAX + 0x10088) < uVar6 || *(in_RAX + 0x10088) == uVar6) {\n                return 0;\n            }\n            arg1 = *(in_RAX + 0x68);\n            iVar1 = *(in_RAX + 0x60);\n            if (uVar6 < arg1) {\n                *(*0x20 + 8) = in_RAX;\n                arg1 = *(iVar1 + uVar6 * 8);\n                if (arg1 == 0) {\n                    *(*0x20 + -0x68) = 0x42669a;\n                    uVar2 = fcn.004246e0();\n                    if (uVar2 == 0) {\n                        *(*(*0x20 + 8) + 0x10078) = *0x4f0288;\n                        return 0;\n                    }\n                    uVar3 = uVar2 + 0x800000000000 >> 0x23;\n                    if (uVar3 < 0x2000) {\n                        iVar1 = *(*(*0x20 + 8) + 0x78 + uVar3 * 8);\n                        iVar7 = (uVar2 + 0x800000000000 >> 0x16 & 0x1fff) * 0x80;\n                        arg1 = iVar1 + iVar7;\n                        uVar3 = (uVar2 & 0x3fffff) >> 0x13;\n                        if (uVar3 < 8) {\n                            uVar6 = *(arg1 + uVar3 * 8);\n                            uVar2 = uVar2 & 0xfffffffffff80000;\n                            uVar4 = *(iVar1 + iVar7 + 0x40 + uVar3 * 8);\ncode_r0x00426813:\n                            *(*0x20 + -0x40) = uVar4;\n                            *(*0x20 + -0x38) = ~uVar6;\n                            *(*0x20 + -0x30) = uVar2;\n                            *(*0x20 + -0x68) = 0x426832;\n                            fcn.00424280(0x40);\n                            *(*0x20 + -0x68) = 0x42684d;\n                            fcn.00423ca0(0x40);\n                            iVar1 = *(*0x20 + -0x30);\n                            *(*(*0x20 + 8) + 0x10078) = iVar1 + 0x7e000;\n                            return iVar1;\n                        }\n                        goto code_r0x004268b2;\n                    }\n                }\n                else {\n                    uVar2 = uVar2 >> 0x23;\n                    if (uVar2 < 0x2000) {\n                        *(*0x20 + -0x20) = uVar6;\n                        iVar1 = *(in_RAX + 0x78 + uVar2 * 8);\n                        *(*0x20 + -0x10) = iVar1;\n                        iVar7 = (uVar6 & 0x1fff) * 0x80;\n                        *(*0x20 + -0x28) = iVar7;\n                        arg1 = iVar1 + iVar7;\n                        *(*0x20 + -0x18) = arg1;\n                        *(*0x20 + -0x68) = 0x4267a5;\n                        uVar2 = fcn.00426fa0((uVar3 & 0x3fffff) >> 0xd);\n                        if (uVar2 != 0xffffffffffffffff) {\n                            uVar3 = uVar2 >> 6;\n                            if (uVar3 < 8) {\n                                uVar2 = (*(*0x20 + -0x20) * 0x400000 + (uVar2 & 0xffffffffffffffc0) * 0x2000) -\n                                        0x800000000000;\n                                uVar6 = *(*(*0x20 + -0x18) + uVar3 * 8);\n                                uVar4 = *(*(*0x20 + -0x10) + *(*0x20 + -0x28) + 0x40 + uVar3 * 8);\n                                goto code_r0x00426813;\n                            }\n                            *(*0x20 + -0x68) = 0x426894;\n                            fcn.00459740(8);\n                        }\n                        *(*0x20 + -0x68) = 0x4268a5;\n                        fcn.00430d40();\n                    }\n                    *(*0x20 + -0x68) = 0x4268b2;\n                    fcn.00459740(0x2000);\ncode_r0x004268b2:\n                    *(*0x20 + -0x68) = 0x4268bc;\n                    fcn.00459740(8);\n                }\n                *(*0x20 + -0x68) = 0x4268c9;\n                fcn.00459740(0x2000);\n            }\n            *(*0x20 + -0x68) = 0x4268d4;\n            in_RAX = fcn.00459740(arg1);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x4268df;\n        fcn.0045b6e0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1446
    },
    "00427160": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.00427160(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    \n    arg1 = arg1 >> 6;\n    uVar3 = 0;\n    iVar4 = -1;\n    iVar5 = -1;\n    do {\n        if (7 < arg1) {\n            if (unaff_RBX <= uVar3) {\n                return iVar5;\n            }\n            return -1;\n        }\n        uVar1 = *(in_RAX + arg1 * 8);\n        if (uVar1 == 0xffffffffffffffff) {\n            uVar3 = 0;\n        }\n        else {\n            if (iVar4 == -1) {\n                uVar6 = ~uVar1;\n                iVar4 = 0;\n                if (uVar6 != 0) {\n                    for (; (uVar6 >> iVar4 & 1) == 0; iVar4 = iVar4 + 1) {\n                    }\n                }\n                if (uVar6 == 0) {\n                    iVar4 = 0x40;\n                }\n                iVar4 = arg1 * 0x40 + iVar4;\n            }\n            if (uVar3 == 0) {\n                iVar2 = 0x3f;\n                if (uVar1 != 0) {\n                    for (; uVar1 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n                    }\n                }\n                if (uVar1 == 0) {\n                    iVar2 = -1;\n                }\n                iVar5 = arg1 * 0x40 + iVar2 + 1;\n                uVar3 = -(iVar2 + -0x3f);\n            }\n            else {\n                uVar6 = 0;\n                if (uVar1 != 0) {\n                    for (; (uVar1 >> uVar6 & 1) == 0; uVar6 = uVar6 + 1) {\n                    }\n                }\n                if (uVar1 == 0) {\n                    uVar6 = 0x40;\n                }\n                if (unaff_RBX <= uVar6 + uVar3) {\n                    return iVar5;\n                }\n                if (uVar6 < 0x40) {\n                    iVar2 = 0x3f;\n                    if (uVar1 != 0) {\n                        for (; uVar1 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n                        }\n                    }\n                    if (uVar1 == 0) {\n                        iVar2 = -1;\n                    }\n                    iVar5 = arg1 * 0x40 + iVar2 + 1;\n                    uVar3 = -(iVar2 + -0x3f);\n                }\n                else {\n                    uVar3 = uVar3 + 0x40;\n                }\n            }\n        }\n        arg1 = arg1 + 1;\n    } while( true );\n}\n",
        "token_count": 676
    },
    "00427320": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00427320(void)\n\n{\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00426a20();\n    fcn.00426b60(in_RAX);\n    return;\n}\n",
        "token_count": 98
    },
    "0042b2e0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0042b2e0(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    ulong uStack24;\n    ulong uStack16;\n    \n    while (&uStack24 < *(unaff_R14 + 0x10) || &uStack24 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    iVar1 = fcn.0042a9c0(0xd);\n    if (iVar1 != 0) {\n        iVar1 = fcn.0042a900(0x27);\n        if (iVar1 != 0) {\n            uStack24 = 0x477c80;\n            uStack16 = 0x48a588;\n            fcn.00454f40(1);\n            fcn.0042d660();\n            return;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "0042c720": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0042c720(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 == 0) {\n                return;\n            }\n            *(*0x20 + -0xc) = 0;\n            if (arg1 != 0) {\n                *(*0x20 + -0x48) = _sym.imp.kernel32.dll_WriteConsoleW;\n                *(*0x20 + -0x40) = in_RAX;\n                *(*0x20 + -0x38) = unaff_RBX;\n                *(*0x20 + -0x30) = arg1 & 0xffffffff;\n                *(*0x20 + -0x28) = *0x20 + -0xc;\n                *(*0x20 + -0x20) = 0;\n                *(*0x20 + -0x50) = 0x42c785;\n                fcn.0042d760();\n                return;\n            }\n            *(*0x20 + -0x50) = 0x42c7b4;\n            in_RAX = fcn.00459720(0);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + 0x20) = unaff_RDI;\n        *(puVar1 + -8) = 0x42c7ce;\n        fcn.00457040();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        unaff_RDI = *(puVar1 + 0x20);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 555
    },
    "0042da80": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0042da80(void)\n\n{\n    uint in_EAX;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.0042d7e0();\n    *(*(**(in_GS_OFFSET + 0x28) + 0x30) + 0xe0) = in_EAX;\n    return;\n}\n",
        "token_count": 129
    },
    "004310a0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004310a0(void)\n\n{\n    fcn.00456f00();\n    fcn.00456f00();\n    _pe_dos_header = 0;\n    return;\n}\n",
        "token_count": 44
    },
    "00432dc0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00432dc0(void)\n\n{\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.004325a0(unaff_RBX);\n    return;\n}\n",
        "token_count": 92
    },
    "00445f40": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00445f40(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00445ca0(2);\n    return;\n}\n",
        "token_count": 86
    },
    "00445fe0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00445fe0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t unaff_R14;\n    ulong uStack0000000000000030;\n    \n    uStack0000000000000030 = arg3;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00445ca0(3);\n    return;\n}\n",
        "token_count": 124
    },
    "004460c0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004460c0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t unaff_R14;\n    ulong uStack0000000000000030;\n    \n    uStack0000000000000030 = arg3;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00445ca0(4);\n    return;\n}\n",
        "token_count": 124
    },
    "004464a0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004464a0(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    bool bVar8;\n    bool bVar9;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = arg1;\n            uVar4 = 0;\n            uVar7 = arg1;\n            arg1 = 0;\n            while (uVar4 < uVar7) {\n                if (*(unaff_RBX + uVar4) < 0x80) {\n                    uVar3 = uVar7;\n                    uVar4 = uVar4 + 1;\n                }\n                else {\n                    *(*0x20 + -0x30) = arg1;\n                    *(*0x20 + -0x50) = 0x446505;\n                    fcn.00452e40(uVar4);\n                    in_RAX = *(*0x20 + 8);\n                    uVar3 = *(*0x20 + -0x18);\n                    arg1 = *(*0x20 + -0x30);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    uVar4 = uVar7;\n                }\n                arg1 = arg1 + 1;\n                uVar7 = uVar3;\n            }\n            if (in_RAX == 0) {\ncode_r0x00446562:\n                *(*0x20 + -0x50) = 0x44656a;\n                iVar2 = fcn.004469c0();\n                uVar4 = *(*0x20 + -0x18);\n                uVar3 = *(*0x20 + 0x10);\n                arg1 = unaff_RBX;\ncode_r0x0044657a:\n                unaff_RBX = uVar3;\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x20) = uVar7;\n                *(*0x20 + -0x28) = arg1;\n                uVar3 = 0;\n                uVar7 = 0;\n                while( true ) {\n                    if (uVar4 <= uVar3) {\n                        return;\n                    }\n                    uVar1 = *(unaff_RBX + uVar3);\n                    if (uVar1 < 0x80) {\n                        uVar5 = uVar4;\n                        uVar3 = uVar3 + 1;\n                    }\n                    else {\n                        *(*0x20 + -0x30) = uVar7;\n                        *(*0x20 + -0x50) = 0x4465c5;\n                        uVar1 = fcn.00452e40(uVar3);\n                        uVar5 = *(*0x20 + -0x18);\n                        arg1 = *(*0x20 + -0x28);\n                        uVar7 = *(*0x20 + -0x30);\n                        iVar2 = *(*0x20 + -0x10);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        uVar3 = uVar4;\n                    }\n                    if (arg1 <= uVar7) break;\n                    *(iVar2 + uVar7 * 4) = uVar1;\n                    uVar7 = uVar7 + 1;\n                    uVar4 = uVar5;\n                }\n                *(*0x20 + -0x50) = 0x44660c;\n                fcn.00459720(arg1);\n            }\n            else {\n                bVar8 = arg1 < 0x20;\n                bVar9 = arg1 == 0x20;\n                if (0x20 < arg1) goto code_r0x00446562;\n                *(*0x20 + -0x58) = unaff_RBP;\n                *(*0x20 + -0x50) = 0x44654f;\n                iVar2 = fcn.004599a2();\n                unaff_RBP = *(*0x20 + -0x58);\n                if (bVar8 || bVar9) {\n                    uVar4 = uVar7;\n                    uVar7 = 0x20;\n                    uVar3 = unaff_RBX;\n                    goto code_r0x0044657a;\n                }\n            }\n            *(*0x20 + -0x50) = 0x446619;\n            in_RAX = fcn.00459760(arg1, 0x20);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + -8) = 0x44662e;\n        fcn.00457040();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1276
    },
    "00446920": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00446920(void)\n\n{\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    uVar1 = fcn.0040a9e0(0);\n    return uVar1;\n}\n",
        "token_count": 97
    },
    "0044c0a0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.0044c0a0(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    ulong in_RAX;\n    ulong uVar4;\n    uint64_t uVar5;\n    ulong *puVar6;\n    ulong unaff_RBX;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 == 0) {\n                return 0;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x50) = 0x44c0eb;\n            uVar4 = fcn.00459160(arg1 << 3);\n            *(*0x20 + -0x18) = uVar4;\n            *(*0x20 + -0x50) = 0x44c10c;\n            uVar5 = fcn.0044c280(*(*0x20 + 0x18));\n            if (uVar5 != 0) {\n                return uVar5;\n            }\n            *(*0x20 + -0x50) = 0x44c125;\n            fcn.00409300();\n            unaff_RDI = *(*0x20 + 0x20);\n            *(*0x20 + -0x50) = 0x44c145;\n            iVar3 = fcn.0044c280(*(*0x20 + 0x18));\n            if (iVar3 != 0) {\n                *(*0x20 + -0x1c) = iVar3;\n                *(*0x20 + -0x50) = 0x44c1a6;\n                fcn.00409520();\n                return *(*0x20 + -0x1c);\n            }\n            *(*(*0x20 + 8) + 8) = *(*(*0x20 + 8) + 8) + 1;\n            unaff_RBX = *(*0x20 + 0x18);\n            *(*0x20 + -0x50) = 0x44c15b;\n            puVar6 = fcn.0044c320();\n            uVar5 = *(*0x20 + -0x18);\n            puVar6[1] = uVar5;\n            iVar1 = *(*0x20 + 8);\n            *(puVar6 + 2) = *(iVar1 + 8);\n            arg1 = *(*0x20 + 0x18);\n            puVar6[3] = arg1;\n            if (arg1 < 0x81) {\n                iVar2 = *(*0x20 + 0x10);\n                for (iVar7 = 0; iVar7 < arg1; iVar7 = iVar7 + 1) {\n                    puVar6[iVar7 + 4] = *(iVar2 + iVar7 * 8);\n                }\n                *(*0x20 + -0x10) = puVar6;\n                uVar5 = uVar5 & 0x1fff;\n                *puVar6 = *(iVar1 + 0x20 + uVar5 * 8);\n                *(*0x20 + -0x50) = 0x44c205;\n                fcn.004029c0(iVar1 + uVar5 * 8 + 0x20);\n                *(*0x20 + -0x50) = 0x44c211;\n                fcn.00409520();\n                return *(*(*0x20 + -0x10) + 0x10);\n            }\n            *(*0x20 + -0x50) = 0x44c230;\n            in_RAX = fcn.00459760(arg1, 0x80);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        *(puVar8 + -8) = 0x44c24a;\n        fcn.00457040();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = *(puVar8 + 0x20);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1158
    },
    "0044caa0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0044caa0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    ulong uStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    *(in_RAX + 0xd8) = *(in_RAX + 0xd8) + 1;\n    if (*(in_RAX + 0xe0) == iVar1) {\n        uStack32 = *(in_RAX + 0x98);\n        fcn.0044b680(&uStack32);\n    }\n    else {\n        *(in_RAX + 0xe0) = iVar1;\n        auStack24 = CONCAT88(*(in_RAX + 0xd8), *(in_RAX + 0x98));\n        fcn.0044b680(auStack24);\n    }\n    return;\n}\n",
        "token_count": 256
    },
    "0044cbc0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0044cbc0(void)\n\n{\n    int64_t iVar1;\n    uint64_t in_RAX;\n    int64_t unaff_R14;\n    ulong uStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if ((in_RAX != 0) && (in_RAX < *0x509e80)) {\n        in_RAX = 0;\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n    *(iVar1 + 0xd8) = *(iVar1 + 0xd8) + 1;\n    *(iVar1 + 0xe0) = *(*(iVar1 + 0x30) + 0xa0);\n    uStack32 = *(iVar1 + 0x98);\n    auStack24 = CONCAT88(in_RAX >> 6, *(iVar1 + 0xd8));\n    fcn.0044b680(&uStack32);\n    return;\n}\n",
        "token_count": 258
    },
    "0044ee20": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.0044ee20(int64_t *arg1)\n\n{\n    uint32_t uVar1;\n    ulong uVar2;\n    char cVar3;\n    ulong in_RAX;\n    ulong uVar4;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t *unaff_RSI;\n    char unaff_DIL;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            uVar1 = *(unaff_RBX + 0xc);\n            arg2 = uVar1;\n            uVar6 = uVar1;\n            if (unaff_DIL == '\\0') {\n                return uVar6;\n            }\n            if (uVar1 != 0x80000000) {\n                return uVar6;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + -0x28) = uVar6;\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + -0x50) = 0x44ee85;\n            fcn.00447f80();\n            if (arg1 == 0x14) {\n                *(*0x20 + -0x50) = 0x44eeba;\n                cVar3 = fcn.004021a0(0x14, arg2);\n            }\n            else {\n                if (arg1 != 0x17) goto code_r0x0044ef0e;\n                *(*0x20 + -0x50) = 0x44eea5;\n                cVar3 = fcn.004021a0(0x17, arg2);\n            }\n            if (cVar3 == '\\0') {\ncode_r0x0044ef0e:\n                return *(*0x20 + -0x28);\n            }\n            arg1 = *(*0x20 + 0x28);\n            if (arg1 == NULL) {\n                arg1 = **(*(*0x20 + 8) + 0x28);\n                cVar3 = *(*(*(*0x20 + 8) + 0x28) + 4);\n            }\n            else {\n                cVar3 = '\\0';\n            }\n            unaff_RSI = *(*0x20 + -0x18);\n            if (*unaff_RSI == *arg1) {\n                if (cVar3 == '\\0') {\n                    return arg1[2] & 0xfffffffffffffff8;\n                }\n                return *arg1[1] << 3;\n            }\n            uVar2 = *(*0x20 + -0x10);\n            *(*0x20 + -0x50) = 0x44ef39;\n            uVar4 = fcn.00447f80();\n            *(*0x20 + -0x20) = uVar4;\n            *(*0x20 + -0x30) = uVar2;\n            *(*0x20 + -0x50) = 0x44ef48;\n            fcn.004324c0();\n            *(*0x20 + -0x50) = 0x44ef59;\n            fcn.00432dc0();\n            *(*0x20 + -0x50) = 0x44ef68;\n            fcn.00432dc0();\n            *(*0x20 + -0x50) = 0x44ef6d;\n            fcn.00432720();\n            *(*0x20 + -0x50) = 0x44ef72;\n            fcn.00432540();\n            unaff_RBX = 0x10;\n            *(*0x20 + -0x50) = 0x44ef85;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        puVar5[0x20] = unaff_DIL;\n        *(puVar5 + 0x28) = unaff_RSI;\n        *(puVar5 + -8) = 0x44efa5;\n        fcn.00457040();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_DIL = puVar5[0x20];\n        unaff_RSI = *(puVar5 + 0x28);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1187
    },
    "004555c0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004555c0(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    uchar auStackX8 [8];\n    int64_t iStackX16;\n    ulong uStackX24;\n    \n    iStackX16 = 0;\n    uStackX24 = 0;\n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30) + 0x244;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    *(*(iVar2 + 0x30) + 0x138) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar2 + 0x2e0) = _sym.imp.kernel32.dll_LoadLibraryW;\n    *(iVar2 + 0x2e8) = 1;\n    *(iVar2 + 0x2f0) = auStackX8;\n    fcn.00402a00();\n    iStackX16 = *(iVar2 + 0x2f8);\n    if (iStackX16 == 0) {\n        uStackX24 = *(iVar2 + 0x308);\n    }\n    fcn.0043c080();\n    return;\n}\n",
        "token_count": 328
    },
    "00459860": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00459860(void)\n\n{\n    uint *unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *unaff_RDI = in_XMM15_Da;\n    unaff_RDI[1] = in_XMM15_Db;\n    unaff_RDI[2] = in_XMM15_Dc;\n    unaff_RDI[3] = in_XMM15_Dd;\n    unaff_RDI[4] = in_XMM15_Da;\n    unaff_RDI[5] = in_XMM15_Db;\n    unaff_RDI[6] = in_XMM15_Dc;\n    unaff_RDI[7] = in_XMM15_Dd;\n    unaff_RDI[8] = in_XMM15_Da;\n    unaff_RDI[9] = in_XMM15_Db;\n    unaff_RDI[10] = in_XMM15_Dc;\n    unaff_RDI[0xb] = in_XMM15_Dd;\n    unaff_RDI[0xc] = in_XMM15_Da;\n    unaff_RDI[0xd] = in_XMM15_Db;\n    unaff_RDI[0xe] = in_XMM15_Dc;\n    unaff_RDI[0xf] = in_XMM15_Dd;\n    unaff_RDI[0x10] = in_XMM15_Da;\n    unaff_RDI[0x11] = in_XMM15_Db;\n    unaff_RDI[0x12] = in_XMM15_Dc;\n    unaff_RDI[0x13] = in_XMM15_Dd;\n    unaff_RDI[0x14] = in_XMM15_Da;\n    unaff_RDI[0x15] = in_XMM15_Db;\n    unaff_RDI[0x16] = in_XMM15_Dc;\n    unaff_RDI[0x17] = in_XMM15_Dd;\n    unaff_RDI[0x18] = in_XMM15_Da;\n    unaff_RDI[0x19] = in_XMM15_Db;\n    unaff_RDI[0x1a] = in_XMM15_Dc;\n    unaff_RDI[0x1b] = in_XMM15_Dd;\n    unaff_RDI[0x1c] = in_XMM15_Da;\n    unaff_RDI[0x1d] = in_XMM15_Db;\n    unaff_RDI[0x1e] = in_XMM15_Dc;\n    unaff_RDI[0x1f] = in_XMM15_Dd;\n    unaff_RDI[0x20] = in_XMM15_Da;\n    unaff_RDI[0x21] = in_XMM15_Db;\n    unaff_RDI[0x22] = in_XMM15_Dc;\n    unaff_RDI[0x23] = in_XMM15_Dd;\n    unaff_RDI[0x24] = in_XMM15_Da;\n    unaff_RDI[0x25] = in_XMM15_Db;\n    unaff_RDI[0x26] = in_XMM15_Dc;\n    unaff_RDI[0x27] = in_XMM15_Dd;\n    unaff_RDI[0x28] = in_XMM15_Da;\n    unaff_RDI[0x29] = in_XMM15_Db;\n    unaff_RDI[0x2a] = in_XMM15_Dc;\n    unaff_RDI[0x2b] = in_XMM15_Dd;\n    unaff_RDI[0x2c] = in_XMM15_Da;\n    unaff_RDI[0x2d] = in_XMM15_Db;\n    unaff_RDI[0x2e] = in_XMM15_Dc;\n    unaff_RDI[0x2f] = in_XMM15_Dd;\n    unaff_RDI[0x30] = in_XMM15_Da;\n    unaff_RDI[0x31] = in_XMM15_Db;\n    unaff_RDI[0x32] = in_XMM15_Dc;\n    unaff_RDI[0x33] = in_XMM15_Dd;\n    unaff_RDI[0x34] = in_XMM15_Da;\n    unaff_RDI[0x35] = in_XMM15_Db;\n    unaff_RDI[0x36] = in_XMM15_Dc;\n    unaff_RDI[0x37] = in_XMM15_Dd;\n    unaff_RDI[0x38] = in_XMM15_Da;\n    unaff_RDI[0x39] = in_XMM15_Db;\n    unaff_RDI[0x3a] = in_XMM15_Dc;\n    unaff_RDI[0x3b] = in_XMM15_Dd;\n    unaff_RDI[0x3c] = in_XMM15_Da;\n    unaff_RDI[0x3d] = in_XMM15_Db;\n    unaff_RDI[0x3e] = in_XMM15_Dc;\n    unaff_RDI[0x3f] = in_XMM15_Dd;\n    unaff_RDI[0x40] = in_XMM15_Da;\n    unaff_RDI[0x41] = in_XMM15_Db;\n    unaff_RDI[0x42] = in_XMM15_Dc;\n    unaff_RDI[0x43] = in_XMM15_Dd;\n    unaff_RDI[0x44] = in_XMM15_Da;\n    unaff_RDI[0x45] = in_XMM15_Db;\n    unaff_RDI[0x46] = in_XMM15_Dc;\n    unaff_RDI[0x47] = in_XMM15_Dd;\n    unaff_RDI[0x48] = in_XMM15_Da;\n    unaff_RDI[0x49] = in_XMM15_Db;\n    unaff_RDI[0x4a] = in_XMM15_Dc;\n    unaff_RDI[0x4b] = in_XMM15_Dd;\n    unaff_RDI[0x4c] = in_XMM15_Da;\n    unaff_RDI[0x4d] = in_XMM15_Db;\n    unaff_RDI[0x4e] = in_XMM15_Dc;\n    unaff_RDI[0x4f] = in_XMM15_Dd;\n    unaff_RDI[0x50] = in_XMM15_Da;\n    unaff_RDI[0x51] = in_XMM15_Db;\n    unaff_RDI[0x52] = in_XMM15_Dc;\n    unaff_RDI[0x53] = in_XMM15_Dd;\n    unaff_RDI[0x54] = in_XMM15_Da;\n    unaff_RDI[0x55] = in_XMM15_Db;\n    unaff_RDI[0x56] = in_XMM15_Dc;\n    unaff_RDI[0x57] = in_XMM15_Dd;\n    unaff_RDI[0x58] = in_XMM15_Da;\n    unaff_RDI[0x59] = in_XMM15_Db;\n    unaff_RDI[0x5a] = in_XMM15_Dc;\n    unaff_RDI[0x5b] = in_XMM15_Dd;\n    unaff_RDI[0x5c] = in_XMM15_Da;\n    unaff_RDI[0x5d] = in_XMM15_Db;\n    unaff_RDI[0x5e] = in_XMM15_Dc;\n    unaff_RDI[0x5f] = in_XMM15_Dd;\n    unaff_RDI[0x60] = in_XMM15_Da;\n    unaff_RDI[0x61] = in_XMM15_Db;\n    unaff_RDI[0x62] = in_XMM15_Dc;\n    unaff_RDI[99] = in_XMM15_Dd;\n    unaff_RDI[100] = in_XMM15_Da;\n    unaff_RDI[0x65] = in_XMM15_Db;\n    unaff_RDI[0x66] = in_XMM15_Dc;\n    unaff_RDI[0x67] = in_XMM15_Dd;\n    unaff_RDI[0x68] = in_XMM15_Da;\n    unaff_RDI[0x69] = in_XMM15_Db;\n    unaff_RDI[0x6a] = in_XMM15_Dc;\n    unaff_RDI[0x6b] = in_XMM15_Dd;\n    unaff_RDI[0x6c] = in_XMM15_Da;\n    unaff_RDI[0x6d] = in_XMM15_Db;\n    unaff_RDI[0x6e] = in_XMM15_Dc;\n    unaff_RDI[0x6f] = in_XMM15_Dd;\n    unaff_RDI[0x70] = in_XMM15_Da;\n    unaff_RDI[0x71] = in_XMM15_Db;\n    unaff_RDI[0x72] = in_XMM15_Dc;\n    unaff_RDI[0x73] = in_XMM15_Dd;\n    unaff_RDI[0x74] = in_XMM15_Da;\n    unaff_RDI[0x75] = in_XMM15_Db;\n    unaff_RDI[0x76] = in_XMM15_Dc;\n    unaff_RDI[0x77] = in_XMM15_Dd;\n    unaff_RDI[0x78] = in_XMM15_Da;\n    unaff_RDI[0x79] = in_XMM15_Db;\n    unaff_RDI[0x7a] = in_XMM15_Dc;\n    unaff_RDI[0x7b] = in_XMM15_Dd;\n    unaff_RDI[0x7c] = in_XMM15_Da;\n    unaff_RDI[0x7d] = in_XMM15_Db;\n    unaff_RDI[0x7e] = in_XMM15_Dc;\n    unaff_RDI[0x7f] = in_XMM15_Dd;\n    unaff_RDI[0x80] = in_XMM15_Da;\n    unaff_RDI[0x81] = in_XMM15_Db;\n    unaff_RDI[0x82] = in_XMM15_Dc;\n    unaff_RDI[0x83] = in_XMM15_Dd;\n    unaff_RDI[0x84] = in_XMM15_Da;\n    unaff_RDI[0x85] = in_XMM15_Db;\n    unaff_RDI[0x86] = in_XMM15_Dc;\n    unaff_RDI[0x87] = in_XMM15_Dd;\n    unaff_RDI[0x88] = in_XMM15_Da;\n    unaff_RDI[0x89] = in_XMM15_Db;\n    unaff_RDI[0x8a] = in_XMM15_Dc;\n    unaff_RDI[0x8b] = in_XMM15_Dd;\n    unaff_RDI[0x8c] = in_XMM15_Da;\n    unaff_RDI[0x8d] = in_XMM15_Db;\n    unaff_RDI[0x8e] = in_XMM15_Dc;\n    unaff_RDI[0x8f] = in_XMM15_Dd;\n    unaff_RDI[0x90] = in_XMM15_Da;\n    unaff_RDI[0x91] = in_XMM15_Db;\n    unaff_RDI[0x92] = in_XMM15_Dc;\n    unaff_RDI[0x93] = in_XMM15_Dd;\n    unaff_RDI[0x94] = in_XMM15_Da;\n    unaff_RDI[0x95] = in_XMM15_Db;\n    unaff_RDI[0x96] = in_XMM15_Dc;\n    unaff_RDI[0x97] = in_XMM15_Dd;\n    unaff_RDI[0x98] = in_XMM15_Da;\n    unaff_RDI[0x99] = in_XMM15_Db;\n    unaff_RDI[0x9a] = in_XMM15_Dc;\n    unaff_RDI[0x9b] = in_XMM15_Dd;\n    unaff_RDI[0x9c] = in_XMM15_Da;\n    unaff_RDI[0x9d] = in_XMM15_Db;\n    unaff_RDI[0x9e] = in_XMM15_Dc;\n    unaff_RDI[0x9f] = in_XMM15_Dd;\n    unaff_RDI[0xa0] = in_XMM15_Da;\n    unaff_RDI[0xa1] = in_XMM15_Db;\n    unaff_RDI[0xa2] = in_XMM15_Dc;\n    unaff_RDI[0xa3] = in_XMM15_Dd;\n    unaff_RDI[0xa4] = in_XMM15_Da;\n    unaff_RDI[0xa5] = in_XMM15_Db;\n    unaff_RDI[0xa6] = in_XMM15_Dc;\n    unaff_RDI[0xa7] = in_XMM15_Dd;\n    unaff_RDI[0xa8] = in_XMM15_Da;\n    unaff_RDI[0xa9] = in_XMM15_Db;\n    unaff_RDI[0xaa] = in_XMM15_Dc;\n    unaff_RDI[0xab] = in_XMM15_Dd;\n    unaff_RDI[0xac] = in_XMM15_Da;\n    unaff_RDI[0xad] = in_XMM15_Db;\n    unaff_RDI[0xae] = in_XMM15_Dc;\n    unaff_RDI[0xaf] = in_XMM15_Dd;\n    unaff_RDI[0xb0] = in_XMM15_Da;\n    unaff_RDI[0xb1] = in_XMM15_Db;\n    unaff_RDI[0xb2] = in_XMM15_Dc;\n    unaff_RDI[0xb3] = in_XMM15_Dd;\n    unaff_RDI[0xb4] = in_XMM15_Da;\n    unaff_RDI[0xb5] = in_XMM15_Db;\n    unaff_RDI[0xb6] = in_XMM15_Dc;\n    unaff_RDI[0xb7] = in_XMM15_Dd;\n    unaff_RDI[0xb8] = in_XMM15_Da;\n    unaff_RDI[0xb9] = in_XMM15_Db;\n    unaff_RDI[0xba] = in_XMM15_Dc;\n    unaff_RDI[0xbb] = in_XMM15_Dd;\n    unaff_RDI[0xbc] = in_XMM15_Da;\n    unaff_RDI[0xbd] = in_XMM15_Db;\n    unaff_RDI[0xbe] = in_XMM15_Dc;\n    unaff_RDI[0xbf] = in_XMM15_Dd;\n    unaff_RDI[0xc0] = in_XMM15_Da;\n    unaff_RDI[0xc1] = in_XMM15_Db;\n    unaff_RDI[0xc2] = in_XMM15_Dc;\n    unaff_RDI[0xc3] = in_XMM15_Dd;\n    unaff_RDI[0xc4] = in_XMM15_Da;\n    unaff_RDI[0xc5] = in_XMM15_Db;\n    unaff_RDI[0xc6] = in_XMM15_Dc;\n    unaff_RDI[199] = in_XMM15_Dd;\n    unaff_RDI[200] = in_XMM15_Da;\n    unaff_RDI[0xc9] = in_XMM15_Db;\n    unaff_RDI[0xca] = in_XMM15_Dc;\n    unaff_RDI[0xcb] = in_XMM15_Dd;\n    unaff_RDI[0xcc] = in_XMM15_Da;\n    unaff_RDI[0xcd] = in_XMM15_Db;\n    unaff_RDI[0xce] = in_XMM15_Dc;\n    unaff_RDI[0xcf] = in_XMM15_Dd;\n    unaff_RDI[0xd0] = in_XMM15_Da;\n    unaff_RDI[0xd1] = in_XMM15_Db;\n    unaff_RDI[0xd2] = in_XMM15_Dc;\n    unaff_RDI[0xd3] = in_XMM15_Dd;\n    unaff_RDI[0xd4] = in_XMM15_Da;\n    unaff_RDI[0xd5] = in_XMM15_Db;\n    unaff_RDI[0xd6] = in_XMM15_Dc;\n    unaff_RDI[0xd7] = in_XMM15_Dd;\n    unaff_RDI[0xd8] = in_XMM15_Da;\n    unaff_RDI[0xd9] = in_XMM15_Db;\n    unaff_RDI[0xda] = in_XMM15_Dc;\n    unaff_RDI[0xdb] = in_XMM15_Dd;\n    unaff_RDI[0xdc] = in_XMM15_Da;\n    unaff_RDI[0xdd] = in_XMM15_Db;\n    unaff_RDI[0xde] = in_XMM15_Dc;\n    unaff_RDI[0xdf] = in_XMM15_Dd;\n    unaff_RDI[0xe0] = in_XMM15_Da;\n    unaff_RDI[0xe1] = in_XMM15_Db;\n    unaff_RDI[0xe2] = in_XMM15_Dc;\n    unaff_RDI[0xe3] = in_XMM15_Dd;\n    unaff_RDI[0xe4] = in_XMM15_Da;\n    unaff_RDI[0xe5] = in_XMM15_Db;\n    unaff_RDI[0xe6] = in_XMM15_Dc;\n    unaff_RDI[0xe7] = in_XMM15_Dd;\n    unaff_RDI[0xe8] = in_XMM15_Da;\n    unaff_RDI[0xe9] = in_XMM15_Db;\n    unaff_RDI[0xea] = in_XMM15_Dc;\n    unaff_RDI[0xeb] = in_XMM15_Dd;\n    unaff_RDI[0xec] = in_XMM15_Da;\n    unaff_RDI[0xed] = in_XMM15_Db;\n    unaff_RDI[0xee] = in_XMM15_Dc;\n    unaff_RDI[0xef] = in_XMM15_Dd;\n    unaff_RDI[0xf0] = in_XMM15_Da;\n    unaff_RDI[0xf1] = in_XMM15_Db;\n    unaff_RDI[0xf2] = in_XMM15_Dc;\n    unaff_RDI[0xf3] = in_XMM15_Dd;\n    unaff_RDI[0xf4] = in_XMM15_Da;\n    unaff_RDI[0xf5] = in_XMM15_Db;\n    unaff_RDI[0xf6] = in_XMM15_Dc;\n    unaff_RDI[0xf7] = in_XMM15_Dd;\n    unaff_RDI[0xf8] = in_XMM15_Da;\n    unaff_RDI[0xf9] = in_XMM15_Db;\n    unaff_RDI[0xfa] = in_XMM15_Dc;\n    unaff_RDI[0xfb] = in_XMM15_Dd;\n    unaff_RDI[0xfc] = in_XMM15_Da;\n    unaff_RDI[0xfd] = in_XMM15_Db;\n    unaff_RDI[0xfe] = in_XMM15_Dc;\n    unaff_RDI[0xff] = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 4584
    },
    "004598ae": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004598ae(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x20) = in_XMM15_Da;\n    *(unaff_RDI + 0x24) = in_XMM15_Db;\n    *(unaff_RDI + 0x28) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x140) = in_XMM15_Da;\n    *(unaff_RDI + 0x144) = in_XMM15_Db;\n    *(unaff_RDI + 0x148) = in_XMM15_Dc;\n    *(unaff_RDI + 0x14c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x150) = in_XMM15_Da;\n    *(unaff_RDI + 0x154) = in_XMM15_Db;\n    *(unaff_RDI + 0x158) = in_XMM15_Dc;\n    *(unaff_RDI + 0x15c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x160) = in_XMM15_Da;\n    *(unaff_RDI + 0x164) = in_XMM15_Db;\n    *(unaff_RDI + 0x168) = in_XMM15_Dc;\n    *(unaff_RDI + 0x16c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x170) = in_XMM15_Da;\n    *(unaff_RDI + 0x174) = in_XMM15_Db;\n    *(unaff_RDI + 0x178) = in_XMM15_Dc;\n    *(unaff_RDI + 0x17c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x180) = in_XMM15_Da;\n    *(unaff_RDI + 0x184) = in_XMM15_Db;\n    *(unaff_RDI + 0x188) = in_XMM15_Dc;\n    *(unaff_RDI + 0x18c) = in_XMM15_Dd;\n    *(unaff_RDI + 400) = in_XMM15_Da;\n    *(unaff_RDI + 0x194) = in_XMM15_Db;\n    *(unaff_RDI + 0x198) = in_XMM15_Dc;\n    *(unaff_RDI + 0x19c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1a0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1a4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1a8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ac) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1b0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1b4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1b8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1bc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1c0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1c4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1c8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1cc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1d0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1d4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1d8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1dc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1e0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1e4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1e8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ec) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1f0) = in_XMM15_Da;\n    *(unaff_RDI + 500) = in_XMM15_Db;\n    *(unaff_RDI + 0x1f8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1fc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x200) = in_XMM15_Da;\n    *(unaff_RDI + 0x204) = in_XMM15_Db;\n    *(unaff_RDI + 0x208) = in_XMM15_Dc;\n    *(unaff_RDI + 0x20c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x210) = in_XMM15_Da;\n    *(unaff_RDI + 0x214) = in_XMM15_Db;\n    *(unaff_RDI + 0x218) = in_XMM15_Dc;\n    *(unaff_RDI + 0x21c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x220) = in_XMM15_Da;\n    *(unaff_RDI + 0x224) = in_XMM15_Db;\n    *(unaff_RDI + 0x228) = in_XMM15_Dc;\n    *(unaff_RDI + 0x22c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x230) = in_XMM15_Da;\n    *(unaff_RDI + 0x234) = in_XMM15_Db;\n    *(unaff_RDI + 0x238) = in_XMM15_Dc;\n    *(unaff_RDI + 0x23c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x240) = in_XMM15_Da;\n    *(unaff_RDI + 0x244) = in_XMM15_Db;\n    *(unaff_RDI + 0x248) = in_XMM15_Dc;\n    *(unaff_RDI + 0x24c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x250) = in_XMM15_Da;\n    *(unaff_RDI + 0x254) = in_XMM15_Db;\n    *(unaff_RDI + 600) = in_XMM15_Dc;\n    *(unaff_RDI + 0x25c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x260) = in_XMM15_Da;\n    *(unaff_RDI + 0x264) = in_XMM15_Db;\n    *(unaff_RDI + 0x268) = in_XMM15_Dc;\n    *(unaff_RDI + 0x26c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x270) = in_XMM15_Da;\n    *(unaff_RDI + 0x274) = in_XMM15_Db;\n    *(unaff_RDI + 0x278) = in_XMM15_Dc;\n    *(unaff_RDI + 0x27c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x280) = in_XMM15_Da;\n    *(unaff_RDI + 0x284) = in_XMM15_Db;\n    *(unaff_RDI + 0x288) = in_XMM15_Dc;\n    *(unaff_RDI + 0x28c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x290) = in_XMM15_Da;\n    *(unaff_RDI + 0x294) = in_XMM15_Db;\n    *(unaff_RDI + 0x298) = in_XMM15_Dc;\n    *(unaff_RDI + 0x29c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2a0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2a4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2a8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2ac) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2b0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2b4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2b8) = in_XMM15_Dc;\n    *(unaff_RDI + 700) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2c0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2c4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2c8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2cc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2d0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2d4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2d8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2dc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2e0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2e4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2e8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2ec) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2f0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2f4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2f8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2fc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x300) = in_XMM15_Da;\n    *(unaff_RDI + 0x304) = in_XMM15_Db;\n    *(unaff_RDI + 0x308) = in_XMM15_Dc;\n    *(unaff_RDI + 0x30c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x310) = in_XMM15_Da;\n    *(unaff_RDI + 0x314) = in_XMM15_Db;\n    *(unaff_RDI + 0x318) = in_XMM15_Dc;\n    *(unaff_RDI + 0x31c) = in_XMM15_Dd;\n    *(unaff_RDI + 800) = in_XMM15_Da;\n    *(unaff_RDI + 0x324) = in_XMM15_Db;\n    *(unaff_RDI + 0x328) = in_XMM15_Dc;\n    *(unaff_RDI + 0x32c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x330) = in_XMM15_Da;\n    *(unaff_RDI + 0x334) = in_XMM15_Db;\n    *(unaff_RDI + 0x338) = in_XMM15_Dc;\n    *(unaff_RDI + 0x33c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 4100
    },
    "004598f8": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004598f8(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x140) = in_XMM15_Da;\n    *(unaff_RDI + 0x144) = in_XMM15_Db;\n    *(unaff_RDI + 0x148) = in_XMM15_Dc;\n    *(unaff_RDI + 0x14c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x150) = in_XMM15_Da;\n    *(unaff_RDI + 0x154) = in_XMM15_Db;\n    *(unaff_RDI + 0x158) = in_XMM15_Dc;\n    *(unaff_RDI + 0x15c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x160) = in_XMM15_Da;\n    *(unaff_RDI + 0x164) = in_XMM15_Db;\n    *(unaff_RDI + 0x168) = in_XMM15_Dc;\n    *(unaff_RDI + 0x16c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x170) = in_XMM15_Da;\n    *(unaff_RDI + 0x174) = in_XMM15_Db;\n    *(unaff_RDI + 0x178) = in_XMM15_Dc;\n    *(unaff_RDI + 0x17c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x180) = in_XMM15_Da;\n    *(unaff_RDI + 0x184) = in_XMM15_Db;\n    *(unaff_RDI + 0x188) = in_XMM15_Dc;\n    *(unaff_RDI + 0x18c) = in_XMM15_Dd;\n    *(unaff_RDI + 400) = in_XMM15_Da;\n    *(unaff_RDI + 0x194) = in_XMM15_Db;\n    *(unaff_RDI + 0x198) = in_XMM15_Dc;\n    *(unaff_RDI + 0x19c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1a0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1a4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1a8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ac) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1b0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1b4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1b8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1bc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1c0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1c4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1c8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1cc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1d0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1d4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1d8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1dc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1e0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1e4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1e8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ec) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1f0) = in_XMM15_Da;\n    *(unaff_RDI + 500) = in_XMM15_Db;\n    *(unaff_RDI + 0x1f8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1fc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x200) = in_XMM15_Da;\n    *(unaff_RDI + 0x204) = in_XMM15_Db;\n    *(unaff_RDI + 0x208) = in_XMM15_Dc;\n    *(unaff_RDI + 0x20c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x210) = in_XMM15_Da;\n    *(unaff_RDI + 0x214) = in_XMM15_Db;\n    *(unaff_RDI + 0x218) = in_XMM15_Dc;\n    *(unaff_RDI + 0x21c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x220) = in_XMM15_Da;\n    *(unaff_RDI + 0x224) = in_XMM15_Db;\n    *(unaff_RDI + 0x228) = in_XMM15_Dc;\n    *(unaff_RDI + 0x22c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x230) = in_XMM15_Da;\n    *(unaff_RDI + 0x234) = in_XMM15_Db;\n    *(unaff_RDI + 0x238) = in_XMM15_Dc;\n    *(unaff_RDI + 0x23c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x240) = in_XMM15_Da;\n    *(unaff_RDI + 0x244) = in_XMM15_Db;\n    *(unaff_RDI + 0x248) = in_XMM15_Dc;\n    *(unaff_RDI + 0x24c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x250) = in_XMM15_Da;\n    *(unaff_RDI + 0x254) = in_XMM15_Db;\n    *(unaff_RDI + 600) = in_XMM15_Dc;\n    *(unaff_RDI + 0x25c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x260) = in_XMM15_Da;\n    *(unaff_RDI + 0x264) = in_XMM15_Db;\n    *(unaff_RDI + 0x268) = in_XMM15_Dc;\n    *(unaff_RDI + 0x26c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x270) = in_XMM15_Da;\n    *(unaff_RDI + 0x274) = in_XMM15_Db;\n    *(unaff_RDI + 0x278) = in_XMM15_Dc;\n    *(unaff_RDI + 0x27c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 3030
    },
    "00459918": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00459918(void)\n\n{\n    uint *unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *unaff_RDI = in_XMM15_Da;\n    unaff_RDI[1] = in_XMM15_Db;\n    unaff_RDI[2] = in_XMM15_Dc;\n    unaff_RDI[3] = in_XMM15_Dd;\n    unaff_RDI[4] = in_XMM15_Da;\n    unaff_RDI[5] = in_XMM15_Db;\n    unaff_RDI[6] = in_XMM15_Dc;\n    unaff_RDI[7] = in_XMM15_Dd;\n    unaff_RDI[8] = in_XMM15_Da;\n    unaff_RDI[9] = in_XMM15_Db;\n    unaff_RDI[10] = in_XMM15_Dc;\n    unaff_RDI[0xb] = in_XMM15_Dd;\n    unaff_RDI[0xc] = in_XMM15_Da;\n    unaff_RDI[0xd] = in_XMM15_Db;\n    unaff_RDI[0xe] = in_XMM15_Dc;\n    unaff_RDI[0xf] = in_XMM15_Dd;\n    unaff_RDI[0x10] = in_XMM15_Da;\n    unaff_RDI[0x11] = in_XMM15_Db;\n    unaff_RDI[0x12] = in_XMM15_Dc;\n    unaff_RDI[0x13] = in_XMM15_Dd;\n    unaff_RDI[0x14] = in_XMM15_Da;\n    unaff_RDI[0x15] = in_XMM15_Db;\n    unaff_RDI[0x16] = in_XMM15_Dc;\n    unaff_RDI[0x17] = in_XMM15_Dd;\n    unaff_RDI[0x18] = in_XMM15_Da;\n    unaff_RDI[0x19] = in_XMM15_Db;\n    unaff_RDI[0x1a] = in_XMM15_Dc;\n    unaff_RDI[0x1b] = in_XMM15_Dd;\n    unaff_RDI[0x1c] = in_XMM15_Da;\n    unaff_RDI[0x1d] = in_XMM15_Db;\n    unaff_RDI[0x1e] = in_XMM15_Dc;\n    unaff_RDI[0x1f] = in_XMM15_Dd;\n    unaff_RDI[0x20] = in_XMM15_Da;\n    unaff_RDI[0x21] = in_XMM15_Db;\n    unaff_RDI[0x22] = in_XMM15_Dc;\n    unaff_RDI[0x23] = in_XMM15_Dd;\n    unaff_RDI[0x24] = in_XMM15_Da;\n    unaff_RDI[0x25] = in_XMM15_Db;\n    unaff_RDI[0x26] = in_XMM15_Dc;\n    unaff_RDI[0x27] = in_XMM15_Dd;\n    unaff_RDI[0x28] = in_XMM15_Da;\n    unaff_RDI[0x29] = in_XMM15_Db;\n    unaff_RDI[0x2a] = in_XMM15_Dc;\n    unaff_RDI[0x2b] = in_XMM15_Dd;\n    unaff_RDI[0x2c] = in_XMM15_Da;\n    unaff_RDI[0x2d] = in_XMM15_Db;\n    unaff_RDI[0x2e] = in_XMM15_Dc;\n    unaff_RDI[0x2f] = in_XMM15_Dd;\n    unaff_RDI[0x30] = in_XMM15_Da;\n    unaff_RDI[0x31] = in_XMM15_Db;\n    unaff_RDI[0x32] = in_XMM15_Dc;\n    unaff_RDI[0x33] = in_XMM15_Dd;\n    unaff_RDI[0x34] = in_XMM15_Da;\n    unaff_RDI[0x35] = in_XMM15_Db;\n    unaff_RDI[0x36] = in_XMM15_Dc;\n    unaff_RDI[0x37] = in_XMM15_Dd;\n    unaff_RDI[0x38] = in_XMM15_Da;\n    unaff_RDI[0x39] = in_XMM15_Db;\n    unaff_RDI[0x3a] = in_XMM15_Dc;\n    unaff_RDI[0x3b] = in_XMM15_Dd;\n    unaff_RDI[0x3c] = in_XMM15_Da;\n    unaff_RDI[0x3d] = in_XMM15_Db;\n    unaff_RDI[0x3e] = in_XMM15_Dc;\n    unaff_RDI[0x3f] = in_XMM15_Dd;\n    unaff_RDI[0x40] = in_XMM15_Da;\n    unaff_RDI[0x41] = in_XMM15_Db;\n    unaff_RDI[0x42] = in_XMM15_Dc;\n    unaff_RDI[0x43] = in_XMM15_Dd;\n    unaff_RDI[0x44] = in_XMM15_Da;\n    unaff_RDI[0x45] = in_XMM15_Db;\n    unaff_RDI[0x46] = in_XMM15_Dc;\n    unaff_RDI[0x47] = in_XMM15_Dd;\n    unaff_RDI[0x48] = in_XMM15_Da;\n    unaff_RDI[0x49] = in_XMM15_Db;\n    unaff_RDI[0x4a] = in_XMM15_Dc;\n    unaff_RDI[0x4b] = in_XMM15_Dd;\n    unaff_RDI[0x4c] = in_XMM15_Da;\n    unaff_RDI[0x4d] = in_XMM15_Db;\n    unaff_RDI[0x4e] = in_XMM15_Dc;\n    unaff_RDI[0x4f] = in_XMM15_Dd;\n    unaff_RDI[0x50] = in_XMM15_Da;\n    unaff_RDI[0x51] = in_XMM15_Db;\n    unaff_RDI[0x52] = in_XMM15_Dc;\n    unaff_RDI[0x53] = in_XMM15_Dd;\n    unaff_RDI[0x54] = in_XMM15_Da;\n    unaff_RDI[0x55] = in_XMM15_Db;\n    unaff_RDI[0x56] = in_XMM15_Dc;\n    unaff_RDI[0x57] = in_XMM15_Dd;\n    unaff_RDI[0x58] = in_XMM15_Da;\n    unaff_RDI[0x59] = in_XMM15_Db;\n    unaff_RDI[0x5a] = in_XMM15_Dc;\n    unaff_RDI[0x5b] = in_XMM15_Dd;\n    unaff_RDI[0x5c] = in_XMM15_Da;\n    unaff_RDI[0x5d] = in_XMM15_Db;\n    unaff_RDI[0x5e] = in_XMM15_Dc;\n    unaff_RDI[0x5f] = in_XMM15_Dd;\n    unaff_RDI[0x60] = in_XMM15_Da;\n    unaff_RDI[0x61] = in_XMM15_Db;\n    unaff_RDI[0x62] = in_XMM15_Dc;\n    unaff_RDI[99] = in_XMM15_Dd;\n    unaff_RDI[100] = in_XMM15_Da;\n    unaff_RDI[0x65] = in_XMM15_Db;\n    unaff_RDI[0x66] = in_XMM15_Dc;\n    unaff_RDI[0x67] = in_XMM15_Dd;\n    unaff_RDI[0x68] = in_XMM15_Da;\n    unaff_RDI[0x69] = in_XMM15_Db;\n    unaff_RDI[0x6a] = in_XMM15_Dc;\n    unaff_RDI[0x6b] = in_XMM15_Dd;\n    unaff_RDI[0x6c] = in_XMM15_Da;\n    unaff_RDI[0x6d] = in_XMM15_Db;\n    unaff_RDI[0x6e] = in_XMM15_Dc;\n    unaff_RDI[0x6f] = in_XMM15_Dd;\n    unaff_RDI[0x70] = in_XMM15_Da;\n    unaff_RDI[0x71] = in_XMM15_Db;\n    unaff_RDI[0x72] = in_XMM15_Dc;\n    unaff_RDI[0x73] = in_XMM15_Dd;\n    unaff_RDI[0x74] = in_XMM15_Da;\n    unaff_RDI[0x75] = in_XMM15_Db;\n    unaff_RDI[0x76] = in_XMM15_Dc;\n    unaff_RDI[0x77] = in_XMM15_Dd;\n    unaff_RDI[0x78] = in_XMM15_Da;\n    unaff_RDI[0x79] = in_XMM15_Db;\n    unaff_RDI[0x7a] = in_XMM15_Dc;\n    unaff_RDI[0x7b] = in_XMM15_Dd;\n    unaff_RDI[0x7c] = in_XMM15_Da;\n    unaff_RDI[0x7d] = in_XMM15_Db;\n    unaff_RDI[0x7e] = in_XMM15_Dc;\n    unaff_RDI[0x7f] = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 2340
    },
    "0045993d": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045993d(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x140) = in_XMM15_Da;\n    *(unaff_RDI + 0x144) = in_XMM15_Db;\n    *(unaff_RDI + 0x148) = in_XMM15_Dc;\n    *(unaff_RDI + 0x14c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x150) = in_XMM15_Da;\n    *(unaff_RDI + 0x154) = in_XMM15_Db;\n    *(unaff_RDI + 0x158) = in_XMM15_Dc;\n    *(unaff_RDI + 0x15c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x160) = in_XMM15_Da;\n    *(unaff_RDI + 0x164) = in_XMM15_Db;\n    *(unaff_RDI + 0x168) = in_XMM15_Dc;\n    *(unaff_RDI + 0x16c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x170) = in_XMM15_Da;\n    *(unaff_RDI + 0x174) = in_XMM15_Db;\n    *(unaff_RDI + 0x178) = in_XMM15_Dc;\n    *(unaff_RDI + 0x17c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x180) = in_XMM15_Da;\n    *(unaff_RDI + 0x184) = in_XMM15_Db;\n    *(unaff_RDI + 0x188) = in_XMM15_Dc;\n    *(unaff_RDI + 0x18c) = in_XMM15_Dd;\n    *(unaff_RDI + 400) = in_XMM15_Da;\n    *(unaff_RDI + 0x194) = in_XMM15_Db;\n    *(unaff_RDI + 0x198) = in_XMM15_Dc;\n    *(unaff_RDI + 0x19c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1a0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1a4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1a8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ac) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1b0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1b4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1b8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1bc) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 2052
    },
    "00459954": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00459954(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x140) = in_XMM15_Da;\n    *(unaff_RDI + 0x144) = in_XMM15_Db;\n    *(unaff_RDI + 0x148) = in_XMM15_Dc;\n    *(unaff_RDI + 0x14c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x150) = in_XMM15_Da;\n    *(unaff_RDI + 0x154) = in_XMM15_Db;\n    *(unaff_RDI + 0x158) = in_XMM15_Dc;\n    *(unaff_RDI + 0x15c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x160) = in_XMM15_Da;\n    *(unaff_RDI + 0x164) = in_XMM15_Db;\n    *(unaff_RDI + 0x168) = in_XMM15_Dc;\n    *(unaff_RDI + 0x16c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x170) = in_XMM15_Da;\n    *(unaff_RDI + 0x174) = in_XMM15_Db;\n    *(unaff_RDI + 0x178) = in_XMM15_Dc;\n    *(unaff_RDI + 0x17c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 1721
    },
    "0045996b": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045996b(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 1402
    },
    "00459978": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00459978(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x10) = in_XMM15_Da;\n    *(unaff_RDI + 0x14) = in_XMM15_Db;\n    *(unaff_RDI + 0x18) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x20) = in_XMM15_Da;\n    *(unaff_RDI + 0x24) = in_XMM15_Db;\n    *(unaff_RDI + 0x28) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 1244
    },
    "00459999": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00459999(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 774
    },
    "004599b0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004599b0(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 459
    },
    "0045b860": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0045b860(ulong arg1)\n\n{\n    ulong uStack32;\n    \n    fcn.00455880();\n    return uStack32;\n}\n",
        "token_count": 37
    },
    "0045eea0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0045eea0(void)\n\n{\n    char cVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (-1 < in_RAX) {\n                if (in_RAX == 0) {\n                    return 0x480fe7;\n                }\n                *(*0x20 + -0x3c) = 0;\n                *(*0x20 + -0x38) = in_XMM15;\n                uVar2 = 0x13;\n                break;\n            }\n            uVar2 = -in_RAX;\n            if (uVar2 == 0) goto code_r0x0045efc5;\n            *(*0x20 + -0x50) = 0;\n            *(*0x20 + -0x4c) = in_XMM15;\n            uVar4 = 0x13;\n            while (cVar1 = uVar2,  9 < uVar2) {\n                uVar2 = uVar2 / 10;\n                if (0x13 < uVar4) goto code_r0x0045f072;\n                *(*0x20 + (uVar4 - 0x50)) = cVar1 + uVar2 * -10 + '0';\n                uVar4 = uVar4 - 1;\n            }\n            if (uVar4 < 0x14) goto code_r0x0045f02e;\n            *(*0x20 + -0x80) = 0x45f072;\n            fcn.00459720(0x14);\ncode_r0x0045f072:\n            *(*0x20 + -0x80) = 0x45f07f;\n            in_RAX = fcn.00459720(0x14);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x45f08a;\n        fcn.00457040();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\ncode_r0x0045ef40:\n    cVar1 = in_RAX;\n    if (in_RAX < 10) goto code_r0x0045ef6f;\n    in_RAX = in_RAX / 10;\n    if (0x13 < uVar2) goto code_r0x0045efb5;\n    *(*0x20 + (uVar2 - 0x3c)) = cVar1 + in_RAX * -10 + '0';\n    uVar2 = uVar2 - 1;\n    goto code_r0x0045ef40;\ncode_r0x0045f02e:\n    *(*0x20 + (uVar4 - 0x50)) = cVar1 + '0';\n    *(*0x20 + -0x80) = 0x45f059;\n    fcn.00446300(-(uVar4 - 0x14));\n    goto code_r0x0045efc5;\ncode_r0x0045ef6f:\n    if (uVar2 < 0x14) {\n        *(*0x20 + (uVar2 - 0x3c)) = cVar1 + '0';\n        *(*0x20 + -0x80) = 0x45ef9d;\n        uVar3 = fcn.00446300(-(uVar2 - 0x14));\n        return uVar3;\n    }\n    *(*0x20 + -0x80) = 0x45efb5;\n    fcn.00459720(0x14);\ncode_r0x0045efb5:\n    *(*0x20 + -0x80) = 0x45efc5;\n    fcn.00459720(0x14);\ncode_r0x0045efc5:\n    *(*0x20 + -0x80) = 0x45efde;\n    uVar3 = fcn.00445f40(1);\n    return uVar3;\n}\n",
        "token_count": 1029
    },
    "00461d60": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00461e09)\n// WARNING: Removing unreachable block (ram,0x00461e35)\n\nulong fcn.00461d60(void)\n\n{\n    int32_t iVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x218 && *0x20 + -0x218 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x298;\n            *(*0x20 + -8) = unaff_RBP;\n            uVar3 = in_RAX - 0x20000000;\n            if (uVar3 < 0x83) {\n                return *(uVar3 * 0x10 + 0x501b40);\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x260) = 0;\n            *(*0x20 + -0x2a8) = *0x20 + -8;\n            *(*0x20 + -0x2a0) = 0x461dcf;\n            uVar2 = fcn.004598f8();\n            unaff_RBP = *(*0x20 + -0x2a8);\n            *(*0x20 + -0x2a0) = 0x461df8;\n            uVar3 = fcn.00462200(uVar2, uVar3, 300, 300);\n            do {\n                uVar4 = uVar3;\n                iVar1 = uVar4;\n                if (iVar1 == 0) break;\n                uVar3 = iVar1 - 1;\n                if (299 < uVar3) goto code_r0x00461f05;\n            } while ((*(*0x20 + uVar3 * 2 + -0x260) == 10) || (*(*0x20 + uVar3 * 2 + -0x260) == 0xd));\n            uVar4 = uVar4 & 0xffffffff;\n            if (uVar4 < 0x12d) {\n                *(*0x20 + -0x2a0) = 0x461edb;\n                fcn.0045fac0(300);\n                *(*0x20 + -0x2a0) = 0x461eeb;\n                uVar2 = fcn.00446660(uVar4);\n                return uVar2;\n            }\n            *(*0x20 + -0x2a0) = 0x461f05;\n            fcn.004597a0(uVar4, 300);\ncode_r0x00461f05:\n            *(*0x20 + -0x2a0) = 0x461f11;\n            in_RAX = fcn.00459720(300);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x461f1c;\n        fcn.00457040();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 757
    },
    "00461f40": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00461f40(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x20) = in_RAX;\n            *(*0x20 + -0x18) = *0x5036f8;\n            *(*0x20 + -0x50) = 0x461f77;\n            iVar1 = fcn.004619e0();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 0x10);\n                iVar1 = *(*0x20 + -0x20);\n                *(*0x20 + -0x50) = 0x461fb1;\n                iVar2 = fcn.0045b860(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x4fd530;\n                    if ((iVar1 != 0) && (uVar3 = *0x4fd540,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x50) = 0x461fec;\n                        fcn.00408ce0();\n                        uVar3 = 0x49e7c0;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x50) = 0x462017;\n            in_RAX = fcn.004305a0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x462027;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 583
    },
    "00462440": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00462440(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x20) = in_RAX;\n            *(*0x20 + -0x18) = *0x503890;\n            *(*0x20 + -0x50) = 0x462477;\n            iVar1 = fcn.004619e0();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 0x10);\n                iVar1 = *(*0x20 + -0x20);\n                *(*0x20 + -0x50) = 0x4624b1;\n                iVar2 = fcn.0045b860(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x4fd530;\n                    if ((iVar1 != 0) && (uVar3 = *0x4fd540,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x50) = 0x4624ec;\n                        fcn.00408ce0();\n                        uVar3 = 0x49e7c0;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x50) = 0x462517;\n            in_RAX = fcn.004305a0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x462527;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 581
    },
    "00462540": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00462540(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x5038e0;\n            *(*0x20 + -0x50) = 0x462572;\n            iVar1 = fcn.004619e0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x50) = 0x46259c;\n                uVar2 = fcn.0045b860(iVar1);\n                if (((uVar2 == 0) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x20) = uVar2;\n                    *(*0x20 + -0x50) = 0x4625e6;\n                    fcn.00408ce0();\n                    uVar2 = *(*0x20 + -0x20);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x50) = 0x462616;\n            in_RAX = fcn.004305a0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x462625;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 475
    },
    "00462640": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.00462640(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x503938;\n            *(*0x20 + -0x50) = 0x462672;\n            iVar1 = fcn.004619e0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x50) = 0x46269c;\n                iVar2 = fcn.0045b860(iVar1);\n                if (((iVar2 == -1) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x20) = 0xffffffffffffffff;\n                    *(*0x20 + -0x50) = 0x4626e6;\n                    fcn.00408ce0();\n                    iVar2 = *(*0x20 + -0x20);\n                }\n                return iVar2;\n            }\n            *(*0x20 + -0x50) = 0x462716;\n            in_RAX = fcn.004305a0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x462725;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 473
    },
    "00462740": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00462740(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uint unaff_EBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x18) = *0x503940;\n            *(*0x20 + -0x50) = 0x462776;\n            iVar1 = fcn.004619e0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + 8);\n                *(*0x20 + -0x10) = iVar1;\n                *(*0x20 + -0x50) = 0x4627a8;\n                uVar2 = fcn.0045b860(iVar1);\n                if (((uVar2 == 0) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x20) = uVar2;\n                    *(*0x20 + -0x50) = 0x4627e8;\n                    fcn.00408ce0();\n                    uVar2 = *(*0x20 + -0x20);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x50) = 0x462818;\n            in_RAX = fcn.004305a0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + -8) = 0x462827;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 542
    },
    "004216e0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nvoid fcn.004216e0(uint64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    uint64_t unaff_RBX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong unaff_RDI;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    \n    uVar2 = unaff_RBX + 0x800000000000 >> 0x2a;\n    if (0x3f < uVar2) {\ncode_r0x004217b9:\n        fcn.00459740(0x40);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    iVar3 = *(*(in_RAX + 0x10198 + uVar2 * 8) + (unaff_RBX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n    uVar2 = 0;\n    do {\n        if (arg1 <= uVar2) {\n            return;\n        }\n        uVar6 = (unaff_RBX >> 0xd) + uVar2 & 0x1ff;\n        if (uVar6 == 0) {\n            uVar4 = uVar2 * 0x2000 + unaff_RBX + 0x800000000000;\n            uVar5 = uVar4 >> 0x2a;\n            if (0x3f < uVar5) {\n                fcn.00459740(0x40);\n                goto code_r0x004217b9;\n            }\n            iVar3 = *(*(in_RAX + 0x10198 + uVar5 * 8) + (uVar4 >> 0x16 & 0xfffff) * 8);\n        }\n        *(iVar3 + 0x20000 + uVar6 * 8) = unaff_RDI;\n        uVar2 = uVar2 + 1;\n    } while( true );\n}\n",
        "token_count": 451
    },
    "004217e0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nuint64_t fcn.004217e0(int64_t arg1)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t in_RAX;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    uint64_t unaff_RBX;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t in_R10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        uVar5 = in_R10;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar5 = 0;\n            while( true ) {\n                uVar4 = uVar5;\n                if (arg1 == 0) {\n                    return uVar5;\n                }\n                uVar8 = unaff_RBX + 0x800000000000 >> 0x2a;\n                uVar5 = in_R10;\n                if (0x3f < uVar8) break;\n                iVar2 = *(*(in_RAX + 0x10198 + uVar8 * 8) + (unaff_RBX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n                uVar9 = *(iVar2 + 0x210c8);\n                uVar6 = unaff_RBX & 0x3fffff;\n                uVar8 = arg1 * 0x2000 + uVar6;\n                uVar5 = in_R10 & 0xffffff00 | uVar6 < uVar9 | uVar4;\n                if (0x400000 < uVar8) {\n                    uVar8 = 0x400000;\n                }\n                while (uVar9 < uVar8) {\n                    LOCK();\n                    puVar1 = iVar2 + 0x210c8;\n                    uVar3 = *puVar1;\n                    *puVar1 = *puVar1 ^ (uVar9 == uVar3) * (*puVar1 ^ uVar8);\n                    if (uVar9 == uVar3) break;\n                    uVar9 = *(iVar2 + 0x210c8);\n                    if ((uVar9 <= uVar8) && (uVar6 < uVar9)) {\n                        unaff_RBX = 0x33;\n                        *(*0x20 + -0x20) = 0x4218ec;\n                        fcn.00430d40();\n                        goto code_r0x004218ec;\n                    }\n                }\n                unaff_RBX = (uVar8 - uVar6) + unaff_RBX;\n                arg1 = arg1 - (uVar8 - uVar6 >> 0xd);\n                in_R10 = uVar5;\n            }\ncode_r0x004218ec:\n            arg1 = 0x40;\n            *(*0x20 + -0x20) = 0x4218f9;\n            in_RAX = fcn.00459740(0x40);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x42190e;\n        fcn.00457040();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n        in_R10 = uVar5;\n    } while( true );\n}\n",
        "token_count": 898
    },
    "00423ca0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nvoid fcn.00423ca0(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    char cVar3;\n    uint8_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uchar unaff_SIL;\n    uint64_t unaff_RDI;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    uint64_t noname_1;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x38 && *0x20 + -0x38 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0xb8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar9 = unaff_RBX + 0x800000000000;\n            *(*0x20 + -0x20) = uVar9;\n            uVar10 = uVar9 >> 0x16;\n            *(*0x20 + -0x28) = uVar10;\n            uVar8 = arg1 * 0x2000 + unaff_RBX + 0x7fffffffffff;\n            *(*0x20 + -0x30) = uVar8;\n            uVar8 = uVar8 >> 0x16;\n            if (uVar8 == uVar10) {\n                uVar5 = *(in_RAX + 0x68);\n                noname_1 = *(in_RAX + 0x60);\n                if (uVar5 <= uVar10) goto code_r0x004240c5;\n                noname_1 = *(noname_1 + uVar10 * 8);\n                if (0x1fff < uVar9 >> 0x23) goto code_r0x004240b8;\n                *(*0x20 + -0x90) = noname_1;\n                iVar1 = *(in_RAX + 0x78 + (uVar9 >> 0x23) * 8);\n                *(*0x20 + -0xc0) = 0x423eaf;\n                iVar1 = fcn.00426dc0(iVar1 + (uVar10 & 0x1fff) * 0x80, noname_1, uVar8);\n                if (iVar1 == *(*0x20 + -0x90)) {\n                    return;\n                }\n                iVar6 = *(*0x20 + 8);\n                uVar10 = *(iVar6 + 0x68);\n                uVar8 = *(iVar6 + 0x60);\n                if (uVar10 <= *(*0x20 + -0x28)) goto code_r0x004240b0;\n                *(uVar8 + *(*0x20 + -0x28) * 8) = iVar1;\n                goto code_r0x00423ef2;\n            }\n            *(*0x20 + -0x38) = uVar8;\n            if (unaff_RDI != '\\0') {\n                uVar5 = *(in_RAX + 0x68);\n                unaff_RBX = *(in_RAX + 0x60);\n                if (uVar9 >> 0x23 < 0x2000) {\n                    *(*0x20 + 0x21) = unaff_SIL;\n                    *(*0x20 + -0x80) = uVar5;\n                    *(*0x20 + -0x18) = unaff_RBX;\n                    iVar1 = *(in_RAX + 0x78 + (uVar9 >> 0x23) * 8);\n                    *(*0x20 + -0xc0) = 0x423d9f;\n                    uVar2 = fcn.00426dc0(iVar1 + (uVar10 & 0x1fff) * 0x80, uVar5, uVar8);\n                    uVar8 = *(*0x20 + -0x80);\n                    uVar5 = *(*0x20 + -0x28);\n                    if (uVar5 < uVar8) {\n                        *(*(*0x20 + -0x18) + uVar5 * 8) = uVar2;\n                        unaff_RDI = *(*0x20 + 8);\n                        uVar10 = *(unaff_RDI + 0x70);\n                        uVar8 = *(*0x20 + -0x38);\n                        if (uVar8 <= uVar10) {\n                            if (uVar5 + 1 <= uVar8) {\n                                iVar1 = ((uVar5 + 1) * 8 & -((uVar10 - uVar5) + -1) >> 0x3f) + *(unaff_RDI + 0x60);\n                                unaff_RBX = (uVar8 - uVar5) - 1;\n                                noname_1 = *(*0x20 + 0x21);\n                                if (*(*0x20 + 0x21) != 0) {\n                                    if (unaff_RBX == 0) goto code_r0x004240cd;\n                                    unaff_RBX = unaff_RBX * 8;\n                                    *(*0x20 + -0xc0) = 0x423e3d;\n                                    fcn.00459d80();\n                                    unaff_RDI = *(*0x20 + 8);\n                                    uVar8 = *(*0x20 + -0x38);\n                                    goto code_r0x004240cd;\n                                }\n                                noname_1 = 0;\n                                goto code_r0x00424156;\n                            }\n                            *(*0x20 + -0xc0) = 0x42416d;\n                            fcn.00459800(uVar8);\n                        }\n                        uVar5 = uVar10;\n                        *(*0x20 + -0xc0) = 0x424178;\n                        fcn.004597c0(uVar8, uVar5);\n                    }\n                    *(*0x20 + -0xc0) = 0x424185;\n                    fcn.00459740(uVar8);\n                }\n                uVar10 = 0x2000;\n                *(*0x20 + -0xc0) = 0x424192;\n                uVar2 = fcn.00459740(0x2000);\n                goto code_r0x00424192;\n            }\n            uVar5 = *(in_RAX + 0x68);\n            *(*0x20 + -0x88) = uVar5;\n            *(*0x20 + -0x10) = *(in_RAX + 0x60);\n            while( true ) {\n                unaff_SIL = uVar5;\n                if (uVar8 < uVar10) goto code_r0x00424123;\n                if (0x1fff < uVar10 >> 0xd) goto code_r0x00424225;\n                *(*0x20 + -0x50) = uVar10;\n                iVar1 = *(in_RAX + 0x78 + (uVar10 >> 0xd) * 8);\n                iVar6 = (uVar10 & 0x1fff) * 0x80;\n                *(*0x20 + -0xc0) = 0x424205;\n                uVar2 = fcn.00426dc0(iVar1 + iVar6, iVar6, uVar8);\n                uVar10 = *(*0x20 + -0x50);\n                uVar5 = *(*0x20 + -0x88);\n                if (uVar5 <= uVar10) break;\ncode_r0x00424192:\n                *(*(*0x20 + -0x10) + uVar10 * 8) = uVar2;\n                uVar10 = uVar10 + 1;\n                uVar8 = *(*0x20 + -0x38);\n                in_RAX = *(*0x20 + 8);\n            }\n            *(*0x20 + -0xc0) = 0x424225;\n            fcn.00459740(uVar5);\ncode_r0x00424225:\n            arg1 = 0x2000;\n            *(*0x20 + -0xc0) = 0x424232;\n            in_RAX = fcn.00459740(0x2000);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        puVar7[0x20] = unaff_RDI;\n        puVar7[0x21] = unaff_SIL;\n        *(puVar7 + -8) = 0x424251;\n        fcn.00457040();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = puVar7[0x20];\n        unaff_SIL = puVar7[0x21];\n        *0x20 = puVar7;\n    } while( true );\ncode_r0x00424123:\n    iVar6 = *(*0x20 + 8);\ncode_r0x00423ef2:\n    uVar9 = *(*0x20 + -0x20);\n    unaff_RBX = *(*0x20 + -0x30);\n    iVar1 = 3;\n    cVar3 = '\\x01';\ncode_r0x00423f17:\n    if ((iVar1 < 0) || (cVar3 == '\\0')) {\n        return;\n    }\n    *(*0x20 + -0x68) = iVar1;\n    uVar10 = *(iVar1 * 8 + 0x4f16c0);\n    uVar8 = -(uVar10 < 0x40);\n    uVar5 = *(iVar1 * 8 + 0x4f1648);\n    *(*0x20 + -0x70) = uVar5;\n    unaff_RDI = *(iVar1 * 8 + 0x4f1688);\n    *(*0x20 + -0x78) = unaff_RDI;\n    uVar4 = uVar10;\n    uVar10 = uVar9 >> (uVar4 & 0x3f) & uVar8;\n    iVar11 = (unaff_RBX >> (uVar4 & 0x3f) & uVar8) + 1;\n    *(*0x20 + -0x58) = iVar11;\n    cVar3 = '\\0';\n    while( true ) {\n        if (iVar11 <= uVar10) goto code_r0x00423f0e;\n        *(*0x20 + -0x60) = uVar10;\n        *(*0x20 + -0x91) = cVar3;\n        noname_1 = *(iVar6 + 0x28 + iVar1 * 0x18);\n        uVar8 = uVar10 << (uVar5 & 0x3f) & -(uVar5 < 0x40);\n        *(*0x20 + -0x40) = *(*0x20 + -0x60) + 1;\n        uVar10 = *(*0x20 + -0x60) + 1 << (uVar5 & 0x3f) & -(uVar5 < 0x40);\n        if (noname_1 < uVar10) break;\n        if (uVar10 < uVar8) {\ncode_r0x00424097:\n            *(*0x20 + -0xc0) = 0x4240a5;\n            fcn.004597e0(uVar10);\n            break;\n        }\n        *(*0x20 + -0x48) = iVar1 * 3;\n        iVar1 = noname_1 - uVar8;\n        unaff_RBX = uVar10 - uVar8;\n        noname_1 = -iVar1 >> 0x3f;\n        *(*0x20 + -0xc0) = 0x42404d;\n        uVar10 = unaff_RBX;\n        iVar11 = fcn.00425a20(iVar1, uVar9, uVar8 << 3 & noname_1);\n        iVar6 = *(*0x20 + 8);\n        uVar9 = *(iVar6 + 8 + *(*0x20 + -0x48) * 8);\n        iVar1 = *(iVar6 + *(*0x20 + -0x48) * 8);\n        uVar8 = *(*0x20 + -0x60);\n        if (uVar9 <= uVar8) {\n            *(*0x20 + -0xc0) = 0x424097;\n            fcn.00459720(uVar9);\n            goto code_r0x00424097;\n        }\n        if (*(iVar1 + uVar8 * 8) == iVar11) {\n            cVar3 = *(*0x20 + -0x91);\n        }\n        else {\n            *(iVar1 + uVar8 * 8) = iVar11;\n            cVar3 = '\\x01';\n        }\n        iVar1 = *(*0x20 + -0x68);\n        iVar11 = *(*0x20 + -0x58);\n        uVar5 = *(*0x20 + -0x70);\n        unaff_RDI = *(*0x20 + -0x78);\n        uVar10 = *(*0x20 + -0x40);\n        uVar9 = *(*0x20 + -0x20);\n        unaff_RBX = *(*0x20 + -0x30);\n    }\n    *(*0x20 + -0xc0) = 0x4240b0;\n    fcn.004597a0(uVar10, noname_1);\ncode_r0x004240b0:\n    *(*0x20 + -0xc0) = 0x4240b8;\n    fcn.00459740(uVar10);\ncode_r0x004240b8:\n    uVar5 = 0x2000;\n    *(*0x20 + -0xc0) = 0x4240c5;\n    fcn.00459740(0x2000);\ncode_r0x004240c5:\n    *(*0x20 + -0xc0) = 0x4240cd;\n    fcn.00459740(uVar5);\ncode_r0x004240cd:\n    do {\n        if (*(*0x20 + -0x30) >> 0x23 < 0x2000) {\n            uVar2 = *(unaff_RDI + 0x78 + (*(*0x20 + -0x30) >> 0x23) * 8);\n            uVar8 = (uVar8 & 0x1fff) << 7;\n            *(*0x20 + -0xc0) = 0x424105;\n            uVar2 = fcn.00426dc0(uVar2, noname_1, uVar8);\n            noname_1 = *(*0x20 + -0x38);\n            if (noname_1 < *(*0x20 + -0x80)) goto code_r0x00424117;\n            *(*0x20 + -0xc0) = 0x424138;\n            fcn.00459740(*(*0x20 + -0x80));\n        }\n        *(*0x20 + -0xc0) = 0x424145;\n        iVar1 = fcn.00459740(0x2000);\n        do {\n            *(iVar1 + noname_1 * 8) = 0x8000040000200;\n            noname_1 = noname_1 + 1;\ncode_r0x00424156:\n        } while (noname_1 < unaff_RBX);\n    } while( true );\ncode_r0x00423f0e:\n    iVar1 = iVar1 + -1;\n    goto code_r0x00423f17;\ncode_r0x00424117:\n    *(*(*0x20 + -0x18) + noname_1 * 8) = uVar2;\n    goto code_r0x00424123;\n}\n",
        "token_count": 3652
    },
    "004246e0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nint64_t fcn.004246e0(ulong param_1, ulong param_2, uint64_t param_3, uchar *param_4)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    uchar *puVar2;\n    int64_t iVar3;\n    uint8_t uVar4;\n    uchar *puVar5;\n    uchar *arg1;\n    uchar *unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t uVar7;\n    uchar *puVar8;\n    uint64_t uVar9;\n    uchar *arg2;\n    uchar *in_R11;\n    uchar *puVar10;\n    uint64_t uVar11;\n    uint64_t unaff_R13;\n    int64_t unaff_R14;\n    uint64_t unaff_R15;\n    uchar in_XMM15 [16];\n    \n    while (puVar5 = *0x20 + -0x98,  puVar6 = *0x20,  puVar5 < *(unaff_R14 + 0x10) || puVar5 == *(unaff_R14 + 0x10)) {\ncode_r0x004252a6:\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x4252b5;\n        fcn.00457040();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    }\n    puVar6 = *0x20 + -0x118;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + -0x30) = in_XMM15;\n    *(*0x20 + -0x30) = *0x4f02a0;\n    *(*0x20 + -0x28) = *0x4f0280;\n    *(*0x20 + -0x18) = in_XMM15;\n    *(*0x20 + -0x18) = 0x4252e0;\n    *(*0x20 + -0x10) = *0x20 + -0x30;\n    puVar2 = NULL;\n    uVar7 = 0;\n    puVar8 = NULL;\n    uVar9 = 0xffffffffffffffff;\ncode_r0x004247a0:\n    if (4 < puVar2) {\n        arg1 = uVar7 >> 0xd;\n        if (arg1 < 0x2000) {\n            *(*0x20 + -0x38) = uVar7;\n            uVar7 = (uVar7 & 0x1fff) << 7;\n            *(*0x20 + -0x120) = 0x4248f4;\n            iVar3 = fcn.00426fa0(0);\n            if (iVar3 != -1) {\n                *(*0x20 + -0x80) = iVar3;\n                *(*0x20 + -0x48) = *(*0x20 + -0x38) << 0x16;\n                *(*0x20 + -0x120) = 0x424951;\n                (**(*0x20 + -0x18))(*(*0x20 + -0x38) << 0x16, *0x20 + -0x18, 0xffff800000000000);\n                *(*0x20 + -0x120) = 0x424966;\n                fcn.00424600();\n                return *(*0x20 + -0x80) * 0x2000 + *(*0x20 + -0x48) + -0x800000000000;\n            }\n            uVar9 = *(*(*0x20 + 8) + 0x68);\n            arg1 = *(*(*0x20 + 8) + 0x60);\n            if (*(*0x20 + -0x38) < uVar9) {\n                uVar7 = *(arg1 + *(*0x20 + -0x38) * 8);\n                uVar9 = uVar7 & 0x1fffff;\n                if ((uVar7 & 0x8000000000000000) != 0) {\n                    uVar9 = 0x200000;\n                }\n                if (uVar7 < 0) {\n                    uVar11 = 0x200000;\n                }\n                else {\n                    uVar11 = uVar7 >> 0x15 & 0x1fffff;\n                }\n                *(*0x20 + -0x100) = uVar11;\n                *(*0x20 + -0xd0) = uVar9;\n                if (-1 < uVar7) goto code_r0x00424b0d;\n                uVar7 = 0x200000;\n                do {\n                    *(*0x20 + -0xd8) = uVar7;\n                    *(*0x20 + -0x120) = 0x424a1c;\n                    fcn.004324c0();\n                    *(*0x20 + -0x120) = 0x424a2d;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x120) = 0x424a37;\n                    fcn.00432bc0();\n                    *(*0x20 + -0x120) = 0x424a48;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x120) = 0x424a55;\n                    fcn.00432bc0();\n                    *(*0x20 + -0x120) = 0x424a66;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x120) = 0x424a70;\n                    fcn.00432ac0();\n                    *(*0x20 + -0x120) = 0x424a85;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x120) = 0x424a8f;\n                    fcn.00432ac0();\n                    *(*0x20 + -0x120) = 0x424aa5;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x120) = 0x424aaf;\n                    fcn.00432ac0();\n                    *(*0x20 + -0x120) = 0x424ac5;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x120) = 0x424aca;\n                    fcn.00432540();\n                    *(*0x20 + -0x120) = 0x424acf;\n                    fcn.004324c0();\n                    *(*0x20 + -0x120) = 0x424ae5;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x120) = 0x424af2;\n                    fcn.00432ac0();\n                    *(*0x20 + -0x120) = 0x424af7;\n                    fcn.00432720();\n                    *(*0x20 + -0x120) = 0x424afc;\n                    fcn.00432540();\n                    *(*0x20 + -0x120) = 0x424b0d;\n                    fcn.00430d40();\ncode_r0x00424b0d:\n                    uVar7 = uVar7 >> 0x2a & 0x1fffff;\n                } while( true );\n            }\n            *(*0x20 + -0x120) = 0x424b3a;\n            fcn.00459720(uVar9);\n        }\n        *(*0x20 + -0x120) = 0x424b47;\n        fcn.00459740(0x2000);\n        goto code_r0x00424b47;\n    }\n    param_3 = 0x4f1640;\n    uVar11 = *(puVar2 * 8 + 0x4f1640);\n    uVar1 = -(uVar11 < 0x40);\n    uVar4 = uVar11;\n    puVar10 = 1 << (uVar4 & 0x3f) & uVar1;\n    unaff_R13 = 0x4f1680;\n    unaff_R15 = *(puVar2 * 8 + 0x4f1680);\n    puVar5 = uVar7 << (uVar4 & 0x3f) & uVar1;\n    arg2 = *(in_RAX + 0x10 + puVar2 * 0x18);\n    param_4 = *(in_RAX + puVar2 * 0x18);\n    arg1 = puVar5 + puVar10;\n    in_R11 = puVar2;\n    if (arg1 <= arg2) {\n        if (puVar5 <= arg1) {\n            *(*0x20 + -0x70) = puVar5;\n            *(*0x20 + -0xa8) = uVar9;\n            *(*0x20 + -0xa0) = puVar8;\n            uVar7 = 0x4f16c0;\n            uVar9 = *(puVar2 * 8 + 0x4f16c0);\n            param_4 = param_4 + (*(*0x20 + -0x70) << 3 & puVar5 - arg2 >> 0x3f);\n            uVar9 = *(in_RAX + 0x10078) + 0x800000000000U >> (uVar9 & 0x3f) & -(uVar9 < 0x40);\n            param_3 = *(*0x20 + -0x70);\n            if ((-puVar10 & uVar9) == param_3) {\n                puVar5 = puVar10 + -1 & uVar9;\n            }\n            else {\n                puVar5 = NULL;\n            }\n            *(*0x20 + -0x38) = puVar2;\n            *(*0x20 + -0x40) = puVar10;\n            *(*0x20 + -0xb0) = unaff_R15;\n            *(*0x20 + -0x20) = param_4;\n            *(*0x20 + -0x98) = puVar5;\n            unaff_R13 = 0;\n            arg1 = puVar10;\n            arg2 = NULL;\n            do {\n                if (arg1 <= puVar5) {\ncode_r0x00424dd0:\n                    if (unaff_RBX <= arg2) {\n                        *(*0x20 + -0x68) = unaff_R13;\n                        *(*0x20 + -0x58) = *(uVar7 + in_R11 * 8);\n                        *(*0x20 + -0x120) = 0x4250b0;\n                        fcn.00424600();\n                        return (*(*0x20 + -0x70) << (*(*0x20 + -0x58) & 0x3f) & -(*(*0x20 + -0x58) < 0x40)) +\n                               *(*0x20 + -0x68) * 0x2000 + -0x800000000000;\n                    }\n                    if (in_R11 == NULL) {\n                        return 0;\n                    }\n                    uVar7 = *(*0x20 + -0xa0);\n                    uVar9 = uVar7 & 0x1fffff;\n                    unaff_R13 = 0x200000;\n                    if ((uVar7 & 0x8000000000000000) != 0) {\n                        uVar9 = 0x200000;\n                    }\n                    if (uVar7 < 0) {\n                        unaff_R15 = 0x200000;\n                    }\n                    else {\n                        unaff_R15 = uVar7 >> 0x15 & 0x1fffff;\n                    }\n                    *(*0x20 + -0xe8) = unaff_R15;\n                    *(*0x20 + -0xf0) = uVar9;\n                    if (uVar7 < 0) {\n                        arg2 = 0x200000;\n                    }\n                    else {\n                        arg2 = uVar7 >> 0x2a & 0x1fffff;\n                    }\n                    *(*0x20 + -0xe0) = arg2;\n                    *(*0x20 + -0x120) = 0x424e6a;\n                    fcn.004324c0();\n                    *(*0x20 + -0x120) = 0x424e7b;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x120) = 0x424e8f;\n                    fcn.00432bc0(*(*0x20 + -0x38) + -1);\n                    *(*0x20 + -0x120) = 0x424ea5;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x120) = 0x424eaf;\n                    fcn.00432bc0();\n                    *(*0x20 + -0x120) = 0x424ec5;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x120) = 0x424ecf;\n                    fcn.00432ac0();\n                    *(*0x20 + -0x120) = 0x424ee5;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x120) = 0x424eef;\n                    fcn.00432ac0();\n                    *(*0x20 + -0x120) = 0x424f05;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x120) = 0x424f0f;\n                    fcn.00432ac0();\n                    *(*0x20 + -0x120) = 0x424f14;\n                    fcn.00432720();\n                    *(*0x20 + -0x120) = 0x424f19;\n                    fcn.00432540();\n                    *(*0x20 + -0x120) = 0x424f1e;\n                    fcn.004324c0();\n                    *(*0x20 + -0x120) = 0x424f2f;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x120) = 0x424f3c;\n                    fcn.00432bc0();\n                    *(*0x20 + -0x120) = 0x424f4d;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x120) = 0x424f5a;\n                    fcn.00432ac0();\n                    *(*0x20 + -0x120) = 0x424f6b;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x120) = 0x424f78;\n                    fcn.00432bc0();\n                    *(*0x20 + -0x120) = 0x424f7d;\n                    fcn.00432720();\n                    *(*0x20 + -0x120) = 0x424f85;\n                    fcn.00432540();\n                    *(*0x20 + -0x48) = *(*(*0x20 + 8) + 0x10078);\n                    *(*0x20 + -0x120) = 0x424fa5;\n                    fcn.004324c0();\n                    *(*0x20 + -0x120) = 0x424fb6;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x120) = 0x424fc5;\n                    fcn.00432c20();\n                    *(*0x20 + -0x120) = 0x424fd6;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x120) = 0x424fe5;\n                    fcn.00432bc0();\n                    *(*0x20 + -0x120) = 0x424fea;\n                    fcn.00432720();\n                    *(*0x20 + -0x120) = 0x424fef;\n                    fcn.00432540();\n                    *(*0x20 + -0x58) = *(*(*0x20 + -0x38) * 8 + 0x4f16c0);\n                    arg1 = *(*(*0x20 + -0x38) * 8 + 0x4f1640);\n                    *(*0x20 + -0x60) = arg1;\n                    *(*0x20 + -0x120) = 0x425025;\n                    fcn.004324c0();\n                    *(*0x20 + -0x120) = 0x425036;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x120) = 0x425045;\n                    fcn.00432ac0();\n                    *(*0x20 + -0x120) = 0x425056;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x120) = 0x425065;\n                    fcn.00432ac0();\n                    *(*0x20 + -0x120) = 0x42506a;\n                    fcn.00432720();\n                    *(*0x20 + -0x120) = 0x42506f;\n                    fcn.00432540();\n                    iVar3 = 0;\n                    while (iVar3 < *(*0x20 + -0x40)) {\n                        uVar7 = *(*(*0x20 + -0x20) + iVar3 * 8);\n                        uVar9 = uVar7 & 0x1fffff;\n                        param_3 = 0x200000;\n                        if ((uVar7 & 0x8000000000000000) != 0) {\n                            uVar9 = 0x200000;\n                        }\n                        if (uVar7 < 0) {\n                            param_4 = 0x200000;\n                        }\n                        else {\n                            param_4 = uVar7 >> 0x15 & 0x1fffff;\n                            arg2 = param_4;\n                        }\n                        *(*0x20 + -0x88) = iVar3;\n                        *(*0x20 + -200) = param_4;\n                        *(*0x20 + -0xf8) = uVar9;\n                        if (uVar7 < 0) {\n                            uVar7 = 0x200000;\n                        }\n                        else {\n                            uVar7 = uVar7 >> 0x2a & 0x1fffff;\n                        }\n                        *(*0x20 + -0xc0) = uVar7;\n                        *(*0x20 + -0x120) = 0x42510b;\n                        fcn.004324c0();\n                        *(*0x20 + -0x120) = 0x42511c;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x120) = 0x425129;\n                        fcn.00432bc0();\n                        *(*0x20 + -0x120) = 0x42513a;\n                        fcn.00432dc0();\n                        arg1 = *(*0x20 + -0x88) + *(*0x20 + -0x70);\n                        *(*0x20 + -0x120) = 0x425156;\n                        fcn.00432bc0();\n                        *(*0x20 + -0x120) = 0x425167;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x120) = 0x425171;\n                        fcn.00432ac0();\n                        *(*0x20 + -0x120) = 0x425185;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x120) = 0x42518f;\n                        fcn.00432ac0();\n                        *(*0x20 + -0x120) = 0x4251a5;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x120) = 0x4251af;\n                        fcn.00432ac0();\n                        *(*0x20 + -0x120) = 0x4251c5;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x120) = 0x4251ca;\n                        fcn.00432540();\n                        iVar3 = *(*0x20 + -0x88) + 1;\n                    }\n                    unaff_RBX = 0x10;\n                    *(*0x20 + -0x120) = 0x425285;\n                    fcn.00430d40();\ncode_r0x00425285:\n                    *(*0x20 + -0x120) = 0x425290;\n                    fcn.00459720(arg1);\n                    break;\n                }\n                if (arg1 <= puVar5) goto code_r0x00425285;\n                iVar3 = *(param_4 + puVar5 * 8);\n                if (iVar3 == 0) {\n                    puVar8 = NULL;\n                    goto code_r0x00424b47;\n                }\n                *(*0x20 + -0x90) = puVar5;\n                *(*0x20 + -0x50) = iVar3;\n                *(*0x20 + -0x68) = unaff_R13;\n                *(*0x20 + -0xb8) = arg2;\n                uVar7 = *(uVar7 + in_R11 * 8);\n                *(*0x20 + -0x78) = puVar5 + param_3;\n                unaff_R13 = puVar5 + param_3 << (uVar7 & 0x3f) & -(uVar7 < 0x40);\n                *(*0x20 + -0x120) = 0x424bf7;\n                (**(*0x20 + -0x18))(uVar7, *0x20 + -0x18, 1 << (unaff_R15 & 0x3f), unaff_R13 - 0x800000000000);\n                puVar8 = *(*0x20 + -0x50);\n                uVar7 = puVar8 & 0x1fffff;\n                param_3 = 0x8000000000000000;\n                param_4 = 0x200000;\n                if ((puVar8 & 0x8000000000000000) != 0) {\n                    uVar7 = 0x200000;\n                }\n                iVar3 = *(*0x20 + -0xb8);\n                arg2 = iVar3 + uVar7;\n                unaff_RBX = *(*0x20 + 0x10);\n                if (unaff_RBX <= arg2) {\n                    unaff_R13 = *(*0x20 + -0x68);\n                    if (iVar3 == 0) {\n                        unaff_R13 = *(*0x20 + -0x90) << (*(*0x20 + -0xb0) & 0x3f) & -(*(*0x20 + -0xb0) < 0x40);\n                    }\n                    uVar7 = 0x4f16c0;\n                    param_3 = *(*0x20 + -0x70);\n                    param_4 = *(*0x20 + -0x20);\n                    in_R11 = *(*0x20 + -0x38);\n                    goto code_r0x00424dd0;\n                }\n                if (puVar8 < 0) {\n                    puVar2 = 0x200000;\n                    in_R11 = arg2;\n                }\n                else {\n                    puVar2 = puVar8 >> 0x15 & 0x1fffff;\n                    in_R11 = puVar8;\n                }\n                if (unaff_RBX <= puVar2) goto code_r0x00424779;\n                if (iVar3 == 0) {\n                    uVar9 = *(*0x20 + -0xb0);\n                }\n                else {\n                    uVar9 = *(*0x20 + -0xb0);\n                    uVar11 = 1 << (uVar9 & 0x3f) & -(uVar9 < 0x40);\n                    if (uVar11 <= uVar7) {\n                        puVar8 = iVar3 + uVar11;\n                        arg1 = *(*0x20 + -0x40);\n                        uVar7 = 0x4f16c0;\n                        param_3 = *(*0x20 + -0x70);\n                        param_4 = *(*0x20 + -0x20);\n                        in_R11 = *(*0x20 + -0x38);\n                        puVar5 = *(*0x20 + -0x90);\n                        unaff_R15 = *(*0x20 + -0xb0);\n                        unaff_R13 = *(*0x20 + -0x68);\n                        goto code_r0x00424b47;\n                    }\n                }\n                if (puVar8 < 0) {\n                    puVar8 = 0x200000;\n                }\n                else {\n                    puVar8 = puVar8 >> 0x2a & 0x1fffff;\n                }\n                puVar5 = *(*0x20 + -0x90);\n                unaff_R13 = (-(uVar9 < 0x40) & puVar5 + 1 << (uVar9 & 0x3f)) - puVar8;\n                arg1 = *(*0x20 + -0x40);\n                param_3 = *(*0x20 + -0x70);\n                param_4 = *(*0x20 + -0x20);\n                in_R11 = *(*0x20 + -0x38);\n                unaff_R15 = *(*0x20 + -0xb0);\n                uVar7 = 0x4f16c0;\ncode_r0x00424b47:\n                puVar5 = puVar5 + 1;\n                arg2 = puVar8;\n            } while( true );\n        }\n        *(*0x20 + -0x120) = 0x425298;\n        fcn.004597e0(arg1);\n    }\n    *(*0x20 + -0x120) = 0x4252a5;\n    in_RAX = fcn.004597a0(arg1, arg2);\n    goto code_r0x004252a6;\ncode_r0x00424779:\n    puVar2 = *(*0x20 + -0x38) + 1;\n    in_RAX = *(*0x20 + 8);\n    uVar7 = *(*0x20 + -0x78);\n    uVar9 = uVar7;\n    goto code_r0x004247a0;\n}\n",
        "token_count": 5961
    },
    "00438a60": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nint64_t fcn.00438a60(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    bool bVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            arg3 = 0;\n            while( true ) {\n                if (unaff_RBX <= arg3) {\n                    return 0;\n                }\n                iVar1 = *(in_RAX + arg3 * 8);\n                uVar3 = arg3 >> 5 & 0x7ffffff;\n                if (unaff_RSI <= uVar3) break;\n                if ((*(unaff_RDI + uVar3 * 4) >> (arg3 & 0x1f) & 1) == 0) {\n                    do {\n                    } while (*(iVar1 + 0x5f4) != *(iVar1 + 0x5f4));\n                    bVar4 = *(iVar1 + 0x5f4) != *(iVar1 + 0x5f0) || *(iVar1 + 0xdf8) != 0;\n                }\n                else {\n                    bVar4 = false;\n                }\n                if (bVar4) {\n                    *(*0x20 + -0x28) = 0x438b15;\n                    fcn.00409300();\n                    *(*0x20 + -0x28) = 0x438b1a;\n                    uVar2 = fcn.0043ec80();\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x28) = 0x438b2d;\n                    fcn.00409520();\n                    if (*(*0x20 + -0x10) == 0) {\n                        return 0;\n                    }\n                    return *(*0x20 + -0x10);\n                }\n                arg3 = arg3 + 1;\n            }\n            *(*0x20 + -0x28) = 0x438b4b;\n            arg1 = unaff_RSI;\n            in_RAX = fcn.00459720(unaff_RSI);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + 0x28) = unaff_RSI;\n        *(puVar5 + 0x30) = arg3;\n        *(puVar5 + -8) = 0x438b6f;\n        fcn.00457040();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        unaff_RSI = *(puVar5 + 0x28);\n        arg3 = *(puVar5 + 0x30);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 877
    },
    "00438ba0": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nint64_t fcn.00438ba0(ulong noname_0, ulong noname_1, ulong noname_2, int64_t arg4)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t unaff_RBX;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    \n    uVar4 = 0;\n    while( true ) {\n        if (unaff_RBX <= uVar4) {\n            return arg4;\n        }\n        iVar3 = *(in_RAX + uVar4 * 8);\n        uVar5 = uVar4 >> 5 & 0x7ffffff;\n        if (unaff_RSI <= uVar5) break;\n        iVar6 = arg4;\n        if ((*(unaff_RDI + uVar5 * 4) >> (uVar4 & 0x1f) & 1) != 0) {\n            iVar1 = *(iVar3 + 0x1668);\n            iVar6 = *(iVar3 + 0x1670);\n            if ((iVar1 != 0) && ((iVar6 == 0 || (iVar1 <= iVar6)))) {\n                iVar6 = iVar1;\n            }\n            if ((iVar6 == 0) || ((arg4 != 0 && (arg4 <= iVar6)))) {\n                iVar6 = arg4;\n            }\n        }\n        uVar4 = uVar4 + 1;\n        arg4 = iVar6;\n    }\n    fcn.00459720(unaff_RSI);\n    pcVar2 = swi(3);\n    iVar3 = (*pcVar2)();\n    return iVar3;\n}\n",
        "token_count": 399
    },
    "00409fc0": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint64_t fcn.00409fc0(void)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    int64_t unaff_RBX;\n    uint64_t uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t uVar9;\n    uint64_t *puVar10;\n    uint64_t *puVar11;\n    uint64_t uVar12;\n    uint64_t in_R11;\n    ulong uVar13;\n    int64_t unaff_R14;\n    bool bVar14;\n    \ncode_r0x00409fc0:\n    puVar8 = *0x20;\n    uVar2 = in_R11;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x18 && *0x20 + -0x18 != *(unaff_R14 + 0x10)) {\n        puVar8 = *0x20 + -0x98;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        uVar7 = unaff_RBX + 0x3fffffU & 0xffffffffffc00000;\n        *(*0x20 + -0x78) = uVar7;\n        *(*0x20 + -0xa0) = 0x40a01f;\n        uVar2 = fcn.0040bb00(0x400000);\n        if (uVar2 != 0) {\n            uVar6 = *(*0x20 + -0x78);\n            goto code_r0x0040a03c;\n        }\n        uVar9 = *(*0x20 + 8);\n        uVar7 = *(*0x20 + -0x78);\n        do {\n            puVar10 = *(uVar9 + 0x103b8);\n            if (puVar10 == NULL) {\n                uVar6 = 0;\ncode_r0x0040a42b:\n                if (uVar6 == 0) {\n                    *(*0x20 + -0xa0) = 0x40a445;\n                    iVar3 = fcn.0040a660(0x400000);\n                    if (iVar3 == 0) {\n                        return 0;\n                    }\n                    *(*0x20 + -0x10) = iVar3;\n                    *(*0x20 + -0x38) = uVar7;\n                    *(*0x20 + -0x28) = *(*0x20 + 8) + 0x16bb0;\n                    *(*0x20 + -0xa0) = 0x40a474;\n                    puVar4 = fcn.004147e0();\n                    *puVar4 = *(*0x20 + -0x10);\n                    *(puVar4 + 1) = 1;\n                    puVar4[2] = *0x52a2f8;\n                    *(*0x20 + -0xa0) = 0x40a49f;\n                    *0x52a2f8 = puVar4;\n                    piVar5 = fcn.004147e0();\n                    uVar2 = *(*0x20 + -0x10);\n                    uVar6 = *(*0x20 + -0x38);\n                    *piVar5 = uVar6 + uVar2;\n                    piVar5[2] = *0x52a2f8;\n                    *0x52a2f8 = piVar5;\n                }\n                uVar9 = uVar6 + uVar2;\n                if (uVar9 < uVar2) {\n                    iVar3 = 0x1c;\n                    uVar13 = 0x486265;\n                }\n                else if (uVar2 + 0x800000000000 >> 0x16 < 0x4000000) {\n                    bVar14 = 0x3ffffff < uVar9 + 0x7fffffffffff >> 0x16;\n                    iVar3 = 0;\n                    if (bVar14) {\n                        iVar3 = 0x20;\n                    }\n                    uVar13 = 0;\n                    if (bVar14) {\n                        uVar13 = 0x486d7a;\n                    }\n                }\n                else {\n                    iVar3 = 0x21;\n                    uVar13 = 0x48707c;\n                }\n                if (iVar3 != 0) goto code_r0x0040a59e;\n                uVar7 = uVar6;\n                in_R11 = uVar2;\n                if ((uVar2 & 0x3fffff) != 0) goto code_r0x0040a58d;\ncode_r0x0040a03c:\n                *(*0x20 + -0x10) = uVar2;\n                *(*0x20 + -0x38) = uVar6;\n                uVar9 = uVar2 + 0x800000000000 >> 0x16;\n                puVar11 = *(*0x20 + 8);\n                while( true ) {\n                    if (uVar2 + uVar6 + 0x7fffffffffff >> 0x16 < uVar9) {\n                        return uVar2;\n                    }\n                    puVar10 = uVar9 >> 0x14;\n                    uVar2 = in_R11;\n                    if (0x3f < puVar10) goto code_r0x0040a2da;\n                    *(*0x20 + -0x40) = uVar9;\n                    uVar2 = puVar11[puVar10 + 0x2033];\n                    puVar10 = puVar11 + puVar10 + 0x2033;\n                    if (uVar2 == 0) {\n                        *(*0x20 + -0x18) = puVar10;\n                        *(*0x20 + -0xa0) = 0x40a0f5;\n                        uVar2 = fcn.0040b720(0);\n                        if (uVar2 == 0) goto code_r0x0040a2c9;\n                        **(*0x20 + -0x18) = uVar2;\n                        uVar9 = *(*0x20 + -0x40);\n                    }\n                    in_R11 = *(uVar2 + (uVar9 & 0xfffff) * 8);\n                    uVar9 = uVar2 + (uVar9 & 0xfffff) * 8;\n                    if (in_R11 != 0) goto code_r0x0040a2b8;\n                    *(*0x20 + -0x20) = uVar9;\n                    uVar7 = 0x210d0;\n                    *(*0x20 + -0xa0) = 0x40a16d;\n                    iVar3 = fcn.0040bb00(8);\n                    if (iVar3 == 0) {\n                        uVar7 = 8;\n                        *(*0x20 + -0xa0) = 0x40a188;\n                        iVar3 = fcn.0040b720(0x559b78);\n                        if (iVar3 == 0) goto code_r0x0040a2a7;\n                    }\n                    puVar10 = *(*0x20 + 8);\n                    uVar2 = puVar10[0x207e];\n                    if (puVar10[0x207d] == uVar2) {\n                        *(*0x20 + -0x68) = iVar3;\n                        iVar3 = uVar2 << 4;\n                        if (iVar3 == 0) {\n                            iVar3 = *0x557df8;\n                        }\n                        *(*0x20 + -0x70) = iVar3;\n                        *(*0x20 + -0xa0) = 0x40a1db;\n                        uVar2 = fcn.0040b720(0x559b78);\n                        if (uVar2 == 0) goto code_r0x0040a296;\n                        puVar10 = *(*0x20 + 8);\n                        uVar7 = puVar10[0x207c];\n                        puVar10[0x207c] = uVar2;\n                        puVar10[0x207e] = *(*0x20 + -0x70) >> 3;\n                        uVar2 = puVar10[0x207d];\n                        if (puVar10[0x207d] < puVar10[0x207d]) {\n                            uVar2 = puVar10[0x207d];\n                        }\n                        if (puVar10[0x207c] != uVar7) {\n                            *(*0x20 + -0xa0) = 0x40a239;\n                            fcn.0045a040(uVar2 << 3);\n                            puVar10 = *(*0x20 + 8);\n                        }\n                        iVar3 = *(*0x20 + -0x68);\n                    }\n                    uVar6 = puVar10[0x207d];\n                    uVar9 = puVar10[0x207e];\n                    uVar2 = uVar6 + 1;\n                    if (uVar9 < uVar2) goto code_r0x0040a291;\n                    puVar10[0x207d] = uVar2;\n                    uVar9 = puVar10[0x207c];\n                    if (uVar2 <= uVar6) break;\n                    iVar1 = *(*0x20 + -0x40);\n                    *(uVar9 + uVar6 * 8) = iVar1;\n                    **(*0x20 + -0x20) = iVar3;\n                    uVar9 = iVar1 + 1;\n                    uVar2 = *(*0x20 + -0x10);\n                    uVar6 = *(*0x20 + -0x38);\n                    puVar11 = puVar10;\n                }\n                *(*0x20 + -0xa0) = 0x40a291;\n                fcn.00459720(uVar2);\ncode_r0x0040a291:\n                *(*0x20 + -0xa0) = 0x40a296;\n                fcn.004597a0(uVar2, uVar9);\ncode_r0x0040a296:\n                *(*0x20 + -0xa0) = 0x40a2a7;\n                fcn.00430d40();\ncode_r0x0040a2a7:\n                *(*0x20 + -0xa0) = 0x40a2b8;\n                fcn.00430d40();\ncode_r0x0040a2b8:\n                *(*0x20 + -0xa0) = 0x40a2c9;\n                fcn.00430d40();\ncode_r0x0040a2c9:\n                uVar7 = 0x27;\n                *(*0x20 + -0xa0) = 0x40a2da;\n                fcn.00430d40();\n                uVar2 = in_R11;\ncode_r0x0040a2da:\n                *(*0x20 + -0xa0) = 0x40a2e7;\n                fcn.00459740(0x40);\n            }\n            else {\n                *(*0x20 + -0x48) = puVar10;\n                uVar6 = *puVar10;\n                if (*(puVar10 + 1) != '\\0') {\n                    uVar6 = *puVar10 - uVar7;\n                }\n                uVar12 = uVar7 + uVar6;\n                if (uVar12 < uVar6) {\n                    uVar2 = 0;\n                }\n                else if (uVar12 + 0x7fffffffffff >> 0x16 < 0x4000000) {\n                    *(*0x20 + -0x58) = uVar6;\n                    *(*0x20 + -0x38) = uVar12;\n                    *(*0x20 + -0xa0) = 0x40a38e;\n                    uVar2 = fcn.004137a0();\n                    uVar9 = *(*0x20 + 8);\n                    uVar7 = *(*0x20 + -0x78);\n                    puVar10 = *(*0x20 + -0x48);\n                    uVar12 = *(*0x20 + -0x38);\n                    uVar6 = *(*0x20 + -0x58);\n                }\n                else {\n                    uVar2 = 0;\n                }\n                if (uVar2 == uVar6) {\n                    if (*(puVar10 + 1) != '\\0') {\n                        uVar12 = uVar6;\n                    }\n                    *puVar10 = uVar12;\n                    uVar6 = uVar7;\n                    goto code_r0x0040a42b;\n                }\n                if (uVar2 != 0) {\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0xa0) = 0x40a3db;\n                    fcn.00413660(0);\n                    uVar9 = *(*0x20 + 8);\n                    uVar7 = *(*0x20 + -0x78);\n                    puVar10 = *(*0x20 + -0x48);\n                    uVar2 = *(*0x20 + -0x10);\n                }\n            }\n            *(uVar9 + 0x103b8) = puVar10[2];\n            *(uVar9 + 0x16be0) = *(uVar9 + 0x16be0) - *(uVar9 + 0x16bb0);\n            *puVar10 = *(uVar9 + 0x16bc8);\n            *(uVar9 + 0x16bc8) = puVar10;\n        } while( true );\n    }\n    goto code_r0x0040a630;\ncode_r0x0040a58d:\n    *(*0x20 + -0xa0) = 0x40a59e;\n    fcn.00430d40();\ncode_r0x0040a59e:\n    *(*0x20 + -0x60) = uVar2;\n    *(*0x20 + -0x38) = uVar9;\n    *(*0x20 + -0x30) = uVar13;\n    *(*0x20 + -0x50) = iVar3;\n    *(*0x20 + -0xa0) = 0x40a5b7;\n    fcn.004324c0();\n    *(*0x20 + -0xa0) = 0x40a5c8;\n    fcn.00432dc0();\n    *(*0x20 + -0xa0) = 0x40a5d2;\n    fcn.00432c20();\n    *(*0x20 + -0xa0) = 0x40a5e5;\n    fcn.00432dc0();\n    *(*0x20 + -0xa0) = 0x40a5ef;\n    fcn.00432c20();\n    *(*0x20 + -0xa0) = 0x40a605;\n    fcn.00432dc0();\n    *(*0x20 + -0xa0) = 0x40a614;\n    fcn.00432dc0();\n    *(*0x20 + -0xa0) = 0x40a619;\n    fcn.00432720();\n    *(*0x20 + -0xa0) = 0x40a61e;\n    fcn.00432540();\n    unaff_RBX = 0x2e;\n    *(*0x20 + -0xa0) = 0x40a62f;\n    in_RAX = fcn.00430d40();\ncode_r0x0040a630:\n    *(puVar8 + 8) = in_RAX;\n    *(puVar8 + 0x10) = unaff_RBX;\n    *(puVar8 + -8) = 0x40a63f;\n    fcn.00457040();\n    in_RAX = *(puVar8 + 8);\n    unaff_RBX = *(puVar8 + 0x10);\n    *0x20 = puVar8;\n    in_R11 = uVar2;\n    goto code_r0x00409fc0;\n}\n",
        "token_count": 3613
    },
    "00432ac0": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.00432ac0(void)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uchar *puVar3;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + -0x6c) = 0;\n            *(*0x20 + -0x98) = *0x20 + -8;\n            *(*0x20 + -0x90) = 0x432b0f;\n            uVar1 = fcn.004599ab();\n            unaff_RBP = *(*0x20 + -0x98);\n            for (uVar2 = 99; 0 < uVar2; uVar2 = uVar2 - 1) {\n                *(*0x20 + (uVar2 - 0x6c)) = uVar1 + (uVar1 / 10) * -10 + '0';\n                if (uVar1 < 10) break;\n                uVar1 = uVar1 / 10;\n            }\n            if (uVar2 < 0x65) {\n                *(*0x20 + -0x90) = 0x432b7f;\n                fcn.004325a0(-(uVar2 - 100));\n                return;\n            }\n            *(*0x20 + -0x90) = 0x432b9c;\n            in_RAX = fcn.004597e0(100);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x432ba7;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 479
    },
    "00403a20": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00403a20(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint64_t *puVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    char cVar6;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    uint64_t unaff_RSI;\n    int64_t iVar9;\n    uint64_t unaff_RDI;\n    uint64_t in_R8;\n    int64_t unaff_R14;\n    int64_t iStackX8;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045b6e0();\n        iStackX8 = in_RAX;\n    }\n    uVar8 = *(in_RAX + 8);\n    if (uVar8 == 0) {\n        return;\n    }\n    if (uVar8 <= arg1) {\n        return;\n    }\n    if (uVar8 - arg1 < unaff_RDI) {\n        unaff_RDI = uVar8 - arg1;\n    }\n    if ((*(in_RAX + 0x17) & 0x40) == 0) {\n        fcn.00403940(arg1);\n        return;\n    }\n    uVar7 = *(in_RAX + 0x17) & 0x1f;\n    uVar8 = uVar7;\n    cVar6 = uVar7;\n    if (cVar6 == '\\x11') {\n        iStackX8 = in_RAX;\n        for (uVar8 = 0; uVar8 <= *(in_RAX + 0x40) && *(in_RAX + 0x40) != uVar8; uVar8 = uVar8 + 1) {\n            if (arg1 <= **(in_RAX + 0x30) && **(in_RAX + 0x30) != arg1) {\n                fcn.00403a20(arg1);\n                in_RAX = iStackX8;\n            }\n            uVar4 = **(in_RAX + 0x30);\n            uVar5 = arg1;\n            if (uVar4 < arg1) {\n                uVar5 = uVar4;\n            }\n            unaff_RSI = uVar4 - uVar5;\n            arg1 = arg1 - uVar5;\n            if (unaff_RDI <= unaff_RSI) {\n                return;\n            }\ncode_r0x00403b85:\n            unaff_RDI = unaff_RDI - unaff_RSI;\n        }\n    }\n    else {\n        if (cVar6 != '\\x19') {\n            in_RAX = fcn.00430d40();\n            arg1 = in_R8;\n            goto code_r0x00403b85;\n        }\n        iVar1 = *(in_RAX + 0x40);\n        iVar9 = *(in_RAX + 0x38);\n        if (0 < iVar1) {\n            iVar3 = 0;\n            while( true ) {\n                puVar2 = *(iVar9 + 8);\n                if (arg1 <= *puVar2 && *puVar2 != arg1) {\n                    fcn.00403a20(arg1);\n                }\n                uVar8 = *puVar2;\n                uVar4 = arg1;\n                if (uVar8 < arg1) {\n                    uVar4 = uVar8;\n                }\n                arg1 = arg1 - uVar4;\n                if (unaff_RDI <= uVar8 - uVar4) {\n                    return;\n                }\n                iVar3 = iVar3 + 1;\n                unaff_RDI = unaff_RDI - (uVar8 - uVar4);\n                if (iVar1 <= iVar3) break;\n                iVar9 = iVar9 + 0x18;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 881
    },
    "00450f60": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nulong fcn.00450f60(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uint32_t uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    iVar1 = fcn.00450ee0();\n    if (iVar1 != 0) {\n        fcn.00451020();\n        uVar2 = fcn.00451880(param_1, param_2, param_3, param_4);\n        return uVar2;\n    }\n    uVar3 = *(in_RAX + 0x17) & 0x1f;\n    if (uVar3 == '\\x14') {\n        uVar2 = fcn.00451880(in_RAX, uVar3, param_3, param_4);\n        return uVar2;\n    }\n    if (uVar3 == '\\x19') {\n        uVar2 = fcn.00451880(in_RAX, uVar3, param_3, param_4);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 303
    },
    "004354c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nuint64_t fcn.004354c0(ulong arg1)\n\n{\n    uint64_t in_RAX;\n    int32_t unaff_EBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar2;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((unaff_EBX == 9) && (arg1 == 4)) {\n                LOCK();\n                bVar2 = *(in_RAX + 0x90) == 9;\n                if (bVar2) {\n                    *(in_RAX + 0x90) = 4;\n                }\n                return in_RAX & 0xffffff00 | bVar2;\n            }\n            unaff_EBX = 0x10;\n            *(*0x20 + -0x20) = 0x435513;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_EBX;\n        *(puVar1 + 0x14) = arg1;\n        *(puVar1 + -8) = 0x435526;\n        fcn.00457040();\n        in_RAX = *(puVar1 + 8);\n        unaff_EBX = *(puVar1 + 0x10);\n        arg1._0_4_ = *(puVar1 + 0x14);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 421
    },
    "0046fa20": {
        "rules": [
            "parse credit card information/3266979fad224c5386fccfb7f2b301b7"
        ],
        "decompiled_code": "\nvoid fcn.0046fa20(ulong noname_0, ulong arg2)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (in_RAX != 0) {\n        (**(in_RAX + 0x18))();\n        if ((unaff_RBX == 0x25) && (cVar1 = fcn.004021a0(0x25, arg2),  cVar1 != '\\0')) {\n            return;\n        }\n        fcn.0046b9a0();\n    }\n    return;\n}\n",
        "token_count": 189
    },
    "004508c0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint64_t fcn.004508c0(ulong param_1, ulong param_2)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n        unaff_RBX = unaff_RBX & 0xff;\n    }\n    iVar2 = fcn.004478a0();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    cVar1 = *(iVar2 + 0x28);\n    if ((cVar1 == '\\x12') || (cVar1 == '\\n')) {\n        return 0;\n    }\n    if (cVar1 != '\\x11') {\n        fcn.00447f80();\n        if (unaff_RBX < 8) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.004021a0(8, param_2);\n        }\n        return uVar3;\n    }\n    if (unaff_RBX != '\\0') {\n        return 0;\n    }\n    return *0x557c66 ^ 1;\n}\n",
        "token_count": 302
    },
    "0041f3e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041f3e0(void)\n\n{\n    uint8_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x80) = 0x41f405;\n            fcn.004324c0();\n            *(*0x20 + -0x40) = *(*(*0x20 + 8) + 0x68);\n            *(*0x20 + -0x48) = *(*(*0x20 + 8) + 0x30);\n            *(*0x20 + -0x80) = 0x41f425;\n            fcn.004324c0();\n            *(*0x20 + -0x80) = 0x41f436;\n            fcn.00432dc0();\n            *(*0x20 + -0x80) = 0x41f445;\n            fcn.00432d80();\n            *(*0x20 + -0x80) = 0x41f456;\n            fcn.00432dc0();\n            *(*0x20 + -0x80) = 0x41f465;\n            fcn.00432ac0();\n            *(*0x20 + -0x80) = 0x41f476;\n            fcn.00432dc0();\n            *(*0x20 + -0x80) = 0x41f485;\n            fcn.00432ac0();\n            *(*0x20 + -0x80) = 0x41f496;\n            fcn.00432dc0();\n            *(*0x20 + -0x80) = 0x41f49b;\n            fcn.00432540();\n            iVar2 = *(*0x20 + 8);\n            *(*0x20 + -0x38) = *(iVar2 + 0x50);\n            *(*0x20 + -0x30) = 1;\n            *(*0x20 + -0x28) = 0;\n            *(*0x20 + -0x20) = *(iVar2 + 0x48);\n            *(*0x20 + -0x18) = 1;\n            *(*0x20 + -0x10) = 0;\n            uVar3 = 0;\n            while (uVar3 <= *(iVar2 + 0x38) && *(iVar2 + 0x38) != uVar3) {\n                *(*0x20 + -0x58) = uVar3;\n                *(*0x20 + -0x50) = *(iVar2 + 0x68) * uVar3 + *(iVar2 + 0x18);\n                *(*0x20 + -0x80) = 0x41f510;\n                fcn.004324c0();\n                *(*0x20 + -0x80) = 0x41f51a;\n                fcn.00432c20();\n                *(*0x20 + -0x80) = 0x41f51f;\n                fcn.00432540();\n                if (*(*(*0x20 + 8) + 0x30) < *(*0x20 + -0x58) || *(*(*0x20 + 8) + 0x30) == *(*0x20 + -0x58)) {\n                    bVar5 = (**(*0x20 + -0x20) & *(*0x20 + -0x18)) != 0;\n                }\n                else {\n                    bVar5 = true;\n                }\n                *(*0x20 + -0x59) = bVar5;\n                if (bVar5 == false) {\n                    *(*0x20 + -0x80) = 0x41f575;\n                    fcn.004324c0();\n                    *(*0x20 + -0x80) = 0x41f586;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x80) = 0x41f58b;\n                    fcn.00432540();\n                }\n                else {\n                    *(*0x20 + -0x80) = 0x41f558;\n                    fcn.004324c0();\n                    *(*0x20 + -0x80) = 0x41f569;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x80) = 0x41f56e;\n                    fcn.00432540();\n                }\n                if ((**(*0x20 + -0x38) & *(*0x20 + -0x30)) == 0) {\n                    *(*0x20 + -0x80) = 0x41f5c5;\n                    fcn.004324c0();\n                    *(*0x20 + -0x80) = 0x41f5d6;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x80) = 0x41f5db;\n                    fcn.00432540();\n                }\n                else {\n                    *(*0x20 + -0x80) = 0x41f5a5;\n                    fcn.004324c0();\n                    *(*0x20 + -0x80) = 0x41f5b6;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x80) = 0x41f5bb;\n                    fcn.00432540();\n                }\n                if ((**(*0x20 + -0x38) & *(*0x20 + -0x30)) == 0) {\n                    uVar1 = 0;\n                }\n                else {\n                    uVar1 = *(*0x20 + -0x59) ^ 1;\n                }\n                *(*0x20 + -0x5a) = uVar1;\n                if (uVar1 != 0) {\n                    *(*0x20 + -0x80) = 0x41f609;\n                    fcn.004324c0();\n                    *(*0x20 + -0x80) = 0x41f61a;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x80) = 0x41f61f;\n                    fcn.00432540();\n                }\n                *(*0x20 + -0x80) = 0x41f625;\n                fcn.004324c0();\n                *(*0x20 + -0x80) = 0x41f62a;\n                fcn.00432720();\n                *(*0x20 + -0x80) = 0x41f62f;\n                fcn.00432540();\n                if (*(*0x20 + -0x5a) != '\\0') {\n                    *(*0x20 + -0x80) = 0x41f665;\n                    fcn.00432f20(0);\n                }\n                if (*(*0x20 + -0x30) == -0x80) {\n                    *(*0x20 + -0x38) = *(*0x20 + -0x38) + 1;\n                    *(*0x20 + -0x30) = 1;\n                }\n                else {\n                    *(*0x20 + -0x30) = *(*0x20 + -0x30) << 1;\n                }\n                *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\n                if (*(*0x20 + -0x18) == -0x80) {\n                    *(*0x20 + -0x20) = *(*0x20 + -0x20) + 1;\n                    *(*0x20 + -0x18) = 1;\n                }\n                else {\n                    *(*0x20 + -0x18) = *(*0x20 + -0x18) << 1;\n                }\n                *(*0x20 + -0x10) = *(*0x20 + -0x10) + 1;\n                iVar2 = *(*0x20 + 8);\n                uVar3 = *(*0x20 + -0x58) + 1;\n            }\n            *(*0x20 + -0x80) = 0x41f6c5;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x41f6d0;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 2015
    },
    "004262c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nint64_t fcn.004262c0(void)\n\n{\n    int64_t *in_RAX;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    uVar3 = in_RAX[1];\n    uVar2 = unaff_RBX - 1;\n    uVar1 = 1;\n    do {\n        if (uVar2 == 0) {\ncode_r0x0042631b:\n            uVar2 = 0;\n            if (uVar3 != 0) {\n                for (; (uVar3 >> uVar2 & 1) == 0; uVar2 = uVar2 + 1) {\n                }\n            }\n            if (uVar3 == 0) {\n                uVar2 = 0x40;\n            }\ncode_r0x00426328:\n            if (uVar2 < 0x40) {\n                uVar3 = (-(unaff_RBX < 0x40) & 1 << (unaff_RBX & 0x3f)) - 1 << (uVar2 & 0x3f);\n                if (*0x557c77 == '\\0') {\n                    fcn.00401d40();\n                }\n                else {\n                    popcnt(in_RAX[2] & uVar3);\n                }\n                uVar3 = ~uVar3;\n                in_RAX[1] = in_RAX[1] & uVar3;\n                in_RAX[2] = in_RAX[2] & uVar3;\n                return uVar2 * 0x2000 + *in_RAX;\n            }\n            return 0;\n        }\n        if (uVar2 <= uVar1) {\n            uVar3 = uVar3 >> (uVar2 & 0x3f) & uVar3;\n            goto code_r0x0042631b;\n        }\n        uVar3 = uVar3 & uVar3 >> (uVar1 & 0x3f);\n        if (uVar3 == 0) {\n            uVar2 = 0x40;\n            goto code_r0x00426328;\n        }\n        uVar2 = uVar2 - uVar1;\n        uVar1 = uVar1 << 1;\n    } while( true );\n}\n",
        "token_count": 569
    },
    "00426dc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nuint64_t fcn.00426dc0(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint8_t uVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    \n    uVar4 = 0xffffffffffffffff;\n    uVar5 = 0;\n    uVar9 = 0;\n    for (iVar2 = 0; iVar2 < 8; iVar2 = iVar2 + 1) {\n        uVar7 = *(in_RAX + iVar2 * 8);\n        if (uVar7 == 0) {\n            uVar5 = uVar5 + 0x40;\n        }\n        else {\n            iVar1 = 0;\n            if (uVar7 != 0) {\n                for (; (uVar7 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n                }\n            }\n            iVar10 = 0x3f;\n            if (uVar7 != 0) {\n                for (; uVar7 >> iVar10 == 0; iVar10 = iVar10 + -1) {\n                }\n            }\n            uVar5 = iVar1 + uVar5;\n            if (uVar4 == 0xffffffffffffffff) {\n                uVar4 = uVar5;\n            }\n            if (uVar9 < uVar5) {\n                uVar9 = uVar5;\n            }\n            iVar1 = 0x3f;\n            if (uVar7 != 0) {\n                for (; uVar7 >> iVar1 == 0; iVar1 = iVar1 + -1) {\n                }\n            }\n            if (uVar7 == 0) {\n                iVar10 = -1;\n            }\n            uVar5 = -(iVar10 + -0x3f);\n        }\n    }\n    if (uVar4 == 0xffffffffffffffff) {\n        return 0x8000040000200;\n    }\n    if (uVar9 < uVar5) {\n        uVar9 = uVar5;\n    }\n    if (0x3d < uVar9) {\n        if (uVar9 == 0x200000) {\n            uVar4 = 0x8000000000000000;\n        }\n        else {\n            uVar4 = (uVar9 & 0x1fffff) << 0x15 | uVar4 & 0x1fffff | (uVar5 & 0x1fffff) << 0x2a;\n        }\n        return uVar4;\n    }\n    iVar2 = 0;\n    do {\n        if (7 < iVar2) {\n            if (uVar9 == 0x200000) {\n                uVar4 = 0x8000000000000000;\n            }\n            else {\n                uVar4 = (uVar9 & 0x1fffff) << 0x15 | uVar4 & 0x1fffff | (uVar5 & 0x1fffff) << 0x2a;\n            }\n            return uVar4;\n        }\n        uVar7 = *(in_RAX + iVar2 * 8);\n        iVar1 = 0;\n        if (uVar7 != 0) {\n            for (; (uVar7 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n            }\n        }\n        uVar8 = iVar1;\n        if (uVar7 == 0) {\n            uVar8 = 0;\n        }\n        uVar7 = uVar7 >> (uVar8 & 0x3f);\n        if ((uVar7 + 1 & uVar7) != 0) {\n            uVar3 = 1;\n            uVar6 = uVar9;\ncode_r0x00426f78:\n            do {\n                if (uVar6 != 0) {\n                    if (uVar3 < uVar6) {\n                        uVar7 = uVar7 >> (uVar3 & 0x3f) | uVar7;\n                        if ((uVar7 & uVar7 + 1) == 0) break;\n                        uVar6 = uVar6 - uVar3;\n                        uVar3 = uVar3 << 1;\n                        goto code_r0x00426f78;\n                    }\n                    uVar7 = uVar7 | uVar7 >> (uVar6 & 0x3f);\n                    if ((uVar7 & uVar7 + 1) == 0) break;\n                }\n                uVar6 = ~uVar7;\n                iVar1 = 0;\n                if (uVar6 != 0) {\n                    for (; (uVar6 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n                    }\n                }\n                uVar8 = iVar1;\n                if (uVar6 == 0) {\n                    uVar8 = 0;\n                }\n                uVar7 = uVar7 >> (uVar8 & 0x3f);\n                uVar6 = 0;\n                if (uVar7 != 0) {\n                    for (; (uVar7 >> uVar6 & 1) == 0; uVar6 = uVar6 + 1) {\n                    }\n                }\n                if (uVar7 == 0) {\n                    uVar6 = 0x40;\n                }\n                uVar7 = uVar7 >> (uVar6 & 0x3f);\n                uVar9 = uVar9 + uVar6;\n            } while ((uVar7 & uVar7 + 1) != 0);\n        }\n        iVar2 = iVar2 + 1;\n    } while( true );\n}\n",
        "token_count": 1303
    },
    "00427060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nint64_t fcn.00427060(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    \n    arg1 = arg1 >> 6;\n    iVar3 = -1;\n    iVar5 = 0;\n    do {\n        if (7 < arg1) {\n            return -1;\n        }\n        uVar1 = *(in_RAX + arg1 * 8);\n        uVar6 = ~uVar1;\n        if (uVar6 == 0) {\n            iVar5 = 0;\n        }\n        else {\n            if (iVar3 == -1) {\n                iVar3 = 0;\n                if (uVar6 != 0) {\n                    for (; (uVar6 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n                    }\n                }\n                iVar3 = arg1 * 0x40 + iVar3;\n            }\n            iVar7 = 0;\n            if (uVar1 != 0) {\n                for (; (uVar1 >> iVar7 & 1) == 0; iVar7 = iVar7 + 1) {\n                }\n            }\n            if (uVar1 == 0) {\n                iVar7 = 0x40;\n            }\n            if (unaff_RBX <= iVar7 + iVar5) {\n                return arg1 * 0x40 - iVar5;\n            }\n            uVar4 = unaff_RBX - 1;\n            uVar2 = 1;\n            while (uVar4 != 0) {\n                if (uVar4 <= uVar2) {\n                    uVar6 = uVar6 >> (uVar4 & 0x3f) & uVar6;\n                    break;\n                }\n                uVar6 = uVar6 & uVar6 >> (uVar2 & 0x3f);\n                if (uVar6 == 0) {\n                    uVar4 = 0x40;\n                    goto code_r0x004270eb;\n                }\n                uVar4 = uVar4 - uVar2;\n                uVar2 = uVar2 << 1;\n            }\n            uVar4 = 0;\n            if (uVar6 != 0) {\n                for (; (uVar6 >> uVar4 & 1) == 0; uVar4 = uVar4 + 1) {\n                }\n            }\n            if (uVar6 == 0) {\n                uVar4 = 0x40;\n            }\ncode_r0x004270eb:\n            if (uVar4 < 0x40) {\n                return uVar4 + arg1 * 0x40;\n            }\n            iVar5 = 0x3f;\n            if (uVar1 != 0) {\n                for (; uVar1 >> iVar5 == 0; iVar5 = iVar5 + -1) {\n                }\n            }\n            if (uVar1 == 0) {\n                iVar5 = -1;\n            }\n            iVar5 = -(iVar5 + -0x3f);\n        }\n        arg1 = arg1 + 1;\n    } while( true );\n}\n",
        "token_count": 732
    },
    "00429300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00429300(void)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    ulong uVar3;\n    uint64_t uVar4;\n    ulong unaff_RBX;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    iVar2 = fcn.004297c0(in_RAX + 0x20);\n    uVar4 = *(in_RAX + 0x10);\n    uVar5 = iVar2 - 1U >> 9;\n    do {\n        if (uVar5 < uVar4) {\n            iVar6 = *(*(in_RAX + 8) + uVar5 * 8);\ncode_r0x00429452:\n            *(iVar6 + (iVar2 - 1U & 0x1ff) * 8 + 0x18) = unaff_RBX;\n            return;\n        }\n        fcn.00409300();\n        uVar4 = *(in_RAX + 0x10);\n        if (uVar4 <= uVar5) {\n            if (uVar4 == *(in_RAX + 0x18)) {\n                iVar6 = *(in_RAX + 0x18) << 1;\n                if (iVar6 == 0) {\n                    iVar6 = 0x100;\n                }\n                uVar3 = fcn.0040b720(0x559b78);\n                if (*(in_RAX + 0x18) != 0) {\n                    fcn.0045a040(*(in_RAX + 0x18) << 3);\n                }\n                *(in_RAX + 8) = uVar3;\n                *(in_RAX + 0x18) = iVar6;\n            }\n            iVar6 = fcn.00429720();\n            *(uVar5 * 8 + *(in_RAX + 8)) = iVar6;\n            iVar1 = *(in_RAX + 0x10);\n            *(in_RAX + 0x10) = uVar4 + 1;\n            fcn.00409520(iVar1);\n            goto code_r0x00429452;\n        }\n        fcn.00409520();\n    } while( true );\n}\n",
        "token_count": 544
    },
    "00425ce0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint64_t fcn.00425ce0(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t arg2;\n    int64_t iVar7;\n    uint64_t arg1_00;\n    uint64_t arg1_01;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x00425ce0:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x20 && *0x20 + -0x20 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0xa0;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + 0x10) = unaff_RBX;\n        if (((unaff_RBX & 0x3fffff) == 0) && ((arg1 & 0x3fffff) == 0)) {\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = in_XMM15;\n            *(*0x20 + -0x30) = 0x426180;\n            *(*0x20 + -0x28) = in_RAX;\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = 0x426100;\n            *(*0x20 + -0x18) = 0x48a390;\n            *(*0x20 + -0x10) = *0x20 + -0x30;\n            *(*0x20 + -0xa8) = 0x425daa;\n            uVar2 = fcn.004287e0(0x48a390, in_RAX + 0x10090);\n            *(*0x20 + -0x58) = uVar2;\n            iVar5 = 0;\n            do {\n                if (4 < iVar5) {\n                    return uVar2;\n                }\n                *(*0x20 + -0x60) = iVar5;\n                uVar4 = *(*0x20 + 0x18);\n                *(*0x20 + -0xa8) = 0x425de5;\n                arg1 = fcn.00428520();\n                *(*0x20 + -0xa8) = 0x425e0a;\n                iVar3 = (**0x48a390)(uVar4, 0x48a390);\n                iVar5 = *(*0x20 + -0x60);\n                iVar7 = *(*0x20 + 8);\n                arg2 = *(iVar7 + 0x10 + iVar5 * 0x18);\n                if (*(iVar7 + 8 + iVar5 * 0x18) < arg1) {\n                    if (arg2 < arg1) goto code_r0x0042604f;\n                    *(iVar7 + 8 + iVar5 * 0x18) = arg1;\n                }\n                arg1_00 = *(iVar7 + 8 + iVar5 * 0x18);\n                iVar1 = *(iVar7 + iVar5 * 0x18);\n                arg2 = -*0x557df8;\n                uVar2 = (*0x557df8 + arg1 * 8) - 1 & arg2;\n                if (arg1_00 == 0) goto code_r0x00426045;\n                arg2 = (iVar3 << 3 & arg2) + iVar1;\n                arg1_00 = uVar2 + iVar1;\n                uVar2 = *(*0x20 + -0x58);\n                if (0 < uVar2) {\n                    iVar5 = *(iVar7 + 0x10090);\n                    arg1_01 = *(iVar7 + 0x10098);\n                    if (arg1_01 <= uVar2 - 1) goto code_r0x00426035;\n                    *(*0x20 + -0x78) = arg2;\n                    *(*0x20 + -0x80) = arg1_00;\n                    uVar4 = *((uVar2 - 1) * 0x10 + 8 + iVar5);\n                    *(*0x20 + -0xa8) = 0x425ec7;\n                    uVar4 = (**(*0x20 + -0x20))(uVar4, *0x20 + -0x20);\n                    arg1 = *(*0x20 + -0x80);\n                    *(*0x20 + -0xa8) = 0x425edc;\n                    arg2 = fcn.004285a0(uVar4);\n                    iVar5 = *(*0x20 + -0x60);\n                    iVar7 = *(*0x20 + 8);\n                    uVar2 = *(*0x20 + -0x58);\n                    arg1_00 = arg1;\n                }\n                iVar3 = *(iVar7 + 0x10090);\n                arg1_01 = *(iVar7 + 0x10098);\n                if (uVar2 < arg1_01) {\n                    if (arg1_01 <= uVar2) goto code_r0x0042602d;\n                    *(*0x20 + -0x70) = arg1_00;\n                    *(*0x20 + -0x68) = arg2;\n                    uVar4 = *(uVar2 * 0x10 + 8 + iVar3);\n                    *(*0x20 + -0xa8) = 0x425f3c;\n                    uVar4 = (**(*0x20 + -0x20))(uVar4, *0x20 + -0x20);\n                    arg1_00 = *(*0x20 + -0x70);\n                    *(*0x20 + -0xa8) = 0x425f51;\n                    arg2 = fcn.004285a0(uVar4);\n                    iVar5 = *(*0x20 + -0x60);\n                    uVar2 = *(*0x20 + -0x58);\n                }\n                if (arg2 + 0x800000000000 < arg1_00 + 0x800000000000) {\n                    iVar7 = arg1_00 - arg2;\n                }\n                else {\n                    iVar7 = 0;\n                }\n                if (iVar7 != 0) {\n                    *(*0x20 + -0x38) = arg2 + 0x800000000000;\n                    *(*0x20 + -0x40) = arg1_00 + 0x800000000000;\n                    *(*0x20 + -0x48) = arg1_00;\n                    *(*0x20 + -0x50) = arg2;\n                    *(*0x20 + -0xa8) = 0x425fce;\n                    fcn.004298a0();\n                    if (*(*0x20 + -0x38) < *(*0x20 + -0x40)) {\n                        iVar5 = *(*0x20 + -0x48) - *(*0x20 + -0x50);\n                    }\n                    else {\n                        iVar5 = 0;\n                    }\n                    *(*0x20 + -0xa8) = 0x425ffc;\n                    fcn.00413400(iVar5);\n                    uVar2 = *(*0x20 + -0x58);\n                    iVar5 = *(*0x20 + -0x60);\n                }\n                iVar5 = iVar5 + 1;\n            } while( true );\n        }\n        goto code_r0x0042605a;\n    }\n    goto code_r0x004260bc;\ncode_r0x0042602d:\n    *(*0x20 + -0xa8) = 0x426035;\n    fcn.00459720(arg1_01);\ncode_r0x00426035:\n    *(*0x20 + -0xa8) = 0x426045;\n    fcn.00459720(arg1_01);\ncode_r0x00426045:\n    *(*0x20 + -0xa8) = 0x42604f;\n    fcn.00459720(arg1_00);\ncode_r0x0042604f:\n    *(*0x20 + -0xa8) = 0x42605a;\n    fcn.004597a0(arg1, arg2);\ncode_r0x0042605a:\n    *(*0x20 + -0xa8) = 0x42605f;\n    fcn.004324c0();\n    *(*0x20 + -0xa8) = 0x426070;\n    fcn.00432dc0();\n    *(*0x20 + -0xa8) = 0x42607d;\n    fcn.00432c20();\n    *(*0x20 + -0xa8) = 0x42608e;\n    fcn.00432dc0();\n    *(*0x20 + -0xa8) = 0x42609b;\n    fcn.00432c20();\n    *(*0x20 + -0xa8) = 0x4260a5;\n    fcn.00432720();\n    *(*0x20 + -0xa8) = 0x4260aa;\n    fcn.00432540();\n    unaff_RBX = 0x2e;\n    *(*0x20 + -0xa8) = 0x4260bb;\n    in_RAX = fcn.00430d40();\ncode_r0x004260bc:\n    *(puVar6 + 8) = in_RAX;\n    *(puVar6 + 0x10) = unaff_RBX;\n    *(puVar6 + 0x18) = arg1;\n    *(puVar6 + -8) = 0x4260d0;\n    fcn.00457040();\n    in_RAX = *(puVar6 + 8);\n    unaff_RBX = *(puVar6 + 0x10);\n    arg1 = *(puVar6 + 0x18);\n    *0x20 = puVar6;\n    goto code_r0x00425ce0;\n}\n",
        "token_count": 2316
    },
    "00434ac0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.00434ac0(void)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    *0x557c9c = 1;\n    for (iVar2 = 0; iVar2 < 5; iVar2 = iVar2 + 1) {\n        *0x5048a4 = 0x7fffffff;\n        *0x5048a0 = 1;\n        cVar1 = fcn.0043dde0();\n        if (cVar1 == '\\0') break;\n        fcn.0042d8e0();\n    }\n    fcn.0042d8e0();\n    fcn.0043dde0();\n    fcn.0042d8e0();\n    return;\n}\n",
        "token_count": 218
    },
    "004461e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\nvoid fcn.004461e0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t unaff_R14;\n    ulong uStack0000000000000040;\n    \n    uStack0000000000000040 = arg3;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.004599b0();\n    fcn.00445ca0(5);\n    return;\n}\n",
        "token_count": 133
    },
    "004090a0": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint64_t fcn.004090a0(void)\n\n{\n    uint64_t *in_RAX;\n    uint64_t uVar1;\n    uint64_t *unaff_RBX;\n    uint64_t uVar2;\n    uint64_t *puVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = unaff_RBX[1] + 1;\n            unaff_RBX[1] = uVar1;\n            uVar2 = unaff_RBX << 0x10 | uVar1 & 0x7ffff;\n            puVar3 = (uVar2 >> 0x13) * 8;\n            if (unaff_RBX == puVar3) {\n                do {\n                    uVar1 = *in_RAX;\n                    *unaff_RBX = uVar1;\n                    LOCK();\n                    bVar5 = uVar1 == *in_RAX;\n                    *in_RAX = *in_RAX ^ bVar5 * (*in_RAX ^ uVar2);\n                } while (!bVar5);\n                return uVar1 ^ !bVar5 * (uVar1 ^ *in_RAX);\n            }\n            *(*0x20 + -0x20) = uVar1;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x28) = uVar2;\n            *(*0x20 + -0x18) = puVar3;\n            *(*0x20 + -0x40) = 0x409128;\n            fcn.004324c0();\n            *(*0x20 + -0x40) = 0x409139;\n            fcn.00432dc0();\n            *(*0x20 + -0x40) = 0x409145;\n            fcn.00432d40();\n            *(*0x20 + -0x40) = 0x409156;\n            fcn.00432dc0();\n            *(*0x20 + -0x40) = 0x409165;\n            fcn.00432c20();\n            *(*0x20 + -0x40) = 0x409176;\n            fcn.00432dc0();\n            *(*0x20 + -0x40) = 0x409185;\n            fcn.00432c20();\n            *(*0x20 + -0x40) = 0x409196;\n            fcn.00432dc0();\n            *(*0x20 + -0x40) = 0x4091a5;\n            fcn.00432d40();\n            *(*0x20 + -0x40) = 0x4091aa;\n            fcn.00432720();\n            *(*0x20 + -0x40) = 0x4091af;\n            fcn.00432540();\n            unaff_RBX = 0xc;\n            *(*0x20 + -0x40) = 0x4091c5;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x4091d5;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 876
    },
    "00409200": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid fcn.00409200(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == ((in_RAX << 0x10 | 0x7ffffU) >> 0x13) * 8) {\n                return;\n            }\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x30) = 0x409246;\n            fcn.004324c0();\n            *(*0x20 + -0x18) = *(*0x20 + -0x10);\n            *(*0x20 + -0x30) = 0x409255;\n            fcn.004324c0();\n            *(*0x20 + -0x30) = 0x409266;\n            fcn.00432dc0();\n            *(*0x20 + -0x30) = 0x409270;\n            fcn.00432c20();\n            *(*0x20 + -0x30) = 0x409275;\n            fcn.00432720();\n            *(*0x20 + -0x30) = 0x40927a;\n            fcn.00432540();\n            *(*0x20 + -0x30) = 0x40928b;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x409296;\n        fcn.00457040();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 478
    },
    "00422020": {
        "rules": [
            "encrypt data using HC-128/01272f7612224ac7bcc403d9d7459f40"
        ],
        "decompiled_code": "\nulong fcn.00422020(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    int64_t iVar4;\n    int64_t arg1;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    iVar4 = (unaff_RBX + 0x1ffU & 0xfffffffffffffe00) * 0x2000;\n    uVar1 = iVar4 + *(in_RAX + 0x10428);\n    uVar5 = (*0x557df8 + uVar1) - 1 & -*0x557df8;\n    if ((*(in_RAX + 0x10430) < uVar5) || (uVar1 < *(in_RAX + 0x10428))) {\n        iVar2 = fcn.00409fc0();\n        if (iVar2 == 0) {\n            fcn.004324c0();\n            fcn.00432dc0();\n            fcn.00432ac0();\n            fcn.00432dc0();\n            fcn.00432ac0();\n            fcn.00432dc0();\n            fcn.00432540();\n            return 0;\n        }\n        if (iVar2 == *(in_RAX + 0x10430)) {\n            *(in_RAX + 0x10430) = iVar2 + iVar4;\n            arg1 = 0;\n        }\n        else {\n            arg1 = *(in_RAX + 0x10430) - *(in_RAX + 0x10428);\n            if (arg1 == 0) {\n                arg1 = 0;\n            }\n            else {\n                fcn.004138a0(0x559b10);\n                LOCK();\n                *0x559b20 = *0x559b20 + arg1;\n                iVar3 = fcn.00429960();\n                LOCK();\n                *(iVar3 + 8) = *(iVar3 + 8) + arg1;\n                fcn.00429a60();\n                fcn.00423a40(arg1);\n            }\n            *(in_RAX + 0x10428) = iVar2;\n            *(in_RAX + 0x10430) = iVar2 + iVar4;\n        }\n        uVar5 = -*0x557df8 & (*0x557df8 + *(in_RAX + 0x10428) + iVar4) - 1U;\n    }\n    else {\n        arg1 = 0;\n    }\n    iVar4 = *(in_RAX + 0x10428);\n    *(in_RAX + 0x10428) = uVar5;\n    iVar4 = uVar5 - iVar4;\n    fcn.004138a0(0x559b10);\n    LOCK();\n    *0x559b20 = *0x559b20 + iVar4;\n    iVar2 = fcn.00429960();\n    LOCK();\n    *(iVar2 + 8) = *(iVar2 + 8) + iVar4;\n    fcn.00429a60();\n    fcn.00423a40(iVar4);\n    if (*(in_RAX + 0x10180) < (*0x559b10 - *0x559b20) + iVar4 + arg1) {\n        fcn.0041c4a0(0);\n    }\n    return 1;\n}\n",
        "token_count": 804
    },
    "0042c4a0": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nulong fcn.0042c4a0(ulong arg1)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t arg1_00;\n    uint64_t uVar3;\n    uint64_t arg1_01;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x30) = in_RAX;\n            *(*0x20 + -0x78) = 0x42c4d9;\n            fcn.00409300();\n            unaff_RBX = *(*0x20 + 0x18);\n            if (unaff_RBX < 0x40000001) {\n                *(*0x20 + -0x38) = unaff_RBX;\n                *(*0x20 + -0x20) = *(*0x20 + 0x10);\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = 0x40000000;\n                iVar2 = *(*0x20 + -0x20);\n                *(*0x20 + -0x28) = iVar2;\n                arg1_00 = 0;\n                uVar3 = 0;\n                while (arg1_00 < unaff_RBX) {\n                    uVar1 = *(iVar2 + arg1_00);\n                    if (*(iVar2 + arg1_00) < 0x80) {\n                        arg1_01 = uVar3;\n                        uVar3 = unaff_RBX;\n                        arg1_00 = arg1_00 + 1;\n                    }\n                    else {\n                        *(*0x20 + -0x48) = uVar3;\n                        *(*0x20 + -0x78) = 0x42c54d;\n                        uVar1 = fcn.00452e40(arg1_00);\n                        arg1_01 = *(*0x20 + -0x48);\n                        iVar2 = *(*0x20 + -0x28);\n                        uVar3 = *(*0x20 + -0x38);\n                        arg1_00 = unaff_RBX;\n                    }\n                    unaff_RBX = uVar3;\n                    if (0x3e5 < arg1_01) {\n                        if (1000 < arg1_01) goto code_r0x0042c6c5;\n                        *(*0x20 + -0x4c) = uVar1;\n                        *(*0x20 + -0x40) = arg1_00;\n                        *(*0x20 + -0x78) = 0x42c599;\n                        fcn.0042c720(arg1_01);\n                        iVar2 = *(*0x20 + -0x28);\n                        unaff_RBX = *(*0x20 + -0x38);\n                        uVar1 = *(*0x20 + -0x4c);\n                        arg1_00 = *(*0x20 + -0x40);\n                        arg1_01 = 0;\n                    }\n                    if (uVar1 < 0x10000) {\n                        if (999 < arg1_01) goto code_r0x0042c6b3;\n                        *(arg1_01 * 2 + 0x559300) = uVar1;\n                        uVar3 = arg1_01 + 1;\n                    }\n                    else {\n                        if (999 < arg1_01) goto code_r0x0042c6a6;\n                        *(arg1_01 * 2 + 0x559300) = (uVar1 - 0x10000 >> 10 & 0x3ff) + 0xd800;\n                        if (999 < arg1_01 + 1) goto code_r0x0042c699;\n                        *(arg1_01 * 2 + 0x559302) = (uVar1 - 0x10000 & 0x3ff) + 0xdc00;\n                        uVar3 = arg1_01 + 2;\n                    }\n                }\n                if (uVar3 < 0x3e9) {\n                    *(*0x20 + -0x78) = 0x42c66f;\n                    fcn.0042c720(uVar3);\n                    *(*0x20 + -0x78) = 0x42c67d;\n                    fcn.00409520();\n                    return *(*0x20 + -0x38);\n                }\n                arg1_01 = 1000;\n                *(*0x20 + -0x78) = 0x42c699;\n                fcn.004597a0(uVar3, 1000);\ncode_r0x0042c699:\n                *(*0x20 + -0x78) = 0x42c6a6;\n                fcn.00459720(1000);\ncode_r0x0042c6a6:\n                *(*0x20 + -0x78) = 0x42c6b3;\n                fcn.00459720(1000);\ncode_r0x0042c6b3:\n                *(*0x20 + -0x78) = 0x42c6c5;\n                fcn.00459720(1000);\ncode_r0x0042c6c5:\n                *(*0x20 + -0x78) = 0x42c6d2;\n                fcn.004597a0(arg1_01, 1000);\n            }\n            *(*0x20 + -0x78) = 0x42c6df;\n            uVar3 = unaff_RBX;\n            in_RAX = fcn.00459760(unaff_RBX, 0x40000000);\n            arg1._0_4_ = uVar3;\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x42c6f3;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1._0_4_ = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1542
    },
    "00442160": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid fcn.00442160(void)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t arg1;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            arg1 = 0;\n            while( true ) {\n                if (0x35 < arg1) {\n                    return;\n                }\n                uVar1 = *(arg1 + 0x4890d7);\n                if (uVar1 < 0x80) {\n                    uVar2 = arg1;\n                    arg1 = arg1 + 1;\n                }\n                else {\n                    *(*0x20 + -0x10) = arg1;\n                    *(*0x20 + -0x30) = 0x4421c5;\n                    uVar1 = fcn.00452e40(arg1);\n                    arg1 = 0x36;\n                    uVar2 = *(*0x20 + -0x10);\n                }\n                if (99 < uVar2) break;\n                *(uVar2 + 0x558100) = uVar1;\n                *0x557c88 = *0x557c88 + 1;\n            }\n            *(*0x20 + -0x30) = 0x4421f2;\n            fcn.00459720(100);\n        }\n        *(puVar3 + -8) = 0x4421f8;\n        fcn.00457040();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 433
    },
    "0044c280": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuint64_t fcn.0044c280(uint64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    uint64_t unaff_RSI;\n    ulong *puVar4;\n    \n    puVar4 = *(in_RAX + 0x20 + (unaff_RSI & 0x1fff) * 8);\n    do {\n        if (puVar4 == NULL) {\n            return 0;\n        }\n        if ((puVar4[1] == unaff_RSI) && (uVar3 = puVar4[3],  arg1 == uVar3)) {\n            if (0x80 < uVar3) {\n                fcn.00459760(uVar3, 0x80);\n                pcVar1 = swi(3);\n                uVar3 = (*pcVar1)();\n                return uVar3;\n            }\n            iVar2 = 0;\n            while( true ) {\n                if (uVar3 <= iVar2) {\n                    return *(puVar4 + 2);\n                }\n                if (*(unaff_RBX + iVar2 * 8) != puVar4[iVar2 + 4]) break;\n                iVar2 = iVar2 + 1;\n            }\n        }\n        puVar4 = *puVar4;\n    } while( true );\n}\n",
        "token_count": 310
    },
    "004571e0": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid fcn.004571e0(ulong param_1, ulong param_2, ulong param_3, ulong param_4, uint32_t param_5)\n\n{\n    uint64_t *puVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uchar *unaff_RBP;\n    uchar *puVar5;\n    int64_t in_GS_OFFSET;\n    ulong uStackX8;\n    code **ppcStackX16;\n    uchar *puStackX24;\n    uint32_t uStackX32;\n    uint32_t uStackX36;\n    uchar auStack524296 [128];\n    uchar auStack524168 [262016];\n    uchar auStack262152 [128];\n    uchar auStack262024 [130944];\n    uchar auStack131080 [128];\n    uchar auStack130952 [65400];\n    ulong uStack65552;\n    uchar auStack65544 [128];\n    uchar auStack65416 [32632];\n    ulong uStack32784;\n    uchar auStack32776 [128];\n    uchar auStack32648 [16248];\n    ulong uStack16400;\n    uchar auStack16392 [128];\n    uchar auStack16264 [8056];\n    ulong uStack8208;\n    uchar auStack8200 [128];\n    uchar auStack8072 [3960];\n    ulong uStack4112;\n    uchar auStack4104 [128];\n    uchar auStack3976 [1912];\n    ulong uStack2064;\n    uchar auStack2056 [128];\n    uchar auStack1928 [888];\n    ulong uStack1040;\n    uchar auStack1032 [128];\n    uchar auStack904 [376];\n    ulong uStack528;\n    uchar auStack520 [128];\n    uchar auStack392 [120];\n    ulong uStack272;\n    uchar auStack264 [120];\n    ulong uStack144;\n    uchar auStack136 [56];\n    ulong uStack80;\n    uchar auStack72 [24];\n    ulong uStack48;\n    uchar auStack40 [8];\n    ulong uStack32;\n    uchar auStack24 [16];\n    \n    if (param_5 < 0x11) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *0x20 < *puVar1 || *0x20 == *puVar1) {\n            fcn.00457040();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack24;\n        }\n        puVar5 = auStack24;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack32 = 0x457425;\n        fcn.00457120();\n        uStack32 = 0x457430;\n        (**ppcStackX16)();\n        uStack32 = 0x45743a;\n        fcn.00457060(uVar4, ppcStackX16, param_3, param_4);\n        uStack32 = 0x45745d;\n        fcn.004560c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x21) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *0x20 < *puVar1 || *0x20 == *puVar1) {\n            fcn.00457040();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack40;\n        }\n        puVar5 = auStack40;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack48 = 0x4574e5;\n        fcn.00457120();\n        uStack48 = 0x4574f0;\n        (**ppcStackX16)();\n        uStack48 = 0x4574fa;\n        fcn.00457060(uVar4, ppcStackX16, param_3, param_4);\n        uStack48 = 0x45751d;\n        fcn.004560c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x41) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *0x20 < *puVar1 || *0x20 == *puVar1) {\n            fcn.00457040();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack72;\n        }\n        puVar5 = auStack72;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack80 = 0x4575a5;\n        fcn.00457120();\n        uStack80 = 0x4575b0;\n        (**ppcStackX16)();\n        uStack80 = 0x4575ba;\n        fcn.00457060(uVar4, ppcStackX16, param_3, param_4);\n        uStack80 = 0x4575dd;\n        fcn.004560c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x81) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n              &stack0xfffffffffffffff8 < *puVar1 || &stack0xfffffffffffffff8 == *puVar1) {\n            fcn.00457040();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack136;\n        }\n        puVar5 = auStack136;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack144 = 0x457684;\n        fcn.00457120();\n        uStack144 = 0x457692;\n        (**ppcStackX16)();\n        uStack144 = 0x45769f;\n        fcn.00457060(uVar4, ppcStackX16, param_3, param_4);\n        uStack144 = 0x4576ce;\n        fcn.004560c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x101) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  auStack136 < *puVar1 || auStack136 == *puVar1) {\n            fcn.00457040();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack264;\n        }\n        puVar5 = auStack264;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack272 = 0x457787;\n        fcn.00457120();\n        uStack272 = 0x457795;\n        (**ppcStackX16)();\n        uStack272 = 0x4577a2;\n        fcn.00457060(uVar4, ppcStackX16, param_3, param_4);\n        uStack272 = 0x4577d1;\n        fcn.004560c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x201) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  auStack392 < *puVar1 || auStack392 == *puVar1) {\n            fcn.00457040();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack520;\n        }\n        puVar5 = auStack520;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack528 = 0x457887;\n        fcn.00457120();\n        uStack528 = 0x457895;\n        (**ppcStackX16)();\n        uStack528 = 0x4578a2;\n        fcn.00457060(uVar4, ppcStackX16, param_3, param_4);\n        uStack528 = 0x4578d1;\n        fcn.004560c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x401) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  auStack904 < *puVar1 || auStack904 == *puVar1) {\n            fcn.00457040();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack1032;\n        }\n        puVar5 = auStack1032;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack1040 = 0x457987;\n        fcn.00457120();\n        uStack1040 = 0x457995;\n        (**ppcStackX16)();\n        uStack1040 = 0x4579a2;\n        fcn.00457060(uVar4, ppcStackX16, param_3, param_4);\n        uStack1040 = 0x4579d1;\n        fcn.004560c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x801) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  auStack1928 < *puVar1 || auStack1928 == *puVar1) {\n            fcn.00457040();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack2056;\n        }\n        puVar5 = auStack2056;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack2064 = 0x457a87;\n        fcn.00457120();\n        uStack2064 = 0x457a95;\n        (**ppcStackX16)();\n        uStack2064 = 0x457aa2;\n        fcn.00457060(uVar4, ppcStackX16, param_3, param_4);\n        uStack2064 = 0x457ad1;\n        fcn.004560c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x1001) {\n        while( true ) {\n            if ((0xf87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack3976 && auStack3976 != *puVar1)) break;\n            fcn.00457040();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack4104;\n        }\n        puVar5 = auStack4104;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack4112 = 0x457b8f;\n        fcn.00457120();\n        uStack4112 = 0x457b9d;\n        (**ppcStackX16)();\n        uStack4112 = 0x457baa;\n        fcn.00457060(uVar4, ppcStackX16, param_3, param_4);\n        uStack4112 = 0x457bd9;\n        fcn.004560c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x2001) {\n        while( true ) {\n            if ((0x1f87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack8072 && auStack8072 != *puVar1)) break;\n            fcn.00457040();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack8200;\n        }\n        puVar5 = auStack8200;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack8208 = 0x457c8f;\n        fcn.00457120();\n        uStack8208 = 0x457c9d;\n        (**ppcStackX16)();\n        uStack8208 = 0x457caa;\n        fcn.00457060(uVar4, ppcStackX16, param_3, param_4);\n        uStack8208 = 0x457cd9;\n        fcn.004560c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x4001) {\n        while( true ) {\n            if ((0x3f87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack16264 && auStack16264 != *puVar1)) break;\n            fcn.00457040();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack16392;\n        }\n        puVar5 = auStack16392;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack16400 = 0x457d8f;\n        fcn.00457120();\n        uStack16400 = 0x457d9d;\n        (**ppcStackX16)();\n        uStack16400 = 0x457daa;\n        fcn.00457060(uVar4, ppcStackX16, param_3, param_4);\n        uStack16400 = 0x457dd9;\n        fcn.004560c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x8001) {\n        while( true ) {\n            if ((0x7f87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack32648 && auStack32648 != *puVar1)) break;\n            fcn.00457040();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack32776;\n        }\n        puVar5 = auStack32776;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack32784 = 0x457e8f;\n        fcn.00457120();\n        uStack32784 = 0x457e9d;\n        (**ppcStackX16)();\n        uStack32784 = 0x457eaa;\n        fcn.00457060(uVar4, ppcStackX16, param_3, param_4);\n        uStack32784 = 0x457ed9;\n        fcn.004560c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x10001) {\n        while( true ) {\n            if ((0xff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack65416 && auStack65416 != *puVar1)) break;\n            fcn.00457040();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack65544;\n        }\n        puVar5 = auStack65544;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack65552 = 0x457f8f;\n        fcn.00457120();\n        uStack65552 = 0x457f9d;\n        (**ppcStackX16)();\n        uStack65552 = 0x457faa;\n        fcn.00457060(uVar4, ppcStackX16, param_3, param_4);\n        uStack65552 = 0x457fd9;\n        fcn.004560c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x20001) {\n        while( true ) {\n            if ((0x1ff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack130952 && auStack130952 != *puVar1)) break;\n            fcn.00457040();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack131080;\n        }\n        puVar5 = auStack131080;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.00457120();\n        (**ppcStackX16)();\n        fcn.00457060(uVar4, ppcStackX16, param_3, param_4);\n        fcn.004560c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x40001) {\n        while( true ) {\n            if ((0x3ff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack262024 && auStack262024 != *puVar1)) break;\n            fcn.00457040();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack262152;\n        }\n        puVar5 = auStack262152;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.00457120();\n        (**ppcStackX16)();\n        fcn.00457060(uVar4, ppcStackX16, param_3, param_4);\n        fcn.004560c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x80001) {\n        while( true ) {\n            if ((0x7ff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack524168 && auStack524168 != *puVar1)) break;\n            fcn.00457040();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack524296;\n        }\n        puVar5 = auStack524296;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.00457120();\n        (**ppcStackX16)();\n        fcn.00457060(uVar4, ppcStackX16, param_3, param_4);\n        fcn.004560c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x100001) {\n        while( true ) {\n            if ((0xfff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xfffffffffff00078 && &stack0xfffffffffff00078 != *puVar1)) break;\n            fcn.00457040();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffffeffff8;\n        }\n        puVar5 = &stack0xffffffffffeffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.00457120();\n        (**ppcStackX16)();\n        fcn.00457060(uVar4, ppcStackX16, param_3, param_4);\n        fcn.004560c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x200001) {\n        while( true ) {\n            if ((0x1fff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffffe00078 && &stack0xffffffffffe00078 != *puVar1)) break;\n            fcn.00457040();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffffdffff8;\n        }\n        puVar5 = &stack0xffffffffffdffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.00457120();\n        (**ppcStackX16)();\n        fcn.00457060(uVar4, ppcStackX16, param_3, param_4);\n        fcn.004560c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x400001) {\n        while( true ) {\n            if ((0x3fff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffffc00078 && &stack0xffffffffffc00078 != *puVar1)) break;\n            fcn.00457040();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffffbffff8;\n        }\n        puVar5 = &stack0xffffffffffbffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.00457120();\n        (**ppcStackX16)();\n        fcn.00457060(uVar4, ppcStackX16, param_3, param_4);\n        fcn.004560c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x800001) {\n        while( true ) {\n            if ((0x7fff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffff800078 && &stack0xffffffffff800078 != *puVar1)) break;\n            fcn.00457040();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffff7ffff8;\n        }\n        puVar5 = &stack0xffffffffff7ffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.00457120();\n        (**ppcStackX16)();\n        fcn.00457060(uVar4, ppcStackX16, param_3, param_4);\n        fcn.004560c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x1000001) {\n        while( true ) {\n            if ((0xffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffff000078 && &stack0xffffffffff000078 != *puVar1)) break;\n            fcn.00457040();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xfffffffffefffff8;\n        }\n        puVar5 = &stack0xfffffffffefffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.00457120();\n        (**ppcStackX16)();\n        fcn.00457060(uVar4, ppcStackX16, param_3, param_4);\n        fcn.004560c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x2000001) {\n        while( true ) {\n            if ((0x1ffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xfffffffffe000078 && &stack0xfffffffffe000078 != *puVar1)) break;\n            fcn.00457040();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xfffffffffdfffff8;\n        }\n        puVar5 = &stack0xfffffffffdfffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.00457120();\n        (**ppcStackX16)();\n        fcn.00457060(uVar4, ppcStackX16, param_3, param_4);\n        fcn.004560c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x4000001) {\n        while( true ) {\n            if ((0x3ffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xfffffffffc000078 && &stack0xfffffffffc000078 != *puVar1)) break;\n            fcn.00457040();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xfffffffffbfffff8;\n        }\n        puVar5 = &stack0xfffffffffbfffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.00457120();\n        (**ppcStackX16)();\n        fcn.00457060(uVar4, ppcStackX16, param_3, param_4);\n        fcn.004560c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x8000001) {\n        while( true ) {\n            if ((0x7ffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xfffffffff8000078 && &stack0xfffffffff8000078 != *puVar1)) break;\n            fcn.00457040();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xfffffffff7fffff8;\n        }\n        puVar5 = &stack0xfffffffff7fffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.00457120();\n        (**ppcStackX16)();\n        fcn.00457060(uVar4, ppcStackX16, param_3, param_4);\n        fcn.004560c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x10000001) {\n        while( true ) {\n            if ((0xfffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xfffffffff0000078 && &stack0xfffffffff0000078 != *puVar1)) break;\n            fcn.00457040();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffeffffff8;\n        }\n        puVar5 = &stack0xffffffffeffffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.00457120();\n        (**ppcStackX16)();\n        fcn.00457060(uVar4, ppcStackX16, param_3, param_4);\n        fcn.004560c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x20000001) {\n        while( true ) {\n            if ((0x1fffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffe0000078 && &stack0xffffffffe0000078 != *puVar1)) break;\n            fcn.00457040();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffdffffff8;\n        }\n        puVar5 = &stack0xffffffffdffffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.00457120();\n        (**ppcStackX16)();\n        fcn.00457060(uVar4, ppcStackX16, param_3, param_4);\n        fcn.004560c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x40000001) {\n        while( true ) {\n            if ((0x3fffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffc0000078 && &stack0xffffffffc0000078 != *puVar1)) break;\n            fcn.00457040();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffbffffff8;\n        }\n        puVar5 = &stack0xffffffffbffffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.00457120();\n        (**ppcStackX16)();\n        fcn.00457060(uVar4, ppcStackX16, param_3, param_4);\n        fcn.004560c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    iVar3 = **(in_GS_OFFSET + 0x28);\n    do {\n        puVar1 = iVar3 + 0x10;\n        if (*puVar1 <= *0x20 && *0x20 != *puVar1) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x433f47;\n            fcn.004305a0();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x433f4d;\n        fcn.00457040();\n    } while( true );\n}\n",
        "token_count": 9374
    },
    "0046fc80": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nulong fcn.0046fc80(void)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    ulong uVar3;\n    uint64_t arg1;\n    int64_t unaff_RBX;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x0046fc80:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x90;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x40) = unaff_RBX;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        iVar4 = 0;\n        do {\n            if (unaff_RBX <= iVar4) {\n                return *(*0x20 + -0x20);\n            }\n            uVar1 = *(in_RAX + iVar4);\n            if (*(in_RAX + iVar4) < 0x80) {\n                unaff_RBX = iVar4 + 1;\n            }\n            else {\n                *(*0x20 + -0x98) = 0x46fd32;\n                uVar1 = fcn.00452e40(iVar4);\n            }\n            *(*0x20 + -0x48) = unaff_RBX;\n            iVar4 = uVar1 - 0x3c49;\n            *(*0x20 + -0x98) = 0x46fd4f;\n            uVar2 = fcn.00446840();\n            if (*(*0x20 + -0x28) == NULL) {\n                *(*0x20 + -0x28) = *0x20 + -0x28;\n            }\n            else if (*(*0x20 + -0x28) != *0x20 + -0x28) goto code_r0x0046fdea;\n            arg1 = *(*0x20 + -0x18);\n            *(*0x20 + -0x50) = arg1 + iVar4;\n            uVar3 = *(*0x20 + -0x20);\n            uVar6 = *(*0x20 + -0x10);\n            if (*(*0x20 + -0x10) < arg1 + iVar4) {\n                *(*0x20 + -0x60) = iVar4;\n                *(*0x20 + -0x58) = arg1;\n                *(*0x20 + -0x38) = uVar2;\n                *(*0x20 + -0x98) = 0x46fdb6;\n                uVar3 = fcn.004425c0(arg1);\n                iVar4 = *(*0x20 + -0x60);\n                uVar6 = arg1;\n            }\n            *(*0x20 + -0x58) = uVar6;\n            *(*0x20 + -0x30) = uVar3;\n            *(*0x20 + -0x98) = 0x46fcdf;\n            fcn.0045a040(iVar4);\n            *(*0x20 + -0x18) = *(*0x20 + -0x50);\n            *(*0x20 + -0x10) = *(*0x20 + -0x58);\n            *(*0x20 + -0x20) = *(*0x20 + -0x30);\n            in_RAX = *(*0x20 + 8);\n            unaff_RBX = *(*0x20 + -0x40);\n            iVar4 = *(*0x20 + -0x48);\n        } while( true );\n    }\n    goto code_r0x0046fdfe;\ncode_r0x0046fdea:\n    unaff_RBX = 0x49e520;\n    *(*0x20 + -0x98) = 0x46fdfd;\n    in_RAX = fcn.004305a0();\ncode_r0x0046fdfe:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + 0x10) = unaff_RBX;\n    *(puVar5 + -8) = 0x46fe0d;\n    fcn.00457040();\n    in_RAX = *(puVar5 + 8);\n    unaff_RBX = *(puVar5 + 0x10);\n    *0x20 = puVar5;\n    goto code_r0x0046fc80;\n}\n",
        "token_count": 1088
    },
    "004278a0": {
        "rules": [
            "encrypt data using HC-128/425018b86d394d5ebff49c9438559e47"
        ],
        "decompiled_code": "\nvoid fcn.004278a0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00409300();\n    *0x557da0 = *0x557da0 + ((*0x557da0 + 1U) / 0x6000000) * -0x6000000 + 1;\n    *0x557da4 = 0;\n    fcn.00409520();\n    return;\n}\n",
        "token_count": 144
    },
    "004010a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004010a0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00401740();\n    fcn.00401100();\n    return;\n}\n",
        "token_count": 88
    },
    "00401c00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00401c00(void)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    ulong *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if ((unaff_RBX[1] == *(in_RAX + 8)) && (cVar1 = fcn.004021a0(*(in_RAX + 8), *unaff_RBX),  cVar1 != '\\0')) {\n        uVar2 = fcn.004021a0(0xb, unaff_RBX);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 186
    },
    "00402960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00402960(void)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    uchar in_AL;\n    unkbyte7 in_RAX;\n    int64_t iVar3;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    puVar2 = *(iVar1 + 0x16c0);\n    *puVar2 = *CONCAT71(in_RAX, in_AL);\n    puVar2[1] = unaff_RBX;\n    iVar3 = *(iVar1 + 0x16c0) + 0x10;\n    *(iVar1 + 0x16c0) = iVar3;\n    if (*(iVar1 + 0x16c8) == iVar3) {\n        fcn.00429ba0();\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "00402b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402b20(ulong arg1)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    int64_t unaff_R14;\n    int64_t iVar17;\n    \n    iVar17 = unaff_R14;\n    if (*(*(unaff_R14 + 0x30) + 0x90) != unaff_R14) {\n        fcn.004324c0();\n        fcn.00432dc0();\n        fcn.00432540();\n        fcn.0042c260();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0x244;\n    *piVar1 = *piVar1 + 1;\n    *(*(unaff_R14 + 0x30) + 0x138) = unaff_R14;\n    *(unaff_R14 + 0xe8) = *(unaff_R14 + 0x30);\n    iVar2 = *(iVar17 + 0x30);\n    uVar9 = *(iVar2 + 0x2e0);\n    uVar10 = *(iVar2 + 0x2e4);\n    uVar11 = *(iVar2 + 0x2e8);\n    uVar12 = *(iVar2 + 0x2ec);\n    uVar13 = *(iVar2 + 0x2f0);\n    uVar14 = *(iVar2 + 0x2f4);\n    uVar15 = *(iVar2 + 0x2f8);\n    uVar16 = *(iVar2 + 0x2fc);\n    uVar5 = *(iVar2 + 0x300);\n    uVar6 = *(iVar2 + 0x304);\n    uVar7 = *(iVar2 + 0x308);\n    uVar8 = *(iVar2 + 0x30c);\n    fcn.00454840();\n    *(*(iVar17 + 0x30) + 0xe8) = 0;\n    *(*(iVar17 + 0x30) + 0x350) = 0;\n    fcn.00402d00(arg1);\n    *(*(iVar17 + 0x30) + 0xe8) = 1;\n    iVar3 = *(iVar17 + 0x30);\n    if (iVar3 == iVar2) {\n        while( true ) {\n            LOCK();\n            piVar1 = iVar3 + 0x350;\n            if (*piVar1 == 0) break;\n            fcn.00456f00();\n        }\n        *piVar1 = 1;\n        fcn.0043a460();\n        iVar17 = *(iVar17 + 0x30);\n        *(iVar17 + 0x2e0) = uVar9;\n        *(iVar17 + 0x2e4) = uVar10;\n        *(iVar17 + 0x2e8) = uVar11;\n        *(iVar17 + 0x2ec) = uVar12;\n        *(iVar17 + 0x2f0) = uVar13;\n        *(iVar17 + 0x2f4) = uVar14;\n        *(iVar17 + 0x2f8) = uVar15;\n        *(iVar17 + 0x2fc) = uVar16;\n        *(iVar17 + 0x300) = uVar5;\n        *(iVar17 + 0x304) = uVar6;\n        *(iVar17 + 0x308) = uVar7;\n        *(iVar17 + 0x30c) = uVar8;\n        return;\n    }\n    fcn.00430d40();\n    pcVar4 = swi(3);\n    (*pcVar4)();\n    return;\n}\n",
        "token_count": 898
    },
    "004031a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004031a0(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    uint64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    if (in_RAX == 0) {\n        return 0;\n    }\n    cVar2 = func_0x00420820();\n    if (cVar2 == '\\0') {\n        if (*0x503640 == NULL) {\n            iVar4 = 0;\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = **0x503640;\n            iVar4 = (*0x503640)[1];\n        }\n        iVar3 = 0;\n        while( true ) {\n            if (iVar4 <= iVar3) {\n                return 0;\n            }\n            iVar1 = *(iVar5 + iVar3 * 8);\n            if (((*(iVar1 + 0xd0) < in_RAX || *(iVar1 + 0xd0) == in_RAX) && (in_RAX < *(iVar1 + 0xd8))) ||\n               ((*(iVar1 + 0xe0) < in_RAX || *(iVar1 + 0xe0) == in_RAX && (in_RAX < *(iVar1 + 0xe8))))) break;\n            iVar3 = iVar3 + 1;\n        }\n        return 1;\n    }\n    return 1;\n}\n",
        "token_count": 314
    },
    "00403e40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403e40(void)\n\n{\n    fcn.00403e80(1);\n    return;\n}\n",
        "token_count": 27
    },
    "00404b80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404b80(void)\n\n{\n    fcn.00404bc0(1);\n    return;\n}\n",
        "token_count": 27
    },
    "00405ca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid fcn.00405ca0(void)\n\n{\n    code *in_RAX;\n    int64_t unaff_R14;\n    uchar uStack50;\n    uchar uStack49;\n    uchar auStack48 [8];\n    uchar *puStack40;\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    puStack40 = auStack48;\n    uStack50 = 0;\n    auStack32 = CONCAT88(&uStack50, 0x405d80);\n    ppcStack16 = auStack32;\n    uStack49 = 1;\n    (*in_RAX)();\n    uStack50 = 1;\n    uStack49 = 0;\n    (**ppcStack16)();\n    return;\n}\n",
        "token_count": 220
    },
    "00405de0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00405de0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432c20();\n    fcn.00432720();\n    fcn.00432540();\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432c20();\n    fcn.00432720();\n    fcn.00432540();\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432c20();\n    fcn.00432720();\n    fcn.00432540();\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432c20();\n    fcn.00432720();\n    fcn.00432540();\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432c20();\n    fcn.00432720();\n    fcn.00432540();\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432c20();\n    fcn.00432720();\n    fcn.00432540();\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432c20();\n    fcn.00432720();\n    fcn.00432540();\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432c20();\n    fcn.00432720();\n    fcn.00432540();\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432c20();\n    fcn.00432720();\n    fcn.00432540();\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432c20();\n    fcn.00432720();\n    fcn.00432540();\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432c20();\n    fcn.00432720();\n    fcn.00432540();\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432c20();\n    fcn.00432720();\n    fcn.00432540();\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432c20();\n    fcn.00432720();\n    fcn.00432540();\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432c20();\n    fcn.00432720();\n    fcn.00432540();\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432c20();\n    fcn.00432720();\n    fcn.00432540();\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432c20();\n    fcn.00432720();\n    fcn.00432540();\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432c20();\n    fcn.00432720();\n    fcn.00432540();\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432c20();\n    fcn.00432720();\n    fcn.00432540();\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432c20();\n    fcn.00432720();\n    fcn.00432540();\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432c20();\n    fcn.00432720();\n    fcn.00432540();\n    return;\n}\n",
        "token_count": 932
    },
    "00406f60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406f60(ulong param_1, ulong param_2)\n\n{\n    float fVar1;\n    float fVar2;\n    ulong uVar3;\n    uint32_t uVar4;\n    int64_t in_RAX;\n    ulong uVar5;\n    ulong *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (&stack0xfffffffffffffff8 < *(unaff_R14 + 0x10) || &stack0xfffffffffffffff8 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (in_RAX != 0) {\n        uVar4 = *(in_RAX + 0x10);\n        if (uVar4 < 0xb31a546e) {\n            if (uVar4 < 0x7925028d) {\n                if (uVar4 < 0x2ea27ffc) {\n                    if (uVar4 == 0x13ff06c5) {\n                        if (in_RAX == 0x4754a0) {\n                            fcn.004324c0();\n                            fcn.00432760();\n                            fcn.00432540();\n                            return;\n                        }\n                    }\n                    else if ((uVar4 == 0x2ea27ffb) && (uVar5 = 0x475620,  in_RAX == 0x475620)) {\n                        fcn.004324c0();\n                        fcn.004327c0(uVar5, param_2);\n                        fcn.00432540();\n                        return;\n                    }\n                }\n                else if (uVar4 == 0x663e425f) {\n                    if (in_RAX == 0x475ee0) {\n                        fcn.004324c0();\n                        fcn.00432ac0();\n                        fcn.00432540();\n                        return;\n                    }\n                }\n                else if ((uVar4 == 0x7925028c) && (in_RAX == 0x4755a0)) {\n                    fVar1 = *(unaff_RBX + 4);\n                    fVar2 = *unaff_RBX;\n                    fcn.004324c0();\n                    fcn.00432a20(fVar2, fVar1);\n                    fcn.00432540();\n                    return;\n                }\n            }\n            else if (uVar4 < 0x963f9c00) {\n                if (uVar4 == 0x86318d2e) {\n                    if (in_RAX == 0x475ea0) {\n                        fcn.004324c0();\n                        fcn.00432ac0();\n                        fcn.00432540();\n                        return;\n                    }\n                }\n                else if ((uVar4 == 0x963f9bff) && (in_RAX == 0x4758e0)) {\n                    fcn.004324c0();\n                    fcn.00432bc0();\n                    fcn.00432540();\n                    return;\n                }\n            }\n            else if (uVar4 == 0xb0c23ed3) {\n                uVar5 = 0x4755e0;\n                if (in_RAX == 0x4755e0) {\n                    fcn.004324c0();\n                    fcn.004327c0(uVar5, param_2);\n                    fcn.00432540();\n                    return;\n                }\n            }\n            else if ((uVar4 == 0xb31a546d) && (in_RAX == 0x475560)) {\n                uVar5 = unaff_RBX[1];\n                uVar3 = *unaff_RBX;\n                fcn.004324c0();\n                fcn.00432a20(uVar3, uVar5);\n                fcn.00432540();\n                return;\n            }\n        }\n        else if (uVar4 < 0xd04ae83e) {\n            if (uVar4 < 0xbd4ad793) {\n                if (uVar4 == 0xbbad4102) {\n                    if (in_RAX == 0x4758a0) {\n                        fcn.004324c0();\n                        fcn.00432bc0();\n                        fcn.00432540();\n                        return;\n                    }\n                }\n                else if ((uVar4 == 0xbd4ad792) && (in_RAX == 0x475f20)) {\n                    fcn.004324c0();\n                    fcn.00432ac0();\n                    fcn.00432540();\n                    return;\n                }\n            }\n            else if (uVar4 == 0xcc06c027) {\n                if (in_RAX == 0x475920) {\n                    fcn.004324c0();\n                    fcn.00432bc0();\n                    fcn.00432540();\n                    return;\n                }\n            }\n            else if ((uVar4 == 0xd04ae83d) && (in_RAX == 0x475e60)) {\n                fcn.004324c0();\n                fcn.00432ac0();\n                fcn.00432540();\n                return;\n            }\n        }\n        else if (uVar4 < 0xe0ff5cb5) {\n            if (uVar4 == 0xd5b87712) {\n                if (in_RAX == 0x475de0) {\n                    fcn.004324c0();\n                    fcn.00432ac0();\n                    fcn.00432540();\n                    return;\n                }\n            }\n            else if ((uVar4 == 0xe0ff5cb4) && (in_RAX == 0x475d60)) {\n                fcn.004324c0();\n                fcn.00432dc0();\n                fcn.00432540();\n                return;\n            }\n        }\n        else if (uVar4 == 0xecd580ce) {\n            if (in_RAX == 0x475860) {\n                fcn.004324c0();\n                fcn.00432bc0();\n                fcn.00432540();\n                return;\n            }\n        }\n        else if (uVar4 == 0xeff20ea0) {\n            if (in_RAX == 0x475e20) {\n                fcn.004324c0();\n                fcn.00432ac0();\n                fcn.00432540();\n                return;\n            }\n        }\n        else if ((uVar4 == 0xf75371fa) && (in_RAX == 0x475820)) {\n            fcn.004324c0();\n            fcn.00432bc0();\n            fcn.00432540();\n            return;\n        }\n        fcn.004074c0();\n        return;\n    }\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432540();\n    return;\n}\n",
        "token_count": 1496
    },
    "004085c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.004085c0(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t *in_RAX;\n    int64_t unaff_RBX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = *(unaff_RBX + 0x10) ^ *(arg1 + 0x10);\n    iVar3 = 1;\n    while( true ) {\n        uVar2 = uVar2 & *in_RAX - 1U;\n        piVar1 = in_RAX[uVar2 + 2];\n        if (piVar1 == NULL) {\n            return NULL;\n        }\n        if ((*piVar1 == unaff_RBX) && (piVar1[1] == arg1)) break;\n        uVar2 = uVar2 + iVar3;\n        iVar3 = iVar3 + 1;\n    }\n    return piVar1;\n}\n",
        "token_count": 207
    },
    "00408760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00408760(void)\n\n{\n    int64_t *in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t *unaff_RBX;\n    \n    uVar1 = *(*unaff_RBX + 0x10) ^ *(unaff_RBX[1] + 0x10);\n    iVar2 = 1;\n    while( true ) {\n        uVar1 = uVar1 & *in_RAX - 1U;\n        if (unaff_RBX == in_RAX[uVar1 + 2]) {\n            return;\n        }\n        if (in_RAX[uVar1 + 2] == NULL) break;\n        uVar1 = uVar1 + iVar2;\n        iVar2 = iVar2 + 1;\n    }\n    in_RAX[uVar1 + 2] = unaff_RBX;\n    in_RAX[1] = in_RAX[1] + 1;\n    return;\n}\n",
        "token_count": 213
    },
    "00408b80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00408b80(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00409300();\n    if (*0x503640 == NULL) {\n        iVar3 = 0;\n        iVar4 = 0;\n    }\n    else {\n        iVar4 = **0x503640;\n        iVar3 = (*0x503640)[1];\n    }\n    for (iVar2 = 0; iVar2 < iVar3; iVar2 = iVar2 + 1) {\n        iVar1 = *(*(iVar4 + iVar2 * 8) + 0x160);\n        for (iVar5 = 0; iVar5 < iVar1; iVar5 = iVar5 + 1) {\n            fcn.00408620();\n        }\n    }\n    fcn.00409520();\n    return;\n}\n",
        "token_count": 260
    },
    "00408ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t * fcn.00408ce0(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t *puVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (in_RAX < 0x100) {\n        puVar1 = in_RAX * 8 + 0x4fa820;\n    }\n    else {\n        puVar1 = fcn.0040a9e0(0);\n        *puVar1 = in_RAX;\n    }\n    return puVar1;\n}\n",
        "token_count": 161
    },
    "00408f40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00408f40(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (unaff_RBX != 0) {\n        iVar1 = fcn.004082c0(1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 145
    },
    "00408fe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00408fe0(void)\n\n{\n    uint64_t *puVar1;\n    code **in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    while (puVar1 = *0x4fcc18,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    for (uVar2 = 0; uVar2 <= *puVar1 && *puVar1 != uVar2; uVar2 = uVar2 + 1) {\n        if (puVar1[uVar2 + 2] != 0) {\n            (**in_RAX)(*in_RAX, in_RAX);\n        }\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "004092c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004092c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00409c20();\n    return;\n}\n",
        "token_count": 81
    },
    "004094e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004094e0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00409c60();\n    return;\n}\n",
        "token_count": 81
    },
    "00409a60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409a60(void)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (**(unaff_R14 + 0x30) == unaff_R14) {\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x40) = 0x409a97;\n                fcn.0042cba0();\n                *(*0x20 + -0x40) = 0x409aaa;\n                fcn.004097c0(0);\n                return;\n            }\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x40) = 0x409ac5;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x409ad5;\n        fcn.00457040();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 406
    },
    "00409b00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar fcn.00409b00(void)\n\n{\n    uchar uVar1;\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (**(unaff_R14 + 0x30) != unaff_R14) {\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x48) = 0x409b37;\n                fcn.0042cba0();\n                *(*0x20 + -0x48) = 0x409b3c;\n                fcn.0043a8e0();\n                *(*0x20 + -0x48) = 0x409b4f;\n                uVar1 = fcn.004097c0(0);\n                *(*0x20 + -0x19) = uVar1;\n                *(*0x20 + -0x48) = 0x409b58;\n                fcn.00454840();\n                return *(*0x20 + -0x19);\n            }\n            unaff_RBX = 0x11;\n            *(*0x20 + -0x48) = 0x409b78;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x409b88;\n        fcn.00457040();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 501
    },
    "00409c20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409c20(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00409300();\n    return;\n}\n",
        "token_count": 80
    },
    "00409c60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409c60(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00409520();\n    return;\n}\n",
        "token_count": 80
    },
    "0040a660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0040a660(int64_t arg1)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            iVar2 = 0;\n            while( true ) {\n                *(*0x20 + -0x28) = iVar2;\n                *(*0x20 + -0x18) = arg1 + unaff_RBX;\n                *(*0x20 + -0x48) = 0x40a6b3;\n                uVar1 = fcn.004137a0();\n                if (uVar1 == 0) {\n                    return 0;\n                }\n                if ((uVar1 & *(*0x20 + 0x18) - 1U) == 0) {\n                    return uVar1;\n                }\n                *(*0x20 + -0x20) = uVar1;\n                *(*0x20 + -0x48) = 0x40a6e5;\n                fcn.00413660(0);\n                *(*0x20 + -0x20) = -*(*0x20 + 0x18) & (*(*0x20 + 0x18) + *(*0x20 + -0x20)) - 1U;\n                *(*0x20 + -0x48) = 0x40a70d;\n                uVar1 = fcn.004137a0();\n                if (uVar1 == *(*0x20 + -0x20)) {\n                    return uVar1;\n                }\n                arg1 = 0;\n                *(*0x20 + -0x48) = 0x40a729;\n                fcn.00413660(0);\n                if (*(*0x20 + -0x28) == 99) break;\n                iVar2 = *(*0x20 + -0x28) + 1;\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n            }\n            unaff_RBX = 0x38;\n            *(*0x20 + -0x48) = 0x40a77d;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x40a792;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 788
    },
    "0040a7c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint64_t fcn.0040a7c0(ulong param_1, ulong param_2, uint64_t param_3, ulong param_4)\n\n{\n    ulong noname_0;\n    int64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint8_t unaff_BL;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint16_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar3 = unaff_BL;\n            if (uVar3 < 0x88) {\n                *(*0x20 + -0x10) = uVar3;\n                *(*0x20 + 0x10) = unaff_BL;\n                *(*0x20 + 8) = in_RAX;\n                noname_0 = *(in_RAX + 0x28 + uVar3 * 8);\n                *(*0x20 + -0x18) = noname_0;\n                *(*0x20 + -0x48) = 0x40a80d;\n                uVar1 = fcn.0040eec0(noname_0, uVar3, param_3, param_4);\n                iVar2 = *(*0x20 + -0x18);\n                uVar3 = *(iVar2 + 0x38);\n                if (uVar1 == uVar3) {\n                    *(*0x20 + -0x20) = uVar3;\n                    uVar5 = *(iVar2 + 0x60);\n                    if (uVar3 == uVar5) {\n                        *(*0x20 + -0x28) = uVar1;\n                        *(*0x20 + -0x48) = 0x40a845;\n                        fcn.00411c80();\n                        *(*0x20 + -0x18) = *(*(*0x20 + 8) + 0x28 + *(*0x20 + -0x10) * 8);\n                        *(*0x20 + -0x48) = 0x40a85e;\n                        uVar1 = fcn.0040eec0(*(*0x20 + -0x10), *(*0x20 + 8), param_3, param_4);\n                        iVar2 = *(*0x20 + -0x18);\n                        goto code_r0x0040a872;\n                    }\n                }\n                else {\ncode_r0x0040a872:\n                    if (uVar1 <= *(iVar2 + 0x38) && *(iVar2 + 0x38) != uVar1) {\n                        uVar5 = *(iVar2 + 0x60) + 1;\n                        *(iVar2 + 0x60) = uVar5;\n                        param_3 = *(iVar2 + 0x38);\n                        if (uVar5 <= param_3) {\n                            return uVar1 * *(iVar2 + 0x68) + *(iVar2 + 0x18);\n                        }\n                        *(*0x20 + -0x2a) = uVar5;\n                        *(*0x20 + -0x20) = param_3;\n                        *(*0x20 + -0x48) = 0x40a8c5;\n                        fcn.004324c0();\n                        *(*0x20 + -0x48) = 0x40a8d6;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x48) = 0x40a8e5;\n                        fcn.00432ac0();\n                        *(*0x20 + -0x48) = 0x40a8f6;\n                        fcn.00432dc0();\n                        *(*0x20 + -0x48) = 0x40a905;\n                        fcn.00432ac0();\n                        *(*0x20 + -0x48) = 0x40a90a;\n                        fcn.00432720();\n                        *(*0x20 + -0x48) = 0x40a90f;\n                        fcn.00432540();\n                        *(*0x20 + -0x48) = 0x40a925;\n                        fcn.00430d40();\n                    }\n                    uVar5 = iVar2;\n                    *(*0x20 + -0x48) = 0x40a936;\n                    fcn.00430d40();\n                }\n                *(*0x20 + -0x2a) = uVar5;\n                *(*0x20 + -0x48) = 0x40a945;\n                fcn.004324c0();\n                *(*0x20 + -0x48) = 0x40a956;\n                fcn.00432dc0();\n                *(*0x20 + -0x48) = 0x40a965;\n                fcn.00432ac0();\n                *(*0x20 + -0x48) = 0x40a976;\n                fcn.00432dc0();\n                *(*0x20 + -0x48) = 0x40a985;\n                fcn.00432ac0();\n                *(*0x20 + -0x48) = 0x40a98a;\n                fcn.00432720();\n                *(*0x20 + -0x48) = 0x40a98f;\n                fcn.00432540();\n                unaff_BL = 0x31;\n                *(*0x20 + -0x48) = 0x40a9a5;\n                fcn.00430d40();\n            }\n            *(*0x20 + -0x48) = 0x40a9b2;\n            in_RAX = fcn.00459720(0x88);\n        }\n        *(puVar4 + 8) = in_RAX;\n        puVar4[0x10] = unaff_BL;\n        *(puVar4 + -8) = 0x40a9c5;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        unaff_BL = puVar4[0x10];\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1448
    },
    "0040b3c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b3c0(void)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.0040a9e0(1, *in_RAX);\n    return;\n}\n",
        "token_count": 99
    },
    "0040b720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040b720(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    ulong uStack56;\n    ulong uStack48;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    uStack56 = 0;\n    uStack48 = 0x40b7e0;\n    auStack24 = CONCAT88(&uStack56, arg1);\n    fcn.00456f00();\n    return uStack56;\n}\n",
        "token_count": 144
    },
    "0040ee60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ee60(void)\n\n{\n    ulong unaff_RBX;\n    \n    fcn.0040f5e0(unaff_RBX);\n    fcn.00459d80();\n    return;\n}\n",
        "token_count": 48
    },
    "0040eea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040eea0(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    \n    *(in_RAX + 0x40) = ~*(unaff_RBX + *(in_RAX + 0x48));\n    return;\n}\n",
        "token_count": 63
    },
    "0040f3c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0040f3c0(ulong arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = arg1 + 1U >> 0x14;\n    if (0x3f < uVar2) {\n        fcn.00459740(0x40);\n        pcVar1 = swi(3);\n        iVar3 = (*pcVar1)();\n        return iVar3;\n    }\n    iVar3 = *(uVar2 * 8 + 0x52a0d8);\n    if (iVar3 != 0) {\n        iVar3 = *(iVar3 + (arg1 + 1U & 0xfffff) * 8);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 196
    },
    "00411b60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00411b60(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00456f00();\n    return;\n}\n",
        "token_count": 81
    },
    "004123a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004123a0(void)\n\n{\n    int32_t iVar1;\n    int64_t in_RAX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(in_RAX + 0x488);\n            if (iVar1 == *0x52a068) {\n                return;\n            }\n            if (iVar1 == *0x52a068 + -2) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x28) = 0x4123d9;\n                fcn.004121c0();\n                *(*0x20 + -0x28) = 0x4123e5;\n                fcn.004432a0();\n                *(*(*0x20 + 8) + 0x488) = *0x52a068;\n                return;\n            }\n            *(*0x20 + -0x10) = *0x52a068;\n            *(*0x20 + -0xc) = iVar1;\n            *(*0x20 + -0x28) = 0x412418;\n            fcn.004324c0();\n            *(*0x20 + -0x28) = 0x412429;\n            fcn.00432dc0();\n            *(*0x20 + -0x28) = 0x412432;\n            fcn.00432ac0();\n            *(*0x20 + -0x28) = 0x412445;\n            fcn.00432dc0();\n            *(*0x20 + -0x28) = 0x41244e;\n            fcn.00432ac0();\n            *(*0x20 + -0x28) = 0x412453;\n            fcn.00432720();\n            *(*0x20 + -0x28) = 0x412458;\n            fcn.00432540();\n            *(*0x20 + -0x28) = 0x412469;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x412474;\n        fcn.00457040();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 618
    },
    "00412e00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412e00(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = *0x52a320;\n            *(*0x20 + -0x18) = *0x52a328;\n            iVar2 = 0;\n            iVar3 = *0x52a320;\n            iVar5 = *0x52a328;\n            while( true ) {\n                if (iVar5 <= iVar2) {\n                    *0x557c73 = 1;\n                    return;\n                }\n                uVar1 = *(iVar3 + iVar2 * 8);\n                uVar6 = uVar1 >> 0x14;\n                if (0x3f < uVar6) break;\n                *(*0x20 + -0x20) = iVar2;\n                iVar2 = *(*(uVar6 * 8 + 0x52a0d8) + (uVar1 & 0xfffff) * 8);\n                iVar5 = *(iVar2 + 0x210c0);\n                if (iVar5 == 0) {\n                    *(*0x20 + -0x28) = iVar2;\n                    iVar3 = 0x559b78;\n                    *(*0x20 + -0x48) = 0x412eb1;\n                    iVar2 = fcn.0040b720(0x559b78);\n                    if (iVar2 == 0) {\n                        *(*0x20 + -0x48) = 0x412ee9;\n                        fcn.00430d40();\n                        goto code_r0x00412ee9;\n                    }\n                    *(*(*0x20 + -0x28) + 0x210c0) = iVar2;\n                }\n                else {\n                    for (iVar3 = 0; iVar3 < 0x10000; iVar3 = iVar3 + 1) {\ncode_r0x00412ee9:\n                        *(iVar5 + iVar3) = 0;\n                    }\n                }\n                iVar2 = *(*0x20 + -0x20) + 1;\n                iVar5 = *(*0x20 + -0x18);\n                iVar3 = *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x48) = 0x412f0c;\n            fcn.00459740(0x40);\n        }\n        *(puVar4 + -8) = 0x412f12;\n        fcn.00457040();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 706
    },
    "00412f20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412f20(void)\n\n{\n    bool bVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x558700 == 0) {\n                if (*0x558788 < *0x55878c) {\n                    bVar1 = true;\n                }\n                else {\n                    bVar1 = false;\n                }\n            }\n            else {\n                bVar1 = true;\n            }\n            if (!bVar1) {\n                *0x557c73 = 0;\n                return;\n            }\n            *(*0x20 + -0x20) = 0x412f89;\n            fcn.00430d40();\n        }\n        *(puVar2 + -8) = 0x412f8f;\n        fcn.00457040();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 296
    },
    "00412fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00412fa0(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    uint64_t in_RAX;\n    uint8_t *puVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint8_t unaff_SIL;\n    uint8_t uVar3;\n    uint8_t *unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            if ((*unaff_RDI & unaff_SIL) != 0) {\n                unaff_RBX = in_RAX + 0x800000000000;\n                if (unaff_RBX >> 0x2a < 0x40) {\n                    puVar1 = *(*(*((unaff_RBX >> 0x2a) * 8 + 0x52a0d8) + (unaff_RBX >> 0x16 & 0xfffff) * 8) + 0x210c0) +\n                             (in_RAX >> 0x19 & 0xffff);\n                    uVar3 = 1 << (in_RAX >> 0x16 & 7);\n                    if ((uVar3 & *puVar1) != 0) {\n                        return 1;\n                    }\n                    LOCK();\n                    *puVar1 = *puVar1 | uVar3;\n                    return 0;\n                }\n                arg1 = 0x40;\n                *(*0x20 + -0x40) = 0x41305c;\n                in_RAX = fcn.00459740(0x40);\n            }\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x40) = 0x413070;\n            fcn.004324c0();\n            *(*0x20 + -0x40) = 0x413075;\n            fcn.004324c0();\n            *(*0x20 + -0x40) = 0x413086;\n            fcn.00432dc0();\n            *(*0x20 + -0x40) = 0x413090;\n            fcn.00432c20();\n            *(*0x20 + -0x40) = 0x413095;\n            fcn.00432720();\n            *(*0x20 + -0x40) = 0x41309a;\n            fcn.00432540();\n            *(*0x20 + -0x40) = 0x41309f;\n            fcn.004324c0();\n            *(*0x20 + -0x40) = 0x4130b0;\n            fcn.00432dc0();\n            *(*0x20 + -0x40) = 0x4130ba;\n            fcn.00432c20();\n            *(*0x20 + -0x40) = 0x4130cb;\n            fcn.00432dc0();\n            *(*0x20 + -0x40) = 0x4130d5;\n            fcn.00432c20();\n            *(*0x20 + -0x40) = 0x4130e6;\n            fcn.00432dc0();\n            *(*0x20 + -0x40) = 0x4130eb;\n            fcn.00432540();\n            *(*0x20 + -0x40) = 0x413106;\n            fcn.0041a6a0(*(*0x20 + -0x10));\n            arg1 = *(*0x20 + 8);\n            unaff_RDI = 0xffffffffffffffff;\n            *(*0x20 + -0x40) = 0x413125;\n            fcn.0041a6a0(arg1);\n            *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n            unaff_RBX = 0x1f;\n            *(*0x20 + -0x40) = 0x413145;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        puVar2[0x28] = unaff_SIL;\n        *(puVar2 + 0x30) = arg3;\n        *(puVar2 + -8) = 0x413169;\n        fcn.00457040();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        unaff_SIL = puVar2[0x28];\n        arg3 = *(puVar2 + 0x30);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 1249
    },
    "004131a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004131a0(void)\n\n{\n    ulong uStack24;\n    \n    fcn.004298a0();\n    fcn.0042d6e0();\n    return uStack24;\n}\n",
        "token_count": 46
    },
    "00413760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413760(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00413220();\n    return;\n}\n",
        "token_count": 79
    },
    "004137a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.004137a0(void)\n\n{\n    int64_t unaff_R14;\n    int64_t iStack24;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.0042d6e0();\n    if (iStack24 != 0) {\n        return iStack24;\n    }\n    fcn.0042d6e0();\n    return 0;\n}\n",
        "token_count": 125
    },
    "004138a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004138a0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.004298a0();\n    return;\n}\n",
        "token_count": 84
    },
    "00414920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414920(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    *0x52a06c = 1;\n    fcn.0041bd40();\n    fcn.0041ace0();\n    *0x5587dc = 0x100000001;\n    return;\n}\n",
        "token_count": 116
    },
    "00416440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00416440(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    for (; *0x557ca0 < *0x557cb0; *0x557ca0 = *0x557ca0 + 1) {\n        fcn.0043b360();\n        fcn.00409b00();\n        *0x5587e8 = 0;\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "004177c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004177c0(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x55878c <= *0x558788) {\n                *(*0x20 + -0x20) = 0;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = 0x4178a0;\n                *(*0x20 + -0x10) = *0x20 + -0x20;\n                *(*0x20 + -0x40) = 0x417817;\n                fcn.00434220();\n                return;\n            }\n            *(*0x20 + -0x24) = *0x558788;\n            *(*0x20 + -0x28) = *0x55878c;\n            *(*0x20 + -0x40) = 0x41782e;\n            fcn.004324c0();\n            *(*0x20 + -0x40) = 0x417837;\n            fcn.00432ac0();\n            *(*0x20 + -0x40) = 0x417848;\n            fcn.00432dc0();\n            *(*0x20 + -0x40) = 0x417851;\n            fcn.00432ac0();\n            *(*0x20 + -0x40) = 0x417865;\n            fcn.00432dc0();\n            *(*0x20 + -0x40) = 0x41786a;\n            fcn.00432540();\n            *(*0x20 + -0x40) = 0x41787b;\n            fcn.00430d40();\n        }\n        *(puVar1 + -8) = 0x417885;\n        fcn.00457040();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 531
    },
    "004188c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004188c0(void)\n\n{\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00409300();\n    *0x558820 = in_XMM15;\n    fcn.00438ea0();\n    fcn.00409520();\n    return;\n}\n",
        "token_count": 118
    },
    "0041a300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041a300(void)\n\n{\n    int64_t iVar1;\n    ulong arg3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    arg3 = 0;\n    iVar1 = fcn.0040f260(0);\n    if (iVar1 != 0) {\n        fcn.0041a380(0, *(*(unaff_R14 + 0x30) + 0xa0), arg3);\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "0041ac00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041ac00(void)\n\n{\n    int64_t noname_1;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong arg3;\n    int64_t unaff_R14;\n    \n    while (iVar2 = *0x503f48,  iVar1 = *0x503f40,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    for (iVar3 = 0; iVar3 < iVar2; iVar3 = iVar3 + 1) {\n        noname_1 = *(*(iVar1 + iVar3 * 8) + 0x40);\n        if ((noname_1 != 0) && (*(noname_1 + 0x10) != 0)) {\n            arg3 = 0;\n            fcn.0040f260(0);\n            fcn.0041a380(0, noname_1, arg3);\n        }\n    }\n    return;\n}\n",
        "token_count": 247
    },
    "0041ace0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041ace0(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    *(in_RAX + 8) = 0x400000;\n    *(in_RAX + 0x10) = *0x49e218;\n    *(in_RAX + 0x40) = 0x222222;\n    fcn.0041bcc0();\n    return;\n}\n",
        "token_count": 142
    },
    "0041c4a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0041c4a0(ulong arg1)\n\n{\n    int64_t iVar1;\n    uint64_t arg1_00;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045b6e0();\n    }\n    arg1_00 = 0;\n    iVar1 = 0;\n    for (uVar2 = 0; uVar2 < unaff_RBX; uVar2 = uVar2 + iVar3) {\n        if (iVar1 + 0x800000000000U < arg1_00 + 0x800000000000) {\n            iVar3 = arg1_00 - iVar1;\n        }\n        else {\n            iVar3 = 0;\n        }\n        if (iVar3 == 0) {\n            iVar1 = fcn.0041c8a0();\n            if (iVar1 + 0x800000000000U < unaff_RBX + 0x800000000000) {\n                iVar3 = unaff_RBX - iVar1;\n            }\n            else {\n                iVar3 = 0;\n            }\n            arg1_00 = unaff_RBX;\n            if (iVar3 == 0) break;\n        }\n        iVar3 = fcn.0041ca60(arg1_00);\n    }\n    fcn.0041c980(arg1_00);\n    return uVar2;\n}\n",
        "token_count": 361
    },
    "0041c980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0041c980(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int32_t unaff_EDI;\n    int64_t unaff_R14;\n    \n    do {\n        iVar1 = arg1;\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX + 0x800000000000 < arg1 + 0x800000000000U) {\n                iVar1 = arg1 - unaff_RBX;\n            }\n            else {\n                iVar1 = 0;\n            }\n            if ((iVar1 == 0) || (*(in_RAX + 0x100e0) != unaff_EDI)) {\n                return;\n            }\n            if ((unaff_RBX & 0x3fffff) == 0) {\n                *(*0x20 + -0x28) = 0x41c9f7;\n                fcn.00428a00(arg1);\n                return;\n            }\n            unaff_RBX = 0x1c;\n            *(*0x20 + -0x28) = 0x41ca12;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = iVar1;\n        *(puVar2 + 0x20) = unaff_EDI;\n        *(puVar2 + -8) = 0x41ca2b;\n        fcn.0045b6e0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_EDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 534
    },
    "0041d360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041d360(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (((unaff_RBX - 1 & unaff_RBX) == 0) && (unaff_RBX != 0)) {\n                if (unaff_RBX < 0x41) {\n                    *(*0x20 + 8) = in_RAX;\n                    iVar3 = 7;\n                    while( true ) {\n                        if (iVar3 < 0) {\n                            return 0;\n                        }\n                        *(*0x20 + -0x10) = iVar3;\n                        uVar1 = *(in_RAX + 0x40 + iVar3 * 8);\n                        uVar2 = *(in_RAX + iVar3 * 8);\n                        *(*0x20 + -0x28) = 0x41d3d5;\n                        iVar3 = fcn.0041d1a0(iVar3, uVar1 | uVar2);\n                        if (iVar3 != -1) break;\n                        iVar3 = *(*0x20 + -0x10) + -1;\n                        in_RAX = *(*0x20 + 8);\n                    }\n                    return 1;\n                }\n                *(*0x20 + -0x28) = 0x41d3fb;\n                fcn.004324c0();\n                *(*0x20 + -0x28) = 0x41d40c;\n                fcn.00432dc0();\n                *(*0x20 + -0x28) = 0x41d416;\n                fcn.00432ac0();\n                *(*0x20 + -0x28) = 0x41d41b;\n                fcn.00432720();\n                *(*0x20 + -0x28) = 0x41d425;\n                fcn.00432540();\n                *(*0x20 + -0x28) = 0x41d436;\n                fcn.00430d40();\n            }\n            *(*0x20 + -0x28) = 0x41d43b;\n            fcn.004324c0();\n            *(*0x20 + -0x28) = 0x41d44c;\n            fcn.00432dc0();\n            *(*0x20 + -0x28) = 0x41d456;\n            fcn.00432ac0();\n            *(*0x20 + -0x28) = 0x41d45b;\n            fcn.00432720();\n            *(*0x20 + -0x28) = 0x41d465;\n            fcn.00432540();\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x28) = 0x41d476;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x41d486;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 884
    },
    "0041d7e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041d7e0(char param_1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t *piVar2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*(in_RAX + 0x100) < unaff_RBX || *(in_RAX + 0x100) == unaff_RBX) &&\n               (unaff_RBX <= *(in_RAX + 0x108) && *(in_RAX + 0x108) != unaff_RBX)) {\n                piVar2 = in_RAX + 0x118;\n                if (param_1 != '\\0') {\n                    piVar2 = in_RAX + 0x128;\n                }\n                *(*0x20 + -0x10) = piVar2;\n                *(*0x20 + 0x10) = unaff_RBX;\n                iVar1 = *piVar2;\n                if (iVar1 == 0) {\n                    *(*0x20 + -0x28) = 0x41d88d;\n                    iVar1 = fcn.0041ff20();\n                    *(iVar1 + 0x10) = in_XMM15;\n                    **(*0x20 + -0x10) = iVar1;\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n                else if (*(iVar1 + 0x10) == 0xfc) {\n                    iVar1 = *(in_RAX + 0x120);\n                    if (iVar1 == 0) {\n                        *(*0x20 + -0x28) = 0x41d867;\n                        iVar1 = fcn.0041ff20();\n                        piVar2 = *(*0x20 + -0x10);\n                        unaff_RBX = *(*0x20 + 0x10);\n                    }\n                    else {\n                        *(in_RAX + 0x120) = 0;\n                    }\n                    *(iVar1 + 0x10) = 0;\n                    *(iVar1 + 0x18) = *piVar2;\n                    *piVar2 = iVar1;\n                }\n                if (*(iVar1 + 0x10) < 0xfc) {\n                    *(iVar1 + 0x20 + *(iVar1 + 0x10) * 8) = unaff_RBX;\n                    *(iVar1 + 0x10) = *(iVar1 + 0x10) + 1;\n                    return;\n                }\n                param_1 = -4;\n                *(*0x20 + -0x28) = 0x41d8cb;\n                fcn.00459720(0xfc);\n            }\n            unaff_RBX = 0x1b;\n            *(*0x20 + -0x28) = 0x41d8dc;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        puVar3[0x18] = param_1;\n        *(puVar3 + -8) = 0x41d8f0;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        param_1 = puVar3[0x18];\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 884
    },
    "0041f840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041f840(void)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    uVar1 = fcn.0041ff20();\n    *in_RAX = uVar1;\n    iVar2 = fcn.00420260();\n    if (iVar2 == 0) {\n        iVar2 = fcn.0041ff20();\n    }\n    in_RAX[1] = iVar2;\n    return;\n}\n",
        "token_count": 161
    },
    "004201a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004201a0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.0041fec0();\n    fcn.004090a0();\n    return;\n}\n",
        "token_count": 90
    },
    "00420200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00420200(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.0041fe60();\n    fcn.004090a0();\n    return;\n}\n",
        "token_count": 89
    },
    "00420260": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.00420260(void)\n\n{\n    int64_t *piVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (*0x558700 == 0) {\n        piVar1 = NULL;\n    }\n    else {\n        piVar1 = (*0x558700 >> 0x13) << 3;\n        *0x558700 = *piVar1;\n        LOCK();\n    }\n    if (piVar1 == NULL) {\n        return NULL;\n    }\n    fcn.0041fe60();\n    return piVar1;\n}\n",
        "token_count": 172
    },
    "00420300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.00420300(void)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = 0x420325;\n            iVar2 = fcn.0041ff20();\n            iVar1 = *(*0x20 + 8);\n            iVar3 = *(iVar1 + 0x10) / 2;\n            *(iVar1 + 0x10) = *(iVar1 + 0x10) - iVar3;\n            *(iVar2 + 0x10) = iVar3;\n            if (*(iVar1 + 0x10) < 0xfd) {\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x30) = 0x420373;\n                fcn.0045a040(iVar3 << 3);\n                *(*0x20 + -0x30) = 0x42037d;\n                fcn.00420200();\n                return *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x30) = 0x420399;\n            in_RAX = fcn.00459720(0xfd);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x4203a5;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 478
    },
    "004208c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.004208c0(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    bool bVar3;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x52a0d8);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 == 0) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = *(iVar2 + 99) != '\\x01';\n    }\n    if (((!bVar3) && (*(iVar2 + 0x18) < in_RAX || *(iVar2 + 0x18) == in_RAX)) &&\n       (in_RAX <= *(iVar2 + 0x70) && *(iVar2 + 0x70) != in_RAX)) {\n        return iVar2;\n    }\n    return 0;\n}\n",
        "token_count": 354
    },
    "00421680": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00421680(char param_1)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (param_1 != '\\0') {\n                *(*0x20 + -0x28) = 0x42169f;\n                fcn.00421a40();\n                return;\n            }\n            unaff_RBX = 0x3c;\n            *(*0x20 + -0x28) = 0x4216ba;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        puVar1[0x18] = param_1;\n        *(puVar1 + -8) = 0x4216ce;\n        fcn.0045b6e0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        param_1 = puVar1[0x18];\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 367
    },
    "00422320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00422320(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00456f00();\n    return;\n}\n",
        "token_count": 80
    },
    "00422420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00422420(uint8_t param_1)\n\n{\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045b6e0();\n    }\n    *(unaff_RBX + 100) = 1;\n    fcn.00409300();\n    fcn.004224a0(param_1);\n    fcn.00409520();\n    return;\n}\n",
        "token_count": 130
    },
    "00423140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00423140(void)\n\n{\n    ulong *puVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    puVar1 = fcn.00422d20();\n    if (puVar1 != NULL) {\n        fcn.00409300();\n        *0x530a40 = *0x530a40 - *0x530a10;\n        *puVar1 = *0x530a28;\n        *0x530a28 = puVar1;\n        fcn.00409520();\n        return;\n    }\n    return;\n}\n",
        "token_count": 169
    },
    "004231e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004231e0(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    ulong in_RAX;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x30) = 0x42320f;\n            fcn.00409300();\n            *(*0x20 + -0x30) = 0x42321b;\n            uVar3 = fcn.004147e0();\n            *(*0x20 + -0x18) = uVar3;\n            *(*0x20 + -0x30) = 0x42322e;\n            fcn.00409520();\n            iVar1 = *(*0x20 + -0x18);\n            *(iVar1 + 10) = 2;\n            *(iVar1 + 0x10) = *(*0x20 + 0x10);\n            *(*0x20 + -0x30) = 0x42324a;\n            cVar2 = fcn.00422ae0();\n            if (cVar2 != '\\0') {\n                return;\n            }\n            unaff_RBX = 0x25;\n            *(*0x20 + -0x30) = 0x423269;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x423279;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 537
    },
    "004233e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.004233e0(void)\n\n{\n    bool bVar1;\n    int64_t *piVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \n    do {\n        piVar2 = *0x557f50;\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar7 = in_RAX + 0x3fU >> 6;\n            if (*0x557f50 == NULL) {\n                bVar1 = true;\n            }\n            else {\n                bVar1 = 0xfff0 < **0x557f50 + uVar7 * 8;\n            }\n            if (bVar1) {\n                iVar5 = 0;\ncode_r0x00423474:\n                if (iVar5 != 0) {\n                    return iVar5;\n                }\n                *(*0x20 + -0x10) = uVar7 * 8;\n                *(*0x20 + -0x18) = uVar7;\n                *(*0x20 + -0x48) = 0x423495;\n                fcn.00409300();\n                piVar2 = *0x557f50;\n                if (*0x557f50 == NULL) {\n                    iVar5 = *(*0x20 + -0x18);\n                    bVar1 = true;\n                }\n                else {\n                    iVar5 = *(*0x20 + -0x18);\n                    bVar1 = 0xfff0 < **0x557f50 + iVar5 * 8;\n                }\n                if (bVar1) {\n                    iVar5 = 0;\ncode_r0x00423514:\n                    if (iVar5 != 0) {\n                        *(*0x20 + -0x20) = iVar5;\n                        *(*0x20 + -0x48) = 0x42368c;\n                        fcn.00409520();\n                        return *(*0x20 + -0x20);\n                    }\n                    *(*0x20 + -0x48) = 0x423525;\n                    piVar4 = fcn.00423800();\n                    piVar2 = *0x557f50;\n                    if (*0x557f50 == NULL) {\n                        iVar5 = *(*0x20 + -0x18);\n                        bVar1 = true;\n                    }\n                    else {\n                        iVar5 = *(*0x20 + -0x18);\n                        bVar1 = 0xfff0 < **0x557f50 + iVar5 * 8;\n                    }\n                    if (bVar1) {\n                        iVar9 = *(*0x20 + -0x10);\n                        iVar6 = 0;\ncode_r0x004235a0:\n                        if (iVar6 != 0) {\n                            *(*0x20 + -0x30) = iVar6;\n                            piVar4[1] = *0x557f48;\n                            *(*0x20 + -0x48) = 0x42366a;\n                            *0x557f48 = piVar4;\n                            fcn.00409520();\n                            return *(*0x20 + -0x30);\n                        }\n                        if (piVar4 == NULL) {\n                            bVar1 = true;\n                        }\n                        else {\n                            bVar1 = 0xfff0 < *piVar4 + iVar5 * 8;\n                        }\n                        if (bVar1) {\n                            iVar5 = 0;\ncode_r0x00423605:\n                            if (iVar5 != 0) {\n                                *(*0x20 + -0x28) = iVar5;\n                                piVar4[1] = *0x557f50;\n                                *(*0x20 + -0x48) = 0x423636;\n                                *0x557f50 = piVar4;\n                                fcn.00409520();\n                                return *(*0x20 + -0x28);\n                            }\n                            *(*0x20 + -0x48) = 0x4236b9;\n                            fcn.00430d40();\n                        }\n                        else {\n                            LOCK();\n                            iVar6 = *piVar4;\n                            *piVar4 = *piVar4 + iVar9;\n                            uVar7 = iVar6 + iVar5 * 8;\n                            if (0xfff0 < uVar7) {\n                                iVar5 = 0;\n                                goto code_r0x00423605;\n                            }\n                            uVar7 = uVar7 - iVar9;\n                            if (uVar7 < 0xfff0) {\n                                iVar5 = piVar4 + uVar7 + 0x10;\n                                goto code_r0x00423605;\n                            }\n                        }\n                        *(*0x20 + -0x48) = 0x4236c6;\n                        fcn.00459740(0xfff0);\n                    }\n                    else {\n                        iVar9 = *(*0x20 + -0x10);\n                        LOCK();\n                        iVar6 = **0x557f50;\n                        **0x557f50 = **0x557f50 + iVar9;\n                        uVar7 = iVar6 + iVar5 * 8;\n                        if (0xfff0 < uVar7) {\n                            iVar6 = 0;\n                            goto code_r0x004235a0;\n                        }\n                        uVar7 = uVar7 - iVar9;\n                        if (uVar7 < 0xfff0) {\n                            iVar6 = piVar2 + uVar7 + 0x10;\n                            goto code_r0x004235a0;\n                        }\n                    }\n                    *(*0x20 + -0x48) = 0x4236d3;\n                    fcn.00459740(0xfff0);\n                }\n                else {\n                    iVar9 = *(*0x20 + -0x10);\n                    LOCK();\n                    iVar6 = **0x557f50;\n                    **0x557f50 = **0x557f50 + iVar9;\n                    uVar7 = iVar6 + iVar5 * 8;\n                    if (0xfff0 < uVar7) {\n                        iVar5 = 0;\n                        goto code_r0x00423514;\n                    }\n                    uVar7 = uVar7 - iVar9;\n                    if (uVar7 < 0xfff0) {\n                        iVar5 = piVar2 + uVar7 + 0x10;\n                        goto code_r0x00423514;\n                    }\n                }\n                *(*0x20 + -0x48) = 0x4236dd;\n                fcn.00459740(0xfff0);\n            }\n            else {\n                LOCK();\n                iVar5 = **0x557f50;\n                **0x557f50 = **0x557f50 + uVar7 * 8;\n                uVar3 = iVar5 + uVar7 * 8;\n                if (0xfff0 < uVar3) {\n                    iVar5 = 0;\n                    goto code_r0x00423474;\n                }\n                uVar3 = uVar3 + uVar7 * -8;\n                if (uVar3 < 0xfff0) {\n                    iVar5 = piVar2 + uVar3 + 0x10;\n                    goto code_r0x00423474;\n                }\n            }\n            *(*0x20 + -0x48) = 0x4236e7;\n            in_RAX = fcn.00459740(0xfff0);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + -8) = 0x4236f2;\n        fcn.00457040();\n        in_RAX = *(puVar8 + 8);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1788
    },
    "00423700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00423700(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.004233e0();\n    return;\n}\n",
        "token_count": 80
    },
    "00423740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00423740(void)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00409300();\n    if (*0x557f60 != 0) {\n        iVar1 = *0x557f60;\n        if (*0x557f48 == 0) {\n            *0x557f48 = *0x557f60;\n        }\n        else {\n            do {\n                iVar3 = iVar1;\n                iVar1 = *(iVar3 + 8);\n            } while (iVar1 != 0);\n            *(iVar3 + 8) = *0x557f48;\n            *0x557f48 = *0x557f60;\n        }\n    }\n    uVar2 = *0x557f50;\n    *0x557f60 = *0x557f58;\n    *0x557f58 = *0x557f50;\n    *0x557f50 = 0;\n    fcn.00409520(uVar2);\n    return;\n}\n",
        "token_count": 286
    },
    "00423800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00423800(void)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x557f48 != 0) {\n                *(*0x20 + -0x18) = *0x557f48;\n                *0x557f48 = *(*0x557f48 + 8);\n                *(*0x20 + -0x30) = 0x42383f;\n                fcn.00459d80();\n                puVar2 = *(*0x20 + -0x18);\n                goto code_r0x00423882;\n            }\n            *(*0x20 + -0x30) = 0x423854;\n            fcn.00409520();\n            *(*0x20 + -0x30) = 0x423865;\n            iVar1 = fcn.004131a0();\n            if (iVar1 != 0) {\n                *(*0x20 + -0x10) = iVar1;\n                *(*0x20 + -0x30) = 0x42387d;\n                fcn.00409300();\n                puVar2 = *(*0x20 + -0x10);\ncode_r0x00423882:\n                puVar2[1] = 0;\n                *puVar2 = 0;\n                return;\n            }\n            *(*0x20 + -0x30) = 0x4238ac;\n            fcn.00430d40();\n        }\n        *(puVar3 + -8) = 0x4238b2;\n        fcn.00457040();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 477
    },
    "00425a20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00425a20(void)\n\n{\n    code *pcVar1;\n    uint64_t *in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    uint64_t uVar4;\n    uint64_t unaff_RDI;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    \n    if (unaff_RBX != 0) {\n        uVar5 = *in_RAX;\n        if (uVar5 < 0) {\n            uVar3 = 0x200000;\n            uVar4 = 0x200000;\n            uVar5 = 0x200000;\n        }\n        else {\n            uVar3 = uVar5 & 0x1fffff;\n            uVar4 = uVar5 >> 0x15 & 0x1fffff;\n            uVar5 = uVar5 >> 0x2a & 0x1fffff;\n        }\n        for (iVar2 = 1; iVar2 < unaff_RBX; iVar2 = iVar2 + 1) {\n            uVar8 = in_RAX[iVar2];\n            if (uVar8 < 0) {\n                uVar6 = 0x200000;\n                uVar7 = 0x200000;\n                uVar8 = 0x200000;\n            }\n            else {\n                uVar6 = uVar8 & 0x1fffff;\n                uVar7 = uVar8 >> 0x15 & 0x1fffff;\n                uVar8 = uVar8 >> 0x2a & 0x1fffff;\n            }\n            if (uVar3 == (iVar2 << (unaff_RDI & 0x3f) & -(unaff_RDI < 0x40))) {\n                uVar3 = uVar3 + uVar6;\n            }\n            uVar9 = 1 << (unaff_RDI & 0x3f) & -(unaff_RDI < 0x40);\n            if (uVar8 == uVar9) {\n                uVar8 = uVar9 + uVar5;\n            }\n            if (uVar4 < uVar6 + uVar5) {\n                uVar4 = uVar6 + uVar5;\n            }\n            if (uVar4 < uVar7) {\n                uVar4 = uVar7;\n            }\n            uVar5 = uVar8;\n        }\n        if (uVar4 == 0x200000) {\n            uVar5 = 0x8000000000000000;\n        }\n        else {\n            uVar5 = (uVar5 & 0x1fffff) << 0x2a | (uVar4 & 0x1fffff) << 0x15 | uVar3 & 0x1fffff;\n        }\n        return uVar5;\n    }\n    fcn.00459720(0);\n    pcVar1 = swi(3);\n    uVar5 = (*pcVar1)();\n    return uVar5;\n}\n",
        "token_count": 701
    },
    "00428020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00428020(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00409300();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n    if (arg1 == 0) {\n        fcn.004324c0();\n        fcn.00432dc0();\n        fcn.00432d40();\n        fcn.00432dc0();\n        fcn.00432c20();\n        fcn.00432dc0();\n        fcn.00432540();\n    }\n    else {\n        fcn.00450e40();\n        fcn.004324c0();\n        fcn.00432dc0();\n        fcn.00432d40();\n        fcn.00432dc0();\n        fcn.00432c20();\n        fcn.00432dc0();\n        fcn.00432dc0();\n        fcn.00432dc0();\n        fcn.00432540();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n    if ((iVar1 == 0) || (unaff_R14 == iVar1)) {\n        fcn.00450240();\n        fcn.00456f00();\n    }\n    else {\n        fcn.00450240();\n        fcn.0044f5c0(0);\n    }\n    fcn.004324c0();\n    fcn.00432720();\n    fcn.00432540();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 0;\n    fcn.00409520();\n    return;\n}\n",
        "token_count": 424
    },
    "004282c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004282c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00409300();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432d40();\n    fcn.00432dc0();\n    fcn.00432c20();\n    fcn.00432dc0();\n    fcn.00432540();\n    fcn.00450240();\n    fcn.00456f00();\n    fcn.004324c0();\n    fcn.00432720();\n    fcn.00432540();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 0;\n    fcn.00409520();\n    return;\n}\n",
        "token_count": 238
    },
    "00428460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00428460(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00409300();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432540();\n    fcn.00450480();\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432540();\n    fcn.004324c0();\n    fcn.00432720();\n    fcn.00432540();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 0;\n    fcn.00409520();\n    return;\n}\n",
        "token_count": 218
    },
    "00428520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00428520(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX <= unaff_RBX + 0x800000000000 == in_RAX <= in_RAX + 0x800000000000) {\n                return;\n            }\n            unaff_RBX = 0x3c;\n            *(*0x20 + -0x20) = 0x428570;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x428585;\n        fcn.00457040();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 335
    },
    "004285a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.004285a0(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = in_RAX + 0x800000000000;\n            if ((arg1 + 0x800000000000U <= uVar1) && (unaff_RBX + 0x800000000000U <= unaff_RDI + 0x800000000000U)) {\n                return 0;\n            }\n            if ((arg1 + 0x800000000000U <= uVar1) || (unaff_RBX + 0x800000000000U <= unaff_RDI + 0x800000000000U)) {\n                if ((unaff_RBX + 0x800000000000U <= unaff_RDI + 0x800000000000U) ||\n                   (unaff_RDI + 0x800000000000U <= uVar1)) {\n                    unaff_RDI = in_RAX;\n                }\n                return unaff_RDI;\n            }\n            unaff_RBX = 9;\n            *(*0x20 + -0x20) = 0x42864a;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x428665;\n        fcn.00457040();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 574
    },
    "00428680": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00428680(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (in_RAX + 0x800000000000U < arg1 + 0x800000000000U) {\n        if (unaff_RBX + 0x800000000000U <= arg1 + 0x800000000000U) {\n            return in_RAX;\n        }\n        iVar1 = fcn.00428520();\n        return iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 188
    },
    "004287e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.004287e0(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    int64_t *in_RAX;\n    uint64_t arg1;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t unaff_RBX;\n    int64_t iVar7;\n    uint64_t uVar8;\n    \n    arg1 = in_RAX[1];\n    iVar3 = *in_RAX;\n    uVar5 = 0;\n    uVar1 = arg1;\n    while (uVar6 = uVar1,  8 < uVar6 - uVar5) {\n        iVar7 = (uVar6 - uVar5) / 2;\n        uVar1 = iVar7 + uVar5;\n        if (arg1 <= uVar1) goto code_r0x004288d0;\n        uVar8 = *(uVar1 * 0x10 + iVar3) + 0x800000000000;\n        uVar2 = unaff_RBX + 0x800000000000;\n        if ((uVar8 <= uVar2) && (uVar2 < *(iVar3 + 8 + uVar1 * 0x10) + 0x800000000000U)) {\n            return iVar7 + uVar5 + 1;\n        }\n        if (uVar8 <= uVar2) {\n            uVar5 = iVar7 + uVar5 + 1;\n            uVar1 = uVar6;\n        }\n    }\n    while( true ) {\n        if (uVar6 <= uVar5) {\n            return uVar6;\n        }\n        if (arg1 <= uVar5) break;\n        if (unaff_RBX + 0x800000000000U < *(uVar5 * 0x10 + iVar3) + 0x800000000000U) {\n            return uVar5;\n        }\n        uVar5 = uVar5 + 1;\n    }\n    arg1 = fcn.00459720(arg1);\ncode_r0x004288d0:\n    fcn.00459720(arg1);\n    pcVar4 = swi(3);\n    uVar5 = (*pcVar4)();\n    return uVar5;\n}\n",
        "token_count": 512
    },
    "004288e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.004288e0(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    int64_t *piVar3;\n    int64_t *arg1;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x20) = 0x428907;\n            piVar3 = fcn.004287e0();\n            if (piVar3 == NULL) {\n                arg1 = (*(*0x20 + 8))[1];\n                if (arg1 != NULL) {\n                    return ***(*0x20 + 8);\n                }\n            }\n            else {\n                arg1 = (*(*0x20 + 8))[1];\n                iVar2 = **(*0x20 + 8);\n                if (piVar3 - 1U < arg1) {\n                    iVar5 = (piVar3 - 1U) * 0x10;\n                    uVar1 = *(*0x20 + 0x10) + 0x800000000000;\n                    if ((*(iVar5 + iVar2) + 0x800000000000U <= uVar1) &&\n                       (uVar1 < *(iVar2 + 8 + iVar5) + 0x800000000000U)) {\n                        return *(*0x20 + 0x10);\n                    }\n                    if (arg1 <= piVar3) {\n                        return 0;\n                    }\n                    if (piVar3 < arg1) {\n                        return *(piVar3 * 0x10 + iVar2);\n                    }\n                    *(*0x20 + -0x20) = 0x4289c8;\n                    fcn.00459720(arg1);\n                }\n                *(*0x20 + -0x20) = 0x4289d0;\n                fcn.00459720(arg1);\n            }\n            *(*0x20 + -0x20) = 0x4289d7;\n            in_RAX = fcn.00459720(arg1);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x4289e7;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 699
    },
    "00428f60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00428f60(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t *in_RAX;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uint64_t uVar6;\n    \n    iVar1 = *in_RAX;\n    if (in_RAX[1] == 0) {\n        return 0;\n    }\n    iVar4 = in_RAX[1] + -1;\n    iVar5 = iVar4 * 0x10;\n    iVar2 = *(iVar1 + 8 + iVar5);\n    iVar3 = *(iVar1 + iVar5);\n    if (iVar3 + 0x800000000000U < iVar2 + 0x800000000000U) {\n        uVar6 = iVar2 - iVar3;\n    }\n    else {\n        uVar6 = 0;\n    }\n    if (unaff_RBX < uVar6) {\n        *(iVar1 + 8 + iVar5) = iVar2 - unaff_RBX;\n        in_RAX[3] = in_RAX[3] - unaff_RBX;\n        return iVar2 - unaff_RBX;\n    }\n    in_RAX[1] = iVar4;\n    in_RAX[3] = in_RAX[3] - uVar6;\n    return iVar3;\n}\n",
        "token_count": 312
    },
    "00428fe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00428fe0(void)\n\n{\n    int64_t iVar1;\n    uint64_t arg2;\n    ulong in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    ulong unaff_RBX;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t *puVar9;\n    uint64_t uVar10;\n    int64_t *piVar11;\n    int64_t iVar12;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x58) = 0x429007;\n            uVar2 = fcn.004287e0();\n            if (uVar2 == 0) {\n                iVar12 = *(*0x20 + 8);\n                *(iVar12 + 0x18) = 0;\n                *(iVar12 + 8) = 0;\n                return;\n            }\n            puVar9 = *(*0x20 + 8);\n            uVar10 = *puVar9;\n            uVar5 = puVar9[1];\n            if (uVar2 <= uVar5) break;\n            *(*0x20 + -0x58) = 0x4291ea;\n            in_RAX = fcn.004597e0(uVar5);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x4291fa;\n        fcn.00457040();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n    uVar5 = uVar5 - uVar2;\n    piVar11 = (uVar2 << 4 & uVar2 - puVar9[2] >> 0x3f) + uVar10;\n    if (uVar5 < 1) {\n        iVar12 = 0;\n        goto code_r0x00429074;\n    }\n    iVar3 = 0;\n    iVar6 = 0;\n    do {\n        if (*piVar11 + 0x800000000000U < piVar11[1] + 0x800000000000U) {\n            iVar12 = piVar11[1] - *piVar11;\n        }\n        else {\n            iVar12 = 0;\n        }\n        iVar3 = iVar3 + 1;\n        iVar12 = iVar12 + iVar6;\n        iVar6 = iVar12;\n        if (uVar5 <= iVar3) {\ncode_r0x00429074:\n            uVar5 = uVar2;\n            iVar6 = uVar5 - 1;\n            piVar11 = iVar6 * 0x10;\n            iVar3 = *(uVar10 + piVar11);\n            iVar1 = *(uVar10 + 8 + piVar11);\n            uVar10 = 0x800000000000;\n            uVar2 = *(*0x20 + 0x10) + 0x800000000000;\n            if ((uVar2 < iVar3 + 0x800000000000U) || (iVar1 + 0x800000000000U <= uVar2)) {\ncode_r0x0042916d:\n                arg2 = puVar9[2];\n                if (uVar5 <= arg2) {\n                    puVar9[1] = uVar5;\n                    puVar9[3] = puVar9[3] - iVar12;\n                    return;\n                }\n                *(*0x20 + -0x58) = 0x429190;\n                uVar2 = uVar5;\n                fcn.004597a0(uVar5, arg2);\n            }\n            else {\n                *(*0x20 + -0x10) = uVar5;\n                *(*0x20 + -0x18) = iVar6;\n                *(*0x20 + -0x20) = iVar1;\n                *(*0x20 + -0x28) = iVar3;\n                *(*0x20 + -0x30) = piVar11;\n                *(*0x20 + -0x38) = iVar12;\n                *(*0x20 + -0x58) = 0x4290dd;\n                iVar4 = fcn.00428680(*(*0x20 + 0x10));\n                iVar12 = (*(*0x20 + -0x20) - *(*0x20 + -0x28)) + *(*0x20 + -0x38);\n                uVar10 = iVar4 + 0x800000000000;\n                if (uVar10 < iVar1 + 0x800000000000U) {\n                    iVar7 = iVar1 - iVar4;\n                }\n                else {\n                    iVar7 = 0;\n                }\n                if (iVar7 == 0) {\n                    puVar9 = *(*0x20 + 8);\n                    uVar5 = *(*0x20 + -0x18);\n                    goto code_r0x0042916d;\n                }\n                if (uVar10 < iVar1 + 0x800000000000U) {\n                    iVar7 = iVar1 - iVar4;\n                }\n                else {\n                    iVar7 = 0;\n                }\n                iVar12 = iVar12 - iVar7;\n                puVar9 = *(*0x20 + 8);\n                uVar10 = *puVar9;\n                uVar5 = puVar9[1];\n                uVar2 = *(*0x20 + -0x18);\n                if (uVar2 < uVar5) {\n                    iVar7 = *(*0x20 + -0x30);\n                    *(uVar10 + iVar7) = iVar4;\n                    *(uVar10 + 8 + iVar7) = iVar1;\n                    uVar5 = *(*0x20 + -0x10);\n                    goto code_r0x0042916d;\n                }\n            }\n            *(*0x20 + -0x58) = 0x429198;\n            fcn.00459720(uVar5);\n        }\n        piVar11 = piVar11 + 2;\n    } while( true );\n}\n",
        "token_count": 1506
    },
    "00429220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00429220(void)\n\n{\n    uint64_t arg2;\n    int64_t *in_RAX;\n    int64_t iVar1;\n    uint64_t arg1;\n    int64_t *unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX[2] < in_RAX[1]) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x10) = unaff_RBX;\n                unaff_RBX[1] = 0;\n                unaff_RBX[2] = in_RAX[2];\n                iVar1 = unaff_RBX[4];\n                *(*0x20 + -0x28) = 0x429275;\n                iVar1 = fcn.0040b720(iVar1);\n                unaff_RBX = *(*0x20 + 0x10);\n                *unaff_RBX = iVar1;\n                in_RAX = *(*0x20 + 8);\n            }\n            arg2 = unaff_RBX[2];\n            arg1 = in_RAX[1];\n            if (arg1 <= arg2) {\n                unaff_RBX[1] = arg1;\n                unaff_RBX[3] = in_RAX[3];\n                if (in_RAX[1] < arg1) {\n                    arg1 = in_RAX[1];\n                }\n                if (*unaff_RBX != *in_RAX) {\n                    *(*0x20 + -0x28) = 0x4292c5;\n                    fcn.0045a040(arg1 << 4);\n                }\n                return;\n            }\n            *(*0x20 + -0x28) = 0x4292d4;\n            in_RAX = fcn.004597a0(arg1, arg2);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x4292e5;\n        fcn.00457040();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 612
    },
    "004294a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.004294a0(void)\n\n{\n    uint64_t *puVar1;\n    int64_t *piVar2;\n    int32_t *piVar3;\n    int64_t *piVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t in_RAX;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint64_t uVar12;\n    int64_t iVar13;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    while( true ) {\n        uVar12 = *(in_RAX + 0x20);\n        uVar10 = uVar12 >> 0x20;\n        if (uVar12 <= uVar10) {\n            return 0;\n        }\n        if (*(in_RAX + 0x10) <= uVar12 >> 0x29) break;\n        while (uVar11 = uVar12 >> 0x20,  uVar11 == uVar10) {\n            LOCK();\n            puVar1 = in_RAX + 0x20;\n            uVar7 = *puVar1;\n            *puVar1 = *puVar1 ^ (uVar12 == uVar7) * (*puVar1 ^ (uVar10 + 1 << 0x20 | uVar12 & 0xffffffff));\n            if (uVar12 == uVar7) {\n                piVar4 = *(in_RAX + 8) + (uVar11 >> 9) * 8;\n                iVar8 = *piVar4;\n                piVar2 = iVar8 + (uVar11 & 0x1ff) * 8 + 0x18;\n                iVar13 = *piVar2;\n                while (iVar13 == 0) {\n                    iVar13 = *piVar2;\n                }\n                iVar9 = *piVar2;\n                *piVar2 = 0;\n                LOCK();\n                piVar3 = iVar8 + 0x10;\n                iVar5 = *piVar3;\n                *piVar3 = *piVar3 + 1;\n                if (iVar5 == 0x1ff) {\n                    *piVar4 = 0;\n                    uVar6 = *(iVar8 + 0x10);\n                    *(iVar8 + 0x10) = 0;\n                    fcn.004090a0(uVar6, iVar8, iVar9);\n                }\n                return iVar13;\n            }\n            uVar12 = *(in_RAX + 0x20);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 622
    },
    "004295e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004295e0(void)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t in_RAX;\n    uint32_t uVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = *(in_RAX + 0x20);\n            piVar5 = uVar6 >> 0x20;\n            uVar4 = uVar6 >> 0x20;\n            if (uVar6 <= uVar4) {\n                uVar6 = uVar4 >> 9;\n                if (*(in_RAX + 0x10) < uVar6 || *(in_RAX + 0x10) == uVar6) goto code_r0x00429656;\n                piVar5 = uVar6 * 8 + *(in_RAX + 8);\n                iVar2 = *piVar5;\n                if (iVar2 == 0) goto code_r0x00429656;\n                uVar4 = *(iVar2 + 0x10);\n                uVar6 = uVar4;\n                if (uVar4 != 0) {\n                    if (uVar4 != 0x200) {\n                        *(*0x20 + 8) = in_RAX;\n                        iVar3 = *piVar5;\n                        *piVar5 = 0;\n                        uVar1 = *(iVar2 + 0x10);\n                        *(iVar2 + 0x10) = 0;\n                        *(*0x20 + -0x30) = 0x429650;\n                        fcn.004090a0(uVar1, iVar3);\n                        in_RAX = *(*0x20 + 8);\ncode_r0x00429656:\n                        *(in_RAX + 0x20) = 0;\n                        *(in_RAX + 0x10) = 0;\n                        return;\n                    }\n                    *(*0x20 + -0x30) = 0x42967d;\n                    fcn.00430d40();\n                }\n                *(*0x20 + -0x30) = 0x42968e;\n                fcn.00430d40();\n            }\n            *(*0x20 + -0x10) = uVar6;\n            *(*0x20 + -0x18) = piVar5;\n            *(*0x20 + -0x30) = 0x42969d;\n            fcn.004324c0();\n            *(*0x20 + -0x30) = 0x4296ae;\n            fcn.00432dc0();\n            *(*0x20 + -0x30) = 0x4296b8;\n            fcn.00432ac0();\n            *(*0x20 + -0x30) = 0x4296c9;\n            fcn.00432dc0();\n            *(*0x20 + -0x30) = 0x4296d5;\n            fcn.00432ac0();\n            *(*0x20 + -0x30) = 0x4296da;\n            fcn.00432720();\n            *(*0x20 + -0x30) = 0x4296df;\n            fcn.00432540();\n            *(*0x20 + -0x30) = 0x4296f0;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x4296fb;\n        fcn.00457040();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 927
    },
    "00429720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t * fcn.00429720(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t *puVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    do {\n        uVar1 = *in_RAX;\n        if (uVar1 == 0) {\n            puVar3 = NULL;\n            break;\n        }\n        puVar3 = (uVar1 >> 0x13) << 3;\n        LOCK();\n        uVar2 = *in_RAX;\n        *in_RAX = *in_RAX ^ (uVar1 == uVar2) * (*in_RAX ^ *puVar3);\n    } while (uVar1 != uVar2);\n    if (puVar3 == NULL) {\n        puVar3 = fcn.0040b720(0x559b78);\n        return puVar3;\n    }\n    return puVar3;\n}\n",
        "token_count": 259
    },
    "004297c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004297c0(void)\n\n{\n    int64_t iVar1;\n    int64_t *in_RAX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            iVar1 = *in_RAX;\n            *in_RAX = *in_RAX + 1;\n            if (iVar1 + 1 != 0) {\n                return;\n            }\n            *(*0x20 + -0x10) = iVar1 + 1;\n            *(*0x20 + -0x28) = 0x4297fe;\n            fcn.004324c0();\n            *(*0x20 + -0x28) = 0x42980f;\n            fcn.00432dc0();\n            *(*0x20 + -0x28) = 0x42981d;\n            fcn.00432ac0();\n            *(*0x20 + -0x28) = 0x42982e;\n            fcn.00432dc0();\n            *(*0x20 + -0x28) = 0x42983a;\n            fcn.00432ac0();\n            *(*0x20 + -0x28) = 0x42983f;\n            fcn.00432720();\n            *(*0x20 + -0x28) = 0x429845;\n            fcn.00432540();\n            *(*0x20 + -0x28) = 0x429856;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x429865;\n        fcn.00457040();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 502
    },
    "004298a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004298a0(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t *in_RAX;\n    int64_t unaff_RBX;\n    \n    if (in_RAX == NULL) {\n        return;\n    }\n    LOCK();\n    iVar1 = *in_RAX;\n    *in_RAX = *in_RAX + unaff_RBX;\n    if (((unaff_RBX < 1) || (unaff_RBX <= unaff_RBX + iVar1)) &&\n       ((-1 < unaff_RBX || (unaff_RBX <= iVar1 + unaff_RBX * 2)))) {\n        return;\n    }\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432ac0();\n    fcn.00432dc0();\n    fcn.00432bc0();\n    fcn.00432720();\n    fcn.00432540();\n    fcn.00430d40();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 238
    },
    "00429a60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00429a60(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong in_RAX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar3 = *(*(unaff_R14 + 0x30) + 0xa0);\n            if (iVar3 == 0) {\n                *(*0x20 + -0x28) = 0x429aad;\n                fcn.00409520();\n                return;\n            }\n            LOCK();\n            piVar1 = iVar3 + 0x26d4;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + 1;\n            if ((iVar2 + 1U & 1) == 0) {\n                return;\n            }\n            *(*0x20 + -0xc) = iVar2 + 1U;\n            *(*0x20 + -0x28) = 0x429ac5;\n            fcn.004324c0();\n            *(*0x20 + -0x28) = 0x429ad6;\n            fcn.00432dc0();\n            *(*0x20 + -0x28) = 0x429adf;\n            fcn.00432ac0();\n            *(*0x20 + -0x28) = 0x429ae5;\n            fcn.00432720();\n            *(*0x20 + -0x28) = 0x429aea;\n            fcn.00432540();\n            *(*0x20 + -0x28) = 0x429afb;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x429b06;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 542
    },
    "00429fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00429fa0(void)\n\n{\n    int64_t in_RAX;\n    ulong *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00409300();\n    *unaff_RBX = *(in_RAX + 8);\n    *(in_RAX + 8) = unaff_RBX;\n    fcn.00409520();\n    return;\n}\n",
        "token_count": 134
    },
    "0042a1e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042a1e0(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x40) = _sym.imp.kernel32.dll_CreateIoCompletionPort;\n            *(*0x20 + -0x38) = 0xffffffffffffffff;\n            *(*0x20 + -0x30) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x20) = 0xffffffff;\n            *(*0x20 + -0x48) = 0x42a225;\n            fcn.0042d6e0();\n            *0x4f0270 = *(*0x20 + -0x18);\n            if (*0x4f0270 != 0) {\n                return;\n            }\n            *(*0x20 + -0x48) = 0x42a259;\n            fcn.0045ab80();\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            *(*0x20 + -0x10) = *(*0x20 + -0x40);\n            *(*0x20 + -0x48) = 0x42a27a;\n            fcn.004324c0();\n            *(*0x20 + -0x48) = 0x42a28b;\n            fcn.00432dc0();\n            *(*0x20 + -0x48) = 0x42a295;\n            fcn.00432ac0();\n            *(*0x20 + -0x48) = 0x42a2a6;\n            fcn.00432dc0();\n            *(*0x20 + -0x48) = 0x42a2ab;\n            fcn.00432540();\n            *(*0x20 + -0x48) = 0x42a2bc;\n            fcn.00430d40();\n        }\n        *(puVar1 + -8) = 0x42a2c5;\n        fcn.00457040();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 675
    },
    "0042a840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042a840(ulong arg1)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint unaff_EDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = *(unaff_RBX + 0x28);\n            if ((uVar1 == 0x72) || (uVar1 == 0x77)) {\n                *(unaff_RBX + 0x2c) = arg1;\n                *(unaff_RBX + 0x30) = unaff_EDI;\n                *(*0x20 + -0x30) = 0x42a87b;\n                fcn.0042a020(uVar1);\n                return;\n            }\n            *(*0x20 + -0xc) = uVar1;\n            *(*0x20 + -0x30) = 0x42a88e;\n            fcn.004324c0();\n            *(*0x20 + -0x30) = 0x42a89f;\n            fcn.00432dc0();\n            *(*0x20 + -0x30) = 0x42a8ab;\n            fcn.00432bc0();\n            *(*0x20 + -0x30) = 0x42a8b0;\n            fcn.00432720();\n            *(*0x20 + -0x30) = 0x42a8b5;\n            fcn.00432540();\n            unaff_RBX = 0x17;\n            *(*0x20 + -0x30) = 0x42a8c6;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x1c) = unaff_EDI;\n        *(puVar2 + -8) = 0x42a8de;\n        fcn.00457040();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1._0_4_ = *(puVar2 + 0x18);\n        unaff_EDI = *(puVar2 + 0x1c);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 654
    },
    "0042a900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0042a900(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    ulong in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 - 1 < arg1) {\n                uVar1 = *((arg1 - 1) + unaff_RBX);\n                arg1 = uVar1;\n                if (uVar1 == 0) {\n                    *(*0x20 + -0x28) = _sym.imp.kernel32.dll_GetProcAddress;\n                    *(*0x20 + -0x20) = in_RAX;\n                    *(*0x20 + -0x18) = unaff_RBX;\n                    *(*0x20 + -0x30) = 0x42a949;\n                    fcn.0042d5e0();\n                    return *(*0x20 + -0x10);\n                }\n                unaff_RBX = 5;\n                *(*0x20 + -0x30) = 0x42a97d;\n                fcn.00430d40();\n            }\n            *(*0x20 + -0x30) = 0x42a985;\n            in_RAX = fcn.00459720(arg1);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x42a99f;\n        fcn.00457040();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 569
    },
    "0042b660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b660(void)\n\n{\n    int64_t unaff_R14;\n    int64_t iStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.0042d6e0();\n    if (iStack16 != 0) {\n        *0x557c69 = 1;\n        fcn.0042d560();\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "0042bb00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0042bb00(void)\n\n{\n    fcn.0042d560();\n    return -*0x557e20 * *0x557e18;\n}\n",
        "token_count": 40
    },
    "0042bb80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0042bb80(void)\n\n{\n    fcn.0042d560();\n    fcn.0042d560();\n    return 0x195726909;\n}\n",
        "token_count": 40
    },
    "0042bf60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042bf60(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t unaff_RBX;\n    \n    if (unaff_RBX != 0) {\n        fcn.0042d5e0();\n        fcn.00440520(arg1);\n        return;\n    }\n    fcn.00459720(0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 100
    },
    "0042c260": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042c260(void)\n\n{\n    fcn.00409300();\n    *0x557c8c = 1;\n    fcn.0042d560();\n    return;\n}\n",
        "token_count": 45
    },
    "0042cd00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042cd00(void)\n\n{\n    int64_t iStack32;\n    \n    fcn.0042d7e0();\n    if (iStack32 != 0) {\n        fcn.0042d560();\n        return;\n    }\n    if (*0x557c8c != 0) goto code_r0x0042ce4e;\n    do {\n        fcn.0045ab80();\n        fcn.004324c0();\n        fcn.00432dc0();\n        fcn.00432bc0();\n        fcn.00432dc0();\n        fcn.00432ac0();\n        fcn.00432dc0();\n        fcn.00432540();\n        fcn.00430d40();\ncode_r0x0042ce4e:\n        fcn.00409300();\n        fcn.00409300();\n    } while( true );\n}\n",
        "token_count": 197
    },
    "0042d320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d320(void)\n\n{\n    int64_t in_RAX;\n    \n    if (*(in_RAX + 0x348) != 0) {\n        fcn.0042d560();\n        *(in_RAX + 0x348) = 0;\n    }\n    if (*(in_RAX + 0x338) != 0) {\n        fcn.0042d560();\n        *(in_RAX + 0x338) = 0;\n    }\n    if (*(in_RAX + 0x340) != 0) {\n        fcn.0042d560();\n        *(in_RAX + 0x340) = 0;\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "0042d500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d500(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    uchar auStackX8 [32];\n    \n    iVar1 = *(unaff_R14 + 0x30);\n    *(iVar1 + 0x2a0) = 0;\n    *(iVar1 + 0x2a8) = auStackX8;\n    fcn.0042d420();\n    return;\n}\n",
        "token_count": 100
    },
    "0042d560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d560(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [8];\n    ulong uStackX24;\n    \n    uStackX24 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x2a0) = 1;\n    *(iVar1 + 0x2a8) = auStackX16;\n    fcn.0042d420();\n    return;\n}\n",
        "token_count": 123
    },
    "0042d5e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d5e0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [16];\n    ulong uStackX32;\n    \n    uStackX32 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x2a0) = 2;\n    *(iVar1 + 0x2a8) = auStackX16;\n    fcn.0042d420();\n    return;\n}\n",
        "token_count": 125
    },
    "0042d660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d660(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000028;\n    \n    uStack0000000000000028 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x2a0) = 3;\n    *(iVar1 + 0x2a8) = auStackX16;\n    fcn.0042d420();\n    return;\n}\n",
        "token_count": 131
    },
    "0042d6e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d6e0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000030;\n    \n    uStack0000000000000030 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x2a0) = 4;\n    *(iVar1 + 0x2a8) = auStackX16;\n    fcn.0042d420();\n    return;\n}\n",
        "token_count": 133
    },
    "0042d760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d760(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000038;\n    \n    uStack0000000000000038 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x2a0) = 5;\n    *(iVar1 + 0x2a8) = auStackX16;\n    fcn.0042d420();\n    return;\n}\n",
        "token_count": 131
    },
    "0042d7e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d7e0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000040;\n    \n    uStack0000000000000040 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x2a0) = 6;\n    *(iVar1 + 0x2a8) = auStackX16;\n    fcn.0042d420();\n    return;\n}\n",
        "token_count": 133
    },
    "0042d860": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d860(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000048;\n    \n    uStack0000000000000048 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x2a0) = 7;\n    *(iVar1 + 0x2a8) = auStackX16;\n    fcn.0042d420();\n    return;\n}\n",
        "token_count": 131
    },
    "0042d8e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d8e0(void)\n\n{\n    fcn.00456f00();\n    return;\n}\n",
        "token_count": 27
    },
    "0042f820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042f820(int64_t arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00456f00();\n    return;\n}\n",
        "token_count": 85
    },
    "004324c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004324c0(void)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    iVar2 = *(unaff_R14 + 0x30);\n    *(iVar2 + 0xd8) = *(iVar2 + 0xd8) + 1;\n    cVar1 = *(iVar2 + 0xe7);\n    *(iVar2 + 0xe7) = cVar1 + '\\x01';\n    if (cVar1 == '\\0') {\n        fcn.00409300();\n    }\n    *(iVar2 + 0xd8) = *(iVar2 + 0xd8) + -1;\n    return;\n}\n",
        "token_count": 202
    },
    "004326e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004326e0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00432dc0();\n    return;\n}\n",
        "token_count": 81
    },
    "00432720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00432720(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00432dc0();\n    return;\n}\n",
        "token_count": 80
    },
    "00432760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00432760(void)\n\n{\n    char in_AL;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (in_AL == '\\0') {\n        fcn.00432dc0();\n    }\n    else {\n        fcn.00432dc0();\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "00432a20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00432a20(ulong param_1, ulong param_2)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.004327c0(param_1, param_2);\n    fcn.004327c0(param_1, param_2);\n    fcn.00432dc0();\n    fcn.00432540();\n    return;\n}\n",
        "token_count": 148
    },
    "00432bc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00432bc0(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (in_RAX < 0) {\n        fcn.00432dc0();\n    }\n    fcn.00432ac0();\n    return;\n}\n",
        "token_count": 111
    },
    "00432c20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00432c20(void)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + -0x6c) = 0;\n            *(*0x20 + -0x98) = *0x20 + -8;\n            *(*0x20 + -0x90) = 0x432c6f;\n            uVar2 = fcn.004599ab();\n            unaff_RBP = *(*0x20 + -0x98);\n            for (iVar3 = 99;\n                (0 < iVar3 &&\n                ((*(*0x20 + iVar3 + -0x6c) = *((uVar2 & 0xf) + 0x482e44),  0xf < uVar2 ||\n                 (iVar1 = *0x557db8 + iVar3 + -100,  iVar1 != 0 && SBORROW8(*0x557db8, -(iVar3 + -100)) == iVar1 < 0))))\n                ; iVar3 = iVar3 + -1) {\n                uVar2 = uVar2 >> 4;\n            }\n            if (iVar3 - 1U < 100) {\n                *(*0x20 + iVar3 + -0x6d) = 0x78;\n                if (iVar3 - 2U < 100) {\n                    *(*0x20 + iVar3 + -0x6e) = 0x30;\n                    *(*0x20 + -0x90) = 0x432cf8;\n                    fcn.004325a0(-(iVar3 + -0x66));\n                    return;\n                }\n                *(*0x20 + -0x90) = 0x432d12;\n                fcn.00459720(100);\n            }\n            *(*0x20 + -0x90) = 0x432d1c;\n            in_RAX = fcn.00459720(100);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x432d27;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 615
    },
    "00432d40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00432d40(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00432c20();\n    return;\n}\n",
        "token_count": 81
    },
    "00432d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00432d80(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00432c20();\n    return;\n}\n",
        "token_count": 81
    },
    "00432e40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00432e40(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432bc0();\n    fcn.00432dc0();\n    fcn.00432bc0();\n    fcn.00432dc0();\n    fcn.00432540();\n    fcn.00432c20();\n    return;\n}\n",
        "token_count": 146
    },
    "00432f20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00432f20(code **arg1)\n\n{\n    ulong uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    ulong *puVar3;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.004324c0();\n    *0x557db8 = 0x10;\n    for (uVar2 = 0; uVar2 + in_RAX < unaff_RBX; uVar2 = uVar2 + 8) {\n        if ((uVar2 & 0xf) == 0) {\n            if (uVar2 != 0) {\n                fcn.004324c0();\n                fcn.00432720();\n                fcn.00432540();\n            }\n            fcn.004324c0();\n            fcn.00432c20();\n            fcn.00432dc0();\n            fcn.00432540();\n        }\n        if (arg1 != NULL) {\n            (**arg1)(*arg1, arg1, unaff_RBX);\n        }\n        fcn.004325a0(1);\n        fcn.004324c0();\n        fcn.00432c20();\n        fcn.00432540();\n        fcn.004324c0();\n        fcn.004326e0();\n        fcn.00432540();\n        puVar3 = fcn.004478a0();\n        if (puVar3 != NULL) {\n            fcn.00447f80();\n            uVar1 = *puVar3;\n            fcn.004324c0();\n            fcn.00432dc0();\n            fcn.00432dc0();\n            fcn.00432dc0();\n            fcn.00432c20(uVar1);\n            fcn.00432dc0();\n            fcn.00432540();\n        }\n    }\n    *0x557db8 = 0;\n    fcn.004324c0();\n    fcn.00432720();\n    fcn.00432540();\n    fcn.00432540();\n    return;\n}\n",
        "token_count": 506
    },
    "00433780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00433780(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00456f00();\n    return;\n}\n",
        "token_count": 80
    },
    "00434160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00434160(void)\n\n{\n    int64_t iVar1;\n    code **in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00409300();\n    iVar1 = *0x503f28;\n    for (iVar2 = 0; iVar2 < iVar1; iVar2 = iVar2 + 1) {\n        (**in_RAX)();\n    }\n    fcn.00409520();\n    return;\n}\n",
        "token_count": 152
    },
    "00434220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00434220(void)\n\n{\n    uint64_t uVar1;\n    code **in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    while (uVar1 = *0x557d08,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    for (uVar2 = 0; uVar2 < uVar1; uVar2 = uVar2 + 1) {\n        (**in_RAX)(*in_RAX, in_RAX);\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "004342c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.004342c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.004010a0();\n    *0x557c62 = *0x558405;\n    *0x557c63 = *0x5582c0;\n    *0x557c76 = *0x5584a7;\n    *0x557c77 = *0x5584aa;\n    *0x557c78 = *0x5584ae;\n    return;\n}\n",
        "token_count": 157
    },
    "004345c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004345c0(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x5047d0 - *0x5047e0 <= *0x5047d8) {\n                return;\n            }\n            *(*0x20 + -0xc) = *0x5047d8;\n            *(*0x20 + -0x28) = 0x434605;\n            fcn.004324c0();\n            *(*0x20 + -0x28) = 0x434616;\n            fcn.00432dc0();\n            *(*0x20 + -0x28) = 0x434625;\n            fcn.00432bc0();\n            *(*0x20 + -0x28) = 0x434636;\n            fcn.00432dc0();\n            *(*0x20 + -0x28) = 0x43463b;\n            fcn.00432540();\n            *(*0x20 + -0x28) = 0x43464c;\n            fcn.00430d40();\n        }\n        *(puVar1 + -8) = 0x434652;\n        fcn.00457040();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 387
    },
    "00434660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00434660(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x5047d0 <= *0x5047d0 + 1) {\n                *(*0x20 + -0x10) = *0x5047d0;\n                *(*0x20 + -0x28) = 0x434696;\n                *0x5047d0 = *0x5047d0 + 1;\n                fcn.004345c0();\n                return *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x28) = 0x4346b6;\n            fcn.00430d40();\n        }\n        *(puVar1 + -8) = 0x4346bc;\n        fcn.00457040();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 305
    },
    "00435a40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435a40(void)\n\n{\n    code **ppcVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    ulong *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (**(unaff_R14 + 0x30) == unaff_R14) {\n                *(*0x20 + -0x10) = unaff_R14;\n                *(unaff_R14 + 0x48) = unaff_R14;\n                *(unaff_R14 + 0x40) = **0x20;\n                *(unaff_R14 + 0x38) = *0x20 + 8;\n                *(*0x20 + -0x28) = 0x435a89;\n                fcn.00456e20();\n                *(*0x20 + -0x28) = 0x435aa5;\n                fcn.0042cec0();\n                iVar3 = *(*0x20 + -0x10);\n                if (*(iVar3 + 0x30) == 0x5043a0) {\n                    *(*0x20 + -0x28) = 0x435abc;\n                    fcn.00435b40();\n                    iVar3 = *(*0x20 + -0x10);\n                }\n                ppcVar1 = *(*(iVar3 + 0x30) + 0x88);\n                if (ppcVar1 != NULL) {\n                    pcVar2 = *ppcVar1;\n                    *(*0x20 + -0x28) = 0x435add;\n                    (*pcVar2)();\n                    iVar3 = *(*0x20 + -0x10);\n                }\n                if (*(iVar3 + 0x30) != 0x5043a0) {\n                    *(*0x20 + -0x28) = 0x435afe;\n                    fcn.0043cfc0();\n                    *(*(*(*0x20 + -0x10) + 0x30) + 0xa8) = 0;\n                }\n                *(*0x20 + -0x28) = 0x435b17;\n                fcn.004391c0();\n                return;\n            }\n            *(*0x20 + -0x28) = 0x435b32;\n            fcn.00430d40();\n        }\n        *(puVar4 + -8) = 0x435b38;\n        fcn.00457040();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 650
    },
    "00435b80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435b80(void)\n\n{\n    char cVar1;\n    int64_t unaff_R14;\n    \n    do {\n        fcn.00409680();\n        *(*(unaff_R14 + 0x30) + 0x120) = 0;\n        cVar1 = fcn.00436d20();\n    } while (cVar1 != '\\0');\n    return;\n}\n",
        "token_count": 90
    },
    "00436640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00436640(void)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (uVar1 = *0x557c94,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    *0x557c94 = 0;\n    if (uVar1 == 0) {\n        uVar2 = fcn.00436900();\n        uVar3 = *0x557d58;\n        *0x557d58 = uVar2;\n        if (uVar2 == 0) {\n            uVar3 = fcn.004366c0();\n        }\n    }\n    else {\n        for (uVar3 = 0; uVar3 < uVar1; uVar3 = uVar3 + 1) {\n            fcn.004366c0();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 245
    },
    "00436e00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00436e00(void)\n\n{\n    fcn.00436d20();\n    fcn.00456f00();\n    return;\n}\n",
        "token_count": 34
    },
    "00437620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00437657)\n\nvoid fcn.00437620(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (*0x5047f8 != 0) {\n        if (*0x5047fc != 0) {\n            return;\n        }\n        LOCK();\n        *0x5047fc = 1;\n        fcn.00437080();\n        return;\n    }\n    return;\n}\n",
        "token_count": 145
    },
    "00438dc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00438dc0(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (*0x5047a8 == 0) {\n        if ((*0x5047b0 == 0) || (in_RAX < *0x5047b0)) {\n            fcn.0042a3a0();\n        }\n    }\n    else {\n        fcn.00437620();\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "0043a8e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.0043a8e0(void)\n\n{\n    int32_t *piVar1;\n    uint64_t uVar2;\n    uint64_t *unaff_R14;\n    \n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + 1;\n    *(unaff_R14 + 0xb7) = 1;\n    unaff_R14[2] = 0xfffffffffffffade;\n    *(unaff_R14[6] + 0x274) = *(*(unaff_R14[6] + 0xa0) + 0x14);\n    *(unaff_R14 + 0xbb) = 1;\n    piVar1 = *(unaff_R14[6] + 0xa0) + 0x14;\n    *piVar1 = *piVar1 + 1;\n    fcn.0043a3e0();\n    uVar2 = unaff_R14[7];\n    unaff_R14[0xe] = uVar2;\n    unaff_R14[0xf] = unaff_R14[8];\n    if ((uVar2 <= *unaff_R14 && *unaff_R14 != uVar2) || (unaff_R14[1] < uVar2)) {\n        fcn.00456f00();\n    }\n    fcn.00435000(3);\n    uVar2 = unaff_R14[0xe];\n    if ((uVar2 <= *unaff_R14 && *unaff_R14 != uVar2) || (unaff_R14[1] < uVar2)) {\n        fcn.00456f00();\n    }\n    fcn.00456f00();\n    fcn.0043a3e0();\n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + -1;\n    return;\n}\n",
        "token_count": 431
    },
    "0043afe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0043afe0(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00409300();\n    iVar2 = fcn.0043ec80();\n    iVar1 = *0x5048b0;\n    if ((iVar2 != 0) && (*0x5048b0 != 0)) {\n        *0x5048b0 = 0;\n        fcn.00409600(iVar1);\n    }\n    fcn.00409520();\n    if (iVar2 != 0) {\n        fcn.0043cfc0();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 202
    },
    "0043b200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043b200(void)\n\n{\n    int32_t in_EAX;\n    int64_t *piVar1;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    piVar1 = fcn.0040b3c0();\n    if (-1 < in_EAX) {\n        uVar2 = 0;\n        while ((1 << (uVar2 & 0x1f) & -(uVar2 < 0x20)) < in_EAX + 0x1000) {\n            uVar2 = uVar2 + 1;\n        }\n        fcn.00456f00();\n        piVar1[2] = *piVar1 + 0x13a0;\n        piVar1[3] = -1;\n        **piVar1 = 0;\n    }\n    return;\n}\n",
        "token_count": 234
    },
    "0043b360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043b360(void)\n\n{\n    fcn.00456f00();\n    return;\n}\n",
        "token_count": 25
    },
    "0043d2a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043d2a0(void)\n\n{\n    int32_t in_EAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00409300();\n    *0x5047cc = *0x5047cc + in_EAX;\n    if (0 < in_EAX) {\n        fcn.0043d300();\n    }\n    fcn.00409520();\n    return;\n}\n",
        "token_count": 138
    },
    "0043e8c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043e8c0(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    *(in_RAX + 0x130) = *0x5047c0;\n    *0x5047c8 = *0x5047c8 + 1;\n    *0x5047c0 = in_RAX;\n    fcn.0043d300();\n    return;\n}\n",
        "token_count": 144
    },
    "0043eda0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0043eda0(char param_1)\n\n{\n    uint64_t *puVar1;\n    uint32_t uVar2;\n    uint64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    uVar4 = unaff_RBX;\n    if (param_1 != '\\0') {\n        do {\n            uVar4 = *(in_RAX + 0xdf8);\n            LOCK();\n            puVar1 = in_RAX + 0xdf8;\n            bVar5 = uVar4 == *puVar1;\n            *puVar1 = *puVar1 ^ bVar5 * (*puVar1 ^ unaff_RBX);\n        } while (!bVar5);\n        if (uVar4 == 0) {\n            return uVar4 ^ !bVar5 * (uVar4 ^ *puVar1);\n        }\n    }\n    do {\n        uVar2 = *(in_RAX + 0x5f4);\n        if (uVar2 - *(in_RAX + 0x5f0) < 0x100) {\n            *(in_RAX + 0x5f8 + (uVar2 & 0xff) * 8) = uVar4;\n            *(in_RAX + 0x5f4) = uVar2 + 1;\n            return in_RAX;\n        }\n        uVar3 = fcn.0043eea0(*(in_RAX + 0x5f0));\n    } while (uVar3 == '\\0');\n    return uVar3;\n}\n",
        "token_count": 416
    },
    "0043f260": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0043f260(void)\n\n{\n    uint64_t *puVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    int64_t in_RAX;\n    uint32_t uVar7;\n    bool bVar8;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    uint64_t uStack24;\n    uint64_t uStack16;\n    \n    uStack24 = CONCAT44(in_XMM15_Db, in_XMM15_Da);\n    uStack16 = CONCAT44(in_XMM15_Dd, in_XMM15_Dc);\n    uVar3 = *(in_RAX + 0xdf8);\n    if (uVar3 == 0) {\n        bVar8 = false;\n    }\n    else {\n        LOCK();\n        puVar1 = in_RAX + 0xdf8;\n        bVar8 = uVar3 == *puVar1;\n        *puVar1 = *puVar1 ^ bVar8 * *puVar1;\n    }\n    uVar4 = uStack24;\n    uVar5 = uStack16;\n    if ((bVar8) && (*(uVar3 + 0xa0) = 0,  uVar4 = uVar3,  uVar5 = uVar3,  uStack16 != 0)) {\n        *(uStack16 + 0xa0) = uVar3;\n        uVar4 = uStack24;\n    }\n    do {\n        do {\n            uStack16 = uVar5;\n            uStack24 = uVar4;\n            iVar2 = *(in_RAX + 0x5f0);\n            uVar7 = *(in_RAX + 0x5f4) - iVar2;\n            if (uVar7 == 0) {\n                return uStack24;\n            }\n            uVar4 = uStack24;\n            uVar5 = uStack16;\n        } while (0x100 < uVar7);\n        LOCK();\n    } while (iVar2 != *(in_RAX + 0x5f0));\n    *(in_RAX + 0x5f0) = uVar7 + iVar2;\n    for (uVar6 = 0; uVar6 < uVar7; uVar6 = uVar6 + 1) {\n        uVar3 = *(in_RAX + 0x5f8 + (uVar6 + iVar2) * 8);\n        *(uVar3 + 0xa0) = 0;\n        uVar4 = uVar3;\n        if (uStack16 != 0) {\n            *(uStack16 + 0xa0) = uVar3;\n            uVar4 = uStack24;\n        }\n        uStack24 = uVar4;\n        uStack16 = uVar3;\n    }\n    return uStack24;\n}\n",
        "token_count": 663
    },
    "00440200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00440200(uint64_t param_1, uint64_t param_2)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *0x5580a0 = 1;\n            *0x5580c0 = 1;\n            iVar5 = 7;\n            *(*0x20 + -0x88) = 0x44023d;\n            uVar3 = fcn.00406320();\n            while( true ) {\n                if (iVar5 == 0) {\n                    *0x5580dc = (*0x5580e0 | *0x5580e4 | *0x5580e8) != 0;\n                    *(*0x20 + -0x88) = 0x4403ff;\n                    fcn.00406320();\n                    *(*0x20 + -0x88) = 0x440405;\n                    fcn.00454b60();\n                    *0x557cd8 = *0x4f0188;\n                    return;\n                }\n                *(*0x20 + -0x60) = iVar5;\n                *(*0x20 + -0x28) = uVar3;\n                *(*0x20 + -0x80) = uVar3;\n                *(*0x20 + -0x78) = iVar5;\n                *(*0x20 + -0x70) = 0x2c;\n                *(*0x20 + -0x88) = 0x44026f;\n                fcn.00402300(param_1, param_2);\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                param_1 = *(*0x20 + -0x68);\n                if (param_1 < 0) {\n                    param_2 = *(*0x20 + -0x28);\n                    iVar7 = 0;\n                    iVar5 = 0;\n                    param_1 = *(*0x20 + -0x60);\n                }\n                else {\n                    param_2 = *(*0x20 + -0x60);\n                    if (param_2 < param_1) goto code_r0x004404fa;\n                    if (param_2 < param_1 + 1) goto code_r0x004404f2;\n                    iVar7 = (param_2 - param_1) + -1;\n                    param_2 = *(*0x20 + -0x28);\n                    iVar5 = (param_1 + 1 & -iVar7 >> 0x3f) + param_2;\n                }\n                *(*0x20 + -0x60) = iVar7;\n                *(*0x20 + -0x10) = iVar5;\n                *(*0x20 + -0x50) = param_1;\n                *(*0x20 + -0x80) = param_2;\n                *(*0x20 + -0x78) = param_1;\n                *(*0x20 + -0x70) = 0x3d;\n                *(*0x20 + -0x88) = 0x4402f5;\n                fcn.00402300(param_1, param_2);\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                param_1 = *(*0x20 + -0x68);\n                if (-1 < param_1) break;\ncode_r0x0044023f:\n                iVar5 = *(*0x20 + -0x60);\n                uVar3 = *(*0x20 + -0x10);\n            }\n            uVar4 = *(*0x20 + -0x50);\n            param_2 = uVar4;\n            if (param_1 <= uVar4) {\n                if (param_1 + 1 <= uVar4) {\n                    param_2 = (uVar4 - param_1) - 1;\n                    piVar1 = *(*0x20 + -0x28);\n                    if ((((param_1 == 0xe) && (*piVar1 == 0x69666f72706d656d)) && (*(piVar1 + 1) == 0x6172656c)) &&\n                       (*(piVar1 + 0xc) == 0x6574)) {\n                        *(*0x20 + -0x88) = 0x440385;\n                        uVar4 = param_2;\n                        uVar3 = fcn.00446ba0();\n                        cVar2 = param_2;\n                        param_2 = uVar4;\n                        if (cVar2 != '\\0') {\n                            *0x557cf8 = uVar3;\n                        }\n                    }\n                    else if (0 < *0x4fd578) {\n                        *(*0x20 + -0x58) = param_1;\n                        *(*0x20 + -0x38) = param_2;\n                        *(*0x20 + -0x30) = (param_1 + 1 & -param_2 >> 0x3f) + piVar1;\n                        *(*0x20 + -0x40) = *0x4fd578;\n                        iVar8 = 0;\n                        iVar5 = *0x4fd578;\n                        iVar7 = *0x4fd570;\n                        while( true ) {\n                            uVar4 = *(iVar7 + 8);\n                            uVar3 = *(iVar7 + 0x10);\n                            if (uVar4 == param_1) {\n                                *(*0x20 + -0x48) = iVar8;\n                                *(*0x20 + -0x18) = iVar7;\n                                *(*0x20 + -0x20) = uVar3;\n                                *(*0x20 + -0x88) = 0x44044d;\n                                cVar2 = fcn.004021a0(uVar4, param_2);\n                                if (cVar2 == '\\0') {\n                                    param_1 = *(*0x20 + -0x58);\n                                    param_2 = *(*0x20 + -0x38);\n                                    iVar5 = *(*0x20 + -0x40);\n                                    iVar7 = *(*0x20 + -0x18);\n                                    iVar8 = *(*0x20 + -0x48);\n                                }\n                                else {\n                                    uVar3 = *(*0x20 + -0x38);\n                                    *(*0x20 + -0x88) = 0x440491;\n                                    iVar5 = fcn.00446ba0();\n                                    if ((iVar5 == iVar5) && (uVar3 != '\\0')) {\n                                        **(*0x20 + -0x20) = iVar5;\n                                    }\n                                    param_1 = *(*0x20 + -0x58);\n                                    param_2 = *(*0x20 + -0x38);\n                                    iVar5 = *(*0x20 + -0x40);\n                                    iVar7 = *(*0x20 + -0x18);\n                                    iVar8 = *(*0x20 + -0x48);\n                                }\n                            }\n                            iVar8 = iVar8 + 1;\n                            if (iVar5 <= iVar8) break;\n                            iVar7 = iVar7 + 0x18;\n                        }\n                    }\n                    goto code_r0x0044023f;\n                }\n                *(*0x20 + -0x88) = 0x4404ed;\n                fcn.004597e0(uVar4);\n                param_1 = uVar4;\n            }\n            *(*0x20 + -0x88) = 0x4404f2;\n            fcn.00459760(param_1, param_2);\ncode_r0x004404f2:\n            param_1 = param_2;\n            *(*0x20 + -0x88) = 0x4404fa;\n            param_2 = param_1;\n            fcn.004597e0(param_1);\ncode_r0x004404fa:\n            *(*0x20 + -0x88) = 0x4404ff;\n            fcn.00459760(param_1, param_2);\n        }\n        *(puVar6 + -8) = 0x440505;\n        fcn.00457040();\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1941
    },
    "00440520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00440520(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    ulong in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RDI < 0) {\n                unaff_RDI = 0;\n            }\n            while( true ) {\n                if (unaff_RBX <= unaff_RDI) {\n                    return;\n                }\n                *(*0x20 + -0x10) = unaff_RDI;\n                *(*0x20 + -0x30) = 0x440565;\n                fcn.0045afe0();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                iVar1 = *(*0x20 + -0x10);\n                iVar4 = iVar1;\n                if (0x10 < iVar1) {\n                    iVar4 = 0x10;\n                }\n                uVar2 = *(*0x20 + -0x28);\n                unaff_RDI = *(*0x20 + 0x10);\n                if (unaff_RDI <= iVar1 - iVar4) break;\n                *(*0x20 + -0x30) = 0x4405b0;\n                uVar3 = fcn.00459160(iVar4);\n                unaff_RBX = *(*0x20 + 0x10);\n                iVar1 = *(*0x20 + 8);\n                iVar4 = 0;\n                for (unaff_RDI = *(*0x20 + -0x10); (iVar4 < 8 && (unaff_RDI < unaff_RBX)); unaff_RDI = unaff_RDI + 1) {\n                    if (unaff_RBX <= unaff_RDI) {\n                        *(*0x20 + -0x30) = 0x440605;\n                        fcn.00459720(unaff_RBX);\n                        unaff_RBX = uVar2;\n                        goto code_r0x00440605;\n                    }\n                    *(iVar1 + unaff_RDI) = uVar3;\n                    iVar4 = iVar4 + 1;\n                    uVar3 = uVar3 >> 8;\n                }\n            }\ncode_r0x00440605:\n            *(*0x20 + -0x30) = 0x440610;\n            arg1 = unaff_RDI;\n            in_RAX = fcn.00459720(unaff_RDI);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x44062a;\n        fcn.00457040();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 871
    },
    "004406a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004406a0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    LOCK();\n    piVar1 = in_RAX + 0x28;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + 1;\n    if (iVar2 + 1 < 0) {\n        fcn.00456f00();\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "00441820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00441820(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.0042d560();\n    fcn.0042d560();\n    return;\n}\n",
        "token_count": 89
    },
    "004424e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004424e0(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uchar auVar2 [16];\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    uVar1 = *in_RAX;\n    auVar2 = ZEXT816(uVar1) * ZEXT816(arg1);\n    if ((((SUB168(auVar2 >> 0x40, 0) == 0) && (SUB168(auVar2, 0) < 0x1000000000001)) && (-1 < unaff_RBX)) &&\n       (unaff_RBX <= arg1)) {\n        fcn.0040a9e0(1);\n        return;\n    }\n    do {\n        auVar2 = ZEXT816(uVar1) * ZEXT816(unaff_RBX);\n        uVar3 = SUB168(auVar2, 0);\n        if (SUB168(auVar2 >> 0x40, 0) == 0) goto code_r0x00442558;\n        do {\n            unaff_RBX = 0x49e560;\n            uVar3 = fcn.004305a0();\ncode_r0x00442558:\n        } while ((0x1000000000000 < uVar3) || (unaff_RBX < 0));\n        unaff_RBX = 0x49e570;\n        fcn.004305a0();\n    } while( true );\n}\n",
        "token_count": 388
    },
    "00443f00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00443f00(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    uVar1 = *(in_RAX + 0x28);\n    if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n        *(in_RAX + 0x28) = uVar1 + unaff_RBX[2];\n    }\n    for (iVar2 = *(in_RAX + 0x28); iVar2 != 0; iVar2 = *(iVar2 + 0x28)) {\n        uVar1 = *(iVar2 + 0x18);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x18) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 8);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 8) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 0x20);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x20) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 0x28);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x28) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 0x38);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x38) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 0x30);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x30) = uVar1 + unaff_RBX[2];\n        }\n    }\n    fcn.0044ce00(unaff_RBX);\n    return;\n}\n",
        "token_count": 762
    },
    "00444040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00444040(uint64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    iVar3 = *(in_RAX + 0x148);\n    if (iVar3 != 0) {\n        iVar4 = 0;\n        for (; iVar3 != 0; iVar3 = *(iVar3 + 0x40)) {\n            if (iVar4 != *(iVar3 + 0x50)) {\n                fcn.00409300();\n            }\n            iVar4 = *(iVar3 + 0x50);\n        }\n        for (iVar3 = *(in_RAX + 0x148); iVar3 != 0; iVar3 = *(iVar3 + 0x40)) {\n            uVar1 = *(iVar3 + 0x18);\n            if ((*arg1 < uVar1 || *arg1 == uVar1) && (uVar1 <= arg1[1] && arg1[1] != uVar1)) {\n                *(iVar3 + 0x18) = uVar1 + arg1[2];\n            }\n        }\n        if (arg1[0x23] == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = arg1[0x23] - (arg1[1] - unaff_RBX);\n            fcn.0045a040(iVar3);\n        }\n        iVar2 = 0;\n        for (iVar4 = *(in_RAX + 0x148); iVar4 != 0; iVar4 = *(iVar4 + 0x40)) {\n            if (iVar2 != *(iVar4 + 0x50)) {\n                fcn.00409520();\n            }\n            iVar2 = *(iVar4 + 0x50);\n        }\n        return iVar3;\n    }\n    return 0;\n}\n",
        "token_count": 489
    },
    "00446400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00446400(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((in_RAX == 0) || (0x20 < unaff_RBX)) {\n                *(*0x20 + -0x20) = 0x44643c;\n                iVar1 = fcn.00446920();\n                return iVar1;\n            }\n            if (unaff_RBX < 0x21) {\n                if (unaff_RBX != 0) {\n                    return in_RAX;\n                }\n                *(*0x20 + -0x20) = 0x446465;\n                fcn.00459720(0);\n            }\n            *(*0x20 + -0x20) = 0x446472;\n            in_RAX = fcn.00459760(unaff_RBX, 0x20);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x446485;\n        fcn.00457040();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 420
    },
    "00446660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00446660(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t iVar7;\n    uint64_t arg1_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x54) = 0;\n            iVar1 = 0;\n            iVar4 = 0;\n            while (*(*0x20 + -0x48) = iVar1,  iVar4 < arg1) {\n                *(*0x20 + -0x28) = iVar4;\n                unaff_RDI = *(unaff_RBX + iVar4 * 4);\n                *(*0x20 + -0x80) = 0x4466b5;\n                iVar1 = fcn.00453020(4);\n                iVar1 = *(*0x20 + -0x48) + iVar1;\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                iVar4 = *(*0x20 + -0x28) + 1;\n            }\n            unaff_RBX = iVar1 + 3;\n            *(*0x20 + -0x80) = 0x4466ee;\n            uVar2 = fcn.00446400();\n            *(*0x20 + -0x20) = uVar2;\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + -0x38) = unaff_RDI;\n            *(*0x20 + -0x30) = iVar1;\n            iVar5 = *(*0x20 + 0x18);\n            iVar7 = *(*0x20 + -0x48);\n            iVar4 = 0;\n            arg1_00 = 0;\n            while ((iVar4 < iVar5 && (arg1_00 < iVar7))) {\n                if (unaff_RDI < arg1_00) goto code_r0x004467e8;\n                *(*0x20 + -0x28) = iVar4;\n                *(*0x20 + -0x50) = arg1_00;\n                *(*0x20 + -0x80) = 0x446756;\n                iVar3 = fcn.00453020(iVar1 - arg1_00);\n                iVar4 = *(*0x20 + -0x28) + 1;\n                iVar5 = *(*0x20 + 0x18);\n                uVar2 = *(*0x20 + -0x20);\n                unaff_RBX = *(*0x20 + -0x40);\n                iVar1 = *(*0x20 + -0x30);\n                unaff_RDI = *(*0x20 + -0x38);\n                iVar7 = *(*0x20 + -0x48);\n                arg1_00 = *(*0x20 + -0x50) + iVar3;\n            }\n            if (arg1_00 <= unaff_RBX) {\n                return uVar2;\n            }\n            *(*0x20 + -0x80) = 0x4467e8;\n            fcn.00459760(arg1_00, unaff_RBX);\ncode_r0x004467e8:\n            *(*0x20 + -0x80) = 0x4467f3;\n            arg1 = unaff_RDI;\n            in_RAX = fcn.004597e0(unaff_RDI);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        *(puVar6 + -8) = 0x44680d;\n        fcn.00457040();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1130
    },
    "00446840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00446840(void)\n\n{\n    int64_t in_RAX;\n    uint64_t arg1;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        iVar2 = unaff_RDI;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x40) = 0x446885;\n                in_RAX = fcn.00446920();\n                iVar2 = *(*0x20 + 0x10);\n                iVar1 = unaff_RBX;\n                unaff_RBX = unaff_RDI;\n            }\n            else {\n                unaff_RSI = 4;\n                iVar1 = 4;\n                iVar2 = unaff_RBX;\n                unaff_RBX = 4;\n            }\n            *(*0x20 + -0x18) = iVar1;\n            *(*0x20 + -0x10) = in_RAX;\n            if (iVar2 != iVar2) {\n                iVar2 = 0xfffd;\n            }\n            *(*0x20 + -0x40) = 0x4468be;\n            arg1 = fcn.00453020(unaff_RSI);\n            if (arg1 <= *(*0x20 + -0x18)) {\n                return *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x40) = 0x4468e5;\n            in_RAX = fcn.00459760(arg1, *(*0x20 + -0x18));\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x4468f5;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n        unaff_RDI = iVar2;\n    } while( true );\n}\n",
        "token_count": 600
    },
    "00446c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00446c80(void)\n\n{\n    uint64_t in_RAX;\n    int64_t iVar1;\n    int64_t arg2;\n    int64_t iStack56;\n    \n    if (in_RAX != 0) {\n        arg2 = -((in_RAX & 0xfff) - 0x1000);\n        iVar1 = 0;\n        while( true ) {\n            fcn.00402300(in_RAX, arg2);\n            if (iStack56 != -1) break;\n            in_RAX = in_RAX + arg2;\n            iVar1 = iVar1 + arg2;\n            arg2 = 0x1000;\n        }\n        return iStack56 + iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 167
    },
    "00446d40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00446d40(void)\n\n{\n    uint16_t uVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t arg1;\n    uint64_t arg1_00;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t arg1_01;\n    ulong arg1_02;\n    int64_t unaff_R14;\n    \ncode_r0x00446d40:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x78;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x30) = 0;\n        iVar3 = 0;\n        uVar4 = 0;\n        while (arg1 = 0x3fffffffffff,  uVar4 < 0x3fffffffffff) {\n            *(*0x20 + -0x48) = iVar3;\n            uVar1 = *(in_RAX + uVar4 * 2);\n            arg1_00 = uVar1;\n            if (uVar1 == 0) {\n                *(*0x20 + -0x80) = 0x446dce;\n                uVar2 = fcn.00446920();\n                *(*0x20 + -0x18) = uVar2;\n                *(*0x20 + -0x58) = unaff_RBX;\n                *(*0x20 + -0x10) = uVar4;\n                *(*0x20 + -0x28) = arg1_00;\n                *(*0x20 + -0x20) = 0x3fffffffffff;\n                iVar3 = *(*0x20 + 8);\n                iVar6 = *(*0x20 + -0x48);\n                uVar7 = 0;\n                arg1_01 = 0;\n                goto code_r0x00446e73;\n            }\n            *(*0x20 + -0x38) = uVar4;\n            unaff_RBX = 8;\n            *(*0x20 + -0x80) = 0x446d86;\n            iVar3 = fcn.00453020(8);\n            iVar3 = *(*0x20 + -0x48) + iVar3;\n            in_RAX = *(*0x20 + 8);\n            uVar4 = *(*0x20 + -0x38) + 1;\n        }\n        goto code_r0x00446eea;\n    }\n    goto code_r0x00446ef6;\ncode_r0x00446e73:\n    arg1_02 = 0x3fffffffffff;\n    if (0x3ffffffffffe < uVar7) goto code_r0x00446edf;\n    if ((*(iVar3 + uVar7 * 2) == 0) || (iVar6 <= arg1_01)) {\n        if (arg1_01 < arg1_00) {\n            *(uVar4 + arg1_01) = 0;\n            if (arg1_01 <= unaff_RBX) {\n                return uVar2;\n            }\n            *(*0x20 + -0x80) = 0x446ec9;\n            fcn.00459760(arg1_01, unaff_RBX);\n        }\n        *(*0x20 + -0x80) = 0x446ed4;\n        fcn.00459720(arg1_00);\ncode_r0x00446ed4:\n        *(*0x20 + -0x80) = 0x446edf;\n        fcn.004597e0(arg1_00);\n        goto code_r0x00446edf;\n    }\n    if (arg1_00 < arg1_01) goto code_r0x00446ed4;\n    *(*0x20 + -0x40) = uVar7;\n    *(*0x20 + -0x50) = arg1_01;\n    *(*0x20 + -0x80) = 0x446e2b;\n    iVar3 = fcn.00453020(arg1 - arg1_01);\n    uVar7 = *(*0x20 + -0x40) + 1;\n    arg1_01 = *(*0x20 + -0x50) + iVar3;\n    uVar4 = *(*0x20 + -0x10);\n    iVar3 = *(*0x20 + 8);\n    iVar6 = *(*0x20 + -0x48);\n    uVar2 = *(*0x20 + -0x18);\n    unaff_RBX = *(*0x20 + -0x58);\n    arg1 = *(*0x20 + -0x20);\n    arg1_00 = *(*0x20 + -0x28);\n    goto code_r0x00446e73;\ncode_r0x00446edf:\n    *(*0x20 + -0x80) = 0x446eea;\n    fcn.00459720(arg1_02);\ncode_r0x00446eea:\n    *(*0x20 + -0x80) = 0x446ef5;\n    in_RAX = fcn.00459720(arg1);\ncode_r0x00446ef6:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + -8) = 0x446f05;\n    fcn.00457040();\n    in_RAX = *(puVar5 + 8);\n    *0x20 = puVar5;\n    goto code_r0x00446d40;\n}\n",
        "token_count": 1314
    },
    "004478a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nint64_t fcn.004478a0(void)\n\n{\n    uint64_t arg1;\n    uint64_t uVar1;\n    code *pcVar2;\n    uint64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    int32_t *piVar7;\n    \n    for (uVar5 = 0x4f53c0; uVar5 != 0; uVar5 = *(uVar5 + 0x210)) {\n        if ((*(uVar5 + 0xa0) < in_RAX || *(uVar5 + 0xa0) == in_RAX) &&\n           (in_RAX <= *(uVar5 + 0xa8) && *(uVar5 + 0xa8) != in_RAX)) goto code_r0x004478e0;\n    }\n    uVar5 = 0;\ncode_r0x004478e0:\n    if (uVar5 == 0) {\n        return 0;\n    }\n    uVar3 = in_RAX - *(uVar5 + 0xa0);\n    piVar7 = (uVar3 >> 0xc) * 0x14 + *(uVar5 + 0x98);\n    uVar3 = (uVar3 & 0xfff) >> 8;\n    if (uVar3 < 0x10) {\n        uVar6 = *(piVar7 + uVar3 + 4) + *piVar7;\n        uVar3 = uVar6;\n        arg1 = *(uVar5 + 0x88);\n        iVar4 = *(uVar5 + 0x80);\n        if (arg1 <= uVar6) {\n            uVar3 = arg1 - 1;\n        }\n        if ((uVar3 & 0xffffffff) < arg1) {\n            uVar1 = uVar3;\n            if (in_RAX < *(iVar4 + (uVar3 & 0xffffffff) * 0x10)) goto code_r0x004479f0;\n            do {\n                uVar3 = uVar1;\n                uVar6 = uVar3 + 1;\n                if (arg1 <= uVar6) goto code_r0x004479e6;\n                uVar1 = uVar6;\n            } while (*(uVar6 * 0x10 + iVar4) <= in_RAX);\n            do {\n                if ((uVar3 & 0xffffffff) < arg1) {\n                    uVar1 = *(iVar4 + 8 + (uVar3 & 0xffffffff) * 0x10);\n                    if (uVar1 == 0xffffffffffffffff) {\n                        return 0;\n                    }\n                    uVar3 = *(uVar5 + 0x70);\n                    in_RAX = *(uVar5 + 0x68);\n                    if (uVar1 < uVar3) {\n                        return uVar1 + in_RAX;\n                    }\n                    fcn.00459740(uVar3);\n                }\n                fcn.00459720(arg1);\ncode_r0x004479e6:\n                uVar5 = arg1;\n                fcn.00459720(arg1);\n                while( true ) {\n                    uVar3 = uVar3 - 1;\ncode_r0x004479f0:\n                    if (arg1 <= (uVar3 & 0xffffffff)) goto code_r0x00447a25;\n                    if (*(iVar4 + (uVar3 & 0xffffffff) * 0x10) <= in_RAX) break;\n                    if (uVar3 == 0) goto code_r0x00447a0f;\n                }\n            } while (uVar3 != 0);\ncode_r0x00447a0f:\n            fcn.00430d40();\ncode_r0x00447a25:\n            fcn.00459720(arg1);\n        }\n        fcn.00459720(arg1);\n    }\n    fcn.00459740(0x10);\n    pcVar2 = swi(3);\n    iVar4 = (*pcVar2)();\n    return iVar4;\n}\n",
        "token_count": 908
    },
    "00448040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00448040(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    uint64_t arg1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \ncode_r0x00448040:\n    puVar2 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar2 = *0x20 + -0x18;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -0x20) = 0x448065;\n        iVar1 = fcn.00447f80();\n        arg1 = unaff_RBX;\n        do {\n            arg1 = arg1 - 1;\n            if (arg1 < 1) break;\n        } while (*(arg1 + iVar1) != '/');\n        do {\n            if (unaff_RBX <= arg1) goto code_r0x00448096;\n            if (unaff_RBX <= arg1) goto code_r0x004480ad;\n            if (*(arg1 + iVar1) == '.') goto code_r0x00448096;\n            arg1 = arg1 + 1;\n        } while( true );\n    }\n    goto code_r0x004480b9;\ncode_r0x00448096:\n    if (arg1 <= unaff_RBX) {\n        return;\n    }\n    *(*0x20 + -0x20) = 0x4480ad;\n    fcn.00459760(arg1, unaff_RBX);\ncode_r0x004480ad:\n    *(*0x20 + -0x20) = 0x4480b8;\n    in_RAX = fcn.00459720(unaff_RBX);\ncode_r0x004480b9:\n    *(puVar2 + 8) = in_RAX;\n    *(puVar2 + 0x10) = unaff_RBX;\n    *(puVar2 + -8) = 0x4480c8;\n    fcn.00457040();\n    in_RAX = *(puVar2 + 8);\n    unaff_RBX = *(puVar2 + 0x10);\n    *0x20 = puVar2;\n    goto code_r0x00448040;\n}\n",
        "token_count": 580
    },
    "004483c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004483c0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.004482a0(arg1);\n    return;\n}\n",
        "token_count": 86
    },
    "00448420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00448420(ulong arg1)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    uVar1 = fcn.00447a60(*(in_RAX + 0x14));\n    if ((uVar1 & 7) != 0) {\n        fcn.00447f80();\n        fcn.004324c0();\n        fcn.00432dc0();\n        fcn.00432dc0();\n        fcn.004326e0();\n        fcn.00432c20();\n        fcn.004326e0();\n        fcn.00432c20();\n        fcn.004326e0();\n        fcn.00432c20();\n        fcn.004326e0();\n        fcn.00432bc0(uVar1 & 0xffffffff);\n        fcn.00432720();\n        fcn.00432540();\n        uVar1 = uVar1 & 0xffffffff;\n    }\n    return uVar1;\n}\n",
        "token_count": 278
    },
    "00448580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00448580(void)\n\n{\n    uint32_t uVar1;\n    uint64_t arg1;\n    ulong *in_RAX;\n    int32_t iVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            arg1 = *(unaff_RBX + 0x58);\n            iVar4 = *(unaff_RBX + 0x60);\n            uVar1 = *(in_RAX + 0x14);\n            if (uVar1 <= arg1) {\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x18) = *in_RAX;\n                *(*0x20 + -0x20) = 0xffffffff;\n                iVar4 = iVar4 - uVar1;\n                iVar2 = 0;\n                while( true ) {\n                    *(*0x20 + -0x1c) = iVar2;\n                    *(*0x20 + -0x58) = 0x448634;\n                    fcn.004487c0(iVar4);\n                    if (*0x20 == '\\x18') break;\n                    iVar2 = *(*0x20 + -0x1c);\n                    if (*(*0x20 + -0x1c) < *(*0x20 + -0x20)) {\n                        iVar2 = *(*0x20 + -0x20);\n                    }\n                }\n                return *(*0x20 + -0x1c);\n            }\n            *(*0x20 + -0x58) = 0x44864f;\n            in_RAX = fcn.004597e0(arg1);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x44865f;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 605
    },
    "00448680": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00448680(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (*(in_RAX + 0x20) < arg1 || *(in_RAX + 0x20) == arg1) {\n        return 0xffffffff;\n    }\n    uVar1 = fcn.00447a60(*(in_RAX + arg1 * 4 + 0x2c));\n    return uVar1;\n}\n",
        "token_count": 159
    },
    "00448720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00448720(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (*(in_RAX + 0x20) < arg1 || *(in_RAX + 0x20) == arg1) {\n        return 0xffffffff;\n    }\n    uVar1 = fcn.00447a60(*(in_RAX + arg1 * 4 + 0x2c));\n    return uVar1;\n}\n",
        "token_count": 159
    },
    "0044afe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0044afe0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00409300();\n    iVar4 = 0x7fffffffffffffff;\n    for (iVar3 = 0; iVar3 < *0x503f48; iVar3 = iVar3 + 1) {\n        iVar1 = *(*0x503f40 + iVar3 * 8);\n        if (iVar1 != 0) {\n            iVar2 = *(iVar1 + 0x1668);\n            if ((iVar2 != 0) && (iVar2 < iVar4)) {\n                iVar4 = iVar2;\n            }\n            iVar1 = *(iVar1 + 0x1670);\n            if ((iVar1 != 0) && (iVar1 < iVar4)) {\n                iVar4 = iVar1;\n            }\n        }\n    }\n    fcn.00409520();\n    return iVar4;\n}\n",
        "token_count": 273
    },
    "0044b4a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0044b4a0(void)\n\n{\n    ulong uStack16;\n    \n    fcn.0045afe0();\n    return uStack16;\n}\n",
        "token_count": 37
    },
    "0044b4e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044b4e0(ulong param_1)\n\n{\n    fcn.0042c2e0(param_1);\n    return;\n}\n",
        "token_count": 36
    },
    "0044bd20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0044bd20(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = *(unaff_R14 + 0x30);\n    if (*(iVar2 + 0xa0) != 0) {\n        return iVar2;\n    }\n    fcn.00409300();\n    return iVar2;\n}\n",
        "token_count": 174
    },
    "0044c320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044c320(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.0044c380();\n    return;\n}\n",
        "token_count": 81
    },
    "0044c4a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044c4a0(void)\n\n{\n    int64_t unaff_R14;\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    uStack16 = *(*(unaff_R14 + 0x30) + 0xb8);\n    fcn.0044b680(&uStack16);\n    return;\n}\n",
        "token_count": 116
    },
    "0044c780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044c780(void)\n\n{\n    uint uVar1;\n    int64_t in_RAX;\n    int64_t *piVar2;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    *(in_RAX + 0xd8) = 0;\n    *(in_RAX + 0xe0) = *(*(unaff_R14 + 0x30) + 0xa0);\n    piVar2 = fcn.0040b3c0();\n    *piVar2 = unaff_RBX + 1;\n    uVar1 = fcn.0044c0a0(1);\n    auStack24 = ZEXT1216(CONCAT48(uVar1, *(in_RAX + 0x98)));\n    fcn.0044b680(auStack24);\n    return;\n}\n",
        "token_count": 242
    },
    "0044cd60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044cd60(void)\n\n{\n    int64_t unaff_R14;\n    int64_t iStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (*0x558520 == -1) {\n        iStack16 = 0;\n        fcn.0044b680(&iStack16);\n    }\n    else {\n        iStack16 = *0x558520;\n        fcn.0044b680(&iStack16);\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "0044efe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0044efe0(ulong arg1)\n\n{\n    ulong uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint8_t uVar3;\n    char cVar4;\n    uchar unaff_BL;\n    uchar *puVar5;\n    uchar *puVar6;\n    ulong unaff_RBP;\n    int64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x0044efe0:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x208 && *0x20 + -0x208 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0x288;\n        *(*0x20 + -8) = unaff_RBP;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_BL;\n        *(*0x20 + 0x20) = unaff_RDI;\n        *(*0x20 + 0x28) = unaff_RSI;\n        *(*0x20 + -0x298) = *0x20 + -8;\n        *(*0x20 + -0x290) = 0x44f04f;\n        fcn.00459974();\n        uVar1 = *(*0x20 + -0x298);\n        puVar5 = *0x20 + -0x240;\n        *(*0x20 + -0x290) = 0x44f068;\n        fcn.00450d60(0x20);\n        *(*0x20 + -0x40) = 0;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        *(*0x20 + -0x298) = uVar1;\n        *(*0x20 + -0x290) = 0x44f0b4;\n        fcn.00459c80();\n        unaff_RBP = *(*0x20 + -0x298);\n        cVar4 = *(*0x20 + 0x10);\n        unaff_RSI = *(*0x20 + 8);\n        iVar7 = *(*0x20 + 0x28);\n        uVar8 = *(*0x20 + 0x20);\n        iVar2 = 0;\n        uVar3 = 0;\n        do {\n            unaff_BL = SUB81(puVar5, 0);\n            *(*0x20 + -0x248) = uVar8;\n            if (((0x1f < iVar2) || (unaff_RDI = *(*0x20 + iVar2 * 8 + -0x140),  unaff_RDI == 0)) || (iVar7 <= uVar8)) {\n                if (uVar3 != 0) {\n                    *(*0x20 + -0x40) = 0;\n                    *(*0x20 + -0x290) = 0x44f205;\n                    fcn.00450ce0();\n                    uVar8 = *(*0x20 + -0x248);\n                }\n                return uVar8;\n            }\n            if (unaff_RSI != 0) {\n                if (0xfffff < uVar8) goto code_r0x0044f21d;\n                *(unaff_RSI + uVar8 * 8) = unaff_RDI;\n            }\n            if (cVar4 != '\\0') {\n                *(*0x20 + -0x250) = iVar2;\n                *(*0x20 + -0x261) = uVar3;\n                *(*0x20 + -600) = *0x503610;\n                if (*0x503610 == 0) {\n                    *(*0x20 + -0x260) = unaff_RDI;\n                    *(*0x20 + -0x290) = 0x44f186;\n                    fcn.004324c0();\n                    puVar5 = 0x16;\n                    *(*0x20 + -0x290) = 0x44f197;\n                    fcn.00432dc0();\n                    *(*0x20 + -0x290) = 0x44f1a5;\n                    fcn.00432c20();\n                    *(*0x20 + -0x290) = 0x44f1aa;\n                    fcn.00432720();\n                    *(*0x20 + -0x290) = 0x44f1af;\n                    fcn.00432540();\n                    iVar2 = *(*0x20 + -600);\n                    uVar8 = *(*0x20 + -0x248);\n                }\n                else {\n                    puVar5 = iVar7 - uVar8;\n                    *(*0x20 + -0x290) = 0x44f165;\n                    iVar2 = fcn.00450ae0(*0x20 + -0x40);\n                    uVar8 = (iVar2 + *(*0x20 + -0x248)) - 1;\n                    iVar2 = *(*0x20 + -600);\n                }\n                uVar3 = iVar2 != 0 | *(*0x20 + -0x261);\n                iVar2 = *(*0x20 + -0x250);\n                cVar4 = *(*0x20 + 0x10);\n                unaff_RSI = *(*0x20 + 8);\n                iVar7 = *(*0x20 + 0x28);\n            }\n            iVar2 = iVar2 + 1;\n            uVar8 = uVar8 + 1;\n        } while( true );\n    }\n    goto code_r0x0044f22b;\ncode_r0x0044f21d:\n    arg1 = 0x100000;\n    *(*0x20 + -0x290) = 0x44f22a;\n    in_RAX = fcn.00459720(0x100000);\ncode_r0x0044f22b:\n    *(puVar6 + 8) = in_RAX;\n    puVar6[0x10] = unaff_BL;\n    *(puVar6 + 0x18) = arg1;\n    *(puVar6 + 0x20) = unaff_RDI;\n    *(puVar6 + 0x28) = unaff_RSI;\n    *(puVar6 + -8) = 0x44f248;\n    fcn.00457040();\n    in_RAX = *(puVar6 + 8);\n    unaff_BL = puVar6[0x10];\n    arg1 = *(puVar6 + 0x18);\n    unaff_RDI = *(puVar6 + 0x20);\n    unaff_RSI = *(puVar6 + 0x28);\n    *0x20 = puVar6;\n    goto code_r0x0044efe0;\n}\n",
        "token_count": 1566
    },
    "0044f320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044f320(uint64_t arg1)\n\n{\n    uint64_t *in_RAX;\n    uint64_t uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00447f80();\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432dc0();\n    fcn.00432720();\n    fcn.00432540();\n    uVar1 = arg1;\n    if (*in_RAX < arg1) {\n        uVar1 = arg1 - 1;\n    }\n    fcn.004482a0(uVar1);\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432dc0();\n    fcn.00432dc0();\n    fcn.00432bc0(uVar1 & 0xffffffff);\n    fcn.00432540();\n    uVar1 = *in_RAX;\n    if (uVar1 < arg1) {\n        fcn.004324c0();\n        fcn.00432dc0();\n        fcn.00432c20(uVar1);\n        fcn.00432540();\n    }\n    fcn.004324c0();\n    fcn.00432720();\n    fcn.00432540();\n    return;\n}\n",
        "token_count": 335
    },
    "0044fd80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "access PEB ldr_data"
        ],
        "decompiled_code": "\nulong fcn.0044fd80(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00456f00();\n    return 0;\n}\n",
        "token_count": 86
    },
    "0044ff00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044ff00(int64_t arg1, ulong arg2)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if (unaff_RDI != 0) {\n                *(*0x20 + -0x58) = 0;\n                *(*0x20 + -0x60) = 0x44ff49;\n                fcn.0044d020(0, arg2, arg1, unaff_RDI);\n                return;\n            }\n            *(*0x20 + -0x60) = 0x44ff5d;\n            arg1 = unaff_RDI;\n            in_RAX = fcn.00459720(0);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + 0x20) = unaff_RDI;\n        *(puVar1 + 0x28) = unaff_RSI;\n        *(puVar1 + -8) = 0x44ff7c;\n        fcn.00457040();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        unaff_RDI = *(puVar1 + 0x20);\n        unaff_RSI = *(puVar1 + 0x28);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 498
    },
    "004506a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004506a0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    uchar auStack32 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.004324c0();\n    fcn.00432dc0();\n    fcn.00432c20();\n    fcn.00432dc0();\n    fcn.00432c20();\n    fcn.00432dc0();\n    fcn.00432c20();\n    fcn.00432dc0();\n    fcn.00432c20();\n    fcn.00432dc0();\n    fcn.00432540();\n    auStack32 = CONCAT88(arg1, 0x450880);\n    fcn.00432f20(auStack32);\n    return;\n}\n",
        "token_count": 210
    },
    "00451020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00451020(ulong param_1, uint64_t param_2)\n\n{\n    ulong uVar1;\n    uint64_t in_RAX;\n    ulong *puVar2;\n    int64_t iVar3;\n    int32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_EBX == 0) {\n                return 0;\n            }\n            *(*0x20 + 0x10) = unaff_EBX;\n            for (iVar3 = 0x4f53c0; iVar3 != 0; iVar3 = *(iVar3 + 0x210)) {\n                param_2 = *(iVar3 + 0x118);\n                if ((param_2 <= in_RAX) && (unaff_RSI = *(iVar3 + 0x120),  in_RAX < unaff_RSI)) {\n                    if (param_2 + unaff_EBX <= unaff_RSI) {\n                        return param_2 + unaff_EBX;\n                    }\n                    goto code_r0x004511f6;\n                }\n            }\n            *(*0x20 + -0x30) = in_RAX;\n            *(*0x20 + -0x58) = 0x4510ab;\n            fcn.00409300();\n            uVar1 = *0x504050;\n            *(*0x20 + -0x58) = 0x4510c5;\n            puVar2 = fcn.0040d5a0(*(*0x20 + 0x10));\n            *(*0x20 + -0x31) = uVar1;\n            *(*0x20 + -0x18) = *puVar2;\n            *(*0x20 + -0x58) = 0x4510e5;\n            fcn.00409520();\n            if (*(*0x20 + -0x31) != '\\0') {\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x58) = 0x4510f3;\n            fcn.004324c0();\n            *(*0x20 + -0x58) = 0x451105;\n            fcn.00432dc0();\n            *(*0x20 + -0x58) = 0x451111;\n            fcn.00432c20();\n            *(*0x20 + -0x58) = 0x451125;\n            fcn.00432dc0();\n            *(*0x20 + -0x58) = 0x45112f;\n            fcn.00432c20();\n            *(*0x20 + -0x58) = 0x451145;\n            fcn.00432dc0();\n            *(*0x20 + -0x58) = 0x45114a;\n            fcn.00432540();\n            iVar3 = 0x4f53c0;\n            while (iVar3 != 0) {\n                *(*0x20 + -0x10) = iVar3;\n                *(*0x20 + -0x20) = *(iVar3 + 0x118);\n                param_2 = *(iVar3 + 0x120);\n                *(*0x20 + -0x28) = param_2;\n                *(*0x20 + -0x58) = 0x451187;\n                fcn.004324c0();\n                *(*0x20 + -0x58) = 0x451198;\n                fcn.00432dc0();\n                *(*0x20 + -0x58) = 0x4511a5;\n                fcn.00432c20();\n                *(*0x20 + -0x58) = 0x4511b6;\n                fcn.00432dc0();\n                *(*0x20 + -0x58) = 0x4511c5;\n                fcn.00432c20();\n                *(*0x20 + -0x58) = 0x4511ca;\n                fcn.00432720();\n                *(*0x20 + -0x58) = 0x4511cf;\n                fcn.00432540();\n                iVar3 = *(*(*0x20 + -0x10) + 0x210);\n            }\n            *(*0x20 + -0x58) = 0x4511f6;\n            fcn.00430d40();\ncode_r0x004511f6:\n            *(*0x20 + -0x20) = param_2;\n            *(*0x20 + -0x28) = unaff_RSI;\n            *(*0x20 + -0x58) = 0x451205;\n            fcn.004324c0();\n            *(*0x20 + -0x58) = 0x451216;\n            fcn.00432dc0();\n            *(*0x20 + -0x58) = 0x451225;\n            fcn.00432c20();\n            *(*0x20 + -0x58) = 0x451236;\n            fcn.00432dc0();\n            *(*0x20 + -0x58) = 0x451245;\n            fcn.00432c20();\n            *(*0x20 + -0x58) = 0x451256;\n            fcn.00432dc0();\n            *(*0x20 + -0x58) = 0x451265;\n            fcn.00432c20();\n            *(*0x20 + -0x58) = 0x45126a;\n            fcn.00432720();\n            *(*0x20 + -0x58) = 0x45126f;\n            fcn.00432540();\n            unaff_EBX = 0x21;\n            *(*0x20 + -0x58) = 0x451285;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + -8) = 0x451294;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1506
    },
    "00453180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00453180(int64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX != 0) {\n                *(*0x20 + -0x28) = 0x4531ae;\n                fcn.0044b4e0(unaff_RBX);\n                return;\n            }\n            *(*0x20 + -0x28) = 0x4531c5;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.00459720(0);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + -8) = 0x4531da;\n        fcn.00457040();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 389
    },
    "00453d40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00453d40(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x453d5e;\n            iVar1 = fcn.00430d00();\n            if (iVar1 == 0) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x453d85;\n            fcn.00430d40();\n        }\n        *(puVar2 + -8) = 0x453d8b;\n        fcn.00457040();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 257
    },
    "00454800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00454800(void)\n\n{\n    fcn.0043a460();\n    return;\n}\n",
        "token_count": 24
    },
    "00454b00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00454b00(void)\n\n{\n    fcn.00458e20();\n    return;\n}\n",
        "token_count": 25
    },
    "00454b40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00454b40(void)\n\n{\n    fcn.0042c260();\n    return;\n}\n",
        "token_count": 25
    },
    "00454c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00454c80(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00451020();\n    return;\n}\n",
        "token_count": 80
    },
    "00454cc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00454cc0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00440960(1);\n    return;\n}\n",
        "token_count": 82
    },
    "00454d20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00454d20(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00440ca0(arg1);\n    return;\n}\n",
        "token_count": 86
    },
    "00454d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00454d80(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00440960(3);\n    return;\n}\n",
        "token_count": 85
    },
    "00454de0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00454de0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.00440ca0(0);\n    return;\n}\n",
        "token_count": 83
    },
    "00454e20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00454e20(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == 0x20) {\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = 0x454e52;\n            fcn.004324c0();\n            *(*0x20 + -0x20) = 0x454e65;\n            fcn.00432dc0();\n            *(*0x20 + -0x20) = 0x454e6f;\n            fcn.00432ac0();\n            *(*0x20 + -0x20) = 0x454e85;\n            fcn.00432dc0();\n            *(*0x20 + -0x20) = 0x454e8f;\n            fcn.00432ac0();\n            *(*0x20 + -0x20) = 0x454e94;\n            fcn.00432720();\n            *(*0x20 + -0x20) = 0x454e99;\n            fcn.00432540();\n            *(*0x20 + -0x20) = 0x454eaa;\n            in_RAX = fcn.00430d40();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x454eb5;\n        fcn.00457040();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 469
    },
    "00454ec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00454ec0(void)\n\n{\n    int64_t unaff_R14;\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.0045afe0();\n    return uStack16;\n}\n",
        "token_count": 90
    },
    "00455b60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00455b60(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    ulong uStackX8;\n    ulong uStackX16;\n    uchar auStackX24 [16];\n    ulong uStack0000000000000060;\n    ulong uStack0000000000000068;\n    ulong uStack0000000000000070;\n    \n    uStack0000000000000060 = 0;\n    uStack0000000000000068 = 0;\n    uStack0000000000000070 = 0;\n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30) + 0x244;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    *(*(iVar2 + 0x30) + 0x138) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar2 + 0x2e0) = uStackX8;\n    *(iVar2 + 0x2e8) = uStackX16;\n    *(iVar2 + 0x2f0) = auStackX24;\n    fcn.00402a00();\n    fcn.0043c080();\n    return;\n}\n",
        "token_count": 331
    },
    "00455ca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00455ca0(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    ulong uStackX8;\n    ulong uStackX16;\n    uchar auStackX24 [16];\n    ulong uStack0000000000000078;\n    ulong uStack0000000000000080;\n    ulong uStack0000000000000088;\n    \n    uStack0000000000000078 = 0;\n    uStack0000000000000080 = 0;\n    uStack0000000000000088 = 0;\n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30) + 0x244;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    *(*(iVar2 + 0x30) + 0x138) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar2 + 0x2e0) = uStackX8;\n    *(iVar2 + 0x2e8) = uStackX16;\n    *(iVar2 + 0x2f0) = auStackX24;\n    fcn.00402a00();\n    fcn.0043c080();\n    return;\n}\n",
        "token_count": 331
    },
    "00455de0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00455de0(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    ulong uStackX8;\n    ulong uStackX16;\n    uchar auStackX24 [16];\n    ulong uStack0000000000000090;\n    ulong uStack0000000000000098;\n    ulong uStack00000000000000a0;\n    \n    uStack0000000000000090 = 0;\n    uStack0000000000000098 = 0;\n    uStack00000000000000a0 = 0;\n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30) + 0x244;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    *(*(iVar2 + 0x30) + 0x138) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar2 + 0x2e0) = uStackX8;\n    *(iVar2 + 0x2e8) = uStackX16;\n    *(iVar2 + 0x2f0) = auStackX24;\n    fcn.00402a00();\n    fcn.0043c080();\n    return;\n}\n",
        "token_count": 333
    },
    "00455f20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00455f20(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    ulong uStackX8;\n    ulong uStackX16;\n    uchar auStackX24 [16];\n    ulong uStack00000000000000a8;\n    ulong uStack00000000000000b0;\n    ulong uStack00000000000000b8;\n    \n    uStack00000000000000a8 = 0;\n    uStack00000000000000b0 = 0;\n    uStack00000000000000b8 = 0;\n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30) + 0x244;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    *(*(iVar2 + 0x30) + 0x138) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar2 + 0x2e0) = uStackX8;\n    *(iVar2 + 0x2e8) = uStackX16;\n    *(iVar2 + 0x2f0) = auStackX24;\n    fcn.00402a00();\n    fcn.0043c080();\n    return;\n}\n",
        "token_count": 337
    },
    "00459280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459280(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong *puVar3;\n    ulong in_RAX;\n    ulong *unaff_RDI;\n    int64_t unaff_R14;\n    \n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    puVar2 = *(iVar1 + 0x16c0);\n    *(iVar1 + 0x16c0) = puVar2 + 2;\n    puVar3 = *(iVar1 + 0x16c8);\n    *puVar2 = in_RAX;\n    puVar2[1] = *unaff_RDI;\n    if (puVar2 + 2 == puVar3) {\n        fcn.0045b280();\n    }\n    *unaff_RDI = in_RAX;\n    return;\n}\n",
        "token_count": 210
    },
    "00459bbc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459bbc(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    uVar1 = unaff_RSI[0x19];\n    uVar2 = unaff_RSI[0x1a];\n    uVar3 = unaff_RSI[0x1b];\n    unaff_RDI[0x18] = unaff_RSI[0x18];\n    unaff_RDI[0x19] = uVar1;\n    unaff_RDI[0x1a] = uVar2;\n    unaff_RDI[0x1b] = uVar3;\n    uVar1 = unaff_RSI[0x1d];\n    uVar2 = unaff_RSI[0x1e];\n    uVar3 = unaff_RSI[0x1f];\n    unaff_RDI[0x1c] = unaff_RSI[0x1c];\n    unaff_RDI[0x1d] = uVar1;\n    unaff_RDI[0x1e] = uVar2;\n    unaff_RDI[0x1f] = uVar3;\n    uVar1 = unaff_RSI[0x21];\n    uVar2 = unaff_RSI[0x22];\n    uVar3 = unaff_RSI[0x23];\n    unaff_RDI[0x20] = unaff_RSI[0x20];\n    unaff_RDI[0x21] = uVar1;\n    unaff_RDI[0x22] = uVar2;\n    unaff_RDI[0x23] = uVar3;\n    uVar1 = unaff_RSI[0x25];\n    uVar2 = unaff_RSI[0x26];\n    uVar3 = unaff_RSI[0x27];\n    unaff_RDI[0x24] = unaff_RSI[0x24];\n    unaff_RDI[0x25] = uVar1;\n    unaff_RDI[0x26] = uVar2;\n    unaff_RDI[0x27] = uVar3;\n    uVar1 = unaff_RSI[0x29];\n    uVar2 = unaff_RSI[0x2a];\n    uVar3 = unaff_RSI[0x2b];\n    unaff_RDI[0x28] = unaff_RSI[0x28];\n    unaff_RDI[0x29] = uVar1;\n    unaff_RDI[0x2a] = uVar2;\n    unaff_RDI[0x2b] = uVar3;\n    uVar1 = unaff_RSI[0x2d];\n    uVar2 = unaff_RSI[0x2e];\n    uVar3 = unaff_RSI[0x2f];\n    unaff_RDI[0x2c] = unaff_RSI[0x2c];\n    unaff_RDI[0x2d] = uVar1;\n    unaff_RDI[0x2e] = uVar2;\n    unaff_RDI[0x2f] = uVar3;\n    uVar1 = unaff_RSI[0x31];\n    uVar2 = unaff_RSI[0x32];\n    uVar3 = unaff_RSI[0x33];\n    unaff_RDI[0x30] = unaff_RSI[0x30];\n    unaff_RDI[0x31] = uVar1;\n    unaff_RDI[0x32] = uVar2;\n    unaff_RDI[0x33] = uVar3;\n    uVar1 = unaff_RSI[0x35];\n    uVar2 = unaff_RSI[0x36];\n    uVar3 = unaff_RSI[0x37];\n    unaff_RDI[0x34] = unaff_RSI[0x34];\n    unaff_RDI[0x35] = uVar1;\n    unaff_RDI[0x36] = uVar2;\n    unaff_RDI[0x37] = uVar3;\n    uVar1 = unaff_RSI[0x39];\n    uVar2 = unaff_RSI[0x3a];\n    uVar3 = unaff_RSI[0x3b];\n    unaff_RDI[0x38] = unaff_RSI[0x38];\n    unaff_RDI[0x39] = uVar1;\n    unaff_RDI[0x3a] = uVar2;\n    unaff_RDI[0x3b] = uVar3;\n    uVar1 = unaff_RSI[0x3d];\n    uVar2 = unaff_RSI[0x3e];\n    uVar3 = unaff_RSI[0x3f];\n    unaff_RDI[0x3c] = unaff_RSI[0x3c];\n    unaff_RDI[0x3d] = uVar1;\n    unaff_RDI[0x3e] = uVar2;\n    unaff_RDI[0x3f] = uVar3;\n    uVar1 = unaff_RSI[0x41];\n    uVar2 = unaff_RSI[0x42];\n    uVar3 = unaff_RSI[0x43];\n    unaff_RDI[0x40] = unaff_RSI[0x40];\n    unaff_RDI[0x41] = uVar1;\n    unaff_RDI[0x42] = uVar2;\n    unaff_RDI[0x43] = uVar3;\n    uVar1 = unaff_RSI[0x45];\n    uVar2 = unaff_RSI[0x46];\n    uVar3 = unaff_RSI[0x47];\n    unaff_RDI[0x44] = unaff_RSI[0x44];\n    unaff_RDI[0x45] = uVar1;\n    unaff_RDI[0x46] = uVar2;\n    unaff_RDI[0x47] = uVar3;\n    uVar1 = unaff_RSI[0x49];\n    uVar2 = unaff_RSI[0x4a];\n    uVar3 = unaff_RSI[0x4b];\n    unaff_RDI[0x48] = unaff_RSI[0x48];\n    unaff_RDI[0x49] = uVar1;\n    unaff_RDI[0x4a] = uVar2;\n    unaff_RDI[0x4b] = uVar3;\n    uVar1 = unaff_RSI[0x4d];\n    uVar2 = unaff_RSI[0x4e];\n    uVar3 = unaff_RSI[0x4f];\n    unaff_RDI[0x4c] = unaff_RSI[0x4c];\n    unaff_RDI[0x4d] = uVar1;\n    unaff_RDI[0x4e] = uVar2;\n    unaff_RDI[0x4f] = uVar3;\n    uVar1 = unaff_RSI[0x51];\n    uVar2 = unaff_RSI[0x52];\n    uVar3 = unaff_RSI[0x53];\n    unaff_RDI[0x50] = unaff_RSI[0x50];\n    unaff_RDI[0x51] = uVar1;\n    unaff_RDI[0x52] = uVar2;\n    unaff_RDI[0x53] = uVar3;\n    uVar1 = unaff_RSI[0x55];\n    uVar2 = unaff_RSI[0x56];\n    uVar3 = unaff_RSI[0x57];\n    unaff_RDI[0x54] = unaff_RSI[0x54];\n    unaff_RDI[0x55] = uVar1;\n    unaff_RDI[0x56] = uVar2;\n    unaff_RDI[0x57] = uVar3;\n    uVar1 = unaff_RSI[0x59];\n    uVar2 = unaff_RSI[0x5a];\n    uVar3 = unaff_RSI[0x5b];\n    unaff_RDI[0x58] = unaff_RSI[0x58];\n    unaff_RDI[0x59] = uVar1;\n    unaff_RDI[0x5a] = uVar2;\n    unaff_RDI[0x5b] = uVar3;\n    uVar1 = unaff_RSI[0x5d];\n    uVar2 = unaff_RSI[0x5e];\n    uVar3 = unaff_RSI[0x5f];\n    unaff_RDI[0x5c] = unaff_RSI[0x5c];\n    unaff_RDI[0x5d] = uVar1;\n    unaff_RDI[0x5e] = uVar2;\n    unaff_RDI[0x5f] = uVar3;\n    uVar1 = unaff_RSI[0x61];\n    uVar2 = unaff_RSI[0x62];\n    uVar3 = unaff_RSI[99];\n    unaff_RDI[0x60] = unaff_RSI[0x60];\n    unaff_RDI[0x61] = uVar1;\n    unaff_RDI[0x62] = uVar2;\n    unaff_RDI[99] = uVar3;\n    uVar1 = unaff_RSI[0x65];\n    uVar2 = unaff_RSI[0x66];\n    uVar3 = unaff_RSI[0x67];\n    unaff_RDI[100] = unaff_RSI[100];\n    unaff_RDI[0x65] = uVar1;\n    unaff_RDI[0x66] = uVar2;\n    unaff_RDI[0x67] = uVar3;\n    uVar1 = unaff_RSI[0x69];\n    uVar2 = unaff_RSI[0x6a];\n    uVar3 = unaff_RSI[0x6b];\n    unaff_RDI[0x68] = unaff_RSI[0x68];\n    unaff_RDI[0x69] = uVar1;\n    unaff_RDI[0x6a] = uVar2;\n    unaff_RDI[0x6b] = uVar3;\n    uVar1 = unaff_RSI[0x6d];\n    uVar2 = unaff_RSI[0x6e];\n    uVar3 = unaff_RSI[0x6f];\n    unaff_RDI[0x6c] = unaff_RSI[0x6c];\n    unaff_RDI[0x6d] = uVar1;\n    unaff_RDI[0x6e] = uVar2;\n    unaff_RDI[0x6f] = uVar3;\n    uVar1 = unaff_RSI[0x71];\n    uVar2 = unaff_RSI[0x72];\n    uVar3 = unaff_RSI[0x73];\n    unaff_RDI[0x70] = unaff_RSI[0x70];\n    unaff_RDI[0x71] = uVar1;\n    unaff_RDI[0x72] = uVar2;\n    unaff_RDI[0x73] = uVar3;\n    uVar1 = unaff_RSI[0x75];\n    uVar2 = unaff_RSI[0x76];\n    uVar3 = unaff_RSI[0x77];\n    unaff_RDI[0x74] = unaff_RSI[0x74];\n    unaff_RDI[0x75] = uVar1;\n    unaff_RDI[0x76] = uVar2;\n    unaff_RDI[0x77] = uVar3;\n    return;\n}\n",
        "token_count": 3267
    },
    "00459c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459c80(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    uVar1 = unaff_RSI[0x19];\n    uVar2 = unaff_RSI[0x1a];\n    uVar3 = unaff_RSI[0x1b];\n    unaff_RDI[0x18] = unaff_RSI[0x18];\n    unaff_RDI[0x19] = uVar1;\n    unaff_RDI[0x1a] = uVar2;\n    unaff_RDI[0x1b] = uVar3;\n    uVar1 = unaff_RSI[0x1d];\n    uVar2 = unaff_RSI[0x1e];\n    uVar3 = unaff_RSI[0x1f];\n    unaff_RDI[0x1c] = unaff_RSI[0x1c];\n    unaff_RDI[0x1d] = uVar1;\n    unaff_RDI[0x1e] = uVar2;\n    unaff_RDI[0x1f] = uVar3;\n    uVar1 = unaff_RSI[0x21];\n    uVar2 = unaff_RSI[0x22];\n    uVar3 = unaff_RSI[0x23];\n    unaff_RDI[0x20] = unaff_RSI[0x20];\n    unaff_RDI[0x21] = uVar1;\n    unaff_RDI[0x22] = uVar2;\n    unaff_RDI[0x23] = uVar3;\n    uVar1 = unaff_RSI[0x25];\n    uVar2 = unaff_RSI[0x26];\n    uVar3 = unaff_RSI[0x27];\n    unaff_RDI[0x24] = unaff_RSI[0x24];\n    unaff_RDI[0x25] = uVar1;\n    unaff_RDI[0x26] = uVar2;\n    unaff_RDI[0x27] = uVar3;\n    uVar1 = unaff_RSI[0x29];\n    uVar2 = unaff_RSI[0x2a];\n    uVar3 = unaff_RSI[0x2b];\n    unaff_RDI[0x28] = unaff_RSI[0x28];\n    unaff_RDI[0x29] = uVar1;\n    unaff_RDI[0x2a] = uVar2;\n    unaff_RDI[0x2b] = uVar3;\n    uVar1 = unaff_RSI[0x2d];\n    uVar2 = unaff_RSI[0x2e];\n    uVar3 = unaff_RSI[0x2f];\n    unaff_RDI[0x2c] = unaff_RSI[0x2c];\n    unaff_RDI[0x2d] = uVar1;\n    unaff_RDI[0x2e] = uVar2;\n    unaff_RDI[0x2f] = uVar3;\n    uVar1 = unaff_RSI[0x31];\n    uVar2 = unaff_RSI[0x32];\n    uVar3 = unaff_RSI[0x33];\n    unaff_RDI[0x30] = unaff_RSI[0x30];\n    unaff_RDI[0x31] = uVar1;\n    unaff_RDI[0x32] = uVar2;\n    unaff_RDI[0x33] = uVar3;\n    uVar1 = unaff_RSI[0x35];\n    uVar2 = unaff_RSI[0x36];\n    uVar3 = unaff_RSI[0x37];\n    unaff_RDI[0x34] = unaff_RSI[0x34];\n    unaff_RDI[0x35] = uVar1;\n    unaff_RDI[0x36] = uVar2;\n    unaff_RDI[0x37] = uVar3;\n    uVar1 = unaff_RSI[0x39];\n    uVar2 = unaff_RSI[0x3a];\n    uVar3 = unaff_RSI[0x3b];\n    unaff_RDI[0x38] = unaff_RSI[0x38];\n    unaff_RDI[0x39] = uVar1;\n    unaff_RDI[0x3a] = uVar2;\n    unaff_RDI[0x3b] = uVar3;\n    uVar1 = unaff_RSI[0x3d];\n    uVar2 = unaff_RSI[0x3e];\n    uVar3 = unaff_RSI[0x3f];\n    unaff_RDI[0x3c] = unaff_RSI[0x3c];\n    unaff_RDI[0x3d] = uVar1;\n    unaff_RDI[0x3e] = uVar2;\n    unaff_RDI[0x3f] = uVar3;\n    return;\n}\n",
        "token_count": 1742
    },
    "00459d1a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459d1a(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    return;\n}\n",
        "token_count": 530
    },
    "0045ac00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0045ac00(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t in_stack_00000000;\n    ulong uStack0000000000000028;\n    \n    uStack0000000000000028 = arg4;\n    fcn.00458f60(5, (in_stack_00000000 - 0x45c780U & 0xffffffff) % 5);\n    return 0;\n}\n",
        "token_count": 104
    },
    "0045af20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045af20(void)\n\n{\n    int64_t in_GS_OFFSET;\n    int32_t iStackX8;\n    uchar auStack72 [24];\n    ulong uStack48;\n    ulong uStack40;\n    ulong uStack32;\n    int64_t iStack24;\n    uchar *puStack16;\n    \n    puStack16 = auStack72;\n    iStack24 = iStackX8;\n    uStack32 = *(*(**(in_GS_OFFSET + 0x28) + 0x30) + 0x348);\n    uStack48 = 0;\n    uStack40 = 0;\n    (*_sym.imp.kernel32.dll_SetWaitableTimer)(uStack32, &iStack24, 0, 0);\n    (**0x503598)(uStack32, 0, 0);\n    return;\n}\n",
        "token_count": 186
    },
    "0045b180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045b180(void)\n\n{\n    fcn.00405580();\n    return;\n}\n",
        "token_count": 24
    },
    "0045b280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045b280(void)\n\n{\n    fcn.00429ba0();\n    return;\n}\n",
        "token_count": 25
    },
    "0045b420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045b420(void)\n\n{\n    fcn.0042c2e0(*0x4fd428);\n    return;\n}\n",
        "token_count": 33
    },
    "0045b440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045b440(void)\n\n{\n    fcn.0042c2e0(*0x4fd438);\n    return;\n}\n",
        "token_count": 33
    },
    "0045b500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045b500(void)\n\n{\n    fcn.0043b360();\n    return;\n}\n",
        "token_count": 25
    },
    "0045b540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045b540(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    fcn.0043fba0(param_1, param_2, param_3, param_4);\n    return;\n}\n",
        "token_count": 60
    },
    "0045b760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0045b760(void)\n\n{\n    ulong uStack24;\n    \n    fcn.00455440();\n    return uStack24;\n}\n",
        "token_count": 34
    },
    "0045b7c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0045b7c0(void)\n\n{\n    ulong uStack24;\n    \n    fcn.004555c0();\n    return uStack24;\n}\n",
        "token_count": 37
    },
    "0045b800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0045b800(void)\n\n{\n    ulong uStack24;\n    \n    fcn.00455720();\n    return uStack24;\n}\n",
        "token_count": 34
    },
    "0045b8c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0045b8c0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong uStack32;\n    \n    fcn.004559e0();\n    return uStack32;\n}\n",
        "token_count": 54
    },
    "0045b940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "access PEB ldr_data"
        ],
        "decompiled_code": "\nulong fcn.0045b940(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong uStack32;\n    \n    fcn.00455b60();\n    return uStack32;\n}\n",
        "token_count": 52
    },
    "0045b9e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "access PEB ldr_data"
        ],
        "decompiled_code": "\nulong fcn.0045b9e0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong uStack32;\n    \n    fcn.00455ca0();\n    return uStack32;\n}\n",
        "token_count": 54
    },
    "0045baa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "access PEB ldr_data"
        ],
        "decompiled_code": "\nulong fcn.0045baa0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong uStack32;\n    \n    fcn.00455de0();\n    return uStack32;\n}\n",
        "token_count": 53
    },
    "0045bba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "access PEB ldr_data"
        ],
        "decompiled_code": "\nulong fcn.0045bba0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong uStack32;\n    \n    fcn.00455f20();\n    return uStack32;\n}\n",
        "token_count": 53
    },
    "0045f3a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045f3a0(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    LOCK();\n    iVar1 = *in_RAX;\n    *in_RAX = *in_RAX + -1;\n    if (iVar1 != 1) {\n        fcn.0045f400();\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "0045f400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045f400(void)\n\n{\n    uint32_t *in_RAX;\n    uint32_t unaff_EBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if ((unaff_EBX + 1 & 1) == 0) {\n        fcn.004547a0();\n    }\n    if ((unaff_EBX >> 2 & 1) == 0) {\n        while ((unaff_EBX >> 3 != 0 && ((unaff_EBX & 7) == 0))) {\n            LOCK();\n            if (unaff_EBX == *in_RAX) {\n                *in_RAX = unaff_EBX - 8 | 2;\n                fcn.00454d20(1);\n                return;\n            }\n            unaff_EBX = *in_RAX;\n        }\n        return;\n    }\n    fcn.00454d20(1);\n    return;\n}\n",
        "token_count": 246
    },
    "0045fac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045fac0(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    int64_t iVar4;\n    ulong in_RAX;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x28) = 0x45faf1;\n            iVar5 = fcn.004424e0(unaff_RBX);\n            arg1 = *(*0x20 + 0x10);\n            iVar4 = *(*0x20 + 8);\n            unaff_RBX = 0;\n            for (uVar6 = 0; uVar6 < arg1; uVar6 = uVar6 + 1) {\n                if (arg1 <= uVar6) goto code_r0x0045fbf1;\n                uVar2 = *(iVar4 + uVar6 * 2);\n                if ((uVar2 < 0xd800) || (0xdfff < uVar2)) {\n                    if (arg1 <= unaff_RBX) goto code_r0x0045fbe6;\n                    *(iVar5 + unaff_RBX * 4) = uVar2;\n                }\n                else {\n                    if ((uVar2 < 0xdc00) && (uVar1 = uVar6 + 1,  uVar1 < arg1)) {\n                        if (arg1 <= uVar1) goto code_r0x0045fbdb;\n                        uVar3 = *(iVar4 + 2 + uVar6 * 2);\n                        if ((0xdbff < uVar3) && (uVar3 < 0xe000)) {\n                            if (unaff_RBX < arg1) {\n                                *(iVar5 + unaff_RBX * 4) = ((uVar2 - 0xd800) * 0x400 | uVar3 - 0xdc00) + 0x10000;\n                                uVar6 = uVar1;\n                                goto code_r0x0045fb02;\n                            }\n                            goto code_r0x0045fbd0;\n                        }\n                    }\n                    if (arg1 <= unaff_RBX) goto code_r0x0045fbc5;\n                    *(iVar5 + unaff_RBX * 4) = 0xfffd;\n                }\ncode_r0x0045fb02:\n                unaff_RBX = unaff_RBX + 1;\n            }\n            if (unaff_RBX <= arg1) {\n                return;\n            }\n            *(*0x20 + -0x28) = 0x45fbc5;\n            fcn.004597a0(unaff_RBX, arg1);\ncode_r0x0045fbc5:\n            *(*0x20 + -0x28) = 0x45fbd0;\n            fcn.00459720(arg1);\ncode_r0x0045fbd0:\n            *(*0x20 + -0x28) = 0x45fbdb;\n            fcn.00459720(arg1);\ncode_r0x0045fbdb:\n            *(*0x20 + -0x28) = 0x45fbe6;\n            fcn.00459720(arg1);\ncode_r0x0045fbe6:\n            *(*0x20 + -0x28) = 0x45fbf1;\n            fcn.00459720(arg1);\ncode_r0x0045fbf1:\n            *(*0x20 + -0x28) = 0x45fbfc;\n            in_RAX = fcn.00459720(arg1);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x45fc11;\n        fcn.00457040();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1074
    },
    "00461c00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00461c00(void)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    uchar auStack80 [72];\n    \n    while (auStack80 < *(unaff_R14 + 0x10) || auStack80 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    iVar2 = 0;\n    while( true ) {\n        if (unaff_RBX <= iVar2) {\n            fcn.00445f40(unaff_RBX);\n            fcn.004464a0(in_RAX);\n            uVar1 = fcn.0045f920(in_RAX);\n            return uVar1;\n        }\n        if (*(in_RAX + iVar2) == '\\0') break;\n        iVar2 = iVar2 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 213
    },
    "00461ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00461ce0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t arg1_00;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    for (iVar1 = 0; (arg1_00 = unaff_RBX,  iVar1 < unaff_RBX && (arg1_00 = iVar1,  *(in_RAX + iVar1 * 2) != 0));\n        iVar1 = iVar1 + 1) {\n    }\n    fcn.0045fac0(arg1);\n    fcn.00446660(arg1_00);\n    return;\n}\n",
        "token_count": 198
    },
    "00462040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00462040(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x503750;\n            *(*0x20 + -0x48) = 0x462072;\n            iVar1 = fcn.004619e0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x48) = 0x462098;\n                iVar2 = fcn.0045b860(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x4fd530;\n                    if ((iVar1 != 0) && (uVar3 = *0x4fd540,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x48) = 0x4620d6;\n                        fcn.00408ce0();\n                        uVar3 = 0x49e7c0;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x48) = 0x462105;\n            in_RAX = fcn.004305a0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x462110;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 501
    },
    "00462120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00462120(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x503820;\n            *(*0x20 + -0x48) = 0x462152;\n            iVar1 = fcn.004619e0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x48) = 0x462178;\n                iVar2 = fcn.0045b860(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x4fd530;\n                    if ((iVar1 != 0) && (uVar3 = *0x4fd540,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x48) = 0x4621b6;\n                        fcn.00408ce0();\n                        uVar3 = 0x49e7c0;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x48) = 0x4621e5;\n            in_RAX = fcn.004305a0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x4621f0;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 505
    },
    "00462200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00462200(ulong arg1, ulong noname_1, int64_t arg3, ulong arg4)\n\n{\n    uint in_EAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uint64_t arg1_00;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    uint unaff_EDI;\n    ulong in_R10;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RSI;\n            *(*0x20 + 8) = in_EAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x1c) = unaff_EDI;\n            *(*0x20 + 0x28) = arg3;\n            *(*0x20 + 0x38) = in_R10;\n            *(*0x20 + -0x30) = unaff_RBX;\n            if (arg3 < 1) {\n                unaff_RSI = 0;\n            }\n            *(*0x20 + -0x20) = unaff_RSI;\n            *(*0x20 + -0x28) = *0x503848;\n            *(*0x20 + -0x98) = 0x462276;\n            iVar1 = fcn.004619e0();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + -0x20);\n                *(*0x20 + -0x18) = *(*0x20 + 0x38);\n                *(*0x20 + -0x90) = in_XMM15;\n                arg1_00 = *(*0x20 + 8);\n                *(*0x20 + -0x98) = 0x4622e6;\n                uVar2 = fcn.0045b940(arg1_00, *(*0x20 + 0x1c), *(*0x20 + 0x1c), *(*0x20 + -0x10));\n                if (((uVar2 == 0) && (arg1_00 != 0)) && (arg1_00 != 0x3e5)) {\n                    *(*0x20 + -0x38) = uVar2;\n                    *(*0x20 + -0x98) = 0x462326;\n                    fcn.00408ce0();\n                    uVar2 = *(*0x20 + -0x38);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x98) = 0x46235c;\n            in_EAX = fcn.004305a0();\n        }\n        *(puVar3 + 8) = in_EAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x1c) = unaff_EDI;\n        *(puVar3 + 0x20) = unaff_RSI;\n        *(puVar3 + 0x28) = arg3;\n        *(puVar3 + 0x30) = arg4;\n        *(puVar3 + 0x38) = in_R10;\n        *(puVar3 + -8) = 0x462387;\n        fcn.00457040();\n        in_EAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x18);\n        unaff_EDI = *(puVar3 + 0x1c);\n        unaff_RSI = *(puVar3 + 0x20);\n        arg3 = *(puVar3 + 0x28);\n        arg4 = *(puVar3 + 0x30);\n        in_R10 = *(puVar3 + 0x38);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1003
    },
    "004623c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004623c0(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = *0x503880;\n            *(*0x20 + -0x40) = 0x4623e6;\n            iVar1 = fcn.004619e0();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x40) = 0x462408;\n                fcn.0045b860(0);\n                return;\n            }\n            *(*0x20 + -0x40) = 0x46241d;\n            fcn.004305a0();\n        }\n        *(puVar2 + -8) = 0x462425;\n        fcn.00457040();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 302
    },
    "00462840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00462840(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uchar unaff_BL;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_BL;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x503a68;\n            *(*0x20 + -0x48) = 0x462876;\n            iVar1 = fcn.004619e0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x48) = 0x4628a7;\n                iVar2 = fcn.0045b860(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x4fd530;\n                    if ((iVar1 != 0) && (uVar3 = *0x4fd540,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x48) = 0x4628e5;\n                        fcn.00408ce0();\n                        uVar3 = 0x49e7c0;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x48) = 0x462910;\n            in_RAX = fcn.004305a0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        puVar4[0x10] = unaff_BL;\n        *(puVar4 + -8) = 0x46291f;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        unaff_BL = puVar4[0x10];\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 554
    },
    "00462a80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00462a80(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uint unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    uint unaff_EDI;\n    ulong in_R10;\n    ulong in_R11;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x18 && *0x20 + -0x18 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x98;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 0x20) = unaff_EDI;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + 0x40) = in_R10;\n            *(*0x20 + 0x38) = arg4;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x38) = in_R11;\n            *(*0x20 + -0x40) = in_RAX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + -0x30) = *0x503ad8;\n            *(*0x20 + -0xa0) = 0x462afb;\n            iVar1 = fcn.004619e0();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 0x18);\n                *(*0x20 + -0x18) = *(*0x20 + 0x28);\n                *(*0x20 + -0x20) = *(*0x20 + 0x38);\n                *(*0x20 + -0x28) = *(*0x20 + 0x40);\n                *(*0x20 + -0x98) = *(*0x20 + 0x40);\n                *(*0x20 + -0x90) = *(*0x20 + -0x38);\n                iVar1 = *(*0x20 + -0x40);\n                *(*0x20 + -0xa0) = 0x462b9f;\n                iVar2 = fcn.0045b940(iVar1, *(*0x20 + 0x30), *(*0x20 + 0x20), *(*0x20 + -0x18));\n                if (iVar2 == 0xffffffff) {\n                    uVar3 = *0x4fd530;\n                    if ((iVar1 != 0) && (uVar3 = *0x4fd540,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0xa0) = 0x462be5;\n                        fcn.00408ce0();\n                        uVar3 = 0x49e7c0;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0xa0) = 0x462c16;\n            in_RAX = fcn.004305a0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_EDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + 0x30) = arg3;\n        *(puVar4 + 0x38) = arg4;\n        *(puVar4 + 0x40) = in_R10;\n        *(puVar4 + 0x48) = in_R11;\n        *(puVar4 + -8) = 0x462c47;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_EDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        arg3._0_4_ = *(puVar4 + 0x30);\n        arg4 = *(puVar4 + 0x38);\n        in_R10 = *(puVar4 + 0x40);\n        in_R11 = *(puVar4 + 0x48);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1110
    },
    "00462c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00462c80(void)\n\n{\n    uint in_EAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_EAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = *0x503b00;\n            *(*0x20 + -0x48) = 0x462cb6;\n            iVar1 = fcn.004619e0();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 0x10);\n                *(*0x20 + -0x48) = 0x462ce5;\n                iVar1 = fcn.0045b860(*(*0x20 + 8));\n                if (iVar1 == 0) {\n                    uVar2 = 0;\n                }\n                else {\n                    *(*0x20 + -0x48) = 0x462cf5;\n                    fcn.00408ce0();\n                    uVar2 = 0x49e7c0;\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x48) = 0x462d17;\n            in_EAX = fcn.004305a0();\n        }\n        *(puVar3 + 8) = in_EAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x462d26;\n        fcn.00457040();\n        in_EAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 519
    },
    "00468d40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00468d40(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x20) = in_RAX;\n            *(*0x20 + -0x18) = *0x503458;\n            *(*0x20 + -0x58) = 0x468d7b;\n            iVar1 = fcn.004619e0();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 0x10);\n                iVar1 = *(*0x20 + -0x20);\n                *(*0x20 + -0x58) = 0x468db5;\n                uVar2 = fcn.0045b860(iVar1);\n                if (((uVar2 == 0) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x28) = uVar2;\n                    *(*0x20 + -0x58) = 0x468df4;\n                    fcn.00408ce0();\n                    uVar2 = *(*0x20 + -0x28);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x58) = 0x468e25;\n            in_RAX = fcn.004305a0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x468e39;\n        fcn.00457040();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 608
    },
    "00469f60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00469f60(void)\n\n{\n    uint64_t uVar1;\n    uint64_t *in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            while( true ) {\n                uVar3 = *in_RAX;\n                if ((uVar3 & 1) != 0) {\n                    return 0;\n                }\n                uVar2 = (uVar3 | 1) + 8;\n                if ((uVar2 & 0x7ffff8) == 0) break;\n                LOCK();\n                uVar1 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar3 == uVar1) * (*in_RAX ^ uVar2 & 0x80000000007fffff);\n                if (uVar3 == uVar1) {\n                    *(*0x20 + -0x10) = in_RAX;\n                    while ((uVar3 & 0x7ffff800000) != 0) {\n                        *(*0x20 + -0x18) = uVar3;\n                        *(*0x20 + -0x30) = 0x469fde;\n                        fcn.00454de0();\n                        uVar3 = *(*0x20 + -0x18) - 0x800000;\n                    }\n                    while ((uVar3 & 0x7ffff80000000000) != 0) {\n                        *(*0x20 + -0x18) = uVar3;\n                        *(*0x20 + -0x30) = 0x46a010;\n                        fcn.00454de0();\n                        uVar3 = *(*0x20 + -0x18) - 0x80000000000;\n                    }\n                    return 1;\n                }\n            }\n            *(*0x20 + -0x30) = 0x46a05b;\n            in_RAX = fcn.004305a0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x46a066;\n        fcn.00457040();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 612
    },
    "0046a120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046a120(void)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    if (*0x557ea0 == 0) {\n        fcn.0045f4e0();\n    }\n    uVar1 = fcn.00454380();\n    if (unaff_RBX == 0) {\n        *in_RAX = uVar1;\n        return 0;\n    }\n    uVar1 = *0x4fd390;\n    if (unaff_RBX != 0x3e5) {\n        fcn.00408ce0();\n        uVar1 = 0x49e7c0;\n    }\n    return uVar1;\n}\n",
        "token_count": 217
    },
    "0046a200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046a200(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong *puVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if ((0x4e2f < *0x20) && (*(unaff_R14 + 0x10) <= *0x20 + -0x4e30 && *0x20 + -0x4e30 != *(unaff_R14 + 0x10))) {\n            puVar4 = *0x20 + -0x4eb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x4eb8) = 0x46a23d;\n            iVar2 = fcn.004619e0();\n            if (iVar2 != 0) {\n                return;\n            }\n            *(*0x20 + -0x4e90) = 0;\n            *(*0x20 + -0x4e90) = 6;\n            puVar5 = *0x20 + -0x4e88;\n            for (iVar2 = 0x9d0; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar5 = 0;\n                puVar5 = puVar5 + 1;\n            }\n            *(*0x20 + -0x4e94) = 0x4e80;\n            *(*0x20 + -0x4eb8) = 0x46a285;\n            iVar1 = fcn.00462940(*0x20 + -0x4e94);\n            if (*0x20 != 0x4e88) {\n                return;\n            }\n            iVar3 = 0;\n            while( true ) {\n                if (iVar1 <= iVar3) {\n                    *0x557c60 = 1;\n                    return;\n                }\n                if (0x1f < iVar3) break;\n                if ((*(iVar3 * 0x274) >> 0x11 & 1) == 0) {\n                    return;\n                }\n                iVar3 = iVar3 + 1;\n            }\n            *0xffffffffffffffd0 = 0x46a305;\n            fcn.00459720(0x20);\n        }\n        *(puVar4 + -8) = 0x46a30b;\n        fcn.00457040();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 591
    },
    "0046b520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046b520(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457040();\n    }\n    fcn.0046b560();\n    return;\n}\n",
        "token_count": 81
    },
    "0046b560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046b560(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    uint64_t arg1;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            arg1 = 0x400;\n            while( true ) {\n                *(*0x20 + -0x1c) = arg1;\n                *(*0x20 + -0x40) = 0x46b59c;\n                iVar3 = fcn.004424e0(arg1);\n                if (*(*0x20 + -0x1c) == 0) break;\n                *(*0x20 + -0x10) = iVar3;\n                *(*0x20 + -0x40) = 0x46b5b7;\n                uVar2 = fcn.00468d40(*(*0x20 + -0x1c));\n                if (iVar3 != 0) {\n                    return 0;\n                }\n                uVar1 = *(*0x20 + -0x1c);\n                if (uVar2 < uVar1) {\n                    *(*0x20 + -0x40) = 0x46b5d0;\n                    uVar4 = fcn.00461ce0(uVar1);\n                    return uVar4;\n                }\n                arg1 = uVar1 + 0x400;\n            }\n            *(*0x20 + -0x40) = 0x46b5f9;\n            in_RAX = fcn.00459720(0);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x46b605;\n        fcn.00457040();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 544
    },
    "0046b9a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046b9a0(void)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX != 0) goto code_r0x0046b9d3;\n            *(*0x20 + 8) = 0;\n            *(*0x20 + -0x20) = 0x46b9c5;\n            cVar1 = fcn.00468b60();\n            if (cVar1 == '\\0') {\n                *(*0x20 + -0x20) = 0x46b9ce;\n                fcn.004547e0();\ncode_r0x0046b9d3:\n                *(*0x20 + -0x20) = 0x46b9d8;\n                fcn.00454b40();\n                return;\n            }\n            *(*0x20 + -0x20) = 0x46b9f5;\n            in_RAX = fcn.004305a0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x46ba05;\n        fcn.00457040();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 406
    },
    "00401bc0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00401bc0(ulong noname_0, ulong arg2)\n\n{\n    int32_t iStackX8;\n    \n    if (iStackX8 == 0) {\n        cpuid_basic_info(0);\n    }\n    else if (iStackX8 == 1) {\n        cpuid_Version_info(1);\n    }\n    else if (iStackX8 == 2) {\n        cpuid_cache_tlb_info(2);\n    }\n    else if (iStackX8 == 3) {\n        cpuid_serial_info(3);\n    }\n    else if (iStackX8 == 4) {\n        cpuid_Deterministic_Cache_Parameters_info(4);\n    }\n    else if (iStackX8 == 5) {\n        cpuid_MONITOR_MWAIT_Features_info(5);\n    }\n    else if (iStackX8 == 6) {\n        cpuid_Thermal_Power_Management_info(6);\n    }\n    else if (iStackX8 == 7) {\n        cpuid_Extended_Feature_Enumeration_info(7);\n    }\n    else if (iStackX8 == 9) {\n        cpuid_Direct_Cache_Access_info(9);\n    }\n    else if (iStackX8 == 10) {\n        cpuid_Architectural_Performance_Monitoring_info(10);\n    }\n    else if (iStackX8 == 0xb) {\n        cpuid_Extended_Topology_info(0xb);\n    }\n    else if (iStackX8 == 0xd) {\n        cpuid_Processor_Extended_States_info(0xd);\n    }\n    else if (iStackX8 == 0xf) {\n        cpuid_Quality_of_Service_info(0xf);\n    }\n    else if (iStackX8 == -0x7ffffffe) {\n        cpuid_brand_part1_info(0x80000002);\n    }\n    else if (iStackX8 == -0x7ffffffd) {\n        cpuid_brand_part2_info(0x80000003);\n    }\n    else if (iStackX8 == -0x7ffffffc) {\n        cpuid_brand_part3_info(0x80000004);\n    }\n    else {\n        cpuid(iStackX8);\n    }\n    return;\n}\n",
        "token_count": 498
    },
    "00426a20": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00426a20(void)\n\n{\n    uchar in_AL;\n    unkbyte7 in_RAX;\n    int64_t iVar1;\n    \n    for (iVar1 = 0; iVar1 < 8; iVar1 = iVar1 + 1) {\n        *(CONCAT71(in_RAX, in_AL) + iVar1 * 8) = 0xffffffffffffffff;\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "00426b60": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00426b60(void)\n\n{\n    uchar in_AL;\n    unkbyte7 in_RAX;\n    int64_t iVar1;\n    \n    for (iVar1 = 0; iVar1 < 8; iVar1 = iVar1 + 1) {\n        *(CONCAT71(in_RAX, in_AL) + iVar1 * 8) = 0;\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "00427860": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.00427860(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_RSI;\n    int64_t unaff_RDI;\n    \n    if (unaff_RSI != unaff_RBX) {\n        return 0;\n    }\n    iVar1 = 0;\n    while( true ) {\n        if (unaff_RBX <= iVar1) {\n            return 1;\n        }\n        if (*(unaff_RDI + iVar1 * 8) != *(in_RAX + iVar1 * 8)) break;\n        iVar1 = iVar1 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 153
    },
    "0042ce80": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0042ce80(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x42cea5;\n            fcn.00430d40();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x42ceab;\n        fcn.00457040();\n    } while( true );\n}\n",
        "token_count": 176
    },
    "0042e7c0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0042e7c0(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x28) = 0x42e7ea;\n            fcn.0042e040(0x15);\n            *(*0x20 + -0x28) = 0x42e809;\n            fcn.004305a0();\n        }\n        *(puVar1 + -8) = 0x42e80f;\n        fcn.00457040();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 238
    },
    "0042e820": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0042e820(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x42e845;\n            fcn.0042e100();\n            iVar1 = *0x4fd470;\n            if (*0x4fd470 != 0) {\n                iVar1 = *(*0x4fd470 + 8);\n            }\n            *(*0x20 + -0x20) = 0x42e865;\n            fcn.004305a0(iVar1);\n        }\n        *(puVar2 + -8) = 0x42e86b;\n        fcn.00457040();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 281
    },
    "0042f3c0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0042f3c0(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x42f3e5;\n            fcn.00430d40();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x42f3eb;\n        fcn.00457040();\n    } while( true );\n}\n",
        "token_count": 181
    },
    "0042f400": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0042f400(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x42f425;\n            fcn.00430d40();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x42f42b;\n        fcn.00457040();\n    } while( true );\n}\n",
        "token_count": 177
    },
    "00433ea0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00433ea0(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x433ec5;\n            fcn.00430d40();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x433ecb;\n        fcn.00457040();\n    } while( true );\n}\n",
        "token_count": 176
    },
    "00433ee0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00433ee0(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x433f05;\n            fcn.00430d40();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x433f0b;\n        fcn.00457040();\n    } while( true );\n}\n",
        "token_count": 177
    },
    "00433fe0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00433fe0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t arg1;\n    uint64_t arg1_00;\n    uchar *puVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    int64_t unaff_R14;\n    uchar auStack24 [16];\n    \n    puVar7 = &stack0xfffffffffffffff8;\n    iVar3 = fcn.00430d40();\n    puVar5 = auStack24;\n    do {\n        puVar6 = puVar5;\n        if (*(unaff_R14 + 0x10) <= puVar5 && puVar5 != *(unaff_R14 + 0x10)) {\n            puVar6 = puVar5 + -0x50;\n            *(puVar5 + -8) = puVar7;\n            puVar7 = puVar5 + -8;\n            if (*(iVar3 + 0x90) != 0) {\n                *(puVar5 + 8) = iVar3;\n                *(puVar5 + -0x58) = 0x43403b;\n                fcn.00409300();\n                uVar2 = *0x503f20;\n                arg1_00 = *0x503f28;\n                uVar4 = *0x503f20;\n                if (*0x503f30 < *0x503f28 + 1) {\n                    *(puVar5 + -0x58) = 0x434065;\n                    arg1 = *0x503f28;\n                    uVar4 = fcn.004425c0(*0x503f28);\n                    arg1_00 = uVar2;\n                    uVar2 = uVar4;\n                    *0x503f30 = arg1;\n                    if (*0x557ed0 != 0) {\n                        *(puVar5 + -0x58) = 0x43408a;\n                        uVar4 = fcn.00459280(arg1, param_2, param_3, param_4);\n                        uVar2 = *0x503f20;\n                    }\n                }\n                *0x503f20 = uVar2;\n                *0x503f28 = arg1_00 + 1;\n                if (*0x557ed0 == 0) {\n                    param_2 = *(puVar5 + 8);\n                    *(uVar4 + arg1_00 * 8) = param_2;\n                }\n                else {\n                    param_2 = *(puVar5 + 8);\n                    *(puVar5 + -0x58) = 0x4340bd;\n                    fcn.004593a0(arg1_00, param_2, param_3, param_4);\n                }\n                if (*0x503f28 != 0) {\n                    uVar2 = *0x5035e8;\n                    if ((*0x5035e8 != *0x503f20) && (uVar2 = *0x503f20,  *0x557ed0 != '\\0')) {\n                        *(puVar5 + -0x10) = *0x503f20;\n                        *(puVar5 + -0x58) = 0x4340f4;\n                        fcn.00402960();\n                        uVar2 = *(puVar5 + -0x10);\n                    }\n                    *0x5035e8 = uVar2;\n                    uVar1 = *0x557d08;\n                    *0x557d08 = *0x503f28;\n                    *(puVar5 + -0x58) = 0x434125;\n                    fcn.00409520(uVar1);\n                    return;\n                }\n                *(puVar5 + -0x58) = 0x434136;\n                fcn.00459720(0);\n            }\n            *(puVar5 + -0x58) = 0x434147;\n            iVar3 = fcn.00430d40();\n        }\n        *(puVar6 + 8) = iVar3;\n        *(puVar6 + -8) = 0x434152;\n        fcn.00457040();\n        iVar3 = *(puVar6 + 8);\n        puVar5 = puVar6;\n    } while( true );\n}\n",
        "token_count": 969
    },
    "0043f1e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint64_t fcn.0043f1e0(void)\n\n{\n    uint64_t *puVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t in_RAX;\n    \n    do {\n        uVar3 = *(in_RAX + 0xdf8);\n        if (uVar3 == 0) {\n            do {\n                uVar2 = *(in_RAX + 0x5f0);\n                if (uVar2 == *(in_RAX + 0x5f4)) {\n                    return 0;\n                }\n                uVar3 = *(in_RAX + 0x5f8 + (uVar2 & 0xff) * 8);\n                LOCK();\n            } while (uVar2 != *(in_RAX + 0x5f0));\n            *(in_RAX + 0x5f0) = uVar2 + 1;\n            return uVar3;\n        }\n        LOCK();\n        puVar1 = in_RAX + 0xdf8;\n        uVar4 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar3 == uVar4) * *puVar1;\n    } while (uVar3 != uVar4);\n    return uVar3;\n}\n",
        "token_count": 288
    },
    "0044b460": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044b460(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x44b485;\n            fcn.00430d40();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x44b48b;\n        fcn.00457040();\n    } while( true );\n}\n",
        "token_count": 177
    },
    "00458e20": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00458e20(void)\n\n{\n    int32_t iStackX8;\n    \n    do {\n        iStackX8 = iStackX8 + -1;\n    } while (iStackX8 != 0);\n    return;\n}\n",
        "token_count": 55
    },
    "00459720": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00459720(uchar *arg1)\n\n{\n    ulong in_RAX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x40) = 0x42e1b4;\n            fcn.0042e040(0x12);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 0;\n            arg1 = *0x20 + -0x20;\n            *(*0x20 + -0x40) = 0x42e1f0;\n            fcn.00408e00();\n            *(*0x20 + -0x40) = 0x42e1f5;\n            in_RAX = fcn.004305a0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = arg1;\n        *(*0x20 + -8) = 0x42e205;\n        fcn.00457040();\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 466
    },
    "00459740": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00459740(uchar *arg1)\n\n{\n    ulong in_RAX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x40) = 0x42e254;\n            fcn.0042e040(0x12);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 0;\n            arg1 = *0x20 + -0x20;\n            *(*0x20 + -0x40) = 0x42e290;\n            fcn.00408e00();\n            *(*0x20 + -0x40) = 0x42e295;\n            in_RAX = fcn.004305a0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = arg1;\n        *(*0x20 + -8) = 0x42e2a5;\n        fcn.00457040();\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 462
    },
    "00459760": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00459760(ulong arg1, uchar *arg2)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg1;\n            *(*0x20 + 0x10) = arg2;\n            *(*0x20 + -0x40) = 0x42e2f4;\n            fcn.0042e040(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 1;\n            arg2 = *0x20 + -0x20;\n            *(*0x20 + -0x40) = 0x42e330;\n            fcn.00408e00();\n            *(*0x20 + -0x40) = 0x42e335;\n            arg1 = fcn.004305a0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg1;\n        *(*0x20 + 0x10) = arg2;\n        *(*0x20 + -8) = 0x42e345;\n        fcn.00457040();\n        arg1 = *(*0x20 + 8);\n        arg2 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 456
    },
    "004597a0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004597a0(ulong arg1, uchar *arg2)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg1;\n            *(*0x20 + 0x10) = arg2;\n            *(*0x20 + -0x40) = 0x42e434;\n            fcn.0042e040(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 2;\n            arg2 = *0x20 + -0x20;\n            *(*0x20 + -0x40) = 0x42e470;\n            fcn.00408e00();\n            *(*0x20 + -0x40) = 0x42e475;\n            arg1 = fcn.004305a0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg1;\n        *(*0x20 + 0x10) = arg2;\n        *(*0x20 + -8) = 0x42e485;\n        fcn.00457040();\n        arg1 = *(*0x20 + 8);\n        arg2 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 455
    },
    "004597c0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004597c0(ulong arg1, uchar *arg2)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg1;\n            *(*0x20 + 0x10) = arg2;\n            *(*0x20 + -0x40) = 0x42e4d4;\n            fcn.0042e040(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 2;\n            arg2 = *0x20 + -0x20;\n            *(*0x20 + -0x40) = 0x42e510;\n            fcn.00408e00();\n            *(*0x20 + -0x40) = 0x42e515;\n            arg1 = fcn.004305a0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg1;\n        *(*0x20 + 0x10) = arg2;\n        *(*0x20 + -8) = 0x42e525;\n        fcn.00457040();\n        arg1 = *(*0x20 + 8);\n        arg2 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 457
    },
    "004597e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004597e0(uchar *arg1)\n\n{\n    ulong in_RAX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x40) = 0x42e574;\n            fcn.0042e040(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 3;\n            arg1 = *0x20 + -0x20;\n            *(*0x20 + -0x40) = 0x42e5b0;\n            fcn.00408e00();\n            *(*0x20 + -0x40) = 0x42e5b5;\n            in_RAX = fcn.004305a0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = arg1;\n        *(*0x20 + -8) = 0x42e5c5;\n        fcn.00457040();\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 467
    },
    "00459800": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00459800(uchar *arg1)\n\n{\n    ulong in_RAX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x40) = 0x42e614;\n            fcn.0042e040(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 3;\n            arg1 = *0x20 + -0x20;\n            *(*0x20 + -0x40) = 0x42e650;\n            fcn.00408e00();\n            *(*0x20 + -0x40) = 0x42e655;\n            in_RAX = fcn.004305a0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = arg1;\n        *(*0x20 + -8) = 0x42e665;\n        fcn.00457040();\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 460
    },
    "00459820": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00459820(ulong noname_0, ulong arg2)\n\n{\n    uchar *unaff_RBX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg2;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x40) = 0x42e6b4;\n            fcn.0042e040(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 4;\n            unaff_RBX = *0x20 + -0x20;\n            *(*0x20 + -0x40) = 0x42e6f0;\n            fcn.00408e00();\n            *(*0x20 + -0x40) = 0x42e6f5;\n            arg2 = fcn.004305a0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg2;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -8) = 0x42e705;\n        fcn.00457040();\n        arg2 = *(*0x20 + 8);\n        unaff_RBX = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 477
    },
    "00459840": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00459840(ulong noname_0, ulong arg2)\n\n{\n    uchar *unaff_RBX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg2;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x40) = 0x42e754;\n            fcn.0042e040(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 4;\n            unaff_RBX = *0x20 + -0x20;\n            *(*0x20 + -0x40) = 0x42e790;\n            fcn.00408e00();\n            *(*0x20 + -0x40) = 0x42e795;\n            arg2 = fcn.004305a0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg2;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -8) = 0x42e7a5;\n        fcn.00457040();\n        arg2 = *(*0x20 + 8);\n        unaff_RBX = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 473
    },
    "0045b6e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint64_t fcn.0045b6e0(uint64_t param_1)\n\n{\n    uint64_t *puVar1;\n    uint16_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t **ppiVar5;\n    ulong *puVar6;\n    uchar uVar7;\n    char cVar8;\n    uint32_t uVar9;\n    int64_t iVar10;\n    int64_t *arg1;\n    uint64_t arg2;\n    ulong uVar11;\n    uchar *puVar12;\n    uchar *puVar13;\n    uchar *puVar14;\n    uchar *arg1_00;\n    int64_t *piVar15;\n    uint64_t arg3;\n    uint64_t arg4;\n    int64_t in_GS_OFFSET;\n    bool bVar16;\n    uint uVar17;\n    uint uVar18;\n    uint uVar19;\n    uint uVar20;\n    uchar auStack24 [16];\n    \n    uVar17 = 0;\n    uVar18 = 0;\n    uVar19 = 0;\n    uVar20 = 0;\n    iVar3 = **(in_GS_OFFSET + 0x28);\n    puVar14 = &stack0xfffffffffffffff8;\n    uVar11 = 0x32;\n    iVar4 = fcn.00430d40();\n    puVar12 = auStack24;\n    do {\n        uVar7 = param_1;\n        puVar1 = iVar3 + 0x10;\n        puVar13 = puVar12;\n        if (*puVar1 <= puVar12 + -0x78 && puVar12 + -0x78 != *puVar1) {\n            puVar13 = puVar12 + -0xf8;\n            *(puVar12 + -8) = puVar14;\n            puVar14 = puVar12 + -8;\n            *(puVar12 + 8) = iVar4;\n            *(puVar12 + 0x10) = uVar11;\n            if ((iVar4 != 0) && ((*(iVar4 + 0x17) & 0x1f) == 0x13)) {\n                *(puVar12 + -0x98) = CONCAT412(uVar20, CONCAT48(uVar19, CONCAT44(uVar18, uVar17)));\n                *(puVar12 + -0x88) = CONCAT412(uVar20, CONCAT48(uVar19, CONCAT44(uVar18, uVar17)));\n                *(puVar12 + -0x78) = CONCAT412(uVar20, CONCAT48(uVar19, CONCAT44(uVar18, uVar17)));\n                *(puVar12 + -0x68) = CONCAT412(uVar20, CONCAT48(uVar19, CONCAT44(uVar18, uVar17)));\n                if ((*(iVar4 + 0x14) & 1) == 0) {\n                    iVar10 = 0x38;\n                }\n                else {\n                    iVar10 = 0x48;\n                }\n                arg1_00 = *(iVar4 + 0x30);\n                if (arg1_00 < 0x100001) {\n                    *(puVar12 + -0xb0) = iVar4;\n                    *(puVar12 + -0xc0) = iVar10 + iVar4;\n                    *(puVar12 + -0xb8) = uVar11;\n                    *(puVar12 + -200) = arg1_00;\n                    iVar10 = 0;\n                    while (iVar10 < arg1_00) {\n                        *(puVar12 + -0xd0) = iVar10;\n                        *(puVar12 + -0x100) = 0x455016;\n                        fcn.00448960();\n                        iVar4 = *(puVar12 + -0xb0);\n                        arg1_00 = *(puVar12 + -200);\n                        iVar10 = *(puVar12 + -0xd0) + 1;\n                    }\n                    arg2 = *(puVar12 + -0x78) + 7U & 0xfffffffffffffff8;\n                    *(puVar12 + -0x78) = arg2;\n                    *(puVar12 + -0x60) = arg2;\n                    uVar2 = *(iVar4 + 0x30);\n                    piVar15 = uVar2;\n                    arg1_00 = (*(iVar4 + 0x32) & 0x7fff) + uVar2;\n                    arg1 = arg1_00 & 0xffff;\n                    if (piVar15 <= arg1) {\n                        arg4 = uVar2;\n                        arg3 = piVar15 << 3;\n                        arg1_00 = piVar15 + -0x20000 >> 0x3f & arg3;\n                        arg1 = arg1 - arg4;\n                        if (arg1 == 0x1) {\n                            if ((*(iVar4 + 0x14) & 1) == 0) {\n                                iVar10 = 0x38;\n                            }\n                            else {\n                                iVar10 = 0x48;\n                            }\n                            arg1 = *(arg1_00 + iVar10 + iVar4);\n                            if (*arg1 == 8) {\n                                if ((*(iVar4 + 0x14) & 1) == 0) {\n                                    iVar10 = 0x38;\n                                }\n                                else {\n                                    iVar10 = 0x48;\n                                }\n                                uVar9 = *(*(arg1_00 + iVar10 + iVar4) + 0x17) & 0x1f;\n                                arg1 = uVar9;\n                                cVar8 = uVar9;\n                                if ((cVar8 != '\\r') && (cVar8 != '\\x0e')) {\n                                    if (*0x4f0268 == 0) {\n                                        *(puVar12 + -0x78) = arg2 + 8;\n                                    }\n                                    arg1 = (*(puVar12 + -0x78) + 7U & 0xfffffffffffffff8) + *(puVar12 + -0x70);\n                                    if (arg1 < 0x201) {\n                                        *(puVar12 + -0x100) = 0x45515b;\n                                        fcn.00409300();\n                                        iVar4 = *0x557c48;\n                                        *(puVar12 + -0xa8) = *(puVar12 + -0xb8);\n                                        puVar12[-0xa0] = 0;\n                                        *(puVar12 + -0x100) = 0x455185;\n                                        ppiVar5 = fcn.0040c380(puVar12 + -0xa8);\n                                        arg1 = *ppiVar5;\n                                        if (iVar4 != '\\0') {\n                                            *(puVar12 + -0xd8) = arg1;\n                                            *(puVar12 + -0x100) = 0x455328;\n                                            fcn.00409520();\n                                            return *(puVar12 + -0xd8) * 5 + CONCAT71(*0x48a3f1, *0x48a3f0);\n                                        }\n                                        iVar4 = *0x557c48;\n                                        if (*0x557c48 == 0) {\n                                            *(puVar12 + -0x100) = 0x45519f;\n                                            iVar4 = fcn.0040bee0();\n                                            if (*0x557ed0 != 0) {\n                                                arg1_00 = 0x557c48;\n                                                *(puVar12 + -0x100) = 0x4551bd;\n                                                fcn.00459280(arg1, arg2, arg3, arg4);\n                                                iVar4 = *0x557c48;\n                                            }\n                                        }\n                                        *0x557c48 = iVar4;\n                                        bVar16 = *0x557c50 < 2000;\n                                        if (*0x557c50 < 2000) {\n                                            arg1_00 = puVar12 + -0x88;\n                                            *(puVar12 + -0x108) = puVar14;\n                                            *(puVar12 + -0x100) = 0x4551ef;\n                                            iVar4 = fcn.004599b0();\n                                            puVar14 = *(puVar12 + -0x108);\n                                            uVar11 = *(puVar12 + -0xb8);\n                                            *(puVar12 + -0x58) = uVar11;\n                                            *(puVar12 + -0x48) = *(puVar12 + -0x98);\n                                            *(puVar12 + -0x44) = *(puVar12 + -0x94);\n                                            *(puVar12 + -0x40) = *(puVar12 + -0x90);\n                                            *(puVar12 + -0x3c) = *(puVar12 + -0x8c);\n                                            *(puVar12 + -0x38) = *(puVar12 + -0x88);\n                                            *(puVar12 + -0x34) = *(puVar12 + -0x84);\n                                            *(puVar12 + -0x30) = *(puVar12 + -0x80);\n                                            *(puVar12 + -0x2c) = *(puVar12 + -0x7c);\n                                            *(puVar12 + -0x28) = *(puVar12 + -0x78);\n                                            *(puVar12 + -0x24) = *(puVar12 + -0x74);\n                                            *(puVar12 + -0x20) = *(puVar12 + -0x70);\n                                            *(puVar12 + -0x1c) = *(puVar12 + -0x6c);\n                                            *(puVar12 + -0x18) = *(puVar12 + -0x68);\n                                            *(puVar12 + -0x14) = *(puVar12 + -100);\n                                            *(puVar12 + -0x10) = *(puVar12 + -0x60);\n                                            *(puVar12 + -0xc) = *(puVar12 + -0x5c);\n                                            if (bVar16) {\n                                                *(puVar12 + -0xe0) = iVar4;\n                                                *(puVar12 + -200) = iVar4 * 5;\n                                                if (*0x557ed0 == 0) {\n                                                    *(puVar12 + -0x108) = puVar14;\n                                                    *(puVar12 + -0x100) = 0x45528f;\n                                                    fcn.00459d1a();\n                                                }\n                                                else {\n                                                    *(puVar12 + -0x100) = 0x4552ac;\n                                                    fcn.0040eb60(puVar12 + -0x58);\n                                                    uVar11 = *(puVar12 + -0xb8);\n                                                }\n                                                *(puVar12 + -0xa8) = uVar11;\n                                                puVar12[-0xa0] = 0;\n                                                *(puVar12 + -0x100) = 0x4552d3;\n                                                puVar6 = fcn.0040c5c0(puVar12 + -0xa8);\n                                                *puVar6 = *(puVar12 + -0xe0);\n                                                *0x557c50 = *0x557c50 + 1;\n                                                *(puVar12 + -0x100) = 0x4552f0;\n                                                fcn.00409520();\n                                                return *(puVar12 + -200) + CONCAT71(*0x48a3f1, *0x48a3f0);\n                                            }\n                                            arg1 = 0x7d0;\n                                            *(puVar12 + -0x100) = 0x45535b;\n                                            fcn.00459720(2000);\n                                        }\n                                        *(puVar12 + -0x100) = 0x455369;\n                                        fcn.00409520();\n                                        *(puVar12 + -0x100) = 0x45537a;\n                                        fcn.00430d40();\n                                    }\n                                    *(puVar12 + -0x100) = 0x45538d;\n                                    fcn.004305a0();\n                                }\n                                *(puVar12 + -0x100) = 0x4553a5;\n                                fcn.004305a0();\n                            }\n                            *(puVar12 + -0x100) = 0x4553b8;\n                            fcn.004305a0();\n                        }\n                        *(puVar12 + -0x100) = 0x4553cb;\n                        fcn.004305a0();\n                    }\n                    *(puVar12 + -0x100) = 0x4553d3;\n                    fcn.004597e0(arg1);\n                }\n                *(puVar12 + -0x100) = 0x4553e5;\n                fcn.00459760(arg1_00, 0x100000);\n                uVar7 = SUB81(arg1_00, 0);\n            }\n            uVar11 = 0x49e5b0;\n            *(puVar12 + -0x100) = 0x4553f8;\n            iVar4 = fcn.004305a0();\n        }\n        *(puVar13 + 8) = iVar4;\n        *(puVar13 + 0x10) = uVar11;\n        puVar13[0x18] = uVar7;\n        *(puVar13 + -8) = 0x45540c;\n        fcn.00457040();\n        iVar4 = *(puVar13 + 8);\n        uVar11 = *(puVar13 + 0x10);\n        param_1 = puVar13[0x18];\n        puVar12 = puVar13;\n    } while( true );\n}\n",
        "token_count": 2980
    }
}