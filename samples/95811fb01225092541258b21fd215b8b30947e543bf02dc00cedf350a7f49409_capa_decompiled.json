{
    "004010bd": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004010bd(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *arg_8h_00;\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    uint *extraout_ECX;\n    char cVar5;\n    int32_t unaff_EBP;\n    uint lpNumberOfBytesRead;\n    uint hObject;\n    uint lpBuffer;\n    uint var_24ch;\n    uint var_234h;\n    uint var_224h;\n    uint var_220h;\n    uint var_21ch;\n    uint var_4h;\n    \n    fcn.0045b335(0x29c);\n    arg_8h_00 = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x2a0) = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x21c) = 0;\n    cVar5 = '\\0';\n    fcn.00453710(unaff_EBP + -0x21a, 0, 0x206);\n    iVar2 = (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsW)(L\"%APPDATA%\", unaff_EBP + -0x21c, 0x104);\n    if (iVar2 == 0) {\n        uVar3 = fcn.00401a5b(L\"\\\\lic\");\n        fcn.004017bf(uVar3);\n    }\n    else {\n        uVar3 = 0;\n        *(unaff_EBP + -0x220) = 7;\n        *(unaff_EBP + -0x224) = 0;\n        *(unaff_EBP + -0x234) = 0;\n        if (*(unaff_EBP + -0x21c) != 0) {\n            uVar3 = fcn.00453054(unaff_EBP + -0x21c);\n        }\n        fcn.00402667(unaff_EBP + -0x21c, uVar3);\n        *(unaff_EBP + -4) = 0;\n        uVar3 = fcn.00453054(L\"\\\\Trend Micro\\\\UTCollector\");\n        fcn.0040186c(L\"\\\\Trend Micro\\\\UTCollector\", uVar3);\n        iVar2 = fcn.00425da0(0);\n        if (iVar2 != 0) {\n            uVar3 = fcn.00401a5b(L\"\\\\lic\");\n            fcn.004017bf(uVar3);\n            fcn.00402754(1, 0);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n    }\n    fcn.00402754(1, 0);\n    puVar4 = extraout_ECX;\n    if (7 < extraout_ECX[5]) {\n        puVar4 = *extraout_ECX;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_CreateFileW)(puVar4, 0x80000000, 0, 0, 3, 0x80, 0);\n    *(unaff_EBP + -0x2a0) = iVar2;\n    if (iVar2 == -1) {\n        iVar2 = sym.SupportWrapper.exe_PR_initializeLicenseProfile(extraout_ECX + 0x1b);\n        *arg_8h_00 = iVar2;\n        *(extraout_ECX + 6) = iVar2 == 0;\n    }\n    else {\n        *(unaff_EBP + -0x2a8) = 0;\n        iVar2 = (*_sym.imp.KERNEL32.dll_ReadFile)(iVar2, unaff_EBP + -0x29c, 0x50, unaff_EBP + -0x2a8, 0);\n        if ((iVar2 == 0) || (*(unaff_EBP + -0x2a1) = 1,  *(unaff_EBP + -0x2a8) != 0x50)) {\n            *(unaff_EBP + -0x2a1) = 0;\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*(unaff_EBP + -0x2a0));\n        if (*(unaff_EBP + -0x2a1) != '\\0') {\n            fcn.004537f5(extraout_ECX + 0x1b, 0x50, unaff_EBP + -0x29c, 0x50);\n            *(unaff_EBP + -0x2a0) = 0x60010108;\n            iVar2 = sym.SupportWrapper.exe_PR_getLicenseStatus(extraout_ECX + 0x1b, unaff_EBP + -0x2a0);\n            *arg_8h_00 = iVar2;\n            if (iVar2 == 0) {\n                iVar2 = *(unaff_EBP + -0x2a0);\n                *(extraout_ECX + 6) = 1;\n                if (iVar2 == 0x60010106) {\n                    *(extraout_ECX + 0x19) = 1;\n                }\n                else if (*(unaff_EBP + -0x2a0) == 0x60010107) {\n                    *(extraout_ECX + 0x19) = 1;\n                    iVar2 = sym.SupportWrapper.exe_PR_isPerformOnlineUpdateLicenseBySchedule\n                                      (extraout_ECX + 0x1b, unaff_EBP + -0x2a0);\n                    if ((iVar2 == 0) && (*(unaff_EBP + -0x2a0) == 1)) {\n                        fcn.004015a8(arg_8h_00);\n                    }\n                }\n                else if (*(unaff_EBP + -0x2a0) == 0x60010108) {\n                    *(extraout_ECX + 0x1a) = 1;\n                    cVar1 = fcn.004015a8(arg_8h_00);\n                    if (cVar1 != '\\0') {\n                        iVar2 = sym.SupportWrapper.exe_PR_getLicenseStatus(extraout_ECX + 0x1b, unaff_EBP + -0x2a0);\n                        *arg_8h_00 = iVar2;\n                        if (iVar2 == 0) {\n                            if ((*(unaff_EBP + -0x2a0) == 0x60010106) || (*(unaff_EBP + -0x2a0) == 0x60010107)) {\n                                cVar5 = '\\x01';\n                            }\n                            *(extraout_ECX + 0x19) = cVar5;\n                            *(extraout_ECX + 0x1a) = cVar5 == '\\0';\n                        }\n                    }\n                }\n            }\n        }\n        if (*(extraout_ECX + 6) == '\\0') {\n            iVar2 = sym.SupportWrapper.exe_PR_initializeLicenseProfile(extraout_ECX + 0x1b);\n            *arg_8h_00 = iVar2;\n            *(extraout_ECX + 6) = iVar2 == 0;\n        }\n    }\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 1602
    },
    "00401757": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00401757(uint *param_1)\n\n{\n    uint32_t in_EAX;\n    uint *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *lpNumberOfBytesWritten;\n    \n    if (*(param_1 + 6) == '\\0') {\n        uVar3 = in_EAX & 0xffffff00;\n    }\n    else {\n        uVar3 = 0;\n        puVar1 = param_1;\n        if (7 < param_1[5]) {\n            puVar1 = *param_1;\n        }\n        lpNumberOfBytesWritten = param_1;\n        uVar2 = (*_sym.imp.KERNEL32.dll_CreateFileW)(puVar1, 0x40000000, 0, 0, 4, 0x80, 0);\n        if (uVar2 != 0xffffffff) {\n            lpNumberOfBytesWritten = NULL;\n            (*_sym.imp.KERNEL32.dll_WriteFile)(uVar2, param_1 + 0x1b, 0x50, &lpNumberOfBytesWritten, 0);\n            uVar2 = (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar2);\n            uVar3 = lpNumberOfBytesWritten == 0x50;\n        }\n        uVar3 = uVar2 & 0xffffff00 | uVar3;\n    }\n    return uVar3;\n}\n",
        "token_count": 313
    },
    "00402acf": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nushort * __cdecl fcn.00402acf(ushort *arg_8h)\n\n{\n    uint32_t arg_ch;\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *(in_ECX + 0x18);\n    arg_ch = *(in_ECX + 0x1c);\n    iVar1 = fcn.00409847(&var_4h, arg_ch, 1);\n    *(in_ECX + 0x20) = iVar1;\n    if (iVar1 == -1) {\n        if (*(in_ECX + 0x10) <= arg_ch) {\n            *(arg_8h + 8) = 0;\n            *(arg_8h + 10) = 7;\n            *arg_8h = 0;\n            return arg_8h;\n        }\n        *(in_ECX + 0x1c) = *(in_ECX + 0x10) + 1;\n        iVar1 = -1;\n    }\n    else {\n        *(in_ECX + 0x1c) = iVar1 + 1;\n        iVar1 = *(in_ECX + 0x20) - arg_ch;\n    }\n    fcn.004085ca(arg_8h, arg_ch, iVar1);\n    return arg_8h;\n}\n",
        "token_count": 305
    },
    "00402b96": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00402b96(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint32_t arg_1ch;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    int32_t extraout_ECX;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t *in_FS_OFFSET;\n    bool bVar9;\n    uint32_t uStackY12348;\n    int32_t iStackY12344;\n    int32_t iStackY12336;\n    uchar *puStackY12332;\n    uint32_t uStackY12312;\n    ushort uStackY12308;\n    uchar lpBuffer;\n    uint var_100fh;\n    uint uStackY132;\n    char16_t *pcVar10;\n    uint uVar11;\n    uint arg_14h;\n    uint uVar12;\n    char *pcVar13;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x487e36;\n    var_ch = *in_FS_OFFSET;\n    fcn.00459c50();\n    arg_1ch = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &fcn.00402b96::var_ch;\n    if (extraout_ECX == 0) goto code_r0x00402f0b;\n    pcVar13 = \"Drop payload archive\";\n    uVar12 = 0x800010;\n    uVar11 = 0x4d;\n    pcVar10 = L\"SupportWrapper.cpp\";\n    uVar3 = fcn.0042c180();\n    fcn.0042c3c0(uVar3, pcVar10, uVar11, uVar12, pcVar13, arg_1ch);\n    uStackY12308 = 0;\n    fcn.00453710();\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)();\n    pcVar1 = _sym.imp.KERNEL32.dll_CreateFileW;\n    iVar4 = (*_sym.imp.KERNEL32.dll_CreateFileW)();\n    if (iVar4 == -1) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n        puVar6 = &stack0xffffcfec;\n        pcVar13 = \"Can\\'t open sfx %S (%lu)\";\n        uVar12 = 0x800002;\n        uVar11 = 0x5b;\n        pcVar10 = L\"SupportWrapper.cpp\";\n        uVar3 = fcn.0042c180();\n        fcn.0042c3c0(uVar3, pcVar10, uVar11, uVar12, pcVar13, puVar6);\n        goto code_r0x00402f0b;\n    }\n    iVar4 = (*pcVar1)();\n    if (iVar4 == -1) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n        pcVar13 = \"can\\'t create archive file %S (%lu)\";\n        uVar12 = 0x800002;\n        uVar11 = 0x69;\n        pcVar10 = L\"SupportWrapper.cpp\";\n        iVar4 = extraout_ECX;\n        uVar3 = fcn.0042c180();\n        uStackY132 = 0x402cc2;\n        fcn.0042c3c0(uVar3, pcVar10, uVar11, uVar12, pcVar13, iVar4);\n    }\n    fcn.0040229c(\"trend micro\");\n    var_4h = 0;\n    uVar3 = fcn.00453900();\n    fcn.004096dc(\" support tools\", uVar3);\n    lpBuffer = 0;\n    fcn.00453710();\n    iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n    iVar8 = 0;\n    iStackY12344 = 0;\n    uStackY12348 = 0;\n    do {\n        iVar5 = (*_sym.imp.KERNEL32.dll_ReadFile)();\n        if (iVar5 == 0) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            pcVar13 = \"read self-extract file failed, err=%lu\";\n            arg_14h = 0x800002;\n            uVar12 = 0x83;\n            pcVar10 = L\"SupportWrapper.cpp\";\n            uVar11 = fcn.0042c180();\n            fcn.0042c3c0(uVar11, pcVar10, uVar12, arg_14h, pcVar13, uVar3);\n            goto code_r0x00402efe;\n        }\n        uVar7 = 0;\n        do {\n            puVar6 = &stack0xffffcfd4;\n            if (0xf < uStackY12312) {\n                puVar6 = puStackY12332;\n            }\n            iVar5 = fcn.004540b6(&stack0xffffefec + uVar7, puVar6, iVar4);\n            pcVar1 = _sym.imp.KERNEL32.dll_WriteFile;\n            if (iVar5 == 0) goto code_r0x00402e7a;\n            uVar7 = uVar7 + 1;\n        } while (uVar7 <= (iVar8 + iStackY12336) - iVar4);\n        iVar8 = (iVar8 + iStackY12336) - uVar7;\n        bVar9 = CARRY4(uStackY12348, uVar7);\n        uStackY12348 = uStackY12348 + uVar7;\n        iStackY12344 = iStackY12344 + bVar9;\n        fcn.004530c0();\n    } while ((iStackY12344 == 0) && (uStackY12348 < 0x1000001));\n    pcVar13 = \"Cannot find sfx signature\";\n    uVar12 = 0x800002;\n    uVar11 = 0x7c;\n    pcVar10 = L\"SupportWrapper.cpp\";\n    uVar3 = fcn.0042c180();\n    fcn.0042c3c0(uVar3, pcVar10, uVar11, uVar12, pcVar13, arg_1ch);\n    goto code_r0x00402efe;\n    while (iStackY12336 != 0) {\ncode_r0x00402e7a:\n        (*pcVar1)();\n        iVar4 = (*_sym.imp.KERNEL32.dll_ReadFile)();\n        pcVar2 = _sym.imp.KERNEL32.dll_CloseHandle;\n        if (iVar4 == 0) break;\n    }\n    (*_sym.imp.KERNEL32.dll_CloseHandle)();\n    (*pcVar2)();\n    pcVar13 = \"Drop payload archive\";\n    uVar12 = 0x800020;\n    uVar11 = 0xa7;\n    pcVar10 = L\"SupportWrapper.cpp\";\n    uVar3 = fcn.0042c180();\n    fcn.0042c3c0(uVar3, pcVar10, uVar11, uVar12, pcVar13, arg_1ch);\ncode_r0x00402efe:\n    fcn.0040230f();\ncode_r0x00402f0b:\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(var_ch);\n    return;\n}\n",
        "token_count": 1671
    },
    "004033a8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_40h\n\nvoid __cdecl fcn.004033a8(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    ushort *puVar3;\n    uint *arg_1ch;\n    int32_t iVar4;\n    uint *extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint extraout_ECX_02;\n    uint extraout_ECX_03;\n    int32_t unaff_EBP;\n    char16_t *pcVar5;\n    uint var_74h;\n    uint var_70h;\n    uint var_58h;\n    uint var_40h;\n    uint uVar6;\n    char16_t *pcVar7;\n    uint var_2ch;\n    uint var_28h;\n    uint var_18h;\n    uint var_14h;\n    uint uVar8;\n    uint uVar9;\n    char *pcVar10;\n    char *var_4h;\n    uint uVar11;\n    \n    uVar11 = 0x68;\n    fcn.0045b335();\n    *(unaff_EBP + -0x74) = *(unaff_EBP + 8);\n    fcn.0045400a(\"Initializing...\\n\\n\", uVar11);\n    cVar1 = fcn.0042d0c0(0x4a07bc);\n    if (cVar1 == '\\0') {\n        fcn.00426020();\n        fcn.00425da0(1);\n        iVar2 = fcn.00403037();\n        if ((iVar2 == 0) || (iVar2 = fcn.00403088(),  iVar2 == 0)) goto code_r0x004036cf;\n    }\n    else {\n        pcVar10 = \"NOSFX\";\n        uVar9 = 0x800040;\n        uVar8 = 0xfa;\n        uVar11 = fcn.0042c180();\n        fcn.0042c3c0(uVar11, L\"SupportWrapper.cpp\", uVar8, uVar9, pcVar10, 0x4a07bc);\n    }\n    pcVar10 = \"Load config\";\n    uVar9 = 0x800040;\n    uVar8 = 0x10b;\n    uVar11 = fcn.0042c180();\n    fcn.0042c3c0(uVar11, L\"SupportWrapper.cpp\", uVar8, uVar9, pcVar10, 0x4a07bc);\n    uVar11 = fcn.00426660(0);\n    *(unaff_EBP + -4) = 0;\n    iVar2 = fcn.0041050b(uVar11);\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040230f();\n    if (iVar2 == 0) {\n        pcVar10 = \"WrapperConfig::LoadConfig() failed\";\n        uVar9 = 0x800002;\n        uVar8 = fcn.0042c180();\n        fcn.0042c3c0(uVar8, L\"SupportWrapper.cpp\", 0x10e, uVar9, pcVar10, uVar11);\n        goto code_r0x004036cf;\n    }\n    if (extraout_ECX[2] != 0) {\n        uVar11 = (*_sym.imp.KERNEL32.dll_GetConsoleWindow)(0);\n        (*_sym.imp.USER32.dll_ShowWindow)(uVar11);\n    }\n    *(unaff_EBP + -0x14) = 7;\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -0x28) = 0;\n    *(unaff_EBP + -4) = 1;\n    cVar1 = fcn.0042d150(L\"PROXY\", unaff_EBP + -0x28);\n    pcVar5 = L\"direct\";\n    if (cVar1 != '\\0') {\n        iVar2 = unaff_EBP + -0x28;\n        if (7 < *(unaff_EBP + -0x14)) {\n            iVar2 = *(unaff_EBP + -0x28);\n        }\n        iVar2 = fcn.004558b6(iVar2, L\"direct\");\n        if (iVar2 == 0) {\n            puVar3 = unaff_EBP + -0x28;\n            if (7 < *(unaff_EBP + -0x14)) {\n                puVar3 = *(unaff_EBP + -0x28);\n            }\n            *(unaff_EBP + -0x18) = 0;\n            *puVar3 = 0;\n        }\n        if (extraout_ECX + 0x4e != unaff_EBP + -0x28) {\n            fcn.00402450(unaff_EBP + -0x28, 0, 0xffffffff);\n        }\n    }\n    arg_1ch = fcn.0040f661();\n    *(unaff_EBP + -4) = 2;\n    if (7 < arg_1ch[5]) {\n        arg_1ch = *arg_1ch;\n    }\n    pcVar10 = \"Session ID:%S\";\n    pcVar7 = L\"SupportWrapper.cpp\";\n    uVar11 = fcn.0042c180(extraout_ECX_00);\n    fcn.0042c3c0(uVar11, pcVar7, 0x121, 0x800040, pcVar10, arg_1ch);\n    *(unaff_EBP + -4) = 1;\n    fcn.00402754(1, 0);\n    if ((extraout_ECX[0x52] != 0) && (pcVar5 = extraout_ECX + 0x4e,  7 < extraout_ECX[0x53])) {\n        pcVar5 = *pcVar5;\n    }\n    uVar9 = 0x800008;\n    uVar8 = 0x124;\n    pcVar7 = L\"SupportWrapper.cpp\";\n    uVar11 = fcn.0042c180(extraout_ECX_01);\n    fcn.0042c3c0(uVar11, pcVar7, uVar8, uVar9, \"Proxy set to: %S\", pcVar5);\n    cVar1 = fcn.0042d0c0(L\"AUTOREBOOT\");\n    if (cVar1 != '\\0') {\n        *extraout_ECX = 1;\n    }\n    if (extraout_ECX[10] == 0) {\n        uVar8 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(0x8003);\n        pcVar10 = \"Old Error Mode is 0x%X\";\n        uVar9 = 0x13d;\n        uVar11 = extraout_ECX_03;\n    }\n    else {\n        uVar8 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(1);\n        pcVar10 = \"GetEnableWER(), Old Error Mode is 0x%X\";\n        uVar9 = 0x134;\n        uVar11 = extraout_ECX_02;\n    }\n    uVar6 = 0x800040;\n    uVar11 = fcn.0042c180(uVar11);\n    fcn.0042c3c0(uVar11, L\"SupportWrapper.cpp\", uVar9, uVar6, pcVar10, uVar8);\n    fcn.0042c5b0();\n    *(unaff_EBP + -4) = 3;\n    iVar4 = fcn.00425da0(0);\n    iVar2 = unaff_EBP + -0x40;\n    if (iVar4 == 0) {\n        if (7 < *(unaff_EBP + -0x2c)) {\n            iVar2 = *(unaff_EBP + -0x40);\n        }\n        uVar11 = (*_sym.imp.KERNEL32.dll_GetLastError)(iVar2);\n        var_4h = \"Error %lu CreateDirectoryRecursive %S\";\n        uVar8 = 0x143;\ncode_r0x004036a1:\n        uVar6 = 0x800002;\n        pcVar5 = L\"SupportWrapper.cpp\";\n        uVar9 = fcn.0042c180();\n        fcn.0042c3c0(uVar9, pcVar5, uVar8, uVar6, var_4h, uVar11);\n    }\n    else {\n        if (7 < *(unaff_EBP + -0x2c)) {\n            iVar2 = *(unaff_EBP + -0x40);\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(iVar2);\n        if (iVar2 == -1) {\n            uVar11 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            var_4h = \"Error %lu verify output folder %S\";\n            uVar8 = 0x148;\n            goto code_r0x004036a1;\n        }\n    }\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\ncode_r0x004036cf:\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 2136
    },
    "0040387f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040387f(char *arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint in_stack_fffffdd8;\n    char16_t *noname_0;\n    char16_t *noname_0_00;\n    char16_t *noname_0_01;\n    int32_t in_stack_fffffe90;\n    char16_t *pcVar5;\n    char16_t *pcVar6;\n    uint noname_0_02;\n    int32_t noname_0_03;\n    char16_t *pcVar7;\n    uint uVar8;\n    uint uVar9;\n    char *pcVar10;\n    uchar auStack204 [48];\n    uchar *puStack156;\n    uchar uStack148;\n    uchar auStack140 [4];\n    uint32_t uStack136;\n    uint uStack132;\n    uint uStack128;\n    uchar *puStack120;\n    ushort uStack116;\n    uint32_t uStack100;\n    uint uStack96;\n    uchar auStack92 [20];\n    uchar auStack72 [20];\n    uchar uStack52;\n    uchar uStack48;\n    uchar uStack44;\n    uint32_t uStack28;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0xffffffff;\n    uStack16 = 0x487848;\n    uStack20 = *in_FS_OFFSET;\n    uStack28 = *0x4b4f00 ^ &stack0xffffff34;\n    *in_FS_OFFSET = &stack0xffffffec;\n    if ((arg_8h == NULL) || (*arg_8h == ';')) goto code_r0x00403e59;\n    uStack128 = 0xf;\n    if (*arg_8h == '[') {\n        uStack132 = 0;\n        uStack148 = 0;\n        fcn.0040220b(arg_8h, arg_ch);\n        uStack20 = 0;\n        fcn.00426570(0);\n        uStack20 = CONCAT31(uStack20._1_3_, 2);\n        fcn.0040230f();\n        uVar1 = fcn.00453054(0x4a08f0);\n        iVar2 = fcn.00409847(0x4a08f0, 1, uVar1);\n        if (iVar2 != -1) {\n            fcn.004085ca(&stack0xffffffb8, 1, iVar2 + -1);\n            uStack44 = 3;\n            puVar3 = &stack0xffffff64;\n            if (7 < uStack136) {\n                puVar3 = puStack156;\n            }\n            pcVar10 = \"ReadLine() %S: Group=%S\";\n            uVar9 = 0x800040;\n            uVar8 = 0x187;\n            pcVar7 = L\"SupportWrapper.cpp\";\n            uVar1 = fcn.0042c180();\n            fcn.0042c3c0(uVar1, pcVar7, uVar8, uVar9, pcVar10, puVar3);\n            fcn.00402754(1, 0);\n        }\n    }\n    else {\n        uStack132 = 0;\n        uStack148 = 0;\n        fcn.0040220b(arg_8h, arg_ch);\n        uStack20 = 4;\n        fcn.00426570(0);\n        uStack20 = CONCAT31(uStack20._1_3_, 6);\n        fcn.0040230f();\n        uVar8 = 0x3d;\n        uVar1 = 0x403a12;\n        iVar2 = fcn.00409847(&stack0xffffff2c, 0, 1);\n        if (iVar2 == -1) {\n            puVar3 = &stack0xffffff88;\n            if (7 < uStack100) {\n                puVar3 = puStack120;\n            }\n            pcVar10 = \"ReadLine() %S skipped\";\n            uVar9 = 0x800040;\n            uVar8 = 0x18e;\n            pcVar7 = L\"SupportWrapper.cpp\";\n            uVar1 = fcn.0042c180();\n            fcn.0042c3c0(uVar1, pcVar7, uVar8, uVar9, pcVar10, puVar3);\n        }\n        else {\n            if (in_ECX + 4 != &stack0xffffff88) {\n                uVar1 = 0xffffffff;\n                fcn.00402450(&stack0xffffff88, 0, 0xffffffff);\n            }\n            *(in_ECX + 0x1c) = 0x3d;\n            *(in_ECX + 0x20) = 0;\n            *(in_ECX + 0x24) = 0;\n            fcn.00402acf(&stack0xffffff34);\n            puVar3 = &stack0xffffff18;\n            uStack48 = 7;\n            fcn.00402acf(puVar3);\n            uStack96 = 7;\n            uStack100 = 0;\n            uStack116 = 0;\n            uStack52 = 9;\n            uVar9 = fcn.00402acf(&stack0xffffffa4);\n            iVar2 = fcn.004017bf(uVar9);\n            iVar2 = *(iVar2 + 0x10);\n            uVar9 = 1;\n            fcn.00402754(1, 0);\n            while (iVar2 != 0) {\n                uVar9 = fcn.00453054(0x4a0924);\n                fcn.0040186c(0x4a0924, uVar9);\n                in_ECX = 0;\n                fcn.004019b5(&stack0xffffff74, 0, 0xffffffff);\n                uVar9 = fcn.00402acf(&stack0xffffff80);\n                iVar2 = fcn.004017bf(uVar9);\n                iVar2 = *(iVar2 + 0x10);\n                uVar9 = 1;\n                fcn.00402754(1, 0);\n            }\n            noname_0_03 = 0x4a0928;\n            uVar4 = fcn.00453054(0x4a0928);\n            iVar2 = fcn.00409963(noname_0_03, uVar8, 0x4a0928, uVar4);\n            if (iVar2 == 0) {\n                puVar3 = in_ECX + 0x28;\ncode_r0x00403de3:\n                if (puVar3 != &stack0xfffffe00) {\n                    fcn.00402450(&stack0xfffffe00, 0, 0xffffffff);\n                }\n            }\n            else {\n                uVar4 = 0x4a0944;\n                uVar8 = fcn.00453054(0x4a0944);\n                iVar2 = fcn.00409963(uVar4, arg_8h, 0x4a0944, uVar8);\n                if (iVar2 == 0) {\n                    puVar3 = in_ECX + 0x40;\n                    goto code_r0x00403de3;\n                }\n                noname_0_02 = 0x4a0954;\n                uVar8 = fcn.00453054(0x4a0954);\n                iVar2 = fcn.00409963(noname_0_02, uVar1, 0x4a0954, uVar8);\n                if (iVar2 == 0) {\n                    puVar3 = in_ECX + 0x58;\n                    goto code_r0x00403de3;\n                }\n                pcVar7 = L\"ActivationCode\";\n                uVar1 = fcn.00453054(L\"ActivationCode\");\n                iVar2 = fcn.00409963(pcVar7, puVar3, L\"ActivationCode\", uVar1);\n                if (iVar2 == 0) {\n                    puVar3 = in_ECX + 0x70;\n                    goto code_r0x00403de3;\n                }\n                pcVar6 = L\"DtasHost\";\n                uVar1 = fcn.00453054(L\"DtasHost\");\n                iVar2 = fcn.00409963(pcVar6, uVar9, L\"DtasHost\", uVar1);\n                if (iVar2 == 0) {\n                    puVar3 = in_ECX + 0x88;\n                    goto code_r0x00403de3;\n                }\n                pcVar5 = L\"DtasApiKey\";\n                in_stack_fffffe90 = noname_0_03;\n                uVar1 = fcn.00453054(L\"DtasApiKey\");\n                iVar2 = fcn.00409963(pcVar5, in_stack_fffffe90, L\"DtasApiKey\", uVar1);\n                if (iVar2 == 0) {\n                    puVar3 = in_ECX + 0xa0;\n                    goto code_r0x00403de3;\n                }\n                noname_0_01 = L\"LogZipPassword\";\n                uVar1 = fcn.00453054(L\"LogZipPassword\");\n                iVar2 = fcn.00409963(noname_0_01, uVar4, L\"LogZipPassword\", uVar1);\n                if (iVar2 == 0) {\n                    puVar3 = in_ECX + 0xb8;\n                    goto code_r0x00403de3;\n                }\n                noname_0_00 = L\"CurlURL\";\n                uVar1 = fcn.00453054(L\"CurlURL\");\n                iVar2 = fcn.00409963(noname_0_00, noname_0_02, L\"CurlURL\", uVar1);\n                if (iVar2 == 0) {\n                    puVar3 = in_ECX + 0xd0;\n                    goto code_r0x00403de3;\n                }\n                noname_0 = L\"CurlOptions\";\n                uVar1 = fcn.00453054(L\"CurlOptions\");\n                iVar2 = fcn.00409963(noname_0, pcVar7, L\"CurlOptions\", uVar1);\n                if (iVar2 == 0) {\n                    puVar3 = in_ECX + 0xe8;\n                    goto code_r0x00403de3;\n                }\n                pcVar7 = L\"UploadToDrive\";\n                uVar1 = fcn.00453054(L\"UploadToDrive\");\n                iVar2 = fcn.00409963(pcVar7, pcVar6, L\"UploadToDrive\", uVar1);\n                if (iVar2 == 0) {\n                    puVar3 = in_ECX + 0x100;\n                    goto code_r0x00403de3;\n                }\n                pcVar6 = L\"FtpServerIP\";\n                uVar1 = fcn.00453054(L\"FtpServerIP\");\n                iVar2 = fcn.00409963(pcVar6, pcVar5, L\"FtpServerIP\", uVar1);\n                if (iVar2 == 0) {\n                    puVar3 = in_ECX + 0x118;\n                    goto code_r0x00403de3;\n                }\n                pcVar5 = L\"FtpServerPort\";\n                uVar1 = fcn.00453054(L\"FtpServerPort\");\n                iVar2 = fcn.00409963(pcVar5, noname_0_01, L\"FtpServerPort\", uVar1);\n                if (iVar2 != 0) {\n                    pcVar5 = L\"FtpUserName\";\n                    uVar1 = fcn.00453054(L\"FtpUserName\");\n                    iVar2 = fcn.00409963(pcVar5, noname_0_00, L\"FtpUserName\", uVar1);\n                    if (iVar2 == 0) {\n                        puVar3 = in_ECX + 0x134;\n                    }\n                    else {\n                        pcVar5 = L\"FtpUserPassword\";\n                        uVar1 = fcn.00453054(L\"FtpUserPassword\");\n                        iVar2 = fcn.00409963(pcVar5, noname_0, L\"FtpUserPassword\", uVar1);\n                        if (iVar2 == 0) {\n                            puVar3 = in_ECX + 0x14c;\n                        }\n                        else {\n                            pcVar5 = L\"FtpRemotePath\";\n                            uVar1 = fcn.00453054(L\"FtpRemotePath\");\n                            iVar2 = fcn.00409963(pcVar5, pcVar7, L\"FtpRemotePath\", uVar1);\n                            if (iVar2 != 0) {\n                                pcVar7 = L\"SelfDelete\";\n                                uVar1 = fcn.00453054(L\"SelfDelete\");\n                                iVar2 = fcn.00409963(pcVar7, pcVar6, L\"SelfDelete\", uVar1);\n                                if (iVar2 == 0) {\n                                    uVar1 = fcn.004036d7(&stack0xfffffe04);\n                                    *(in_ECX + 0x17c) = uVar1;\n                                }\n                                goto code_r0x00403e26;\n                            }\n                            puVar3 = in_ECX + 0x164;\n                        }\n                    }\n                    goto code_r0x00403de3;\n                }\n                uVar1 = fcn.00455a22();\n                *(in_ECX + 0x130) = uVar1;\n            }\ncode_r0x00403e26:\n            fcn.00402754(1, 0);\n            in_stack_fffffdd8 = 1;\n            fcn.00402754(1, 0);\n            fcn.00402754(1, 0);\n        }\n    }\n    fcn.00402754(1, 0);\ncode_r0x00403e59:\n    *in_FS_OFFSET = in_stack_fffffe90;\n    fcn.004529f8(in_stack_fffffdd8);\n    return;\n}\n",
        "token_count": 3118
    },
    "00403e81": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00403e81(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_3d8h;\n    uint hObject;\n    uint var_3d0h;\n    uint var_3cch;\n    uint var_3a4h;\n    uint var_394h;\n    uint var_24ch;\n    uint var_23ch;\n    uint var_238h;\n    uint var_234h;\n    uint var_224h;\n    uint var_220h;\n    uint lpBuffer;\n    char16_t *arg_ch;\n    uint arg_10h;\n    uint arg_14h;\n    char *arg_18h;\n    uint var_4h;\n    \n    fcn.0045b335(0x3cc);\n    *(unaff_EBP + -0x21c) = 0;\n    *(unaff_EBP + -0x3d8) = 0;\n    fcn.00453710(unaff_EBP + -0x21a, 0, 0x206);\n    (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)(0x104, unaff_EBP + -0x21c);\n    *(unaff_EBP + -0x238) = 7;\n    *(unaff_EBP + -0x23c) = 0;\n    *(unaff_EBP + -0x24c) = 0;\n    *(unaff_EBP + -4) = 0;\n    if (*(unaff_EBP + -0x21c) == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.00453054(unaff_EBP + -0x21c);\n    }\n    fcn.00402667(unaff_EBP + -0x21c, uVar2);\n    *(unaff_EBP + -0x234) = 0;\n    *(unaff_EBP + -0x220) = 7;\n    *(unaff_EBP + -0x224) = 0;\n    fcn.00402450(unaff_EBP + -0x24c, 0, 0xffffffff);\n    *(unaff_EBP + -4) = 1;\n    uVar2 = fcn.00453054(0x4a078c);\n    fcn.0040186c(0x4a078c, uVar2);\n    uVar2 = fcn.00453054(0x4a0abc);\n    fcn.0040186c(0x4a0abc, uVar2);\n    iVar3 = unaff_EBP + -0x234;\n    if (7 < *(unaff_EBP + -0x220)) {\n        iVar3 = *(unaff_EBP + -0x234);\n    }\n    arg_18h = \"GetLogZipPrefix() wsIniPath=%S\";\n    arg_14h = 0x800040;\n    arg_10h = 0x1ee;\n    arg_ch = L\"SupportWrapper.cpp\";\n    uVar2 = fcn.0042c180(extraout_ECX);\n    fcn.0042c3c0(uVar2, arg_ch, arg_10h, arg_14h, arg_18h, iVar3);\n    fcn.0040374c();\n    *(unaff_EBP + -0x3d4) = 0xffffffff;\n    *(unaff_EBP + -0x3d0) = unaff_EBP + -0x3cc;\n    *(unaff_EBP + -4) = 3;\n    iVar3 = unaff_EBP + -0x234;\n    if (7 < *(unaff_EBP + -0x220)) {\n        iVar3 = *(unaff_EBP + -0x234);\n    }\n    cVar1 = fcn.0040c013(iVar3);\n    if ((cVar1 == '\\0') || (*(unaff_EBP + -0x394) == 0)) {\n        fcn.00402707(0x4a00e0);\n    }\n    else {\n        fcn.004084c5(unaff_EBP + -0x3a4);\n    }\n    if (*(unaff_EBP + -0x3d4) != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*(unaff_EBP + -0x3d4));\n    }\n    fcn.0040405a();\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 1056
    },
    "0040411c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040411c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint extraout_ECX_02;\n    uint extraout_ECX_03;\n    uint extraout_ECX_04;\n    uint extraout_ECX_05;\n    uint extraout_ECX_06;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_600h;\n    uint var_5fch;\n    uint var_5f8h;\n    uint var_5f4h;\n    uint var_5f0h;\n    uint lpWSAData;\n    uint var_45ch;\n    uint var_444h;\n    uint var_42ch;\n    uint var_41ch;\n    uint var_418h;\n    uint var_413h;\n    char16_t *pcVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    int32_t iVar9;\n    char *pcVar10;\n    uint uVar11;\n    uint var_4h;\n    \n    fcn.0045b335(0x5f4);\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x5f8) = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x600) = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x5fc) = 0;\n    fcn.0040229c(0x4a23ad);\n    *(unaff_EBP + -4) = 1;\n    fcn.00402707(0x4a00e0);\n    *(unaff_EBP + -0x5fc) = 1;\n    *(unaff_EBP + -0x414) = 0;\n    fcn.00453710(unaff_EBP + -0x413, 0, 0x3ff);\n    uVar11 = 2;\n    iVar1 = (*_sym.imp.WS2_32.dll_WSAStartup)(2, unaff_EBP + -0x5ec);\n    if (iVar1 == 0) {\n        iVar1 = unaff_EBP + -0x414;\n        iVar2 = (*_sym.imp.WS2_32.dll_gethostname)(iVar1, 0x400);\n        if (iVar2 == -1) {\n            pcVar10 = \"gethostname SOCKET_ERROR\";\n            uVar8 = 0x800008;\n            uVar6 = 0x20b;\n            pcVar5 = L\"SupportWrapper.cpp\";\n            uVar11 = fcn.0042c180();\n            fcn.0042c3c0(uVar11, pcVar5, uVar6, uVar8, pcVar10, iVar1);\n        }\n        else {\n            iVar2 = unaff_EBP + -0x414;\n            pcVar10 = \"host %s\";\n            uVar8 = 0x800008;\n            uVar6 = 0x20f;\n            pcVar5 = L\"SupportWrapper.cpp\";\n            uVar11 = fcn.0042c180(extraout_ECX);\n            fcn.0042c3c0(uVar11, pcVar5, uVar6, uVar8, pcVar10, iVar2);\n            *(unaff_EBP + -0x5f4) = 0;\n            do {\n                puVar3 = (*_sym.imp.WS2_32.dll_gethostbyname)(unaff_EBP + -0x414);\n                if (puVar3 == NULL) {\n                    (*_sym.imp.WS2_32.dll_WSACleanup)();\n                    uVar11 = extraout_ECX_06;\n                    break;\n                }\n                uVar11 = *puVar3;\n                *(unaff_EBP + -0x5f0) = 0;\n                pcVar10 = \"Official name: %s\";\n                uVar7 = 0x800008;\n                uVar8 = 0x21e;\n                pcVar5 = L\"SupportWrapper.cpp\";\n                uVar6 = fcn.0042c180(extraout_ECX_00);\n                fcn.0042c3c0(uVar6, pcVar5, uVar8, uVar7, pcVar10, uVar11);\n                piVar4 = puVar3[1];\n                if (*piVar4 != 0) {\n                    iVar2 = *(unaff_EBP + -0x5f0);\n                    do {\n                        iVar2 = iVar2 + 1;\n                        pcVar10 = \"Alternate name #%d: %s\";\n                        uVar8 = 0x800008;\n                        uVar6 = 0x221;\n                        pcVar5 = L\"SupportWrapper.cpp\";\n                        iVar9 = iVar2;\n                        uVar11 = fcn.0042c180();\n                        fcn.0042c3c0(uVar11, pcVar5, uVar6, uVar8, pcVar10, iVar9);\n                        piVar4 = piVar4 + 1;\n                    } while (*piVar4 != 0);\n                }\n                iVar2 = *(puVar3 + 2);\n                if (iVar2 == 2) {\n                    pcVar10 = \"Address type: AF_INET\";\n                    uVar11 = 0x227;\ncode_r0x004042f1:\n                    uVar8 = 0x800008;\n                    pcVar5 = L\"SupportWrapper.cpp\";\n                    uVar6 = fcn.0042c180();\n                    fcn.0042c3c0(uVar6, pcVar5, uVar11, uVar8, pcVar10, iVar1);\n                    uVar11 = extraout_ECX_02;\n                }\n                else {\n                    if (iVar2 == 0x11) {\n                        pcVar10 = \"Address type: AF_NETBIOS\";\n                        uVar11 = 0x22a;\n                        goto code_r0x004042f1;\n                    }\n                    pcVar10 = \"Address type: %d\";\n                    uVar8 = 0x800008;\n                    uVar6 = 0x22d;\n                    pcVar5 = L\"SupportWrapper.cpp\";\n                    uVar11 = fcn.0042c180(iVar2);\n                    fcn.0042c3c0(uVar11, pcVar5, uVar6, uVar8, pcVar10, iVar2);\n                    uVar11 = extraout_ECX_01;\n                }\n                iVar2 = *(puVar3 + 10);\n                pcVar10 = \"Address length: %d\";\n                uVar8 = 0x800008;\n                uVar6 = 0x230;\n                pcVar5 = L\"SupportWrapper.cpp\";\n                uVar11 = fcn.0042c180(uVar11);\n                fcn.0042c3c0(uVar11, pcVar5, uVar6, uVar8, pcVar10, iVar2);\n                iVar2 = 0;\n                uVar11 = 2;\n                if (*(puVar3 + 2) == 2) {\n                    piVar4 = puVar3[3];\n                    iVar9 = *piVar4;\n                    while (iVar9 != 0) {\n                        piVar4 = piVar4 + iVar2;\n                        iVar2 = iVar2 + 1;\n                        uVar11 = (*_sym.imp.WS2_32.dll_inet_ntoa)(**piVar4);\n                        pcVar10 = \"IP Address #%d: %s\";\n                        uVar8 = 0x800008;\n                        uVar6 = 0x239;\n                        pcVar5 = L\"SupportWrapper.cpp\";\n                        *(unaff_EBP + -0x5f0) = uVar11;\n                        iVar9 = iVar2;\n                        uVar11 = fcn.0042c180();\n                        fcn.0042c3c0(uVar11, pcVar5, uVar6, uVar8, pcVar10, iVar9);\n                        if (*(unaff_EBP + -0x41c) == 0) {\ncode_r0x004043ab:\n                            uVar11 = fcn.00402284(*(unaff_EBP + -0x5f0));\n                            iVar1 = *(unaff_EBP + -0x5f0);\n                            fcn.004096dc(iVar1, uVar11);\n                            uVar11 = extraout_ECX_04;\n                        }\n                        else {\n                            uVar11 = extraout_ECX_03;\n                            if (*(unaff_EBP + 0xc) != 0) {\n                                uVar11 = fcn.00453900(0x4a0bb4);\n                                fcn.004096dc(0x4a0bb4, uVar11);\n                                goto code_r0x004043ab;\n                            }\n                        }\n                        piVar4 = puVar3[3];\n                        iVar9 = piVar4[iVar2];\n                    }\n                }\n                else if (*(puVar3 + 2) == 0x11) {\n                    pcVar10 = \"NETBIOS address was returned\\n\";\n                    uVar8 = 0x800008;\n                    uVar6 = 0x24c;\n                    pcVar5 = L\"SupportWrapper.cpp\";\n                    uVar11 = fcn.0042c180();\n                    fcn.0042c3c0(uVar11, pcVar5, uVar6, uVar8, pcVar10, iVar1);\n                    uVar11 = extraout_ECX_05;\n                }\n                iVar2 = *(unaff_EBP + -0x5f4) + 1;\n                *(unaff_EBP + -0x5f4) = iVar2;\n            } while (iVar2 < 1);\n            iVar1 = unaff_EBP + -0x42c;\n            if (0xf < *(unaff_EBP + -0x418)) {\n                iVar1 = *(unaff_EBP + -0x42c);\n            }\n            pcVar10 = \"ip %s\";\n            uVar8 = 0x800008;\n            uVar6 = 0x251;\n            pcVar5 = L\"SupportWrapper.cpp\";\n            uVar11 = fcn.0042c180(uVar11);\n            fcn.0042c3c0(uVar11, pcVar5, uVar6, uVar8, pcVar10, iVar1);\n            if (*(unaff_EBP + -0x41c) != 0) {\n                if (*(unaff_EBP + 0xc) == 0) {\n                    iVar1 = unaff_EBP + -0x42c;\n                    if (0xf < *(unaff_EBP + -0x418)) {\n                        iVar1 = *(unaff_EBP + -0x42c);\n                    }\n                    fcn.0040229c(iVar1);\n                    *(unaff_EBP + -4) = 5;\n                    uVar11 = fcn.00426570(0);\n                    fcn.004017bf(uVar11);\n                    fcn.00402754(1, 0);\n                    fcn.0040230f();\n                }\n                else {\n                    fcn.0040229c(unaff_EBP + -0x414);\n                    *(unaff_EBP + -4) = 2;\n                    uVar11 = fcn.00426570(0);\n                    fcn.004017bf(uVar11);\n                    fcn.00402754(1, 0);\n                    *(unaff_EBP + -4) = 1;\n                    fcn.0040230f();\n                    uVar11 = fcn.00453054(0x4a0be0);\n                    fcn.0040186c(0x4a0be0, uVar11);\n                    iVar1 = unaff_EBP + -0x42c;\n                    if (0xf < *(unaff_EBP + -0x418)) {\n                        iVar1 = *(unaff_EBP + -0x42c);\n                    }\n                    fcn.0040229c(iVar1);\n                    *(unaff_EBP + -4) = 3;\n                    uVar11 = fcn.00426570(0);\n                    *(unaff_EBP + -4) = 4;\n                    fcn.004019b5(uVar11, 0, 0xffffffff);\n                    fcn.00402754(1, 0);\n                    *(unaff_EBP + -4) = 1;\n                    fcn.0040230f();\n                    uVar11 = fcn.00453054(0x4a08f0);\n                    fcn.0040186c(0x4a08f0, uVar11);\n                }\n            }\n        }\n        (*_sym.imp.WS2_32.dll_WSACleanup)();\n    }\n    else {\n        pcVar10 = \"WSAStartup failed\";\n        uVar7 = 0x800008;\n        uVar8 = 0x267;\n        pcVar5 = L\"SupportWrapper.cpp\";\n        uVar6 = fcn.0042c180();\n        fcn.0042c3c0(uVar6, pcVar5, uVar8, uVar7, pcVar10, uVar11);\n    }\n    fcn.0040230f();\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 2976
    },
    "004057ee": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.004057ee(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint arg_8h;\n    uint32_t uVar3;\n    int32_t unaff_EBP;\n    int32_t arg_10h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_40h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    char16_t *arg_ch;\n    uint var_18h;\n    uint var_14h;\n    uint uVar4;\n    uint arg_14h;\n    char *pcVar5;\n    uint var_4h;\n    \n    fcn.0045b335(0x54);\n    *(unaff_EBP + -0x60) = extraout_ECX;\n    uVar3 = 0;\n    *(unaff_EBP + -0x5c) = 0;\n    *(unaff_EBP + -0x2c) = 7;\n    *(unaff_EBP + -0x30) = 0;\n    *(unaff_EBP + -0x40) = 0;\n    *(unaff_EBP + -4) = 0;\n    iVar1 = fcn.0040853f(0x4a0210, 0);\n    arg_10h = -1;\n    if (iVar1 != -1) {\n        arg_10h = 0;\n    }\n    do {\n        arg_10h = fcn.00408515(0x4a0210, arg_10h + 1);\n        if (arg_10h == -1) {\n            iVar1 = fcn.004084c5(arg_8h);\n            *(unaff_EBP + -4) = 2;\n            uVar3 = uVar3 | 2;\n        }\n        else {\n            iVar1 = fcn.004085ca(unaff_EBP + -0x58, 0, arg_10h);\n            *(unaff_EBP + -4) = 1;\n            uVar3 = uVar3 | 1;\n        }\n        *(unaff_EBP + -0x5c) = uVar3;\n        if (unaff_EBP + -0x40 != iVar1) {\n            fcn.00402450(iVar1, 0, 0xffffffff);\n        }\n        if ((uVar3 & 2) != 0) {\n            uVar3 = uVar3 & 0xfffffffd;\n            *(unaff_EBP + -0x5c) = uVar3;\n            fcn.00402754(1, 0);\n        }\n        *(unaff_EBP + -4) = 0;\n        if ((uVar3 & 1) != 0) {\n            uVar3 = uVar3 & 0xfffffffe;\n            *(unaff_EBP + -0x5c) = uVar3;\n            fcn.00402754(1, 0);\n        }\n        iVar1 = unaff_EBP + -0x40;\n        if (7 < *(unaff_EBP + -0x2c)) {\n            iVar1 = *(unaff_EBP + -0x40);\n        }\n        iVar1 = (*_sym.imp.WININET.dll_FtpCreateDirectoryW)(*(unaff_EBP + -0x60), iVar1);\n        if (iVar1 == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar1 != 0x2ee3) {\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                pcVar5 = \"FtpCreateDirectoryW failed %lu\";\n                arg_ch = L\"SupportWrapper.cpp\";\n                uVar4 = fcn.0042c180(extraout_ECX_01);\n                fcn.0042c3c0(uVar4, arg_ch, 0x39a, 0x800002, pcVar5, uVar2);\n                goto code_r0x00405920;\n            }\n            *(unaff_EBP + -0x18) = 0;\n            *(unaff_EBP + -0x14) = 7;\n            *(unaff_EBP + -0x28) = 0;\n            *(unaff_EBP + -4) = 3;\n            iVar1 = fcn.00405692();\n            if (iVar1 != 0x226) {\n                iVar1 = unaff_EBP + -0x28;\n                if (7 < *(unaff_EBP + -0x14)) {\n                    iVar1 = *(unaff_EBP + -0x28);\n                }\n                pcVar5 = \"InternetGetLastResponseInfo %S\";\n                arg_14h = 0x800002;\n                uVar4 = 0x396;\n                uVar2 = fcn.0042c180(extraout_ECX_00);\n                fcn.0042c3c0(uVar2, L\"SupportWrapper.cpp\", uVar4, arg_14h, pcVar5, iVar1);\n                fcn.00402754(1, 0);\n                goto code_r0x00405920;\n            }\n            *(unaff_EBP + -4) = 0;\n            fcn.00402754(1, 0);\n        }\n        if (arg_10h == -1) {\ncode_r0x00405920:\n            fcn.00402754(1, 0);\n            fcn.0045b2e4();\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 1302
    },
    "00406321": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00406321(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t arg_8h_00;\n    int32_t unaff_EBP;\n    uint var_6f8h;\n    uint var_6e8h;\n    uint var_6e0h;\n    uint var_690h;\n    uint var_680h;\n    uint hObject;\n    uint var_634h;\n    uint var_630h;\n    uint var_5f0h;\n    uint var_5e0h;\n    uint var_5dch;\n    uint var_5d8h;\n    uint var_5c8h;\n    uint var_5c4h;\n    uint var_4b0h;\n    uint var_498h;\n    uint var_480h;\n    uint var_470h;\n    uint var_46ch;\n    uint var_468h;\n    uint var_454h;\n    uint var_450h;\n    uint var_440h;\n    uint var_43ch;\n    uint lpSystemTime;\n    uint var_42ch;\n    uint lpBuffer;\n    uint var_21fh;\n    uint var_117h;\n    char16_t *arg_ch;\n    uint arg_10h;\n    uint arg_14h;\n    char *arg_18h;\n    uint var_4h;\n    \n    fcn.0045b335(0x6ec);\n    fcn.00426660(0);\n    *(unaff_EBP + -4) = 0;\n    iVar4 = unaff_EBP + -0x468;\n    if (0xf < *(unaff_EBP + -0x454)) {\n        iVar4 = *(unaff_EBP + -0x468);\n    }\n    arg_18h = \"Query Support Token(%s)\";\n    arg_14h = 0x800008;\n    arg_10h = 0x451;\n    arg_ch = L\"SupportWrapper.cpp\";\n    uVar3 = fcn.0042c180(0);\n    fcn.0042c3c0(uVar3, arg_ch, arg_10h, arg_14h, arg_18h, iVar4);\n    iVar4 = unaff_EBP + -0x468;\n    if (0xf < *(unaff_EBP + -0x454)) {\n        iVar4 = *(unaff_EBP + -0x468);\n    }\n    fcn.00408d3d(iVar4);\n    *(unaff_EBP + -4) = 1;\n    if (*(unaff_EBP + -0x690) != 0) {\n        fcn.00406264(unaff_EBP + -0x450);\n        *(unaff_EBP + -4) = 2;\n        fcn.00426660(0);\n        *(unaff_EBP + -4) = 3;\n        fcn.0040c1d5();\n        uVar3 = fcn.0040c39a();\n        fcn.0040ea04(uVar3);\n        fcn.0040230f();\n        *(unaff_EBP + -4) = 1;\n        fcn.00402754(1, 0);\n        fcn.0040411c(unaff_EBP + -0x4b0, 1);\n        *(unaff_EBP + -4) = 4;\n        fcn.00426660(0);\n        *(unaff_EBP + -4) = 5;\n        fcn.0040c1d5();\n        uVar3 = fcn.0040c39a();\n        fcn.0040ea04(uVar3);\n        fcn.0040230f();\n        *(unaff_EBP + -4) = 1;\n        fcn.00402754(1, 0);\n        *(unaff_EBP + -0x438) = 0;\n        *(unaff_EBP + -0x436) = 0;\n        *(unaff_EBP + -0x432) = 0;\n        *(unaff_EBP + -0x42e) = 0;\n        *(unaff_EBP + -0x42a) = 0;\n        (*_sym.imp.KERNEL32.dll_GetLocalTime)(unaff_EBP + -0x438);\n        *(unaff_EBP + -0x220) = 0;\n        fcn.00453710(unaff_EBP + -0x21f, 0, 0x103);\n        fcn.00455bdd(unaff_EBP + -0x220, 0x104, \"%04d/%02d/%02d %02d:%02d:%02d\", *(unaff_EBP + -0x438));\n        fcn.0040c1d5();\n        uVar3 = fcn.0040c1d5();\n        fcn.0040ea04(uVar3);\n        *(unaff_EBP + -0x428) = 0;\n        fcn.00453710(unaff_EBP + -0x426, 0, 0x206);\n        (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)(0x104, unaff_EBP + -0x428);\n        *(unaff_EBP + -0x470) = 0;\n        uVar3 = 0;\n        *(unaff_EBP + -0x46c) = 7;\n        *(unaff_EBP + -0x480) = 0;\n        *(unaff_EBP + -4) = 6;\n        if (*(unaff_EBP + -0x428) != 0) {\n            uVar3 = fcn.00453054(unaff_EBP + -0x428);\n        }\n        fcn.00402667(unaff_EBP + -0x428, uVar3);\n        *(unaff_EBP + -0x440) = 0;\n        *(unaff_EBP + -0x450) = 0;\n        *(unaff_EBP + -0x43c) = 7;\n        fcn.00402450(unaff_EBP + -0x480, 0, 0xffffffff);\n        *(unaff_EBP + -4) = 7;\n        uVar3 = fcn.00453054(0x4a078c);\n        fcn.0040186c(0x4a078c, uVar3);\n        uVar3 = fcn.00453054(0x4a0abc);\n        fcn.0040186c(0x4a0abc, uVar3);\n        fcn.0040374c();\n        *(unaff_EBP + -0x638) = 0xffffffff;\n        *(unaff_EBP + -0x634) = unaff_EBP + -0x630;\n        *(unaff_EBP + -4) = 9;\n        iVar4 = unaff_EBP + -0x450;\n        if (7 < *(unaff_EBP + -0x43c)) {\n            iVar4 = *(unaff_EBP + -0x450);\n        }\n        cVar2 = fcn.0040c013(iVar4);\n        if (cVar2 != '\\0') {\n            if (*(unaff_EBP + -0x5e0) != 0) {\n                *(unaff_EBP + -0x118) = 0;\n                fcn.00453710(unaff_EBP + -0x117, 0);\n                iVar4 = unaff_EBP + -0x5f0;\n                if (7 < *(unaff_EBP + -0x5dc)) {\n                    iVar4 = *(unaff_EBP + -0x5f0);\n                }\n                fcn.00455f27(unaff_EBP + -0x118, iVar4, 0x104);\n                fcn.0040c1d5();\n                uVar3 = fcn.0040c1d5();\n                fcn.0040ea04(uVar3);\n            }\n            if (*(unaff_EBP + -0x5c8) != 0) {\n                *(unaff_EBP + -0x118) = 0;\n                fcn.00453710(unaff_EBP + -0x117, 0);\n                iVar4 = unaff_EBP + -0x5d8;\n                if (7 < *(unaff_EBP + -0x5c4)) {\n                    iVar4 = *(unaff_EBP + -0x5d8);\n                }\n                fcn.00455f27(unaff_EBP + -0x118, iVar4, 0x104);\n                fcn.0040c1d5();\n                uVar3 = fcn.0040c1d5();\n                fcn.0040ea04(uVar3);\n            }\n        }\n        if (*(unaff_EBP + -0x638) != -1) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        }\n        fcn.0040405a();\n        fcn.00402754(1, 0);\n        *(unaff_EBP + -4) = 1;\n        fcn.00402754(1, 0);\n        iVar4 = fcn.00409b3a();\n        if (iVar4 == 0) {\n            iVar4 = unaff_EBP + -0x6f8 + *(*(unaff_EBP + -0x6f8) + 4);\n            uVar1 = *(iVar4 + 0xc);\n            arg_8h_00 = uVar1 | 2;\n            if (*(iVar4 + 0x38) == 0) {\n                arg_8h_00 = uVar1 | 6;\n            }\n            fcn.0040e96e(arg_8h_00, 0);\n        }\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.00408e23();\n    *(unaff_EBP + -0x680) = vtable.std::ios_base.0;\n    fcn.0044e8ed(unaff_EBP + -0x680);\n    fcn.0040230f();\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 2279
    },
    "004068cd": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: lpBuffer\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Variable defined which should be unmapped: var_8ch\n// WARNING: Variable defined which should be unmapped: lpNumberOfBytesWritten\n// WARNING: Variable defined which should be unmapped: nSize\n// WARNING: Variable defined which should be unmapped: hFile\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: nNumberOfBytesToWrite\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_7ch\n\nvoid __cdecl fcn.004068cd(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint uVar5;\n    int32_t unaff_EBP;\n    char16_t *arg_ch_00;\n    uint arg_14h;\n    uint var_8ch;\n    uint lpNumberOfBytesWritten;\n    uint nSize;\n    uint hFile;\n    uint var_7ch;\n    uint var_64h;\n    uint nNumberOfBytesToWrite;\n    uint var_50h;\n    uint var_4ch;\n    uint var_3ch;\n    uint var_38h;\n    uint lpBuffer;\n    uint uVar6;\n    uint uVar7;\n    char *pcVar8;\n    uint var_4h;\n    \n    fcn.0045b335(0x80);\n    piVar2 = *(unaff_EBP + 8);\n    uVar1 = piVar2[5];\n    *(unaff_EBP + -0x8c) = *(unaff_EBP + 0x10);\n    if (7 < uVar1) {\n        piVar2 = *piVar2;\n    }\n    iVar3 = (*_sym.imp.KERNEL32.dll_CreateFileW)(piVar2, 0x40000000, 0, 0, 2, 0x80, 0);\n    *(unaff_EBP + -0x80) = iVar3;\n    if (iVar3 == -1) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n        puVar4 = fcn.00426660(0);\n        *(unaff_EBP + -4) = 0;\n        if (0xf < puVar4[5]) {\n            puVar4 = *puVar4;\n        }\n        pcVar8 = \"DropDDAConfigFile() create \\'%s\\' failed.[error=%d]\";\n        uVar7 = 0x800002;\n        uVar6 = 0x4a3;\n        uVar5 = fcn.0042c180();\n        fcn.0042c3c0(uVar5, L\"SupportWrapper.cpp\", uVar6, uVar7, pcVar8, puVar4);\n        fcn.0040230f();\n    }\n    else {\n        *(unaff_EBP + -0x34) = 0;\n        puVar4 = unaff_EBP + -0x32;\n        for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar4 = 0;\n            puVar4 = puVar4 + 1;\n        }\n        *puVar4 = 0;\n        *(unaff_EBP + -0x84) = 0x10;\n        (*_sym.imp.KERNEL32.dll_GetComputerNameW)(unaff_EBP + -0x34, unaff_EBP + -0x84);\n        fcn.0040229c(\"[DTAS]\\r\\n\");\n        *(unaff_EBP + -4) = 1;\n        uVar5 = fcn.00453900(\"Host=\");\n        fcn.004096dc(\"Host=\", uVar5);\n        fcn.00426660(0);\n        *(unaff_EBP + -4) = 2;\n        uVar5 = fcn.00453900(\"\\r\\nApiKey=\");\n        uVar5 = fcn.004096dc(\"\\r\\nApiKey=\", uVar5);\n        fcn.0040190f(uVar5, 0, 0xffffffff);\n        *(unaff_EBP + -4) = 1;\n        fcn.0040230f();\n        fcn.00426660(0);\n        *(unaff_EBP + -4) = 3;\n        uVar5 = fcn.00453900(\n                            \"\\r\\n[Header]\\r\\nX-DTAS-ProtocolVersion=1.3\\r\\nX-DTAS-ProductName=DTASSubmissionTool\\r\\nX-DTAS-ClientHostname=\"\n                            );\n        uVar5 = fcn.004096dc(\"\\r\\n[Header]\\r\\nX-DTAS-ProtocolVersion=1.3\\r\\nX-DTAS-ProductName=DTASSubmissionTool\\r\\nX-DTAS-ClientHostname=\"\n                             , uVar5);\n        fcn.0040190f(uVar5, 0, 0xffffffff);\n        *(unaff_EBP + -4) = 1;\n        fcn.0040230f();\n        uVar5 = 0;\n        *(unaff_EBP + -0x38) = 7;\n        *(unaff_EBP + -0x3c) = 0;\n        *(unaff_EBP + -0x4c) = 0;\n        if (*(unaff_EBP + -0x34) != 0) {\n            uVar5 = fcn.00453054(unaff_EBP + -0x34);\n        }\n        fcn.00402667(unaff_EBP + -0x34, uVar5);\n        *(unaff_EBP + -4) = 4;\n        fcn.00426660(0);\n        *(unaff_EBP + -4) = 5;\n        uVar5 = fcn.00453900(\n                            \"\\r\\nX-DTAS-ClientUUID=e8f763c6-8db8-4d08-8bc5-8f41b36be046\\r\\nX-DTAS-Type=\\r\\nX-DTAS-LastQueryID=\\r\\nX-DTAS-SHA1=\\r\\nX-DTAS-SourceID=106\\r\\nX-DTAS-SourceName=SFC_endpoint\\r\\nX-DTAS-Archive-SHA1=\\r\\nX-DTAS-Archive-Filename=\\r\\n\"\n                            );\n        uVar5 = fcn.004096dc(\"\\r\\nX-DTAS-ClientUUID=e8f763c6-8db8-4d08-8bc5-8f41b36be046\\r\\nX-DTAS-Type=\\r\\nX-DTAS-LastQueryID=\\r\\nX-DTAS-SHA1=\\r\\nX-DTAS-SourceID=106\\r\\nX-DTAS-SourceName=SFC_endpoint\\r\\nX-DTAS-Archive-SHA1=\\r\\nX-DTAS-Archive-Filename=\\r\\n\"\n                             , uVar5);\n        fcn.0040190f(uVar5, 0, 0xffffffff);\n        fcn.0040230f();\n        *(unaff_EBP + -4) = 1;\n        fcn.00402754(1, 0);\n        iVar3 = unaff_EBP + -100;\n        if (0xf < *(unaff_EBP + -0x50)) {\n            iVar3 = *(unaff_EBP + -100);\n        }\n        *(unaff_EBP + -0x88) = 0;\n        uVar5 = *(unaff_EBP + -0x80);\n        iVar3 = (*_sym.imp.KERNEL32.dll_WriteFile)(uVar5, iVar3, *(unaff_EBP + -0x54), unaff_EBP + -0x88, 0);\n        if (iVar3 == 0) {\n            (*_sym.imp.KERNEL32.dll_GetLastError)();\n            puVar4 = fcn.00426660(0);\n            *(unaff_EBP + -4) = 6;\n            if (0xf < puVar4[5]) {\n                puVar4 = *puVar4;\n            }\n            pcVar8 = \"DropDDAConfigFile() write \\'%s\\' failed.[error=%d]\";\n            arg_14h = 0x800002;\n            uVar7 = 0x4b8;\n            arg_ch_00 = L\"SupportWrapper.cpp\";\n            uVar6 = fcn.0042c180();\n            fcn.0042c3c0(uVar6, arg_ch_00, uVar7, arg_14h, pcVar8, puVar4);\n            fcn.0040230f();\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar5);\n        fcn.0040230f();\n    }\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 2043
    },
    "00406b55": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00406b55(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_1ch;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint noname_0;\n    uint extraout_ECX_02;\n    int32_t unaff_EBP;\n    uint hObject;\n    uint var_534h;\n    uint var_530h;\n    uint var_52ch;\n    uint var_4a4h;\n    uint var_434h;\n    uint var_424h;\n    uint var_41ch;\n    uint var_40ch;\n    uint var_404h;\n    uint var_3f4h;\n    uint var_3ech;\n    uint var_3dch;\n    uint var_3d4h;\n    uint var_3c4h;\n    uint var_3bch;\n    uint var_3ach;\n    uint var_3a4h;\n    uint var_394h;\n    uint var_38ch;\n    uint var_37ch;\n    uint var_374h;\n    uint var_370h;\n    uint var_360h;\n    uint var_358h;\n    uint var_348h;\n    uint var_340h;\n    uint var_330h;\n    uint var_328h;\n    uint var_324h;\n    uint var_30ch;\n    uint var_2f4h;\n    uint var_2dch;\n    uint var_2c8h;\n    uint var_2c4h;\n    uint var_2b4h;\n    uint var_2b0h;\n    uint var_2ach;\n    uint var_29ch;\n    uint var_298h;\n    uint var_294h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_254h;\n    uint var_250h;\n    uint var_24ch;\n    uint var_23ch;\n    uint var_238h;\n    uint var_234h;\n    uint var_224h;\n    uint var_220h;\n    uint lpBuffer;\n    uint uVar4;\n    char16_t *pcVar5;\n    uint uVar6;\n    uint uVar7;\n    char *pcVar8;\n    uint var_4h;\n    \n    fcn.0045b335(0x52c);\n    fcn.0040102f();\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x21c) = 0;\n    *(unaff_EBP + -0x530) = 0;\n    fcn.00453710(unaff_EBP + -0x21a, 0, 0x206);\n    (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)(0x104, unaff_EBP + -0x21c);\n    *(unaff_EBP + -0x298) = 7;\n    *(unaff_EBP + -0x29c) = 0;\n    *(unaff_EBP + -0x2ac) = 0;\n    *(unaff_EBP + -4) = 1;\n    if (*(unaff_EBP + -0x21c) == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.00453054(unaff_EBP + -0x21c);\n    }\n    fcn.00402667(unaff_EBP + -0x21c, uVar2);\n    *(unaff_EBP + -0x234) = 0;\n    *(unaff_EBP + -0x220) = 7;\n    *(unaff_EBP + -0x224) = 0;\n    fcn.00402450(unaff_EBP + -0x2ac, 0, 0xffffffff);\n    *(unaff_EBP + -4) = 2;\n    uVar2 = fcn.00453054(0x4a078c);\n    fcn.0040186c(0x4a078c, uVar2);\n    uVar2 = fcn.00453054(0x4a0abc);\n    fcn.0040186c(0x4a0abc, uVar2);\n    fcn.00401a5b(0x4a078c);\n    *(unaff_EBP + -4) = 3;\n    fcn.0040c05d(L\"TrendMicro AntiThreat Toolkit\");\n    *(unaff_EBP + -4) = 4;\n    fcn.0040c05d(L\"\\\\submission\");\n    fcn.00402754(1, 0);\n    *(unaff_EBP + -4) = 7;\n    fcn.00402754(1, 0);\n    *(unaff_EBP + -0x2b0) = 7;\n    *(unaff_EBP + -0x2b4) = 0;\n    *(unaff_EBP + -0x2c4) = 0;\n    uVar2 = fcn.00453054(L\"dtascli.exe\");\n    fcn.00402667(L\"dtascli.exe\", uVar2);\n    *(unaff_EBP + -4) = 8;\n    fcn.0040374c();\n    *(unaff_EBP + -0x538) = 0xffffffff;\n    *(unaff_EBP + -0x534) = unaff_EBP + -0x4a4;\n    *(unaff_EBP + -4) = 10;\n    *(unaff_EBP + -0x238) = 7;\n    *(unaff_EBP + -0x23c) = 0;\n    *(unaff_EBP + -0x24c) = 0;\n    uVar2 = fcn.00453054(L\"NONE\");\n    fcn.00402667(L\"NONE\", uVar2);\n    *(unaff_EBP + -4) = 0xb;\n    *(unaff_EBP + -0x268) = 7;\n    *(unaff_EBP + -0x26c) = 0;\n    *(unaff_EBP + -0x27c) = 0;\n    uVar2 = fcn.00453054(L\"NONE\");\n    fcn.00402667(L\"NONE\", uVar2);\n    *(unaff_EBP + -4) = 0xc;\n    *(unaff_EBP + -0x250) = 7;\n    *(unaff_EBP + -0x254) = 0;\n    *(unaff_EBP + -0x264) = 0;\n    uVar2 = fcn.00453054(L\"NONE\");\n    fcn.00402667(L\"NONE\", uVar2);\n    *(unaff_EBP + -4) = 0xd;\n    iVar3 = unaff_EBP + -0x234;\n    if (7 < *(unaff_EBP + -0x220)) {\n        iVar3 = *(unaff_EBP + -0x234);\n    }\n    pcVar8 = \"ValidateActivation() wsIniPath=%S\";\n    uVar7 = 0x800040;\n    uVar6 = 0x4d7;\n    pcVar5 = L\"SupportWrapper.cpp\";\n    uVar2 = fcn.0042c180(extraout_ECX_00);\n    fcn.0042c3c0(uVar2, pcVar5, uVar6, uVar7, pcVar8, iVar3);\n    iVar3 = unaff_EBP + -0x234;\n    if (7 < *(unaff_EBP + -0x220)) {\n        iVar3 = *(unaff_EBP + -0x234);\n    }\n    cVar1 = fcn.0040c013(iVar3);\n    if (cVar1 != '\\0') {\n        if (*(unaff_EBP + -0x424) != 0) {\n            fcn.00402450(unaff_EBP + -0x434, 0, 0xffffffff);\n        }\n        if (*(unaff_EBP + -0x40c) != 0) {\n            fcn.00402450(unaff_EBP + -0x41c, 0, 0xffffffff);\n        }\n        if (*(unaff_EBP + -0x3f4) != 0) {\n            fcn.00402450(unaff_EBP + -0x404, 0, 0xffffffff);\n        }\n        if ((*(unaff_EBP + -0x3dc) != 0) && (extraout_ECX + 0x150 != unaff_EBP + -0x3ec)) {\n            fcn.00402450(unaff_EBP + -0x3ec, 0, 0xffffffff);\n        }\n        if ((*(unaff_EBP + -0x3c4) != 0) && (extraout_ECX + 0x168 != unaff_EBP + -0x3d4)) {\n            fcn.00402450(unaff_EBP + -0x3d4, 0, 0xffffffff);\n        }\n        if ((*(unaff_EBP + -0x3ac) != 0) && (extraout_ECX + 0x180 != unaff_EBP + -0x3bc)) {\n            fcn.00402450(unaff_EBP + -0x3bc, 0, 0xffffffff);\n        }\n        if ((*(unaff_EBP + -0x394) != 0) && (extraout_ECX + 0x198 != unaff_EBP + -0x3a4)) {\n            fcn.00402450(unaff_EBP + -0x3a4, 0, 0xffffffff);\n        }\n        if ((*(unaff_EBP + -0x37c) != 0) && (extraout_ECX + 0x1b0 != unaff_EBP + -0x38c)) {\n            fcn.00402450(unaff_EBP + -0x38c, 0, 0xffffffff);\n        }\n        if (*(unaff_EBP + -0x374) != 0) {\n            *(extraout_ECX + 0x1c8) = *(unaff_EBP + -0x374);\n        }\n        if ((*(unaff_EBP + -0x360) != 0) && (extraout_ECX + 0x1cc != unaff_EBP + -0x370)) {\n            fcn.00402450(unaff_EBP + -0x370, 0, 0xffffffff);\n        }\n        if ((*(unaff_EBP + -0x348) != 0) && (extraout_ECX + 0x1e4 != unaff_EBP + -0x358)) {\n            fcn.00402450(unaff_EBP + -0x358, 0, 0xffffffff);\n        }\n        if ((*(unaff_EBP + -0x330) != 0) && (extraout_ECX + 0x1fc != unaff_EBP + -0x340)) {\n            fcn.00402450(unaff_EBP + -0x340, 0, 0xffffffff);\n        }\n        *(extraout_ECX + 0x214) = *(unaff_EBP + -0x328);\n    }\n    iVar3 = unaff_EBP + -0x27c;\n    if (7 < *(unaff_EBP + -0x268)) {\n        iVar3 = *(unaff_EBP + -0x27c);\n    }\n    arg_1ch = unaff_EBP + -0x24c;\n    if (7 < *(unaff_EBP + -0x238)) {\n        arg_1ch = *(unaff_EBP + -0x24c);\n    }\n    pcVar8 = \"ValidateActivation() ActivationCode=%S, DTAS Host=%S, ApiKey=%S\";\n    uVar7 = 0x800040;\n    uVar6 = 0x4eb;\n    pcVar5 = L\"SupportWrapper.cpp\";\n    uVar2 = fcn.0042c180(iVar3);\n    fcn.0042c3c0(uVar2, pcVar5, uVar6, uVar7, pcVar8, arg_1ch);\n    if (*(extraout_ECX + 0x58) < 8) {\n        iVar3 = extraout_ECX + 0x44;\n    }\n    else {\n        iVar3 = *(extraout_ECX + 0x44);\n    }\n    pcVar8 = \"ValidateActivation() Package Type: %S\";\n    uVar7 = 0x800040;\n    uVar6 = 0x4ee;\n    pcVar5 = L\"SupportWrapper.cpp\";\n    uVar2 = fcn.0042c180(extraout_ECX_01);\n    fcn.0042c3c0(uVar2, pcVar5, uVar6, uVar7, pcVar8, iVar3);\n    uVar2 = fcn.00453054(L\"TMSFC\");\n    iVar3 = fcn.00409963(noname_0, *(extraout_ECX + 0x54), L\"TMSFC\", uVar2);\n    if (iVar3 == 0) {\n        *(unaff_EBP + -0x280) = 7;\n        *(unaff_EBP + -0x284) = 0;\n        *(unaff_EBP + -0x294) = 0;\n        uVar2 = fcn.00453054(L\"%TEMP%\");\n        fcn.00402667(L\"%TEMP%\", uVar2);\n        *(unaff_EBP + -4) = 0xe;\n        fcn.004010bd(unaff_EBP + -0x294, unaff_EBP + -0x530);\n        *(unaff_EBP + -4) = 0xd;\n        fcn.00402754(1, 0);\n        iVar3 = unaff_EBP + -0x24c;\n        if (7 < *(unaff_EBP + -0x238)) {\n            iVar3 = *(unaff_EBP + -0x24c);\n        }\n        fcn.00401398(iVar3, unaff_EBP + -0x530);\n        uVar2 = *(unaff_EBP + -0x530);\n        pcVar8 = \"ValidateActivation() CheckActivationCode: %d\";\n        uVar4 = 0x800040;\n        uVar7 = 0x4f9;\n        pcVar5 = L\"SupportWrapper.cpp\";\n        uVar6 = fcn.0042c180(extraout_ECX_02);\n        fcn.0042c3c0(uVar6, pcVar5, uVar7, uVar4, pcVar8, uVar2);\n    }\n    fcn.00401a5b(0x4a078c);\n    *(unaff_EBP + -4) = 0xf;\n    fcn.0040c07f(unaff_EBP + -0x2c4);\n    uVar2 = 1;\n    *(unaff_EBP + -4) = 0x11;\n    fcn.00402754(1, 0);\n    fcn.00401a5b(L\"\\\\config.ini\");\n    *(unaff_EBP + -4) = 0x12;\n    iVar3 = fcn.004262e0();\n    if (iVar3 == 0) {\n        pcVar8 = \"ValidateActivation() Skip DropDDAConfigFile()\";\n        uVar4 = 0x800040;\n        uVar7 = 0x505;\n        pcVar5 = L\"SupportWrapper.cpp\";\n        uVar6 = fcn.0042c180();\n        fcn.0042c3c0(uVar6, pcVar5, uVar7, uVar4, pcVar8, uVar2);\n    }\n    else {\n        fcn.004068cd(unaff_EBP + -0x324, unaff_EBP + -0x27c, unaff_EBP + -0x264);\n    }\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    if (*(unaff_EBP + -0x538) != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*(unaff_EBP + -0x538));\n    }\n    fcn.0040405a();\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 3803
    },
    "004072da": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004072da(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_260h;\n    uint var_250h;\n    uint var_24ch;\n    uint lpFileName;\n    uint var_238h;\n    uint var_234h;\n    uint var_230h;\n    uint var_220h;\n    uint var_21ch;\n    uint lpBuffer;\n    char16_t *arg_ch_00;\n    uint arg_10h;\n    uint arg_14h;\n    char *arg_18h;\n    uint var_4h;\n    \n    fcn.0045b335(0x274);\n    uVar3 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x234) = 7;\n    *(unaff_EBP + -0x238) = 0;\n    *(unaff_EBP + -0x248) = 0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x24c) = 7;\n    *(unaff_EBP + -0x250) = 0;\n    *(unaff_EBP + -0x260) = 0;\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x218) = 0;\n    fcn.00453710(unaff_EBP + -0x216, 0, 0x206);\n    (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)(0x104, unaff_EBP + -0x218);\n    if (*(unaff_EBP + -0x218) == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.00453054(unaff_EBP + -0x218);\n    }\n    fcn.00402667(unaff_EBP + -0x218, uVar2);\n    uVar2 = fcn.00453054(L\"\\\\Result.txt\");\n    fcn.0040186c(L\"\\\\Result.txt\", uVar2);\n    if (*(unaff_EBP + -0x218) == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.00453054(unaff_EBP + -0x218);\n    }\n    fcn.00402667(unaff_EBP + -0x218, uVar2);\n    uVar2 = fcn.00453054(0x4a078c);\n    fcn.0040186c(0x4a078c, uVar2);\n    fcn.004019b5(uVar3, 0, 0xffffffff);\n    *(unaff_EBP + -0x21c) = 7;\n    *(unaff_EBP + -0x220) = 0;\n    *(unaff_EBP + -0x230) = 0;\n    uVar3 = fcn.00453054(L\"OutputResultPath=\");\n    fcn.00402667(L\"OutputResultPath=\", uVar3);\n    *(unaff_EBP + -4) = 2;\n    fcn.004019b5(unaff_EBP + -0x260, 0, 0xffffffff);\n    uVar3 = fcn.00453054(0x4a1600);\n    fcn.0040186c(0x4a1600, uVar3);\n    uVar3 = fcn.00453054(0x4a1604);\n    fcn.0040186c(0x4a1604, uVar3);\n    uVar3 = fcn.00407267();\n    *(unaff_EBP + -4) = 3;\n    fcn.004019b5(uVar3, 0, 0xffffffff);\n    *(unaff_EBP + -4) = 2;\n    fcn.00402754(1, 0);\n    uVar3 = fcn.00453054(0x4a1600);\n    fcn.0040186c(0x4a1600, uVar3);\n    iVar4 = unaff_EBP + -0x248;\n    if (7 < *(unaff_EBP + -0x234)) {\n        iVar4 = *(unaff_EBP + -0x248);\n    }\n    iVar4 = (*_sym.imp.KERNEL32.dll_CreateFileW)(iVar4, 0x40000000, 0, 0, 2, 0x80, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_WriteFile;\n    if (iVar4 == -1) {\n        iVar4 = unaff_EBP + -0x248;\n        if (7 < *(unaff_EBP + -0x234)) {\n            iVar4 = *(unaff_EBP + -0x248);\n        }\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)(iVar4);\n        arg_18h = \"Failed %lu writing Toolbox result %S\";\n        arg_14h = 0x800002;\n        arg_10h = 0x551;\n        arg_ch_00 = L\"SupportWrapper.cpp\";\n        uVar2 = fcn.0042c180();\n        fcn.0042c3c0(uVar2, arg_ch_00, arg_10h, arg_14h, arg_18h, uVar3);\n    }\n    else {\n        *(unaff_EBP + -0x27c) = 0xfeff;\n        (*pcVar1)(iVar4, unaff_EBP + -0x27c, 2, unaff_EBP + -0x280, 0);\n        iVar5 = unaff_EBP + -0x230;\n        if (7 < *(unaff_EBP + -0x21c)) {\n            iVar5 = *(unaff_EBP + -0x230);\n        }\n        (*pcVar1)(iVar4, iVar5, *(unaff_EBP + -0x220) * 2, unaff_EBP + -0x280, 0);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar4);\n    }\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 1486
    },
    "null": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl main(uint noname_0, uint *envp)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *arg_10h;\n    uint uVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint32_t unaff_EBX;\n    int32_t unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uchar *arg_8h;\n    uchar *puVar6;\n    uint in_stack_fffffb54;\n    uint in_stack_fffffb5c;\n    uint in_stack_fffffb60;\n    uint in_stack_fffffb64;\n    uint in_stack_fffffb68;\n    uint in_stack_fffffb6c;\n    uint uVar7;\n    char16_t *in_stack_fffffb78;\n    uint in_stack_fffffb7c;\n    uchar *in_stack_fffffb80;\n    uint in_stack_fffffb84;\n    char16_t *in_stack_fffffb88;\n    char16_t *pcVar8;\n    uint uVar9;\n    char *pcVar10;\n    uint uVar11;\n    int32_t iStack1092;\n    int32_t iStack1080;\n    code *pcStack1052;\n    ushort uStack1048;\n    uint uStack1032;\n    uint uStack1028;\n    uint uStack1024;\n    uchar *puStack1020;\n    ushort uStack1012;\n    uint uStack1008;\n    uint32_t uStack1004;\n    uint32_t uStack1000;\n    uint uStack996;\n    uint uStack992;\n    uint uStack988;\n    uint uStack984;\n    uchar uStack980;\n    uchar auStack960 [8];\n    uchar auStack952 [12];\n    ushort uStack940;\n    uint uStack924;\n    uint uStack920;\n    ushort uStack908;\n    uint uStack892;\n    uint uStack888;\n    uint uStack848;\n    int32_t iStack156;\n    int32_t iStack148;\n    uchar uStack92;\n    uchar uStack84;\n    uchar uStack56;\n    uchar uStack52;\n    uchar uStack48;\n    uchar uStack44;\n    uchar uStack32;\n    uint32_t uStack28;\n    uchar uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0xffffffff;\n    uStack16 = 0x487ffe;\n    uStack20 = *in_FS_OFFSET;\n    uStack28 = *0x4b4f00 ^ &stack0xfffffbbc;\n    *in_FS_OFFSET = &stack0xffffffec;\n    iStack1092 = 0;\n    fcn.00453710();\n    puVar6 = &stack0xfffffcb0;\n    uStack848 = 0x114;\n    (*_sym.imp.KERNEL32.dll_GetVersionExW)();\n    fcn.0042e600();\n    fcn.0045400a(0x4a0584, puVar6);\n    fcn.0045400a(\"|                                                    |\\n\", puVar6);\n    fcn.0045400a(\"|          Anti-Threat Toolkit 1.2.%d.%d           |\\n\", 0x3e);\n    fcn.0045400a(\"|                                                    |\\n\", puVar6);\n    pcVar10 = \"|        Copyright (c) %d  Trend Micro Inc.        |\\n\";\n    fcn.0045400a(\"|        Copyright (c) %d  Trend Micro Inc.        |\\n\", 0x7e5);\n    fcn.0045400a(0x4a0584, pcVar10);\n    iVar2 = fcn.0045306d(0x108);\n    uStack16 = 0;\n    iStack1092 = iVar2;\n    if (iVar2 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        arg_10h = fcn.00426660(0);\n        uStack16 = CONCAT31(uStack16._1_3_, 1);\n        unaff_EBX = 1;\n        if (0xf < arg_10h[5]) {\n            arg_10h = *arg_10h;\n        }\n        fcn.0042c0d0(0x800000, 0xffffffff, arg_10h);\n    }\n    uStack16 = 4;\n    iStack1080 = iVar2;\n    if ((unaff_EBX & 1) != 0) {\n        fcn.0040230f();\n    }\n    pcVar10 = \"Support tool started...\";\n    uVar11 = 0x800040;\n    uVar9 = 0x649;\n    pcVar8 = L\"SupportWrapper.cpp\";\n    uVar3 = fcn.0042c180();\n    fcn.0042c3c0(uVar3, pcVar8, uVar9, uVar11, pcVar10, puVar6);\n    fcn.0040764d();\n    iVar4 = (*_sym.imp.KERNEL32.dll_GetCommandLineW)();\n    pcStack1052 = vtable.CCmdLineParser.0;\n    uStack1028 = 7;\n    uStack1032 = 0;\n    uStack1048 = 0;\n    uStack1004 = 7;\n    uStack1008 = 0;\n    uStack1024 = uStack1024._2_2_ << 0x10;\n    uStack1000 = 0;\n    uStack996 = 0;\n    uStack992 = 0;\n    uStack16 = uStack16 & 0xffffff00 | 7;\n    uStack988 = 0;\n    uStack984 = 0;\n    uStack988 = fcn.0042aae0();\n    uStack16._0_1_ = 8;\n    uStack980 = 0;\n    if (iVar4 != 0) {\n        fcn.0042c880(iVar4);\n    }\n    uStack16 = CONCAT31(uStack16._1_3_, 9);\n    iStack1092 = 0;\n    fcn.0040229c(\"hcapp_noselfsigchk\");\n    uStack20 = CONCAT31(uStack20._1_3_, 10);\n    fcn.00433ee0(&stack0xfffffc48);\n    fcn.0040230f();\n    uStack892 = 0;\n    uStack888 = 7;\n    uStack908 = 0;\n    uVar3 = 0x4a1ee0;\n    uStack24 = 0xd;\n    cVar1 = fcn.0042d150(0x4a1ee0, &stack0xfffffc74);\n    if (cVar1 == '\\0') {\n        if (unaff_EDI != 0) {\n            (*_sym.imp.KERNEL32.dll_ReleaseMutex)();\n        }\n    }\n    else if ((unaff_EDI == 0) || (iVar4 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(),  iVar4 != 0)) {\n        pcVar10 = \"Failed to disable self sigcheck\";\n        uVar11 = 0x800004;\n        uVar9 = 0x656;\n        in_stack_fffffb88 = L\"SupportWrapper.cpp\";\n        in_stack_fffffb84 = fcn.0042c180();\n        in_stack_fffffb80 = 0x407ea2;\n        fcn.0042c3c0(in_stack_fffffb84, in_stack_fffffb88, uVar9, uVar11, pcVar10, uVar3);\n    }\n    else {\n        pcVar10 = \"Self sigcheck disabled.\";\n        uVar11 = 0x800040;\n        uVar9 = 0x65a;\n        in_stack_fffffb88 = L\"SupportWrapper.cpp\";\n        in_stack_fffffb84 = fcn.0042c180();\n        in_stack_fffffb80 = 0x407e76;\n        fcn.0042c3c0(in_stack_fffffb84, in_stack_fffffb88, uVar9, uVar11, pcVar10, uVar3);\n    }\n    uStack924 = 0;\n    uStack920 = 7;\n    uStack940 = 0;\n    puVar6 = &stack0xfffffc54;\n    uStack32 = 0xe;\n    cVar1 = fcn.0042d150(L\"CFGIP\", puVar6);\n    if (cVar1 != '\\0') {\n        uVar3 = 0x4a0abc;\n        uVar9 = 0x407f08;\n        fcn.00402707(0x4a0abc);\n        puVar5 = &stack0xfffffc48;\n        uStack44 = 0xf;\n        fcn.004084c5(puVar5);\n        uStack48 = 0xe;\n        in_stack_fffffb54 = 0x407f2f;\n        iVar4 = fcn.00407744(puVar5, in_stack_fffffb5c, in_stack_fffffb60, in_stack_fffffb64, in_stack_fffffb68, \n                             in_stack_fffffb6c, uVar9, uVar3, in_stack_fffffb78, in_stack_fffffb7c, in_stack_fffffb80, \n                             in_stack_fffffb84);\n        if (iVar4 == 0) {\n            pcVar10 = \"Config.ini download failed\";\n            in_stack_fffffb80 = 0x800040;\n            in_stack_fffffb7c = 0x668;\n            in_stack_fffffb78 = L\"SupportWrapper.cpp\";\n            uVar3 = fcn.0042c180();\n            uVar9 = 0x407f55;\n            fcn.0042c3c0(uVar3, in_stack_fffffb78, in_stack_fffffb7c, in_stack_fffffb80, pcVar10, in_stack_fffffb88);\n        }\n        uVar7 = 0x4a0790;\n        uVar11 = 0x407f6b;\n        fcn.00402707(0x4a0790);\n        arg_8h = &stack0xfffffc40;\n        uStack52 = 0x10;\n        fcn.004084c5(arg_8h);\n        uStack56 = 0xe;\n        iVar4 = fcn.00407744(arg_8h, in_stack_fffffb54, puVar5, in_stack_fffffb5c, in_stack_fffffb60, in_stack_fffffb64\n                             , uVar11, uVar7, uVar9, uVar3, in_stack_fffffb78, in_stack_fffffb7c);\n        if (iVar4 == 0) {\n            pcVar10 = \"pattern.zip download failed\";\n            uVar11 = 0x800040;\n            uVar9 = 0x66c;\n            pcVar8 = L\"SupportWrapper.cpp\";\n            uVar3 = fcn.0042c180();\n            fcn.0042c3c0(uVar3, pcVar8, uVar9, uVar11, pcVar10, in_stack_fffffb80);\n        }\n    }\n    fcn.004031d6();\n    uStack996 = 0;\n    uStack992 = 7;\n    uStack1012 = 0;\n    uStack56 = 0x12;\n    cVar1 = fcn.0042d150(L\"FINGERPRINT\", &stack0xfffffc0c);\n    if (cVar1 != '\\0') {\n        puVar5 = &stack0xfffffc04;\n        if (7 < uStack1000) {\n            puVar5 = puStack1020;\n        }\n        iVar4 = fcn.004558b6(puVar5, 0x4a1f64);\n        if (iVar4 == 0) {\n            fcn.00406321(0x4b7afc);\n            goto code_r0x00408319;\n        }\n    }\n    cVar1 = fcn.0042d0c0(0x4a1f68);\n    if (((cVar1 == '\\0') && (cVar1 = fcn.0042d0c0(0x4a1f6c),  cVar1 == '\\0')) &&\n       (cVar1 = fcn.0042d0c0(0x4a1f78),  cVar1 == '\\0')) {\n        cVar1 = fcn.0042d0c0(0x4a07bc);\n        if (cVar1 != '\\0') {\n            fcn.00402707(*envp);\n            uStack84 = 0x13;\n            iVar4 = fcn.0040853f(0x4a078c, 0xffffffff);\n            if (iVar4 != -1) {\n                uVar3 = 0;\n                fcn.00426660(0);\n                uStack92 = 0x14;\n                puVar5 = &stack0xfffffc00;\n                if (0xf < uStack1004) {\n                    puVar5 = uStack1024;\n                }\n                pcVar10 = \"SetCurrentDirectory to %s\";\n                uVar11 = 0x800040;\n                uVar9 = 0x68d;\n                pcVar8 = L\"SupportWrapper.cpp\";\n                uVar3 = fcn.0042c180(uVar3);\n                fcn.0042c3c0(uVar3, pcVar8, uVar9, uVar11, pcVar10, puVar5);\n                puVar5 = &stack0xfffffb80;\n                if (0x7 < puVar6) {\n                    puVar5 = in_stack_fffffb80;\n                }\n                *(puVar5 + iVar4 * 2 + 2) = 0;\n                puVar5 = &stack0xfffffb80;\n                if (0x7 < puVar6) {\n                    puVar5 = in_stack_fffffb80;\n                }\n                (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(puVar5);\n                fcn.0040230f();\n            }\n            in_stack_fffffb54 = 1;\n            uStack92 = 0x12;\n            fcn.00402754(1, 0);\n        }\n        uVar3 = fcn.0040c1d5();\n        uVar3 = fcn.0040ea04(uVar3);\n        fcn.0040ea04(uVar3);\n        puVar6 = &stack0xfffffb90;\n        iVar4 = fcn.004033a8(puVar6);\n        if (iVar4 == 0) {\n            uVar3 = fcn.0040c1d5();\n            uVar3 = fcn.0040ea04(uVar3);\n            fcn.0040ea04(uVar3);\n            pcVar10 = \"Wrapper initialize failed\";\n            uVar11 = 0x800040;\n            uVar9 = 0x699;\n            pcVar8 = L\"SupportWrapper.cpp\";\n            uVar3 = fcn.0042c180();\n            fcn.0042c3c0(uVar3, pcVar8, uVar9, uVar11, pcVar10, puVar6);\n        }\n        else {\n            iVar4 = fcn.00406b55();\n            if (iVar4 == 0) {\n                uVar7 = 0x40820d;\n                (*_sym.imp.USER32.dll_MessageBoxW)\n                          (0, L\"Your program has no proper **Activation Code** specified. Please check your CONFIG.INI.\"\n                           , L\"Trend Micro\", 0x40);\n                pcVar10 = \"No proper Activation Code specified: program stopped\";\n                uVar11 = 0x800040;\n                uVar9 = 0x6a4;\n                pcVar8 = L\"SupportWrapper.cpp\";\n                uVar3 = fcn.0042c180();\n                fcn.0042c3c0(uVar3, pcVar8, uVar9, uVar11, pcVar10, uVar7);\n            }\n            else {\n                uVar3 = fcn.0040517e(&stack0xfffffb8c);\n                fcn.00402aa7(uVar3);\n                uVar3 = fcn.004045e1();\n                fcn.00402aa7(uVar3);\n                fcn.004067fe();\n                fcn.004055e4(in_stack_fffffb54);\n                cVar1 = fcn.0042d0c0(L\"DIRECTCLOSE\");\n                uVar3 = extraout_ECX;\n                if (cVar1 == '\\0') {\n                    uVar3 = fcn.0040c1d5();\n                    uVar3 = fcn.0040ea04(uVar3);\n                    fcn.0040ea04(uVar3);\n                    (*_sym.imp.KERNEL32.dll_Sleep)(15000);\n                    uVar3 = extraout_ECX_00;\n                }\n                if ((puVar6 != NULL) && (unaff_EDI != 0)) {\n                    (*_sym.imp.KERNEL32.dll_ReleaseMutex)(unaff_EDI);\n                    uVar3 = extraout_ECX_01;\n                }\n                pcVar10 = \"Finished with exit code = %d\";\n                uVar11 = 0x800040;\n                uVar9 = 0x6bd;\n                pcVar8 = L\"SupportWrapper.cpp\";\n                uVar3 = fcn.0042c180(uVar3);\n                fcn.0042c3c0(uVar3, pcVar8, uVar9, uVar11, pcVar10, in_stack_fffffb54);\n                if (iStack148 != 0) {\n                    fcn.00407a5b();\n                }\n            }\n        }\n    }\n    else {\n        fcn.004075ad();\n    }\ncode_r0x00408319:\n    uVar3 = 1;\n    fcn.00402754(1, 0);\n    fcn.0040332c();\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    if (unaff_EDI != 0) {\n        (*_sym.imp.KERNEL32.dll_ReleaseMutex)(unaff_EDI);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(unaff_EDI);\n    }\n    fcn.0042c780();\n    if (iVar2 != 0) {\n        *0x4b9658 = 0;\n        if ((*0x4b9668 | *0x4b966c) != 0) {\n            (*_sym.imp.ADVAPI32.dll_UnregisterTraceGuids)(*0x4b9668, *0x4b966c);\n        }\n        fcn.00452a07(iVar2);\n    }\n    *in_FS_OFFSET = iStack156;\n    fcn.004529f8(uVar3);\n    return;\n}\n",
        "token_count": 4221
    },
    "00409bd6": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409bd6(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint ******ppppppuVar3;\n    int32_t iVar4;\n    uint ******ppppppuVar5;\n    uint ******ppppppuVar6;\n    int32_t **in_FS_OFFSET;\n    int32_t *in_stack_ffffffbc;\n    uint ******ppppppuStack60;\n    int32_t iStack56;\n    uint ******appppppuStack52 [3];\n    uint32_t uStack40;\n    int32_t iStack36;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    int32_t *piStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0xffffffff;\n    uStack16 = 0x487b86;\n    piStack20 = *in_FS_OFFSET;\n    uStack28 = *0x4b4f00 ^ &stack0xffffffbc;\n    uVar1 = *0x4b4f00 ^ &stack0xffffffb0;\n    *in_FS_OFFSET = &piStack20;\n    if (((param_1[0x10] != 0) && (*(param_1 + 0x45) != '\\0')) &&\n       (iVar2 = (**(*param_1 + 0xc))(0xffffffff, uVar1),  iVar2 != -1)) {\n        uStack32 = 0xf;\n        iStack36 = 0;\n        appppppuStack52[0] = appppppuStack52[0] & 0xffffff00;\n        fcn.0040d587(8, 0);\n        in_stack_ffffffbc = param_1 + 0x12;\n        piStack20 = NULL;\n        uVar1 = uStack40;\n        ppppppuVar3 = ppppppuStack60;\ncode_r0x00409c69:\n        ppppppuVar6 = appppppuStack52;\n        if (0xf < uVar1) {\n            ppppppuVar6 = ppppppuVar3;\n        }\n        ppppppuVar5 = appppppuStack52;\n        if (0xf < uVar1) {\n            ppppppuVar5 = ppppppuVar3;\n        }\n        iVar2 = (**(*param_1[0x10] + 0x20))(ppppppuStack60, ppppppuVar5, iStack36 + ppppppuVar6, &iStack56);\n        if (iVar2 == 0) {\n            *(param_1 + 0x45) = 0;\n        }\n        else if (iVar2 != 1) goto code_r0x00409d16;\n        ppppppuVar3 = appppppuStack52;\n        if (0xf < uStack32) {\n            ppppppuVar3 = appppppuStack52[0];\n        }\n        iVar2 = iStack56 - ppppppuVar3;\n        if (iVar2 != 0) {\n            ppppppuVar3 = appppppuStack52;\n            if (0xf < uStack32) {\n                ppppppuVar3 = appppppuStack52[0];\n            }\n            iVar4 = fcn.00456245(ppppppuVar3, 1, iVar2, param_1[0x14]);\n            if (iVar2 != iVar4) goto code_r0x00409d16;\n        }\n        if (*(param_1 + 0x45) == '\\0') goto code_r0x00409d16;\n        uVar1 = uStack32;\n        ppppppuVar3 = appppppuStack52[0];\n        if (iVar2 == 0) {\n            fcn.0040180b(8, 0);\n            uVar1 = uStack40;\n            ppppppuVar3 = ppppppuStack60;\n        }\n        goto code_r0x00409c69;\n    }\ncode_r0x00409d25:\n    *in_FS_OFFSET = piStack20;\n    fcn.004529f8(in_stack_ffffffbc);\n    return;\ncode_r0x00409d16:\n    fcn.0040230f();\n    goto code_r0x00409d25;\n}\n",
        "token_count": 969
    },
    "0040c013": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040c013(int32_t arg_8h)\n\n{\n    uint32_t in_EAX;\n    uint32_t arg_8h_00;\n    uint32_t *in_ECX;\n    uint32_t uVar1;\n    \n    if ((arg_8h == 0) || (uVar1 = 0,  in_ECX[1] == 0)) {\n        uVar1 = in_EAX & 0xffffff00;\n    }\n    else {\n        arg_8h_00 = fcn.00425c70(1, 0, 3, 0x80);\n        *in_ECX = arg_8h_00;\n        if (arg_8h_00 != 0xffffffff) {\n            arg_8h_00 = fcn.0040cb9c(arg_8h_00);\n            uVar1 = arg_8h_00 & 0xff;\n        }\n        uVar1 = arg_8h_00 & 0xffffff00 | uVar1;\n    }\n    return uVar1;\n}\n",
        "token_count": 238
    },
    "0040c1d5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0040c1d5(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *arg_8h;\n    uint arg_8h_00;\n    uint32_t uVar5;\n    int32_t unaff_EBP;\n    ulong uVar6;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_4h;\n    \n    fcn.0045b36b(0x34);\n    *(unaff_EBP + -0x38) = arg_8h_00;\n    *(unaff_EBP + -0x24) = arg_8h;\n    uVar5 = 0;\n    *(unaff_EBP + -0x28) = 0;\n    uVar2 = fcn.00402284(arg_8h_00);\n    iVar4 = *(*arg_8h + 4);\n    *(unaff_EBP + -0x20) = uVar2;\n    uVar1 = *(iVar4 + 0x20 + arg_8h);\n    iVar4 = *(iVar4 + 0x24 + arg_8h);\n    if ((iVar4 < 0) || ((iVar4 < 1 && (((uVar1 == 0 || (iVar4 < 0)) || ((iVar4 < 1 && (uVar1 <= uVar2)))))))) {\n        *(unaff_EBP + -0x34) = 0;\n        *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x30);\n        iVar3 = *(unaff_EBP + -0x34);\n    }\n    else {\n        iVar3 = uVar1 - uVar2;\n        *(unaff_EBP + -0x1c) = iVar4 - (uVar1 < uVar2);\n    }\n    *(unaff_EBP + -0x18) = iVar3;\n    fcn.0040e5a1(arg_8h);\n    *(unaff_EBP + -4) = 0;\n    if (*(unaff_EBP + -0x3c) == '\\0') {\n        uVar5 = 4;\n        goto code_r0x0040c368;\n    }\n    *(unaff_EBP + -4) = 1;\n    if ((*(*(*arg_8h + 4) + 0x14 + arg_8h) & 0x1c0) == 0x40) {\ncode_r0x0040c2a4:\n        uVar6 = (**(**(*(*arg_8h + 4) + 0x38 + arg_8h) + 0x24))(*(unaff_EBP + -0x38), *(unaff_EBP + -0x20), 0);\n        if ((uVar6 == *(unaff_EBP + -0x20)) && (uVar6 >> 0x20 == 0)) {\n            iVar4 = *(unaff_EBP + -0x18);\n            iVar3 = *(unaff_EBP + -0x1c);\n            while( true ) {\n                if ((iVar3 < 0) || ((iVar3 < 1 && (iVar4 == 0)))) goto code_r0x0040c322;\n                *(unaff_EBP + -0x38) = *(*(*arg_8h + 4) + 0x40 + arg_8h);\n                iVar4 = fcn.0040e77e(*(unaff_EBP + -0x38));\n                if (iVar4 == -1) break;\n                iVar4 = *(unaff_EBP + -0x18) + -1;\n                iVar3 = *(unaff_EBP + -0x1c) + -1 + (*(unaff_EBP + -0x18) != 0);\n                *(unaff_EBP + -0x18) = iVar4;\n                *(unaff_EBP + -0x1c) = iVar3;\n            }\n            uVar5 = 4;\n        }\n        else {\n            uVar5 = 4;\n        }\n    }\n    else {\n        iVar4 = *(unaff_EBP + -0x18);\n        iVar3 = *(unaff_EBP + -0x1c);\n        while( true ) {\n            if ((iVar3 < 0) || ((iVar3 < 1 && (iVar4 == 0)))) goto code_r0x0040c2a0;\n            *(unaff_EBP + -0x30) = *(*(*arg_8h + 4) + 0x40 + arg_8h);\n            iVar4 = fcn.0040e77e(*(unaff_EBP + -0x30));\n            if (iVar4 == -1) break;\n            iVar4 = *(unaff_EBP + -0x18) + -1;\n            iVar3 = *(unaff_EBP + -0x1c) + -1 + (*(unaff_EBP + -0x18) != 0);\n            *(unaff_EBP + -0x18) = iVar4;\n            *(unaff_EBP + -0x1c) = iVar3;\n        }\n        uVar5 = 4;\n        *(unaff_EBP + -0x28) = 4;\ncode_r0x0040c2a0:\n        if (uVar5 == 0) goto code_r0x0040c2a4;\n    }\ncode_r0x0040c322:\n    iVar4 = *(*arg_8h + 4);\n    *(iVar4 + 0x20 + arg_8h) = 0;\n    *(iVar4 + 0x24 + arg_8h) = 0;\n    *(unaff_EBP + -4) = 0;\ncode_r0x0040c368:\n    if (uVar5 != 0) {\n        uVar5 = *(arg_8h + *(*arg_8h + 4) + 0xc) | uVar5;\n        if (*(arg_8h + *(*arg_8h + 4) + 0x38) == 0) {\n            uVar5 = uVar5 | 4;\n        }\n        fcn.0040e96e(uVar5, 0);\n    }\n    fcn.0040e660();\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 1487
    },
    "0040c39a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0040c39a(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *arg_8h;\n    int32_t extraout_EDX;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    int32_t unaff_EBP;\n    ulong uVar6;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0045b36b(0x24);\n    *(unaff_EBP + -0x28) = extraout_EDX;\n    *(unaff_EBP + -0x1c) = arg_8h;\n    uVar1 = *(extraout_EDX + 0x10);\n    uVar2 = *(*(*arg_8h + 4) + 0x20 + arg_8h);\n    iVar3 = *(*(*arg_8h + 4) + 0x24 + arg_8h);\n    uVar5 = 0;\n    *(unaff_EBP + -0x20) = 0;\n    *(unaff_EBP + -0x18) = uVar1;\n    if ((iVar3 < 0) || (((iVar3 < 1 && (uVar2 == 0)) || (*(unaff_EBP + -0x2c) = iVar3,  uVar2 <= uVar1)))) {\n        *(unaff_EBP + -0x14) = 0;\n    }\n    else {\n        *(unaff_EBP + -0x2c) = iVar3;\n        *(unaff_EBP + -0x14) = uVar2 - uVar1;\n    }\n    fcn.0040e5a1(arg_8h);\n    *(unaff_EBP + -4) = 0;\n    if (*(unaff_EBP + -0x2c) == '\\0') {\n        uVar5 = 4;\n        goto code_r0x0040c4f3;\n    }\n    *(unaff_EBP + -4) = 1;\n    if ((*(*(*arg_8h + 4) + 0x14 + arg_8h) & 0x1c0) == 0x40) {\ncode_r0x0040c445:\n        piVar4 = *(unaff_EBP + -0x28);\n        if (0xf < piVar4[5]) {\n            piVar4 = *piVar4;\n        }\n        uVar6 = (**(**(*(*arg_8h + 4) + 0x38 + arg_8h) + 0x24))(piVar4, *(unaff_EBP + -0x18), 0);\n        if ((uVar6 == *(unaff_EBP + -0x18)) && (uVar6 >> 0x20 == 0)) goto code_r0x0040c46c;\n        uVar5 = 4;\n    }\n    else {\n        iVar3 = *(unaff_EBP + -0x14);\n        while (iVar3 != 0) {\n            *(unaff_EBP + -0x24) = *(*(*arg_8h + 4) + 0x40 + arg_8h);\n            iVar3 = fcn.0040e77e(*(unaff_EBP + -0x24));\n            if (iVar3 == -1) {\n                uVar5 = 4;\n                *(unaff_EBP + -0x20) = 4;\n                break;\n            }\n            iVar3 = *(unaff_EBP + -0x14) + -1;\n            *(unaff_EBP + -0x14) = iVar3;\n        }\n        if (uVar5 == 0) goto code_r0x0040c445;\ncode_r0x0040c46c:\n        iVar3 = *(unaff_EBP + -0x14);\n        while (iVar3 != 0) {\n            *(unaff_EBP + -0x28) = *(*(*arg_8h + 4) + 0x40 + arg_8h);\n            iVar3 = fcn.0040e77e(*(unaff_EBP + -0x28));\n            if (iVar3 == -1) {\n                uVar5 = 4;\n                break;\n            }\n            iVar3 = *(unaff_EBP + -0x14) + -1;\n            *(unaff_EBP + -0x14) = iVar3;\n        }\n    }\n    iVar3 = *(*arg_8h + 4);\n    *(iVar3 + 0x20 + arg_8h) = 0;\n    *(iVar3 + 0x24 + arg_8h) = 0;\n    *(unaff_EBP + -4) = 0;\ncode_r0x0040c4f3:\n    if (uVar5 != 0) {\n        uVar5 = *(arg_8h + *(*arg_8h + 4) + 0xc) | uVar5;\n        if (*(arg_8h + *(*arg_8h + 4) + 0x38) == 0) {\n            uVar5 = uVar5 | 4;\n        }\n        fcn.0040e96e(uVar5, 0);\n    }\n    fcn.0040e660();\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 1254
    },
    "0040c724": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.0040c724(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0045b302(0x14);\n    fcn.0044ee06(0);\n    *(unaff_EBP + -4) = 0;\n    piVar1 = *0x4b95f8;\n    *(unaff_EBP + -0x10) = *0x4b95f8;\n    arg_8h_00 = fcn.0040dcc0();\n    iVar2 = fcn.0040dcf5(arg_8h_00);\n    if ((iVar2 == 0) && (piVar1 == NULL)) {\n        iVar2 = fcn.0040ca91(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar2 == -1) {\n            fcn.00453b55(\"bad cast\");\n            fcn.0045b275(unaff_EBP + -0x20, 0x4ac8a8);\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *0x4b95f8 = piVar1;\n        (**(*piVar1 + 4))();\n        fcn.0044ebdf(piVar1);\n    }\n    fcn.0044ee62();\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 416
    },
    "0040c7bd": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.0040c7bd(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0045b302(0x14);\n    fcn.0044ee06(0);\n    *(unaff_EBP + -4) = 0;\n    piVar1 = *0x4b95f4;\n    *(unaff_EBP + -0x10) = *0x4b95f4;\n    arg_8h_00 = fcn.0040dcc0();\n    iVar2 = fcn.0040dcf5(arg_8h_00);\n    if ((iVar2 == 0) && (piVar1 == NULL)) {\n        iVar2 = fcn.0040cb34(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar2 == -1) {\n            fcn.00453b55(\"bad cast\");\n            fcn.0045b275(unaff_EBP + -0x20, 0x4ac8a8);\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *0x4b95f4 = piVar1;\n        (**(*piVar1 + 4))();\n        fcn.0044ebdf(piVar1);\n    }\n    fcn.0044ee62();\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 417
    },
    "0040cb9c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040cb9c(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t arg_ch;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t in_ECX;\n    uint32_t uVar4;\n    uint var_8h;\n    int32_t lpNumberOfBytesRead;\n    \n    if (((arg_8h == 0) || (arg_8h == -1)) || (uVar4 = 0,  *(in_ECX + 4) == 0)) {\n        uVar4 = in_ECX & 0xffffff00;\n    }\n    else {\n        arg_ch = (*_sym.imp.KERNEL32.dll_GetFileSize)(arg_8h, 0);\n        arg_8h_00 = fcn.0044f469(arg_ch);\n        lpNumberOfBytesRead = 0;\n        iVar2 = (*_sym.imp.KERNEL32.dll_ReadFile)(arg_8h, arg_8h_00, arg_ch, &lpNumberOfBytesRead, 0);\n        if ((iVar2 != 0) && (lpNumberOfBytesRead == arg_ch)) {\n            uVar1 = fcn.0040cc0d(arg_8h_00, arg_ch);\n            uVar4 = uVar1;\n        }\n        uVar3 = fcn.00456859(arg_8h_00);\n        uVar4 = uVar3 & 0xffffff00 | uVar4;\n    }\n    return uVar4;\n}\n",
        "token_count": 346
    },
    "0040cf69": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.0040cf69(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0045b302(0x14);\n    fcn.0044ee06(0);\n    *(unaff_EBP + -4) = 0;\n    piVar1 = *0x4b95fc;\n    *(unaff_EBP + -0x10) = *0x4b95fc;\n    arg_8h_00 = fcn.0040dcc0();\n    iVar2 = fcn.0040dcf5(arg_8h_00);\n    if ((iVar2 == 0) && (piVar1 == NULL)) {\n        iVar2 = fcn.0040cf03(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar2 == -1) {\n            fcn.00453b55(\"bad cast\");\n            fcn.0045b275(unaff_EBP + -0x20, 0x4ac8a8);\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *0x4b95fc = piVar1;\n        (**(*piVar1 + 4))();\n        fcn.0044ebdf(piVar1);\n    }\n    fcn.0044ee62();\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 413
    },
    "0040d16c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d16c(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint *in_ECX;\n    \n    if (arg_8h == -1) {\n        fcn.0044e7eb(\"string too long\");\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    cVar2 = fcn.004025ff(arg_8h, 0);\n    if (cVar2 != '\\0') {\n        fcn.0040d12b(0, arg_8h, arg_ch);\n        in_ECX[4] = arg_8h;\n        if (7 < in_ECX[5]) {\n            in_ECX = *in_ECX;\n        }\n        *(in_ECX + arg_8h * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 204
    },
    "0040d4bf": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.0040d4bf(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0045b302(0x14);\n    fcn.0044ee06(0);\n    *(unaff_EBP + -4) = 0;\n    piVar1 = *0x4b9600;\n    *(unaff_EBP + -0x10) = *0x4b9600;\n    arg_8h_00 = fcn.0040dcc0();\n    iVar2 = fcn.0040dcf5(arg_8h_00);\n    if ((iVar2 == 0) && (piVar1 == NULL)) {\n        iVar2 = fcn.0040d444(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar2 == -1) {\n            fcn.00453b55(\"bad cast\");\n            fcn.0045b275(unaff_EBP + -0x20, 0x4ac8a8);\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *0x4b9600 = piVar1;\n        (**(*piVar1 + 4))();\n        fcn.0044ebdf(piVar1);\n    }\n    fcn.0044ee62();\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 414
    },
    "0040e157": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.0040e157(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0045b302(0x14);\n    fcn.0044ee06(0);\n    *(unaff_EBP + -4) = 0;\n    piVar1 = *0x4b9604;\n    *(unaff_EBP + -0x10) = *0x4b9604;\n    arg_8h_00 = fcn.0040dcc0();\n    iVar2 = fcn.0040dcf5(arg_8h_00);\n    if ((iVar2 == 0) && (piVar1 == NULL)) {\n        iVar2 = fcn.0040e0e7(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar2 == -1) {\n            fcn.00453b55(\"bad cast\");\n            fcn.0045b275(unaff_EBP + -0x20, 0x4ac8a8);\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *0x4b9604 = piVar1;\n        (**(*piVar1 + 4))();\n        fcn.0044ebdf(piVar1);\n    }\n    fcn.0044ee62();\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 415
    },
    "0040e600": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0040e600(void)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.0045b36b(4);\n    *(unaff_EBP + -4) = 0;\n    iVar1 = *(*extraout_ECX + 4);\n    if (((*(iVar1 + 0xc + extraout_ECX) == 0) && ((*(iVar1 + 0x14 + extraout_ECX) & 2) != 0)) &&\n       (iVar1 = (**(**(iVar1 + 0x38 + extraout_ECX) + 0x34))(),  iVar1 == -1)) {\n        fcn.0040e96e(*(extraout_ECX + *(*extraout_ECX + 4) + 0xc) | 4, 0);\n    }\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 219
    },
    "0040e68d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0040e68d(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar3;\n    char cStack32;\n    int32_t *piStack24;\n    int32_t *piStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0xffffffff;\n    uStack16 = 0x487e66;\n    piStack20 = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &stack0xffffffd8;\n    *in_FS_OFFSET = &piStack20;\n    if (*(*(*param_1 + 4) + 0x38 + param_1) != 0) {\n        piVar3 = param_1;\n        fcn.0040e5a1(param_1);\n        uStack16 = 0;\n        if ((cStack32 != '\\0') &&\n           (iVar2 = (**(**(*(*param_1 + 4) + 0x38 + param_1) + 0x34))(piVar3, uVar1),  iVar2 == -1)) {\n            fcn.0040e96e(*(param_1 + *(*param_1 + 4) + 0xc) | 4, 0);\n        }\n        fcn.0040e660();\n    }\n    *in_FS_OFFSET = piStack24;\n    return param_1;\n}\n",
        "token_count": 338
    },
    "0040e7ba": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0040e7ba(void)\n\n{\n    int32_t iVar1;\n    int32_t *arg_8h;\n    uint32_t uVar2;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_4h;\n    \n    fcn.0045b36b(0x18);\n    *(unaff_EBP + -0x18) = arg_8h;\n    fcn.0040e5a1(arg_8h);\n    *(unaff_EBP + -4) = 0;\n    if (*(unaff_EBP + -0x20) == '\\0') {\n        uVar2 = 4;\n    }\n    else {\n        *(unaff_EBP + -4) = 1;\n        iVar1 = fcn.0040e77e(10);\n        uVar2 = 0;\n        if (iVar1 == -1) {\n            uVar2 = 4;\n        }\n        *(unaff_EBP + -4) = 0;\n    }\n    iVar1 = *(*arg_8h + 4) + arg_8h;\n    *(unaff_EBP + -0x1c) = iVar1;\n    if (uVar2 != 0) {\n        uVar2 = *(iVar1 + 0xc) | uVar2;\n        if (*(*(unaff_EBP + -0x1c) + 0x38) == 0) {\n            uVar2 = uVar2 | 4;\n        }\n        fcn.0040e96e(uVar2, 0);\n    }\n    fcn.0040e660();\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 411
    },
    "0040eaf1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040eaf1(void)\n\n{\n    bool bVar1;\n    bool bVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint arg_8h;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint lpNumberOfBytesWritten;\n    uint var_117ch;\n    uint var_1178h;\n    uint var_1160h;\n    uint var_1148h;\n    uint lpPathName;\n    int32_t var_1120h;\n    uint var_111ch;\n    uchar lpBuffer;\n    uint var_1117h;\n    char var_118h;\n    uint var_117h;\n    uint uStackY100;\n    char16_t *pcVar5;\n    uint uVar6;\n    uint uVar7;\n    char *pcVar8;\n    char *pcVar9;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4881ff;\n    var_ch = *in_FS_OFFSET;\n    fcn.00459c50();\n    *in_FS_OFFSET = &fcn.0040eaf1::var_ch;\n    iVar3 = fcn.00436363();\n    if (iVar3 == 0) {\n        uVar4 = 0x4b7ab4;\n        if (7 < *0x4b7ac8) {\n            uVar4 = *0x4b7ab4;\n        }\n        fcn.00402707(uVar4);\n        var_4h = 0;\n        iVar3 = fcn.00425da0(0);\n        var_4h = 0xffffffff;\n        fcn.00402754(1, 0);\n        if (iVar3 == 0) {\n            pcVar9 = \"UnzipAllFile:\";\n            pcVar8 = \"%s CreateDirectory(%S) failed\";\n            uVar7 = 0x800002;\n            uVar6 = 0x6d;\n            pcVar5 = L\"WrapperArchive.cpp\";\n            uVar4 = fcn.0042c180();\n            fcn.0042c3c0(uVar4, pcVar5, uVar6, uVar7, pcVar8, pcVar9);\n        }\n        else {\n            bVar1 = true;\n            bVar2 = true;\n            do {\n                var_118h = '\\0';\n                fcn.00453710();\n                fcn.0043633c(arg_8h, 0, &stack0xfffffee4, 0x104, 0, 0, 0, 0);\n                if (var_118h != '\\0') {\n                    iVar3 = fcn.00436c9f();\n                    if (iVar3 != 0) {\n                        pcVar9 = \"UnzipAllFile:\";\n                        pcVar8 = \"%s unzOpenCurrentFile %s failed\";\n                        uVar7 = 0x800002;\n                        uVar6 = 0x7c;\n                        pcVar5 = L\"WrapperArchive.cpp\";\n                        uVar4 = fcn.0042c180();\n                        fcn.0042c3c0(uVar4, pcVar5, uVar6, uVar7, pcVar8, pcVar9);\n                        break;\n                    }\n                    fcn.0040229c(&stack0xfffffee4);\n                    var_4h = 1;\n                    uVar4 = fcn.00426570(0);\n                    var_4h._0_1_ = 2;\n                    fcn.00401a5b(0x4a078c);\n                    var_4h._0_1_ = 3;\n                    fcn.0040c12e(uVar4);\n                    fcn.00402754(1, 0);\n                    fcn.00402754(1, 0);\n                    var_4h = CONCAT31(var_4h._1_3_, 7);\n                    fcn.0040230f();\n                    iVar3 = fcn.00456c10(&stack0xfffffee4, 0x2f);\n                    if ((iVar3 == 0) || (*(iVar3 + 1) != '\\0')) {\n                        iVar3 = fcn.00425c70(0, 0, 2, 0x80);\n                        if (iVar3 == -1) {\n                            (*_sym.imp.KERNEL32.dll_GetLastError)();\n                            pcVar9 = \"UnzipAllFile:\";\n                            pcVar8 = \"%s can\\'t drop file %S (%d)\";\n                            uVar7 = 0x800002;\n                            uVar6 = 0x97;\n                            pcVar5 = L\"WrapperArchive.cpp\";\n                            uVar4 = fcn.0042c180();\n                            fcn.0042c3c0(uVar4, pcVar5, uVar6, uVar7, pcVar8, pcVar9);\n                            bVar1 = false;\n                            bVar2 = false;\n                        }\n                        else {\n                            lpBuffer = 0;\n                            fcn.00453710();\n                            iVar3 = fcn.004365f3(arg_8h, &stack0xffffeee4, 0x1000);\n                            while (0 < iVar3) {\n                                (*_sym.imp.KERNEL32.dll_WriteFile)();\n                                fcn.00453710();\n                                iVar3 = fcn.004365f3(arg_8h, &stack0xffffeee4, 0x1000);\n                                bVar1 = bVar2;\n                            }\n                            if (iVar3 < 0) {\n                                pcVar9 = \"UnzipAllFile:\";\n                                pcVar8 = \"%s error (%d) extracting %s \";\n                                uVar7 = 0x800002;\n                                uVar6 = 0xa9;\n                                pcVar5 = L\"WrapperArchive.cpp\";\n                                uStackY100 = 0x40ee73;\n                                uVar4 = fcn.0042c180();\n                                uStackY100 = 0x40ee7a;\n                                fcn.0042c3c0(uVar4, pcVar5, uVar6, uVar7, pcVar8, pcVar9);\n                                bVar1 = false;\n                                bVar2 = false;\n                            }\n                            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n                        }\n                        fcn.004367fc();\n                        var_4h = 0xffffffff;\n                        fcn.00402754(1, 0);\n                        if (!bVar1) break;\n                    }\n                    else {\n                        fcn.0040f633(var_1120h + -1, 0);\n                        (*_sym.imp.KERNEL32.dll_CreateDirectoryW)();\n                        fcn.004367fc();\n                        var_4h = 0xffffffff;\n                        fcn.00402754(1, 0);\n                    }\n                }\n                iVar3 = fcn.004363a5();\n            } while (iVar3 != -100);\n        }\n    }\n    else {\n        pcVar9 = \"UnzipAllFile:\";\n        pcVar8 = \"%s unzGoToFirstFile failed\";\n        uVar7 = 0x800002;\n        uVar6 = 0x68;\n        pcVar5 = L\"WrapperArchive.cpp\";\n        uVar4 = fcn.0042c180();\n        fcn.0042c3c0(uVar4, pcVar5, uVar6, uVar7, pcVar8, pcVar9);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(unaff_EDI);\n    return;\n}\n",
        "token_count": 1697
    },
    "0040eefe": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040eefe(uint arg_8h)\n\n{\n    bool bVar1;\n    bool bVar2;\n    bool bVar3;\n    bool bVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint *puVar8;\n    uint uVar9;\n    int32_t iVar10;\n    uint ****ppppuVar11;\n    uint ****in_ECX;\n    uint *in_EDX;\n    int32_t unaff_EBX;\n    int32_t **in_FS_OFFSET;\n    char16_t *pcVar12;\n    uint uVar13;\n    uint arg_14h;\n    char *pcVar14;\n    uint in_stack_fffffcd4;\n    uint ****appppuStack800 [2];\n    uint ****appppuStack792 [2];\n    uint uStack784;\n    uint32_t uStack780;\n    uint uStack776;\n    uint32_t uStack772;\n    ushort uStack768;\n    uint uStack752;\n    uint uStack748;\n    uint ****appppuStack744 [2];\n    ushort uStack736;\n    uint32_t uStack724;\n    uint uStack720;\n    uint uStack716;\n    uchar auStack664 [8];\n    uchar auStack656 [36];\n    uchar auStack620 [16];\n    uchar auStack604 [544];\n    uchar uStack60;\n    uint uStack52;\n    uchar uStack44;\n    uint uStack36;\n    uint32_t uStack28;\n    int32_t *piStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0xffffffff;\n    uStack16 = 0x48819a;\n    piStack20 = *in_FS_OFFSET;\n    uStack28 = *0x4b4f00 ^ &stack0xfffffcd4;\n    uVar5 = *0x4b4f00 ^ &stack0xfffffcc8;\n    *in_FS_OFFSET = &piStack20;\n    bVar4 = false;\n    bVar3 = false;\n    bVar2 = false;\n    bVar1 = false;\n    if (in_ECX != NULL) {\n        uStack776 = 0;\n        uStack772 = 7;\n        appppuStack792[0] = appppuStack792[0] & 0xffff0000;\n        uStack12 = 0;\n        appppuStack800[0] = in_ECX;\n        iVar6 = fcn.0040853f(0x4a0210, 0xffffffff);\n        if (iVar6 == -1) {\n            uStack784 = 0;\n            ppppuVar11 = appppuStack800;\n            if (7 < uStack780) {\n                ppppuVar11 = appppuStack800[0];\n            }\n            *ppppuVar11 = 0;\n        }\n        else {\n            uVar7 = fcn.004085ca(&uStack752, 0, iVar6);\n            fcn.004017bf(uVar7);\n            fcn.00402754(1, 0);\n        }\n        puVar8 = in_EDX;\n        if (7 < in_EDX[5]) {\n            puVar8 = *in_EDX;\n        }\n        iVar6 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(puVar8, auStack656);\n        if (iVar6 == -1) {\n            if (7 < in_EDX[5]) {\n                in_EDX = *in_EDX;\n            }\n            uVar7 = (*_sym.imp.KERNEL32.dll_GetLastError)(in_EDX);\n            pcVar14 = \"Failed %d enumerating %S\";\n            arg_14h = 0x800040;\n            uVar13 = 0xd5;\n            pcVar12 = L\"WrapperArchive.cpp\";\n            uVar9 = fcn.0042c180();\n            fcn.0042c3c0(uVar9, pcVar12, uVar13, arg_14h, pcVar14, uVar7);\n        }\n        else {\n            do {\n                iVar10 = fcn.00456d47(auStack620, 0x4a24cc);\n                if ((iVar10 != 0) && (iVar10 = fcn.00456d47(auStack620, 0x4a24d0),  iVar10 != 0)) {\n                    if (unaff_EBX == 0) {\n                        uStack720 = 0;\n                        uStack716 = 7;\n                        uStack736 = 0;\n                        fcn.00402667(0x4a00e0, 0);\n                        uStack60 = 1;\n                        bVar2 = true;\n                    }\n                    else {\n                        fcn.00401a5b(0x4a078c);\n                        uStack52 = 2;\n                        bVar1 = true;\n                    }\n                    fcn.0040c05d(auStack620);\n                    uStack52 = 3;\n                    if (bVar1) {\n                        bVar1 = false;\n                        fcn.00402754(1, 0);\n                    }\n                    uStack36 = CONCAT31(uStack36._1_3_, 5);\n                    if (bVar2) {\n                        bVar2 = false;\n                        fcn.00402754(1, 0);\n                    }\n                    if (*(uVar5 + 0x10) == 0) {\n                        uStack752 = 0;\n                        uStack748 = 7;\n                        uStack768 = 0;\n                        fcn.00402667(0x4a00e0, 0);\n                        uStack44 = 6;\n                        bVar4 = true;\n                    }\n                    else {\n                        fcn.00401a5b(0x4a10b4);\n                        uStack36 = 7;\n                        bVar3 = true;\n                    }\n                    fcn.0040c05d(auStack604);\n                    uStack36 = 8;\n                    if (bVar3) {\n                        bVar3 = false;\n                        fcn.00402754(1, 0);\n                    }\n                    uStack36 = CONCAT31(uStack36._1_3_, 10);\n                    if (bVar4) {\n                        bVar4 = false;\n                        fcn.00402754(1, 0);\n                    }\n                    ppppuVar11 = appppuStack792;\n                    if (7 < uStack772) {\n                        ppppuVar11 = appppuStack792[0];\n                    }\n                    iVar10 = fcn.0042b780(ppppuVar11);\n                    if (iVar10 != 0) {\n                        ppppuVar11 = appppuStack744;\n                        if (7 < uStack724) {\n                            ppppuVar11 = appppuStack744[0];\n                        }\n                        pcVar14 = \"HCZipAdd() failed %d adding %S to %S \";\n                        uVar13 = 0x800002;\n                        uVar9 = 0xeb;\n                        pcVar12 = L\"WrapperArchive.cpp\";\n                        uVar7 = fcn.0042c180(ppppuVar11);\n                        fcn.0042c3c0(uVar7, pcVar12, uVar9, uVar13, pcVar14, iVar10);\n                    }\n                    fcn.00402754(1, 0);\n                    uStack44 = 0;\n                    fcn.00402754(1, 0);\n                }\n                iVar10 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar6, auStack664);\n            } while (iVar10 != 0);\n            (*_sym.imp.KERNEL32.dll_FindClose)(iVar6);\n        }\n        fcn.00402754(1, 0);\n    }\n    *in_FS_OFFSET = piStack20;\n    fcn.004529f8(in_stack_fffffcd4);\n    return;\n}\n",
        "token_count": 1744
    },
    "0040f2d8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.0040f2d8(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    ushort *puVar3;\n    uint *puVar4;\n    uint uVar5;\n    int32_t extraout_ECX;\n    int32_t *arg_ch_00;\n    int32_t iVar6;\n    uint *extraout_EDX;\n    uint32_t uVar7;\n    int32_t unaff_EBP;\n    uint var_320h;\n    uint var_31ch;\n    uint var_318h;\n    uint var_314h;\n    uint var_310h;\n    uint lpFindFileData;\n    uint var_2e0h;\n    uint var_bch;\n    uint var_a4h;\n    uint var_8ch;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_30h;\n    uint var_2ch;\n    char *arg_18h;\n    uint var_1ch;\n    uint var_18h;\n    char16_t *pcVar8;\n    uint arg_10h;\n    uint arg_14h;\n    uint var_4h;\n    \n    fcn.0045b335(0x314);\n    *(unaff_EBP + -800) = extraout_ECX;\n    *(unaff_EBP + -0x314) = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x31c) = *(unaff_EBP + 0xc);\n    uVar7 = 0;\n    *(unaff_EBP + -0x310) = 0;\n    if (extraout_ECX != 0) {\n        *(unaff_EBP + -0x1c) = 0;\n        *(unaff_EBP + -0x18) = 7;\n        *(unaff_EBP + -0x2c) = 0;\n        *(unaff_EBP + -4) = 0;\n        iVar1 = fcn.0040853f(0x4a0210, 0xffffffff);\n        if (iVar1 == -1) {\n            *(unaff_EBP + -0x1c) = 0;\n            puVar3 = unaff_EBP + -0x2c;\n            if (7 < *(unaff_EBP + -0x18)) {\n                puVar3 = *(unaff_EBP + -0x2c);\n            }\n            *puVar3 = 0;\n        }\n        else {\n            uVar2 = fcn.004085ca(unaff_EBP + -0x74, 0, iVar1);\n            fcn.004017bf(uVar2);\n            fcn.00402754(1, 0);\n        }\n        puVar4 = extraout_EDX;\n        if (7 < extraout_EDX[5]) {\n            puVar4 = *extraout_EDX;\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(puVar4, unaff_EBP + -0x30c);\n        *(unaff_EBP + -0x318) = iVar1;\n        if (iVar1 == -1) {\n            puVar4 = extraout_EDX;\n            if (7 < extraout_EDX[5]) {\n                puVar4 = *extraout_EDX;\n            }\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(puVar4);\n            arg_14h = 0x800040;\n            arg_10h = 0x10e;\n            pcVar8 = L\"WrapperArchive.cpp\";\n            uVar5 = fcn.0042c180();\n            fcn.0042c3c0(uVar5, pcVar8, arg_10h, arg_14h, \"Failed %d enumerating %S\", uVar2);\n        }\n        else {\n            uVar2 = *(unaff_EBP + -0x318);\n            do {\n                iVar1 = fcn.00456d47(unaff_EBP + -0x2e0, 0x4a24cc);\n                if ((iVar1 != 0) && (iVar1 = fcn.00456d47(unaff_EBP + -0x2e0, 0x4a24d0),  iVar1 != 0)) {\n                    if (*(unaff_EBP + -0x1c) == 0) {\n                        *(unaff_EBP + -0x7c) = 0;\n                        *(unaff_EBP + -0x78) = 7;\n                        *(unaff_EBP + -0x8c) = 0;\n                        fcn.00402667(0x4a00e0, 0);\n                        *(unaff_EBP + -4) = 1;\n                        uVar7 = uVar7 | 1;\n                    }\n                    else {\n                        fcn.00401a5b(0x4a078c);\n                        *(unaff_EBP + -4) = 2;\n                        uVar7 = uVar7 | 2;\n                    }\n                    *(unaff_EBP + -0x310) = uVar7;\n                    fcn.0040c05d(unaff_EBP + -0x2e0);\n                    *(unaff_EBP + -4) = 3;\n                    if ((uVar7 & 2) != 0) {\n                        uVar7 = uVar7 & 0xfffffffd;\n                        *(unaff_EBP + -0x310) = uVar7;\n                        fcn.00402754(1, 0);\n                    }\n                    *(unaff_EBP + -4) = 5;\n                    if ((uVar7 & 1) != 0) {\n                        uVar7 = uVar7 & 0xfffffffe;\n                        *(unaff_EBP + -0x310) = uVar7;\n                        fcn.00402754(1, 0);\n                    }\n                    if (*(*(unaff_EBP + -0x314) + 0x10) == 0) {\n                        *(unaff_EBP + -100) = 0;\n                        *(unaff_EBP + -0x60) = 7;\n                        *(unaff_EBP + -0x74) = 0;\n                        fcn.00402667(0x4a00e0, 0);\n                        *(unaff_EBP + -4) = 6;\n                        uVar7 = uVar7 | 4;\n                    }\n                    else {\n                        fcn.00401a5b(0x4a10b4);\n                        *(unaff_EBP + -4) = 7;\n                        uVar7 = uVar7 | 8;\n                    }\n                    *(unaff_EBP + -0x310) = uVar7;\n                    fcn.0040c05d(unaff_EBP + -0x2e0);\n                    *(unaff_EBP + -4) = 8;\n                    if ((uVar7 & 8) != 0) {\n                        uVar7 = uVar7 & 0xfffffff7;\n                        *(unaff_EBP + -0x310) = uVar7;\n                        fcn.00402754(1, 0);\n                    }\n                    *(unaff_EBP + -4) = 10;\n                    if ((uVar7 & 4) != 0) {\n                        uVar7 = uVar7 & 0xfffffffb;\n                        *(unaff_EBP + -0x310) = uVar7;\n                        fcn.00402754(1, 0);\n                    }\n                    arg_ch_00 = *(unaff_EBP + -0x31c);\n                    if (7 < arg_ch_00[5]) {\n                        arg_ch_00 = *arg_ch_00;\n                    }\n                    iVar1 = unaff_EBP + -0x44;\n                    if (7 < *(unaff_EBP + -0x30)) {\n                        iVar1 = *(unaff_EBP + -0x44);\n                    }\n                    iVar1 = fcn.0042bcc0(iVar1, arg_ch_00);\n                    if (iVar1 != 0) {\n                        iVar6 = unaff_EBP + -0x5c;\n                        if (7 < *(unaff_EBP + -0x48)) {\n                            iVar6 = *(unaff_EBP + -0x5c);\n                        }\n                        arg_18h = \"HCZipAddWithPasswordW() failed %d adding %S to %S \";\n                        pcVar8 = L\"WrapperArchive.cpp\";\n                        uVar5 = fcn.0042c180(iVar6);\n                        fcn.0042c3c0(uVar5, pcVar8, 0x125, 0x800002, arg_18h, iVar1);\n                    }\n                    fcn.00402754(1, 0);\n                    *(unaff_EBP + -4) = 0;\n                    fcn.00402754(1, 0);\n                }\n                iVar1 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(uVar2, unaff_EBP + -0x30c);\n            } while (iVar1 != 0);\n            (*_sym.imp.KERNEL32.dll_FindClose)(uVar2);\n        }\n        fcn.00402754(1, 0);\n    }\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 2173
    },
    "004137b5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.004137b5(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *arg_8h;\n    int32_t iVar3;\n    uint extraout_EDX;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint32_t uVar5;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_4h;\n    \n    fcn.0045b36b(0x2c);\n    *(unaff_EBP + -0x30) = extraout_EDX;\n    *(unaff_EBP + -0x24) = arg_8h;\n    uVar5 = 0;\n    *(unaff_EBP + -0x20) = 0;\n    fcn.0040e5a1(arg_8h);\n    *(unaff_EBP + -4) = 0;\n    if (*(unaff_EBP + -0x34) != '\\0') {\n        iVar2 = *(*arg_8h + 4);\n        iVar4 = *(iVar2 + 0x24 + arg_8h);\n        uVar1 = *(iVar2 + 0x20 + arg_8h);\n        if ((iVar4 < 1) && ((iVar4 < 0 || (uVar1 < 2)))) {\n            *(unaff_EBP + -0x2c) = 0;\n            iVar4 = *(unaff_EBP + -0x28);\n            iVar3 = *(unaff_EBP + -0x2c);\n        }\n        else {\n            iVar3 = uVar1 - 1;\n            iVar4 = iVar4 - (uVar1 == 0);\n        }\n        *(unaff_EBP + -4) = 1;\n        uVar1 = *(iVar2 + 0x14 + arg_8h);\n        *(unaff_EBP + -0x1c) = iVar4;\n        *(unaff_EBP + -0x18) = iVar3;\n        if ((uVar1 & 0x1c0) == 0x40) {\ncode_r0x00413874:\n            iVar4 = fcn.0040e77e(*(unaff_EBP + -0x30));\n            iVar2 = *(unaff_EBP + -0x1c);\n            if (iVar4 == -1) {\n                uVar5 = 4;\n            }\n            iVar4 = *(unaff_EBP + -0x18);\n            while (((*(unaff_EBP + -0x20) = uVar5,  uVar5 == 0 && (-1 < iVar2)) && ((0 < iVar2 || (iVar4 != 0))))) {\n                *(unaff_EBP + -0x30) = *(*(*arg_8h + 4) + 0x40 + arg_8h);\n                iVar2 = fcn.0040e77e(*(unaff_EBP + -0x30));\n                if (iVar2 == -1) {\n                    uVar5 = 4;\n                }\n                iVar4 = *(unaff_EBP + -0x18) + -1;\n                iVar2 = *(unaff_EBP + -0x1c) + -1 + (*(unaff_EBP + -0x18) != 0);\n                *(unaff_EBP + -0x18) = iVar4;\n                *(unaff_EBP + -0x1c) = iVar2;\n            }\n        }\n        else {\n            while (uVar5 == 0) {\n                if ((iVar4 < 0) || ((iVar4 < 1 && (iVar3 == 0)))) goto code_r0x00413874;\n                *(unaff_EBP + -0x28) = *(*(*arg_8h + 4) + 0x40 + arg_8h);\n                iVar2 = fcn.0040e77e(*(unaff_EBP + -0x28));\n                if (iVar2 == -1) {\n                    uVar5 = 4;\n                }\n                iVar3 = *(unaff_EBP + -0x18) + -1;\n                iVar4 = *(unaff_EBP + -0x1c) + -1 + (*(unaff_EBP + -0x18) != 0);\n                *(unaff_EBP + -0x20) = uVar5;\n                *(unaff_EBP + -0x18) = iVar3;\n                *(unaff_EBP + -0x1c) = iVar4;\n            }\n        }\n        *(unaff_EBP + -4) = 0;\n    }\n    iVar2 = *(*arg_8h + 4);\n    *(iVar2 + 0x20 + arg_8h) = 0;\n    *(iVar2 + 0x24 + arg_8h) = 0;\n    iVar2 = *(*arg_8h + 4) + arg_8h;\n    *(unaff_EBP + -0x30) = iVar2;\n    if (uVar5 != 0) {\n        uVar5 = *(iVar2 + 0xc) | uVar5;\n        if (*(*(unaff_EBP + -0x30) + 0x38) == 0) {\n            uVar5 = uVar5 | 4;\n        }\n        fcn.0040e96e(uVar5, 0);\n    }\n    fcn.0040e660();\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 1271
    },
    "00413c14": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00413c14(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0045b302(0x14);\n    fcn.0044ee06(0);\n    *(unaff_EBP + -4) = 0;\n    piVar1 = *0x4b96f4;\n    *(unaff_EBP + -0x10) = *0x4b96f4;\n    arg_8h_00 = fcn.0040dcc0();\n    iVar2 = fcn.0040dcf5(arg_8h_00);\n    if ((iVar2 == 0) && (piVar1 == NULL)) {\n        iVar2 = fcn.00413f55(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar2 == -1) {\n            fcn.00453b55(\"bad cast\");\n            fcn.0045b275(unaff_EBP + -0x20, 0x4ac8a8);\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *0x4b96f4 = piVar1;\n        (**(*piVar1 + 4))();\n        fcn.0044ebdf(piVar1);\n    }\n    fcn.0044ee62();\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 416
    },
    "00415128": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00415128(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0045b302(0x14);\n    fcn.0044ee06(0);\n    *(unaff_EBP + -4) = 0;\n    piVar1 = *0x4b96ec;\n    *(unaff_EBP + -0x10) = *0x4b96ec;\n    arg_8h_00 = fcn.0040dcc0();\n    iVar2 = fcn.0040dcf5(arg_8h_00);\n    if ((iVar2 == 0) && (piVar1 == NULL)) {\n        iVar2 = fcn.0041931a(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar2 == -1) {\n            fcn.00453b55(\"bad cast\");\n            fcn.0045b275(unaff_EBP + -0x20, 0x4ac8a8);\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *0x4b96ec = piVar1;\n        (**(*piVar1 + 4))();\n        fcn.0044ebdf(piVar1);\n    }\n    fcn.0044ee62();\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 412
    },
    "004169c2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004169c2(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t *piVar3;\n    int32_t *arg_8h_01;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t unaff_EBP;\n    uint var_3ch;\n    uint var_38h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_4h;\n    \n    fcn.0045b36b(0x30);\n    *(unaff_EBP + -0x1c) = arg_8h_01;\n    *(unaff_EBP + -0x18) = 0;\n    fcn.0040e45b(arg_8h_01, 0);\n    *(unaff_EBP + -4) = 0;\n    if (*(unaff_EBP + -0x28) == '\\0') {\n        uVar5 = *(unaff_EBP + -0x18);\n    }\n    else {\n        *(unaff_EBP + -0x20) = 0;\n        arg_8h_00 = fcn.0040e1fb(unaff_EBP + -0x24);\n        *(unaff_EBP + -4) = 1;\n        piVar3 = fcn.0040c724(arg_8h_00);\n        fcn.0040e226();\n        *(unaff_EBP + -4) = 2;\n        iVar1 = *piVar3;\n        iVar4 = *(*arg_8h_01 + 4) + arg_8h_01;\n        iVar2 = *(iVar4 + 0x38);\n        *(unaff_EBP + -0x30) = 1;\n        *(unaff_EBP + -0x38) = iVar2 == 0;\n        (**(iVar1 + 0x28))(unaff_EBP + -0x3c, *(iVar4 + 0x38), *(unaff_EBP + -0x38), 0, *(unaff_EBP + -0x30), iVar4, \n                           unaff_EBP + -0x18, unaff_EBP + -0x20);\n        *(unaff_EBP + -4) = 0;\n        uVar5 = *(unaff_EBP + -0x18);\n        if ((uVar5 & 2) == 0) {\n            **(unaff_EBP + 8) = *(unaff_EBP + -0x20);\n        }\n        else {\n            uVar5 = uVar5 | 2;\n            *(unaff_EBP + -0x18) = uVar5;\n        }\n    }\n    if (uVar5 != 0) {\n        uVar5 = *(arg_8h_01 + *(*arg_8h_01 + 4) + 0xc) | uVar5;\n        if (*(arg_8h_01 + *(*arg_8h_01 + 4) + 0x38) == 0) {\n            uVar5 = uVar5 | 4;\n        }\n        fcn.0040e96e(uVar5, 0);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    piVar3 = *(*(**(unaff_EBP + -0x2c) + 4) + 0x38 + *(unaff_EBP + -0x2c));\n    if (piVar3 != NULL) {\n        (**(*piVar3 + 8))();\n    }\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 960
    },
    "004198b6": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.004198b6(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0045b302(0x14);\n    fcn.0044ee06(0);\n    *(unaff_EBP + -4) = 0;\n    piVar1 = *0x4b96f8;\n    *(unaff_EBP + -0x10) = *0x4b96f8;\n    arg_8h_00 = fcn.0040dcc0();\n    iVar2 = fcn.0040dcf5(arg_8h_00);\n    if ((iVar2 == 0) && (piVar1 == NULL)) {\n        iVar2 = fcn.0041983b(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar2 == -1) {\n            fcn.00453b55(\"bad cast\");\n            fcn.0045b275(unaff_EBP + -0x20, 0x4ac8a8);\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *0x4b96f8 = piVar1;\n        (**(*piVar1 + 4))();\n        fcn.0044ebdf(piVar1);\n    }\n    fcn.0044ee62();\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 416
    },
    "0041df21": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_a4h\n// WARNING: Variable defined which should be unmapped: var_a0h\n// WARNING: Variable defined which should be unmapped: var_a8h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_70h\n// WARNING: Variable defined which should be unmapped: var_74h\n// WARNING: Variable defined which should be unmapped: var_8ch\n// WARNING: Variable defined which should be unmapped: var_88h\n// WARNING: Variable defined which should be unmapped: var_90h\n\nvoid __cdecl fcn.0041df21(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    char cVar3;\n    uchar uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uint uVar8;\n    uint uVar9;\n    uint arg_8h_00;\n    uint uVar10;\n    uint noname_0;\n    int32_t iVar11;\n    uint *extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint extraout_ECX_02;\n    uint extraout_ECX_03;\n    int32_t iVar12;\n    int32_t *piVar13;\n    int32_t unaff_EBP;\n    int32_t iVar14;\n    uint *puVar15;\n    bool bVar16;\n    uint in_stack_0000001c;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_100h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_b8h;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    int32_t noname_3;\n    uint uVar17;\n    int32_t noname_4;\n    uint uVar18;\n    uint var_74h;\n    uint var_70h;\n    char16_t *pcVar19;\n    uint var_58h;\n    uint uVar20;\n    uint noname_14;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint in_stack_ffffffc0;\n    uint *in_stack_ffffffc4;\n    uint in_stack_ffffffc8;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    char16_t *in_stack_ffffffd8;\n    uint in_stack_ffffffdc;\n    char16_t *in_stack_ffffffe0;\n    uint var_18h;\n    uint var_14h;\n    char *pcVar21;\n    uint var_4h;\n    \n    fcn.0045b335(0x138);\n    *(unaff_EBP + -0x120) = extraout_ECX;\n    *(unaff_EBP + -0x134) = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x138) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -300) = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0xec) = 7;\n    *(unaff_EBP + -0xf0) = 0;\n    *(unaff_EBP + -0x100) = 0;\n    uVar5 = fcn.00453054(0x4a5448);\n    fcn.00402667(0x4a5448, uVar5);\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0xd4) = 7;\n    *(unaff_EBP + -0xd8) = 0;\n    *(unaff_EBP + -0xe8) = 0;\n    uVar5 = fcn.00453054(L\"Sample\");\n    fcn.00402667(L\"Sample\", uVar5);\n    *(unaff_EBP + -4) = 1;\n    iVar6 = extraout_ECX[3];\n    piVar13 = *(iVar6 + 0xc);\n    puVar15 = *extraout_ECX;\n    piVar1 = *piVar13;\n    *(unaff_EBP + -0x124) = 0;\n    *(iVar6 + 0x14) = piVar1;\n    if (piVar13 != piVar1) {\n        piVar13 = piVar1[5];\n        *(unaff_EBP + -0x11c) = piVar13;\n        iVar6 = **(unaff_EBP + -0x120);\n        *(unaff_EBP + -0x128) = piVar13;\n        if (iVar6 != (*(unaff_EBP + -0x120))[1]) {\n            do {\n                iVar6 = (**(*piVar13 + 8))();\n                if (iVar6 == 0) {\n                    puVar7 = (**(*piVar13 + 4))();\n                    if (7 < puVar7[5]) {\n                        puVar7 = *puVar7;\n                    }\n                    in_stack_ffffffe0 = 0x800008;\n                    in_stack_ffffffdc = 0x1d8;\n                    in_stack_ffffffd8 = L\"WrpPlugin.cpp\";\n                    var_28h = fcn.0042c180(extraout_ECX_00);\n                    var_2ch = 0x41e039;\n                    fcn.0042c3c0(var_28h, in_stack_ffffffd8, in_stack_ffffffdc, in_stack_ffffffe0, \"Plug-in %S disabled\"\n                                 , puVar7);\n                }\n                else {\n                    uVar5 = (**(*piVar13 + 0x10))();\n                    var_18h = 0x41e04d;\n                    fcn.004084c5(uVar5);\n                    *(unaff_EBP + -4) = 2;\n                    if (*(unaff_EBP + -0x30) == 0) {\ncode_r0x0041e1e0:\n                        puVar7 = (**(*piVar13 + 4))();\n                        if (7 < puVar7[5]) {\n                            puVar7 = *puVar7;\n                        }\n                        fcn.0045400a(\"Initializing %S...\\n\\n\", puVar7);\n                        puVar7 = (**(*piVar13 + 4))();\n                        if (7 < puVar7[5]) {\n                            puVar7 = *puVar7;\n                        }\n                        pcVar21 = \"Execute plug-in %S\";\n                        uVar20 = 0x800040;\n                        pcVar19 = L\"WrpPlugin.cpp\";\n                        uVar8 = fcn.0042c180(extraout_ECX_02);\n                        fcn.0042c3c0(uVar8, pcVar19, 0x1fd, uVar20, pcVar21, puVar7);\n                        ppiVar2 = *puVar15;\n                        *(unaff_EBP + -0x11c) = ppiVar2;\n                        iVar6 = **ppiVar2;\n                        uVar20 = (**(*piVar13 + 4))();\n                        uVar8 = *(*(unaff_EBP + -0x120) + 0xc);\n                        iVar6 = (**(iVar6 + 4))();\n                        if (iVar6 == 0) {\n                            puVar7 = (**(*piVar13 + 4))();\n                            if (7 < puVar7[5]) {\n                                puVar7 = *puVar7;\n                            }\n                            fcn.0045400a(\"Failed initializing %S, skipped.\\n\\n\", puVar7);\n                            puVar7 = (**(*piVar13 + 4))();\n                            if (7 < puVar7[5]) {\n                                puVar7 = *puVar7;\n                            }\n                            pcVar21 = \"Plug-in %S init failed, skipped.\";\n                            uVar5 = 0x800002;\n                            in_stack_ffffffe0 = fcn.0042c180(extraout_ECX_03);\n                            in_stack_ffffffdc = 0x41e2a9;\n                            fcn.0042c3c0(in_stack_ffffffe0, L\"WrpPlugin.cpp\", 0x205, uVar5, pcVar21, puVar7);\n                            fcn.00402aa7(0x80050000);\n                            *(unaff_EBP + -4) = 1;\n                            fcn.00402754(1, 0);\n                            goto code_r0x0041e71b;\n                        }\n                        puVar7 = (**(*piVar13 + 4))();\n                        if (7 < puVar7[5]) {\n                            puVar7 = *puVar7;\n                        }\n                        fcn.0045400a(\"Running %S... \\n\\n\", puVar7);\n                        fcn.00401a5b(0x4a078c);\n                        *(unaff_EBP + -4) = 4;\n                        uVar9 = (**(*piVar13 + 0x18))();\n                        fcn.0040c07f(uVar9);\n                        noname_14 = 0;\n                        *(unaff_EBP + -4) = 6;\n                        fcn.00402754(1, 0);\n                        uVar9 = (**(*piVar13 + 0x20))();\n                        fcn.004084c5(uVar9);\n                        *(unaff_EBP + -4) = 7;\n                        arg_8h_00 = (**(*piVar13 + 4))();\n                        fcn.004084c5(arg_8h_00);\n                        *(unaff_EBP + -0x90) = 0;\n                        *(unaff_EBP + -0x8c) = 7;\n                        *(unaff_EBP + -0xa0) = 0;\n                        *(unaff_EBP + -4) = 9;\n                        bVar16 = 7 < *(unaff_EBP + -0x44);\n                        iVar6 = unaff_EBP + -0x58;\n                        if (bVar16) {\n                            iVar6 = *(unaff_EBP + -0x58);\n                        }\n                        iVar11 = unaff_EBP + -0x58;\n                        if (bVar16) {\n                            iVar11 = *(unaff_EBP + -0x58);\n                        }\n                        iVar12 = unaff_EBP + -0x58;\n                        if (bVar16) {\n                            iVar12 = *(unaff_EBP + -0x58);\n                        }\n                        fcn.0041ef8a(iVar12, iVar6 + *(unaff_EBP + -0x48) * 2, iVar11);\n                        iVar11 = unaff_EBP + -0xa0;\n                        iVar6 = unaff_EBP + -0x58;\n                        if (7 < *(unaff_EBP + -0x44)) {\n                            iVar6 = *(unaff_EBP + -0x58);\n                        }\n                        cVar3 = fcn.0042d150(iVar6, iVar11);\n                        if (cVar3 != '\\0') {\n                            uVar10 = fcn.00453054(0x4a48b4);\n                            fcn.0040186c(0x4a48b4, uVar10);\n                            fcn.004019b5(unaff_EBP + -0xa0, 0, 0xffffffff);\n                            puVar7 = (**(*piVar13 + 4))();\n                            if (7 < puVar7[5]) {\n                                puVar7 = *puVar7;\n                            }\n                            uVar18 = 0x800008;\n                            uVar17 = 0x217;\n                            pcVar19 = L\"WrpPlugin.cpp\";\n                            uVar10 = fcn.0042c180();\n                            fcn.0042c3c0(uVar10, pcVar19, uVar17, uVar18, \"Plug-in %S use extra options %S\", puVar7);\n                        }\n                        *(unaff_EBP + -0xa8) = 0;\n                        *(unaff_EBP + -0xa4) = 7;\n                        *(unaff_EBP + -0xb8) = 0;\n                        iVar12 = unaff_EBP + -0xb8;\n                        *(unaff_EBP + -4) = 10;\n                        uVar4 = fcn.0042d150(0x4a1ee0, iVar12);\n                        *(unaff_EBP + -0x130) = uVar4;\n                        uVar10 = *(unaff_EBP + -0x130);\n                        uVar18 = (**(*piVar13 + 0x24))();\n                        iVar14 = *(unaff_EBP + -0x11c);\n                        noname_3 = unaff_EBP + -0xd0;\n                        uVar17 = *(unaff_EBP + -0x134);\n                        noname_4 = iVar14;\n                        noname_0 = (**(*piVar13 + 0x1c))();\n                        iVar6 = fcn.0041dbc7(noname_0, unaff_EBP + -0x88, uVar17, noname_3, noname_4, uVar18, uVar10, \n                                             0x4a1ee0, iVar12, iVar6, iVar11, arg_8h_00, uVar9, 1, noname_14, uVar8, \n                                             uVar20, var_48h, var_44h, var_40h, in_stack_ffffffc0, in_stack_ffffffc4, \n                                             in_stack_ffffffc8, var_30h, var_2ch, var_28h, in_stack_ffffffd8, \n                                             in_stack_ffffffdc, in_stack_ffffffe0, var_18h, uVar5);\n                        if (iVar6 == 1) {\n                            **(unaff_EBP + -0x138) = 1;\n                        }\n                        fcn.00402aa7(iVar6);\n                        iVar6 = (**(*piVar13 + 0x38))();\n                        if (iVar6 != 0) {\n                            puVar7 = (**(*piVar13 + 4))();\n                            if (7 < puVar7[5]) {\n                                puVar7 = *puVar7;\n                            }\n                            fcn.0045400a(\"Collecting logs about %S...\\n\\n\", puVar7);\n                            iVar6 = (**(*piVar13 + 0x30))();\n                            if (*(iVar6 + 0x10) == 0) {\n                                iVar6 = unaff_EBP + -0xd0;\n                            }\n                            else {\n                                iVar6 = (**(*piVar13 + 0x30))();\n                            }\n                            fcn.004084c5(iVar6);\n                            *(unaff_EBP + -4) = 0xb;\n                            uVar5 = 0x2f;\n                            (**(*piVar13 + 4))();\n                            fcn.0041ef2d(uVar5);\n                            *(unaff_EBP + -4) = 0xc;\n                            fcn.0040c07f(unaff_EBP + -0x100);\n                            *(unaff_EBP + -4) = 0xe;\n                            fcn.00402754(1, 0);\n                            iVar6 = **(iVar14 + 8);\n                            uVar5 = (**(*piVar13 + 0x44))(unaff_EBP + -0x70, *(*(unaff_EBP + -0x120) + 0x10));\n                            (**(iVar6 + 4))(unaff_EBP + -0x28, uVar5);\n                            fcn.00402754(1, 0);\n                            *(unaff_EBP + -4) = 10;\n                            fcn.00402754(1, 0);\n                            iVar14 = *(unaff_EBP + -0x11c);\n                        }\n                        iVar6 = (**(*piVar13 + 0x3c))();\n                        if (iVar6 != 0) {\n                            puVar7 = (**(*piVar13 + 4))();\n                            if (7 < puVar7[5]) {\n                                puVar7 = *puVar7;\n                            }\n                            fcn.0045400a(\"Collecting suspect files from %S...\\n\\n\", puVar7);\n                            iVar6 = (**(*piVar13 + 0x34))();\n                            if (*(iVar6 + 0x10) == 0) {\n                                iVar6 = unaff_EBP + -0xd0;\n                            }\n                            else {\n                                iVar6 = (**(*piVar13 + 0x34))();\n                            }\n                            fcn.004084c5(iVar6);\n                            *(unaff_EBP + -4) = 0xf;\n                            (**(*piVar13 + 4))();\n                            fcn.0041ef2d(0x2f);\n                            *(unaff_EBP + -4) = 0x10;\n                            fcn.0040c07f(unaff_EBP + -0xe8);\n                            *(unaff_EBP + -4) = 0x12;\n                            fcn.00402754(1, 0);\n                            iVar11 = (**(*piVar13 + 0x40))();\n                            iVar6 = **(iVar14 + 0xc);\n                            if (iVar11 == 0) {\n                                (**(*piVar13 + 0x48))();\n                                (**(iVar6 + 4))();\n                            }\n                            else {\n                                (**(*piVar13 + 0x48))();\n                                (**(iVar6 + 8))();\n                            }\n                            fcn.00402754(1, 0);\n                            in_stack_0000001c = 1;\n                            *(unaff_EBP + -4) = 10;\n                            fcn.00402754(1, 0);\n                        }\n                        if ((*(unaff_EBP + -0x124) & 0xffff0000) == 0x80060000) {\n                            fcn.0045400a(\"Critical error encountered! Stop.\\n\\n\", in_stack_0000001c);\n                            fcn.00402754(1, 0);\n                            fcn.00402754(1, 0);\n                            fcn.00402754(1, 0);\n                            fcn.00402754(1, 0);\n                            fcn.00402754(1, 0);\n                            fcn.00402754(1, 0);\n                            break;\n                        }\n                        fcn.00402754(1, 0);\n                        fcn.00402754(1, 0);\n                        fcn.00402754(1, 0);\n                        fcn.00402754(1, 0);\n                        fcn.00402754(1, 0);\n                    }\n                    else {\n                        bVar16 = 7 < *(unaff_EBP + -0x2c);\n                        iVar6 = unaff_EBP + -0x40;\n                        if (bVar16) {\n                            iVar6 = *(unaff_EBP + -0x40);\n                        }\n                        iVar11 = unaff_EBP + -0x40;\n                        if (bVar16) {\n                            iVar11 = *(unaff_EBP + -0x40);\n                        }\n                        iVar12 = unaff_EBP + -0x40;\n                        if (bVar16) {\n                            iVar12 = *(unaff_EBP + -0x40);\n                        }\n                        in_stack_ffffffd8 = 0x41e086;\n                        fcn.0041ef8a(iVar12, iVar6 + *(unaff_EBP + -0x30) * 2, iVar11);\n                        *(unaff_EBP + -0x14) = 7;\n                        *(unaff_EBP + -0x18) = 0;\n                        *(unaff_EBP + -0x28) = 0;\n                        var_18h = fcn.00453054(L\"Unknown\");\n                        in_stack_ffffffe0 = L\"Unknown\";\n                        fcn.00402667(L\"Unknown\", var_18h);\n                        *(unaff_EBP + -4) = 3;\n                        in_stack_ffffffdc = 0x41e0bd;\n                        iVar6 = fcn.0042fa00();\n                        if (iVar6 == 0) {\n                            in_stack_ffffffdc = fcn.00453054(0x4a5484);\n                            in_stack_ffffffd8 = 0x4a5484;\ncode_r0x0041e0fe:\n                            fcn.00402667(in_stack_ffffffd8, in_stack_ffffffdc);\n                        }\n                        else {\n                            if (iVar6 == 1) {\n                                in_stack_ffffffdc = fcn.00453054(0x4a548c);\n                                in_stack_ffffffd8 = 0x4a548c;\n                                goto code_r0x0041e0fe;\n                            }\n                            if (iVar6 == 2) {\n                                in_stack_ffffffdc = fcn.00453054(L\"AI64\");\n                                in_stack_ffffffd8 = L\"AI64\";\n                                goto code_r0x0041e0fe;\n                            }\n                        }\n                        var_28h = fcn.00453054(0x4a54a0);\n                        var_2ch = 0x4a54a0;\n                        fcn.0040186c(0x4a54a0, var_28h);\n                        in_stack_ffffffc4 = fcn.00401a5b(0x4a54a0);\n                        var_30h = in_stack_ffffffc4[4];\n                        if (7 < in_stack_ffffffc4[5]) {\n                            in_stack_ffffffc4 = *in_stack_ffffffc4;\n                        }\n                        in_stack_ffffffc8 = 0;\n                        iVar6 = fcn.00409847(in_stack_ffffffc4, 0, var_30h);\n                        in_stack_ffffffc0 = 0;\n                        var_40h = 1;\n                        fcn.00402754(1, 0);\n                        if (iVar6 != -1) {\n                            var_44h = 0;\n                            var_48h = 1;\n                            *(unaff_EBP + -4) = 2;\n                            fcn.00402754(1, 0);\n                            piVar13 = *(unaff_EBP + -0x11c);\n                            goto code_r0x0041e1e0;\n                        }\n                        iVar6 = unaff_EBP + -0x28;\n                        if (7 < *(unaff_EBP + -0x14)) {\n                            iVar6 = *(unaff_EBP + -0x28);\n                        }\n                        *(unaff_EBP + -0x13c) = iVar6;\n                        var_44h = 0x41e183;\n                        puVar7 = (**(**(unaff_EBP + -0x11c) + 4))();\n                        if (7 < puVar7[5]) {\n                            puVar7 = *puVar7;\n                        }\n                        pcVar21 = \"Plug-in %S doesn\\'t support this platform %S, supported platforms are %S\";\n                        in_stack_ffffffe0 = L\"WrpPlugin.cpp\";\n                        in_stack_ffffffdc = fcn.0042c180(extraout_ECX_01);\n                        in_stack_ffffffd8 = 0x41e1b4;\n                        fcn.0042c3c0(in_stack_ffffffdc, in_stack_ffffffe0, 0x1f6, 0x800008, pcVar21, puVar7);\n                        fcn.00402754(1, 0);\n                    }\n                    *(unaff_EBP + -4) = 1;\n                    fcn.00402754(1, 0);\n                }\ncode_r0x0041e71b:\n                iVar6 = *(unaff_EBP + -0x120);\n                iVar11 = fcn.00410da6(unaff_EBP + -0x128);\n                if ((iVar11 == 0) || (puVar15 = puVar15 + 2,  puVar15 == *(iVar6 + 4))) break;\n                piVar13 = *(unaff_EBP + -0x128);\n                *(unaff_EBP + -0x11c) = piVar13;\n            } while( true );\n        }\n    }\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 5689
    },
    "0041f980": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Removing unreachable block (ram,0x0041fcca)\n// WARNING: Removing unreachable block (ram,0x0041fcf3)\n// WARNING: Removing unreachable block (ram,0x0041fec7)\n// WARNING: Removing unreachable block (ram,0x0041fd59)\n// WARNING: Removing unreachable block (ram,0x0041fd80)\n// WARNING: Removing unreachable block (ram,0x0041fe3a)\n// WARNING: Removing unreachable block (ram,0x0041ff1c)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041f980(void)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int16_t *piVar4;\n    int16_t *extraout_EDX;\n    int32_t iVar5;\n    int16_t *piVar6;\n    uint32_t uVar7;\n    char *pcVar8;\n    code *pcVar9;\n    int16_t *arg_8h;\n    int32_t *in_FS_OFFSET;\n    int32_t iStackY16628;\n    uint32_t uStackY16616;\n    int32_t iStackY16580;\n    int32_t iStackY16576;\n    code *pcStackY16560;\n    code *pcStackY16556;\n    int32_t iStackY16552;\n    int32_t iStackY16548;\n    code *pcStackY16544;\n    code *pcStackY16540;\n    uint uStackY16536;\n    uint uStackY16532;\n    uint32_t uStackY16528;\n    int32_t iStackY16524;\n    uint uStackY16520;\n    uint uStackY16516;\n    int32_t iStackY16512;\n    int16_t *piStackY16508;\n    uint32_t uStackY16504;\n    char *pcStackY16500;\n    int32_t iStackY16496;\n    code *pcStackY16492;\n    code *pcStackY16488;\n    code *pcStackY16484;\n    code *pcStackY16480;\n    code *pcStackY16476;\n    code *pcStackY16472;\n    uchar *puStackY16468;\n    uint uStackY16464;\n    uint uStackY16460;\n    uint uStackY116;\n    uint var_40h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48a0f0;\n    var_ch = *in_FS_OFFSET;\n    fcn.00459c50();\n    *in_FS_OFFSET = &fcn.0041f980::var_ch;\n    var_28h = 3;\n    piStackY16508 = extraout_EDX;\n    iStackY16552 = (*_sym.imp.KERNEL32.dll_CreateFileW)();\n    pcVar9 = _sym.imp.KERNEL32.dll_GetLastError;\n    if ((iStackY16552 != -1) || (iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar2 == 0)) {\n        puStackY16468 = &stack0xffffbf50;\n        pcStackY16560 = fcn.004201d0;\n        pcStackY16556 = fcn.004201f0;\n        pcStackY16484 = fcn.00422c20;\n        pcStackY16480 = fcn.00422c80;\n        pcStackY16476 = fcn.00422c90;\n        pcStackY16472 = fcn.00422ce0;\n        uStackY16460 = 0;\n        uStackY16464 = 0;\n        fcn.00422d00();\n        arg_8h = NULL;\n        pcStackY16492 = fcn.0041f940;\n        pcStackY16488 = fcn.0041f960;\n        pcStackY16544 = fcn.0041f940;\n        pcStackY16540 = fcn.0041f960;\n        fcn.00420480();\n        iStackY16496 = fcn.004225a0(&stack0xffffbf94, &stack0xffffbf60);\n        if ((iStackY16496 == 0) || (fcn.004204f0(),  iStackY16496 == 0)) {\n            uStackY16528 = 0;\n            uStackY16536 = 0xffffffff;\n            uStackY16516 = 0;\n            uStackY16532 = 0;\n            uStackY16504 = 0;\n            if (uStackY16616 != 0) {\n                pcStackY16500 = iStackY16628 + 0x19;\n                piVar6 = extraout_EDX;\n                uVar3 = var_4h;\n                do {\n                    var_4h = uVar3;\n                    uStackY16520 = 0;\n                    uVar7 = *(iStackY16580 + 4 + uStackY16504 * 4) - *(iStackY16580 + uStackY16504 * 4);\n                    iStackY16512 = 0;\n                    if (uStackY16528 < uVar7) {\n                        fcn.00455f3f(arg_8h);\n                        uStackY16528 = uVar7;\n                        if (uVar7 * 2 == 0) {\n                            arg_8h = NULL;\n                        }\n                        else {\n                            arg_8h = fcn.00456a6c(uVar7 * 2);\n                            if (arg_8h != NULL) goto code_r0x0041fb6b;\n                        }\n                        pcVar9 = _sym.imp.KERNEL32.dll_GetLastError;\n                        (*pcStackY16488)();\n                        goto code_r0x0041ff5f;\n                    }\ncode_r0x0041fb6b:\n                    pcVar8 = pcStackY16500;\n                    iVar2 = *(iStackY16580 + uStackY16504 * 4);\n                    iVar5 = *(iStackY16580 + 4 + uStackY16504 * 4) - iVar2;\n                    if ((arg_8h != NULL) && (iVar5 != 0)) {\n                        piVar4 = arg_8h;\n                        do {\n                            *piVar4 = *(((iStackY16576 + iVar2 * 2) - arg_8h) + piVar4);\n                            piVar4 = piVar4 + 1;\n                            iVar5 = iVar5 + -1;\n                        } while (iVar5 != 0);\n                    }\n                    if ((*pcStackY16500 == '\\0') &&\n                       (iStackY16496 = fcn.00422940(uStackY16504, &stack0xffffbf68, &stack0xffffbf7c, &stack0xffffbf6c, \n                                                    &stack0xffffbf78, &stack0xffffbf80, &stack0xffffbf94, \n                                                    &stack0xffffbf60),  pcVar9 = _sym.imp.KERNEL32.dll_GetLastError, \n                       iStackY16496 != 0)) break;\n                    uVar3 = 0;\n                    var_28h = 0;\n                    if (*piVar6 != 0) {\n                        uVar3 = fcn.00453054(piVar6);\n                    }\n                    fcn.00402667(piVar6, uVar3);\n                    iVar2 = 0;\n                    var_4h = 0;\n                    iVar1 = *arg_8h;\n                    piVar6 = arg_8h;\n                    while (iVar1 != 0) {\n                        if (*piVar6 == 0x2f) {\n                            *piVar6 = 0;\n                            if (*piStackY16508 == 0) {\n                                uVar3 = 0;\n                            }\n                            else {\n                                uVar3 = fcn.00453054(piStackY16508);\n                            }\n                            fcn.00402667(piStackY16508, uVar3);\n                            var_4h = CONCAT31(var_4h._1_3_, 1);\n                            uVar3 = fcn.00453054(0x4a10b4);\n                            fcn.0040186c(0x4a10b4, uVar3);\n                            if (*arg_8h == 0) {\n                                uVar3 = 0;\n                            }\n                            else {\n                                uVar3 = fcn.00453054(arg_8h);\n                            }\n                            fcn.0040186c(arg_8h, uVar3);\n                            iVar5 = (*_sym.imp.KERNEL32.dll_CreateDirectoryW)();\n                            if (iVar5 == 0) {\n                                (*_sym.imp.KERNEL32.dll_GetLastError)();\n                            }\n                            var_4h = var_4h & 0xffffff00;\n                            *piVar6 = 0x2f;\n                        }\n                        iVar2 = iVar2 + 1;\n                        piVar6 = arg_8h + iVar2;\n                        pcVar8 = pcStackY16500;\n                        iVar1 = arg_8h[iVar2];\n                    }\n                    uVar3 = fcn.00453054(0x4a10b4);\n                    fcn.0040186c(0x4a10b4, uVar3);\n                    if (*arg_8h == 0) {\n                        uVar3 = 0;\n                    }\n                    else {\n                        uVar3 = fcn.00453054(arg_8h);\n                    }\n                    fcn.0040186c(arg_8h, uVar3);\n                    if (*pcVar8 == '\\0') {\n                        uStackY116 = 0x41fd96;\n                        iVar2 = (*_sym.imp.KERNEL32.dll_CreateFileW)();\n                        pcVar9 = _sym.imp.KERNEL32.dll_GetLastError;\n                        iStackY16548 = iVar2;\n                        if ((iVar2 == -1) && (iVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar5 != 0)) {\n                            var_4h = 0xffffffff;\n                            iStackY16496 = 0xb;\n                            pcVar9 = _sym.imp.KERNEL32.dll_GetLastError;\n                            break;\n                        }\n                        iStackY16524 = iStackY16512;\n                        iVar5 = fcn.004200c0(&stack0xffffbf74);\n                        if (((iVar5 != 0) || (iStackY16524 != iStackY16512)) ||\n                           ((iVar2 != -1 &&\n                            ((iVar2 = (*_sym.imp.KERNEL32.dll_CloseHandle)(),  iVar2 == 0 &&\n                             (iVar2 = (*pcVar9)(),  iVar2 != 0)))))) {\n                            pcVar9 = _sym.imp.KERNEL32.dll_GetLastError;\n                            var_4h = 0xffffffff;\n                            (*pcStackY16488)();\n                            goto code_r0x0041ff5f;\n                        }\n                        pcVar8 = pcStackY16500;\n                        if (pcStackY16500[4] != '\\0') {\n                            (*_sym.imp.KERNEL32.dll_SetFileAttributesW)();\n                        }\n                    }\n                    else {\n                        iVar2 = (*_sym.imp.KERNEL32.dll_CreateDirectoryW)();\n                        if (iVar2 == 0) {\n                            (*_sym.imp.KERNEL32.dll_GetLastError)();\n                        }\n                    }\n                    var_4h = 0xffffffff;\n                    uVar3 = var_4h;\n                    var_4h = 0xffffffff;\n                    uStackY16504 = uStackY16504 + 1;\n                    pcStackY16500 = pcVar8 + 0x20;\n                    piVar6 = piStackY16508;\n                    pcVar9 = _sym.imp.KERNEL32.dll_GetLastError;\n                } while (uStackY16504 < uStackY16616);\n            }\n            (*pcStackY16488)();\n        }\ncode_r0x0041ff5f:\n        (*pcStackY16488)();\n        (*pcStackY16488)();\n        (*pcStackY16488)();\n        (*pcStackY16488)();\n        (*pcStackY16488)();\n        (*pcStackY16488)();\n        fcn.004203d0();\n        uStackY116 = 0x41fffc;\n        fcn.00455f3f(arg_8h);\n        if ((iStackY16552 != -1) && (iVar2 = (*_sym.imp.KERNEL32.dll_CloseHandle)(),  iVar2 == 0)) {\n            (*pcVar9)();\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(var_28h);\n    return;\n}\n",
        "token_count": 2890
    },
    "00420140": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00420140(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_ECX;\n    int32_t *in_EDX;\n    uint var_8h;\n    int32_t lpDistanceToMoveHigh;\n    \n    iVar2 = *in_EDX;\n    lpDistanceToMoveHigh = fcn.0046f3e0();\n    if (arg_8h == 0) {\n        uVar1 = 0;\n    }\n    else if (arg_8h == 1) {\n        uVar1 = 1;\n    }\n    else {\n        if (arg_8h != 2) {\n            return 0x57;\n        }\n        uVar1 = 2;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_SetFilePointer)(*in_ECX, iVar2, &lpDistanceToMoveHigh, uVar1);\n    if ((iVar2 != -1) || (iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar3 == 0)) {\n        in_EDX[1] = lpDistanceToMoveHigh;\n        *in_EDX = iVar2;\n        iVar3 = 0;\n    }\n    return iVar3;\n}\n",
        "token_count": 286
    },
    "00422940": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00422940(uint32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h, uint32_t *arg_14h, int32_t *arg_18h, int32_t *arg_1ch, \n            code **arg_20h, uint arg_24h)\n\n{\n    uint32_t arg_18h_00;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int32_t in_EDX;\n    int32_t iVar4;\n    ulong uVar5;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = *(*(in_ECX + 0x3c) + arg_8h * 4);\n    *arg_18h = 0;\n    var_8h = 0;\n    *arg_1ch = 0;\n    if (var_14h == -1) {\n        (*arg_20h[1])(arg_20h, *arg_10h);\n        *arg_ch = -1;\n        *arg_10h = 0;\n        *arg_14h = 0;\n        return 0;\n    }\n    if ((*arg_10h == 0) || (*arg_ch != var_14h)) {\n        var_4h = *(in_ECX + 0xc) + var_14h * 0x28;\n        var_10h = in_EDX;\n        uVar5 = fcn.00420380();\n        var_1ch = uVar5 >> 0x20;\n        arg_18h_00 = uVar5;\n        iVar1 = *(var_14h * 4 + *(in_ECX + 0x30));\n        uVar2 = *(*(in_ECX + 0x34) + iVar1 * 8);\n        var_ch = uVar2 + *(in_ECX + 0x28);\n        var_8h = *(*(in_ECX + 0x34) + 4 + iVar1 * 8) + *(in_ECX + 0x2c) + CARRY4(uVar2, *(in_ECX + 0x28));\n        if (var_1ch != 0) {\n            return 2;\n        }\n        *arg_ch = var_14h;\n        (*arg_20h[1])(arg_20h, *arg_10h);\n        *arg_10h = 0;\n        var_20h = var_ch;\n        var_1ch = var_8h;\n        iVar1 = (**(var_10h + 0xc))(var_10h, &var_20h, 0);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        *arg_14h = arg_18h_00;\n        if (arg_18h_00 != 0) {\n            iVar1 = (**arg_20h)(arg_20h, arg_18h_00);\n            *arg_10h = iVar1;\n            if (iVar1 == 0) {\n                return 2;\n            }\n        }\n        var_8h = fcn.00423990(var_10h, var_ch, var_8h, *arg_10h, arg_18h_00, arg_24h);\n        if (var_8h != 0) {\n            return var_8h;\n        }\n        if ((*(var_4h + 0x1c) != 0) && (uVar2 = (**0x4b96e4)(arg_18h_00, 0x4ba960),  ~uVar2 != *(var_4h + 0x20))) {\n            return 3;\n        }\n    }\n    iVar1 = arg_8h * 0x20 + *(in_ECX + 0x10);\n    *arg_18h = 0;\n    uVar2 = *(*(in_ECX + 0x38) + var_14h * 4);\n    if (uVar2 < arg_8h) {\n        iVar3 = uVar2 << 5;\n        iVar4 = arg_8h - uVar2;\n        do {\n            iVar3 = iVar3 + 0x20;\n            *arg_18h = *arg_18h + *(*(in_ECX + 0x10) + -0x18 + iVar3);\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    iVar3 = *(iVar1 + 8);\n    *arg_1ch = iVar3;\n    if (iVar3 + *arg_18h < *arg_14h || iVar3 + *arg_18h == *arg_14h) {\n        if (*(iVar1 + 0x1b) == '\\0') {\n            return var_8h;\n        }\n        uVar2 = (**0x4b96e4)(iVar3, 0x4ba960);\n        if (~uVar2 != *(iVar1 + 0x10)) {\n            var_8h = 3;\n        }\n        return var_8h;\n    }\n    return 0xb;\n}\n",
        "token_count": 1209
    },
    "004232e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004232e0(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if ((((*param_1 == 1) && (param_1[1] == 1)) && (param_1[3] == 0)) &&\n       (((iVar1 = param_1[2],  iVar1 == 0 || (iVar1 == 0x21)) || (iVar1 == 0x30101)))) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 116
    },
    "00423320": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00423320(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    \n    piVar1 = param_1[4];\n    if ((((piVar1 != NULL) && (piVar1 < 0x5)) && (piVar2 = *param_1,  *piVar2 == 1)) &&\n       (((piVar2[1] == 1 && (piVar2[3] == 0)) &&\n        ((iVar3 = piVar2[2],  iVar3 == 0 || ((iVar3 == 0x21 || (iVar3 == 0x30101)))))))) {\n        if (piVar1 == 0x1) {\n            if (((param_1[6] == 0x1) && (*param_1[2] == 0)) && (param_1[5] == NULL)) {\n                return 0;\n            }\n        }\n        else if (piVar1 == 0x2) {\n            if ((((((piVar2[9] == 0) && (piVar2[6] == 1)) && (piVar2[7] == 1)) &&\n                 ((param_1[6] == 0x1 && (*param_1[2] == 0)))) &&\n                ((param_1[5] == 0x1 && ((*param_1[1] == 1 && (param_1[1][1] == 0)))))) &&\n               ((piVar2[8] == 0x3030103 || (piVar2[8] == 0x3030501)))) {\n                return 0;\n            }\n        }\n        else if (((((piVar1 == 0x4) && (iVar3 = fcn.004232e0(),  iVar3 != 0)) &&\n                  (uVar4 = fcn.004232e0(),  iVar3 = uVar4 >> 0x20,  uVar4 != 0)) &&\n                 (((*(iVar3 + 0x50) == 0x303011b && (*(iVar3 + 0x54) == 0)) &&\n                  (((*(iVar3 + 0x48) == 4 && ((*(iVar3 + 0x4c) == 1 && (param_1[6] == 0x4)))) &&\n                   (piVar1 = param_1[2],  *piVar1 == 2)))))) &&\n                ((((((piVar1[1] == 6 && (piVar1[2] == 1)) && (piVar1[3] == 0)) &&\n                   ((param_1[5] == 0x3 && (piVar1 = param_1[1],  *piVar1 == 5)))) && (piVar1[1] == 0)) &&\n                 (((piVar1[2] == 4 && (piVar1[3] == 1)) && ((piVar1[4] == 3 && (piVar1[5] == 2)))))))) {\n            return 0;\n        }\n    }\n    return 4;\n}\n",
        "token_count": 705
    },
    "00424490": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00424490(uint8_t *arg_8h)\n\n{\n    uchar *puVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint *in_ECX;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    uint32_t in_EDX;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint16_t *puVar16;\n    int32_t iVar17;\n    int32_t iVar18;\n    uchar *puVar19;\n    uint32_t uVar20;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    uint32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    uint var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint8_t *var_4h;\n    \n    iVar3 = in_ECX[4];\n    uVar4 = in_ECX[2];\n    var_24h = in_ECX[0xe];\n    var_2ch = in_ECX[0xf];\n    var_30h = in_ECX[0x10];\n    var_3ch = in_ECX[0x11];\n    var_10h = in_ECX[0xd];\n    uVar5 = in_ECX[1];\n    var_4h = in_ECX[6];\n    var_1ch = in_ECX[0xb];\n    var_14h = in_ECX[9];\n    uVar6 = *in_ECX;\n    iVar7 = in_ECX[5];\n    uVar8 = in_ECX[10];\n    uVar9 = in_ECX[0xc];\n    var_20h = in_ECX[7];\n    var_8h = in_ECX[8];\n    var_18h = 0;\n    do {\n        uVar15 = var_3ch;\n        uVar14 = var_1ch & (1 << (uVar4 & 0x1f)) - 1U;\n        puVar16 = iVar3 + (var_10h * 0x10 + uVar14) * 2;\n        uVar2 = *puVar16;\n        uVar10 = var_8h;\n        uVar20 = var_20h;\n        if (var_20h < 0x1000000) {\n            uVar20 = var_20h << 8;\n            uVar10 = var_8h << 8 | *var_4h;\n            var_4h = var_4h + 1;\n        }\n        var_20h = (uVar20 >> 0xb) * uVar2;\n        if (uVar10 < var_20h) {\n            *puVar16 = (0x800 - uVar2 >> 5) + uVar2;\n            iVar18 = iVar3 + 0xe6c;\n            if ((uVar9 != 0) || (var_1ch != 0)) {\n                uVar15 = var_14h;\n                if (var_14h == 0) {\n                    uVar15 = uVar8;\n                }\n                var_48h._0_1_ = uVar6;\n                iVar18 = iVar18 + ((*((uVar15 - 1) + iVar7) >> (8 - var_48h & 0x1f)) +\n                                  ((var_1ch & (1 << (uVar5 & 0x1f)) - 1U) << (var_48h & 0x1f))) * 0x600;\n            }\n            if (var_10h < 7) {\n                uVar14 = 3;\n                if (var_10h < 4) {\n                    uVar14 = var_10h;\n                }\n                uVar15 = 1;\n                do {\n                    uVar20 = uVar15 * 2;\n                    uVar2 = *(uVar20 + iVar18);\n                    if (var_20h < 0x1000000) {\n                        var_20h = var_20h << 8;\n                        uVar10 = uVar10 << 8 | *var_4h;\n                        var_4h = var_4h + 1;\n                    }\n                    uVar11 = (var_20h >> 0xb) * uVar2;\n                    if (uVar10 < uVar11) {\n                        *(uVar20 + iVar18) = (0x800 - uVar2 >> 5) + uVar2;\n                        uVar15 = uVar20;\n                        var_20h = uVar11;\n                    }\n                    else {\n                        var_20h = var_20h - uVar11;\n                        uVar10 = uVar10 - uVar11;\n                        uVar15 = uVar20 + 1;\n                        *(uVar20 + iVar18) = uVar2 - (uVar2 >> 5);\n                    }\n                    var_8h = uVar10;\n                } while (uVar15 < 0x100);\n            }\n            else {\n                uVar20 = *(((-(var_14h < var_24h) & uVar8) - var_24h) + in_ECX[5] + var_14h);\n                uVar14 = (-(var_10h < 10) & 0xfffffffd) + 6;\n                var_8h = 0x100;\n                uVar15 = 1;\n                uVar11 = var_8h;\n                do {\n                    var_8h = uVar11;\n                    uVar20 = uVar20 * 2;\n                    uVar11 = var_8h & uVar20;\n                    puVar16 = iVar18 + (uVar11 + var_8h + uVar15) * 2;\n                    uVar2 = *puVar16;\n                    if (var_20h < 0x1000000) {\n                        var_20h = var_20h << 8;\n                        uVar10 = uVar10 << 8 | *var_4h;\n                        var_4h = var_4h + 1;\n                    }\n                    uVar12 = (var_20h >> 0xb) * uVar2;\n                    if (uVar10 < uVar12) {\n                        uVar15 = uVar15 * 2;\n                        *puVar16 = (0x800 - uVar2 >> 5) + uVar2;\n                        uVar11 = ~uVar11;\n                        var_20h = uVar12;\n                    }\n                    else {\n                        var_20h = var_20h - uVar12;\n                        uVar10 = uVar10 - uVar12;\n                        uVar15 = uVar15 * 2 + 1;\n                        *puVar16 = uVar2 - (uVar2 >> 5);\n                    }\n                    uVar11 = var_8h & uVar11;\n                    var_8h = uVar10;\n                } while (uVar15 < 0x100);\n            }\n            var_10h = var_10h - uVar14;\n            *(var_14h + iVar7) = uVar15;\n            var_1ch = var_1ch + 1;\n            var_14h = var_14h + 1;\n        }\n        else {\n            uVar20 = uVar20 - var_20h;\n            var_8h = uVar10 - var_20h;\n            *puVar16 = uVar2 - (uVar2 >> 5);\n            uVar2 = *(iVar3 + 0x180 + var_10h * 2);\n            if (uVar20 < 0x1000000) {\n                uVar20 = uVar20 * 0x100;\n                var_8h = var_8h * 0x100 | *var_4h;\n                var_4h = var_4h + 1;\n            }\n            uVar10 = (uVar20 >> 0xb) * uVar2;\n            if (var_8h < uVar10) {\n                var_10h = var_10h + 0xc;\n                *(iVar3 + 0x168 + var_10h * 2) = (0x800 - uVar2 >> 5) + uVar2;\n                puVar16 = iVar3 + 0x664;\n            }\n            else {\n                uVar20 = uVar20 - uVar10;\n                var_8h = var_8h - uVar10;\n                *(iVar3 + 0x180 + var_10h * 2) = uVar2 - (uVar2 >> 5);\n                if ((uVar9 == 0) && (var_1ch == 0)) {\n                    return 1;\n                }\n                uVar2 = *(iVar3 + 0x198 + var_10h * 2);\n                if (uVar20 < 0x1000000) {\n                    uVar20 = uVar20 * 0x100;\n                    var_8h = var_8h * 0x100 | *var_4h;\n                    var_4h = var_4h + 1;\n                }\n                uVar10 = (uVar20 >> 0xb) * uVar2;\n                if (var_8h < uVar10) {\n                    *(iVar3 + 0x198 + var_10h * 2) = (0x800 - uVar2 >> 5) + uVar2;\n                    puVar16 = iVar3 + ((var_10h + 0xf) * 0x10 + uVar14) * 2;\n                    uVar2 = *puVar16;\n                    if (uVar10 < 0x1000000) {\n                        uVar10 = uVar10 * 0x100;\n                        var_8h = var_8h << 8 | *var_4h;\n                        var_4h = var_4h + 1;\n                    }\n                    var_20h = (uVar10 >> 0xb) * uVar2;\n                    if (var_8h < var_20h) {\n                        *puVar16 = (0x800 - uVar2 >> 5) + uVar2;\n                        *(var_14h + iVar7) = *(((-(var_14h < var_24h) & uVar8) - var_24h) + var_14h + iVar7);\n                        var_1ch = var_1ch + 1;\n                        var_10h = (-(var_10h < 7) & 0xfffffffe) + 0xb;\n                        var_14h = var_14h + 1;\n                        goto code_r0x004250a4;\n                    }\n                    uVar10 = uVar10 - var_20h;\n                    var_8h = var_8h - var_20h;\n                    *puVar16 = uVar2 - (uVar2 >> 5);\n                }\n                else {\n                    uVar20 = uVar20 - uVar10;\n                    var_8h = var_8h - uVar10;\n                    *(iVar3 + 0x198 + var_10h * 2) = uVar2 - (uVar2 >> 5);\n                    uVar2 = *(iVar3 + 0x1b0 + var_10h * 2);\n                    if (uVar20 < 0x1000000) {\n                        uVar20 = uVar20 * 0x100;\n                        var_8h = var_8h * 0x100 | *var_4h;\n                        var_4h = var_4h + 1;\n                    }\n                    uVar10 = (uVar20 >> 0xb) * uVar2;\n                    if (var_8h < uVar10) {\n                        *(iVar3 + 0x1b0 + var_10h * 2) = (0x800 - uVar2 >> 5) + uVar2;\n                        uVar15 = var_2ch;\n                    }\n                    else {\n                        uVar20 = uVar20 - uVar10;\n                        var_8h = var_8h - uVar10;\n                        *(iVar3 + 0x1b0 + var_10h * 2) = uVar2 - (uVar2 >> 5);\n                        uVar2 = *(iVar3 + 0x1c8 + var_10h * 2);\n                        if (uVar20 < 0x1000000) {\n                            uVar20 = uVar20 * 0x100;\n                            var_8h = var_8h * 0x100 | *var_4h;\n                            var_4h = var_4h + 1;\n                        }\n                        uVar11 = (uVar20 >> 0xb) * uVar2;\n                        if (var_8h < uVar11) {\n                            *(iVar3 + 0x1c8 + var_10h * 2) = (0x800 - uVar2 >> 5) + uVar2;\n                            uVar15 = var_30h;\n                            uVar10 = uVar11;\n                        }\n                        else {\n                            uVar10 = uVar20 - uVar11;\n                            var_8h = var_8h - uVar11;\n                            *(iVar3 + 0x1c8 + var_10h * 2) = uVar2 - (uVar2 >> 5);\n                            var_3ch = var_30h;\n                        }\n                        var_30h = var_2ch;\n                    }\n                    var_2ch = var_24h;\n                    var_24h = uVar15;\n                }\n                var_10h = (-(var_10h < 7) & 0xfffffffd) + 0xb;\n                puVar16 = iVar3 + 0xa68;\n            }\n            uVar15 = var_30h;\n            uVar2 = *puVar16;\n            if (uVar10 < 0x1000000) {\n                uVar10 = uVar10 << 8;\n                var_8h = var_8h << 8 | *var_4h;\n                var_4h = var_4h + 1;\n            }\n            var_20h = (uVar10 >> 0xb) * uVar2;\n            if (var_8h < var_20h) {\n                *puVar16 = (0x800 - uVar2 >> 5) + uVar2;\n                puVar16 = puVar16 + uVar14 * 8 + 2;\n                var_40h = 0;\n                uVar10 = 8;\n            }\n            else {\n                uVar10 = uVar10 - var_20h;\n                var_8h = var_8h - var_20h;\n                *puVar16 = uVar2 - (uVar2 >> 5);\n                uVar2 = puVar16[1];\n                if (uVar10 < 0x1000000) {\n                    uVar10 = uVar10 * 0x100;\n                    var_8h = var_8h * 0x100 | *var_4h;\n                    var_4h = var_4h + 1;\n                }\n                uVar20 = (uVar10 >> 0xb) * uVar2;\n                if (var_8h < uVar20) {\n                    puVar16[1] = (0x800 - uVar2 >> 5) + uVar2;\n                    puVar16 = puVar16 + uVar14 * 8 + 0x82;\n                    var_40h = 8;\n                    uVar10 = 8;\n                    var_20h = uVar20;\n                }\n                else {\n                    var_20h = uVar10 - uVar20;\n                    var_8h = var_8h - uVar20;\n                    puVar16[1] = uVar2 - (uVar2 >> 5);\n                    puVar16 = puVar16 + 0x102;\n                    var_40h = 0x10;\n                    uVar10 = 0x100;\n                }\n            }\n            uVar20 = 1;\n            do {\n                uVar14 = uVar20 * 2;\n                uVar2 = puVar16[uVar20];\n                if (var_20h < 0x1000000) {\n                    var_20h = var_20h << 8;\n                    var_8h = var_8h << 8 | *var_4h;\n                    var_4h = var_4h + 1;\n                }\n                uVar11 = (var_20h >> 0xb) * uVar2;\n                if (var_8h < uVar11) {\n                    puVar16[uVar20] = (0x800 - uVar2 >> 5) + uVar2;\n                    var_20h = uVar11;\n                }\n                else {\n                    var_20h = var_20h - uVar11;\n                    var_8h = var_8h - uVar11;\n                    puVar16[uVar20] = uVar2 - (uVar2 >> 5);\n                    uVar14 = uVar14 + 1;\n                }\n                uVar20 = uVar14;\n            } while (uVar14 < uVar10);\n            uVar14 = uVar14 + (var_40h - uVar10);\n            if (0xb < var_10h) {\n                uVar10 = 3;\n                if (uVar14 < 4) {\n                    uVar10 = uVar14;\n                }\n                iVar18 = iVar3 + 0x360 + uVar10 * 0x80;\n                uVar2 = *(iVar18 + 2);\n                if (var_20h < 0x1000000) {\n                    var_8h = var_8h << 8 | *var_4h;\n                    var_20h = var_20h << 8;\n                    var_4h = var_4h + 1;\n                }\n                uVar10 = (var_20h >> 0xb) * uVar2;\n                if (var_8h < uVar10) {\n                    *(iVar18 + 2) = (0x800 - uVar2 >> 5) + uVar2;\n                    iVar13 = 2;\n                }\n                else {\n                    var_8h = var_8h - uVar10;\n                    uVar10 = var_20h - uVar10;\n                    *(iVar18 + 2) = uVar2 - (uVar2 >> 5);\n                    iVar13 = 3;\n                }\n                iVar13 = iVar13 * 2;\n                uVar2 = *(iVar13 + iVar18);\n                if (uVar10 < 0x1000000) {\n                    var_8h = var_8h << 8 | *var_4h;\n                    uVar10 = uVar10 << 8;\n                    var_4h = var_4h + 1;\n                }\n                uVar20 = (uVar10 >> 0xb) * uVar2;\n                if (var_8h < uVar20) {\n                    *(iVar13 + iVar18) = (0x800 - uVar2 >> 5) + uVar2;\n                }\n                else {\n                    var_8h = var_8h - uVar20;\n                    uVar20 = uVar10 - uVar20;\n                    *(iVar13 + iVar18) = uVar2 - (uVar2 >> 5);\n                    iVar13 = iVar13 + 1;\n                }\n                iVar13 = iVar13 * 2;\n                uVar2 = *(iVar13 + iVar18);\n                if (uVar20 < 0x1000000) {\n                    var_8h = var_8h << 8 | *var_4h;\n                    uVar20 = uVar20 << 8;\n                    var_4h = var_4h + 1;\n                }\n                uVar10 = (uVar20 >> 0xb) * uVar2;\n                if (var_8h < uVar10) {\n                    *(iVar13 + iVar18) = (0x800 - uVar2 >> 5) + uVar2;\n                }\n                else {\n                    var_8h = var_8h - uVar10;\n                    uVar10 = uVar20 - uVar10;\n                    *(iVar13 + iVar18) = uVar2 - (uVar2 >> 5);\n                    iVar13 = iVar13 + 1;\n                }\n                iVar13 = iVar13 * 2;\n                uVar2 = *(iVar13 + iVar18);\n                if (uVar10 < 0x1000000) {\n                    var_8h = var_8h << 8 | *var_4h;\n                    uVar10 = uVar10 << 8;\n                    var_4h = var_4h + 1;\n                }\n                uVar20 = (uVar10 >> 0xb) * uVar2;\n                if (var_8h < uVar20) {\n                    *(iVar13 + iVar18) = (0x800 - uVar2 >> 5) + uVar2;\n                }\n                else {\n                    var_8h = var_8h - uVar20;\n                    uVar20 = uVar10 - uVar20;\n                    *(iVar13 + iVar18) = uVar2 - (uVar2 >> 5);\n                    iVar13 = iVar13 + 1;\n                }\n                iVar13 = iVar13 * 2;\n                uVar2 = *(iVar13 + iVar18);\n                if (uVar20 < 0x1000000) {\n                    var_8h = var_8h << 8 | *var_4h;\n                    uVar20 = uVar20 << 8;\n                    var_4h = var_4h + 1;\n                }\n                uVar10 = (uVar20 >> 0xb) * uVar2;\n                if (var_8h < uVar10) {\n                    *(iVar13 + iVar18) = (0x800 - uVar2 >> 5) + uVar2;\n                }\n                else {\n                    var_8h = var_8h - uVar10;\n                    uVar10 = uVar20 - uVar10;\n                    *(iVar13 + iVar18) = uVar2 - (uVar2 >> 5);\n                    iVar13 = iVar13 + 1;\n                }\n                iVar13 = iVar13 * 2;\n                uVar2 = *(iVar13 + iVar18);\n                if (uVar10 < 0x1000000) {\n                    var_8h = var_8h << 8 | *var_4h;\n                    uVar10 = uVar10 << 8;\n                    var_4h = var_4h + 1;\n                }\n                uVar20 = (uVar10 >> 0xb) * uVar2;\n                if (var_8h < uVar20) {\n                    *(iVar13 + iVar18) = (0x800 - uVar2 >> 5) + uVar2;\n                }\n                else {\n                    var_8h = var_8h - uVar20;\n                    uVar20 = uVar10 - uVar20;\n                    *(iVar13 + iVar18) = uVar2 - (uVar2 >> 5);\n                    iVar13 = iVar13 + 1;\n                }\n                uVar10 = iVar13 - 0x40;\n                var_20h = uVar20;\n                if (3 < uVar10) {\n                    iVar18 = (uVar10 >> 1) - 1;\n                    uVar11 = uVar10 & 1 | 2;\n                    if (uVar10 < 0xe) {\n                        uVar11 = uVar11 << (iVar18 & 0x1f);\n                        var_3ch = 1;\n                        iVar17 = iVar3 + (uVar11 - uVar10) * 2 + 0x55e;\n                        iVar13 = 1;\n                        uVar10 = uVar11;\n                        do {\n                            var_20h = iVar18;\n                            iVar18 = iVar13 * 2;\n                            uVar2 = *(iVar18 + iVar17);\n                            if (uVar20 < 0x1000000) {\n                                uVar20 = uVar20 << 8;\n                                var_8h = var_8h << 8 | *var_4h;\n                                var_4h = var_4h + 1;\n                            }\n                            uVar11 = (uVar20 >> 0xb) * uVar2;\n                            if (var_8h < uVar11) {\n                                *(iVar18 + iVar17) = (0x800 - uVar2 >> 5) + uVar2;\n                                iVar13 = iVar18;\n                                uVar20 = uVar11;\n                            }\n                            else {\n                                uVar20 = uVar20 - uVar11;\n                                var_8h = var_8h - uVar11;\n                                iVar13 = iVar18 + 1;\n                                *(iVar18 + iVar17) = uVar2 - (uVar2 >> 5);\n                                uVar10 = uVar10 | var_3ch;\n                            }\n                            var_3ch = var_3ch * 2;\n                            iVar18 = var_20h + -1;\n                            var_20h = uVar20;\n                        } while (iVar18 != 0);\n                    }\n                    else {\n                        iVar18 = (uVar10 >> 1) - 5;\n                        do {\n                            if (uVar20 < 0x1000000) {\n                                uVar20 = uVar20 << 8;\n                                var_8h = var_8h << 8 | *var_4h;\n                                var_4h = var_4h + 1;\n                            }\n                            uVar20 = uVar20 >> 1;\n                            uVar10 = var_8h - uVar20 >> 0x1f;\n                            uVar11 = uVar11 * 2 + 1 + uVar10;\n                            var_8h = (var_8h - uVar20) + (uVar10 & uVar20);\n                            iVar18 = iVar18 + -1;\n                        } while (iVar18 != 0);\n                        uVar10 = uVar11 * 0x10;\n                        uVar2 = *(iVar3 + 0x646);\n                        if (uVar20 < 0x1000000) {\n                            var_8h = var_8h * 0x100 | *var_4h;\n                            uVar20 = uVar20 << 8;\n                            var_4h = var_4h + 1;\n                        }\n                        uVar11 = (uVar20 >> 0xb) * uVar2;\n                        if (var_8h < uVar11) {\n                            *(iVar3 + 0x646) = (0x800 - uVar2 >> 5) + uVar2;\n                            iVar18 = 2;\n                        }\n                        else {\n                            var_8h = var_8h - uVar11;\n                            uVar11 = uVar20 - uVar11;\n                            *(iVar3 + 0x646) = uVar2 - (uVar2 >> 5);\n                            iVar18 = 3;\n                            uVar10 = uVar10 | 1;\n                        }\n                        iVar18 = iVar18 * 2;\n                        uVar2 = *(iVar18 + 0x644 + iVar3);\n                        if (uVar11 < 0x1000000) {\n                            var_8h = var_8h << 8 | *var_4h;\n                            uVar11 = uVar11 << 8;\n                            var_4h = var_4h + 1;\n                        }\n                        uVar20 = (uVar11 >> 0xb) * uVar2;\n                        if (var_8h < uVar20) {\n                            *(iVar18 + 0x644 + iVar3) = (0x800 - uVar2 >> 5) + uVar2;\n                            iVar13 = iVar18;\n                        }\n                        else {\n                            var_8h = var_8h - uVar20;\n                            uVar20 = uVar11 - uVar20;\n                            iVar13 = iVar18 + 1;\n                            *(iVar18 + 0x644 + iVar3) = uVar2 - (uVar2 >> 5);\n                            uVar10 = uVar10 | 2;\n                        }\n                        iVar13 = iVar13 * 2;\n                        uVar2 = *(iVar13 + 0x644 + iVar3);\n                        if (uVar20 < 0x1000000) {\n                            var_8h = var_8h << 8 | *var_4h;\n                            uVar20 = uVar20 << 8;\n                            var_4h = var_4h + 1;\n                        }\n                        uVar11 = (uVar20 >> 0xb) * uVar2;\n                        if (var_8h < uVar11) {\n                            *(iVar13 + 0x644 + iVar3) = (0x800 - uVar2 >> 5) + uVar2;\n                            iVar18 = iVar13;\n                        }\n                        else {\n                            var_8h = var_8h - uVar11;\n                            uVar11 = uVar20 - uVar11;\n                            iVar18 = iVar13 + 1;\n                            *(iVar13 + 0x644 + iVar3) = uVar2 - (uVar2 >> 5);\n                            uVar10 = uVar10 | 4;\n                        }\n                        uVar2 = *(iVar3 + 0x644 + iVar18 * 2);\n                        if (uVar11 < 0x1000000) {\n                            var_8h = var_8h << 8 | *var_4h;\n                            uVar11 = uVar11 << 8;\n                            var_4h = var_4h + 1;\n                        }\n                        var_20h = (uVar11 >> 0xb) * uVar2;\n                        if (var_8h < var_20h) {\n                            *(iVar3 + 0x644 + iVar18 * 2) = (0x800 - uVar2 >> 5) + uVar2;\n                        }\n                        else {\n                            var_8h = var_8h - var_20h;\n                            var_20h = uVar11 - var_20h;\n                            *(iVar3 + 0x644 + iVar18 * 2) = uVar2 - (uVar2 >> 5);\n                            uVar10 = uVar10 | 8;\n                        }\n                        if (uVar10 == 0xffffffff) {\n                            var_18h = uVar14 + 0x112;\n                            var_10h = var_10h - 0xc;\ncode_r0x004250b8:\n                            if (var_20h < 0x1000000) {\n                                var_20h = var_20h << 8;\n                                var_8h = var_8h << 8 | *var_4h;\n                                var_4h = var_4h + 1;\n                            }\n                            in_ECX[6] = var_4h;\n                            in_ECX[8] = var_8h;\n                            in_ECX[0xb] = var_1ch;\n                            in_ECX[7] = var_20h;\n                            in_ECX[0x12] = var_18h;\n                            in_ECX[9] = var_14h;\n                            in_ECX[0xe] = var_24h;\n                            in_ECX[0xf] = var_2ch;\n                            in_ECX[0x10] = var_30h;\n                            in_ECX[0x11] = var_3ch;\n                            in_ECX[0xd] = var_10h;\n                            return 0;\n                        }\n                    }\n                }\n                var_30h = var_2ch;\n                var_2ch = var_24h;\n                var_24h = uVar10 + 1;\n                var_3ch = uVar15;\n                uVar15 = uVar9;\n                if (uVar9 == 0) {\n                    uVar15 = var_1ch;\n                }\n                if (uVar15 <= uVar10) {\n                    return 1;\n                }\n                var_10h = (-(var_10h < 0x13) & 0xfffffffd) + 10;\n            }\n            uVar14 = uVar14 + 2;\n            if (in_EDX == var_14h) {\n                return 1;\n            }\n            uVar15 = uVar14;\n            if (in_EDX - var_14h < uVar14) {\n                uVar15 = in_EDX - var_14h;\n            }\n            var_1ch = var_1ch + uVar15;\n            var_18h = uVar14 - uVar15;\n            uVar10 = ((-(var_14h < var_24h) & uVar8) - var_24h) + var_14h;\n            if (uVar8 < uVar10 + uVar15) {\n                do {\n                    puVar1 = uVar10 + iVar7;\n                    uVar10 = uVar10 + 1;\n                    *(var_14h + iVar7) = *puVar1;\n                    var_14h = var_14h + 1;\n                    if (uVar10 == uVar8) {\n                        uVar10 = 0;\n                    }\n                    uVar15 = uVar15 - 1;\n                } while (uVar15 != 0);\n            }\n            else {\n                puVar19 = var_14h + iVar7;\n                iVar18 = uVar10 - var_14h;\n                var_14h = var_14h + uVar15;\n                puVar1 = puVar19 + uVar15;\n                do {\n                    *puVar19 = puVar19[iVar18];\n                    puVar19 = puVar19 + 1;\n                } while (puVar19 != puVar1);\n            }\n        }\ncode_r0x004250a4:\n        if ((in_EDX <= var_14h) || (arg_8h <= var_4h)) goto code_r0x004250b8;\n    } while( true );\n}\n",
        "token_count": 7714
    },
    "00425c70": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00425c70(uint dwShareMode, uint lpSecurityAttributes, uint32_t arg_10h, uint dwFlagsAndAttributes)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    int32_t in_EDX;\n    char16_t *pcVar3;\n    uint uVar4;\n    uint uVar5;\n    char *pcVar6;\n    uint arg_1ch;\n    \n    if (in_EDX == -0x80000000) {\n        if ((arg_10h & 3) != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)();\n            if (iVar1 == -1) {\n                iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)();\n                return iVar1;\n            }\n            (*_sym.imp.KERNEL32.dll_SetFileTime)(iVar1, 0, &stack0xffffffd4, &stack0xffffffd4);\n            return iVar1;\n        }\n    }\n    else if ((in_EDX == 0x40000000) && ((arg_10h == 2 || (arg_10h == 4)))) goto code_r0x00425d80;\n    pcVar6 = \"CreateFileWNonInvasive() not use FILE_WRITE_ATTRIBUTES lpwFileName=%S\";\n    uVar5 = 0x2000040;\n    uVar4 = 0x5a;\n    pcVar3 = L\"FileUtility.cpp\";\n    uVar2 = fcn.0042c180();\n    fcn.0042c3c0(uVar2, pcVar3, uVar4, uVar5, pcVar6, arg_1ch);\n    pcVar6 = \"CreateFileWNonInvasive() not use FILE_WRITE_ATTRIBUTES dwDesiredAccess=%d\";\n    uVar5 = 0x2000040;\n    uVar4 = 0x5b;\n    pcVar3 = L\"FileUtility.cpp\";\n    uVar2 = fcn.0042c180(extraout_ECX);\n    fcn.0042c3c0(uVar2, pcVar3, uVar4, uVar5, pcVar6, in_EDX);\n    pcVar6 = \"CreateFileWNonInvasive() not use FILE_WRITE_ATTRIBUTES dwCreationDisposition=%d\";\n    uVar5 = 0x2000040;\n    uVar4 = 0x5c;\n    pcVar3 = L\"FileUtility.cpp\";\n    uVar2 = fcn.0042c180(extraout_ECX_00);\n    fcn.0042c3c0(uVar2, pcVar3, uVar4, uVar5, pcVar6, arg_10h);\ncode_r0x00425d80:\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)();\n    return iVar1;\n}\n",
        "token_count": 636
    },
    "00425da0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00425da0(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *in_ECX;\n    uint extraout_ECX;\n    int32_t in_EDX;\n    int32_t arg_10h;\n    code *pcVar5;\n    int32_t *in_FS_OFFSET;\n    char16_t *pcVar6;\n    uint uVar7;\n    uint uVar8;\n    char *pcVar9;\n    uint *puVar10;\n    uint arg_14h;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    uint var_44h;\n    uint32_t var_30h;\n    uint *lpPathName;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x48a128;\n    var_ch = *in_FS_OFFSET;\n    var_14h = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_18h = 7;\n    var_1ch = 0;\n    lpPathName = lpPathName & 0xffff0000;\n    var_4h = 0;\n    var_48h = 0;\n    arg_10h = -1;\n    pcVar5 = _sym.imp.KERNEL32.dll_GetLastError;\n    var_4ch = in_EDX;\n    do {\n        if (*0x4a0210 == 0) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = fcn.00453054(0x4a0210);\n        }\n        arg_14h = 0x4a0210;\n        arg_10h = fcn.004098ea(0x4a0210, arg_10h + 1, uVar1);\n        if (arg_10h == -1) {\n            if (&lpPathName != in_ECX) {\n                fcn.00402450(in_ECX, 0, 0xffffffff);\n            }\n        }\n        else {\n            piVar2 = fcn.004085ca(&var_44h, 0, arg_10h);\n            if (&lpPathName != piVar2) {\n                if (7 < var_18h) {\n                    fcn.00452a07(lpPathName);\n                }\n                var_18h = 7;\n                var_1ch = 0;\n                lpPathName = lpPathName & 0xffff0000;\n                if (piVar2[5] < 8) {\n                    if (piVar2[4] + 1 != 0) {\n                        fcn.004530c0(&lpPathName, piVar2, (piVar2[4] + 1) * 2);\n                    }\n                }\n                else {\n                    lpPathName = *piVar2;\n                    *piVar2 = 0;\n                }\n                var_1ch = piVar2[4];\n                var_18h = piVar2[5];\n                piVar2[5] = 7;\n                piVar2[4] = 0;\n                *piVar2 = 0;\n            }\n            pcVar5 = _sym.imp.KERNEL32.dll_GetLastError;\n            if (7 < var_30h) {\n                fcn.00452a07(var_44h);\n                pcVar5 = _sym.imp.KERNEL32.dll_GetLastError;\n            }\n        }\n        if ((var_48h == 0) && (var_48h = 1,  var_1ch != 0)) {\n            if (var_1ch <= var_1ch - 1) {\n                fcn.0044e819(\"invalid string position\");\n                break;\n            }\n            puVar10 = &lpPathName;\n            if (7 < var_18h) {\n                puVar10 = lpPathName;\n            }\n            if (*(puVar10 + (var_1ch - 1) * 2) != 0x3a) goto code_r0x00425f15;\n        }\n        else {\ncode_r0x00425f15:\n            if (arg_8h == 0) {\n                puVar10 = NULL;\ncode_r0x00425f7a:\n                puVar4 = &lpPathName;\n                if (7 < var_18h) {\n                    puVar4 = lpPathName;\n                }\n                iVar3 = (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(puVar4, puVar10);\n                if (iVar3 != 0) goto code_r0x00425fce;\n            }\n            else {\n                var_58h = 0xc;\n                var_50h = 0;\n                if ((*0x10 != 0x5c) &&\n                   (iVar3 = (*_sym.imp.ADVAPI32.dll_ConvertStringSecurityDescriptorToSecurityDescriptorW)\n                                      (L\"D:(D;OICI;GA;;;BG)(D;OICI;GA;;;AN)(A;OICI;GR;;;AU)(A;OICI;GA;;;BA)\", 1, \n                                       &var_54h, 0),  iVar3 != 0)) {\n                    puVar10 = &var_58h;\n                    goto code_r0x00425f7a;\n                }\n                uVar1 = (*pcVar5)();\n                pcVar9 = \"CreateDACL() Error=%lu\";\n                arg_14h = 0x2000002;\n                uVar8 = 0xbf;\n                pcVar6 = L\"FileUtility.cpp\";\n                uVar7 = fcn.0042c180(extraout_ECX);\n                fcn.0042c3c0(uVar7, pcVar6, uVar8, arg_14h, pcVar9, uVar1);\n            }\n            iVar3 = (*pcVar5)();\n            if (iVar3 != 0xb7) {\n                puVar10 = &lpPathName;\n                if (7 < var_18h) {\n                    puVar10 = lpPathName;\n                }\n                pcVar9 = \"CreateDirectoryW(%S) error=%lu\";\n                uVar8 = 0x2000004;\n                uVar7 = 0xd0;\n                pcVar6 = L\"FileUtility.cpp\";\n                uVar1 = fcn.0042c180();\n                fcn.0042c3c0(uVar1, pcVar6, uVar7, uVar8, pcVar9, puVar10);\n                if (var_4ch == 0) break;\n            }\n        }\ncode_r0x00425fce:\n    } while (arg_10h != -1);\n    if (7 < var_18h) {\n        fcn.00452a07(lpPathName);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(arg_14h);\n    return;\n}\n",
        "token_count": 1582
    },
    "00426020": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00426020(uint *param_1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint16_t *puVar8;\n    uint unaff_ESI;\n    int32_t *in_FS_OFFSET;\n    bool bVar9;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t uStack732;\n    uint var_2c4h;\n    int32_t var_2c0h;\n    uint var_2bch;\n    uint var_2b8h;\n    int32_t hFindFile;\n    uint32_t lpFindFileData;\n    uint var_284h;\n    uint32_t var_5ch;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint var_34h;\n    uint32_t var_30h;\n    uint *lpFileName;\n    uint32_t var_18h;\n    uint32_t var_14h_2;\n    uint32_t *puStack20;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48a160;\n    var_ch_2 = *in_FS_OFFSET;\n    uStack732 = *0x4b4f00 ^ &stack0xfffffffc;\n    puStack20 = &uStack732;\n    *in_FS_OFFSET = &var_ch_2;\n    var_14h_2 = uStack732;\n    puVar3 = fcn.00401a5b(0x4a5a48);\n    if (7 < puVar3[5]) {\n        puVar3 = *puVar3;\n    }\n    iVar4 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(puVar3, &lpFindFileData);\n    hFindFile = iVar4;\n    if (7 < var_30h) {\n        fcn.00452a07(var_44h);\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_FindNextFileW;\n    var_30h = 7;\n    var_34h = 0;\n    var_44h = var_44h & 0xffff0000;\n    if (iVar4 != -1) {\n        var_4h = 0;\n        do {\n            puVar8 = 0x4a24cc;\n            puVar3 = &var_284h;\n            do {\n                uVar1 = *puVar3;\n                bVar9 = uVar1 < *puVar8;\n                if (uVar1 != *puVar8) {\ncode_r0x004260f6:\n                    uVar5 = -bVar9 | 1;\n                    goto code_r0x004260fb;\n                }\n                if (uVar1 == 0) break;\n                uVar1 = *(puVar3 + 2);\n                bVar9 = uVar1 < puVar8[1];\n                if (uVar1 != puVar8[1]) goto code_r0x004260f6;\n                puVar3 = puVar3 + 1;\n                puVar8 = puVar8 + 2;\n            } while (uVar1 != 0);\n            uVar5 = 0;\ncode_r0x004260fb:\n            if (uVar5 != 0) {\n                puVar8 = 0x4a24d0;\n                puVar3 = &var_284h;\n                do {\n                    uVar1 = *puVar3;\n                    bVar9 = uVar1 < *puVar8;\n                    if (uVar1 != *puVar8) {\ncode_r0x00426136:\n                        uVar5 = -bVar9 | 1;\n                        goto code_r0x0042613b;\n                    }\n                    if (uVar1 == 0) break;\n                    uVar1 = *(puVar3 + 2);\n                    bVar9 = uVar1 < puVar8[1];\n                    if (uVar1 != puVar8[1]) goto code_r0x00426136;\n                    puVar3 = puVar3 + 1;\n                    puVar8 = puVar8 + 2;\n                } while (uVar1 != 0);\n                uVar5 = 0;\ncode_r0x0042613b:\n                if (uVar5 != 0) {\n                    fcn.00401a5b(0x4a078c);\n                    var_4h._0_1_ = 1;\n                    fcn.0040c05d(&var_284h);\n                    var_4h = CONCAT31(var_4h._1_3_, 3);\n                    if (7 < var_48h) {\n                        fcn.00452a07(var_5ch);\n                    }\n                    var_48h = 7;\n                    var_4ch = 0;\n                    var_5ch = var_5ch & 0xffff0000;\n                    if ((lpFindFileData & 1) != 0) {\n                        puVar3 = &lpFileName;\n                        if (7 < var_18h) {\n                            puVar3 = lpFileName;\n                        }\n                        iVar6 = (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(puVar3, lpFindFileData & 0xfffffffe);\n                        if (iVar6 == 0) {\n                            var_2c4h = 1;\n                            fcn.0045b275(&var_2c4h, 0x4acb64);\n                        }\n                    }\n                    if ((lpFindFileData & 0x10) == 0) {\ncode_r0x00426206:\n                        puVar3 = &lpFileName;\n                        if (7 < var_18h) {\n                            puVar3 = lpFileName;\n                        }\n                        iVar6 = (*_sym.imp.KERNEL32.dll_DeleteFileW)(puVar3);\n                        if (iVar6 == 0) {\n                            var_2b8h = 3;\n                            fcn.0045b275(&var_2b8h, 0x4acb64);\n                        }\n                    }\n                    else {\n                        iVar6 = fcn.00426020();\n                        if (iVar6 == 0) {\n                            var_2c0h = iVar6;\n                            fcn.0045b275(&var_2c0h, 0x4acb64);\n                            goto code_r0x00426206;\n                        }\n                    }\n                    var_4h = var_4h & 0xffffff00;\n                    if (7 < var_18h) {\n                        fcn.00452a07(lpFileName);\n                    }\n                }\n            }\n            iVar6 = (*pcVar2)(iVar4, &lpFindFileData);\n        } while (iVar6 != 0);\n        (*_sym.imp.KERNEL32.dll_FindClose)(iVar4);\n        if (7 < param_1[5]) {\n            param_1 = *param_1;\n        }\n        iVar4 = (*_sym.imp.KERNEL32.dll_RemoveDirectoryW)(param_1);\n        if (iVar4 == 0) {\n            var_2bch = 2;\n            fcn.0045b275(&var_2bch, 0x4acb64);\n            (*_sym.imp.KERNEL32.dll_FindClose)(hFindFile);\n            return 0x4262b3;\n        }\n    }\n    *in_FS_OFFSET = var_ch_2;\n    uVar7 = fcn.004529f8(unaff_ESI);\n    return uVar7;\n}\n",
        "token_count": 1707
    },
    "004262e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool __fastcall fcn.004262e0(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(param_1);\n    return iVar1 != -1;\n}\n",
        "token_count": 55
    },
    "004268e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n\nvoid __fastcall fcn.004268e0(uint *param_1, char *param_2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    char cVar3;\n    uint *puVar4;\n    uint unaff_ESI;\n    char *pcVar5;\n    uint32_t arg_8h;\n    int32_t iVar6;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint *var_20h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    \n    var_8h = *0x4b4f00 ^ &stack0xfffffffc;\n    if (param_2 == NULL) {\n        param_1[5] = 0xf;\n        param_1[4] = 0;\n        *param_1 = 0;\n        fcn.004529f8(0);\n        return;\n    }\n    pcVar5 = param_2;\n    do {\n        cVar3 = *pcVar5;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar3 != '\\0');\n    arg_8h = pcVar5 - (param_2 + 1);\n    var_ch = 0xf;\n    var_10h = 0;\n    var_20h = var_20h & 0xffffff00;\n    if (arg_8h == 0xffffffff) {\n        fcn.0044e7eb(\"string too long\");\ncode_r0x00426a54:\n        fcn.0044e7eb(\"string too long\");\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if (arg_8h == 0xffffffff) goto code_r0x00426a54;\n    if (arg_8h < 0x10) {\n        uVar2 = arg_8h;\n        if (arg_8h != 0) goto code_r0x00426973;\n    }\n    else {\n        fcn.0040209f(arg_8h, 0);\n        if (arg_8h != 0) {\ncode_r0x00426973:\n            if (arg_8h == 1) {\n                puVar4 = &var_20h;\n                if (0xf < var_ch) {\n                    puVar4 = var_20h;\n                }\n                *puVar4 = 0;\n            }\n            else {\n                puVar4 = &var_20h;\n                if (0xf < var_ch) {\n                    puVar4 = var_20h;\n                }\n                fcn.00453710(puVar4, 0, arg_8h);\n            }\n            puVar4 = &var_20h;\n            if (0xf < var_ch) {\n                puVar4 = var_20h;\n            }\n            var_10h = arg_8h;\n            *(puVar4 + arg_8h) = 0;\n        }\n        puVar4 = var_20h;\n        uVar2 = var_10h;\n        if (0xf < var_ch) goto code_r0x004269c7;\n    }\n    var_10h = uVar2;\n    puVar4 = &var_20h;\ncode_r0x004269c7:\n    pcVar5 = param_2 + arg_8h;\n    if (param_2 != pcVar5) {\n        iVar6 = puVar4 - param_2;\n        do {\n            cVar3 = fcn.0045a65b(*param_2);\n            param_2[iVar6] = cVar3;\n            param_2 = param_2 + 1;\n        } while (param_2 != pcVar5);\n    }\n    param_1[5] = 0xf;\n    param_1[4] = 0;\n    *param_1 = 0;\n    if (var_ch < 0x10) {\n        if (var_10h + 1 != 0) {\n            fcn.004530c0(param_1, &var_20h, var_10h + 1);\n        }\n    }\n    else {\n        *param_1 = var_20h;\n    }\n    param_1[5] = var_ch;\n    param_1[4] = var_10h;\n    fcn.004529f8(unaff_ESI);\n    return;\n}\n",
        "token_count": 1002
    },
    "00427100": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00427100(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    \n    piVar2 = param_1 + 4;\n    if (7 < *(param_1 + 0x18)) {\n        piVar2 = *piVar2;\n    }\n    uStack36 = 0;\n    uStack40 = 0;\n    uStack44 = 3;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(piVar2, 0x80000100, 1, 0);\n    if (iVar1 == -1) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(piVar2, 0x80000000, 1, 0, 3, 0, 0);\n        *(param_1 + 0x1c) = iVar1;\n        return iVar1 != -1;\n    }\n    uStack40 = 0xffffffff;\n    uStack44 = 0xffffffff;\n    (*_sym.imp.KERNEL32.dll_SetFileTime)(iVar1, 0, &uStack44, &uStack44);\n    *(param_1 + 0x1c) = iVar1;\n    return iVar1 != -1;\n}\n",
        "token_count": 300
    },
    "00427210": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00427210(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x1c) != -1) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_SetFilePointer)(*(in_ECX + 0x1c), arg_8h, 0, 0);\n        return iVar1 != -1;\n    }\n    return false;\n}\n",
        "token_count": 104
    },
    "00427560": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00427560(uint *arg_8h, uint32_t arg_ch, uint noname_2, uint noname_3, uint noname_4, uint32_t arg_1ch, \n            uint32_t arg_20h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    uint *puVar4;\n    int16_t *in_ECX;\n    uint *in_EDX;\n    int32_t arg_10h;\n    int32_t iVar5;\n    int32_t *in_FS_OFFSET;\n    uint in_stack_ffffff34;\n    char16_t *arg_8h_00;\n    uint var_4ch;\n    uint var_48h;\n    uint *var_44h;\n    int32_t var_34h;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    uStack12 = 0x48a760;\n    var_ch = *in_FS_OFFSET;\n    var_14h = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    iVar5 = 0;\n    var_4h = 0;\n    if (arg_1ch != 0) {\n        if (in_ECX != NULL) {\n            uVar1 = 0;\n            var_18h = 7;\n            var_1ch = 0;\n            var_2ch = var_2ch & 0xffff0000;\n            if (*in_ECX != 0) {\n                uVar1 = fcn.00453054(in_ECX);\n            }\n            fcn.00402667(in_ECX, uVar1);\n            iVar5 = fcn.00427500();\n            if (7 < var_18h) {\n                fcn.00452a07(var_2ch);\n            }\n        }\n        var_30h = 7;\n        var_34h = 0;\n        var_44h = var_44h & 0xffff0000;\n        var_4h = CONCAT31(var_4h._1_3_, 1);\n        if (iVar5 == 1) {\n            uVar1 = fcn.00453054(L\"https=\");\n            arg_8h_00 = L\"https=\";\n        }\n        else if (iVar5 == 2) {\n            uVar1 = fcn.00453054(L\"ftp=\");\n            arg_8h_00 = L\"ftp=\";\n        }\n        else {\n            uVar1 = fcn.00453054(L\"http=\");\n            arg_8h_00 = L\"http=\";\n        }\n        fcn.00402667(arg_8h_00, uVar1);\n        iVar5 = var_34h;\n        puVar4 = &var_44h;\n        if (7 < var_30h) {\n            puVar4 = var_44h;\n        }\n        iVar2 = fcn.00409847(puVar4, 0, var_34h);\n        if (iVar2 == -1) {\n            uVar1 = fcn.00453054(L\"socks=\");\n            iVar2 = fcn.00409847(L\"socks=\", 0, uVar1);\n            if (iVar2 == -1) {\n                uVar1 = fcn.00453054(0x4a0924);\n                iVar2 = fcn.00409847(0x4a0924, 0, uVar1);\n                if (iVar2 == -1) {\n                    iVar2 = 0;\n                }\n                else {\n                    iVar2 = iVar2 + 1;\n                }\n            }\n            else {\n                iVar2 = iVar2 + 6;\n            }\n        }\n        else {\n            iVar2 = iVar2 + iVar5;\n        }\n        arg_10h = -1;\n        var_48h = 0x3b;\n        iVar5 = fcn.00409847(&var_48h, iVar2, 1);\n        if (iVar5 != -1) {\n            arg_10h = iVar5 - iVar2;\n        }\n        puVar3 = fcn.004085ca(&var_2ch, iVar2, arg_10h);\n        if (&arg_ch != puVar3) {\n            if (7 < arg_20h) {\n                fcn.00452a07(arg_ch);\n            }\n            arg_20h = 7;\n            arg_1ch = 0;\n            arg_ch = arg_ch & 0xffff0000;\n            if (puVar3[5] < 8) {\n                if (puVar3[4] + 1 != 0) {\n                    fcn.004530c0(&arg_ch, puVar3, (puVar3[4] + 1) * 2);\n                }\n            }\n            else {\n                arg_ch = *puVar3;\n                *puVar3 = 0;\n            }\n            arg_1ch = puVar3[4];\n            arg_20h = puVar3[5];\n            puVar3[5] = 7;\n            puVar3[4] = 0;\n            *puVar3 = 0;\n        }\n        if (7 < var_18h) {\n            fcn.00452a07(var_2ch);\n        }\n        var_4h = var_4h & 0xffffff00;\n        if (7 < var_30h) {\n            fcn.00452a07(var_44h);\n        }\n        uVar1 = fcn.00453054(0x4a1024);\n        iVar5 = fcn.00409847(0x4a1024, 0, uVar1);\n        if (iVar5 != -1) {\n            puVar3 = fcn.004085ca(&var_2ch, iVar5 + 3, 0xffffffff);\n            if (&arg_ch != puVar3) {\n                if (7 < arg_20h) {\n                    fcn.00452a07(arg_ch);\n                }\n                arg_20h = 7;\n                arg_1ch = 0;\n                arg_ch = arg_ch & 0xffff0000;\n                if (puVar3[5] < 8) {\n                    if (puVar3[4] + 1 != 0) {\n                        fcn.004530c0(&arg_ch, puVar3, (puVar3[4] + 1) * 2);\n                    }\n                }\n                else {\n                    arg_ch = *puVar3;\n                    *puVar3 = 0;\n                }\n                arg_1ch = puVar3[4];\n                arg_20h = puVar3[5];\n                puVar3[5] = 7;\n                puVar3[4] = 0;\n                *puVar3 = 0;\n            }\n            if (7 < var_18h) {\n                fcn.00452a07(var_2ch);\n            }\n        }\n        in_stack_ffffff34 = 0;\n        var_48h = 0x3a;\n        iVar5 = fcn.00409847(&var_48h, 0, 1);\n        if (iVar5 == -1) {\n            if (in_EDX != &arg_ch) {\n                fcn.00402450(&arg_ch, 0, 0xffffffff);\n            }\n            *arg_8h = 0;\n        }\n        else {\n            puVar4 = fcn.004085ca(&var_2ch, 0, iVar5);\n            if (in_EDX != puVar4) {\n                if (7 < in_EDX[5]) {\n                    fcn.00452a07(*in_EDX);\n                }\n                in_EDX[5] = 7;\n                in_EDX[4] = 0;\n                *in_EDX = 0;\n                if (puVar4[5] < 8) {\n                    if (puVar4[4] != -1) {\n                        fcn.004530c0();\n                    }\n                }\n                else {\n                    *in_EDX = *puVar4;\n                    *puVar4 = 0;\n                }\n                in_EDX[4] = puVar4[4];\n                in_EDX[5] = puVar4[5];\n                puVar4[5] = 7;\n                puVar4[4] = 0;\n                *puVar4 = 0;\n            }\n            if (7 < var_18h) {\n                fcn.00452a07(var_2ch);\n            }\n            puVar4 = fcn.004085ca(&var_2ch, iVar5 + 1, 0xffffffff);\n            if (7 < puVar4[5]) {\n                puVar4 = *puVar4;\n            }\n            uVar1 = fcn.00455a22(puVar4);\n            *arg_8h = uVar1;\n            if (7 < var_18h) {\n                fcn.00452a07(var_2ch);\n            }\n        }\n    }\n    if (7 < arg_20h) {\n        fcn.00452a07(arg_ch);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(in_stack_ffffff34);\n    return;\n}\n",
        "token_count": 2088
    },
    "00427990": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00427990(int32_t param_1, uint *param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    uint32_t extraout_ECX;\n    int32_t *in_FS_OFFSET;\n    char16_t *arg_ch;\n    uint arg_10h;\n    uint arg_14h;\n    char *arg_18h;\n    uint in_stack_ffffff80;\n    uint var_44h;\n    uint *var_40h;\n    uint32_t var_2ch;\n    uint *var_28h;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48af50;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (*(param_1 + 0x10) != 0) {\n        var_28h = var_28h & 0xffff0000;\n        var_14h = 7;\n        var_18h = 0;\n        fcn.00402450(param_2, 0, 0xffffffff);\n        var_4h = 0;\n        uVar2 = fcn.00453054(0x4a1024);\n        iVar3 = fcn.00409847(0x4a1024, 0, uVar2);\n        if (iVar3 == -1) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = iVar3 + 3;\n        }\n        uVar2 = fcn.00453054(0x4a10b4);\n        in_stack_ffffff80 = 0x4a10b4;\n        uVar4 = fcn.00409847(0x4a10b4, iVar3, uVar2);\n        if (uVar4 != 0xffffffff) {\n            if (var_18h < uVar4) {\n                fcn.0044e819(\"invalid string position\");\n                uVar4 = extraout_ECX;\n            }\n            puVar5 = &var_28h;\n            if (7 < var_14h) {\n                puVar5 = var_28h;\n            }\n            var_18h = uVar4;\n            *(puVar5 + uVar4 * 2) = 0;\n        }\n        uVar4 = 0;\n        uVar2 = fcn.00453054(0x4a5bc0);\n        iVar3 = fcn.004098ea(0x4a5bc0, 0, uVar2);\n        if (*(param_1 + 0x10) != 0) {\n            while( true ) {\n                fcn.004085ca(&var_40h, uVar4, iVar3 - uVar4);\n                uVar4 = var_2ch;\n                var_4h = CONCAT31(var_4h._1_3_, 1);\n                cVar1 = fcn.0042d340();\n                if (cVar1 != '\\0') break;\n                puVar5 = &var_40h;\n                if (7 < uVar4) {\n                    puVar5 = var_40h;\n                }\n                iVar6 = fcn.004558b6(L\"<local>\", puVar5);\n                if (iVar6 == 0) {\n                    uVar2 = fcn.00453054(0x4a24cc);\n                    iVar6 = fcn.00409847(0x4a24cc, 0, uVar2);\n                    if (iVar6 == -1) goto code_r0x00427bca;\n                }\n                if (iVar3 == -1) {\n                    if (7 < var_2ch) {\n                        fcn.00452a07(var_40h);\n                    }\n                    goto code_r0x00427b51;\n                }\n                uVar4 = iVar3 + 1;\n                uVar2 = fcn.00453054(0x4a5bc0);\n                iVar3 = fcn.004098ea(0x4a5bc0, uVar4, uVar2);\n                var_4h = var_4h & 0xffffff00;\n                if (7 < var_2ch) {\n                    fcn.00452a07(var_40h);\n                }\n                if (*(param_1 + 0x10) <= uVar4) goto code_r0x00427b51;\n            }\n            if (7 < param_2[5]) {\n                param_2 = *param_2;\n            }\n            arg_18h = \"GETPROXY:%S is bypassed in %S\";\n            arg_14h = 0x2000008;\n            arg_10h = 0x89;\n            arg_ch = L\"GetProxy.cpp\";\n            uVar2 = fcn.0042c180();\n            fcn.0042c3c0(uVar2, arg_ch, arg_10h, arg_14h, arg_18h, param_2);\ncode_r0x00427bca:\n            if (7 < var_2ch) {\n                fcn.00452a07(var_40h);\n            }\n        }\ncode_r0x00427b51:\n        if (7 < var_14h) {\n            fcn.00452a07(var_28h);\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(in_stack_ffffff80);\n    return;\n}\n",
        "token_count": 1296
    },
    "00427fb0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00427fb0(uint *arg_8h)\n\n{\n    uint32_t arg_1ch;\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint in_ECX;\n    uint extraout_ECX;\n    uint noname_0;\n    uint extraout_ECX_00;\n    uint *in_EDX;\n    int32_t *in_FS_OFFSET;\n    uint in_stack_fffffee8;\n    uint in_stack_fffffeec;\n    uint in_stack_fffffef0;\n    int16_t *in_stack_fffffef4;\n    int16_t *in_stack_fffffef8;\n    int16_t *arg_8h_00;\n    int32_t iVar4;\n    char16_t *pcVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    char *pcVar9;\n    uint in_stack_ffffff58;\n    uint pAutoProxyOptions;\n    uint var_98h;\n    uint var_90h;\n    int32_t pProxyInfo;\n    int16_t *var_84h;\n    int16_t *hMem;\n    uint *var_7ch;\n    int32_t hInternet;\n    uint *var_74h;\n    int32_t var_64h;\n    uint32_t var_60h;\n    uint32_t var_5ch;\n    int32_t var_4ch;\n    uint32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    int32_t var_34h;\n    uint32_t var_30h;\n    uint *lpcwszUrl;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x48a4a0;\n    var_ch = *in_FS_OFFSET;\n    arg_1ch = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &fcn.00427fb0::var_ch;\n    var_7ch = arg_8h;\n    *arg_8h = 1;\n    var_60h = 7;\n    var_64h = 0;\n    var_74h = var_74h & 0xffff0000;\n    var_4h = 0;\n    hInternet = 0;\n    var_14h = arg_1ch;\n    iVar1 = fcn.00427ef0();\n    iVar4 = hInternet;\n    if (iVar1 != 0) {\n        if ((hInternet == 0) && (var_64h == 0)) {\n            pcVar9 = \"GETPROXY:Auto-proxy not configured by user\";\n            uVar8 = 0x2000008;\n            uVar6 = 0x10d;\n            pcVar5 = L\"GetProxy.cpp\";\n            uVar2 = fcn.0042c180();\n            fcn.0042c3c0(uVar2, pcVar5, uVar6, uVar8, pcVar9, arg_1ch);\n        }\n        else {\n            hInternet = (*_sym.imp.WINHTTP.dll_WinHttpOpen)(L\"Trend Micro HouseCall 7.0 Launcher\", 0, 0, 0, 0);\n            if (hInternet == 0) {\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                pcVar9 = \"GETPROXY:WinHttpOpen failed err=(%lu).\";\n                uVar7 = 0x2000002;\n                uVar8 = 0x117;\n                pcVar5 = L\"GetProxy.cpp\";\n                uVar6 = fcn.0042c180(extraout_ECX);\n                fcn.0042c3c0(uVar6, pcVar5, uVar8, uVar7, pcVar9, uVar2);\n            }\n            else {\n                var_18h = 7;\n                var_1ch = 0;\n                lpcwszUrl = lpcwszUrl & 0xffff0000;\n                fcn.00402450(in_ECX, 0, 0xffffffff);\n                var_4h = CONCAT31(var_4h._1_3_, 1);\n                uVar2 = fcn.00453054(0x4a1024);\n                iVar1 = fcn.00409847(0x4a1024, 0, uVar2);\n                if (iVar1 == -1) {\n                    uVar2 = fcn.00453054(L\"http://\");\n                    fcn.0040977e(noname_0, L\"http://\", uVar2);\n                }\n                _var_44h = 0;\n                _var_3ch = 0;\n                if (iVar4 != 0) {\n                    _var_44h = 0x300000001;\n                }\n                if (var_64h != 0) {\n                    _var_44h = _var_44h & 0xffffffff00000000 | iVar4 != 0 | 2;\n                    puVar3 = &fcn.00427fb0::var_74h;\n                    if (7 < var_60h) {\n                        puVar3 = var_74h;\n                    }\n                    _var_3ch = ZEXT48(puVar3);\n                }\n                puVar3 = &fcn.00427fb0::lpcwszUrl;\n                if (7 < var_18h) {\n                    puVar3 = lpcwszUrl;\n                }\n                _pAutoProxyOptions = _var_44h;\n                _var_90h = 0;\n                _pProxyInfo = 0;\n                hMem = NULL;\n                iVar4 = hInternet;\n                _var_98h = _var_3ch;\n                iVar1 = (*_sym.imp.WINHTTP.dll_WinHttpGetProxyForUrl)\n                                  (hInternet, puVar3, &fcn.00427fb0::pAutoProxyOptions, &fcn.00427fb0::pProxyInfo);\n                arg_8h_00 = hMem;\n                if (iVar1 == 0) {\n                    uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                    pcVar9 = \"GETPROXY:WinHttpGetProxyForUrl failed err=(%lu).\";\n                    uVar7 = 0x2000002;\n                    uVar8 = 0x155;\n                    pcVar5 = L\"GetProxy.cpp\";\n                    uVar6 = fcn.0042c180(extraout_ECX_00);\n                    fcn.0042c3c0(uVar6, pcVar5, uVar8, uVar7, pcVar9, uVar2);\n                }\n                else {\n                    uVar2 = 0;\n                    var_30h = 7;\n                    var_34h = 0;\n                    _var_44h = _var_44h & 0xffffffffffff0000;\n                    var_48h = 7;\n                    var_4ch = 0;\n                    var_5ch = var_5ch & 0xffff0000;\n                    var_4h = CONCAT31(var_4h._1_3_, 3);\n                    if (hMem != NULL) {\n                        if (*hMem != 0) {\n                            uVar2 = fcn.00453054(hMem);\n                        }\n                        fcn.00402667(arg_8h_00, uVar2);\n                        in_stack_fffffef0 = 0x42820b;\n                        in_stack_fffffef4 = hMem;\n                        (*_sym.imp.KERNEL32.dll_GlobalFree)();\n                        in_stack_fffffef8 = arg_8h_00;\n                    }\n                    if (var_84h != NULL) {\n                        if (*var_84h == 0) {\n                            uVar2 = 0;\n                        }\n                        else {\n                            uVar2 = fcn.00453054(var_84h);\n                        }\n                        in_stack_fffffef8 = var_84h;\n                        fcn.00402667(var_84h, uVar2);\n                        in_stack_fffffef0 = 0x42823e;\n                        (*_sym.imp.KERNEL32.dll_GlobalFree)();\n                        in_stack_fffffef4 = var_84h;\n                    }\n                    if (pProxyInfo == 1) {\n                        pcVar9 = \"GETPROXY:AutoProxy returns direct access\";\n                        uVar8 = 0x2000008;\n                        uVar6 = 0x135;\n                        pcVar5 = L\"GetProxy.cpp\";\n                        uVar2 = fcn.0042c180();\n                        fcn.0042c3c0(uVar2, pcVar5, uVar6, uVar8, pcVar9, iVar4);\n                        *var_7ch = 0;\n                    }\n                    else if ((var_4ch == 0) || (iVar1 = fcn.00427990(),  iVar1 == 0)) {\n                        if (var_34h == 0) {\n                            pcVar9 = \"GETPROXY:AutoProxy returns empty list.\";\n                            uVar8 = 0x2000008;\n                            uVar6 = 0x14c;\n                            pcVar5 = L\"GetProxy.cpp\";\n                            uVar2 = fcn.0042c180();\n                            fcn.0042c3c0(uVar2, pcVar5, uVar6, uVar8, pcVar9, iVar4);\n                        }\n                        else {\n                            puVar3 = &fcn.00427fb0::var_44h;\n                            fcn.004084c5(puVar3);\n                            fcn.00427560(in_EDX + 6, puVar3, in_stack_fffffee8, in_stack_fffffeec, in_stack_fffffef0, \n                                         in_stack_fffffef4, in_stack_fffffef8);\n                            if (7 < in_EDX[5]) {\n                                in_EDX = *in_EDX;\n                            }\n                            pcVar9 = \"GETPROXY:get proxy server (%S:%d) parsed from %S for URL:%S\";\n                            uVar8 = 0x2000040;\n                            uVar6 = 0x147;\n                            pcVar5 = L\"GetProxy.cpp\";\n                            uVar2 = fcn.0042c180();\n                            fcn.0042c3c0(uVar2, pcVar5, uVar6, uVar8, pcVar9, in_EDX);\n                        }\n                    }\n                    else {\n                        *var_7ch = 0;\n                    }\n                    if (7 < var_48h) {\n                        fcn.00452a07(var_5ch);\n                    }\n                    var_48h = 7;\n                    var_4ch = 0;\n                    var_5ch = var_5ch & 0xffff0000;\n                    if (7 < var_30h) {\n                        fcn.00452a07(var_44h);\n                    }\n                }\n                (*_sym.imp.WINHTTP.dll_WinHttpCloseHandle)(hInternet);\n                if (7 < var_18h) {\n                    fcn.00452a07(lpcwszUrl);\n                }\n                var_18h = 7;\n                var_1ch = 0;\n                lpcwszUrl = lpcwszUrl & 0xffff0000;\n            }\n        }\n    }\n    if (7 < var_60h) {\n        fcn.00452a07(var_74h);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(in_stack_ffffff58);\n    return;\n}\n",
        "token_count": 2575
    },
    "0042b570": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042b570(uint lpFileName)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint in_ECX;\n    uint in_EDX;\n    uint unaff_ESI;\n    char *pcVar4;\n    uint uVar5;\n    uint lpLocalFileTime;\n    uint var_178h;\n    uint var_174h;\n    int32_t var_170h;\n    uint lpFindFileData;\n    uint lpFileTime;\n    uint var_2ch;\n    uint var_28h;\n    uint var_20h;\n    uint var_18h;\n    uint lpFatTime;\n    uint var_10h;\n    uint32_t var_8h;\n    \n    var_8h = *0x4b4f00 ^ &stack0xfffffffc;\n    var_2ch = 0;\n    _var_28h = 0;\n    _var_20h = 0;\n    _var_18h = 0;\n    _var_10h = 0;\n    var_178h = in_EDX;\n    var_174h = in_ECX;\n    iVar1 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(lpFileName, &lpFindFileData);\n    if (iVar1 != -1) {\n        (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)(&lpFileTime, &lpLocalFileTime);\n        (*_sym.imp.KERNEL32.dll_FileTimeToDosDateTime)(&lpLocalFileTime, &lpFatTime + 2, &lpFatTime);\n        (*_sym.imp.KERNEL32.dll_FindClose)(iVar1);\n    }\n    iVar1 = fcn.0044b989(in_ECX, lpFileName, &var_2ch, 0, 0, 0, 0, 0, 8, 0xffffffff);\n    var_170h = 0;\n    if (iVar1 == 0) {\n        iVar2 = fcn.00457d95(&var_170h, var_178h, 0x4a6378);\n        if (iVar2 == 0) {\n            do {\n                iVar1 = 0;\n                iVar2 = fcn.00457f9d(*0x4b9650, 1, 0x4000, var_170h);\n                if ((iVar2 < 0x4000) && (iVar3 = fcn.00458518(var_170h),  iVar3 == 0)) {\n                    pcVar4 = \"error reading %s\\n\";\n                    uVar5 = lpFileName;\n                    iVar1 = fcn.00456012();\n                    fcn.00456afe(iVar1 + 0x40, pcVar4, uVar5);\n                    iVar1 = -1;\n                }\n                if ((0 < iVar2) && (iVar1 = fcn.0044b024(var_174h, *0x4b9650, iVar2),  iVar1 < 0)) {\n                    pcVar4 = \"error writing %s in zip\\n\";\n                    uVar5 = lpFileName;\n                    iVar3 = fcn.00456012();\n                    fcn.00456afe(iVar3 + 0x40, pcVar4, uVar5);\n                }\n                in_ECX = var_174h;\n            } while ((iVar1 == 0) && (0 < iVar2));\n        }\n        else {\n            iVar1 = -1;\n            pcVar4 = \"error %d opening %s for read\\n\";\n            iVar3 = fcn.00456012(\"error %d opening %s for read\\n\", iVar2, var_178h);\n            fcn.00456afe(iVar3 + 0x40, pcVar4, iVar2);\n        }\n    }\n    else {\n        pcVar4 = \"error in opening %s in zip\\n\";\n        uVar5 = lpFileName;\n        iVar2 = fcn.00456012();\n        fcn.00456afe(iVar2 + 0x40, pcVar4, uVar5);\n    }\n    if (var_170h != 0) {\n        fcn.004567e2(var_170h);\n    }\n    if ((-1 < iVar1) && (iVar1 = fcn.0044b2d1(in_ECX),  iVar1 != 0)) {\n        pcVar4 = \"error closing %s in the zip\\n\";\n        iVar1 = fcn.00456012();\n        fcn.00456afe(iVar1 + 0x40, pcVar4, lpFileName);\n    }\n    fcn.004529f8(unaff_ESI);\n    return;\n}\n",
        "token_count": 1032
    },
    "0042b9c0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042b9c0(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    int32_t iStackY16760;\n    uint uStackY16432;\n    ulong uStackY16428;\n    ulong uStackY16420;\n    ulong uStackY16412;\n    ulong uStackY16404;\n    uchar auStackY16396 [16304];\n    uint uStackY92;\n    char *pcVar5;\n    uint var_4h;\n    \n    fcn.00459c50();\n    uVar1 = fcn.00436f02();\n    iVar2 = fcn.00457d95(&stack0xffffbe88, arg_ch_00, 0x4a6378);\n    if (iVar2 == 0) {\n        iVar2 = fcn.00457f9d(&stack0xffffbff4, 0x4000, 1, iStackY16760);\n        while (iVar2 != 0) {\n            uVar1 = fcn.00436f02();\n            iVar2 = fcn.00457f9d(&stack0xffffbff4, 0x4000, 1, iStackY16760);\n        }\n        fcn.004567e2(iStackY16760);\n        uStackY16432 = 0;\n        uStackY16428 = 0;\n        uStackY16420 = 0;\n        uStackY16412 = 0;\n        uStackY16404 = 0;\n        iVar2 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)();\n        if (iVar2 != -1) {\n            (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)();\n            (*_sym.imp.KERNEL32.dll_FileTimeToDosDateTime)();\n            (*_sym.imp.KERNEL32.dll_FindClose)();\n        }\n        uStackY92 = 0x42bb60;\n        iVar2 = fcn.0044b491(arg_8h_00, arg_8h, &stack0xffffbfd0, 0, 0, 0, 0, 0, 8, 0xffffffff, 0, 0xf, 8, 0, arg_ch, \n                             uVar1);\n        if (iVar2 == 0) {\n            iVar3 = fcn.00457d95(&stack0xffffbe88, arg_ch_00, 0x4a6378);\n            if (iVar3 == 0) {\n                do {\n                    iVar2 = 0;\n                    iVar3 = fcn.00457f9d(&stack0xffffbff4, 1, 0x4000, iStackY16760);\n                    if ((iVar3 < 0x4000) && (iVar4 = fcn.00458518(iStackY16760),  iVar4 == 0)) {\n                        pcVar5 = \"error reading %s\\n\";\n                        uVar1 = arg_8h;\n                        iVar2 = fcn.00456012();\n                        fcn.00456afe(iVar2 + 0x40, pcVar5, uVar1);\n                        iVar2 = -1;\n                    }\n                    if ((0 < iVar3) && (iVar2 = fcn.0044b024(arg_8h_00, &stack0xffffbff4, iVar3),  iVar2 < 0)) {\n                        pcVar5 = \"error writing %s in zip\\n\";\n                        uVar1 = arg_8h;\n                        iVar4 = fcn.00456012();\n                        fcn.00456afe(iVar4 + 0x40, pcVar5, uVar1);\n                    }\n                } while ((iVar2 == 0) && (0 < iVar3));\n            }\n            else {\n                iVar2 = -1;\n                pcVar5 = \"error %d opening %s for read\\n\";\n                iVar4 = fcn.00456012();\n                fcn.00456afe(iVar4 + 0x40, pcVar5, iVar3);\n            }\n        }\n        else {\n            pcVar5 = \"error in opening %s in zip\\n\";\n            uVar1 = arg_8h;\n            iVar3 = fcn.00456012();\n            fcn.00456afe(iVar3 + 0x40, pcVar5, uVar1);\n        }\n        if (iStackY16760 != 0) {\n            fcn.004567e2(iStackY16760);\n        }\n        if ((-1 < iVar2) && (iVar2 = fcn.0044b2d1(),  iVar2 != 0)) {\n            pcVar5 = \"error closing %s in the zip\\n\";\n            iVar2 = fcn.00456012();\n            fcn.00456afe(iVar2 + 0x40, pcVar5, arg_8h);\n        }\n        fcn.004529f8(unaff_ESI);\n        return;\n    }\n    pcVar5 = \"error %d opening %s for crc32\\n\";\n    iVar3 = fcn.00456012();\n    fcn.00456afe(iVar3 + 0x40, pcVar5, iVar2);\n    fcn.004529f8(unaff_EBP);\n    return;\n}\n",
        "token_count": 1210
    },
    "0042c230": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c230(uint lpBuffer, uint nNumberOfBytesToWrite)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint lpNumberOfBytesWritten;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48a938;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if ((*0x4b9824 & 1) == 0) {\n        *0x4b9824 = *0x4b9824 | 1;\n        *0x4b9828 = vtable.CCriticalSectionLock.0;\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x4b982c, uVar1);\n        fcn.00453ab0(0x48ba30);\n    }\n    if (*(in_ECX + 4) != '\\0') {\n        var_10h = 0x4b9828;\n        (**(*0x4b9828 + 4))();\n        var_4h = 0;\n        iVar2 = (*_sym.imp.KERNEL32.dll_CreateFileA)(in_ECX + 4, 0x40000000, 1, 0, 4, 0, 0);\n        if (iVar2 != -1) {\n            (*_sym.imp.KERNEL32.dll_SetFilePointer)(iVar2, 0, 0, 2);\n            (*_sym.imp.KERNEL32.dll_WriteFile)(iVar2, lpBuffer, nNumberOfBytesToWrite, &lpNumberOfBytesWritten, 0);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n        }\n        var_4h = 0xffffffff;\n        (**(*0x4b9828 + 8))();\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 468
    },
    "0042d220": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0042d220(void)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    uint extraout_ECX;\n    int32_t *in_FS_OFFSET;\n    uint in_stack_ffffff7c;\n    uint var_44h;\n    uint var_40h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48aa20;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_44h = 0x25;\n    arg_8h = fcn.00409847(&var_44h, 0, 1);\n    if (arg_8h != -1) {\n        var_44h = 0x25;\n        iVar1 = fcn.00409847(&var_44h, arg_8h + 1, 1);\n        if (iVar1 != -1) {\n            fcn.004085ca(&var_40h, arg_8h + 1, (iVar1 - arg_8h) + -1);\n            var_4h = 0;\n            in_stack_ffffff7c = extraout_ECX;\n            fcn.0042f6e0();\n            var_4h = CONCAT31(var_4h._1_3_, 1);\n            if (var_18h != 0) {\n                in_stack_ffffff7c = 0xffffffff;\n                fcn.00401b05(arg_8h, (iVar1 - arg_8h) + 1, &var_28h, 0, 0xffffffff);\n            }\n            if (7 < var_14h) {\n                fcn.00452a07(var_28h);\n            }\n            var_14h = 7;\n            var_18h = 0;\n            var_28h = var_28h & 0xffff0000;\n            if (7 < var_2ch) {\n                fcn.00452a07(var_40h);\n            }\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(in_stack_ffffff7c);\n    return;\n}\n",
        "token_count": 571
    },
    "0042d3f0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d3f0(uint *arg_8h)\n\n{\n    int32_t arg_10h;\n    uint *puVar1;\n    int32_t in_ECX;\n    uint *in_EDX;\n    uint unaff_ESI;\n    uint *arg_8h_00;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    \n    var_8h = *0x4b4f00 ^ &stack0xfffffffc;\n    if (3 < *(in_ECX + 0x10)) {\n        arg_10h = fcn.0040853f(0x4a078c, 0xffffffff);\n        if ((arg_10h != -1) && (arg_10h != *(in_ECX + 0x10) + -1)) {\n            arg_8h_00 = &var_20h;\n            puVar1 = fcn.004085ca(arg_8h_00, arg_10h + 1, 0xffffffff);\n            if (arg_8h != puVar1) {\n                if (7 < arg_8h[5]) {\n                    fcn.00452a07(*arg_8h);\n                }\n                arg_8h[5] = 7;\n                arg_8h[4] = 0;\n                *arg_8h = 0;\n                if (puVar1[5] < 8) {\n                    if (puVar1[4] + 1 != 0) {\n                        fcn.004530c0(arg_8h, puVar1, (puVar1[4] + 1) * 2);\n                    }\n                }\n                else {\n                    *arg_8h = *puVar1;\n                    *puVar1 = 0;\n                }\n                arg_8h[4] = puVar1[4];\n                arg_8h[5] = puVar1[5];\n                puVar1[5] = 7;\n                puVar1[4] = 0;\n                *puVar1 = 0;\n            }\n            if (7 < var_ch) {\n                fcn.00452a07(var_20h);\n            }\n            puVar1 = fcn.004085ca(&var_20h, 0, arg_10h);\n            if (in_EDX != puVar1) {\n                if (7 < in_EDX[5]) {\n                    fcn.00452a07(*in_EDX);\n                }\n                in_EDX[5] = 7;\n                in_EDX[4] = 0;\n                *in_EDX = 0;\n                if (puVar1[5] < 8) {\n                    if (puVar1[4] != -1) {\n                        fcn.004530c0();\n                    }\n                }\n                else {\n                    *in_EDX = *puVar1;\n                    *puVar1 = 0;\n                }\n                in_EDX[4] = puVar1[4];\n                in_EDX[5] = puVar1[5];\n                puVar1[5] = 7;\n                puVar1[4] = 0;\n                *puVar1 = 0;\n            }\n            if (7 < var_ch) {\n                fcn.00452a07(var_20h);\n            }\n            fcn.004529f8(arg_8h_00);\n            return;\n        }\n    }\n    fcn.004529f8(unaff_ESI);\n    return;\n}\n",
        "token_count": 787
    },
    "0042d580": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042d580(int32_t param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    \n    var_8h = *0x4b4f00 ^ &stack0xfffffffc;\n    uVar3 = 1;\n    var_24h = 0x5c;\n    iVar1 = fcn.00429530(&var_24h, 0xffffffff, 1);\n    if ((iVar1 != -1) && (iVar1 != *(param_1 + 0x10) + -1)) {\n        uVar3 = 0xffffffff;\n        puVar2 = fcn.004085ca(&var_20h, iVar1 + 1, 0xffffffff);\n        if (param_2 != puVar2) {\n            if (7 < param_2[5]) {\n                fcn.00452a07(*param_2);\n            }\n            param_2[5] = 7;\n            param_2[4] = 0;\n            *param_2 = 0;\n            if (puVar2[5] < 8) {\n                if (puVar2[4] + 1 != 0) {\n                    fcn.004530c0(param_2, puVar2, (puVar2[4] + 1) * 2);\n                }\n            }\n            else {\n                *param_2 = *puVar2;\n                *puVar2 = 0;\n            }\n            param_2[4] = puVar2[4];\n            param_2[5] = puVar2[5];\n            puVar2[5] = 7;\n            puVar2[4] = 0;\n            *puVar2 = 0;\n        }\n        if (7 < var_ch) {\n            fcn.00452a07(var_20h);\n        }\n        fcn.004529f8(uVar3);\n        return;\n    }\n    fcn.004529f8(uVar3);\n    return;\n}\n",
        "token_count": 484
    },
    "0042dd70": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8b4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0042dd70(int16_t *param_1, uint param_2)\n\n{\n    uint32_t arg_1ch;\n    int32_t iVar1;\n    uint uVar2;\n    uint *arg_1ch_00;\n    int32_t *in_FS_OFFSET;\n    char16_t *pcVar3;\n    uint uVar4;\n    uint uVar5;\n    char *pcVar6;\n    uint var_8b4h;\n    uint var_888h;\n    uint var_884h;\n    uint var_86ch;\n    uint hObject;\n    uint var_864h;\n    uint32_t var_85ch;\n    uint var_84ch;\n    uint32_t var_848h;\n    uint32_t var_844h;\n    uint var_834h;\n    uint32_t var_830h;\n    uint32_t var_82ch;\n    uint var_81ch;\n    uint32_t var_818h;\n    uint lpCommandLine;\n    uint32_t var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48ac11;\n    var_ch = *in_FS_OFFSET;\n    arg_1ch = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_14h = arg_1ch;\n    fcn.00453710(&var_8b4h, 0, 0x44);\n    var_884h._0_2_ = 0;\n    lpCommandLine._0_2_ = 0;\n    var_8b4h = 0x44;\n    var_888h = 1;\n    _var_86ch = 0;\n    _var_864h = 0;\n    fcn.00453710(&lpCommandLine + 2, 0, 0x7fe);\n    iVar1 = fcn.00456d85(&lpCommandLine, 0x400, 0x4a53ac, param_1);\n    if (iVar1 == -1) {\n        pcVar6 = \"LaunchConsoleApp() prepare command line failed.\";\n        uVar5 = 0x2000002;\n        uVar4 = 0xc6;\n        pcVar3 = L\"ProcessUtility.cpp\";\n        uVar2 = fcn.0042c180();\n        fcn.0042c3c0(uVar2, pcVar3, uVar4, uVar5, pcVar6, arg_1ch);\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_CreateProcessW)\n                          (0, &lpCommandLine, 0, 0, 1, 0x8000430, 0, param_2, &var_8b4h, &var_86ch);\n        if (iVar1 == 0) {\n            (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar2 = 0;\n            var_818h = 7;\n            var_81ch = 0;\n            var_82ch = var_82ch & 0xffff0000;\n            if (*param_1 != 0) {\n                uVar2 = fcn.00453054(param_1);\n            }\n            fcn.00402667(param_1, uVar2);\n            var_4h = 0;\n            fcn.00426a60();\n            var_4h._0_1_ = 1;\n            arg_1ch_00 = fcn.00426660(0);\n            var_4h = CONCAT31(var_4h._1_3_, 2);\n            if (0xf < arg_1ch_00[5]) {\n                arg_1ch_00 = *arg_1ch_00;\n            }\n            pcVar6 = \"CreateProcess(%s) failed, %S.\";\n            uVar5 = 0x2000002;\n            uVar4 = 0xe1;\n            pcVar3 = L\"ProcessUtility.cpp\";\n            uVar2 = fcn.0042c180();\n            fcn.0042c3c0(uVar2, pcVar3, uVar4, uVar5, pcVar6, arg_1ch_00);\n            if (0xf < var_830h) {\n                fcn.00452a07(var_844h);\n            }\n            var_830h = 0xf;\n            var_834h = 0;\n            var_844h = var_844h & 0xffffff00;\n            if (7 < var_848h) {\n                fcn.00452a07(var_85ch);\n            }\n            var_848h = 7;\n            var_84ch = 0;\n            var_85ch = var_85ch & 0xffff0000;\n            if (7 < var_818h) {\n                fcn.00452a07(var_82ch);\n            }\n        }\n        else {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(var_8b4h);\n    return;\n}\n",
        "token_count": 1175
    },
    "0042dfd0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_868h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0042dfd0(uint param_1, uint param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint unaff_EDI;\n    uint uVar4;\n    uint arg_14h;\n    char16_t *pcVar5;\n    uint uVar6;\n    uint uVar7;\n    char *pcVar8;\n    uint var_868h;\n    uint hProcess;\n    uint var_818h;\n    uint var_814h;\n    uint lpExitCode;\n    uint var_808h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b4f00 ^ &stack0xfffffffc;\n    fcn.00453710(&var_868h, 0, 0x44);\n    var_808h._0_2_ = 0;\n    var_868h = 0x44;\n    _hProcess = 0;\n    _var_814h = 0;\n    fcn.00453710(&var_808h + 2, 0, 0x7fe);\n    iVar2 = fcn.00456d85(&var_808h, 0x400, 0x4a53ac, param_1);\n    if (iVar2 == -1) {\n        pcVar8 = \"LaunchConsoleAppAndGetExitCode() prepare command line failed.\";\n        uVar7 = 0x2000002;\n        uVar6 = 0xfc;\n        pcVar5 = L\"ProcessUtility.cpp\";\n        uVar3 = fcn.0042c180();\n        fcn.0042c3c0(uVar3, pcVar5, uVar6, uVar7, pcVar8, unaff_EDI);\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.004529f8(var_868h);\n        return;\n    }\n    uVar3 = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_CreateProcessW)(0, &var_808h, 0, 0, 0, 0x8000000, 0, param_2, &var_868h, &hProcess);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar2 == 0) {\n        uVar6 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        pcVar8 = \"LaunchConsoleAppAndGetExitCode() CreateProcess() failed: %d\";\n        arg_14h = 0x4000002;\n        uVar4 = 0x10d;\n        pcVar5 = L\"ProcessUtility.cpp\";\n        uVar7 = fcn.0042c180(extraout_ECX);\n        fcn.0042c3c0(uVar7, pcVar5, uVar4, arg_14h, pcVar8, uVar6);\n        (*pcVar1)();\n        fcn.004529f8(uVar3);\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hProcess, 0xffffffff);\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)(hProcess, &lpExitCode);\n    uVar3 = hProcess;\n    if (iVar2 == 0) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        pcVar8 = \"LaunchConsoleAppAndGetExitCode() GetExitCodeProcess() failed: %d\";\n        uVar4 = 0x4000002;\n        uVar7 = 0x117;\n        pcVar5 = L\"ProcessUtility.cpp\";\n        uVar6 = fcn.0042c180(extraout_ECX_00);\n        fcn.0042c3c0(uVar6, pcVar5, uVar7, uVar4, pcVar8, uVar3);\n        uVar3 = hProcess;\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(hProcess);\n    (*pcVar1)(var_818h);\n    fcn.004529f8(uVar3);\n    return;\n}\n",
        "token_count": 957
    },
    "0042e460": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042e460(int16_t **arg_8h, int16_t **arg_ch)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t *in_ECX;\n    int16_t **ppiVar4;\n    uint in_EDX;\n    int16_t **ppiVar5;\n    int16_t *piVar6;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    bool bVar7;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48a8d8;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    piVar1 = arg_ch[4];\n    ppiVar4 = arg_ch;\n    if (0x7 < arg_ch[5]) {\n        ppiVar4 = *arg_ch;\n    }\n    ppiVar5 = arg_8h;\n    if (0x7 < arg_8h[5]) {\n        ppiVar5 = *arg_8h;\n    }\n    piVar6 = piVar1;\n    if (arg_8h[4] < piVar1) {\n        piVar6 = arg_8h[4];\n    }\n    do {\n        if (piVar6 == NULL) {\n            iVar2 = 0;\ncode_r0x0042e4cf:\n            bVar7 = iVar2 == 0;\n            if (bVar7) {\n                if (arg_8h[4] < piVar1) {\n                    uVar3 = 0xffffffff;\n                }\n                else {\n                    uVar3 = arg_8h[4] != piVar1;\n                }\n                bVar7 = uVar3 == 0;\n            }\n            if (bVar7) {\n                in_ECX[5] = 7;\n                in_ECX[4] = 0;\n                *in_ECX = 0;\n                fcn.00402450(in_EDX, 0, 0xffffffff);\n            }\n            else {\n                iVar2 = 0;\n                var_14h = 7;\n                var_18h = 0;\n                var_28h = var_28h & 0xffff0000;\n                fcn.00402450(in_EDX, 0, 0xffffffff);\n                var_4h = 0;\n                piVar1 = arg_ch[4];\n                piVar6 = arg_8h[4];\n                while( true ) {\n                    ppiVar4 = arg_8h;\n                    if (0x7 < arg_8h[5]) {\n                        ppiVar4 = *arg_8h;\n                    }\n                    iVar2 = fcn.00409847(ppiVar4, iVar2, arg_8h[4]);\n                    if (iVar2 == -1) break;\n                    fcn.00401b05(iVar2, piVar6, arg_ch, 0, 0xffffffff);\n                    iVar2 = iVar2 + piVar1;\n                }\n                in_ECX[5] = 7;\n                in_ECX[4] = 0;\n                *in_ECX = 0;\n                if (var_14h < 8) {\n                    if (var_18h + 1 != 0) {\n                        fcn.004530c0(in_ECX, &var_28h, (var_18h + 1) * 2);\n                    }\n                }\n                else {\n                    *in_ECX = var_28h;\n                }\n                in_ECX[4] = var_18h;\n                in_ECX[5] = var_14h;\n            }\n            *in_FS_OFFSET = var_ch;\n            fcn.004529f8(unaff_EDI);\n            return;\n        }\n        if (*ppiVar5 != *ppiVar4) {\n            iVar2 = (-(*ppiVar5 < *ppiVar4) & 0xfffffffe) + 1;\n            goto code_r0x0042e4cf;\n        }\n        ppiVar5 = ppiVar5 + 2;\n        ppiVar4 = ppiVar4 + 2;\n        piVar6 = piVar6 + -1;\n    } while( true );\n}\n",
        "token_count": 1043
    },
    "0042e9d0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042e9d0(int16_t *arg_8h, int16_t *arg_ch, uint noname_2, int32_t *arg_14h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint unaff_ESI;\n    int32_t *in_FS_OFFSET;\n    int16_t *piVar5;\n    char16_t *pcVar6;\n    uint uVar7;\n    uint uVar8;\n    char *pcVar9;\n    uint uVar10;\n    uint var_304h;\n    uint var_2f8h;\n    uint var_2f4h;\n    uint var_2f0h;\n    uint *var_2ech;\n    uint var_2e8h;\n    uint var_2d4h;\n    uint var_2d0h;\n    uint var_2cch;\n    int16_t *var_2c4h;\n    uint var_2c0h;\n    int32_t var_2bch;\n    uint32_t hObject;\n    uint var_2b4h;\n    uint var_2b0h;\n    uint32_t var_a4h;\n    uint var_94h;\n    uint32_t var_90h;\n    uint32_t var_8ch;\n    uint var_7ch;\n    uint32_t var_78h;\n    uint32_t var_74h;\n    uint var_64h;\n    uint32_t var_60h;\n    uint32_t var_5ch;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_1ch;\n    uint32_t var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48ad36;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_2c4h = arg_ch;\n    _var_34h = 0;\n    _var_2ch = 0;\n    _var_24h = 0;\n    _var_1ch = 0;\n    var_2c0h = 0x20;\n    *arg_14h = 0;\n    var_14h = uVar1;\n    hObject = fcn.00425c70(1, 0, 3, 0x80);\n    if (hObject == 0xffffffff) {\n        uVar2 = 0;\n        var_48h = 7;\n        var_4ch = 0;\n        var_5ch = var_5ch & 0xffff0000;\n        if (*arg_8h != 0) {\n            uVar2 = fcn.00453054(arg_8h);\n        }\n        fcn.00402667(arg_8h, uVar2);\n        var_4h = 0;\n        puVar3 = fcn.00426660(0);\n        var_4h = CONCAT31(var_4h._1_3_, 1);\n        if (0xf < puVar3[5]) {\n            puVar3 = *puVar3;\n        }\n        pcVar9 = \"DigitalSignVerifier::_TmSigVerifyFileImp() Failed to open file(%s)\";\n        uVar8 = 0x2000002;\n        uVar7 = 0xfd;\n        pcVar6 = L\"SignVerifier.cpp\";\n        uVar2 = fcn.0042c180(extraout_ECX);\n        fcn.0042c3c0(uVar2, pcVar6, uVar7, uVar8, pcVar9, puVar3);\n        if (0xf < var_60h) {\n            fcn.00452a07(var_74h);\n        }\n        var_60h = 0xf;\n        var_64h = 0;\n        var_74h = var_74h & 0xffffff00;\n        if (7 < var_48h) {\n            fcn.00452a07(var_5ch);\n        }\n        goto code_r0x0042ef22;\n    }\n    if (*0x4b967c == 0) {\n        iVar4 = (*_sym.imp.WINTRUST.dll_CryptCATAdminAcquireContext)(0x4b967c, 0, 0, uVar1);\n        if (iVar4 == 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            pcVar9 = \"DigitalSignVerifier::_TmSigVerifyFileImp() CryptCATAdminAcquireContext failed with error %lu\";\n            uVar10 = 0x2000002;\n            uVar8 = 0x10b;\n            pcVar6 = L\"SignVerifier.cpp\";\n            uVar7 = fcn.0042c180(extraout_ECX_00);\n            fcn.0042c3c0(uVar7, pcVar6, uVar8, uVar10, pcVar9, uVar2);\n            *0x4b967c = 0;\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n            goto code_r0x0042ef22;\n        }\n        if (*0x4b967c == 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n            goto code_r0x0042ef22;\n        }\n    }\n    iVar4 = (*_sym.imp.WINTRUST.dll_CryptCATAdminCalcHashFromFileHandle)(hObject, &var_2c0h, &var_34h, 0);\n    if (iVar4 != 0) {\n        iVar4 = (*_sym.imp.WINTRUST.dll_CryptCATAdminEnumCatalogFromHash)(*0x4b967c, &var_34h, var_2c0h, 0, 0);\n        var_2bch = iVar4;\n        if (iVar4 == 0) {\n            uVar2 = 0;\n            var_48h = 7;\n            var_4ch = 0;\n            var_5ch = var_5ch & 0xffff0000;\n            if (*arg_8h != 0) {\n                uVar2 = fcn.00453054(arg_8h);\n            }\n            fcn.00402667(arg_8h, uVar2);\n            var_4h = 4;\n            puVar3 = fcn.00426660(0);\n            var_4h = CONCAT31(var_4h._1_3_, 5);\n            if (0xf < puVar3[5]) {\n                puVar3 = *puVar3;\n            }\n            (*_sym.imp.KERNEL32.dll_GetLastError)();\n            pcVar9 = \n            \"DigitalSignVerifier::_TmSigVerifyFileImp() CryptCATAdminEnumCatalogFromHash failed (%s) with error %lu\";\n            uVar8 = 0x2000002;\n            uVar7 = 0x130;\n            pcVar6 = L\"SignVerifier.cpp\";\n            uVar2 = fcn.0042c180();\n            fcn.0042c3c0(uVar2, pcVar6, uVar7, uVar8, pcVar9, puVar3);\n            fcn.0040230f();\n            var_4h = 0xffffffff;\n            if (7 < var_48h) {\n                fcn.00452a07(var_5ch);\n            }\n        }\n        else {\n            fcn.00453710(&var_2b4h, 0, 0x20c);\n            iVar4 = (*_sym.imp.WINTRUST.dll_CryptCATCatalogInfoFromContext)(iVar4, &var_2b4h, 0);\n            if (iVar4 == 0) {\n                fcn.00402707(arg_8h);\n                var_4h = 2;\n                puVar3 = fcn.00426660(0);\n                var_4h = CONCAT31(var_4h._1_3_, 3);\n                if (0xf < puVar3[5]) {\n                    puVar3 = *puVar3;\n                }\n                (*_sym.imp.KERNEL32.dll_GetLastError)();\n                pcVar9 = \n                \"DigitalSignVerifier::_TmSigVerifyFileImp() CryptCATCatalogInfoFromContext failed (%s) with error %lu\";\n                uVar8 = 0x2000002;\n                uVar7 = 0x127;\n                pcVar6 = L\"SignVerifier.cpp\";\n                uVar2 = fcn.0042c180();\n                fcn.0042c3c0(uVar2, pcVar6, uVar7, uVar8, pcVar9, puVar3);\n                fcn.0040230f();\n                var_4h = 0xffffffff;\n                if (7 < var_60h) {\n                    fcn.00452a07(var_74h);\n                }\n            }\n            else {\n                iVar4 = fcn.0042e7b0(&var_2b0h, var_2c4h);\n                if (iVar4 != 0) {\n                    *arg_14h = 1;\n                }\n            }\n            (*_sym.imp.WINTRUST.dll_CryptCATAdminReleaseCatalogContext)(*0x4b967c, var_2bch, 0);\n        }\n    }\n    if (*arg_14h == 0) {\n        var_44h = 0xaac56b;\n        var_40h = 0x11d0cd44;\n        var_3ch = 0xc000c28c;\n        var_38h = 0xee95c24f;\n        fcn.00453710(&var_304h, 0, 0x30);\n        _var_2cch = hObject;\n        var_2ech = &var_2d4h;\n        var_304h = 0x30;\n        var_2f8h = 2;\n        var_2f4h = 0;\n        var_2f0h = 1;\n        _var_2d4h = CONCAT44(arg_8h, 0x10);\n        var_2e8h = 1;\n        var_2bch = (*_sym.imp.WINTRUST.dll_WinVerifyTrust)(0xffffffff, &var_44h, &var_304h);\n        if (var_2bch == 0) {\n            piVar5 = var_2c4h;\n            uVar2 = extraout_ECX_01;\n            iVar4 = fcn.0042e7b0(arg_8h, var_2c4h);\n            if (iVar4 != 0) {\n                *arg_14h = 1;\n            }\n        }\n        else {\n            uVar2 = 0;\n            var_78h = 7;\n            var_7ch = 0;\n            var_8ch = var_8ch & 0xffff0000;\n            if (*arg_8h != 0) {\n                uVar2 = fcn.00453054(arg_8h);\n            }\n            fcn.00402667(arg_8h, uVar2);\n            var_4h = 6;\n            puVar3 = fcn.00426660(0);\n            var_4h = CONCAT31(var_4h._1_3_, 7);\n            if (0xf < puVar3[5]) {\n                puVar3 = *puVar3;\n            }\n            pcVar9 = \n            \"DigitalSignVerifier::_TmSigVerifyFileImp() WinVerifyTrust failed (%s) with error %lu, unable to verify embedded signature\"\n            ;\n            uVar10 = 0x2000002;\n            uVar8 = 0x159;\n            pcVar6 = L\"SignVerifier.cpp\";\n            uVar7 = fcn.0042c180();\n            fcn.0042c3c0(uVar7, pcVar6, uVar8, uVar10, pcVar9, puVar3);\n            piVar5 = arg_8h;\n            if (0xf < var_90h) {\n                fcn.00452a07(var_a4h);\n                piVar5 = arg_8h;\n            }\n            var_90h = 0xf;\n            var_94h = 0;\n            var_a4h = var_a4h & 0xffffff00;\n            if (7 < var_78h) {\n                fcn.00452a07(var_8ch);\n            }\n        }\n        var_2e8h = 2;\n        (*_sym.imp.WINTRUST.dll_WinVerifyTrust)(0xffffffff, &var_44h, &var_304h, piVar5, uVar2);\n    }\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\ncode_r0x0042ef22:\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(unaff_ESI);\n    return;\n}\n",
        "token_count": 2971
    },
    "0042ef40": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042ef40(int16_t *arg_8h, uint arg_ch, uint noname_2, int32_t *arg_14h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint32_t extraout_ECX_02;\n    int32_t *piVar8;\n    uint unaff_ESI;\n    int32_t *in_FS_OFFSET;\n    char16_t *pcVar9;\n    uint uVar10;\n    uint uVar11;\n    int16_t *piVar12;\n    char *pcVar13;\n    uint uVar14;\n    uint var_34ch;\n    uint var_348h;\n    uint var_344h;\n    uint var_33ch;\n    uint var_334h;\n    uint var_328h;\n    uint var_324h;\n    uint var_320h;\n    uint *var_31ch;\n    uint var_318h;\n    int32_t var_314h;\n    uint *var_304h;\n    uint var_300h;\n    uint var_2fch;\n    uint var_2f8h;\n    int16_t *var_2f0h;\n    uint var_2ech;\n    uint var_2e8h;\n    uint var_2e4h;\n    uint32_t hObject;\n    int32_t var_2dch;\n    int32_t *var_2d8h;\n    uint var_2d4h;\n    uint var_2d0h;\n    uint32_t var_c4h;\n    uint var_b4h;\n    uint32_t var_b0h;\n    uint32_t var_ach;\n    uint var_9ch;\n    uint32_t var_98h;\n    uint32_t var_94h;\n    uint var_84h;\n    uint32_t var_80h;\n    uint32_t var_7ch;\n    uint var_6ch;\n    uint32_t var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint32_t var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48acbf;\n    var_ch = *in_FS_OFFSET;\n    var_14h = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_2ech = arg_ch;\n    var_2f0h = arg_8h;\n    var_2d8h = arg_14h;\n    var_2e4h = 0;\n    fcn.00453710(&var_54h, 0, 0x40, var_14h);\n    var_2e8h = 0x40;\n    *arg_14h = 0;\n    uVar2 = fcn.00425c70(1, 0, 3, 0x80);\n    hObject = uVar2;\n    if (uVar2 == 0xffffffff) {\n        uVar3 = 0;\n        var_68h = 7;\n        var_6ch = 0;\n        var_7ch = var_7ch & 0xffff0000;\n        if (*arg_8h != 0) {\n            uVar3 = fcn.00453054(arg_8h);\n        }\n        fcn.00402667(arg_8h, uVar3);\n        var_4h = 0;\n        puVar4 = fcn.00426660(0);\n        var_4h = CONCAT31(var_4h._1_3_, 1);\n        if (0xf < puVar4[5]) {\n            puVar4 = *puVar4;\n        }\n        pcVar13 = \"DigitalSignVerifier::_TmSigVerifyFileImp() Failed to open file(%s)\";\n        uVar11 = 0x2000002;\n        uVar10 = 0x172;\n        pcVar9 = L\"SignVerifier.cpp\";\n        uVar3 = fcn.0042c180(extraout_ECX);\n        fcn.0042c3c0(uVar3, pcVar9, uVar10, uVar11, pcVar13, puVar4);\n        if (0xf < var_80h) {\n            fcn.00452a07(var_94h);\n        }\n        var_80h = 0xf;\n        var_84h = 0;\n        var_94h = var_94h & 0xffffff00;\n        if (7 < var_68h) {\n            fcn.00452a07(var_7ch);\n        }\n        goto code_r0x0042f624;\n    }\n    if (*0x4b967c == NULL) {\n        iVar5 = (**0x4b9674)(0x4b967c, 0, 0, 0, 0);\n        if (iVar5 == 0) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            pcVar13 = \"DigitalSignVerifier::_TmSigVerifyFileImp() CryptCATAdminAcquireContext2 failed with error %lu\";\n            uVar14 = 0x2000002;\n            uVar11 = 0x181;\n            pcVar9 = L\"SignVerifier.cpp\";\n            uVar10 = fcn.0042c180(extraout_ECX_00);\n            fcn.0042c3c0(uVar10, pcVar9, uVar11, uVar14, pcVar13, uVar3);\n            *0x4b967c = NULL;\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar2);\n            goto code_r0x0042f624;\n        }\n        if (*0x4b967c == NULL) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar2);\n            goto code_r0x0042f624;\n        }\n    }\n    piVar12 = *0x4b967c;\n    uVar7 = uVar2;\n    iVar5 = (**0x4b9670)(*0x4b967c, uVar2, &var_2e8h, &var_54h, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    piVar8 = var_2d8h;\n    if (iVar5 != 0) {\n        iVar5 = (*_sym.imp.WINTRUST.dll_CryptCATAdminEnumCatalogFromHash)(*0x4b967c, &var_54h, var_2e8h, 0, 0);\n        var_2dch = iVar5;\n        if (iVar5 == 0) {\n            uVar3 = 0;\n            var_68h = 7;\n            var_6ch = 0;\n            var_7ch = var_7ch & 0xffff0000;\n            if (*arg_8h != 0) {\n                uVar3 = fcn.00453054(arg_8h);\n            }\n            fcn.00402667(arg_8h, uVar3);\n            var_4h = 4;\n            puVar4 = fcn.00426660(0);\n            var_4h = CONCAT31(var_4h._1_3_, 5);\n            if (0xf < puVar4[5]) {\n                puVar4 = *puVar4;\n            }\n            (*pcVar1)();\n            pcVar13 = \n            \"DigitalSignVerifier::_TmSigVerifyFileImp() CryptCATAdminEnumCatalogFromHash failed (%s) with error %lu\";\n            uVar11 = 0x2000002;\n            uVar10 = 0x1a6;\n            pcVar9 = L\"SignVerifier.cpp\";\n            uVar3 = fcn.0042c180();\n            fcn.0042c3c0(uVar3, pcVar9, uVar10, uVar11, pcVar13, puVar4);\n            fcn.0040230f();\n            var_4h = 0xffffffff;\n            piVar8 = var_2d8h;\n            uVar2 = hObject;\n            if (7 < var_68h) {\n                fcn.00452a07(var_7ch);\n                piVar8 = var_2d8h;\n                uVar2 = hObject;\n            }\n        }\n        else {\n            fcn.00453710(&var_2d4h, 0, 0x20c);\n            iVar6 = (*_sym.imp.WINTRUST.dll_CryptCATCatalogInfoFromContext)(iVar5, &var_2d4h, 0);\n            if (iVar6 == 0) {\n                fcn.00402707(arg_8h);\n                var_4h = 2;\n                puVar4 = fcn.00426660(0);\n                var_4h = CONCAT31(var_4h._1_3_, 3);\n                if (0xf < puVar4[5]) {\n                    puVar4 = *puVar4;\n                }\n                (*pcVar1)();\n                pcVar13 = \n                \"DigitalSignVerifier::_TmSigVerifyFileImp() CryptCATCatalogInfoFromContext failed (%s) with error %lu\";\n                uVar11 = 0x2000002;\n                uVar10 = 0x19d;\n                pcVar9 = L\"SignVerifier.cpp\";\n                uVar3 = fcn.0042c180();\n                fcn.0042c3c0(uVar3, pcVar9, uVar10, uVar11, pcVar13, puVar4);\n                fcn.0040230f();\n                var_4h = 0xffffffff;\n                if (7 < var_80h) {\n                    fcn.00452a07(var_94h);\n                }\n                var_2e4h = 0;\n                iVar5 = var_2dch;\n            }\n            else {\n                var_2e4h = 1;\n                iVar6 = fcn.0042e7b0(&var_2d0h, var_2ech);\n                if (iVar6 != 0) {\n                    *var_2d8h = 0x11;\n                }\n            }\n            piVar8 = var_2d8h;\n            (*_sym.imp.WINTRUST.dll_CryptCATAdminReleaseCatalogContext)(*0x4b967c, iVar5, 0);\n            uVar2 = hObject;\n        }\n    }\n    if (*piVar8 == 0) {\n        var_64h = 0xaac56b;\n        var_60h = 0x11d0cd44;\n        var_5ch = 0xc000c28c;\n        var_58h = 0xee95c24f;\n        fcn.00453710(&var_334h, 0, 0x34);\n        pcVar1 = _sym.imp.WINTRUST.dll_WinVerifyTrust;\n        var_31ch = &var_300h;\n        var_304h = &var_34ch;\n        _var_33ch = 0;\n        var_334h = 0x34;\n        var_328h = 2;\n        var_324h = 0;\n        var_320h = 1;\n        _var_300h = CONCAT44(arg_8h, 0x10);\n        _var_2f8h = uVar2;\n        var_318h = 1;\n        _var_344h = 3;\n        _var_34ch = 0x18;\n        iVar5 = (*_sym.imp.WINTRUST.dll_WinVerifyTrust)(0xffffffff, &var_64h, &var_334h);\n        var_2dch = iVar5;\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        pcVar13 = \"DigitalSignVerifier::_TmSigVerifyFileImp2() Verifying primary signature... (%lu)\";\n        uVar14 = 0x2000040;\n        uVar11 = 0x1cb;\n        pcVar9 = L\"SignVerifier.cpp\";\n        uVar10 = fcn.0042c180(extraout_ECX_01);\n        fcn.0042c3c0(uVar10, pcVar9, uVar11, uVar14, pcVar13, uVar3);\n        if ((iVar5 != 0) && (uVar2 = 1,  iVar5 = var_2dch,  var_304h[3] != 0)) {\n            while( true ) {\n                var_318h = 2;\n                iVar6 = (*pcVar1)(0xffffffff, &var_64h, &var_334h);\n                iVar5 = var_2dch;\n                arg_8h = var_2f0h;\n                if (iVar6 != 0) break;\n                var_318h = 1;\n                var_314h = iVar6;\n                var_304h[1] = uVar2;\n                iVar6 = (*pcVar1)(0xffffffff, &var_64h, &var_334h);\n                var_2dch = iVar6;\n                (*_sym.imp.KERNEL32.dll_GetLastError)();\n                pcVar13 = \"DigitalSignVerifier::_TmSigVerifyFileImp2() Verifying secondary signature[%d]... (%lu)\";\n                uVar11 = 0x2000040;\n                uVar10 = 0x1dc;\n                pcVar9 = L\"SignVerifier.cpp\";\n                uVar7 = uVar2;\n                uVar3 = fcn.0042c180();\n                fcn.0042c3c0(uVar3, pcVar9, uVar10, uVar11, pcVar13, uVar7);\n                iVar5 = var_2dch;\n                arg_8h = var_2f0h;\n                if ((iVar6 == 0) || (uVar2 = uVar2 + 1,  var_304h[3] <= uVar2 && uVar2 != var_304h[3])) break;\n            }\n        }\n        var_318h = 2;\n        (*pcVar1)(0xffffffff, &var_64h, &var_334h);\n        if (iVar5 == 0) {\n            var_2e4h = 1;\n            uVar7 = extraout_ECX_02;\n            iVar5 = fcn.0042e7b0(arg_8h, arg_8h);\n            piVar12 = arg_8h;\n            if (iVar5 != 0) {\n                *var_2d8h = 1;\n            }\n        }\n        else {\n            uVar7 = 0;\n            var_98h = 7;\n            var_9ch = 0;\n            var_ach = var_ach & 0xffff0000;\n            if (*arg_8h != 0) {\n                uVar7 = fcn.00453054(arg_8h);\n            }\n            fcn.00402667(arg_8h, uVar7);\n            var_4h = 6;\n            puVar4 = fcn.00426660(0);\n            var_4h = CONCAT31(var_4h._1_3_, 7);\n            if (0xf < puVar4[5]) {\n                puVar4 = *puVar4;\n            }\n            pcVar13 = \n            \"DigitalSignVerifier::_TmSigVerifyFileImp2() WinVerifyTrust failed (%s) with error %lu, unable to verify embedded signature\"\n            ;\n            uVar11 = 0x2000002;\n            uVar10 = 0x1f9;\n            pcVar9 = L\"SignVerifier.cpp\";\n            uVar3 = fcn.0042c180();\n            fcn.0042c3c0(uVar3, pcVar9, uVar10, uVar11, pcVar13, puVar4);\n            piVar12 = arg_8h;\n            if (0xf < var_b0h) {\n                fcn.00452a07(var_c4h);\n                piVar12 = arg_8h;\n            }\n            var_b0h = 0xf;\n            var_b4h = 0;\n            var_c4h = var_c4h & 0xffffff00;\n            if (7 < var_98h) {\n                fcn.00452a07(var_ach);\n            }\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject, piVar12, uVar7);\ncode_r0x0042f624:\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(unaff_ESI);\n    return;\n}\n",
        "token_count": 3760
    },
    "004322b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004322b0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint *puVar5;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    int32_t *in_FS_OFFSET;\n    char16_t *pcVar6;\n    uint uVar7;\n    uint arg_14h;\n    char *pcVar8;\n    uint in_stack_ffffffc8;\n    uint var_30h;\n    uint32_t lpNumberOfBytesRead;\n    uint *lpFileName;\n    uint var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x48b0c0;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_14h = 7;\n    var_18h = 0;\n    lpFileName = lpFileName & 0xffff0000;\n    var_4h = 0;\n    iVar1 = fcn.00432120(var_10h);\n    if (iVar1 != 0) {\n        var_4h = CONCAT31(var_4h._1_3_, 1);\n        puVar5 = &lpFileName;\n        if (7 < var_14h) {\n            puVar5 = lpFileName;\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(puVar5, 1, 1, 0, 3, 0x80, 0);\n        if ((iVar1 == -1) || (iVar1 == 0)) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar2 == 2) {\n                puVar5 = &lpFileName;\n                if (7 < var_14h) {\n                    puVar5 = lpFileName;\n                }\n                pcVar8 = \"GETGUID:no cached GUID(%S)\";\n                uVar7 = 0x2000040;\n                uVar4 = 0x8e;\n                pcVar6 = L\"GetGUIDInternal.cpp\";\n                uVar3 = fcn.0042c180(2);\n                fcn.0042c3c0(uVar3, pcVar6, uVar4, uVar7, pcVar8, puVar5);\n            }\n            else {\n                pcVar8 = \"GETGUID:fail(%lu) open cached file(%S)\";\n                uVar7 = 0x2000002;\n                uVar4 = 0x90;\n                pcVar6 = L\"GetGUIDInternal.cpp\";\n                uVar3 = fcn.0042c180();\n                fcn.0042c3c0(uVar3, pcVar6, uVar4, uVar7, pcVar8, iVar2);\n            }\n        }\n        else {\n            iVar2 = (*_sym.imp.KERNEL32.dll_ReadFile)(iVar1, param_1, 0x24, &lpNumberOfBytesRead, 0);\n            if (iVar2 == 0) {\n                uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                pcVar8 = \"GETGUID:Error(%lu) reading GUID cache\";\n                arg_14h = 0x2000002;\n                uVar7 = 0x9d;\n                pcVar6 = L\"GetGUIDInternal.cpp\";\n                uVar4 = fcn.0042c180(extraout_ECX_00);\n                fcn.0042c3c0(uVar4, pcVar6, uVar7, arg_14h, pcVar8, uVar3);\n            }\n            else if (lpNumberOfBytesRead < 0x24) {\n                pcVar8 = \"GETGUID:invalid data in GUID cache(%lu bytes)\";\n                uVar7 = 0x2000002;\n                uVar4 = 0xa3;\n                pcVar6 = L\"GetGUIDInternal.cpp\";\n                uVar3 = fcn.0042c180(extraout_ECX);\n                fcn.0042c3c0(uVar3, pcVar6, uVar4, uVar7, pcVar8, lpNumberOfBytesRead);\n            }\n            else {\n                puVar5 = &lpFileName;\n                if (7 < var_14h) {\n                    puVar5 = lpFileName;\n                }\n                pcVar8 = \"GETGUID:get GUID from cache(%S)\";\n                uVar7 = 0x2000040;\n                uVar4 = 0xa8;\n                pcVar6 = L\"GetGUIDInternal.cpp\";\n                *(param_1 + 0x24) = 0;\n                uVar3 = fcn.0042c180(extraout_ECX);\n                fcn.0042c3c0(uVar3, pcVar6, uVar4, uVar7, pcVar8, puVar5);\n                pcVar8 = \"GETGUID:GUID is %s\";\n                uVar7 = 0x2000040;\n                uVar4 = 0xa9;\n                pcVar6 = L\"GetGUIDInternal.cpp\";\n                uVar3 = fcn.0042c180(extraout_ECX_01);\n                fcn.0042c3c0(uVar3, pcVar6, uVar4, uVar7, pcVar8, param_1);\n            }\n        }\n        if ((iVar1 != -1) && (iVar1 != 0)) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        }\n    }\n    if (7 < var_14h) {\n        fcn.00452a07(lpFileName);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(in_stack_ffffffc8);\n    return;\n}\n",
        "token_count": 1327
    },
    "004324d0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004324d0(uint lpBuffer)\n\n{\n    uint32_t arg_8h;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint *puVar5;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    int32_t *in_FS_OFFSET;\n    char16_t *pcVar6;\n    uint uVar7;\n    uint uVar8;\n    char *pcVar9;\n    uint var_30h;\n    uint lpNumberOfBytesWritten;\n    uint *lpFileName;\n    uint var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48b260;\n    var_ch = *in_FS_OFFSET;\n    arg_8h = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_14h = 7;\n    var_18h = 0;\n    lpFileName = lpFileName & 0xffff0000;\n    var_10h = arg_8h;\n    fcn.00402667(0x4a00e0, 0);\n    var_4h = 0;\n    iVar1 = fcn.00432120();\n    if (iVar1 != 0) {\n        var_4h = CONCAT31(var_4h._1_3_, 1);\n        puVar5 = &lpFileName;\n        if (7 < var_14h) {\n            puVar5 = lpFileName;\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(puVar5, 2, 1, 0, 4, 0x80, 0);\n        if ((iVar1 == -1) || (iVar1 == 0)) {\n            puVar5 = &lpFileName;\n            if (7 < var_14h) {\n                puVar5 = lpFileName;\n            }\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)(puVar5);\n            pcVar9 = \"GETGUID:fail(%lu) open cache for write(%S)\";\n            uVar8 = 0x2000002;\n            uVar7 = 0xb8;\n            pcVar6 = L\"GetGUIDInternal.cpp\";\n            uVar4 = fcn.0042c180();\n            fcn.0042c3c0(uVar4, pcVar6, uVar7, uVar8, pcVar9, uVar3);\n        }\n        else {\n            iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)(iVar1, &lpBuffer, 0x24, &lpNumberOfBytesWritten, 0);\n            if (iVar2 == 0) {\n                uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                pcVar9 = \"GETGUID:Error(%lu) writing GUID cache\";\n                uVar8 = 0x2000002;\n                uVar7 = 0xbf;\n                pcVar6 = L\"GetGUIDInternal.cpp\";\n                uVar4 = fcn.0042c180(extraout_ECX_00);\n                fcn.0042c3c0(uVar4, pcVar6, uVar7, uVar8, pcVar9, uVar3);\n            }\n            else {\n                puVar5 = &lpFileName;\n                if (7 < var_14h) {\n                    puVar5 = lpFileName;\n                }\n                pcVar9 = \"GETGUID:GUID written to cache(%S)\";\n                uVar7 = 0x2000040;\n                uVar4 = 0xc3;\n                pcVar6 = L\"GetGUIDInternal.cpp\";\n                uVar3 = fcn.0042c180(extraout_ECX);\n                fcn.0042c3c0(uVar3, pcVar6, uVar4, uVar7, pcVar9, puVar5);\n            }\n        }\n        if ((iVar1 != -1) && (iVar1 != 0)) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        }\n    }\n    if (7 < var_14h) {\n        fcn.00452a07(lpFileName);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(arg_8h);\n    return;\n}\n",
        "token_count": 996
    },
    "004340f0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004340f0(uint arg_8h)\n\n{\n    int32_t arg_10h;\n    ushort uVar1;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint arg_8h_01;\n    uint *puVar5;\n    int32_t *in_FS_OFFSET;\n    int32_t var_14ch;\n    code *var_13ch;\n    int32_t var_138h;\n    uint var_134h;\n    int32_t *var_130h;\n    uint *var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint *var_120h;\n    uint *var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint *var_110h;\n    uint *var_10ch;\n    int32_t **var_108h;\n    int32_t var_104h;\n    uint var_100h;\n    uint var_fch;\n    uchar var_f8h [2];\n    uint var_f6h;\n    uint var_f0h;\n    int32_t var_ech;\n    code *var_dch;\n    int32_t *var_94h;\n    uint var_90h;\n    uint32_t var_8ch;\n    uint var_7ch;\n    uint32_t var_78h;\n    uint32_t var_74h;\n    uint var_64h;\n    uint32_t var_60h;\n    uint32_t var_5ch;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint var_34h;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48b451;\n    var_ch = *in_FS_OFFSET;\n    arg_8h_00 = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_14h = arg_8h_00;\n    fcn.004345d0(arg_8h);\n    var_4h._0_1_ = 0;\n    var_4h._1_3_ = 0;\n    if (var_ech != 0) {\n        var_18h = 7;\n        var_1ch = 0;\n        var_2ch = var_2ch & 0xffff0000;\n        while( true ) {\n            uVar2 = fcn.0040e1fb(&var_94h);\n            var_4h._0_1_ = 2;\n            piVar3 = fcn.0040e157(uVar2);\n            var_4h._0_1_ = 1;\n            if ((var_94h != NULL) && (puVar5 = (**(*var_94h + 8))(),  puVar5 != NULL)) {\n                (***puVar5)(1);\n            }\n            uVar1 = (**(*piVar3 + 0x30))(10);\n            piVar3 = fcn.00434db0(uVar1);\n            arg_10h = var_1ch;\n            iVar4 = *(*piVar3 + 4) + piVar3;\n            if ((*(iVar4 + 0xc) & 6) != 0) {\n                iVar4 = 0;\n            }\n            if (iVar4 == 0) break;\n            if (var_1ch != 0) {\n                var_90h = 0x2c;\n                iVar4 = fcn.00429530(&var_90h, 0xffffffff, 1);\n                if (iVar4 != -1) {\n                    uVar2 = fcn.004085ca(&var_8ch, iVar4 + 1, arg_10h);\n                    var_4h._0_1_ = 3;\n                    arg_8h_01 = fcn.004085ca(&var_74h, 0, iVar4);\n                    var_4h._0_1_ = 4;\n                    var_5ch = var_5ch & 0xffff0000;\n                    var_48h = 7;\n                    var_4ch = 0;\n                    fcn.00402450(arg_8h_01, 0, 0xffffffff);\n                    var_4h = CONCAT31(var_4h._1_3_, 5);\n                    var_30h = 7;\n                    var_34h = 0;\n                    var_44h = var_44h & 0xffff0000;\n                    fcn.00402450(uVar2, 0, 0xffffffff);\n                    if (7 < var_60h) {\n                        fcn.00452a07(var_74h);\n                    }\n                    var_60h = 7;\n                    var_64h = 0;\n                    var_74h = var_74h & 0xffff0000;\n                    var_4h._0_1_ = 8;\n                    if (7 < var_78h) {\n                        fcn.00452a07(var_8ch);\n                    }\n                    var_8ch = var_8ch & 0xffff0000;\n                    var_78h = 7;\n                    var_7ch = 0;\n                    fcn.00434550(&var_5ch);\n                    if (7 < var_30h) {\n                        fcn.00452a07(var_44h);\n                    }\n                    var_30h = 7;\n                    var_34h = 0;\n                    var_44h = var_44h & 0xffff0000;\n                    if (7 < var_48h) {\n                        fcn.00452a07(var_5ch);\n                    }\n                }\n            }\n        }\n        fcn.004348c0();\n        if (7 < var_18h) {\n            fcn.00452a07(var_2ch);\n        }\n        var_18h = 7;\n        var_1ch = 0;\n        var_2ch = var_2ch & 0xffff0000;\n    }\n    var_4h = 0xffffffff;\n    *(&var_14ch + *(var_14ch + 4)) = vtable.std::basic_ifstream_wchar_t__struct_std::char_traits_wchar_t__.0;\n    *(&stack0xfffffeac + *(var_14ch + 4)) = *(var_14ch + 4) + -0x70;\n    var_13ch = vtable.std::basic_filebuf_wchar_t__struct_std::char_traits_wchar_t__.0;\n    if ((var_ech != 0) && (*var_130h == var_f8h)) {\n        *var_130h = var_104h;\n        *var_120h = var_100h;\n        *var_110h = 0;\n    }\n    if (var_f0h != '\\0') {\n        if (var_ech != 0) {\n            fcn.00414970();\n            fcn.004567e2(var_ech);\n        }\n        var_130h = &var_138h;\n        var_12ch = &var_134h;\n        var_120h = &var_128h;\n        var_11ch = &var_124h;\n        var_110h = &var_118h;\n        var_10ch = &var_114h;\n        var_f0h._0_1_ = '\\0';\n        var_f6h._0_1_ = 0;\n        var_134h = 0;\n        var_124h = 0;\n        var_114h = 0;\n        var_138h = 0;\n        var_128h = 0;\n        var_118h = 0;\n        var_ech = 0;\n        stack0xffffff08 = *0x4b96f0;\n        var_fch = 0;\n    }\n    var_13ch = vtable.std::basic_streambuf_wchar_t__struct_std::char_traits_wchar_t__.0;\n    if (var_108h != NULL) {\n        if ((*var_108h != NULL) && (puVar5 = (**(**var_108h + 8))(),  puVar5 != NULL)) {\n            (***puVar5)(1);\n        }\n        fcn.00452a07(var_108h);\n    }\n    *(&var_14ch + *(var_14ch + 4)) = vtable.std::basic_istream_wchar_t__struct_std::char_traits_wchar_t__.0;\n    *(&stack0xfffffeac + *(var_14ch + 4)) = *(var_14ch + 4) + -0x18;\n    var_dch = vtable.std::ios_base.0;\n    fcn.0044e8ed(&var_dch);\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(arg_8h_00);\n    return;\n}\n",
        "token_count": 2052
    },
    "00435180": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00435180(uint arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    uint arg_ch;\n    uint *puVar2;\n    uint *in_ECX;\n    uint *in_EDX;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint var_2ch;\n    uint var_28h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x48b4d8;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_4h = 0;\n    iVar1 = fcn.0040853f(0x4a078c, 0xffffffff);\n    if (iVar1 == -1) {\n        arg_ch = fcn.00453054(0x4a761c);\n        arg_8h_00 = 0x4a761c;\n        fcn.00402667(0x4a761c, arg_ch);\n        if (in_EDX != &arg_8h) {\n            fcn.00402450(&arg_8h, 0, 0xffffffff);\n        }\n    }\n    else {\n        arg_8h_00 = 0;\n        puVar2 = fcn.004085ca(&var_28h, 0, iVar1 + 1);\n        if (in_ECX != puVar2) {\n            if (7 < in_ECX[5]) {\n                fcn.00452a07(*in_ECX);\n            }\n            in_ECX[5] = 7;\n            in_ECX[4] = 0;\n            *in_ECX = 0;\n            if (puVar2[5] < 8) {\n                if (puVar2[4] != -1) {\n                    fcn.004530c0();\n                }\n            }\n            else {\n                *in_ECX = *puVar2;\n                *puVar2 = 0;\n            }\n            in_ECX[4] = puVar2[4];\n            in_ECX[5] = puVar2[5];\n            puVar2[5] = 7;\n            puVar2[4] = 0;\n            *puVar2 = 0;\n        }\n        if (7 < var_14h) {\n            fcn.00452a07(var_28h);\n        }\n        puVar2 = fcn.004085ca(&var_28h, iVar1 + 1, 0xffffffff);\n        if (in_EDX != puVar2) {\n            if (7 < in_EDX[5]) {\n                fcn.00452a07(*in_EDX);\n            }\n            in_EDX[5] = 7;\n            in_EDX[4] = 0;\n            *in_EDX = 0;\n            if (puVar2[5] < 8) {\n                if (puVar2[4] != -1) {\n                    fcn.004530c0();\n                }\n            }\n            else {\n                *in_EDX = *puVar2;\n                *puVar2 = 0;\n            }\n            in_EDX[4] = puVar2[4];\n            in_EDX[5] = puVar2[5];\n            puVar2[5] = 7;\n            puVar2[4] = 0;\n            *puVar2 = 0;\n        }\n        if (7 < var_14h) {\n            fcn.00452a07(var_28h);\n        }\n    }\n    if (7 < arg_1ch) {\n        fcn.00452a07(arg_8h);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(arg_8h_00);\n    return;\n}\n",
        "token_count": 908
    },
    "00435bfd": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00435bfd(uint noname_0, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    \n    piVar2 = NULL;\n    uVar3 = 0;\n    iVar1 = 0;\n    if ((arg_10h & 3) == 1) {\n        iVar1 = -0x80000000;\n        uVar3 = 1;\n        arg_10h = 3;\n    }\n    else if ((arg_10h & 4) == 0) {\n        if ((arg_10h & 8) != 0) {\n            iVar1 = -0x40000000;\n            arg_10h = 2;\n        }\n    }\n    else {\n        iVar1 = -0x40000000;\n        arg_10h = 3;\n    }\n    if ((arg_ch != 0) && (iVar1 != 0)) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_ch, iVar1, uVar3, 0, arg_10h, 0, 0);\n        if (iVar1 == -1) {\n            iVar1 = 0;\n        }\n        if (iVar1 != 0) {\n            piVar2 = fcn.00456a6c(8);\n            if (piVar2 == NULL) {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n            }\n            else {\n                *piVar2 = iVar1;\n                piVar2[1] = 0;\n            }\n        }\n    }\n    return piVar2;\n}\n",
        "token_count": 373
    },
    "0043b750": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0043b750(int32_t param_1, uint *param_2, int32_t *param_3)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    uint *puVar7;\n    int32_t extraout_EDX;\n    ulong uVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    int32_t *arg_8h;\n    int32_t *piVar11;\n    int32_t iStack72;\n    int32_t iStack68;\n    int32_t iStack64;\n    ulong uStack60;\n    uint uStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    int32_t iStack12;\n    uint8_t *puStack8;\n    uint32_t uStack4;\n    \n    uStack4 = *0x4b4f00 ^ &stack0xffffffb0;\n    iStack64 = 0;\n    iStack68 = 0;\n    iStack72 = 0;\n    arg_8h = param_3;\n    uVar8 = fcn.0043b710(param_1);\n    puVar7 = uVar8 >> 0x20;\n    if (uVar8 == 0) {\n        if (puVar7 != NULL) {\n            *puVar7 = 0x60010023;\n        }\n        if (param_3 != NULL) {\n            *param_3 = 0;\n        }\n        fcn.004529f8(arg_8h);\n        return;\n    }\n    uVar8 = fcn.00458b4f(0);\n    uStack48 = uVar8 >> 0x20;\n    uVar3 = uVar8;\n    iVar4 = fcn.0043bc80(param_1 + 0x14, &iStack64, &iStack68, &iStack72);\n    if (iVar4 == 0) {\n        iStack24 = iStack64 + -0x76c;\n        iStack28 = iStack68 + -1;\n        iStack32 = iStack72;\n        iStack44 = iVar4;\n        iStack40 = iVar4;\n        iStack36 = iVar4;\n        iStack20 = iVar4;\n        iStack16 = iVar4;\n        iStack12 = iVar4;\n        iVar4 = fcn.0043be30();\n        if (iVar4 != 0) {\n            iStack12 = 1;\n        }\n        uStack60 = fcn.00458b3e(&iStack44);\n        if ((((uStack60 != -1) && (iStack24 == iStack64 + -0x76c)) && (iStack28 == iStack68 + -1)) &&\n           (iStack32 == iStack72)) {\n            uVar5 = *(param_1 + 10) - 0x31;\n            puStack8 = param_1 + 10;\n            if ((uVar5 == 0) && (uVar5 = *(param_1 + 0xb),  uVar5 == 0)) {\n                iVar4 = 0;\n            }\n            else {\n                iVar4 = 1;\n                if (uVar5 < 1) {\n                    iVar4 = -1;\n                }\n            }\n            if (iVar4 == 0) {\n                pcVar6 = param_1 + 0x12;\n                do {\n                    cVar1 = *pcVar6;\n                    pcVar6 = pcVar6 + 1;\n                } while (cVar1 != '\\0');\n                if (pcVar6 - (param_1 + 0x13) == 1) {\n                    iVar4 = fcn.0043bdb0(0, *(param_1 + 0x12));\n                    if (iVar4 != -1) {\n                        iStack32 = iStack32 + iVar4 * 0x1e;\n                    }\n                }\n            }\n            iVar9 = fcn.00458b3e(&iStack44);\n            uVar2 = uStack48;\n            if (iVar9 != -1) {\n                fcn.0043b1a0(uVar3, uStack48, iVar9);\n                fcn.00458be6();\n                if (extraout_EDX < 0) {\n                    uVar5 = *puStack8 - 0x30;\n                    if ((uVar5 == 0) && (uVar5 = puStack8[1],  uVar5 == 0)) {\n                        iVar4 = 0;\n                    }\n                    else {\n                        iVar4 = 1;\n                        if (uVar5 < 1) {\n                            iVar4 = -1;\n                        }\n                    }\n                    if (iVar4 == 0) {\n                        fcn.0043b1a0(uStack60, uVar3, uVar2);\n                        uVar8 = fcn.00458be6();\n                        uStack48 = uVar8 >> 0x20;\n                        piVar11 = arg_8h;\n                        if (arg_8h != NULL) {\n                            iVar9 = fcn.00458b9e(uVar8, *0x48f12c);\n                            iVar4 = iVar9;\n                            if (0xffffffff < iVar9) {\n                                iVar4 = iVar4 + 1;\n                            }\n                            *arg_8h = iVar4;\n                        }\n                    }\n                    else {\n                        fcn.0043b1a0(uStack60, uVar3, uVar2);\n                        iVar10 = fcn.00458be6();\n                        if ((iVar10 < 0x100000000) && (iVar10 < 0)) {\n                            fcn.0043b1a0(iVar9, uVar3, uStack48);\n                            iVar9 = fcn.00458be6();\n                            if (-1 < iVar9) {\n                                piVar11 = arg_8h;\n                                if (arg_8h != NULL) {\n                                    iVar9 = fcn.00458b9e(iVar9, *0x48f12c);\n                                    iVar4 = iVar9;\n                                    if (0xffffffff < iVar9) {\n                                        iVar4 = iVar4 + 1;\n                                    }\n                                    *arg_8h = iVar4;\n                                }\n                                if (param_2 != NULL) {\n                                    *param_2 = 0x60010107;\n                                }\n                                fcn.004529f8(piVar11);\n                                return;\n                            }\n                        }\n                        piVar11 = arg_8h;\n                        if (arg_8h != NULL) {\n                            iVar9 = fcn.00458b9e(iVar10, *0x48f12c);\n                            iVar4 = iVar9;\n                            if (0xffffffff < iVar9) {\n                                iVar4 = iVar4 + 1;\n                            }\n                            *arg_8h = iVar4;\n                        }\n                    }\n                    if (param_2 != NULL) {\n                        *param_2 = 0x60010106;\n                    }\n                }\n                else {\n                    fcn.0043b1a0(uStack60, uVar3, uVar2);\n                    uVar8 = fcn.00458be6();\n                    uStack48 = uVar8 >> 0x20;\n                    piVar11 = arg_8h;\n                    if (arg_8h != NULL) {\n                        uVar8 = fcn.00458b9e(uVar8, *0x48f12c);\n                        uStack48 = uVar8 >> 0x20;\n                        *arg_8h = uVar8;\n                    }\n                    if (param_2 != NULL) {\n                        *param_2 = 0x60010108;\n                        fcn.004529f8(piVar11);\n                        return;\n                    }\n                }\n                fcn.004529f8(piVar11);\n                return;\n            }\n        }\n    }\n    fcn.004529f8(arg_8h);\n    return;\n}\n",
        "token_count": 1801
    },
    "0043c1e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0043c1e0(int32_t *param_1, char *param_2, int32_t param_3)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    char **ppcVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    int32_t *extraout_ECX;\n    \n    ppcVar4 = fcn.0043c030();\n    if (ppcVar4 != NULL) {\n        pcVar1 = param_2 + 1;\n        pcVar5 = param_2;\n        do {\n            cVar2 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar2 != '\\0');\n        if ((param_3 != -1) && (pcVar5 + (param_3 - pcVar1) < *ppcVar4)) {\n            param_2 = pcVar5[param_3 + (*extraout_ECX - pcVar1) + 1];\n            pcVar5[param_3 + (*extraout_ECX - pcVar1) + 1] = 0;\n        }\n        iVar3 = *extraout_ECX;\n        iVar6 = fcn.0043bec0(iVar3);\n        if ((param_3 != -1) && (pcVar5 + (param_3 - pcVar1) < *ppcVar4)) {\n            pcVar5[param_3 + (iVar3 - pcVar1) + 1] = param_2;\n        }\n        if (iVar6 != 0) {\n            return iVar6 - *param_1;\n        }\n    }\n    return -1;\n}\n",
        "token_count": 375
    },
    "0043c6f0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0043c6f0(int32_t *param_1, int32_t *param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint extraout_EDX;\n    int32_t **in_FS_OFFSET;\n    ulong uVar3;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x485e39;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &stack0xffffffe0;\n    *in_FS_OFFSET = &piStack12;\n    fcn.0043beb0(uVar1);\n    uStack4 = extraout_EDX;\n    uVar1 = fcn.0043c300();\n    if (uVar1 < param_3) {\n        param_3 = uVar1;\n    }\n    if ((param_4 == 0xffffffff) || (uVar1 < param_4 + param_3)) {\n        param_4 = uVar1 - param_3;\n    }\n    uVar3 = fcn.0043c030();\n    if ((uVar3 == uVar3 >> 0x20) || (*(uVar3 + 4) < param_4)) {\n        fcn.0043c3f0(param_4 + 1);\n    }\n    fcn.00452a10(*param_2, *param_1 + param_3, param_4);\n    puVar2 = fcn.0043c030();\n    *puVar2 = param_4;\n    *(param_4 + *param_2) = 0;\n    *in_FS_OFFSET = 0x1;\n    return param_2;\n}\n",
        "token_count": 416
    },
    "0043c980": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0043c980(uint *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t *in_stack_ffffffe0;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x4863b8;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &stack0xfffffff0;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = 0;\n    fcn.0043c570(param_2, uVar1);\n    if (param_2 != -1) {\n        in_stack_ffffffe0 = NULL;\n        uVar2 = fcn.0043c6f0(*0x10, 0, param_2);\n        fcn.0043c590(uVar2);\n        fcn.0043c360();\n    }\n    *in_FS_OFFSET = in_stack_ffffffe0;\n    return param_1;\n}\n",
        "token_count": 263
    },
    "0043d850": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043d850(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    int32_t iStack60;\n    int32_t iStack56;\n    int32_t iStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack72 = 0;\n    uStack68 = 0;\n    uStack64 = 0;\n    uStack48 = 0;\n    uStack44 = 0;\n    uStack40 = 0;\n    iStack60 = param_3;\n    iStack56 = param_2 + -1;\n    iStack52 = param_1 + -0x76c;\n    iVar1 = fcn.0043be30();\n    if (iVar1 != 0) {\n        uStack40 = 1;\n    }\n    uStack36 = 0;\n    uStack32 = 0;\n    uStack28 = 0;\n    uStack12 = 0;\n    uStack8 = 0;\n    uStack4 = 0;\n    uStack16 = 100;\n    uStack20 = 0;\n    uStack24 = 1;\n    iVar1 = fcn.0043be30();\n    if (iVar1 != 0) {\n        uStack4 = 1;\n    }\n    uVar2 = fcn.00458b3e(&uStack36);\n    iVar3 = fcn.00458b3e(&uStack72);\n    if ((((iVar3 != -1) && (iStack52 == param_1 + -0x76c)) && (iStack56 == param_2 + -1)) && (iStack60 == param_3)) {\n        fcn.004587d4(iVar3, iVar3 >> 0x20, uVar2, uVar2 >> 0x20);\n        iVar1 = fcn.00458bb0();\n        if (-1 < iVar1) {\n            return iVar1;\n        }\n    }\n    return -0x1ffeffff;\n}\n",
        "token_count": 548
    },
    "0043da50": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.0043da50(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    int64_t iVar2;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    int32_t iStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    if (unaff_ESI != 0) {\n        uStack36 = 0;\n        uStack32 = 0;\n        uStack28 = 0;\n        uStack12 = 0;\n        uStack8 = 0;\n        uStack4 = 0;\n        uStack20 = 0;\n        iStack24 = param_1 + 1;\n        uStack16 = 100;\n        iVar1 = fcn.0043be30();\n        if (iVar1 != 0) {\n            uStack4 = 1;\n        }\n        iVar2 = fcn.00458b3e(&uStack36);\n        if (iVar2 != -1) {\n            iVar1 = fcn.00459841(unaff_ESI, 9, 0x48f208, &uStack36);\n            return -(iVar1 != 8) & 0xe0010001;\n        }\n    }\n    return 0xe0010001;\n}\n",
        "token_count": 307
    },
    "0043e140": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0043e140(void)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t extraout_ECX;\n    uint unaff_ESI;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_00001010;\n    int32_t in_stack_00001028;\n    \n    fcn.00459c50();\n    *in_FS_OFFSET = &stack0x0000101c;\n    *(extraout_ECX + 4) = 0;\n    fcn.0043c590();\n    fcn.0043ea40();\n    fcn.0043c590();\n    fcn.0043c360();\n    iVar1 = fcn.0043c2e0();\n    if (iVar1 == 0) {\n        if (in_stack_00001028 != 0) {\n            fcn.00453710();\n            fcn.0043bff0();\n            iVar1 = fcn.0043e070();\n            if (iVar1 == 0) goto code_r0x0043e613;\n            fcn.0043c6d0();\n        }\n        uVar5 = *0x4b445c;\n        arg_8h = fcn.0043bff0();\n        iVar1 = fcn.00459c80(arg_8h, uVar5);\n        iVar2 = fcn.0043c300();\n        if (iVar1 == iVar2) {\n            iVar1 = fcn.0043c3b0();\n            if (iVar1 == -1) {\n                fcn.0043c570();\n            }\n            else {\n                fcn.0043c6f0();\n                fcn.0043c590();\n                fcn.0043c360();\n                fcn.0043e870();\n                fcn.0043c590();\n                fcn.0043c360();\n            }\n            uVar3 = fcn.0043c3b0();\n            uVar4 = fcn.0043c3b0();\n            if (uVar3 != 0xffffffff) {\n                iVar1 = fcn.0043c300();\n                if (uVar3 != iVar1 - 1U) {\n                    if (uVar4 == 0xffffffff) {\n                        uVar4 = fcn.0043c3b0();\n                    }\n                    else {\n                        if (uVar3 <= uVar4) goto code_r0x0043e613;\n                        uVar4 = fcn.0043c3b0();\n                    }\n                    if ((uVar4 == 0xffffffff) || (uVar3 <= uVar4)) {\n                        fcn.0043c6f0();\n                        fcn.0043c590();\n                        fcn.0043c360();\n                        *(extraout_ECX + 0x10) = 0x50;\n                    }\n                    else {\n                        fcn.0043c6f0();\n                        fcn.0043c590();\n                        fcn.0043c360();\n                        fcn.0043c6f0();\n                        fcn.0043bff0();\n                        uVar5 = fcn.00458c5b();\n                        *(extraout_ECX + 0x10) = uVar5;\n                        fcn.0043c360();\n                    }\n                    fcn.0043c1e0();\n                    uVar4 = fcn.0043c1e0();\n                    if (uVar4 == uVar3) {\n                        unaff_ESI = 0x48f2f4;\n                        fcn.0043c570();\n                    }\n                    else {\n                        unaff_ESI = fcn.0043c6f0();\n                        fcn.0043c590();\n                        fcn.0043c360();\n                    }\n                    fcn.0043c300();\n                    fcn.0043c6f0();\n                    fcn.0043c590();\n                    fcn.0043c360();\n                    iVar1 = fcn.0043c2e0();\n                    if (iVar1 == 0) {\n                        fcn.0043e950();\n                        fcn.0043c840();\n                        fcn.0043c7b0();\n                        fcn.0043c840();\n                        fcn.0043c7b0();\n                        fcn.0043c7b0();\n                        fcn.0043c7b0();\n                        fcn.0043c590();\n                        fcn.0043c360();\n                        fcn.0043c360();\n                        fcn.0043c360();\n                        fcn.0043c360();\n                        fcn.0043c360();\n                        fcn.0043c360();\n                        fcn.0043c360();\n                        *(extraout_ECX + 4) = 1;\n                    }\n                }\n            }\n        }\n    }\ncode_r0x0043e613:\n    *in_FS_OFFSET = in_stack_00001010;\n    fcn.004529f8(unaff_ESI);\n    return;\n}\n",
        "token_count": 1116
    },
    "00441500": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00441500(int32_t param_1)\n\n{\n    code **ppcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    uint extraout_ECX_01;\n    int32_t unaff_EBX;\n    int32_t *in_FS_OFFSET;\n    char *pcVar5;\n    uchar *puStack160;\n    uchar *puStack156;\n    uchar *puStack152;\n    char *pcStack148;\n    int32_t iStack144;\n    char *pcStack140;\n    uchar *puStack136;\n    uchar *puStack132;\n    char *pcStack128;\n    uint uStack124;\n    uchar *puStack120;\n    uchar *puStack116;\n    uint uStack112;\n    uint uStack108;\n    uint32_t uStack104;\n    uchar auStack84 [4];\n    uchar auStack80 [4];\n    uchar uStack76;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack60;\n    uchar uStack56;\n    uchar uStack52;\n    uchar uStack48;\n    uchar uStack44;\n    uchar uStack40;\n    uchar uStack36;\n    uchar uStack20;\n    uchar uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x4864e1;\n    uStack12 = *in_FS_OFFSET;\n    uStack104 = *0x4b4f00 ^ &stack0xffffff9c;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    uStack108 = 0xffffffff;\n    uStack112 = 0x4a23ad;\n    puStack60 = NULL;\n    puStack116 = 0x441541;\n    fcn.0043c980();\n    uStack12 = 1;\n    puStack116 = 0x441553;\n    fcn.0043beb0();\n    uVar3 = uStack4;\n    uStack12 = CONCAT31(uStack12._1_3_, 2);\n    if (*(param_1 + 0xa8) == 3) {\n        puStack116 = &stack0xffffffa4;\n        puStack120 = 0x441573;\n        fcn.0043c6b0();\n        uStack72 = 1;\n    }\n    else {\n        iVar2 = 1;\n        piVar4 = param_1 + 0x98;\n        do {\n            if (*piVar4 != 0) {\n                if (iVar2 == 1) {\n                    if (*(param_1 + 0xa8) == 1) {\n                        puStack116 = &stack0xffffffa8;\n                        puStack120 = 0x44166c;\n                        fcn.0043e050();\n                        uStack16 = 5;\n                        puStack120 = 0x44167a;\n                        fcn.0043beb0();\n                        uStack16 = 6;\n                        puStack120 = 0x441688;\n                        fcn.0043beb0();\n                        puStack120 = NULL;\n                        uStack124 = 0x5c;\n                        uStack16 = 7;\n                        pcStack128 = 0x44169b;\n                        pcStack148 = fcn.0043c370();\n                        if (pcStack148 == 0xffffffff) {\n                            pcStack128 = &stack0xffffff9c;\n                            puStack132 = 0x44170f;\n                            fcn.0043c590();\n                            puStack132 = &stack0xffffff98;\n                            puStack136 = 0x44171d;\n                            fcn.0043c590();\n                            iStack144 = extraout_ECX_00;\n                        }\n                        else {\n                            puStack132 = NULL;\n                            puStack136 = &stack0xffffffbc;\n                            pcStack140 = 0x4416b3;\n                            pcStack128 = pcStack148;\n                            pcStack140 = fcn.0043c6f0();\n                            uStack36 = 8;\n                            iStack144 = 0x4416c2;\n                            fcn.0043c590();\n                            uStack40 = 7;\n                            iStack144 = 0x4416cf;\n                            fcn.0043c360();\n                            iStack144 = 0xffffffff;\n                            pcStack148 = pcStack148 + 1;\n                            puStack152 = &stack0xffffffb0;\n                            puStack156 = 0x4416e3;\n                            puStack156 = fcn.0043c6f0();\n                            uStack52 = 9;\n                            puStack160 = 0x4416f2;\n                            fcn.0043c590();\n                            uStack56 = 7;\n                            puStack160 = 0x4416ff;\n                            fcn.0043c360();\n                            iStack144 = extraout_ECX;\n                        }\n                        puStack60 = &stack0xffffff70;\n                        pcStack148 = &stack0xffffff70;\n                        puStack152 = 0x44172d;\n                        fcn.0043d0d0();\n                        puStack60 = &stack0xffffff68;\n                        puStack156 = &stack0xffffff90;\n                        uStack44 = 10;\n                        puStack160 = 0x441743;\n                        puStack152 = extraout_ECX_01;\n                        fcn.0043c6b0();\n                        puStack60 = &stack0xffffff60;\n                        uStack48 = 0xb;\n                        fcn.0043c6b0(&stack0xffffff90);\n                        uStack52 = 7;\n                        uVar3 = fcn.00440db0(&stack0xffffffa8);\n                        uStack68 = CONCAT31(uStack68._1_3_, 0xc);\n                        fcn.0043c590(uVar3);\n                        uStack72._0_1_ = 7;\n                        fcn.0043c360();\n                        uStack72._0_1_ = 6;\n                        fcn.0043c360();\n                        uStack72._0_1_ = 5;\n                    }\n                    else {\n                        puStack116 = 0x1;\n                        puStack120 = &stack0xffffffa8;\n                        uStack124 = 0x4417af;\n                        fcn.00444eb0();\n                        uStack124 = 0;\n                        pcStack128 = \"NTLM\";\n                        uStack20 = 0xd;\n                        puStack132 = 0x4417c5;\n                        iVar2 = fcn.0043c3b0();\n                        if (iVar2 != -1) {\n                            puStack132 = 0xffffffff;\n                            puStack136 = NULL;\n                            pcStack140 = \"NTLM\";\n                            iStack144 = 0x4417dc;\n                            iStack144 = fcn.0043c3b0();\n                            iStack144 = iStack144 + 4;\n                            pcStack148 = &stack0xffffffbc;\n                            puStack152 = 0x4417ee;\n                            puStack152 = fcn.0043c6f0();\n                            uStack48 = 0xe;\n                            puStack156 = 0x4417fd;\n                            fcn.0043c590();\n                            uStack52 = 0xd;\n                            puStack156 = 0x44180a;\n                            fcn.0043c360();\n                        }\n                        puStack156 = &stack0xffffff80;\n                        puStack160 = &stack0xffffffb0;\n                        puStack156 = fcn.0043ea40();\n                        uStack52 = 0xf;\n                        puStack160 = 0x44182b;\n                        fcn.0043c590();\n                        uStack56 = 0xd;\n                        puStack160 = 0x441838;\n                        fcn.0043c360();\n                        uStack68 = &stack0xffffff60;\n                        fcn.0043c6b0(&stack0xffffff7c);\n                        uVar3 = fcn.00441050(&stack0xffffffac);\n                        uStack68 = CONCAT31(uStack68._1_3_, 0x10);\n                        fcn.0043c590(uVar3);\n                        uStack72._0_1_ = 0xd;\n                    }\n                    fcn.0043c360();\n                    uStack72 = CONCAT31(uStack72._1_3_, 2);\n                    fcn.0043c360();\n                    pcVar5 = \"NTLM\";\n                }\n                else {\n                    if (iVar2 != 2) {\n                        if (iVar2 == 3) {\n                            puStack116 = &stack0xffffffc4;\n                            puStack120 = 0x4415bd;\n                            fcn.0043d0d0();\n                            puStack120 = &stack0xffffffbc;\n                            uStack16 = 3;\n                            uStack124 = 0x4415d1;\n                            fcn.0043e050();\n                            ppcVar1 = **(param_1 + 0x78);\n                            uStack124 = 0;\n                            pcStack128 = &stack0xffffff9c;\n                            puStack132 = NULL;\n                            puStack136 = NULL;\n                            uStack20 = 4;\n                            pcStack140 = 0x4415ef;\n                            pcStack140 = fcn.0043bff0();\n                            iStack144 = 0x4415f7;\n                            iStack144 = fcn.0043bff0();\n                            pcStack148 = NULL;\n                            puStack152 = 0x441601;\n                            (**ppcVar1)();\n                            uStack72._0_1_ = 3;\n                            fcn.0043c360();\n                            uStack72 = CONCAT31(uStack72._1_3_, 2);\n                            fcn.0043c360();\n                            fcn.0043c570(\"Basic\");\n                        }\n                        break;\n                    }\n                    puStack116 = 0x44163f;\n                    iVar2 = fcn.0043c2e0();\n                    if (iVar2 == 0) {\n                        puStack120 = 0x44164d;\n                        puStack116 = param_1 + 0x5c;\n                        fcn.0043c590();\n                    }\n                    pcVar5 = \"Digest\";\n                }\n                fcn.0043c570(pcVar5);\n                break;\n            }\n            iVar2 = iVar2 + 1;\n            piVar4 = piVar4 + 1;\n        } while (iVar2 < 4);\n        fcn.0043beb0();\n        uStack76 = 0x11;\n        iVar2 = fcn.0043c2e0();\n        if (iVar2 == 0) {\n            uVar3 = fcn.0043ca10(&stack0xffffff90, \"Proxy-Authorization: \", &stack0xffffff6c);\n            uStack76 = 0x12;\n            uVar3 = fcn.0043c840(&stack0xffffff94, uVar3, 0x48f428);\n            uStack76 = 0x13;\n            uVar3 = fcn.0043c7b0(&stack0xffffff98, uVar3, &stack0xffffff64);\n            uStack76 = 0x14;\n            uVar3 = fcn.0043c840(&stack0xffffff9c, uVar3, 0x48f42c);\n            uStack76 = 0x15;\n            fcn.0043c590(uVar3);\n            auStack80[0] = 0x14;\n            fcn.0043c360();\n            auStack80[0] = 0x13;\n            fcn.0043c360();\n            auStack80[0] = 0x12;\n            fcn.0043c360();\n            auStack80[0] = 0x11;\n            fcn.0043c360();\n        }\n        uVar3 = uStack68;\n        fcn.0043c6b0(&stack0xffffff78);\n        puStack136 = 0x1;\n        auStack80[0] = 2;\n        fcn.0043c360();\n    }\n    auStack80[0] = 1;\n    fcn.0043c360();\n    auStack80[0] = 0;\n    fcn.0043c360();\n    *in_FS_OFFSET = unaff_EBX;\n    return uVar3;\n}\n",
        "token_count": 2727
    },
    "004419b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.004419b0(int32_t param_1)\n\n{\n    code **ppcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    uint extraout_ECX_01;\n    int32_t unaff_EBX;\n    int32_t *in_FS_OFFSET;\n    char *pcVar5;\n    uchar *puStack160;\n    uchar *puStack156;\n    uchar *puStack152;\n    char *pcStack148;\n    int32_t iStack144;\n    char *pcStack140;\n    uchar *puStack136;\n    uchar *puStack132;\n    char *pcStack128;\n    uint uStack124;\n    uchar *puStack120;\n    uchar *puStack116;\n    uint uStack112;\n    uint uStack108;\n    uint32_t uStack104;\n    uchar auStack84 [4];\n    uchar auStack80 [4];\n    uchar uStack76;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack60;\n    uchar uStack56;\n    uchar uStack52;\n    uchar uStack48;\n    uchar uStack44;\n    uchar uStack40;\n    uchar uStack36;\n    uchar uStack20;\n    uchar uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x4864e1;\n    uStack12 = *in_FS_OFFSET;\n    uStack104 = *0x4b4f00 ^ &stack0xffffff9c;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    uStack108 = 0xffffffff;\n    uStack112 = 0x4a23ad;\n    puStack60 = NULL;\n    puStack116 = 0x4419f1;\n    fcn.0043c980();\n    uStack12 = 1;\n    puStack116 = 0x441a03;\n    fcn.0043beb0();\n    uVar3 = uStack4;\n    uStack12 = CONCAT31(uStack12._1_3_, 2);\n    if (*(param_1 + 0xa4) == 3) {\n        puStack116 = &stack0xffffffa4;\n        puStack120 = 0x441a23;\n        fcn.0043c6b0();\n        uStack72 = 1;\n    }\n    else {\n        iVar2 = 1;\n        piVar4 = param_1 + 0x88;\n        do {\n            if (*piVar4 != 0) {\n                if (iVar2 == 1) {\n                    if (*(param_1 + 0xa4) == 1) {\n                        puStack116 = &stack0xffffffa8;\n                        puStack120 = 0x441b1c;\n                        fcn.0043d0a0();\n                        uStack16 = 5;\n                        puStack120 = 0x441b2a;\n                        fcn.0043beb0();\n                        uStack16 = 6;\n                        puStack120 = 0x441b38;\n                        fcn.0043beb0();\n                        puStack120 = NULL;\n                        uStack124 = 0x5c;\n                        uStack16 = 7;\n                        pcStack128 = 0x441b4b;\n                        pcStack148 = fcn.0043c370();\n                        if (pcStack148 == 0xffffffff) {\n                            pcStack128 = &stack0xffffff9c;\n                            puStack132 = 0x441bbf;\n                            fcn.0043c590();\n                            puStack132 = &stack0xffffff98;\n                            puStack136 = 0x441bcd;\n                            fcn.0043c590();\n                            iStack144 = extraout_ECX_00;\n                        }\n                        else {\n                            puStack132 = NULL;\n                            puStack136 = &stack0xffffffbc;\n                            pcStack140 = 0x441b63;\n                            pcStack128 = pcStack148;\n                            pcStack140 = fcn.0043c6f0();\n                            uStack36 = 8;\n                            iStack144 = 0x441b72;\n                            fcn.0043c590();\n                            uStack40 = 7;\n                            iStack144 = 0x441b7f;\n                            fcn.0043c360();\n                            iStack144 = 0xffffffff;\n                            pcStack148 = pcStack148 + 1;\n                            puStack152 = &stack0xffffffb0;\n                            puStack156 = 0x441b93;\n                            puStack156 = fcn.0043c6f0();\n                            uStack52 = 9;\n                            puStack160 = 0x441ba2;\n                            fcn.0043c590();\n                            uStack56 = 7;\n                            puStack160 = 0x441baf;\n                            fcn.0043c360();\n                            iStack144 = extraout_ECX;\n                        }\n                        puStack60 = &stack0xffffff70;\n                        pcStack148 = &stack0xffffff70;\n                        puStack152 = 0x441bdd;\n                        fcn.0043e010();\n                        puStack60 = &stack0xffffff68;\n                        puStack156 = &stack0xffffff90;\n                        uStack44 = 10;\n                        puStack160 = 0x441bf3;\n                        puStack152 = extraout_ECX_01;\n                        fcn.0043c6b0();\n                        puStack60 = &stack0xffffff60;\n                        uStack48 = 0xb;\n                        fcn.0043c6b0(&stack0xffffff90);\n                        uStack52 = 7;\n                        uVar3 = fcn.00440db0(&stack0xffffffa8);\n                        uStack68 = CONCAT31(uStack68._1_3_, 0xc);\n                        fcn.0043c590(uVar3);\n                        uStack72._0_1_ = 7;\n                        fcn.0043c360();\n                        uStack72._0_1_ = 6;\n                        fcn.0043c360();\n                        uStack72._0_1_ = 5;\n                    }\n                    else {\n                        puStack116 = 0x1;\n                        puStack120 = &stack0xffffffa8;\n                        uStack124 = 0x441c5f;\n                        fcn.00444e60();\n                        uStack124 = 0;\n                        pcStack128 = \"NTLM\";\n                        uStack20 = 0xd;\n                        puStack132 = 0x441c75;\n                        iVar2 = fcn.0043c3b0();\n                        if (iVar2 != -1) {\n                            puStack132 = 0xffffffff;\n                            puStack136 = NULL;\n                            pcStack140 = \"NTLM\";\n                            iStack144 = 0x441c8c;\n                            iStack144 = fcn.0043c3b0();\n                            iStack144 = iStack144 + 4;\n                            pcStack148 = &stack0xffffffbc;\n                            puStack152 = 0x441c9e;\n                            puStack152 = fcn.0043c6f0();\n                            uStack48 = 0xe;\n                            puStack156 = 0x441cad;\n                            fcn.0043c590();\n                            uStack52 = 0xd;\n                            puStack156 = 0x441cba;\n                            fcn.0043c360();\n                        }\n                        puStack156 = &stack0xffffff80;\n                        puStack160 = &stack0xffffffb0;\n                        puStack156 = fcn.0043ea40();\n                        uStack52 = 0xf;\n                        puStack160 = 0x441cdb;\n                        fcn.0043c590();\n                        uStack56 = 0xd;\n                        puStack160 = 0x441ce8;\n                        fcn.0043c360();\n                        uStack68 = &stack0xffffff60;\n                        fcn.0043c6b0(&stack0xffffff7c);\n                        uVar3 = fcn.00441050(&stack0xffffffac);\n                        uStack68 = CONCAT31(uStack68._1_3_, 0x10);\n                        fcn.0043c590(uVar3);\n                        uStack72._0_1_ = 0xd;\n                    }\n                    fcn.0043c360();\n                    uStack72 = CONCAT31(uStack72._1_3_, 2);\n                    fcn.0043c360();\n                    pcVar5 = \"NTLM\";\n                }\n                else {\n                    if (iVar2 != 2) {\n                        if (iVar2 == 3) {\n                            puStack116 = &stack0xffffffc4;\n                            puStack120 = 0x441a6d;\n                            fcn.0043e010();\n                            puStack120 = &stack0xffffffbc;\n                            uStack16 = 3;\n                            uStack124 = 0x441a81;\n                            fcn.0043d0a0();\n                            ppcVar1 = **(param_1 + 0x78);\n                            uStack124 = 0;\n                            pcStack128 = &stack0xffffff9c;\n                            puStack132 = NULL;\n                            puStack136 = NULL;\n                            uStack20 = 4;\n                            pcStack140 = 0x441a9f;\n                            pcStack140 = fcn.0043bff0();\n                            iStack144 = 0x441aa7;\n                            iStack144 = fcn.0043bff0();\n                            pcStack148 = NULL;\n                            puStack152 = 0x441ab1;\n                            (**ppcVar1)();\n                            uStack72._0_1_ = 3;\n                            fcn.0043c360();\n                            uStack72 = CONCAT31(uStack72._1_3_, 2);\n                            fcn.0043c360();\n                            fcn.0043c570(\"Basic\");\n                        }\n                        break;\n                    }\n                    puStack116 = 0x441aef;\n                    iVar2 = fcn.0043c2e0();\n                    if (iVar2 == 0) {\n                        puStack120 = 0x441afd;\n                        puStack116 = param_1 + 0x58;\n                        fcn.0043c590();\n                    }\n                    pcVar5 = \"Digest\";\n                }\n                fcn.0043c570(pcVar5);\n                break;\n            }\n            iVar2 = iVar2 + 1;\n            piVar4 = piVar4 + 1;\n        } while (iVar2 < 4);\n        fcn.0043beb0();\n        uStack76 = 0x11;\n        iVar2 = fcn.0043c2e0();\n        if (iVar2 == 0) {\n            uVar3 = fcn.0043ca10(&stack0xffffff90, \"Authorization: \", &stack0xffffff6c);\n            uStack76 = 0x12;\n            uVar3 = fcn.0043c840(&stack0xffffff94, uVar3, 0x48f428);\n            uStack76 = 0x13;\n            uVar3 = fcn.0043c7b0(&stack0xffffff98, uVar3, &stack0xffffff64);\n            uStack76 = 0x14;\n            uVar3 = fcn.0043c840(&stack0xffffff9c, uVar3, 0x48f42c);\n            uStack76 = 0x15;\n            fcn.0043c590(uVar3);\n            auStack80[0] = 0x14;\n            fcn.0043c360();\n            auStack80[0] = 0x13;\n            fcn.0043c360();\n            auStack80[0] = 0x12;\n            fcn.0043c360();\n            auStack80[0] = 0x11;\n            fcn.0043c360();\n        }\n        uVar3 = uStack68;\n        fcn.0043c6b0(&stack0xffffff78);\n        puStack136 = 0x1;\n        auStack80[0] = 2;\n        fcn.0043c360();\n    }\n    auStack80[0] = 1;\n    fcn.0043c360();\n    auStack80[0] = 0;\n    fcn.0043c360();\n    *in_FS_OFFSET = unaff_EBX;\n    return uVar3;\n}\n",
        "token_count": 2728
    },
    "004422c0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.004422c0(int32_t param_1)\n\n{\n    code **ppcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uint uStack40;\n    uint32_t uStack36;\n    int32_t iStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x486600;\n    iStack12 = *in_FS_OFFSET;\n    uStack36 = *0x4b4f00 ^ &stack0xffffffe0;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    if (*(param_1 + 100) != NULL) {\n        uStack40 = 0x4422fa;\n        (**(**(param_1 + 100) + 0x14))();\n        uStack40 = 0xffffffff;\n        uVar2 = fcn.0043bff0();\n        fcn.0043c980(uVar2);\n        iStack12 = 0;\n        iVar3 = fcn.0043c3b0(0x48f468, 0);\n        if (iVar3 != -1) {\n            iVar4 = fcn.0043c3b0(0x48f2f0, 0);\n            uVar2 = fcn.0043c6f0(&stack0xffffffd8, iVar3 + 1, (iVar4 - iVar3) + -1);\n            uStack40 = CONCAT31(uStack40._1_3_, 1);\n            fcn.0043c590(uVar2);\n            fcn.0043c360();\n        }\n        ppcVar1 = **(param_1 + 100);\n        uVar2 = fcn.0043bff0();\n        iVar3 = (**ppcVar1)(0, 1, uVar2);\n        if (iVar3 != 0) {\n            uStack40 = *(param_1 + 0x6c);\n            iVar3 = **(param_1 + 100);\n            uVar2 = fcn.0043bff0();\n            iVar3 = (**(iVar3 + 0x18))(uVar2);\n            if (iVar3 != 0) {\n                uStack4 = 0xffffffff;\n                uStack40 = 0x4423bd;\n                fcn.0043c360();\n                *in_FS_OFFSET = iStack12;\n                return 1;\n            }\n        }\n        *(param_1 + 0x10) = 0x16;\n        uStack4 = 0xffffffff;\n        uStack40 = 0x4423ed;\n        fcn.0043c360();\n    }\n    *in_FS_OFFSET = iStack12;\n    return 0;\n}\n",
        "token_count": 629
    },
    "00444620": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00444620(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uchar *puStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint32_t uStack32;\n    int32_t iStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x486958;\n    iStack12 = *in_FS_OFFSET;\n    uStack32 = *0x4b4f00 ^ &stack0xffffffe4;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    uStack36 = 0xffffffff;\n    uStack40 = 0x4a23ad;\n    uStack44 = 0x444656;\n    fcn.0043c980();\n    uStack44 = 0;\n    uStack48 = 1;\n    uStack52 = 1;\n    puStack56 = &stack0xffffffe4;\n    iStack12 = 0;\n    puStack60 = 0x444673;\n    iVar1 = (**(**(param_1 + 0x10) + 0x2c))();\n    puStack60 = uStack44;\n    while (uStack44 = puStack60,  iVar1 == 1) {\n        puStack64 = 0x44468e;\n        fcn.0043c5d0();\n        puStack64 = NULL;\n        puStack56 = 0x48f42c;\n        uStack72 = 0x44469e;\n        iVar1 = fcn.0043c3b0();\n        if (iVar1 != -1) break;\n        uStack72 = 0;\n        uStack76 = 1;\n        iVar1 = (**(**(param_1 + 0x10) + 0x2c))(&stack0xffffffc8, 1);\n        puStack60 = uStack44;\n    }\n    puStack60 = &stack0xffffffd0;\n    puStack64 = &stack0xffffffd8;\n    uStack68 = 0x4446cc;\n    puStack60 = fcn.0043ea40();\n    puStack64 = 0x4446de;\n    fcn.0043c590();\n    uStack32 = uStack32 & 0xffffff00;\n    puStack64 = 0x4446ec;\n    fcn.0043c360();\n    puStack64 = NULL;\n    uStack68 = 0x20;\n    uStack72 = 0x4446f9;\n    uStack72 = fcn.0043c370();\n    uStack76 = 0;\n    uVar2 = fcn.0043c6f0(&stack0xffffffcc);\n    uStack52 = CONCAT31(uStack52._1_3_, 2);\n    fcn.0043c590(uVar2);\n    puStack56 = puStack56 & 0xffffff00;\n    fcn.0043c360();\n    uVar2 = fcn.0043e9f0(&stack0xffffffb4);\n    *(param_1 + 0x40) = uVar2;\n    puStack56 = 0xffffffff;\n    fcn.0043c360();\n    *in_FS_OFFSET = puStack64;\n    return;\n}\n",
        "token_count": 799
    },
    "004448e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004448e0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    char *pcVar5;\n    uint32_t uVar6;\n    int32_t *in_FS_OFFSET;\n    uchar *puVar7;\n    uint uStack144;\n    char *pcStack140;\n    char *pcStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint32_t uStack104;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint uStack88;\n    uint32_t uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint32_t uStack56;\n    uint uStack24;\n    int32_t iStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x486a00;\n    iStack12 = *in_FS_OFFSET;\n    uStack56 = *0x4b4f00 ^ &stack0xffffffcc;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    uStack60 = 0;\n    uStack64 = 0x48f42c;\n    *(param_1 + 0x54) = 0;\n    uStack68 = 0x44491f;\n    iVar1 = fcn.0043c3b0();\n    if (iVar1 != -1) {\n        uStack72 = 0;\n        puStack76 = &stack0xffffffd4;\n        uStack80 = 0x444938;\n        uStack68 = iVar1;\n        fcn.0043c6f0();\n        uStack80 = 0;\n        uStack84 = 0x48f428;\n        uStack24 = 0;\n        uStack88 = 0x44494b;\n        iVar2 = fcn.0043c3b0();\n        if (iVar2 != -1) {\n            puStack92 = NULL;\n            uStack96 = &stack0xffffffe8;\n            uStack100 = 0x444967;\n            uStack88 = iVar2;\n            uStack100 = fcn.0043c6f0();\n            uStack104 = 0x444975;\n            fcn.0043c590();\n            uStack104 = 0x444983;\n            fcn.0043c360();\n            uStack104 = iVar2 + 1;\n            uStack108 = 0x48f428;\n            uStack112 = 0x444995;\n            iVar2 = fcn.0043c3b0();\n            if (iVar2 != -1) {\n                uStack112 = 3;\n                uStack116 = iVar2 - 3;\n                uStack120 = &stack0xffffffd0;\n                uStack124 = 0x4449b4;\n                fcn.0043c6f0();\n                uStack68._0_1_ = 2;\n                uStack124 = 0x4449c0;\n                uStack124 = fcn.0043bff0();\n                uStack128 = 0x4449c6;\n                uVar3 = fcn.00458c5b();\n                *(param_1 + 0x2c) = uVar3;\n                uStack68 = uStack68._1_3_ << 8;\n                uStack124 = 0x4449da;\n                fcn.0043c360();\n                uStack124 = 0xffffffff;\n                uStack128 = iVar2 + 1;\n                uStack132 = &stack0xffffffc4;\n                pcStack136 = 0x4449ee;\n                pcStack136 = fcn.0043c6f0();\n                uStack80 = CONCAT31(uStack80._1_3_, 3);\n                pcStack140 = 0x4449fc;\n                fcn.0043c590();\n                uStack84 = uStack84 & 0xffffff00;\n                pcStack140 = 0x444a0a;\n                fcn.0043c360();\n                *(param_1 + 0x54) = 1;\n                pcStack140 = 0x444a18;\n                fcn.0043c0b0();\n                pcStack140 = 0x444a22;\n                fcn.0043c0b0();\n                pcVar5 = iVar1 + 2;\n                pcStack140 = 0x444a2c;\n                iVar1 = fcn.0043c300();\n                if (pcVar5 < iVar1 - 1U) {\n                    do {\n                        uStack144 = 0x48f2ec;\n                        pcStack140 = pcVar5;\n                        uStack84 = fcn.0043c3b0();\n                        pcStack136 = 0x48f42c;\n                        uStack120 = fcn.0043c3b0();\n                        if (((puStack92 == 0xffffffff) || (uStack120 == 0xffffffff)) || (uStack120 <= puStack92)) break;\n                        uVar3 = fcn.0043c6f0(&stack0xffffff84, pcVar5, puStack92 - pcVar5);\n                        uStack112._0_1_ = 4;\n                        uVar3 = fcn.0043ea40(&stack0xffffff74, uVar3);\n                        uStack112 = CONCAT31(uStack112._1_3_, 5);\n                        fcn.0043c8d0(uVar3);\n                        uStack116._0_1_ = 4;\n                        fcn.0043c360();\n                        uStack116 = uStack116._1_3_ << 8;\n                        fcn.0043c360();\n                        pcVar5 = pcStack136;\n                        uVar3 = fcn.0043c6f0(&stack0xffffff80, uStack108 + 1, pcStack136 + (-1 - uStack108));\n                        uStack128._0_1_ = 6;\n                        pcStack136 = fcn.0043ea40(&stack0xffffff70, uVar3);\n                        uStack128 = CONCAT31(uStack128._1_3_, 7);\n                        fcn.0043c8d0();\n                        uStack132._0_1_ = 6;\n                        fcn.0043c360();\n                        uStack132 = uStack132._1_3_ << 8;\n                        fcn.0043c360();\n                        pcVar5 = pcVar5 + 2;\n                        iVar1 = fcn.0043c300();\n                    } while (pcVar5 < iVar1 - 1U);\n                }\n                iVar1 = 4;\n                do {\n                    pcStack140 = 0x4a23ad;\n                    uStack144 = 0x444b4d;\n                    fcn.0043c570();\n                    pcStack136 = 0x4a23ad;\n                    fcn.0043c570();\n                    iVar1 = iVar1 + -1;\n                } while (iVar1 != 0);\n                if (*(param_1 + 0x2c) == 0x191) {\n                    uVar6 = 0;\n                    iVar1 = fcn.0043c0a0();\n                    if (iVar1 != 0) {\n                        do {\n                            uStack144 = 0x444b88;\n                            pcStack140 = uVar6;\n                            uStack144 = fcn.0043c160();\n                            fcn.0043e870(&stack0xffffff9c);\n                            pcStack136 = \"www-authenticate\";\n                            uStack88 = CONCAT31(uStack88._1_3_, 8);\n                            iVar1 = fcn.0043bfb0();\n                            uStack84 = uStack84 & 0xffffff00 | iVar1 == 0;\n                            puStack92 = puStack92 & 0xffffff00;\n                            fcn.0043c360();\n                            if (uStack84 != '\\0') {\n                                uVar3 = fcn.0043c160(uVar6);\n                                fcn.0043e870(&stack0xffffff90, uVar3);\n                                uStack96._0_1_ = 9;\n                                iVar1 = fcn.0043c3b0(\"basic\", 0);\n                                uStack96 = CONCAT31(uStack96._1_3_, iVar1 == 0);\n                                uStack104 = uStack104 & 0xffffff00;\n                                fcn.0043c360();\n                                pcStack136 = fcn.0043c160(uVar6);\n                                if (uStack100 == '\\0') {\n                                    fcn.0043e870(&stack0xffffff80);\n                                    uStack108._0_1_ = 10;\n                                    iVar1 = fcn.0043c3b0(\"digest\", 0);\n                                    uStack108 = CONCAT31(uStack108._1_3_, iVar1 == 0);\n                                    uStack116 = uStack116 & 0xffffff00;\n                                    fcn.0043c360();\n                                    pcStack136 = fcn.0043c160(uVar6);\n                                    if (uStack112 == '\\0') {\n                                        puVar7 = &stack0xffffff70;\n                                        fcn.0043e790(puVar7);\n                                        pcStack136 = \"NTLM\";\n                                        uStack120._0_1_ = 0xb;\n                                        iVar1 = fcn.0043c3b0(puVar7, 0);\n                                        uStack120 = CONCAT31(uStack120._1_3_, iVar1 == 0);\n                                        uStack128 = uStack128 & 0xffffff00;\n                                        fcn.0043c360();\n                                        if (uStack120 == '\\0') goto code_r0x00444cb4;\n                                        pcStack136 = fcn.0043c160(uVar6);\n                                    }\n                                }\n                                pcStack140 = 0x444cb4;\n                                fcn.0043c590();\n                            }\ncode_r0x00444cb4:\n                            uVar6 = uVar6 + 1;\n                            pcStack140 = 0x444cbe;\n                            uVar4 = fcn.0043c0a0();\n                        } while (uVar6 < uVar4);\n                    }\n                }\n                if (*(param_1 + 0x2c) == 0x197) {\n                    uVar6 = 0;\n                    pcStack140 = 0x444cdc;\n                    iVar1 = fcn.0043c0a0();\n                    if (iVar1 != 0) {\n                        do {\n                            uStack144 = 0x444cec;\n                            pcStack140 = uVar6;\n                            uStack144 = fcn.0043c160();\n                            fcn.0043e870(&stack0xffffff9c);\n                            pcStack136 = \"proxy-authenticate\";\n                            uStack88 = CONCAT31(uStack88._1_3_, 0xc);\n                            iVar1 = fcn.0043bfb0();\n                            uStack84 = uStack84 & 0xffffff00 | iVar1 == 0;\n                            puStack92 = puStack92 & 0xffffff00;\n                            fcn.0043c360();\n                            if (uStack84 != '\\0') {\n                                uVar3 = fcn.0043c160(uVar6);\n                                fcn.0043e870(&stack0xffffff90, uVar3);\n                                uStack96._0_1_ = 0xd;\n                                iVar1 = fcn.0043c3b0(\"basic\", 0);\n                                uStack96 = CONCAT31(uStack96._1_3_, iVar1 == 0);\n                                uStack104 = uStack104 & 0xffffff00;\n                                fcn.0043c360();\n                                pcStack136 = fcn.0043c160(uVar6);\n                                if (uStack100 == '\\0') {\n                                    fcn.0043e870(&stack0xffffff80);\n                                    uStack108._0_1_ = 0xe;\n                                    iVar1 = fcn.0043c3b0(\"digest\", 0);\n                                    uStack108 = CONCAT31(uStack108._1_3_, iVar1 == 0);\n                                    uStack116 = uStack116 & 0xffffff00;\n                                    fcn.0043c360();\n                                    pcStack136 = fcn.0043c160(uVar6);\n                                    if (uStack112 == '\\0') {\n                                        puVar7 = &stack0xffffff70;\n                                        fcn.0043e790(puVar7);\n                                        pcStack136 = \"NTLM\";\n                                        uStack120._0_1_ = 0xf;\n                                        iVar1 = fcn.0043c3b0(puVar7, 0);\n                                        uStack120 = CONCAT31(uStack120._1_3_, iVar1 == 0);\n                                        uStack128 = uStack128 & 0xffffff00;\n                                        fcn.0043c360();\n                                        if (uStack120 == '\\0') goto code_r0x00444e18;\n                                        pcStack136 = fcn.0043c160(uVar6);\n                                    }\n                                }\n                                pcStack140 = 0x444e18;\n                                fcn.0043c590();\n                            }\ncode_r0x00444e18:\n                            uVar6 = uVar6 + 1;\n                            pcStack140 = 0x444e22;\n                            uVar4 = fcn.0043c0a0();\n                        } while (uVar6 < uVar4);\n                    }\n                }\n            }\n        }\n        uStack84 = 0xffffffff;\n        pcStack140 = 0x444e3b;\n        fcn.0043c360();\n    }\n    *in_FS_OFFSET = puStack92;\n    return;\n}\n",
        "token_count": 3069
    },
    "00445330": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00445330(int32_t *param_1)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    cVar1 = *param_1;\n    iVar3 = 0;\n    piVar2 = param_1;\n    if (cVar1 != '\\0') {\n        do {\n            if (cVar1 == '.') {\n                iVar3 = iVar3 + 1;\n            }\n            cVar1 = *(piVar2 + 1);\n            piVar2 = piVar2 + 1;\n        } while (cVar1 != '\\0');\n        if (iVar3 == 3) {\n            iVar3 = (*_sym.imp.WS2_32.dll_inet_addr)(param_1);\n            if (iVar3 != -1) {\n                *param_1 = iVar3;\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 205
    },
    "00445f30": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00445f30(int32_t param_1, uint param_2, uint16_t param_3)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    uint uVar2;\n    uint *arg_8h_00;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uchar uStack12;\n    uint uStack11;\n    ushort uStack7;\n    uchar uStack5;\n    uint32_t uStack4;\n    \n    uStack4 = *0x4b4f00 ^ &uStack48;\n    uStack44 = 0;\n    uStack32 = 0;\n    uStack28 = 0;\n    uStack24 = 0;\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack48 = 0;\n    uStack40 = 0;\n    uStack12 = 0;\n    uStack11 = 0;\n    uStack7 = 0;\n    uStack5 = 0;\n    uStack36 = 1;\n    fcn.00455b5b(&uStack12, 0x48f130, param_3);\n    if (*0x4b830c == NULL) {\n        *0x4b830c = fcn.00445d00(0);\n    }\n    arg_8h_00 = &uStack16;\n    iVar1 = (**0x4b830c)(param_2, arg_8h_00, &uStack48, &stack0xffffffcc);\n    (*_sym.imp.WS2_32.dll_WSASetLastError)(iVar1);\n    if (iVar1 != 0) {\n        *(param_1 + 0xc) = 0xfffffffb;\n        fcn.004529f8(arg_8h_00);\n        return;\n    }\n    uVar2 = arg_8h_00[4];\n    arg_8h = arg_8h_00[6];\n    iVar1 = (*_sym.imp.WS2_32.dll_connect)(*(param_1 + 4), arg_8h, uVar2);\n    if (iVar1 == -1) {\n        *(param_1 + 0xc) = 0xfffffff9;\n        if (*0x4b8310 == NULL) {\n            *0x4b8310 = fcn.00445d00(2);\n        }\n        (**0x4b8310)(uVar2);\n        fcn.004529f8(arg_8h);\n        return;\n    }\n    if (*0x4b8310 == NULL) {\n        *0x4b8310 = fcn.00445d00(2);\n    }\n    (**0x4b8310)(uVar2);\n    fcn.004529f8(arg_8h);\n    return;\n}\n",
        "token_count": 661
    },
    "00446780": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00446780(code **param_1)\n\n{\n    *param_1 = vtable.PR_HTTP::TmSocket.0;\n    if (param_1[1] != 0xffffffff) {\n        fcn.00445f10();\n    }\n    // WARNING: Could not recover jumptable at 0x00446791. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.WS2_32.dll_WSACleanup)();\n    return;\n}\n",
        "token_count": 112
    },
    "0044b024": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044b024(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t *arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if ((arg_8h == 0) || (*(arg_8h + 0x2c) == 0)) {\n        var_4h = -0x66;\n    }\n    else {\n        arg_8h_00 = arg_8h + 0x30;\n        *arg_8h_00 = arg_ch;\n        *(arg_8h + 0x34) = arg_10h;\n        uVar1 = fcn.00436f02(*(arg_8h + 0x408c), arg_ch, arg_10h);\n        *(arg_8h + 0x408c) = uVar1;\n        do {\n            uVar4 = 0;\n            if (*(arg_8h + 0x34) == 0) {\n                return var_4h;\n            }\n            if (*(arg_8h + 0x40) == 0) {\n                iVar2 = fcn.0044af9c();\n                if (iVar2 == -1) {\n                    var_4h = -1;\n                }\n                *(arg_8h + 0x40) = 0x4000;\n                *(arg_8h + 0x3c) = arg_8h + 0x88;\n            }\n            if (var_4h != 0) {\n                return var_4h;\n            }\n            if ((*(arg_8h + 0x80) == 8) && (*(arg_8h + 0x84) == 0)) {\n                iVar2 = *(arg_8h + 0x44);\n                var_4h = fcn.0044ba25(arg_8h_00, 0);\n                uVar3 = *(arg_8h + 0x44) - iVar2;\n            }\n            else {\n                uVar3 = *(arg_8h + 0x34);\n                if (*(arg_8h + 0x40) <= *(arg_8h + 0x34)) {\n                    uVar3 = *(arg_8h + 0x40);\n                }\n                if (uVar3 != 0) {\n                    do {\n                        *(uVar4 + *(arg_8h + 0x3c)) = *(uVar4 + *arg_8h_00);\n                        uVar4 = uVar4 + 1;\n                    } while (uVar4 < uVar3);\n                }\n                *(arg_8h + 0x34) = *(arg_8h + 0x34) - uVar3;\n                *(arg_8h + 0x40) = *(arg_8h + 0x40) - uVar3;\n                *arg_8h_00 = *arg_8h_00 + uVar3;\n                *(arg_8h + 0x3c) = *(arg_8h + 0x3c) + uVar3;\n                *(arg_8h + 0x38) = *(arg_8h + 0x38) + uVar3;\n                *(arg_8h + 0x44) = *(arg_8h + 0x44) + uVar3;\n            }\n            *(arg_8h + 0x6c) = *(arg_8h + 0x6c) + uVar3;\n        } while (var_4h == 0);\n    }\n    return var_4h;\n}\n",
        "token_count": 846
    },
    "0044b106": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.0044b106(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if ((param_1 == 0) || (*(param_1 + 0x2c) == 0)) {\n        iVar3 = -0x66;\n    }\n    else {\n        *(param_1 + 0x34) = 0;\n        if ((*(param_1 + 0x80) == 8) && (*(param_1 + 0x84) == 0)) {\n            do {\n                if (*(param_1 + 0x40) == 0) {\n                    fcn.0044af9c();\n                    *(param_1 + 0x40) = 0x4000;\n                    *(param_1 + 0x3c) = param_1 + 0x88;\n                }\n                iVar1 = *(param_1 + 0x44);\n                iVar3 = fcn.0044ba25(param_1 + 0x30, 4);\n                *(param_1 + 0x6c) = *(param_1 + 0x6c) + (*(param_1 + 0x44) - iVar1);\n            } while (iVar3 == 0);\n            if (iVar3 == 1) {\n                iVar3 = 0;\n            }\n        }\n        if (((*(param_1 + 0x6c) != 0) && (iVar3 == 0)) && (iVar1 = fcn.0044af9c(),  iVar1 == -1)) {\n            iVar3 = -1;\n        }\n        if ((*(param_1 + 0x80) == 8) && (*(param_1 + 0x84) == 0)) {\n            iVar3 = fcn.0044c194(param_1 + 0x30);\n            *(param_1 + 0x68) = 0;\n        }\n        fcn.0044abce();\n        fcn.0044abce();\n        if (*(param_1 + 0x5c) == 1) {\n            fcn.0044abce();\n        }\n        fcn.0044abce();\n        if (iVar3 == 0) {\n            iVar3 = fcn.0044aaf7(*(param_1 + 0x74), *(param_1 + 0x78));\n        }\n        fcn.00455f3f(*(param_1 + 0x74));\n        if (iVar3 == 0) {\n            uVar2 = (**(param_1 + 0xc))(*(param_1 + 0x1c), *(param_1 + 0x20));\n            iVar3 = (**(param_1 + 0x10))(*(param_1 + 0x1c), *(param_1 + 0x20), *(param_1 + 0x70) + 0xe, 0);\n            if (iVar3 == 0) {\n                iVar3 = fcn.0044ab85(*(param_1 + 0x20));\n                if ((iVar3 == 0) && (iVar3 = fcn.0044ab85(*(param_1 + 0x20)),  iVar3 == 0)) {\n                    iVar3 = fcn.0044ab85(*(param_1 + 0x20));\n                }\n            }\n            else {\n                iVar3 = -1;\n            }\n            iVar1 = (**(param_1 + 0x10))(*(param_1 + 0x1c), *(param_1 + 0x20), uVar2, 0);\n            if (iVar1 != 0) {\n                iVar3 = -1;\n            }\n        }\n        *(param_1 + 0x40b0) = *(param_1 + 0x40b0) + 1;\n        *(param_1 + 0x2c) = 0;\n    }\n    return iVar3;\n}\n",
        "token_count": 886
    },
    "0044ce3d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0044ce3d(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t arg_1ch, \n            char *arg_20h, int32_t arg_24h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    \n    iVar3 = 1;\n    if (((arg_20h == NULL) || (*arg_20h != '1')) || (arg_24h != 0x38)) {\n        uVar5 = 0xfffffffa;\n    }\n    else {\n        if (arg_8h != 0) {\n            *(arg_8h + 0x18) = 0;\n            if (*(arg_8h + 0x20) == 0) {\n                *(arg_8h + 0x20) = 0x4384ce;\n                *(arg_8h + 0x28) = 0;\n            }\n            if (*(arg_8h + 0x24) == 0) {\n                *(arg_8h + 0x24) = 0x4384df;\n            }\n            if (arg_ch == 0xffffffff) {\n                arg_ch = 6;\n            }\n            if (arg_14h < 0) {\n                iVar3 = 0;\n                arg_14h = -arg_14h;\n            }\n            else if (0xf < arg_14h) {\n                arg_14h = arg_14h + -0x10;\n                iVar3 = 2;\n            }\n            if (((arg_18h - 1U < 9) && (arg_10h == 8)) && ((arg_14h - 8U < 8 && ((arg_ch < 10 && (arg_1ch < 5)))))) {\n                if (arg_14h == 8) {\n                    arg_14h = 9;\n                }\n                piVar1 = (**(arg_8h + 0x20))(*(arg_8h + 0x28), 1, 0x16c0);\n                if (piVar1 != NULL) {\n                    *(arg_8h + 0x1c) = piVar1;\n                    piVar1[7] = 0;\n                    piVar1[6] = iVar3;\n                    piVar1[0xc] = arg_14h;\n                    iVar4 = 1 << (arg_14h & 0x1f);\n                    piVar1[0xd] = iVar4 + -1;\n                    iVar3 = 1 << (arg_18h + 7 & 0x1f);\n                    piVar1[0x14] = arg_18h + 7;\n                    *piVar1 = arg_8h;\n                    piVar1[0x13] = iVar3;\n                    piVar1[0x15] = iVar3 + -1;\n                    piVar1[0xb] = iVar4;\n                    piVar1[0x16] = (arg_18h + 9U) / 3;\n                    iVar3 = (**(arg_8h + 0x20))(*(arg_8h + 0x28), iVar4, 2);\n                    piVar1[0xe] = iVar3;\n                    iVar3 = (**(arg_8h + 0x20))(*(arg_8h + 0x28), piVar1[0xb], 2);\n                    piVar1[0x10] = iVar3;\n                    iVar3 = (**(arg_8h + 0x20))(*(arg_8h + 0x28), piVar1[0x13], 2);\n                    piVar1[0x11] = iVar3;\n                    uVar2 = 1 << (arg_18h + 6U & 0x1f);\n                    piVar1[0x5a7] = uVar2;\n                    iVar3 = (**(arg_8h + 0x20))(*(arg_8h + 0x28), uVar2, 4);\n                    uVar2 = piVar1[0x5a7];\n                    piVar1[3] = uVar2 << 2;\n                    piVar1[2] = iVar3;\n                    if ((((piVar1[0xe] != 0) && (piVar1[0x10] != 0)) && (piVar1[0x11] != 0)) && (iVar3 != 0)) {\n                        piVar1[0x21] = arg_ch;\n                        piVar1[0x5a9] = iVar3 + (uVar2 & 0xfffffffe);\n                        piVar1[0x5a6] = uVar2 * 3 + iVar3;\n                        piVar1[0x22] = arg_1ch;\n                        *(piVar1 + 9) = 8;\n                        uVar5 = fcn.0044cdb6(arg_8h);\n                        return uVar5;\n                    }\n                    piVar1[1] = 0x29a;\n                    *(arg_8h + 0x18) = *0x48ef10;\n                    fcn.0044c194(arg_8h);\n                }\n                return 0xfffffffc;\n            }\n        }\n        uVar5 = 0xfffffffe;\n    }\n    return uVar5;\n}\n",
        "token_count": 1220
    },
    "00453caf": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00453caf(uint arg_8h)\n\n{\n    uint8_t **ppuVar1;\n    uint8_t **arg_8h_00;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0045e910(0x4abff0, 0xc);\n    iVar5 = 0;\n    *(unaff_EBP + -0x1c) = 0;\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == NULL) {\n        puVar2 = fcn.0045c4f2();\n        *puVar2 = 0x16;\n        fcn.0045e4f8();\n        goto code_r0x00453d94;\n    }\n    fcn.00456018(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    if ((*(arg_8h_00 + 3) & 0x40) == 0) {\n        uVar3 = fcn.0045f093(arg_8h_00);\n        if ((uVar3 == 0xffffffff) || (uVar3 == 0xfffffffe)) {\n            iVar4 = 0x4b5220;\n        }\n        else {\n            iVar4 = (uVar3 & 0x1f) * 0x40 + *((uVar3 >> 5) * 4 + 0x4b9168);\n        }\n        if ((*(iVar4 + 0x24) & 0x7f) == 0) {\n            if ((uVar3 == 0xffffffff) || (uVar3 == 0xfffffffe)) {\n                iVar4 = 0x4b5220;\n            }\n            else {\n                iVar4 = (uVar3 & 0x1f) * 0x40 + *((uVar3 >> 5) * 4 + 0x4b9168);\n            }\n            if ((*(iVar4 + 0x24) & 0x80) == 0) goto code_r0x00453d67;\n        }\n        puVar2 = fcn.0045c4f2();\n        *puVar2 = 0x16;\n        fcn.0045e4f8();\n        iVar5 = -1;\n        *(unaff_EBP + -0x1c) = 0xffffffff;\n    }\ncode_r0x00453d67:\n    if (iVar5 == 0) {\n        ppuVar1 = arg_8h_00 + 1;\n        *ppuVar1 = *ppuVar1 + -1;\n        if (*ppuVar1 < 0) {\n            uVar3 = fcn.0045ef72(arg_8h_00);\n        }\n        else {\n            uVar3 = **arg_8h_00;\n            *arg_8h_00 = *arg_8h_00 + 1;\n        }\n        *(unaff_EBP + -0x1c) = uVar3;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00453da0();\ncode_r0x00453d94:\n    fcn.0045e955();\n    return;\n}\n",
        "token_count": 781
    },
    "00453da8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00453da8(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t *arg_8h_00;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0045e910(0x4ac010, 0xc);\n    iVar5 = 0;\n    *(unaff_EBP + -0x1c) = 0;\n    arg_8h_00 = *(unaff_EBP + 0xc);\n    if (arg_8h_00 == NULL) {\n        puVar2 = fcn.0045c4f2();\n        *puVar2 = 0x16;\n        fcn.0045e4f8();\n        goto code_r0x00453e95;\n    }\n    fcn.00456018(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    if ((*(arg_8h_00 + 3) & 0x40) == 0) {\n        uVar3 = fcn.0045f093(arg_8h_00);\n        if ((uVar3 == 0xffffffff) || (uVar3 == 0xfffffffe)) {\n            iVar4 = 0x4b5220;\n        }\n        else {\n            iVar4 = (uVar3 & 0x1f) * 0x40 + *((uVar3 >> 5) * 4 + 0x4b9168);\n        }\n        if ((*(iVar4 + 0x24) & 0x7f) == 0) {\n            if ((uVar3 == 0xffffffff) || (uVar3 == 0xfffffffe)) {\n                iVar4 = 0x4b5220;\n            }\n            else {\n                iVar4 = (uVar3 & 0x1f) * 0x40 + *((uVar3 >> 5) * 4 + 0x4b9168);\n            }\n            if ((*(iVar4 + 0x24) & 0x80) == 0) goto code_r0x00453e60;\n        }\n        puVar2 = fcn.0045c4f2();\n        *puVar2 = 0x16;\n        fcn.0045e4f8();\n        iVar5 = -1;\n        *(unaff_EBP + -0x1c) = 0xffffffff;\n    }\ncode_r0x00453e60:\n    if (iVar5 == 0) {\n        piVar1 = arg_8h_00 + 1;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 < 0) {\n            uVar3 = fcn.0045f365(*(unaff_EBP + 8), arg_8h_00);\n        }\n        else {\n            uVar3 = *(unaff_EBP + 8);\n            **arg_8h_00 = uVar3;\n            uVar3 = uVar3 & 0xff;\n            *arg_8h_00 = *arg_8h_00 + 1;\n        }\n        *(unaff_EBP + -0x1c) = uVar3;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00453ea1();\ncode_r0x00453e95:\n    fcn.0045e955();\n    return;\n}\n",
        "token_count": 817
    },
    "0045bf58": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0045bf58(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0045e910(0x4ac2b8, 0x10);\n    if (*(*(unaff_EBP + 0x10) + 4) < 0x81) {\n        iVar4 = *(*(unaff_EBP + 8) + 8);\n    }\n    else {\n        iVar4 = *(*(unaff_EBP + 8) + 8);\n    }\n    *(unaff_EBP + -0x1c) = iVar4;\n    iVar3 = fcn.00460e79();\n    *(iVar3 + 0x90) = *(iVar3 + 0x90) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (iVar4 != *(unaff_EBP + 0x14)) {\n        if ((iVar4 < 0) || (*(*(unaff_EBP + 0x10) + 4) <= iVar4)) {\n            fcn.00467f2c();\n        }\n        iVar3 = *(unaff_EBP + 0x10);\n        iVar1 = *(iVar3 + 8);\n        uVar2 = *(iVar1 + iVar4 * 8);\n        *(unaff_EBP + -0x20) = uVar2;\n        *(unaff_EBP + -4) = 1;\n        if (*(iVar1 + 4 + iVar4 * 8) != 0) {\n            iVar1 = *(unaff_EBP + 8);\n            *(iVar1 + 8) = uVar2;\n            fcn.00467ee0(*(*(iVar3 + 8) + 4 + iVar4 * 8), iVar1, 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        iVar4 = *(unaff_EBP + -0x20);\n        *(unaff_EBP + -0x1c) = iVar4;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0045c017();\n    if (iVar4 != *(unaff_EBP + 0x14)) {\n        fcn.00467f2c();\n    }\n    *(*(unaff_EBP + 8) + 8) = iVar4;\n    fcn.0045e955();\n    return;\n}\n",
        "token_count": 617
    },
    "0045f365": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0045f365(uint32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    uint32_t arg_8h_01;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    \n    arg_8h_00 = arg_ch;\n    arg_8h_01 = fcn.0045f093(arg_ch);\n    uVar1 = arg_8h_00[3];\n    if ((uVar1 & 0x82) == 0) {\n        puVar3 = fcn.0045c4f2();\n        *puVar3 = 9;\ncode_r0x0045f389:\n        arg_8h_00[3] = arg_8h_00[3] | 0x20;\n        return 0xffffffff;\n    }\n    if ((uVar1 & 0x40) != 0) {\n        puVar3 = fcn.0045c4f2();\n        *puVar3 = 0x22;\n        goto code_r0x0045f389;\n    }\n    iVar5 = 0;\n    if ((uVar1 & 1) != 0) {\n        arg_8h_00[1] = 0;\n        if ((uVar1 & 0x10) == 0) {\n            arg_8h_00[3] = uVar1 | 0x20;\n            return 0xffffffff;\n        }\n        *arg_8h_00 = arg_8h_00[2];\n        arg_8h_00[3] = uVar1 & 0xfffffffe;\n    }\n    uVar1 = arg_8h_00[3];\n    arg_8h_00[3] = uVar1 & 0xffffffef | 2;\n    arg_8h_00[1] = 0;\n    if (((uVar1 & 0x10c) == 0) &&\n       (((iVar4 = fcn.00456012(),  arg_8h_00 != iVar4 + 0x20 && (iVar4 = fcn.00456012(),  arg_8h_00 != iVar4 + 0x40)) ||\n        (iVar4 = fcn.0046c470(arg_8h_01),  iVar4 == 0)))) {\n        fcn.0045f4b2(arg_8h_00);\n    }\n    if ((arg_8h_00[3] & 0x108U) == 0) {\n        arg_ch = 0x1;\n        iVar5 = fcn.00462057(arg_8h_01, &arg_8h, 1);\n    }\n    else {\n        iVar4 = arg_8h_00[2];\n        iVar2 = *arg_8h_00;\n        *arg_8h_00 = iVar4 + 1;\n        arg_ch = iVar2 - iVar4;\n        arg_8h_00[1] = arg_8h_00[6] + -1;\n        if (arg_ch < 1) {\n            if ((arg_8h_01 == 0xffffffff) || (arg_8h_01 == 0xfffffffe)) {\n                iVar4 = 0x4b5220;\n            }\n            else {\n                iVar4 = (arg_8h_01 & 0x1f) * 0x40 + *((arg_8h_01 >> 5) * 4 + 0x4b9168);\n            }\n            if (((*(iVar4 + 4) & 0x20) != 0) && (iVar6 = fcn.00462d82(arg_8h_01, 0, 0, 2),  iVar6 == -1))\n            goto code_r0x0045f4a0;\n        }\n        else {\n            iVar5 = fcn.00462057(arg_8h_01, iVar4, arg_ch);\n        }\n        *arg_8h_00[2] = arg_8h;\n    }\n    if (iVar5 == arg_ch) {\n        return arg_8h & 0xff;\n    }\ncode_r0x0045f4a0:\n    arg_8h_00[3] = arg_8h_00[3] | 0x20;\n    return 0xffffffff;\n}\n",
        "token_count": 998
    },
    "0045f5cf": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0045f5cf(int32_t arg_8h, uint8_t *arg_ch, uint arg_10h, int32_t **arg_14h)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    code *pcVar5;\n    char *pcVar6;\n    uint8_t *puVar7;\n    uint *puVar8;\n    int32_t *piVar9;\n    int32_t *piVar10;\n    int32_t extraout_ECX;\n    int32_t iVar11;\n    uint unaff_EBX;\n    int32_t *piVar12;\n    int32_t *piVar13;\n    int32_t *piVar14;\n    char *pcVar15;\n    bool bVar16;\n    int64_t iVar17;\n    int32_t *var_280h;\n    int32_t *var_27ch;\n    uint var_278h;\n    int32_t var_270h;\n    uint var_26ch;\n    int32_t *var_264h;\n    uint var_260h;\n    int32_t var_25ch;\n    int32_t *var_258h;\n    uint var_254h;\n    int32_t var_250h;\n    uint32_t var_24ch;\n    int32_t var_248h;\n    int32_t var_244h;\n    char *var_240h;\n    int32_t var_23ch;\n    int32_t *var_238h;\n    int32_t var_234h;\n    int32_t var_230h;\n    uint var_22ch;\n    int32_t *var_228h;\n    char *var_224h;\n    int32_t var_220h;\n    int32_t **var_21ch;\n    int32_t *var_218h;\n    uint8_t var_211h;\n    uint8_t *var_210h;\n    uint var_20ch;\n    uchar var_dh;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b4f00 ^ &stack0xfffffffc;\n    var_230h = arg_8h;\n    piVar12 = NULL;\n    var_210h = arg_ch;\n    var_21ch = arg_14h;\n    var_250h = 0;\n    var_218h = NULL;\n    var_238h = NULL;\n    var_228h = NULL;\n    var_234h = 0;\n    var_248h = 0;\n    var_23ch = 0;\n    fcn.0045582e(arg_10h);\n    var_254h = fcn.0045c4f2();\n    if (var_230h != 0) {\n        if ((*(var_230h + 0xc) & 0x40) == 0) {\n            uVar4 = fcn.0045f093(var_230h);\n            if ((uVar4 == 0xffffffff) || (uVar4 == 0xfffffffe)) {\n                iVar11 = 0x4b5220;\n            }\n            else {\n                iVar11 = (uVar4 & 0x1f) * 0x40 + *((uVar4 >> 5) * 4 + 0x4b9168);\n            }\n            if ((*(iVar11 + 0x24) & 0x7f) == 0) {\n                if ((uVar4 == 0xffffffff) || (uVar4 == 0xfffffffe)) {\n                    iVar11 = 0x4b5220;\n                }\n                else {\n                    iVar11 = (uVar4 & 0x1f) * 0x40 + *((uVar4 >> 5) * 4 + 0x4b9168);\n                }\n                if ((*(iVar11 + 0x24) & 0x80) == 0) goto code_r0x0045f6be;\n            }\n        }\n        else {\ncode_r0x0045f6be:\n            if (arg_ch != NULL) {\n                var_211h = *arg_ch;\n                iVar11 = 0;\n                var_220h = 0;\n                var_224h = NULL;\n                var_244h = 0;\n                var_258h = NULL;\n                var_24ch = var_24ch & 0xffffff00 | var_211h;\n                piVar10 = var_264h;\n                puVar3 = var_210h;\n                while ((var_211h != 0 && (var_210h = puVar3 + 1,  -1 < iVar11))) {\n                    if (var_211h - 0x20 < 0x59) {\n                        uVar4 = *(var_211h + 0x497500) & 0xf;\n                    }\n                    else {\n                        uVar4 = 0;\n                    }\n                    var_244h = *(var_244h + 0x497520 + uVar4 * 8) >> 4;\n                    puVar7 = var_210h;\n    // switch table (8 cases) at 0x460137\n                    switch(var_244h) {\n                    case 0:\ncode_r0x0045f96a:\n                        var_23ch = 0;\n                        iVar11 = fcn.00464a69(var_211h, &var_278h);\n                        if (iVar11 != 0) {\n                            fcn.00460157(var_24ch, var_230h, &var_220h);\n                            uVar1 = *var_210h;\n                            var_210h = var_210h + 1;\n                            var_24ch = var_24ch & 0xffffff00 | uVar1;\n                            if (uVar1 == 0) goto code_r0x00460120;\n                        }\n                        fcn.00460157(var_24ch, var_230h, &var_220h);\n                        puVar7 = var_210h;\n                        iVar11 = var_220h;\n                        break;\n                    case 1:\n                        var_228h = 0xffffffff;\n                        piVar12 = NULL;\n                        var_260h = 0;\n                        var_248h = 0;\n                        var_238h = NULL;\n                        var_234h = 0;\n                        var_218h = NULL;\n                        var_23ch = 0;\n                        break;\n                    case 2:\n                        if (var_211h == 0x20) {\n                            piVar12 = piVar12 | 2;\n                            var_218h = piVar12;\n                        }\n                        else if (var_211h == 0x23) {\n                            piVar12 = piVar12 | 0x80;\n                            var_218h = piVar12;\n                        }\n                        else if (var_211h == 0x2b) {\n                            piVar12 = piVar12 | 1;\n                            var_218h = piVar12;\n                        }\n                        else if (var_211h == 0x2d) {\n                            piVar12 = piVar12 | 4;\n                            var_218h = piVar12;\n                        }\n                        else if (var_211h == 0x30) {\n                            piVar12 = piVar12 | 8;\n                            var_218h = piVar12;\n                        }\n                        break;\n                    case 3:\n                        if (var_211h == 0x2a) {\n                            var_238h = *var_21ch;\n                            var_21ch = var_21ch + 1;\n                            if (var_238h < 0) {\n                                piVar12 = piVar12 | 4;\n                                var_238h = -var_238h;\n                                var_218h = piVar12;\n                            }\n                        }\n                        else {\n                            var_238h = var_238h * 10 + -0x30 + var_211h;\n                        }\n                        break;\n                    case 4:\n                        var_228h = NULL;\n                        break;\n                    case 5:\n                        if (var_211h == 0x2a) {\n                            var_228h = *var_21ch;\n                            var_21ch = var_21ch + 1;\n                            if (var_228h < 0) {\n                                var_228h = 0xffffffff;\n                            }\n                        }\n                        else {\n                            var_228h = var_228h * 10 + -0x30 + var_211h;\n                            iVar11 = var_220h;\n                        }\n                        break;\n                    case 6:\n                        if (var_211h == 0x49) {\n                            uVar1 = *var_210h;\n                            if ((uVar1 == 0x36) && (puVar3[2] == 0x34)) {\n                                piVar12 = piVar12 | 0x8000;\n                                puVar7 = puVar3 + 3;\n                                var_218h = piVar12;\n                            }\n                            else if ((uVar1 == 0x33) && (puVar3[2] == 0x32)) {\n                                piVar12 = piVar12 & 0xffff7fff;\n                                puVar7 = puVar3 + 3;\n                                var_218h = piVar12;\n                            }\n                            else if (((((uVar1 != 100) && (uVar1 != 0x69)) && (uVar1 != 0x6f)) &&\n                                     ((uVar1 != 0x75 && (uVar1 != 0x78)))) && (uVar1 != 0x58)) {\n                                var_244h = 0;\n                                goto code_r0x0045f96a;\n                            }\n                        }\n                        else if (var_211h == 0x68) {\n                            piVar12 = piVar12 | 0x20;\n                            var_218h = piVar12;\n                        }\n                        else if (var_211h == 0x6c) {\n                            if (*var_210h == 0x6c) {\n                                piVar12 = piVar12 | 0x1000;\n                                puVar7 = puVar3 + 2;\n                                var_218h = piVar12;\n                            }\n                            else {\n                                piVar12 = piVar12 | 0x10;\n                                var_218h = piVar12;\n                            }\n                        }\n                        else if (var_211h == 0x77) {\n                            piVar12 = piVar12 | 0x800;\n                            var_218h = piVar12;\n                        }\n                        break;\n                    case 7:\n                        if (var_211h < 'e') {\n                            if (var_211h == 100) {\ncode_r0x0045fc41:\n                                piVar12 = piVar12 | 0x40;\n                                var_218h = piVar12;\ncode_r0x0045fc4a:\n                                var_224h = 0xa;\ncode_r0x0045fc54:\n                                if (((piVar12 & 0x8000) == 0) && ((piVar12 & 0x1000) == 0)) {\n                                    if ((piVar12 & 0x20) == 0) {\n                                        if ((piVar12 & 0x40) == 0) {\n                                            piVar10 = *var_21ch;\n                                            piVar9 = NULL;\n                                            var_21ch = var_21ch + 1;\n                                            goto code_r0x0045fe2b;\n                                        }\n                                        piVar10 = *var_21ch;\n                                    }\n                                    else if ((piVar12 & 0x40) == 0) {\n                                        piVar10 = *var_21ch;\n                                    }\n                                    else {\n                                        piVar10 = *var_21ch;\n                                    }\n                                    piVar9 = piVar10 >> 0x1f;\n                                    var_21ch = var_21ch + 1;\n                                }\n                                else {\n                                    piVar10 = *var_21ch;\n                                    piVar9 = var_21ch[1];\n                                    var_21ch = var_21ch + 2;\n                                }\ncode_r0x0045fe2b:\n                                if ((((piVar12 & 0x40) != 0) && (piVar9 < 1)) && (piVar9 < 0)) {\n                                    bVar16 = piVar10 != NULL;\n                                    piVar10 = -piVar10;\n                                    piVar9 = -(piVar9 + bVar16);\n                                    piVar12 = piVar12 | 0x100;\n                                    var_218h = piVar12;\n                                }\n                                if ((piVar12 & 0x9000) == 0) {\n                                    piVar9 = NULL;\n                                }\n                                iVar17 = CONCAT44(piVar9, piVar10);\n                                if (var_228h < 0) {\n                                    var_228h = 0x1;\n                                }\n                                else {\n                                    piVar12 = piVar12 & 0xfffffff7;\n                                    var_218h = piVar12;\n                                    if (0x200 < var_228h) {\n                                        var_228h = 0x200;\n                                    }\n                                }\n                                if ((piVar10 | piVar9) == 0) {\n                                    var_234h = 0;\n                                }\n                                piVar9 = &var_dh;\n                                while ((piVar13 = var_228h + -1,  0 < var_228h || (iVar17 != 0))) {\n                                    var_228h = piVar13;\n                                    iVar17 = fcn.00461f10();\n                                    var_240h = iVar17;\n                                    iVar11 = extraout_ECX + 0x30;\n                                    if (0x39 < iVar11) {\n                                        iVar11 = iVar11 + var_250h;\n                                    }\n                                    *piVar9 = iVar11;\n                                    piVar9 = piVar9 + -1;\n                                    var_264h = piVar12;\n                                }\n                                var_224h = &var_dh + -piVar9;\n                                piVar10 = piVar9 + 1;\n                                piVar12 = var_218h;\n                                var_228h = piVar13;\n                                if (((var_218h & 0x200) != 0) && ((var_224h == NULL || (*piVar10 != '0')))) {\n                                    var_224h = &var_ch + -piVar9;\n                                    *piVar9 = '0';\n                                    piVar10 = piVar9;\n                                }\n                            }\n                            else if (var_211h < 'T') {\n                                if (var_211h == 0x53) {\n                                    if ((piVar12 & 0x830) == 0) {\n                                        piVar12 = piVar12 | 0x800;\n                                        var_218h = piVar12;\n                                    }\n                                    goto code_r0x0045fa8b;\n                                }\n                                if (var_211h == 0x41) {\ncode_r0x0045fa10:\n                                    var_211h = var_211h + 0x20;\n                                    var_260h = 1;\ncode_r0x0045fa23:\n                                    piVar13 = piVar12 | 0x40;\n                                    var_240h = 0x200;\n                                    piVar14 = &var_20ch;\n                                    pcVar15 = var_240h;\n                                    var_218h = piVar13;\n                                    if (var_228h < 0) {\n                                        var_228h = 0x6;\n                                    }\n                                    else if (var_228h == NULL) {\n                                        if (var_211h == 0x67) {\n                                            var_228h = 0x1;\n                                        }\n                                    }\n                                    else {\n                                        if (0x200 < var_228h) {\n                                            var_228h = 0x200;\n                                        }\n                                        if (0xa3 < var_228h) {\n                                            pcVar15 = var_228h + 0x15d;\n                                            var_258h = fcn.0045c8c3(pcVar15);\n                                            piVar14 = var_258h;\n                                            if (var_258h == NULL) {\n                                                var_228h = 0xa3;\n                                                piVar14 = &var_20ch;\n                                                pcVar15 = var_240h;\n                                            }\n                                        }\n                                    }\n                                    var_240h = pcVar15;\n                                    var_280h = *var_21ch;\n                                    var_27ch = var_21ch[1];\n                                    var_21ch = var_21ch + 2;\n                                    pcVar5 = (*_sym.imp.KERNEL32.dll_DecodePointer)\n                                                       (*0x4b5c18, &var_280h, piVar14, var_240h, var_211h, var_228h, \n                                                        var_260h, &var_278h);\n                                    (*pcVar5)();\n                                    if (((piVar12 & 0x80) != 0) && (var_228h == NULL)) {\n                                        pcVar5 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x4b5c24, piVar14, &var_278h);\n                                        (*pcVar5)();\n                                    }\n                                    if ((var_211h == 0x67) && ((piVar12 & 0x80) == 0)) {\n                                        pcVar5 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x4b5c20, piVar14, &var_278h);\n                                        (*pcVar5)();\n                                    }\n                                    if (*piVar14 == '-') {\n                                        var_218h = piVar12 | 0x140;\n                                        piVar13 = var_218h;\n                                        piVar14 = piVar14 + 1;\n                                    }\ncode_r0x0045fbab:\n                                    piVar10 = piVar14;\n                                    piVar12 = piVar13;\n                                    var_224h = fcn.00453900();\n                                }\n                                else if (var_211h == 0x43) {\n                                    if ((piVar12 & 0x830) == 0) {\n                                        piVar12 = piVar12 | 0x800;\n                                        var_218h = piVar12;\n                                    }\ncode_r0x0045fb04:\n                                    if ((piVar12 & 0x810) == 0) {\n                                        var_20ch._0_1_ = *var_21ch;\n                                        var_224h = 0x1;\n                                        var_21ch = var_21ch + 1;\n                                    }\n                                    else {\n                                        uVar2 = *var_21ch;\n                                        var_21ch = var_21ch + 1;\n                                        iVar11 = fcn.00464d01(&var_224h, &var_20ch, 0x200, uVar2);\n                                        if (iVar11 != 0) {\n                                            var_248h = 1;\n                                        }\n                                    }\n                                    piVar10 = &var_20ch;\n                                }\n                                else if ((var_211h == 0x45) || (var_211h == 0x47)) goto code_r0x0045fa10;\n                            }\n                            else {\n                                if (var_211h == 0x58) goto code_r0x0045fd9f;\n                                if (var_211h == 0x5a) {\n                                    piVar9 = *var_21ch;\n                                    var_21ch = var_21ch + 1;\n                                    piVar13 = piVar12;\n                                    piVar14 = *0x4b5260;\n                                    if ((piVar9 == NULL) || (piVar10 = piVar9[1],  piVar10 == NULL))\n                                    goto code_r0x0045fbab;\n                                    var_224h = *piVar9;\n                                    if ((piVar12 & 0x800) == 0) {\n                                        var_23ch = 0;\n                                    }\n                                    else {\n                                        var_224h = var_224h / 2;\n                                        var_23ch = 1;\n                                    }\n                                }\n                                else {\n                                    if (var_211h == 0x61) goto code_r0x0045fa23;\n                                    if (var_211h == 99) goto code_r0x0045fb04;\n                                }\n                            }\ncode_r0x0045ff28:\n                            if (var_248h == 0) {\n                                if ((piVar12 & 0x40) != 0) {\n                                    if ((piVar12 & 0x100) == 0) {\n                                        if ((piVar12 & 1) == 0) {\n                                            if ((piVar12 & 2) == 0) goto code_r0x0045ff6f;\n                                            var_22ch._0_1_ = 0x20;\n                                        }\n                                        else {\n                                            var_22ch._0_1_ = 0x2b;\n                                        }\n                                    }\n                                    else {\n                                        var_22ch._0_1_ = 0x2d;\n                                    }\n                                    var_234h = 1;\n                                }\ncode_r0x0045ff6f:\n                                pcVar15 = var_238h + (-var_234h - var_224h);\n                                if ((piVar12 & 0xc) == 0) {\n                                    fcn.0046019d(0x20, pcVar15, var_230h, &var_220h);\n                                }\n                                fcn.004601c9(&var_22ch, var_234h, var_230h, &var_220h, var_254h);\n                                if (((piVar12 & 8) != 0) && ((piVar12 & 4) == 0)) {\n                                    fcn.0046019d(0x30, pcVar15, var_230h, &var_220h);\n                                }\n                                if ((var_23ch == 0) || (pcVar6 = var_224h,  piVar9 = piVar10,  var_224h < 1)) {\n                                    fcn.004601c9(piVar10, var_224h, var_230h, &var_220h, var_254h);\n                                }\n                                else {\n                                    do {\n                                        var_240h = pcVar6 + -1;\n                                        var_264h = piVar9 + 2;\n                                        iVar11 = fcn.00464d01(&var_25ch, &var_ch, 6, *piVar9);\n                                        if ((iVar11 != 0) || (var_25ch == 0)) {\n                                            var_220h = -1;\n                                            break;\n                                        }\n                                        fcn.004601c9(&var_ch, var_25ch, var_230h, &var_220h, var_254h);\n                                        pcVar6 = var_240h;\n                                        piVar9 = var_264h;\n                                    } while (var_240h != NULL);\n                                }\n                                if ((-1 < var_220h) && ((piVar12 & 4) != 0)) {\n                                    fcn.0046019d(0x20, pcVar15, var_230h, &var_220h);\n                                }\n                            }\n                        }\n                        else {\n                            if ('p' < var_211h) {\n                                if (var_211h == 0x73) {\ncode_r0x0045fa8b:\n                                    piVar9 = 0x7fffffff;\n                                    if (var_228h != 0xffffffff) {\n                                        piVar9 = var_228h;\n                                    }\n                                    piVar13 = *var_21ch;\n                                    var_21ch = var_21ch + 1;\n                                    piVar10 = piVar13;\n                                    if ((piVar12 & 0x810) == 0) {\n                                        if (piVar13 == NULL) {\n                                            piVar13 = *0x4b5260;\n                                            piVar10 = *0x4b5260;\n                                        }\n                                        for (; (piVar9 != NULL && (piVar9 = piVar9 + -1,  *piVar13 != '\\0'));\n                                            piVar13 = piVar13 + 1) {\n                                        }\n                                        var_224h = piVar13 - piVar10;\n                                    }\n                                    else {\n                                        if (piVar13 == NULL) {\n                                            piVar10 = *0x4b5264;\n                                        }\n                                        var_23ch = 1;\n                                        for (piVar13 = piVar10;\n                                            (piVar9 != NULL && (piVar9 = piVar9 + -1,  *piVar13 != 0));\n                                            piVar13 = piVar13 + 2) {\n                                        }\n                                        var_224h = piVar13 - piVar10 >> 1;\n                                    }\n                                    goto code_r0x0045ff28;\n                                }\n                                if (var_211h == 0x75) goto code_r0x0045fc4a;\n                                if (var_211h != 0x78) goto code_r0x0045ff28;\n                                var_250h = 0x27;\ncode_r0x0045fdbf:\n                                var_224h = 0x10;\n                                if (piVar12 < '\\0') {\n                                    var_22ch._1_1_ = var_250h + 'Q';\n                                    var_22ch._0_1_ = 0x30;\n                                    var_234h = 2;\n                                }\n                                goto code_r0x0045fc54;\n                            }\n                            if (var_211h == 0x70) {\n                                var_228h = 0x8;\ncode_r0x0045fd9f:\n                                var_250h = 7;\n                                goto code_r0x0045fdbf;\n                            }\n                            if (var_211h < 'e') goto code_r0x0045ff28;\n                            if (var_211h < 'h') goto code_r0x0045fa23;\n                            if (var_211h == 0x69) goto code_r0x0045fc41;\n                            if (var_211h != 0x6e) {\n                                if (var_211h != 0x6f) goto code_r0x0045ff28;\n                                var_224h = 0x8;\n                                if (piVar12 < '\\0') {\n                                    piVar12 = piVar12 | 0x200;\n                                    var_218h = piVar12;\n                                }\n                                goto code_r0x0045fc54;\n                            }\n                            piVar9 = *var_21ch;\n                            var_21ch = var_21ch + 1;\n                            iVar11 = fcn.00453ff5();\n                            if (iVar11 == 0) goto code_r0x00460120;\n                            if ((piVar12 & 0x20) == 0) {\n                                *piVar9 = var_220h;\n                            }\n                            else {\n                                *piVar9 = var_220h;\n                            }\n                            var_248h = 1;\n                        }\n                        puVar7 = var_210h;\n                        iVar11 = var_220h;\n                        if (var_258h != NULL) {\n                            fcn.00455f3f(var_258h);\n                            var_258h = NULL;\n                            puVar7 = var_210h;\n                            iVar11 = var_220h;\n                        }\n                    }\n                    var_211h = *puVar7;\n                    var_24ch = var_24ch & 0xffffff00 | var_211h;\n                    puVar3 = puVar7;\n                }\n                goto code_r0x004600fe;\n            }\n        }\n    }\ncode_r0x00460120:\n    puVar8 = fcn.0045c4f2();\n    *puVar8 = 0x16;\n    fcn.0045e4f8();\ncode_r0x004600fe:\n    if (var_26ch != '\\0') {\n        *(var_270h + 0x70) = *(var_270h + 0x70) & 0xfffffffd;\n    }\n    fcn.004529f8(unaff_EBX);\n    return;\n}\n",
        "token_count": 6172
    },
    "00462139": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpBuffer\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Removing unreachable block (ram,0x00462455)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00462139(uint *arg_8h, uint *arg_ch, uint *nNumberOfBytesToWrite)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *puVar6;\n    int32_t iVar7;\n    uint *puVar8;\n    int32_t iVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    char cVar12;\n    uint unaff_EBP;\n    uint32_t unaff_ESI;\n    int32_t iVar13;\n    uint *puVar14;\n    uint *puVar15;\n    uint CodePage;\n    uint var_1aech;\n    uint var_1ae8h;\n    uint lpMode;\n    uint *lpNumberOfBytesWritten;\n    uint *var_1ad8h;\n    int32_t var_1ad4h;\n    uint var_1ad0h;\n    uint *var_1acch;\n    uint *var_1ac8h;\n    uint *lpWideCharStr;\n    uint *var_1ac0h;\n    uint *var_1abch;\n    uint var_1ab8h;\n    uint var_1410h;\n    uint var_6b8h;\n    uint uStackY52;\n    uint uStackY48;\n    uint uStackY44;\n    uint *puStackY40;\n    int32_t iStackY36;\n    uint arg_10h;\n    uint32_t lpBuffer;\n    uint var_4h;\n    \n    fcn.00459c50();\n    puVar14 = NULL;\n    var_1ac0h = arg_8h;\n    var_1abch = arg_ch;\n    lpWideCharStr = NULL;\n    var_1ad4h = 0;\n    if (nNumberOfBytesToWrite == NULL) goto code_r0x00462956;\n    if (arg_ch == NULL) {\n        puVar14 = fcn.0045c4be();\n        *puVar14 = 0;\n        puVar14 = fcn.0045c4f2();\n        *puVar14 = 0x16;\n        fcn.0045e4f8();\n        goto code_r0x00462956;\n    }\n    iVar9 = arg_8h >> 5;\n    iVar13 = (arg_8h & 0x1f) * 0x40;\n    iVar4 = *(iVar9 * 4 + 0x4b9168);\n    cVar12 = *(iVar13 + 0x24 + iVar4) * '\\x02' >> 1;\n    lpBuffer = unaff_ESI;\n    if (((cVar12 == '\\x02') || (cVar12 == '\\x01')) && ((~nNumberOfBytesToWrite & 1) == 0)) {\n        puVar14 = fcn.0045c4be();\n        *puVar14 = 0;\n        puVar14 = fcn.0045c4f2();\n        *puVar14 = 0x16;\n        fcn.0045e4f8();\n        goto code_r0x00462956;\n    }\n    if ((*(iVar13 + 4 + iVar4) & 0x20) != 0) {\n        iStackY36 = 0x462212;\n        fcn.00462e7e(arg_8h, 0, 0, 2);\n    }\n    iVar4 = fcn.0046c470(var_1ac0h);\n    puVar15 = puVar14;\n    if ((iVar4 == 0) || ((*(iVar13 + 4 + *(iVar9 * 4 + 0x4b9168)) & 0x80) == 0)) {\ncode_r0x00462541:\n        iVar4 = *(iVar9 * 4 + 0x4b9168);\n        if ((*(iVar13 + 4 + iVar4) & 0x80) == 0) {\n            iStackY36 = *(iVar13 + iVar4);\n            puStackY40 = 0x4628c9;\n            iVar4 = (*_sym.imp.KERNEL32.dll_WriteFile)();\n            if (iVar4 == 0) {\ncode_r0x004628d7:\n                puVar8 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                puVar15 = puVar14;\n            }\n            else {\n                puVar8 = NULL;\n                puVar15 = var_1ad8h;\n            }\ncode_r0x004628e5:\n            if (puVar15 != NULL) goto code_r0x00462956;\n            goto code_r0x004628e9;\n        }\n        puVar8 = NULL;\n        var_1ac8h = NULL;\n        if (cVar12 == '\\0') {\n            lpWideCharStr = var_1abch;\n            if (nNumberOfBytesToWrite == NULL) goto code_r0x00462911;\n            do {\n                puVar14 = lpWideCharStr - var_1abch;\n                puVar6 = &fcn.00462139::var_1ab8h;\n                var_1ac0h = NULL;\n                do {\n                    if (nNumberOfBytesToWrite <= puVar14) break;\n                    cVar12 = *lpWideCharStr;\n                    lpWideCharStr = lpWideCharStr + 1;\n                    puVar14 = puVar14 + 1;\n                    if (cVar12 == '\\n') {\n                        *puVar6 = '\\r';\n                        puVar6 = puVar6 + 1;\n                        var_1ac0h = var_1ac0h + 1;\n                    }\n                    *puVar6 = cVar12;\n                    puVar6 = puVar6 + 1;\n                    var_1ac0h = var_1ac0h + 1;\n                } while (var_1ac0h < 0x13ff);\n                iStackY36 = *(iVar13 + *(iVar9 * 4 + 0x4b9168));\n                puStackY40 = 0x462614;\n                iVar4 = (*_sym.imp.KERNEL32.dll_WriteFile)();\n                puVar14 = puVar15;\n                if (iVar4 == 0) goto code_r0x004628d7;\n                puVar15 = puVar15 + var_1ad8h;\n            } while ((puVar6 - &fcn.00462139::var_1ab8h <= var_1ad8h) &&\n                    (lpWideCharStr - var_1abch < nNumberOfBytesToWrite));\n            goto code_r0x004628e5;\n        }\n        if (cVar12 == '\\x02') {\n            var_1ac0h = var_1abch;\n            if (nNumberOfBytesToWrite != NULL) {\n                do {\n                    puVar14 = var_1ac0h - var_1abch;\n                    uVar11 = 0;\n                    puVar6 = &fcn.00462139::var_1ab8h;\n                    do {\n                        if (nNumberOfBytesToWrite <= puVar14) break;\n                        uVar2 = *var_1ac0h;\n                        var_1ac0h = var_1ac0h + 2;\n                        puVar14 = puVar14 + 2;\n                        if (uVar2 == 10) {\n                            *puVar6 = 0xd;\n                            puVar6 = puVar6 + 2;\n                            uVar11 = uVar11 + 2;\n                        }\n                        *puVar6 = uVar2;\n                        uVar11 = uVar11 + 2;\n                        puVar6 = puVar6 + 2;\n                    } while (uVar11 < 0x13fe);\n                    iStackY36 = *(iVar13 + *(iVar9 * 4 + 0x4b9168));\n                    puStackY40 = 0x46270f;\n                    iVar4 = (*_sym.imp.KERNEL32.dll_WriteFile)();\n                    puVar14 = lpWideCharStr;\n                    if (iVar4 == 0) goto code_r0x004628d7;\n                    lpWideCharStr = lpWideCharStr + var_1ad8h;\n                    puVar8 = var_1ac8h;\n                    puVar15 = lpWideCharStr;\n                } while ((puVar6 - &fcn.00462139::var_1ab8h <= var_1ad8h) &&\n                        (var_1ac0h - var_1abch < nNumberOfBytesToWrite));\n                goto code_r0x004628e5;\n            }\n        }\n        else {\n            lpNumberOfBytesWritten = var_1abch;\n            if (nNumberOfBytesToWrite != NULL) {\n                do {\n                    puVar15 = lpNumberOfBytesWritten - var_1abch;\n                    uVar11 = 0;\n                    puVar14 = &fcn.00462139::var_6b8h;\n                    do {\n                        if (nNumberOfBytesToWrite <= puVar15) break;\n                        uVar2 = *lpNumberOfBytesWritten;\n                        lpNumberOfBytesWritten = lpNumberOfBytesWritten + 2;\n                        puVar15 = puVar15 + 2;\n                        if (uVar2 == 10) {\n                            *puVar14 = 0xd;\n                            puVar14 = puVar14 + 2;\n                            uVar11 = uVar11 + 2;\n                        }\n                        *puVar14 = uVar2;\n                        uVar11 = uVar11 + 2;\n                        puVar14 = puVar14 + 2;\n                    } while (uVar11 < 0x6a8);\n                    puStackY40 = &fcn.00462139::var_6b8h;\n                    iStackY36 = (puVar14 - puStackY40) / 2;\n                    uStackY44 = 0;\n                    uStackY48 = 0xfde9;\n                    uStackY52 = 0x4627fb;\n                    iVar4 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)();\n                    puVar15 = lpWideCharStr;\n                    puVar14 = lpWideCharStr;\n                    if (iVar4 == 0) goto code_r0x004628d7;\n                    var_1ac0h = NULL;\n                    do {\n                        iStackY36 = *(iVar13 + *(iVar9 * 4 + 0x4b9168));\n                        puStackY40 = 0x46284e;\n                        iVar7 = (*_sym.imp.KERNEL32.dll_WriteFile)();\n                        if (iVar7 == 0) {\n                            var_1ac8h = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                            break;\n                        }\n                        var_1ac0h = var_1ac0h + var_1ad8h;\n                    } while (var_1ac0h < iVar4);\n                    puVar8 = var_1ac8h;\n                } while ((iVar4 <= var_1ac0h) &&\n                        (lpWideCharStr = lpNumberOfBytesWritten - var_1abch,  puVar15 = lpWideCharStr, \n                        lpWideCharStr < nNumberOfBytesToWrite));\n                goto code_r0x004628e5;\n            }\n        }\n    }\n    else {\n        iVar4 = fcn.00460e79();\n        var_1ac0h = *(*(iVar4 + 0x6c) + 0xa8) == 0;\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetConsoleMode)();\n        if ((iVar4 == 0) || ((var_1ac0h != NULL && (cVar12 == '\\0')))) goto code_r0x00462541;\n        uVar5 = (*_sym.imp.KERNEL32.dll_GetConsoleCP)();\n        var_1acch = var_1abch;\n        puVar8 = var_1ac0h;\n        if (nNumberOfBytesToWrite != NULL) {\n            puVar6 = NULL;\n            var_1ac8h = NULL;\n            puVar10 = var_1abch;\n            do {\n                puVar14 = puVar15;\n                if (cVar12 == '\\0') {\n                    cVar1 = *puVar10;\n                    var_1ac0h = cVar1 == '\\n';\n                    iVar4 = *(iVar9 * 4 + 0x4b9168);\n                    if (*(iVar13 + 0x38 + iVar4) == 0) {\n                        iVar4 = fcn.00464a9f(cVar1);\n                        if (iVar4 == 0) {\n                            arg_10h = 1;\n                            puVar8 = var_1acch;\n                            goto code_r0x00462367;\n                        }\n                        if ((var_1abch - var_1acch) + nNumberOfBytesToWrite < 0x2) {\n                            puVar15 = puVar15 + 1;\n                            *(iVar13 + 0x34 + *(iVar9 * 4 + 0x4b9168)) = *var_1acch;\n                            *(iVar13 + 0x38 + *(iVar9 * 4 + 0x4b9168)) = 1;\n                            puVar8 = var_1ac0h;\n                            break;\n                        }\n                        iVar4 = fcn.00464a51(&fcn.00462139::lpWideCharStr, var_1acch, 2);\n                        puVar8 = var_1ac0h;\n                        if (iVar4 == -1) break;\n                        var_1acch = var_1acch + 1;\n                        var_1ac8h = var_1ac8h + 1;\n                    }\n                    else {\n                        arg_10h = 2;\n                        lpBuffer._0_2_ = CONCAT11(cVar1, *(iVar13 + 0x34 + iVar4));\n                        lpBuffer = lpBuffer & 0xffff0000 | lpBuffer;\n                        *(iVar13 + 0x38 + iVar4) = 0;\n                        puVar8 = &fcn.00462139::lpBuffer;\ncode_r0x00462367:\n                        iVar4 = fcn.00464a51(&fcn.00462139::lpWideCharStr, puVar8, arg_10h);\n                        puVar8 = var_1ac0h;\n                        if (iVar4 == -1) break;\n                    }\n                    var_1acch = var_1acch + 1;\n                    var_1ac8h = var_1ac8h + 1;\n                    iStackY36 = 1;\n                    puStackY40 = &fcn.00462139::lpWideCharStr;\n                    uStackY44 = 0;\n                    uStackY52 = 0x4623b2;\n                    uStackY48 = uVar5;\n                    iVar4 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)();\n                    puVar8 = var_1ac0h;\n                    if (iVar4 == 0) break;\n                    iStackY36 = *(iVar13 + *(iVar9 * 4 + 0x4b9168));\n                    puStackY40 = 0x4623e4;\n                    iVar7 = (*_sym.imp.KERNEL32.dll_WriteFile)();\n                    if (iVar7 == 0) goto code_r0x004628d7;\n                    puVar15 = var_1ac8h + var_1ad4h;\n                    puVar8 = var_1ac0h;\n                    if (0 < iVar4) break;\n                    puVar6 = var_1ac8h;\n                    puVar10 = var_1acch;\n                    puVar14 = puVar15;\n                    if (var_1ac0h != NULL) {\n                        lpBuffer = CONCAT31(lpBuffer._1_3_, 0xd);\n                        iStackY36 = *(iVar13 + *(iVar9 * 4 + 0x4b9168));\n                        puStackY40 = 0x462440;\n                        iVar4 = (*_sym.imp.KERNEL32.dll_WriteFile)();\n                        puVar8 = var_1ac0h;\n                        if (iVar4 == 0) goto code_r0x004628d7;\n                        break;\n                    }\n                }\n                else {\n                    if ((cVar12 == '\\x01') || (cVar12 == '\\x02')) {\n                        lpWideCharStr = *puVar10;\n                        var_1ac0h = *puVar10 == 10;\n                        puVar10 = puVar10 + 2;\n                        puVar6 = var_1ac8h + 2;\n                        var_1acch = puVar10;\n                        var_1ac8h = puVar6;\n                    }\n                    if ((cVar12 == '\\x01') || (cVar12 == '\\x02')) {\n                        iVar3 = fcn.0046eb84(lpWideCharStr);\n                        if (iVar3 != lpWideCharStr) goto code_r0x004628d7;\n                        puVar6 = var_1ac8h;\n                        puVar10 = var_1acch;\n                        puVar14 = puVar15 + 2;\n                        if (var_1ac0h != NULL) {\n                            lpWideCharStr = 0xd;\n                            iVar3 = fcn.0046eb84(0xd);\n                            if (iVar3 != lpWideCharStr) goto code_r0x004628d7;\n                            var_1ad4h = var_1ad4h + 1;\n                            puVar14 = puVar15 + 3;\n                        }\n                    }\n                }\n                puVar15 = puVar14;\n                puVar8 = var_1ac0h;\n            } while (puVar6 < nNumberOfBytesToWrite);\n            goto code_r0x004628e5;\n        }\ncode_r0x004628e9:\n        if (puVar8 != NULL) {\n            if (puVar8 == 0x5) {\n                puVar14 = fcn.0045c4f2();\n                *puVar14 = 9;\n                puVar14 = fcn.0045c4be();\n                *puVar14 = 5;\n            }\n            else {\n                fcn.0045c4d1(puVar8);\n            }\n            goto code_r0x00462956;\n        }\n    }\ncode_r0x00462911:\n    if (((*(iVar13 + 4 + *(iVar9 * 4 + 0x4b9168)) & 0x40) == 0) || (*var_1abch != '\\x1a')) {\n        puVar14 = fcn.0045c4f2();\n        *puVar14 = 0x1c;\n        puVar14 = fcn.0045c4be();\n        *puVar14 = 0;\n    }\ncode_r0x00462956:\n    fcn.004529f8(unaff_EBP);\n    return;\n}\n",
        "token_count": 4210
    },
    "00464ab0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nushort __cdecl fcn.00464ab0(uint *arg_8h)\n\n{\n    ushort uVar1;\n    uint *puVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint arg_ch;\n    uint arg_10h;\n    \n    if (arg_8h == NULL) {\n        puVar2 = fcn.0045c4f2();\n        *puVar2 = 0x16;\n        fcn.0045e4f8();\n    }\n    else {\n        uVar4 = arg_8h[3];\n        if (((uVar4 & 0x83) != 0) && ((uVar4 & 0x40) == 0)) {\n            if ((uVar4 & 2) == 0) {\n                arg_8h[3] = uVar4 | 1;\n                if ((uVar4 & 0x10c) == 0) {\n                    fcn.0045f4b2(arg_8h);\n                }\n                else {\n                    *arg_8h = arg_8h[2];\n                }\n                arg_10h = arg_8h[6];\n                arg_ch = arg_8h[2];\n                arg_8h_00 = fcn.0045f093(arg_8h);\n                iVar3 = fcn.00465b22(arg_8h_00, arg_ch, arg_10h);\n                arg_8h[1] = iVar3;\n                if (((iVar3 != 0) && (iVar3 != 1)) && (iVar3 != -1)) {\n                    if ((*(arg_8h + 3) & 0x82) == 0) {\n                        iVar3 = fcn.0045f093(arg_8h);\n                        if ((iVar3 == -1) || (iVar3 = fcn.0045f093(arg_8h),  iVar3 == -2)) {\n                            iVar3 = 0x4b5220;\n                        }\n                        else {\n                            iVar3 = fcn.0045f093(arg_8h);\n                            uVar4 = fcn.0045f093(arg_8h);\n                            iVar3 = (uVar4 & 0x1f) * 0x40 + *((iVar3 >> 5) * 4 + 0x4b9168);\n                        }\n                        if ((*(iVar3 + 4) & 0x82) == 0x82) {\n                            arg_8h[3] = arg_8h[3] | 0x2000;\n                        }\n                    }\n                    if (((arg_8h[6] == 0x200) && ((*(arg_8h + 3) & 8) != 0)) && ((arg_8h[3] & 0x400) == 0)) {\n                        arg_8h[6] = 0x1000;\n                    }\n                    arg_8h[1] = arg_8h[1] + -2;\n                    uVar1 = **arg_8h;\n                    *arg_8h = *arg_8h + 1;\n                    return uVar1;\n                }\n                arg_8h[3] = arg_8h[3] | (-(iVar3 != 0) & 0x10) + 0x10;\n                arg_8h[1] = 0;\n            }\n            else {\n                arg_8h[3] = uVar4 | 0x20;\n            }\n        }\n    }\n    return 0xffff;\n}\n",
        "token_count": 786
    },
    "004683ae": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nfloat10 fcn.004683ae(double param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_14h;\n    double dVar6;\n    double dVar7;\n    uchar in_XMM0 [16];\n    double dVar8;\n    double dVar9;\n    double dVar10;\n    double dVar11;\n    double dStack12;\n    \n    iVar4 = 0;\n    while( true ) {\n        uVar2 = SUB162(in_XMM0 >> 0x30, 0) >> 4;\n        dVar6 = SUB168(in_XMM0, 0) & *0x497c80 | *0x497ce0;\n        dVar7 = SUB168(in_XMM0, 0) & *0x497c88 | *0x497ce8;\n        uVar1 = SUB82(*0x497c90 + dVar6, 0) & 0x7f0;\n        dVar11 = *0x497ca8 & dVar7;\n        dVar9 = (*0x497ca0 & dVar6) * *(uVar1 + 0x497d60) - *0x497ce0;\n        dVar6 = (dVar6 - (*0x497ca0 & dVar6)) * *(uVar1 + 0x497d60);\n        dVar8 = (dVar7 - dVar11) * *(uVar1 + 0x497d68);\n        dVar7 = dVar6 + dVar9;\n        dVar11 = dVar8 + (dVar11 * *(uVar1 + 0x497d68) - *0x497ce8);\n        uVar3 = uVar2 - 1;\n        if (uVar3 < 0x7fe) {\n            iVar4 = (uVar2 - 0x3ff) + iVar4;\n            dVar10 = iVar4;\n            iVar5 = 0;\n            if (uVar1 + iVar4 * 0x400 == 0) {\n                iVar5 = 0x10;\n            }\n            return ((*0x497d30 * dVar7 + *0x497d40) * dVar7 + *0x497d50) * dVar7 * dVar7 * dVar7 * dVar7 * dVar7 +\n                   ((*0x497d38 * dVar11 + *0x497d48) * dVar11 + *0x497d58) * dVar11 * dVar11 +\n                   *(uVar1 + 0x498178) + dVar10 * *0x497cb8 + (dVar8 & *(iVar5 + 0x497cc8)) +\n                   *(uVar1 + 0x498170) + dVar9 + dVar10 * *0x497cb0 + (dVar6 & *(iVar5 + 0x497cc0));\n        }\n        dStack12 = -(*0x497cf0 == param_1);\n        if (SUB82(dStack12, 0) != 0) break;\n        if (uVar3 != 0xffffffff) {\n            if (uVar3 < 0x7ff) {\n                if (*0x497ce0 == (param_1 & *0x497c80 | *0x497ce0)) {\n                    return *0x497d18;\n                }\n                arg_14h = 1000;\n                dStack12 = *0x497c80;\n            }\n            else if (((uVar2 & 0x7ff) < 0x7ff) || ((SUB84(param_1, 0) | param_1 >> 0x20 & 0xfffff) == 0)) {\n                dStack12 = -NAN;\n                arg_14h = 3;\n            }\n            else {\n                arg_14h = 1000;\n            }\n            goto code_r0x004685a2;\n        }\n        in_XMM0 = CONCAT88(dVar11, param_1 * *0x497d00);\n        iVar4 = -0x34;\n    }\n    arg_14h = 2;\n    dStack12 = *0x497d10;\ncode_r0x004685a2:\n    fcn.00467fbc(&param_1, &param_1, &dStack12, arg_14h);\n    return dStack12;\n}\n",
        "token_count": 993
    },
    "0046a026": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0046a026(int32_t arg_8h, uint8_t *arg_ch, uint arg_10h, int32_t **arg_14h)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    code *pcVar4;\n    char *pcVar5;\n    uint *puVar6;\n    int32_t *piVar7;\n    int32_t *piVar8;\n    int32_t extraout_ECX;\n    int32_t iVar9;\n    uint8_t *puVar10;\n    uint8_t *puVar11;\n    uint unaff_EBX;\n    int32_t *piVar12;\n    int32_t *piVar13;\n    int32_t *piVar14;\n    char *pcVar15;\n    bool bVar16;\n    int64_t iVar17;\n    int32_t *var_280h;\n    int32_t *var_27ch;\n    uint var_278h;\n    int32_t var_270h;\n    uint var_26ch;\n    int32_t *var_264h;\n    uint var_260h;\n    int32_t var_25ch;\n    uint var_258h;\n    int32_t var_254h;\n    int32_t *var_250h;\n    uint32_t var_24ch;\n    int32_t var_248h;\n    int32_t var_244h;\n    char *var_240h;\n    uint32_t var_23ch;\n    int32_t *var_238h;\n    uint8_t *var_234h;\n    int32_t var_230h;\n    int32_t var_22ch;\n    uint var_228h;\n    int32_t var_224h;\n    int32_t *var_220h;\n    char *var_21ch;\n    int32_t **var_218h;\n    int32_t *var_214h;\n    uint var_20dh;\n    uchar var_dh;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b4f00 ^ &stack0xfffffffc;\n    var_234h = arg_ch;\n    piVar12 = NULL;\n    var_22ch = arg_8h;\n    var_218h = arg_14h;\n    var_254h = 0;\n    var_214h = NULL;\n    var_238h = NULL;\n    var_220h = NULL;\n    var_230h = 0;\n    var_248h = 0;\n    var_244h = 0;\n    fcn.0045582e(arg_10h);\n    var_258h = fcn.0045c4f2();\n    if (arg_8h != 0) {\n        if ((*(arg_8h + 0xc) & 0x40) == 0) {\n            uVar3 = fcn.0045f093(arg_8h);\n            if ((uVar3 == 0xffffffff) || (uVar3 == 0xfffffffe)) {\n                iVar9 = 0x4b5220;\n            }\n            else {\n                iVar9 = (uVar3 & 0x1f) * 0x40 + *((uVar3 >> 5) * 4 + 0x4b9168);\n            }\n            if ((*(iVar9 + 0x24) & 0x7f) == 0) {\n                if ((uVar3 == 0xffffffff) || (uVar3 == 0xfffffffe)) {\n                    iVar9 = 0x4b5220;\n                }\n                else {\n                    iVar9 = (uVar3 & 0x1f) * 0x40 + *((uVar3 >> 5) * 4 + 0x4b9168);\n                }\n                if ((*(iVar9 + 0x24) & 0x80) == 0) goto code_r0x0046a114;\n            }\n        }\n        else {\ncode_r0x0046a114:\n            if (var_234h != NULL) {\n                var_21ch = NULL;\n                var_23ch = 0;\n                var_250h = NULL;\n                var_20dh._0_1_ = *var_234h;\n                var_224h = 0;\n                var_24ch = var_24ch & 0xffffff00 | var_20dh;\n                puVar10 = var_234h;\n                piVar8 = var_264h;\n                if (var_20dh == 0) goto code_r0x0046ab4b;\n                do {\n                    var_234h = puVar10 + 1;\n                    if (var_224h < 0) break;\n                    if (var_20dh - 0x20 < 0x59) {\n                        uVar3 = *(var_20dh + 0x49bfb0) & 0xf;\n                    }\n                    else {\n                        uVar3 = 0;\n                    }\n                    var_23ch = *(uVar3 * 9 + 0x49bfd0 + var_23ch) >> 4;\n                    puVar11 = var_234h;\n    // switch table (8 cases) at 0x46ab6e\n                    switch(var_23ch) {\n                    case 0:\ncode_r0x0046a39b:\n                        var_244h = 0;\n                        iVar9 = fcn.00464a69(var_20dh, &var_278h);\n                        if (iVar9 != 0) {\n                            fcn.00460157(var_24ch, var_22ch, &var_224h);\n                            uVar1 = *var_234h;\n                            var_234h = var_234h + 1;\n                            var_24ch = var_24ch & 0xffffff00 | uVar1;\n                            if (uVar1 == 0) goto code_r0x0046ab38;\n                        }\n                        fcn.00460157(var_24ch, var_22ch, &var_224h);\n                        puVar11 = var_234h;\n                        break;\n                    case 1:\n                        var_220h = 0xffffffff;\n                        piVar12 = NULL;\n                        var_260h = 0;\n                        var_248h = 0;\n                        var_238h = NULL;\n                        var_230h = 0;\n                        var_214h = NULL;\n                        var_244h = 0;\n                        break;\n                    case 2:\n                        if (var_20dh == 0x20) {\n                            piVar12 = piVar12 | 2;\n                            var_214h = piVar12;\n                        }\n                        else if (var_20dh == 0x23) {\n                            piVar12 = piVar12 | 0x80;\n                            var_214h = piVar12;\n                        }\n                        else if (var_20dh == 0x2b) {\n                            piVar12 = piVar12 | 1;\n                            var_214h = piVar12;\n                        }\n                        else if (var_20dh == 0x2d) {\n                            piVar12 = piVar12 | 4;\n                            var_214h = piVar12;\n                        }\n                        else if (var_20dh == 0x30) {\n                            piVar12 = piVar12 | 8;\n                            var_214h = piVar12;\n                        }\n                        break;\n                    case 3:\n                        if (var_20dh == 0x2a) {\n                            var_238h = *var_218h;\n                            var_218h = var_218h + 1;\n                            if (var_238h < 0) {\n                                piVar12 = piVar12 | 4;\n                                var_238h = -var_238h;\n                                var_214h = piVar12;\n                            }\n                        }\n                        else {\n                            var_238h = var_238h * 10 + -0x30 + var_20dh;\n                        }\n                        break;\n                    case 4:\n                        var_220h = NULL;\n                        break;\n                    case 5:\n                        if (var_20dh == 0x2a) {\n                            var_220h = *var_218h;\n                            var_218h = var_218h + 1;\n                            if (var_220h < 0) {\n                                var_220h = 0xffffffff;\n                            }\n                        }\n                        else {\n                            var_220h = var_220h * 10 + -0x30 + var_20dh;\n                        }\n                        break;\n                    case 6:\n                        if (var_20dh == 0x49) {\n                            uVar1 = *var_234h;\n                            if ((uVar1 == 0x36) && (puVar10[2] == 0x34)) {\n                                piVar12 = piVar12 | 0x8000;\n                                puVar11 = puVar10 + 3;\n                                var_214h = piVar12;\n                            }\n                            else if ((uVar1 == 0x33) && (puVar10[2] == 0x32)) {\n                                piVar12 = piVar12 & 0xffff7fff;\n                                puVar11 = puVar10 + 3;\n                                var_214h = piVar12;\n                            }\n                            else if (((((uVar1 != 100) && (uVar1 != 0x69)) && (uVar1 != 0x6f)) &&\n                                     ((uVar1 != 0x75 && (uVar1 != 0x78)))) && (uVar1 != 0x58)) {\n                                var_23ch = 0;\n                                goto code_r0x0046a39b;\n                            }\n                        }\n                        else if (var_20dh == 0x68) {\n                            piVar12 = piVar12 | 0x20;\n                            var_214h = piVar12;\n                        }\n                        else if (var_20dh == 0x6c) {\n                            if (*var_234h == 0x6c) {\n                                piVar12 = piVar12 | 0x1000;\n                                puVar11 = puVar10 + 2;\n                                var_214h = piVar12;\n                            }\n                            else {\n                                piVar12 = piVar12 | 0x10;\n                                var_214h = piVar12;\n                            }\n                        }\n                        else if (var_20dh == 0x77) {\n                            piVar12 = piVar12 | 0x800;\n                            var_214h = piVar12;\n                        }\n                        break;\n                    case 7:\n                        if (var_20dh < 'e') {\n                            if (var_20dh == 100) {\ncode_r0x0046a672:\n                                piVar12 = piVar12 | 0x40;\n                                var_214h = piVar12;\ncode_r0x0046a67b:\n                                var_21ch = 0xa;\ncode_r0x0046a685:\n                                if (((piVar12 & 0x8000) == 0) && ((piVar12 & 0x1000) == 0)) {\n                                    if ((piVar12 & 0x20) == 0) {\n                                        if ((piVar12 & 0x40) == 0) {\n                                            piVar8 = *var_218h;\n                                            piVar7 = NULL;\n                                            var_218h = var_218h + 1;\n                                            goto code_r0x0046a85c;\n                                        }\n                                        piVar8 = *var_218h;\n                                    }\n                                    else if ((piVar12 & 0x40) == 0) {\n                                        piVar8 = *var_218h;\n                                    }\n                                    else {\n                                        piVar8 = *var_218h;\n                                    }\n                                    piVar7 = piVar8 >> 0x1f;\n                                    var_218h = var_218h + 1;\n                                }\n                                else {\n                                    piVar8 = *var_218h;\n                                    piVar7 = var_218h[1];\n                                    var_218h = var_218h + 2;\n                                }\ncode_r0x0046a85c:\n                                if ((((piVar12 & 0x40) != 0) && (piVar7 < 1)) && (piVar7 < 0)) {\n                                    bVar16 = piVar8 != NULL;\n                                    piVar8 = -piVar8;\n                                    piVar7 = -(piVar7 + bVar16);\n                                    piVar12 = piVar12 | 0x100;\n                                    var_214h = piVar12;\n                                }\n                                if ((piVar12 & 0x9000) == 0) {\n                                    piVar7 = NULL;\n                                }\n                                iVar17 = CONCAT44(piVar7, piVar8);\n                                if (var_220h < 0) {\n                                    var_220h = 0x1;\n                                }\n                                else {\n                                    piVar12 = piVar12 & 0xfffffff7;\n                                    var_214h = piVar12;\n                                    if (0x200 < var_220h) {\n                                        var_220h = 0x200;\n                                    }\n                                }\n                                if ((piVar8 | piVar7) == 0) {\n                                    var_230h = 0;\n                                }\n                                piVar7 = &var_dh;\n                                while ((piVar13 = var_220h + -1,  0 < var_220h || (iVar17 != 0))) {\n                                    var_220h = piVar13;\n                                    iVar17 = fcn.00461f10();\n                                    var_240h = iVar17;\n                                    iVar9 = extraout_ECX + 0x30;\n                                    if (0x39 < iVar9) {\n                                        iVar9 = iVar9 + var_254h;\n                                    }\n                                    *piVar7 = iVar9;\n                                    piVar7 = piVar7 + -1;\n                                    var_264h = piVar12;\n                                }\n                                var_21ch = &var_dh + -piVar7;\n                                piVar8 = piVar7 + 1;\n                                piVar12 = var_214h;\n                                var_220h = piVar13;\n                                if (((var_214h & 0x200) != 0) && ((var_21ch == NULL || (*piVar8 != '0')))) {\n                                    var_21ch = &var_ch + -piVar7;\n                                    *piVar7 = '0';\n                                    piVar8 = piVar7;\n                                }\n                            }\n                            else if (var_20dh < 'T') {\n                                if (var_20dh == 0x53) {\n                                    if ((piVar12 & 0x830) == 0) {\n                                        piVar12 = piVar12 | 0x800;\n                                        var_214h = piVar12;\n                                    }\n                                    goto code_r0x0046a4bc;\n                                }\n                                if (var_20dh == 0x41) {\ncode_r0x0046a441:\n                                    var_20dh._0_1_ = var_20dh + 0x20;\n                                    var_260h = 1;\ncode_r0x0046a454:\n                                    piVar13 = piVar12 | 0x40;\n                                    piVar8 = &var_20dh + 1;\n                                    var_240h = 0x200;\n                                    piVar14 = piVar8;\n                                    pcVar15 = var_240h;\n                                    var_214h = piVar13;\n                                    if (var_220h < 0) {\n                                        var_220h = 0x6;\n                                    }\n                                    else if (var_220h == NULL) {\n                                        if (var_20dh == 0x67) {\n                                            var_220h = 0x1;\n                                        }\n                                    }\n                                    else {\n                                        if (0x200 < var_220h) {\n                                            var_220h = 0x200;\n                                        }\n                                        if (0xa3 < var_220h) {\n                                            pcVar15 = var_220h + 0x15d;\n                                            var_250h = fcn.0045c8c3(pcVar15);\n                                            piVar14 = var_250h;\n                                            if (var_250h == NULL) {\n                                                var_220h = 0xa3;\n                                                piVar14 = piVar8;\n                                                pcVar15 = var_240h;\n                                            }\n                                        }\n                                    }\n                                    var_240h = pcVar15;\n                                    var_280h = *var_218h;\n                                    var_27ch = var_218h[1];\n                                    var_218h = var_218h + 2;\n                                    pcVar4 = (*_sym.imp.KERNEL32.dll_DecodePointer)\n                                                       (*0x4b5c18, &var_280h, piVar14, var_240h, var_20dh, var_220h, \n                                                        var_260h, &var_278h);\n                                    (*pcVar4)();\n                                    if (((piVar12 & 0x80) != 0) && (var_220h == NULL)) {\n                                        pcVar4 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x4b5c24, piVar14, &var_278h);\n                                        (*pcVar4)();\n                                    }\n                                    if ((var_20dh == 0x67) && ((piVar12 & 0x80) == 0)) {\n                                        pcVar4 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x4b5c20, piVar14, &var_278h);\n                                        (*pcVar4)();\n                                    }\n                                    if (*piVar14 == '-') {\n                                        var_214h = piVar12 | 0x140;\n                                        piVar13 = var_214h;\n                                        piVar14 = piVar14 + 1;\n                                    }\ncode_r0x0046a5dc:\n                                    piVar8 = piVar14;\n                                    piVar12 = piVar13;\n                                    var_21ch = fcn.00453900();\n                                }\n                                else if (var_20dh == 0x43) {\n                                    if ((piVar12 & 0x830) == 0) {\n                                        piVar12 = piVar12 | 0x800;\n                                        var_214h = piVar12;\n                                    }\ncode_r0x0046a535:\n                                    if ((piVar12 & 0x810) == 0) {\n                                        var_20dh._1_1_ = *var_218h;\n                                        var_21ch = 0x1;\n                                        var_218h = var_218h + 1;\n                                    }\n                                    else {\n                                        uVar2 = *var_218h;\n                                        var_218h = var_218h + 1;\n                                        iVar9 = fcn.00464d01(&var_21ch, &var_20dh + 1, 0x200, uVar2);\n                                        if (iVar9 != 0) {\n                                            var_248h = 1;\n                                        }\n                                    }\n                                    piVar8 = &var_20dh + 1;\n                                }\n                                else if ((var_20dh == 0x45) || (var_20dh == 0x47)) goto code_r0x0046a441;\n                            }\n                            else {\n                                if (var_20dh == 0x58) goto code_r0x0046a7d0;\n                                if (var_20dh == 0x5a) {\n                                    piVar7 = *var_218h;\n                                    var_218h = var_218h + 1;\n                                    piVar13 = piVar12;\n                                    piVar14 = *0x4b5260;\n                                    if ((piVar7 == NULL) || (piVar8 = piVar7[1],  piVar8 == NULL))\n                                    goto code_r0x0046a5dc;\n                                    var_21ch = *piVar7;\n                                    if ((piVar12 & 0x800) == 0) {\n                                        var_244h = 0;\n                                    }\n                                    else {\n                                        var_21ch = var_21ch / 2;\n                                        var_244h = 1;\n                                    }\n                                }\n                                else {\n                                    if (var_20dh == 0x61) goto code_r0x0046a454;\n                                    if (var_20dh == 99) goto code_r0x0046a535;\n                                }\n                            }\ncode_r0x0046a959:\n                            if (var_248h == 0) {\n                                if ((piVar12 & 0x40) != 0) {\n                                    if ((piVar12 & 0x100) == 0) {\n                                        if ((piVar12 & 1) == 0) {\n                                            if ((piVar12 & 2) == 0) goto code_r0x0046a9a0;\n                                            var_228h._0_1_ = 0x20;\n                                        }\n                                        else {\n                                            var_228h._0_1_ = 0x2b;\n                                        }\n                                    }\n                                    else {\n                                        var_228h._0_1_ = 0x2d;\n                                    }\n                                    var_230h = 1;\n                                }\ncode_r0x0046a9a0:\n                                pcVar15 = var_238h + (-var_230h - var_21ch);\n                                if ((piVar12 & 0xc) == 0) {\n                                    fcn.0046019d(0x20, pcVar15, var_22ch, &var_224h);\n                                }\n                                fcn.004601c9(&var_228h, var_230h, var_22ch, &var_224h, var_258h);\n                                if (((piVar12 & 8) != 0) && ((piVar12 & 4) == 0)) {\n                                    fcn.0046019d(0x30, pcVar15, var_22ch, &var_224h);\n                                }\n                                if ((var_244h == 0) || (pcVar5 = var_21ch,  piVar7 = piVar8,  var_21ch < 1)) {\n                                    fcn.004601c9(piVar8, var_21ch, var_22ch, &var_224h, var_258h);\n                                }\n                                else {\n                                    do {\n                                        var_240h = pcVar5 + -1;\n                                        var_264h = piVar7 + 2;\n                                        iVar9 = fcn.00464d01(&var_25ch, &var_ch, 6, *piVar7);\n                                        if ((iVar9 != 0) || (var_25ch == 0)) {\n                                            var_224h = -1;\n                                            break;\n                                        }\n                                        fcn.004601c9(&var_ch, var_25ch, var_22ch, &var_224h, var_258h);\n                                        pcVar5 = var_240h;\n                                        piVar7 = var_264h;\n                                    } while (var_240h != NULL);\n                                }\n                                if ((-1 < var_224h) && ((piVar12 & 4) != 0)) {\n                                    fcn.0046019d(0x20, pcVar15, var_22ch, &var_224h);\n                                }\n                            }\n                        }\n                        else {\n                            if ('p' < var_20dh) {\n                                if (var_20dh == 0x73) {\ncode_r0x0046a4bc:\n                                    piVar7 = 0x7fffffff;\n                                    if (var_220h != 0xffffffff) {\n                                        piVar7 = var_220h;\n                                    }\n                                    piVar13 = *var_218h;\n                                    var_218h = var_218h + 1;\n                                    piVar8 = piVar13;\n                                    if ((piVar12 & 0x810) == 0) {\n                                        if (piVar13 == NULL) {\n                                            piVar13 = *0x4b5260;\n                                            piVar8 = *0x4b5260;\n                                        }\n                                        for (; (piVar7 != NULL && (piVar7 = piVar7 + -1,  *piVar13 != '\\0'));\n                                            piVar13 = piVar13 + 1) {\n                                        }\n                                        var_21ch = piVar13 - piVar8;\n                                    }\n                                    else {\n                                        if (piVar13 == NULL) {\n                                            piVar8 = *0x4b5264;\n                                        }\n                                        var_244h = 1;\n                                        for (piVar13 = piVar8;\n                                            (piVar7 != NULL && (piVar7 = piVar7 + -1,  *piVar13 != 0));\n                                            piVar13 = piVar13 + 2) {\n                                        }\n                                        var_21ch = piVar13 - piVar8 >> 1;\n                                    }\n                                    goto code_r0x0046a959;\n                                }\n                                if (var_20dh == 0x75) goto code_r0x0046a67b;\n                                if (var_20dh != 0x78) goto code_r0x0046a959;\n                                var_254h = 0x27;\ncode_r0x0046a7f0:\n                                var_21ch = 0x10;\n                                if (piVar12 < '\\0') {\n                                    var_228h._1_1_ = var_254h + 'Q';\n                                    var_228h._0_1_ = 0x30;\n                                    var_230h = 2;\n                                }\n                                goto code_r0x0046a685;\n                            }\n                            if (var_20dh == 0x70) {\n                                var_220h = 0x8;\ncode_r0x0046a7d0:\n                                var_254h = 7;\n                                goto code_r0x0046a7f0;\n                            }\n                            if (var_20dh < 'e') goto code_r0x0046a959;\n                            if (var_20dh < 'h') goto code_r0x0046a454;\n                            if (var_20dh == 0x69) goto code_r0x0046a672;\n                            if (var_20dh != 0x6e) {\n                                if (var_20dh != 0x6f) goto code_r0x0046a959;\n                                var_21ch = 0x8;\n                                if (piVar12 < '\\0') {\n                                    piVar12 = piVar12 | 0x200;\n                                    var_214h = piVar12;\n                                }\n                                goto code_r0x0046a685;\n                            }\n                            piVar7 = *var_218h;\n                            var_218h = var_218h + 1;\n                            iVar9 = fcn.00453ff5();\n                            if (iVar9 == 0) goto code_r0x0046ab38;\n                            if ((piVar12 & 0x20) == 0) {\n                                *piVar7 = var_224h;\n                            }\n                            else {\n                                *piVar7 = var_224h;\n                            }\n                            var_248h = 1;\n                        }\n                        puVar11 = var_234h;\n                        if (var_250h != NULL) {\n                            fcn.00455f3f(var_250h);\n                            var_250h = NULL;\n                            puVar11 = var_234h;\n                        }\n                        break;\n                    default:\n                        goto code_r0x0046ab38;\n                    case 0xbad1abe1:\n                        break;\n                    }\n                    var_20dh._0_1_ = *puVar11;\n                    var_24ch = var_24ch & 0xffffff00 | var_20dh;\n                    puVar10 = puVar11;\n                } while (var_20dh != 0);\n                if ((var_23ch == 0) || (var_23ch == 7)) goto code_r0x0046ab4b;\n            }\n        }\n    }\ncode_r0x0046ab38:\n    puVar6 = fcn.0045c4f2();\n    *puVar6 = 0x16;\n    fcn.0045e4f8();\ncode_r0x0046ab4b:\n    if (var_26ch != '\\0') {\n        *(var_270h + 0x70) = *(var_270h + 0x70) & 0xfffffffd;\n    }\n    fcn.004529f8(unaff_EBX);\n    return;\n}\n",
        "token_count": 6253
    },
    "0046e84a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0046e84a(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0045e910(0x4ac7e0, 0x18);\n    iVar3 = -1;\n    *(unaff_EBP + -0x1c) = 0xffffffff;\n    *(unaff_EBP + -0x24) = 0;\n    iVar1 = fcn.0045c3cd(0xb);\n    if (iVar1 != 0) {\n        fcn.0045c345(0xb);\n        *(unaff_EBP + -4) = 0;\n        for (iVar1 = 0; *(unaff_EBP + -0x28) = iVar1,  iVar1 < 0x40; iVar1 = iVar1 + 1) {\n            puVar2 = *(iVar1 * 4 + 0x4b9168);\n            if (puVar2 == NULL) {\n                puVar2 = fcn.0045c879(0x20, 0x40);\n                *(unaff_EBP + -0x20) = puVar2;\n                if (puVar2 != NULL) {\n                    *(iVar1 * 4 + 0x4b9168) = puVar2;\n                    *0x4b98b8 = *0x4b98b8 + 0x20;\n                    while (puVar2 < *(iVar1 * 4 + 0x4b9168) + 0x800) {\n                        *(puVar2 + 1) = 0xa00;\n                        *puVar2 = 0xffffffff;\n                        puVar2[2] = 0;\n                        puVar2 = puVar2 + 0x10;\n                        *(unaff_EBP + -0x20) = puVar2;\n                    }\n                    iVar1 = iVar1 << 5;\n                    *(unaff_EBP + -0x1c) = iVar1;\n                    *(*((iVar1 >> 5) * 4 + 0x4b9168) + 4) = 1;\n                    iVar1 = fcn.0046e7be(iVar1);\n                    if (iVar1 == 0) {\n                        *(unaff_EBP + -0x1c) = 0xffffffff;\n                    }\n                }\n                break;\n            }\n            for (; *(unaff_EBP + -0x20) = puVar2,  puVar2 < *(iVar1 * 4 + 0x4b9168) + 0x800; puVar2 = puVar2 + 0x10) {\n                if ((*(puVar2 + 1) & 1) == 0) {\n                    if (puVar2[2] == 0) {\n                        fcn.0045c345(10);\n                        *(unaff_EBP + -4) = 1;\n                        if (puVar2[2] == 0) {\n                            (*_sym.imp.KERNEL32.dll_InitializeCriticalSectionAndSpinCount)(puVar2 + 3, 4000);\n                            puVar2[2] = puVar2[2] + 1;\n                        }\n                        *(unaff_EBP + -4) = 0;\n                        fcn.0046e91e();\n                    }\n                    if (*(unaff_EBP + -0x24) == 0) {\n                        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(puVar2 + 3);\n                        if ((*(puVar2 + 1) & 1) == 0) {\n                            if (*(unaff_EBP + -0x24) == 0) {\n                                *(puVar2 + 1) = 1;\n                                *puVar2 = 0xffffffff;\n                                iVar3 = (puVar2 - *(iVar1 * 4 + 0x4b9168) >> 6) + iVar1 * 0x20;\n                                *(unaff_EBP + -0x1c) = iVar3;\n                                break;\n                            }\n                        }\n                        else {\n                            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar2 + 3);\n                        }\n                    }\n                }\n            }\n            if (iVar3 != -1) break;\n        }\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.0046e9e6();\n    }\n    fcn.0045e955();\n    return;\n}\n",
        "token_count": 1034
    },
    "00470120": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00470120(uint *arg_8h, uint32_t *arg_ch, uint arg_10h, uint32_t arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    uint8_t *puVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint *puVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint uVar12;\n    int32_t *piVar13;\n    uint8_t uVar14;\n    int32_t iVar15;\n    bool bVar16;\n    uint64_t uVar17;\n    int64_t iVar18;\n    uint var_38h;\n    uint var_34h;\n    uint32_t var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    int32_t hObject;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint8_t var_3h;\n    uint var_2h;\n    \n    bVar16 = (arg_14h & 0x80) == 0;\n    var_20h = 0;\n    var_2h._0_1_ = 0;\n    var_38h = 0xc;\n    var_34h = 0;\n    if (bVar16) {\n        var_2h._1_1_ = 0;\n    }\n    else {\n        var_2h._1_1_ = 0x10;\n    }\n    var_30h = bVar16;\n    iVar7 = fcn.00472533(&var_20h);\n    if (iVar7 != 0) {\n        fcn.0045e508(0, 0, 0, 0, 0);\n        pcVar2 = swi(3);\n        uVar12 = (*pcVar2)();\n        return uVar12;\n    }\n    if (((arg_14h & 0x8000) == 0) && (((arg_14h & 0x74000) != 0 || (var_20h != 0x8000)))) {\n        var_2h._1_1_ = var_2h._1_1_ | 0x80;\n    }\n    uVar8 = arg_14h & 3;\n    if (uVar8 == 0) {\n        var_8h = 0x80000000;\n    }\n    else if (uVar8 == 1) {\n        if (((arg_14h & 8) == 0) || ((arg_14h & 0x70000) == 0)) {\n            var_8h = 0x40000000;\n        }\n        else {\n            var_8h = 0xc0000000;\n        }\n    }\n    else {\n        if (uVar8 != 2) {\n            puVar9 = fcn.0045c4be();\n            *puVar9 = 0;\n            *arg_ch = 0xffffffff;\n            puVar9 = fcn.0045c4f2();\n            *puVar9 = 0x16;\n            fcn.0045e4f8();\n            return 0x16;\n        }\n        var_8h = 0xc0000000;\n    }\n    uVar8 = 2;\n    var_28h = 2;\n    if (arg_18h == 0x10) {\n        var_ch = 0;\n    }\n    else if (arg_18h == 0x20) {\n        var_ch = 1;\n    }\n    else if (arg_18h == 0x30) {\n        var_ch = 2;\n    }\n    else if (arg_18h == 0x40) {\n        var_ch = 3;\n    }\n    else {\n        if (arg_18h != 0x80) goto code_r0x00470277;\n        var_ch = var_8h == 0x80000000;\n    }\n    uVar10 = arg_14h & 0x700;\n    if (uVar10 < 0x401) {\n        if ((uVar10 == 0x400) || (uVar10 == 0)) {\n            uVar8 = 3;\n        }\n        else if (uVar10 == 0x100) {\n            uVar8 = 4;\n        }\n        else {\n            if (uVar10 == 0x200) goto code_r0x00470298;\n            if (uVar10 != 0x300) goto code_r0x00470277;\n        }\n    }\n    else {\n        if (uVar10 != 0x500) {\n            if (uVar10 == 0x600) {\ncode_r0x00470298:\n                uVar8 = 5;\n                goto code_r0x0047029f;\n            }\n            if (uVar10 != 0x700) {\ncode_r0x00470277:\n                puVar9 = fcn.0045c4be();\n                *puVar9 = 0;\n                *arg_ch = 0xffffffff;\n                puVar9 = fcn.0045c4f2();\n                *puVar9 = 0x16;\n                fcn.0045e4f8();\n                return 0x16;\n            }\n        }\n        uVar8 = 1;\n    }\ncode_r0x0047029f:\n    uVar10 = 0x80;\n    var_18h = 0x80;\n    var_10h = 0;\n    if (((arg_14h & 0x100) != 0) && (-1 < (~*0x4b8af0 & arg_1ch))) {\n        uVar10 = 1;\n        var_18h = 1;\n    }\n    uVar11 = 0;\n    if ((arg_14h & 0x40) != 0) {\n        var_8h = var_8h | 0x10000;\n        var_ch = var_ch | 4;\n        uVar11 = 0x4000000;\n        var_10h = 0x4000000;\n    }\n    if ((arg_14h & 0x1000) != 0) {\n        var_18h = uVar10 | 0x100;\n    }\n    if ((arg_14h & 0x2000) != 0) {\n        uVar11 = uVar11 | 0x2000000;\n        var_10h = uVar11;\n    }\n    if ((arg_14h & 0x20) == 0) {\n        if ((arg_14h & 0x10) != 0) {\n            var_10h = uVar11 | 0x10000000;\n        }\n    }\n    else {\n        var_10h = uVar11 | 0x8000000;\n    }\n    uVar10 = fcn.0046e84a();\n    *arg_ch = uVar10;\n    if (uVar10 == 0xffffffff) {\n        puVar9 = fcn.0045c4be();\n        *puVar9 = 0;\n        *arg_ch = 0xffffffff;\n        puVar9 = fcn.0045c4f2();\n        *puVar9 = 0x18;\n        puVar9 = fcn.0045c4f2();\n        return *puVar9;\n    }\n    *arg_8h = 1;\n    hObject = fcn.0046ffc8(arg_10h, var_8h, var_ch, &var_38h, uVar8, var_18h, var_10h);\n    if (hObject == -1) {\n        if (((var_8h & 0xc0000000) == 0xc0000000) && ((arg_14h & 1) != 0)) {\n            var_8h = var_8h & 0x7fffffff;\n            hObject = fcn.0046ffc8(arg_10h, var_8h, var_ch, &var_38h, uVar8, var_18h, var_10h);\n            if (hObject != -1) goto code_r0x004703ee;\n        }\n        puVar1 = *((*arg_ch >> 5) * 4 + 0x4b9168) + 4 + (*arg_ch & 0x1f) * 0x40;\n        *puVar1 = *puVar1 & 0xfe;\n        uVar12 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.0045c4d1(uVar12);\n        uVar17 = CONCAT44(var_14h, var_2ch);\n        goto code_r0x004703e2;\n    }\ncode_r0x004703ee:\n    iVar7 = (*_sym.imp.KERNEL32.dll_GetFileType)(hObject);\n    if (iVar7 == 0) {\n        puVar1 = *((*arg_ch >> 5) * 4 + 0x4b9168) + 4 + (*arg_ch & 0x1f) * 0x40;\n        *puVar1 = *puVar1 & 0xfe;\n        iVar7 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.0045c4d1(iVar7);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        uVar17 = CONCAT44(var_14h, var_2ch);\n        if (iVar7 == 0) {\n            puVar9 = fcn.0045c4f2();\n            uVar17 = CONCAT44(var_14h, var_2ch);\n            *puVar9 = 0xd;\n        }\n        goto code_r0x004703e2;\n    }\n    if (iVar7 == 2) {\n        var_2h._1_1_ = var_2h._1_1_ | 0x40;\n    }\n    else if (iVar7 == 3) {\n        var_2h._1_1_ = var_2h._1_1_ | 8;\n    }\n    fcn.0046eadc(*arg_ch, hObject);\n    uVar14 = var_2h._1_1_ | 1;\n    *(*((*arg_ch >> 5) * 4 + 0x4b9168) + 4 + (*arg_ch & 0x1f) * 0x40) = uVar14;\n    puVar1 = *((*arg_ch >> 5) * 4 + 0x4b9168) + 0x24 + (*arg_ch & 0x1f) * 0x40;\n    *puVar1 = *puVar1 & 0x80;\n    var_3h = var_2h._1_1_ & 0x48;\n    var_2h._1_1_ = uVar14;\n    uVar17 = CONCAT44(var_14h, var_2ch);\n    if (var_3h == 0) {\n        uVar17 = CONCAT44(var_14h, var_2ch);\n        if (-1 < uVar14) goto code_r0x0047075f;\n        if ((arg_14h & 2) == 0) goto code_r0x0047053b;\n        uVar17 = fcn.00462e7e(*arg_ch, 0xffffffff, 0xffffffff, 2);\n        if (uVar17 == 0xffffffffffffffff) {\n            piVar13 = fcn.0045c4be();\n            var_14h = uVar17 >> 0x20;\n            var_2ch = uVar17;\n            if (*piVar13 == 0x83) goto code_r0x0047053b;\n        }\n        else {\n            var_24h = 0;\n            iVar7 = fcn.00465c2a(*arg_ch, &var_24h, 1);\n            var_14h = uVar17 >> 0x20;\n            var_2ch = uVar17;\n            if ((iVar7 == 0) && (var_24h == 0x1a)) {\n                iVar7 = fcn.0047237f(*arg_ch, var_2ch, var_14h);\n                var_14h = uVar17 >> 0x20;\n                var_2ch = uVar17;\n                if (iVar7 == -1) goto code_r0x004704e2;\n            }\n            iVar18 = fcn.00462e7e(*arg_ch, 0, 0, 0);\n            var_14h = uVar17 >> 0x20;\n            var_2ch = uVar17;\n            if (iVar18 != -1) goto code_r0x0047053b;\n        }\ncode_r0x004704e2:\n        fcn.004630cf(*arg_ch);\n        var_14h = uVar17 >> 0x20;\n        var_2ch = uVar17;\n    }\n    else {\ncode_r0x0047053b:\n        var_2ch = uVar17;\n        if (var_2h._1_1_ < '\\0') {\n            if ((arg_14h & 0x74000) == 0) {\n                if ((var_20h & 0x74000) == 0) {\n                    arg_14h = arg_14h | 0x4000;\n                }\n                else {\n                    arg_14h = arg_14h | var_20h & 0x74000;\n                }\n            }\n            uVar10 = arg_14h & 0x74000;\n            if (uVar10 == 0x4000) {\n                var_2h._0_1_ = 0;\n            }\n            else if ((uVar10 == 0x10000) || (uVar10 == 0x14000)) {\n                if ((arg_14h & 0x301) == 0x301) goto code_r0x004705ae;\n            }\n            else if ((uVar10 == 0x20000) || (uVar10 == 0x24000)) {\ncode_r0x004705ae:\n                var_2h._0_1_ = 2;\n            }\n            else if ((uVar10 == 0x40000) || (uVar10 == 0x44000)) {\n                var_2h._0_1_ = 1;\n            }\n            if ((arg_14h & 0x70000) != 0) {\n                var_14h = 0;\n                uVar6 = uVar17 & 0xffffffff;\n                uVar5 = uVar17 & 0xffffffff;\n                uVar4 = uVar17 & 0xffffffff;\n                uVar3 = uVar17 & 0xffffffff;\n                uVar17 = uVar17 & 0xffffffff;\n                if ((var_2h._1_1_ & 0x40) == 0) {\n                    uVar10 = var_8h & 0xc0000000;\n                    if (uVar10 == 0x40000000) {\n                        uVar17 = uVar5;\n                        if (uVar8 != 0) {\n                            if (2 < uVar8) {\n                                if (uVar8 < 5) {\n                                    iVar18 = fcn.00462e7e(*arg_ch, 0, 0, 2);\n                                    if (iVar18 != 0) goto code_r0x004706fa;\n                                }\n                                else {\ncode_r0x0047060b:\n                                    uVar17 = uVar6;\n                                    if (uVar8 != 5) goto code_r0x0047075f;\n                                }\n                            }\ncode_r0x00470716:\n                            iVar7 = 0;\n                            if (var_2h == 1) {\n                                iVar15 = 3;\n                                var_14h = 0xbfbbef;\n                                var_28h = 3;\n                            }\n                            else {\n                                uVar17 = CONCAT44(var_14h, var_2ch);\n                                if (var_2h != 2) goto code_r0x0047075f;\n                                var_14h = 0xfeff;\n                                iVar15 = 2;\n                            }\n                            do {\n                                iVar15 = fcn.00462057(*arg_ch, &var_14h + iVar7, iVar15 - iVar7);\n                                uVar17 = CONCAT44(var_14h, var_2ch);\n                                if (iVar15 == -1) goto code_r0x004704e2;\n                                iVar7 = iVar7 + iVar15;\n                                iVar15 = var_28h;\n                            } while (iVar7 < var_28h);\n                        }\n                    }\n                    else if (uVar10 == 0x80000000) {\ncode_r0x00470646:\n                        iVar7 = fcn.00465c2a(*arg_ch, &var_14h, 3);\n                        uVar17 = CONCAT44(var_14h, var_2ch);\n                        if (iVar7 == -1) goto code_r0x004704e2;\n                        if (iVar7 == 2) {\ncode_r0x00470683:\n                            if ((var_14h & 0xffff) == 0xfffe) {\n                                fcn.004630cf(*arg_ch);\n                                puVar9 = fcn.0045c4f2();\n                                *puVar9 = 0x16;\n                                return 0x16;\n                            }\n                            if ((var_14h & 0xffff) == 0xfeff) {\n                                iVar18 = fcn.00462e7e(*arg_ch, 2, 0, 0);\n                                uVar17 = CONCAT44(var_14h, var_2ch);\n                                if (iVar18 == -1) goto code_r0x004704e2;\n                                var_2h._0_1_ = 2;\n                                goto code_r0x0047075f;\n                            }\n                        }\n                        else if (iVar7 == 3) {\n                            if (var_14h == 0xbfbbef) {\n                                var_2h._0_1_ = 1;\n                                goto code_r0x0047075f;\n                            }\n                            goto code_r0x00470683;\n                        }\ncode_r0x004706fa:\n                        iVar18 = fcn.00462e7e(*arg_ch, 0, 0, 0);\n                        uVar17 = CONCAT44(var_14h, var_2ch);\n                        if (iVar18 == -1) goto code_r0x004704e2;\n                    }\n                    else {\n                        uVar17 = uVar3;\n                        if ((uVar10 == 0xc0000000) && (uVar17 = uVar4,  uVar8 != 0)) {\n                            if (2 < uVar8) {\n                                if (4 < uVar8) goto code_r0x0047060b;\n                                iVar18 = fcn.00462e7e(*arg_ch, 0, 0, 2);\n                                if (iVar18 != 0) {\n                                    iVar18 = fcn.00462e7e(*arg_ch, 0, 0, 0);\n                                    uVar17 = CONCAT44(var_14h, var_2ch);\n                                    if (iVar18 == -1) goto code_r0x004704e2;\n                                    goto code_r0x00470646;\n                                }\n                            }\n                            goto code_r0x00470716;\n                        }\n                    }\n                }\n            }\n        }\ncode_r0x0047075f:\n        uVar8 = var_8h;\n        iVar7 = *((*arg_ch >> 5) * 4 + 0x4b9168);\n        iVar15 = (*arg_ch & 0x1f) * 0x40;\n        puVar1 = iVar7 + 0x24 + iVar15;\n        *puVar1 = *puVar1 ^ (*(iVar7 + 0x24 + iVar15) ^ var_2h) & 0x7f;\n        iVar7 = *((*arg_ch >> 5) * 4 + 0x4b9168);\n        iVar15 = (*arg_ch & 0x1f) * 0x40;\n        *(iVar7 + 0x24 + iVar15) = (arg_14h >> 0x10) << 7 | *(iVar7 + 0x24 + iVar15) & 0x7f;\n        if ((var_3h == 0) && ((arg_14h & 8) != 0)) {\n            puVar1 = *((*arg_ch >> 5) * 4 + 0x4b9168) + 4 + (*arg_ch & 0x1f) * 0x40;\n            *puVar1 = *puVar1 | 0x20;\n        }\n        if ((var_8h & 0xc0000000) != 0xc0000000) {\n            return 0;\n        }\n        if ((arg_14h & 1) == 0) {\n            return 0;\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        var_14h = uVar17 >> 0x20;\n        var_2ch = uVar17;\n        iVar7 = fcn.0046ffc8(arg_10h, uVar8 & 0x7fffffff, var_ch, &var_38h, 3, var_18h, var_10h);\n        var_14h = uVar17 >> 0x20;\n        var_2ch = uVar17;\n        if (iVar7 != -1) {\n            *((*arg_ch & 0x1f) * 0x40 + *((*arg_ch >> 5) * 4 + 0x4b9168)) = iVar7;\n            return 0;\n        }\n        uVar12 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        var_14h = uVar17 >> 0x20;\n        var_2ch = uVar17;\n        fcn.0045c4d1(uVar12);\n        var_14h = uVar17 >> 0x20;\n        var_2ch = uVar17;\n        puVar1 = *((*arg_ch >> 5) * 4 + 0x4b9168) + 4 + (*arg_ch & 0x1f) * 0x40;\n        *puVar1 = *puVar1 & 0xfe;\n        fcn.0046e9ef(*arg_ch);\n        var_14h = uVar17 >> 0x20;\n        var_2ch = uVar17;\n    }\ncode_r0x004703e2:\n    puVar9 = fcn.0045c4f2();\n    var_14h = uVar17 >> 0x20;\n    var_2ch = uVar17;\n    return *puVar9;\n}\n",
        "token_count": 5187
    },
    "0047166a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0047196e)\n// WARNING: Removing unreachable block (ram,0x00471977)\n// WARNING: Removing unreachable block (ram,0x00471d86)\n// WARNING: Removing unreachable block (ram,0x004719cd)\n// WARNING: Removing unreachable block (ram,0x004719eb)\n// WARNING: Removing unreachable block (ram,0x004719d2)\n// WARNING: Removing unreachable block (ram,0x004719d9)\n// WARNING: Removing unreachable block (ram,0x004719de)\n// WARNING: Removing unreachable block (ram,0x004719ee)\n// WARNING: Removing unreachable block (ram,0x00471d7c)\n// WARNING: Removing unreachable block (ram,0x004719f6)\n// WARNING: Removing unreachable block (ram,0x004719fb)\n// WARNING: Removing unreachable block (ram,0x00471a02)\n// WARNING: Removing unreachable block (ram,0x00471a05)\n// WARNING: Removing unreachable block (ram,0x00471a1d)\n// WARNING: Removing unreachable block (ram,0x00471a1f)\n// WARNING: Removing unreachable block (ram,0x00471a29)\n// WARNING: Removing unreachable block (ram,0x00471a2c)\n// WARNING: Removing unreachable block (ram,0x00471a33)\n// WARNING: Removing unreachable block (ram,0x00471a36)\n// WARNING: Removing unreachable block (ram,0x00471d6e)\n// WARNING: Removing unreachable block (ram,0x00471d8c)\n// WARNING: Removing unreachable block (ram,0x00471a42)\n// WARNING: Removing unreachable block (ram,0x00471d5f)\n// WARNING: Removing unreachable block (ram,0x00471a4e)\n// WARNING: Removing unreachable block (ram,0x00471a5e)\n// WARNING: Removing unreachable block (ram,0x00471a60)\n// WARNING: Removing unreachable block (ram,0x00471a6a)\n// WARNING: Removing unreachable block (ram,0x00471a73)\n// WARNING: Removing unreachable block (ram,0x00471d45)\n// WARNING: Removing unreachable block (ram,0x00471a7e)\n// WARNING: Removing unreachable block (ram,0x00471a95)\n// WARNING: Removing unreachable block (ram,0x00471aa7)\n// WARNING: Removing unreachable block (ram,0x00471ab8)\n// WARNING: Removing unreachable block (ram,0x00471af7)\n// WARNING: Removing unreachable block (ram,0x00471b00)\n// WARNING: Removing unreachable block (ram,0x00471b0e)\n// WARNING: Removing unreachable block (ram,0x00471b20)\n// WARNING: Removing unreachable block (ram,0x00471b25)\n// WARNING: Removing unreachable block (ram,0x00471b32)\n// WARNING: Removing unreachable block (ram,0x00471b38)\n// WARNING: Removing unreachable block (ram,0x00471b49)\n// WARNING: Removing unreachable block (ram,0x00471b4e)\n// WARNING: Removing unreachable block (ram,0x00471b5b)\n// WARNING: Removing unreachable block (ram,0x00471b60)\n// WARNING: Removing unreachable block (ram,0x00471b18)\n// WARNING: Removing unreachable block (ram,0x00471b64)\n// WARNING: Removing unreachable block (ram,0x00471b72)\n// WARNING: Removing unreachable block (ram,0x00471b79)\n// WARNING: Removing unreachable block (ram,0x00471b87)\n// WARNING: Removing unreachable block (ram,0x00471ba4)\n// WARNING: Removing unreachable block (ram,0x00471ba9)\n// WARNING: Removing unreachable block (ram,0x00471bae)\n// WARNING: Removing unreachable block (ram,0x00471bb1)\n// WARNING: Removing unreachable block (ram,0x00471bb8)\n// WARNING: Removing unreachable block (ram,0x00471bbb)\n// WARNING: Removing unreachable block (ram,0x00471bcc)\n// WARNING: Removing unreachable block (ram,0x00471bd5)\n// WARNING: Removing unreachable block (ram,0x00471be4)\n// WARNING: Removing unreachable block (ram,0x00471bfb)\n// WARNING: Removing unreachable block (ram,0x00471bff)\n// WARNING: Removing unreachable block (ram,0x00471c31)\n// WARNING: Removing unreachable block (ram,0x00471c36)\n// WARNING: Removing unreachable block (ram,0x00471c42)\n// WARNING: Removing unreachable block (ram,0x00471c51)\n// WARNING: Removing unreachable block (ram,0x00471c57)\n// WARNING: Removing unreachable block (ram,0x00471c58)\n// WARNING: Removing unreachable block (ram,0x00471c83)\n// WARNING: Removing unreachable block (ram,0x00471c8d)\n// WARNING: Removing unreachable block (ram,0x00471c9f)\n// WARNING: Removing unreachable block (ram,0x00471ca3)\n// WARNING: Removing unreachable block (ram,0x00471cad)\n// WARNING: Removing unreachable block (ram,0x00471cbb)\n// WARNING: Removing unreachable block (ram,0x00471cf7)\n// WARNING: Removing unreachable block (ram,0x00471cc3)\n// WARNING: Removing unreachable block (ram,0x00471cee)\n// WARNING: Removing unreachable block (ram,0x00471cce)\n// WARNING: Removing unreachable block (ram,0x00471ce6)\n// WARNING: Removing unreachable block (ram,0x00471cdf)\n// WARNING: Removing unreachable block (ram,0x00471cf2)\n// WARNING: Removing unreachable block (ram,0x00471cfb)\n// WARNING: Removing unreachable block (ram,0x00471cfe)\n// WARNING: Removing unreachable block (ram,0x00471d22)\n// WARNING: Removing unreachable block (ram,0x00471d39)\n// WARNING: Removing unreachable block (ram,0x00471d08)\n// WARNING: Removing unreachable block (ram,0x00471b3e)\n// WARNING: Removing unreachable block (ram,0x00471d3f)\n// WARNING: Removing unreachable block (ram,0x00471d4d)\n// WARNING: Removing unreachable block (ram,0x00471d91)\n// WARNING: Variable defined which should be unmapped: var_7ch\n\nvoid __cdecl\nfcn.0047166a(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_9h;\n    uint var_4h;\n    \n    if (arg_24h == 0) {\n        puVar2 = fcn.0045c4f2();\n        *puVar2 = 0x16;\n        fcn.0045e4f8();\n        fcn.004529f8(var_7ch);\n        return;\n    }\n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x004716f3. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x471db6\n    (**0x471db6)();\n    return;\n}\n",
        "token_count": 1871
    },
    "00477910": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t fcn.00477910(uint32_t param_1, code **param_2, uint32_t param_3, uint32_t param_4, int32_t param_5, \n                    uint32_t param_6, uint32_t *param_7, uint param_8, uint param_9, uint param_10, uint param_11, \n                    uint param_12, uint param_13, uint param_14, uint param_15, uint param_16, uint param_17, \n                    uint param_18, uint param_19, uint param_20, uint param_21, uint param_22, uint param_23, \n                    uint param_24, uint param_25, uint param_26, uint param_27, uint param_28, uint param_29, \n                    uint param_30, uint param_31, uint param_32, uint param_33, uint param_34, uint param_35, \n                    uint param_36, uint param_37, uint param_38, uint param_39, uint param_40, uint param_41, \n                    uint param_42, uint param_43, uint param_44, uint param_45, uint param_46, uint param_47, \n                    uint param_48, uint param_49, uint param_50, uint param_51, uint param_52, uint param_53, \n                    uint param_54, uint param_55, uint param_56, uint param_57, uint param_58, uint param_59, \n                    uint param_60, uint param_61, uint param_62, uint param_63, uint param_64, uint param_65, \n                    uint param_66, uint param_67, uint param_68, uint param_69, uint param_70, uint param_71, \n                    uint param_72, uint param_73, uint param_74, uint param_75, uint param_76, uint param_77, \n                    uint param_78, uint param_79, uint param_80, uint param_81, uint param_82, uint param_83, \n                    uint param_84, uint param_85, uint param_86, uint param_87, uint param_88, uint param_89, \n                    uint param_90, uint param_91, uint param_92, uint param_93, uint param_94, uint param_95, \n                    uint param_96, uint param_97, uint param_98, uint param_99, uint param_100, uint param_101, \n                    uint param_102, uint param_103, uint param_104, uint param_105, uint param_106)\n\n{\n    uint32_t *puVar1;\n    int16_t *piVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint32_t noname_0;\n    char cVar5;\n    uchar uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    char *pcVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t *piVar13;\n    int32_t iVar14;\n    uint uVar15;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    bool bVar16;\n    uint unaff_retaddr;\n    char cVar17;\n    unkuint3 Var18;\n    char cVar19;\n    uint32_t *arg_20h;\n    uint32_t *noname_11;\n    \n    noname_0 = param_1;\n    iVar8 = *(param_1 + 0x164);\n    iVar14 = iVar8;\n    if (param_2 == *(param_1 + 0x90)) {\n        arg_20h = param_1 + 0x124;\n        noname_11 = param_1 + 0x120;\n    }\n    else {\n        noname_11 = *(param_1 + 300);\n        arg_20h = noname_11 + 1;\n    }\n    do {\n        uVar4 = param_1;\n        *noname_11 = param_3;\n        param_1 = CONCAT31(Var18, 1);\n        *arg_20h = param_6;\n        if (param_5 < 1) {\n            if ((cVar19 != '\\0') && (param_5 != 0)) {\n                *param_7 = param_3;\n                return 0;\n            }\n    // switch table (5 cases) at 0x479058\n            switch(param_5) {\n            case 0:\n                *noname_11 = param_6;\n                return 4;\n            case -4:\n                if ((param_2 != *(noname_0 + 0x90)) && (*(*(noname_0 + 300) + 0x14) == '\\0')) {\n                    *param_7 = param_3;\n                    return 0;\n                }\n                if ((*(noname_0 + 0x1e8) == '\\0') && (param_2 == *(noname_0 + 0x90))) {\n                    return 3;\n                }\n                iVar8 = (**(noname_0 + 0x100))(noname_0 + 0x100, 0xfffffffc, param_4, param_4, param_2);\n                if (iVar8 == -1) {\n                    return 0x1d;\n                }\n                *param_7 = param_3;\n                return 0;\n            default:\n                param_5 = -param_5;\n                param_6 = param_4;\n                break;\n            case -2:\n                return 6;\n            case -1:\n                return 5;\n            }\n        }\n        iVar7 = (**(noname_0 + 0x100))(noname_0 + 0x100, param_5, param_3, param_6, param_2);\n        iVar12 = iVar8;\n    // switch table (62 cases) at 0x47906c\n        switch(iVar7) {\n        case 0:\n            if (param_5 != 0xe) goto code_r0x00478597;\n            break;\n        case 1:\n            goto code_r0x004779d0;\n        case 2:\n            if (*(noname_0 + 0x1e9) != '\\0') {\n                uVar6 = *(iVar8 + 0x81);\n                *(iVar8 + 0x81) = 1;\n                if ((*(noname_0 + 0x1ec) != 0) && (*(noname_0 + 0x70) != 0)) {\n                    iVar14 = fcn.00473880(0x49e31c, 0x24);\n                    if (iVar14 == 0) {\n                        return 1;\n                    }\n                    *(iVar14 + 0x14) = *(noname_0 + 0x168);\n                    *(iVar8 + 0x83) = 0;\n                    iVar14 = (**(noname_0 + 0x70))\n                                       (*(noname_0 + 0x74), 0, *(iVar14 + 0x14), *(iVar14 + 0x10), *(iVar14 + 0x18));\n                    if (iVar14 == 0) {\n                        return 0x15;\n                    }\n                    if (*(iVar8 + 0x83) == '\\0') {\n                        *(iVar8 + 0x81) = uVar6;\n                    }\n                    else if (((*(iVar8 + 0x82) == '\\0') && (*(noname_0 + 0x6c) != NULL)) &&\n                            (iVar8 = (**(noname_0 + 0x6c))(*(noname_0 + 4)),  iVar8 == 0)) {\n                        return 0x16;\n                    }\n                }\n            }\n            *(noname_0 + 0x118) = fcn.004778c0;\n            iVar8 = fcn.004778c0(noname_0, param_3, param_4, param_7);\n            return iVar8;\n        case 3:\n            iVar7 = *(noname_0 + 0x54);\n            goto joined_r0x00478e12;\n        case 4:\n            if (*(noname_0 + 0x54) != 0) {\n                iVar7 = fcn.00474d10();\n                *(noname_0 + 0x140) = iVar7;\n                if (iVar7 == 0) {\n                    return 1;\n                }\n                *(noname_0 + 0x1b0) = *(noname_0 + 0x1ac);\n                *(noname_0 + 0x148) = 0;\n                param_1 = uVar4 & 0xffffff00;\n            }\n            *(noname_0 + 0x144) = 0;\n            goto code_r0x00477a47;\n        case 5:\n            *(noname_0 + 0x1e9) = 0;\n            *(iVar8 + 0x81) = 1;\n            if (*(noname_0 + 0x54) == 0) {\n                *(noname_0 + 0x144) = 0x49e31c;\n            }\n            else {\n                iVar7 = fcn.00474d10();\n                *(noname_0 + 0x144) = iVar7;\n                if (iVar7 == 0) {\n                    return 1;\n                }\n                *(noname_0 + 0x1b0) = *(noname_0 + 0x1ac);\n                param_1 = Var18 << 8;\n            }\n            if (((*(iVar8 + 0x82) == '\\0') && (*(noname_0 + 0x1ec) == 0)) &&\n               ((*(noname_0 + 0x6c) != NULL && (iVar7 = (**(noname_0 + 0x6c))(*(noname_0 + 4)),  iVar7 == 0)))) {\n                return 0x16;\n            }\n            if (*(noname_0 + 0x13c) == 0) {\n                iVar7 = fcn.00473880(0x49e31c, 0x24);\n                *(noname_0 + 0x13c) = iVar7;\n                if (iVar7 == 0) {\n                    return 1;\n                }\n                *(iVar7 + 0x18) = 0;\n            }\n        case 0xd:\n            if ((*(iVar8 + 0x80) != '\\0') && (*(noname_0 + 0x13c) != 0)) {\n                uVar15 = fcn.00474d10();\n                *(*(noname_0 + 0x13c) + 0x10) = uVar15;\n                if (*(*(noname_0 + 0x13c) + 0x10) == 0) {\n                    return 1;\n                }\n                *(*(noname_0 + 0x13c) + 0x14) = *(noname_0 + 0x168);\ncode_r0x00477bb8:\n                *(iVar8 + 0x60) = *(iVar8 + 0x5c);\n                if (*(noname_0 + 0x88) != 0) break;\n            }\n            goto code_r0x00477a47;\n        case 6:\n            *(noname_0 + 0x1e9) = 0;\n            iVar7 = fcn.00473880(0x49e31c, 0x24);\n            *(noname_0 + 0x13c) = iVar7;\n            if (iVar7 == 0) {\n                return 1;\n            }\n            *(iVar8 + 0x81) = 1;\n            if (*(noname_0 + 0x54) == 0) goto code_r0x00477b47;\n            iVar7 = (*param_2[0xe])(param_2, param_3, param_6, noname_11);\n            if (iVar7 == 0) {\n                return 0x20;\n            }\n            iVar7 = fcn.00474d10();\n            *(noname_0 + 0x148) = iVar7;\n            if (iVar7 == 0) {\n                return 1;\n            }\n            fcn.004737c0();\n            *(noname_0 + 0x1b0) = *(noname_0 + 0x1ac);\n            param_1 = Var18 << 8;\n            goto code_r0x00477b6b;\n        case 7:\n            if (*(noname_0 + 0x54) == NULL) goto code_r0x00478597;\n            (**(noname_0 + 0x54))(*(noname_0 + 4), *(noname_0 + 0x140), *(noname_0 + 0x144), *(noname_0 + 0x148), 1);\n            *(noname_0 + 0x140) = 0;\n            fcn.00473be0();\n            break;\n        case 8:\n            if (*(noname_0 + 0x140) != 0) {\n                (**(noname_0 + 0x54))(*(noname_0 + 4), *(noname_0 + 0x140), *(noname_0 + 0x144), *(noname_0 + 0x148), 0)\n                ;\n                fcn.00473be0();\n                param_1 = Var18 << 8;\n            }\n            if ((*(noname_0 + 0x144) != 0) || (*(noname_0 + 0x1e9) != '\\0')) {\n                uVar6 = *(iVar8 + 0x81);\n                *(iVar8 + 0x81) = 1;\n                if ((*(noname_0 + 0x1ec) != 0) && (*(noname_0 + 0x70) != 0)) {\n                    iVar7 = fcn.00473880(0x49e31c, 0x24);\n                    if (iVar7 == 0) {\n                        return 1;\n                    }\n                    if (*(noname_0 + 0x1e9) != '\\0') {\n                        *(iVar7 + 0x14) = *(noname_0 + 0x168);\n                    }\n                    *(iVar8 + 0x83) = 0;\n                    iVar7 = (**(noname_0 + 0x70))\n                                      (*(noname_0 + 0x74), 0, *(iVar7 + 0x14), *(iVar7 + 0x10), *(iVar7 + 0x18));\n                    if (iVar7 == 0) {\n                        return 0x15;\n                    }\n                    if (*(iVar8 + 0x83) == '\\0') {\n                        if (*(noname_0 + 0x144) == 0) {\n                            *(iVar8 + 0x81) = uVar6;\n                        }\n                    }\n                    else if (((*(iVar8 + 0x82) == '\\0') && (*(noname_0 + 0x6c) != NULL)) &&\n                            (iVar7 = (**(noname_0 + 0x6c))(*(noname_0 + 4)),  iVar7 == 0)) {\n                        return 0x16;\n                    }\n                }\n                *(noname_0 + 0x1e9) = 0;\n            }\n            if (*(noname_0 + 0x58) == NULL) goto code_r0x00477a47;\n            (**(noname_0 + 0x58))(*(noname_0 + 4));\n            break;\n        case 9:\n            iVar7 = (*param_2[0xc])(param_2, param_3, param_6);\n            if (iVar7 == 0) {\n                if (*(iVar8 + 0x80) == '\\0') goto code_r0x004784e4;\n                iVar7 = fcn.00474d10();\n                if (iVar7 == 0) {\n                    return 1;\n                }\n                piVar13 = fcn.00473880(iVar7, 0x24);\n                *(noname_0 + 0x13c) = piVar13;\n                if (piVar13 == NULL) {\n                    return 1;\n                }\n                if (*piVar13 == iVar7) {\n                    *(iVar8 + 0x60) = *(iVar8 + 0x5c);\n                    *(*(noname_0 + 0x13c) + 0x18) = 0;\n                    *(*(noname_0 + 0x13c) + 0x21) = 0;\n                    if ((*(noname_0 + 0x1dc) != 0) || (*(noname_0 + 300) != 0)) goto code_r0x00478580;\n                    uVar6 = 1;\n                    goto code_r0x00478582;\n                }\n                *(iVar8 + 0x5c) = *(iVar8 + 0x60);\n                *(noname_0 + 0x13c) = 0;\n            }\n            else {\n                *(noname_0 + 0x13c) = 0;\n            }\n        default:\ncode_r0x00478597:\n            iVar8 = iVar12;\n            if (*(noname_0 + 0x50) != 0) {\n                iVar8 = iVar14;\n                fcn.00473640(param_3);\n                iVar14 = iVar8;\n            }\n            break;\n        case 10:\n            if (*(iVar8 + 0x80) == '\\0') {\ncode_r0x004784e4:\n                *(iVar8 + 0x5c) = *(iVar8 + 0x60);\n                *(noname_0 + 0x13c) = 0;\n            }\n            else {\n                iVar7 = fcn.00474d10();\n                if (iVar7 == 0) {\n                    return 1;\n                }\n                piVar13 = fcn.00473880(iVar7, 0x24);\n                *(noname_0 + 0x13c) = piVar13;\n                if (piVar13 == NULL) {\n                    return 1;\n                }\n                if (*piVar13 == iVar7) {\n                    *(iVar8 + 0x60) = *(iVar8 + 0x5c);\n                    *(*(noname_0 + 0x13c) + 0x18) = 0;\n                    uVar6 = 1;\n                    *(*(noname_0 + 0x13c) + 0x21) = 1;\n                    if ((*(noname_0 + 0x1dc) != 0) || (*(noname_0 + 300) != 0)) {\ncode_r0x00478580:\n                        uVar6 = 0;\n                    }\ncode_r0x00478582:\n                    *(*(noname_0 + 0x13c) + 0x22) = uVar6;\n                    iVar7 = *(noname_0 + 0x88);\n                    iVar12 = iVar14;\n                    goto joined_r0x004788b6;\n                }\n                *(iVar8 + 0x5c) = *(iVar8 + 0x60);\n                *(noname_0 + 0x13c) = 0;\n            }\n            goto code_r0x00478597;\n        case 0xb:\n            if (*(iVar8 + 0x80) != '\\0') {\n                iVar7 = *(noname_0 + 0x88);\n                goto joined_r0x00478e12;\n            }\n            goto code_r0x00478597;\n        case 0xc:\n            if (*(iVar8 + 0x80) != '\\0') {\n                iVar7 = fcn.00475760(noname_0, param_2, param_2[0x11] + param_3, param_6 - param_2[0x11], unaff_EDI, \n                                     unaff_ESI, unaff_EBP, unaff_EBX, arg_20h, iVar14, noname_11, unaff_retaddr, param_1\n                                     , param_2, param_3, param_4, iVar7, param_6, param_7, param_8, param_9, param_10, \n                                     param_11, param_12, param_13, param_14, param_15, param_16, param_17, param_18, \n                                     param_19, param_20, param_21, param_22, param_23, param_24, param_25, param_26, \n                                     param_27, param_28, param_29, param_30, param_31, param_32, param_33, param_34, \n                                     param_35, param_36, param_37, param_38, param_39, param_40, param_41, param_42, \n                                     param_43, param_44, param_45, param_46, param_47, param_48, param_49, param_50, \n                                     param_51, param_52, param_53, param_54, param_55, param_56, param_57, param_58, \n                                     param_59, param_60, param_61, param_62, param_63, param_64, param_65, param_66, \n                                     param_67, param_68, param_69, param_70, param_71, param_72, param_73, param_74, \n                                     param_75, param_76);\n                if (*(noname_0 + 0x13c) == 0) {\n                    *(iVar8 + 0x74) = *(iVar8 + 0x78);\n                }\n                else {\n                    *(*(noname_0 + 0x13c) + 4) = *(iVar8 + 0x78);\n                    *(*(noname_0 + 0x13c) + 8) = *(iVar8 + 0x74) - *(iVar8 + 0x78) >> 1;\n                    *(iVar8 + 0x78) = *(iVar8 + 0x74);\n                    if (*(noname_0 + 0x88) != 0) {\n                        *arg_20h = param_3;\n                        puVar3 = *(noname_0 + 0x13c);\n                        (**(noname_0 + 0x88))\n                                  (*(noname_0 + 4), *puVar3, *(puVar3 + 0x21), puVar3[1], puVar3[2], *(noname_0 + 0x168)\n                                   , 0, 0, 0);\n                        param_1 = Var18 << 8;\n                    }\n                }\n                if (iVar7 != 0) {\n                    return iVar7;\n                }\n                goto code_r0x00477a47;\n            }\n            goto code_r0x00478597;\n        case 0xe:\ncode_r0x00477b47:\n            iVar7 = (*param_2[0xe])(param_2, param_3, param_6, noname_11);\n            if (iVar7 == 0) {\n                return 0x20;\n            }\ncode_r0x00477b6b:\n            if ((*(iVar8 + 0x80) == '\\0') || (*(noname_0 + 0x13c) == 0)) goto code_r0x00477a47;\n            iVar7 = fcn.00474d10();\n            if (iVar7 == 0) {\n                return 1;\n            }\n            fcn.004737c0();\n            *(*(noname_0 + 0x13c) + 0x18) = iVar7;\n            goto code_r0x00477bb8;\n        case 0xf:\n            if (((*(iVar8 + 0x80) == '\\0') || (*(noname_0 + 0x13c) == 0)) || (*(noname_0 + 0x88) == 0))\n            goto code_r0x00478597;\n            *arg_20h = param_3;\n            puVar3 = *(noname_0 + 0x13c);\n            (**(noname_0 + 0x88))(*(noname_0 + 4), *puVar3, *(puVar3 + 0x21), 0, 0, puVar3[5], puVar3[4], puVar3[6], 0);\n            break;\n        case 0x10:\n            if ((*(iVar8 + 0x80) == '\\0') || (*(noname_0 + 0x13c) == 0)) goto code_r0x00478597;\n            uVar15 = fcn.00474d10();\n            *(*(noname_0 + 0x13c) + 0x1c) = uVar15;\n            if (*(*(noname_0 + 0x13c) + 0x1c) == 0) {\n                return 1;\n            }\n            *(iVar8 + 0x60) = *(iVar8 + 0x5c);\n            if (*(noname_0 + 0x5c) == 0) {\n                iVar12 = iVar14;\n                if (*(noname_0 + 0x88) == 0) goto code_r0x00478597;\n                *arg_20h = param_3;\n                puVar3 = *(noname_0 + 0x13c);\n                (**(noname_0 + 0x88))(*(noname_0 + 4), *puVar3, 0, 0, 0, puVar3[5], puVar3[4], puVar3[6], puVar3[7]);\n            }\n            else {\n                *arg_20h = param_3;\n                puVar3 = *(noname_0 + 0x13c);\n                (**(noname_0 + 0x5c))(*(noname_0 + 4), *puVar3, puVar3[5], puVar3[4], puVar3[6], puVar3[7]);\n            }\n            break;\n        case 0x11:\n            iVar7 = *(noname_0 + 0x60);\njoined_r0x00478e12:\n            if (iVar7 == 0) goto code_r0x00478597;\n            break;\n        case 0x12:\n            *(noname_0 + 0x154) = 0;\n            *(noname_0 + 0x150) = 0;\n            if (*(noname_0 + 0x60) == 0) goto code_r0x00478597;\n            iVar12 = fcn.00474d10();\n            *(noname_0 + 0x150) = iVar12;\n            if (iVar12 == 0) {\n                return 1;\n            }\n            *(noname_0 + 0x1b0) = *(noname_0 + 0x1ac);\n            break;\n        case 0x13:\n            if ((*(noname_0 + 0x150) != 0) && (*(noname_0 + 0x60) != 0)) {\n                iVar7 = fcn.00474d10();\n                if (iVar7 == 0) {\n                    return 1;\n                }\n                *arg_20h = param_3;\n                (**(noname_0 + 0x60))\n                          (*(noname_0 + 4), *(noname_0 + 0x150), *(noname_0 + 0x168), iVar7, *(noname_0 + 0x154));\ncode_r0x00478716:\n                param_1 = Var18 << 8;\n            }\n            goto code_r0x0047871e;\n        case 0x14:\n            if ((*(noname_0 + 0x154) != 0) && (*(noname_0 + 0x60) != 0)) {\n                *arg_20h = param_3;\n                (**(noname_0 + 0x60))(*(noname_0 + 4), *(noname_0 + 0x150), *(noname_0 + 0x168), 0, *(noname_0 + 0x154))\n                ;\n                goto code_r0x00478716;\n            }\ncode_r0x0047871e:\n            fcn.00473be0();\n            goto code_r0x00477a47;\n        case 0x15:\n            iVar7 = (*param_2[0xe])(param_2, param_3, param_6, noname_11);\n            if (iVar7 == 0) {\n                return 0x20;\n            }\n            if (*(noname_0 + 0x150) == 0) goto code_r0x00478597;\n            iVar12 = fcn.00474d10();\n            if (iVar12 == 0) {\n                return 1;\n            }\n            fcn.004737c0();\n            *(noname_0 + 0x154) = iVar12;\n            *(noname_0 + 0x1b0) = *(noname_0 + 0x1ac);\n            break;\n        case 0x16:\n            iVar7 = fcn.00475d00(noname_0, param_2, param_3, param_6);\n            *(noname_0 + 0x15c) = iVar7;\n            if (iVar7 == 0) {\n                return 1;\n            }\n            *(noname_0 + 0x160) = 0;\n            *(noname_0 + 0x14c) = 0;\n            *(noname_0 + 0x161) = 0;\n            goto code_r0x00477dca;\n        case 0x17:\n            *(noname_0 + 0x160) = 1;\n            *(noname_0 + 0x14c) = 0x49e320;\n            goto code_r0x00477dca;\n        case 0x18:\n            *(noname_0 + 0x161) = 1;\n            *(noname_0 + 0x14c) = 0x49e32c;\n            goto code_r0x00477dca;\n        case 0x19:\n            *(noname_0 + 0x14c) = 0x49e334;\n            goto code_r0x00477dca;\n        case 0x1a:\n            *(noname_0 + 0x14c) = 0x49e340;\n            goto code_r0x00477dca;\n        case 0x1b:\n            *(noname_0 + 0x14c) = 0x49e350;\n            goto code_r0x00477dca;\n        case 0x1c:\n            *(noname_0 + 0x14c) = 0x49e360;\n            goto code_r0x00477dca;\n        case 0x1d:\n            *(noname_0 + 0x14c) = 0x49e374;\n            goto code_r0x00477dca;\n        case 0x1e:\n            *(noname_0 + 0x14c) = 0x49e384;\n            goto code_r0x00477dca;\n        case 0x1f:\n        case 0x20:\n            if ((*(iVar8 + 0x80) == '\\0') || (*(noname_0 + 0x84) == 0)) goto code_r0x00478597;\n            iVar12 = fcn.00474cc0();\n            if (iVar12 == 0) {\n                return 1;\n            }\n            iVar12 = fcn.00474c20(param_3);\n            if (iVar12 == 0) {\n                return 1;\n            }\n            *(noname_0 + 0x14c) = *(noname_0 + 0x1b0);\n            break;\n        case 0x21:\n            goto code_r0x00477dca;\n        case 0x22:\n            iVar7 = fcn.00474d50(noname_0, param_2, unaff_EDI, unaff_ESI, unaff_EBP, unaff_EBX, arg_20h, iVar14, \n                                 noname_11, unaff_retaddr, param_1, param_2, param_3, param_4, iVar7, param_6, param_7, \n                                 param_8, param_9, param_10, param_11, param_12, param_13, param_14, param_15, param_16\n                                 , param_17, param_18, param_19, param_20, param_21, param_22, param_23, param_24, \n                                 param_25, param_26, param_27, param_28, param_29, param_30, param_31, param_32, \n                                 param_33, param_34, param_35, param_36, param_37, param_38, param_39, param_40, \n                                 param_41, param_42, param_43, param_44, param_45, param_46, param_47, param_48, \n                                 param_49, param_50, param_51, param_52, param_53, param_54, param_55, param_56, \n                                 param_57, param_58, param_59, param_60, param_61, param_62, param_63, param_64, \n                                 param_65, param_66, param_67, param_68, param_69, param_70, param_71, param_72, \n                                 param_73, param_74, param_75, param_76, param_77, param_78);\n            *(noname_0 + 0x158) = iVar7;\n            if (iVar7 == 0) {\n                return 1;\n            }\ncode_r0x00477dca:\n            if (*(iVar8 + 0x80) != '\\0') {\n                iVar7 = *(noname_0 + 0x84);\njoined_r0x004788b6:\n                if (iVar7 != 0) break;\n            }\n            goto code_r0x00478597;\n        case 0x23:\n        case 0x24:\n            if (*(iVar8 + 0x80) != '\\0') {\n                iVar8 = fcn.004736f0(*(noname_0 + 0x15c), *(noname_0 + 0x160), 0);\n                if (iVar8 == 0) {\n                    return 1;\n                }\n                iVar12 = iVar14;\n                if ((*(noname_0 + 0x84) != 0) && (piVar2 = *(noname_0 + 0x14c),  piVar2 != NULL)) {\n                    if ((*piVar2 == 0x28) || ((*piVar2 == 0x4e && (piVar2[1] == 0x4f)))) {\n                        if ((*(noname_0 + 0x1ac) == *(noname_0 + 0x1a8)) && (cVar5 = fcn.00473c60(),  cVar5 == '\\0')) {\n                            return 1;\n                        }\n                        **(noname_0 + 0x1ac) = 0x29;\n                        *(noname_0 + 0x1ac) = *(noname_0 + 0x1ac) + 2;\n                        if ((*(noname_0 + 0x1ac) == *(noname_0 + 0x1a8)) && (cVar5 = fcn.00473c60(),  cVar5 == '\\0')) {\n                            return 1;\n                        }\n                        **(noname_0 + 0x1ac) = 0;\n                        *(noname_0 + 0x1ac) = *(noname_0 + 0x1ac) + 2;\n                        *(noname_0 + 0x14c) = *(noname_0 + 0x1b0);\n                        *(noname_0 + 0x1b0) = *(noname_0 + 0x1ac);\n                    }\n                    *arg_20h = param_3;\n                    (**(noname_0 + 0x84))\n                              (*(noname_0 + 4), **(noname_0 + 0x158), **(noname_0 + 0x15c), *(noname_0 + 0x14c), 0, \n                               iVar7 == 0x24);\n                    iVar8 = iVar14;\ncode_r0x00477f9d:\n                    fcn.00473be0();\n                    iVar14 = iVar8;\n                    break;\n                }\n            }\n            goto code_r0x00478597;\n        case 0x25:\n        case 0x26:\n            if (*(iVar8 + 0x80) != '\\0') {\n                iVar8 = fcn.00476360(noname_0, param_2, iVar8 + 0x50);\n                if (iVar8 != 0) {\n                    return iVar8;\n                }\n                uVar15 = *(iVar14 + 0x60);\n                *(iVar14 + 0x60) = *(iVar14 + 0x5c);\n                iVar8 = fcn.004736f0(*(noname_0 + 0x15c), *(noname_0 + 0x160), uVar15);\n                if (iVar8 == 0) {\n                    return 1;\n                }\n                iVar12 = iVar14;\n                if ((*(noname_0 + 0x84) != 0) && (piVar2 = *(noname_0 + 0x14c),  piVar2 != NULL)) {\n                    if ((*piVar2 == 0x28) || ((*piVar2 == 0x4e && (piVar2[1] == 0x4f)))) {\n                        if ((*(noname_0 + 0x1ac) == *(noname_0 + 0x1a8)) && (cVar5 = fcn.00473c60(),  cVar5 == '\\0')) {\n                            return 1;\n                        }\n                        **(noname_0 + 0x1ac) = 0x29;\n                        *(noname_0 + 0x1ac) = *(noname_0 + 0x1ac) + 2;\n                        if ((*(noname_0 + 0x1ac) == *(noname_0 + 0x1a8)) && (cVar5 = fcn.00473c60(),  cVar5 == '\\0')) {\n                            return 1;\n                        }\n                        **(noname_0 + 0x1ac) = 0;\n                        *(noname_0 + 0x1ac) = *(noname_0 + 0x1ac) + 2;\n                        *(noname_0 + 0x14c) = *(noname_0 + 0x1b0);\n                        *(noname_0 + 0x1b0) = *(noname_0 + 0x1ac);\n                    }\n                    *arg_20h = param_3;\n                    (**(noname_0 + 0x84))\n                              (*(noname_0 + 4), **(noname_0 + 0x158), **(noname_0 + 0x15c), *(noname_0 + 0x14c), uVar15\n                               , iVar7 == 0x26);\n                    iVar8 = iVar14;\n                    goto code_r0x00477f9d;\n                }\n            }\n            goto code_r0x00478597;\n        case 0x27:\ncode_r0x004788af:\n            iVar7 = *(noname_0 + 0x80);\n            goto joined_r0x004788b6;\n        case 0x28:\n            if (*(noname_0 + 0x80) == 0) goto code_r0x00478597;\n            iVar12 = fcn.00474d50(noname_0, param_2, unaff_EDI, unaff_ESI, unaff_EBP, unaff_EBX, arg_20h, iVar14, \n                                  noname_11, unaff_retaddr, param_1, param_2, param_3, param_4, iVar7, param_6, param_7\n                                  , param_8, param_9, param_10, param_11, param_12, param_13, param_14, param_15, \n                                  param_16, param_17, param_18, param_19, param_20, param_21, param_22, param_23, \n                                  param_24, param_25, param_26, param_27, param_28, param_29, param_30, param_31, \n                                  param_32, param_33, param_34, param_35, param_36, param_37, param_38, param_39, \n                                  param_40, param_41, param_42, param_43, param_44, param_45, param_46, param_47, \n                                  param_48, param_49, param_50, param_51, param_52, param_53, param_54, param_55, \n                                  param_56, param_57, param_58, param_59, param_60, param_61, param_62, param_63, \n                                  param_64, param_65, param_66, param_67, param_68, param_69, param_70, param_71, \n                                  param_72, param_73, param_74, param_75, param_76, param_77, param_78);\n            *(noname_0 + 0x158) = iVar12;\n            if (iVar12 == 0) {\n                return 1;\n            }\n            *(iVar8 + 0xb4) = 0;\n            *(iVar8 + 0xb0) = 0;\n            *(iVar8 + 0xa0) = 1;\n            break;\n        case 0x29:\n        case 0x2a:\n            if (*(iVar8 + 0xa0) != '\\0') {\n                if (*(noname_0 + 0x80) != 0) {\n                    piVar13 = (**(noname_0 + 0xc))(0x14);\n                    if (piVar13 == NULL) {\n                        return 1;\n                    }\n                    piVar13[1] = 0;\n                    piVar13[2] = 0;\n                    piVar13[3] = 0;\n                    piVar13[4] = 0;\n                    *piVar13 = (iVar7 == 0x29) + 1;\n                    *arg_20h = param_3;\n                    (**(noname_0 + 0x80))(*(noname_0 + 4), **(noname_0 + 0x158), piVar13);\n                    param_1 = Var18 << 8;\n                }\n                *(iVar8 + 0xa0) = 0;\n                goto code_r0x00477a47;\n            }\n            goto code_r0x00478597;\n        case 0x2b:\n            if (*(iVar8 + 0xa0) != '\\0') {\n                *(*(iVar8 + 0xa4) + *(*(iVar8 + 0xb8) + -4 + *(iVar8 + 0xb4) * 4) * 0x1c) = 3;\n                iVar7 = *(noname_0 + 0x80);\n                goto joined_r0x004788b6;\n            }\n            goto code_r0x00478597;\n        case 0x2c:\n            uVar4 = *(noname_0 + 0x1d4);\n            if (uVar4 <= *(noname_0 + 0x104)) {\n                if (uVar4 == 0) {\n                    *(noname_0 + 0x1d4) = 0x20;\n                    iVar7 = (**(noname_0 + 0xc))(0x20);\n                    *(noname_0 + 0x1d0) = iVar7;\n                    if (iVar7 == 0) {\n                        return 1;\n                    }\n                }\n                else {\n                    *(noname_0 + 0x1d4) = uVar4 * 2;\n                    iVar7 = (**(noname_0 + 0x10))(*(noname_0 + 0x1d0), uVar4 * 2);\n                    if (iVar7 == 0) {\n                        return 1;\n                    }\n                    *(noname_0 + 0x1d0) = iVar7;\n                    if (*(iVar8 + 0xb8) != 0) {\n                        iVar7 = (**(noname_0 + 0x10))(*(iVar8 + 0xb8), *(noname_0 + 0x1d4) * 4);\n                        if (iVar7 == 0) {\n                            return 1;\n                        }\n                        *(iVar8 + 0xb8) = iVar7;\n                    }\n                }\n            }\n            *(*(noname_0 + 0x1d0) + *(noname_0 + 0x104)) = 0;\n            if (*(iVar8 + 0xa0) != '\\0') {\n                iVar7 = fcn.00473dd0();\n                if (iVar7 < 0) {\n                    return 1;\n                }\n                *(*(iVar8 + 0xb8) + *(iVar8 + 0xb4) * 4) = iVar7;\n                *(iVar8 + 0xb4) = *(iVar8 + 0xb4) + 1;\n                *(*(iVar8 + 0xa4) + iVar7 * 0x1c) = 6;\n                goto code_r0x004788af;\n            }\n            goto code_r0x00478597;\n        case 0x2d:\n            uVar15 = 0;\n            goto code_r0x00478ceb;\n        case 0x2e:\n            uVar15 = 2;\n            goto code_r0x00478ceb;\n        case 0x2f:\n            uVar15 = 1;\n            goto code_r0x00478ceb;\n        case 0x30:\n            uVar15 = 3;\ncode_r0x00478ceb:\n            if (*(iVar8 + 0xa0) != '\\0') {\n                if (*(noname_0 + 0x80) != 0) {\n                    param_1 = Var18 << 8;\n                }\n                *(iVar8 + 0xb4) = *(iVar8 + 0xb4) + -1;\n                *(*(iVar8 + 0xa4) + 4 + *(*(iVar8 + 0xb8) + *(iVar8 + 0xb4) * 4) * 0x1c) = uVar15;\n                if (*(iVar8 + 0xb4) == 0) {\n                    if (cVar17 == '\\0') {\n                        iVar7 = fcn.00474000();\n                        if (iVar7 == 0) {\n                            return 1;\n                        }\n                        *arg_20h = param_3;\n                        (**(noname_0 + 0x80))(*(noname_0 + 4), **(noname_0 + 0x158), iVar7);\n                    }\n                    *(iVar8 + 0xa0) = 0;\n                    *(iVar8 + 0xa8) = 0;\n                }\n                goto code_r0x00477a47;\n            }\n            goto code_r0x00478597;\n        case 0x31:\n            cVar5 = *(*(noname_0 + 0x1d0) + *(noname_0 + 0x104));\n            if (cVar5 == ',') {\n                return 2;\n            }\n            if (((*(iVar8 + 0xa0) != '\\0') && (cVar5 == '\\0')) &&\n               ((iVar7 = *(*(iVar8 + 0xb8) + -4 + *(iVar8 + 0xb4) * 4),  *(*(iVar8 + 0xa4) + iVar7 * 0x1c) != 3 &&\n                (*(*(iVar8 + 0xa4) + iVar7 * 0x1c) = 5,  *(noname_0 + 0x80) != 0)))) {\n                param_1 = Var18 << 8;\n            }\n            *(*(noname_0 + 0x1d0) + *(noname_0 + 0x104)) = 0x7c;\ncode_r0x00477a47:\n            if (cVar17 != '\\0') goto code_r0x00478597;\n            break;\n        case 0x32:\n            pcVar9 = *(noname_0 + 0x1d0) + *(noname_0 + 0x104);\n            if (*pcVar9 == '|') {\n                return 2;\n            }\n            *pcVar9 = ',';\n            if (*(iVar8 + 0xa0) != '\\0') {\n                iVar7 = *(noname_0 + 0x80);\n                goto joined_r0x004788b6;\n            }\n            goto code_r0x00478597;\n        case 0x33:\n            iVar10 = 0;\n            goto code_r0x00478c28;\n        case 0x34:\n            iVar10 = 2;\n            goto code_r0x00478c28;\n        case 0x35:\n            iVar10 = 1;\n            goto code_r0x00478c28;\n        case 0x36:\n            iVar10 = 3;\ncode_r0x00478c28:\n            if (*(iVar8 + 0xa0) == '\\0') goto code_r0x00478597;\n            param_1 = param_6;\n            if (iVar10 != 0) {\n                param_1 = param_6 - param_2[0x11];\n            }\n            iVar11 = fcn.00473dd0();\n            if (iVar11 < 0) {\n                return 1;\n            }\n            iVar11 = iVar11 * 0x1c;\n            *(iVar11 + *(iVar8 + 0xa4)) = 4;\n            *(iVar11 + 4 + *(iVar8 + 0xa4)) = iVar10;\n            piVar13 = fcn.00474d50(noname_0, param_2, unaff_EDI, unaff_ESI, unaff_EBP, unaff_EBX, arg_20h, iVar14, \n                                   noname_11, unaff_retaddr, param_1, param_2, param_3, param_4, iVar7, param_6, param_7\n                                   , param_8, param_9, param_10, param_11, param_12, param_13, param_14, param_15, \n                                   param_16, param_17, param_18, param_19, param_20, param_21, param_22, param_23, \n                                   param_24, param_25, param_26, param_27, param_28, param_29, param_30, param_31, \n                                   param_32, param_33, param_34, param_35, param_36, param_37, param_38, param_39, \n                                   param_40, param_41, param_42, param_43, param_44, param_45, param_46, param_47, \n                                   param_48, param_49, param_50, param_51, param_52, param_53, param_54, param_55, \n                                   param_56, param_57, param_58, param_59, param_60, param_61, param_62, param_63, \n                                   param_64, param_65, param_66, param_67, param_68, param_69, param_70, param_71, \n                                   param_72, param_73, param_74, param_75, param_76, param_77, param_78);\n            if (piVar13 == NULL) {\n                return 1;\n            }\n            iVar7 = *piVar13;\n            *(iVar11 + 8 + *(iVar8 + 0xa4)) = iVar7;\n            iVar10 = 0;\n            do {\n                iVar11 = iVar10 * 2;\n                iVar10 = iVar10 + 1;\n            } while (*(iVar7 + iVar11) != 0);\n            *(iVar8 + 0xa8) = *(iVar8 + 0xa8) + iVar10;\n            iVar7 = *(noname_0 + 0x80);\n            goto joined_r0x004788b6;\n        case 0x37:\n            iVar12 = fcn.00475bb0(param_3, param_6);\n            goto joined_r0x00478dc7;\n        case 0x38:\n            iVar12 = fcn.00475c80(noname_0);\njoined_r0x00478dc7:\n            if (iVar12 == 0) {\n                return 1;\n            }\n            break;\n        case 0x39:\ncode_r0x004779d0:\n            iVar12 = fcn.00475110(param_3);\n            if (iVar12 != 0) {\n                return iVar12;\n            }\n            param_2 = *(noname_0 + 0x90);\n            break;\n        case 0x3a:\n            if (*(noname_0 + 0x50) != 0) {\n                iVar8 = iVar14;\n                fcn.00473640(param_3);\n                iVar14 = iVar8;\n            }\n            iVar12 = fcn.00474480(noname_0, &stack0x00000018, param_4, param_7, param_8, unaff_EDI, unaff_ESI, unaff_EBP\n                                  , unaff_EBX, arg_20h, iVar14, noname_11, unaff_retaddr, param_1, param_2, param_3, \n                                  param_4, iVar7, param_6, param_7, param_8, param_9, param_10, param_11, param_12, \n                                  param_13, param_14, param_15, param_16, param_17, param_18, param_19, param_20, \n                                  param_21, param_22, param_23, param_24, param_25, param_26, param_27, param_28, \n                                  param_29, param_30, param_31, param_32, param_33, param_34, param_35, param_36, \n                                  param_37, param_38, param_39, param_40, param_41, param_42, param_43, param_44, \n                                  param_45, param_46, param_47, param_48, param_49, param_50, param_51, param_52, \n                                  param_53, param_54, param_55, param_56, param_57, param_58, param_59, param_60, \n                                  param_61, param_62, param_63, param_64, param_65, param_66, param_67, param_68, \n                                  param_69, param_70, param_71, param_72, param_73, param_74, param_75, param_76, \n                                  param_77, param_78, param_79, param_80, param_81, param_82, param_83, param_84, \n                                  param_85, param_86, param_87, param_88, param_89, param_90, param_91, param_92, \n                                  param_93, param_94, param_95, param_96, param_97, param_98, param_99, param_100, \n                                  param_101, param_102, param_103, param_104, param_105, param_106);\n            if (iVar12 != 0) {\n                return iVar12;\n            }\n            if (param_6 == 0) {\n                *(noname_0 + 0x118) = 0x4750b0;\n                return 0;\n            }\n            break;\n        case 0x3b:\n        case 0x3c:\n            *(iVar8 + 0x81) = 1;\n            if (*(noname_0 + 0x1ec) == 0) {\n                *(iVar8 + 0x80) = *(iVar8 + 0x82);\ncode_r0x0047898b:\n                if (((*(iVar8 + 0x82) == '\\0') && (*(noname_0 + 0x6c) != NULL)) &&\n                   (iVar7 = (**(noname_0 + 0x6c))(*(noname_0 + 4)),  iVar7 == 0)) {\n                    return 0x16;\n                }\n                goto code_r0x00477a47;\n            }\n            iVar10 = fcn.00474d10();\n            if (iVar10 == 0) {\n                return 1;\n            }\n            iVar11 = fcn.00473880(iVar10, 0);\n            puVar1 = iVar8 + 0x60;\n            *(iVar8 + 0x5c) = *puVar1;\n            if (*(noname_0 + 0x110) == 0) {\ncode_r0x00478a67:\n                if (iVar11 == 0) {\n                    *(iVar8 + 0x80) = *(iVar8 + 0x82);\n                    iVar12 = iVar14;\n                    if ((iVar7 != 0x3c) || (*(noname_0 + 0x78) == NULL)) goto code_r0x00478597;\n                    (**(noname_0 + 0x78))(*(noname_0 + 4), iVar10, 1);\n                    break;\n                }\n            }\n            else {\n                if (*(iVar8 + 0x82) == '\\0') {\n                    bVar16 = *(iVar8 + 0x81) == '\\0';\n                }\n                else {\n                    bVar16 = *(noname_0 + 300) == 0;\n                }\n                if (!bVar16) goto code_r0x00478a67;\n                if (iVar11 == 0) {\n                    return 0xb;\n                }\n                if (*(iVar11 + 0x22) == '\\0') {\n                    return 0x18;\n                }\n            }\n            if (*(iVar11 + 0x20) != '\\0') {\n                return 0xc;\n            }\n            if (*(iVar11 + 4) == 0) {\n                if (*(noname_0 + 0x70) == 0) {\n                    *(iVar8 + 0x80) = *(iVar8 + 0x82);\n                    goto code_r0x00478597;\n                }\n                *(iVar8 + 0x83) = 0;\n                *(iVar11 + 0x20) = 1;\n                iVar7 = (**(noname_0 + 0x70))\n                                  (*(noname_0 + 0x74), 0, *(iVar11 + 0x14), *(iVar11 + 0x10), *(iVar11 + 0x18));\n                *(iVar11 + 0x20) = 0;\n                if (iVar7 == 0) {\n                    return 0x15;\n                }\n                param_1 = Var18 << 8;\n                if (*(iVar8 + 0x83) != '\\0') goto code_r0x0047898b;\n                *(iVar8 + 0x80) = *(iVar8 + 0x82);\n            }\n            else {\n                iVar8 = iVar14;\n                iVar12 = fcn.004734b0(iVar11, *puVar1 & 0xffffff00 | iVar7 == 0x3c, unaff_EDI, unaff_ESI, unaff_EBP, \n                                      unaff_EBX, arg_20h);\n                iVar14 = iVar8;\n                if (iVar12 != 0) {\n                    return iVar12;\n                }\n            }\n            break;\n        case -1:\n            if (param_5 != 0xc) {\n                return (param_5 == 0x1c) * 8 + 2;\n            }\n            return 0x11;\n        }\n        if (*(noname_0 + 0x1e0) == 2) {\n            return 0x23;\n        }\n        if (*(noname_0 + 0x1e0) == 3) {\n            *param_7 = param_6;\n            return 0;\n        }\n        param_3 = param_6;\n        param_5 = (**param_2)(param_2, param_6, param_4, &stack0x00000018);\n    } while( true );\n}\n",
        "token_count": 13677
    },
    "004831e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004831e0(int32_t param_1, int32_t param_2, int32_t *param_3, int32_t *param_4, int32_t *param_5)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t extraout_ECX_01;\n    int32_t unaff_EDI;\n    \n    if (param_1 != param_2) {\n        fcn.00483150(param_1, param_2);\n        iVar1 = fcn.004831a0();\n        if (iVar1 == 0) {\ncode_r0x00483213:\n            *param_5 = param_1;\n            return 0;\n        }\n        do {\n            param_1 = param_1 + *(unaff_EDI + 0x44);\n            fcn.00483150(param_1, param_2);\n            iVar1 = fcn.004831a0();\n        } while (iVar1 != 0);\n        if (param_1 != param_2) {\n            *in_EAX = param_1;\n            iVar1 = fcn.00483150(param_1, param_2);\n            while( true ) {\n                if (iVar1 == -1) goto code_r0x00483272;\n                if (iVar1 == 0x3d) {\n                    *param_3 = param_1;\n                    goto code_r0x004832af;\n                }\n                iVar1 = fcn.004831a0();\n                if (iVar1 != 0) break;\n                param_1 = param_1 + *(unaff_EDI + 0x44);\n                iVar1 = fcn.00483150(param_1, param_2);\n            }\n            *param_3 = param_1;\n            do {\n                param_1 = param_1 + *(unaff_EDI + 0x44);\n                fcn.00483150(param_1, param_2);\n                iVar1 = fcn.004831a0();\n            } while (iVar1 != 0);\n            if (extraout_ECX == 0x3d) {\ncode_r0x004832af:\n                if (param_1 == *in_EAX) {\n                    *param_5 = param_1;\n                    return 0;\n                }\n                param_1 = param_1 + *(unaff_EDI + 0x44);\n                fcn.00483150(param_1, param_2);\n                iVar2 = fcn.004831a0();\n                iVar1 = extraout_ECX_00;\n                while (iVar2 != 0) {\n                    param_1 = param_1 + *(unaff_EDI + 0x44);\n                    fcn.00483150(param_1, param_2);\n                    iVar2 = fcn.004831a0();\n                    iVar1 = extraout_ECX_01;\n                }\n                if ((iVar1 == 0x22) || (iVar1 == 0x27)) {\n                    param_1 = param_1 + *(unaff_EDI + 0x44);\n                    *param_4 = param_1;\n                    iVar2 = fcn.00483150(param_1, param_2);\n                    while( true ) {\n                        if (iVar2 == iVar1) {\n                            *param_5 = *(unaff_EDI + 0x44) + param_1;\n                            return 1;\n                        }\n                        if ((((iVar2 < 0x61) || (0x7a < iVar2)) && ((iVar2 < 0x41 || (0x5a < iVar2)))) &&\n                           ((((iVar2 < 0x30 || (0x39 < iVar2)) && (iVar2 != 0x2e)) &&\n                            ((iVar2 != 0x2d && (iVar2 != 0x5f)))))) break;\n                        param_1 = param_1 + *(unaff_EDI + 0x44);\n                        iVar2 = fcn.00483150(param_1, param_2);\n                    }\n                    goto code_r0x00483272;\n                }\n                goto code_r0x00483213;\n            }\ncode_r0x00483272:\n            *param_5 = param_1;\n            return 0;\n        }\n    }\n    *in_EAX = 0;\n    return 1;\n}\n",
        "token_count": 978
    },
    "004839b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuchar * __cdecl\nfcn.004839b0(uchar *noname_0, int32_t noname_1, int32_t noname_2, uint noname_3, uint noname_4, uint noname_5, \n            uint noname_6, uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint arg_3ch, uint arg_40h, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint noname_30, uint noname_31, \n            uint noname_32, uint noname_33, uint noname_34, uint noname_35, uint noname_36, uint noname_37, \n            uint noname_38, uint noname_39, uint noname_40, uint noname_41, uint noname_42, uint noname_43, \n            uint noname_44, uint noname_45, uint noname_46, uint noname_47, uint noname_48, uint noname_49, \n            uint noname_50, uint noname_51, uint noname_52, uint noname_53, uint noname_54, uint noname_55, \n            uint noname_56, uint noname_57, uint noname_58, uint noname_59, uint noname_60, uint noname_61, \n            uint noname_62, uint noname_63, uint noname_64, uint noname_65, uint noname_66, uint noname_67, \n            uint noname_68, uint noname_69, uint noname_70, uint noname_71, uint noname_72, uint noname_73, \n            uint noname_74, uint noname_75, uint noname_76, uint noname_77, uint noname_78, uint noname_79, \n            uint noname_80, uint arg_14ch, uint arg_150h, uint arg_154h, uint arg_158h, uint arg_15ch, uint arg_160h, \n            uint arg_164h, uint arg_168h, uint arg_16ch, uint arg_170h, uint arg_174h, uint arg_178h)\n\n{\n    char cVar1;\n    uchar uVar2;\n    uchar *puVar3;\n    uint32_t uVar4;\n    ushort *puVar5;\n    uint32_t uVar6;\n    ushort *puVar7;\n    uint8_t uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    ulong uVar11;\n    \n    iVar10 = 0x170;\n    puVar3 = noname_0;\n    do {\n        *puVar3 = puVar3[0x49f1f0 - noname_0];\n        puVar3 = puVar3 + 1;\n        iVar10 = iVar10 + -1;\n    } while (iVar10 != 0);\n    iVar10 = 0;\n    do {\n        if (((*(iVar10 + 0x49f23c) != '\\x1c') && (*(iVar10 + 0x49f23c) != '\\0')) && (*(noname_1 + iVar10 * 4) != iVar10)\n           ) {\n            return NULL;\n        }\n        iVar10 = iVar10 + 1;\n    } while (iVar10 < 0x80);\n    puVar7 = noname_0 + 0x178;\n    iVar10 = 0;\n    puVar3 = noname_0 + 0x378;\n    do {\n        iVar9 = *(noname_1 + iVar10 * 4);\n        if (iVar9 == -1) {\n            noname_0[iVar10 + 0x4c] = 1;\n            *puVar7 = 0xffff;\n            *puVar3 = 1;\n            puVar3[1] = 0;\n        }\n        else {\n            uVar8 = iVar9;\n            if (iVar9 < 0) {\n                if (iVar9 < -4) {\n                    return NULL;\n                }\n                noname_0[iVar10 + 0x4c] = '\\x03' - uVar8;\n                *puVar3 = 0;\n                *puVar7 = 0;\n            }\n            else if (iVar9 < 0x80) {\n                cVar1 = *(iVar9 + 0x49f23c);\n                if (((cVar1 != '\\x1c') && (cVar1 != '\\0')) && (iVar9 != iVar10)) {\n                    return NULL;\n                }\n                noname_0[iVar10 + 0x4c] = cVar1;\n                *puVar3 = 1;\n                puVar3[1] = uVar8;\n                if (iVar9 == 0) {\n                    iVar9 = 0xffff;\n                }\n                *puVar7 = iVar9;\n            }\n            else {\n                uVar11 = fcn.00483620();\n                puVar5 = uVar11 >> 0x20;\n                if (uVar11 < 0) {\n                    noname_0[iVar10 + 0x4c] = 0;\n                    *puVar5 = 0xffff;\n                    *puVar3 = 1;\n                    puVar3[1] = 0;\n                    puVar7 = puVar5;\n                }\n                else {\n                    if (0xffff < iVar9) {\n                        return NULL;\n                    }\n                    uVar6 = 1 << (uVar8 & 0x1f);\n                    uVar4 = iVar9 >> 5 & 7;\n                    if ((*((uVar4 + *((iVar9 >> 8) + 0x49e8b8) * 8) * 4 + 0x49e3b8) & uVar6) == 0) {\n                        noname_0[iVar10 + 0x4c] =\n                             ((*((uVar4 + *((iVar9 >> 8) + 0x49e9b8) * 8) * 4 + 0x49e3b8) & uVar6) == 0) * '\\x02' +\n                             '\\x1a';\n                    }\n                    else {\n                        noname_0[iVar10 + 0x4c] = 0x16;\n                    }\n                    uVar2 = fcn.00483660(iVar9, puVar3 + 1);\n                    *puVar3 = uVar2;\n                    *puVar7 = iVar9;\n                }\n            }\n        }\n        iVar10 = iVar10 + 1;\n        puVar7 = puVar7 + 1;\n        puVar3 = puVar3 + 4;\n        if (0xff < iVar10) {\n            *(noname_0 + 0x174) = noname_3;\n            *(noname_0 + 0x170) = noname_2;\n            if (noname_2 != 0) {\n                *(noname_0 + 0x14c) = 0x483790;\n                *(noname_0 + 0x150) = 0x483790;\n                *(noname_0 + 0x154) = 0x483790;\n                *(noname_0 + 0x158) = 0x4837f0;\n                *(noname_0 + 0x15c) = 0x4837f0;\n                *(noname_0 + 0x160) = 0x4837f0;\n                *(noname_0 + 0x164) = 0x483850;\n                *(noname_0 + 0x168) = 0x483850;\n                *(noname_0 + 0x16c) = 0x483850;\n            }\n            *(noname_0 + 0x3c) = 0x483890;\n            *(noname_0 + 0x40) = 0x483940;\n            return noname_0;\n        }\n    } while( true );\n}\n",
        "token_count": 1873
    },
    "00483e90": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00483e90(uint *param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00483bd0();\n    if (iVar1 == -1) {\n        return 0;\n    }\n    *(param_1 + 0x49) = iVar1;\n    param_1[0x13] = param_2;\n    *param_1 = 0x483e30;\n    param_1[1] = 0x483e60;\n    param_1[0xd] = 0x483140;\n    *param_2 = param_1;\n    return 1;\n}\n",
        "token_count": 147
    },
    "00401398": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00401398(uint arg_8h, uint arg_ch)\n\n{\n    int16_t *arg_8h_00;\n    int32_t *arg_8h_01;\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t extraout_ECX;\n    int32_t iVar6;\n    char cVar7;\n    int32_t unaff_EBP;\n    uint var_98h;\n    uint var_94h;\n    uint var_7ch;\n    uint var_62h;\n    uint var_58h;\n    uint var_34h;\n    uint var_4h;\n    \n    fcn.0045b335(0x8c);\n    cVar7 = *(extraout_ECX + 0x18);\n    arg_8h_00 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x98) = *(unaff_EBP + 0xc);\n    if (cVar7 == '\\0') goto code_r0x004015a0;\n    if ((arg_8h_00 == NULL) || (*arg_8h_00 == 0)) {\n        **(unaff_EBP + 0xc) = 0xe0010020;\n        goto code_r0x004015a0;\n    }\n    *(unaff_EBP + -0x34) = 0;\n    puVar2 = unaff_EBP + -0x33;\n    for (iVar6 = 7; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.00402707(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    puVar2 = fcn.00426660(0);\n    if (0xf < puVar2[5]) {\n        puVar2 = *puVar2;\n    }\n    iVar6 = sym.SupportWrapper.exe_PR_removeAcDash(puVar2, unaff_EBP + -0x34);\n    arg_8h_01 = *(unaff_EBP + -0x98);\n    *arg_8h_01 = iVar6;\n    fcn.0040230f();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00402754(1, 0);\n    if (*arg_8h_01 == 0) {\n        *(unaff_EBP + -100) = 0;\n        fcn.00453710(unaff_EBP + -0x62, 0, 0x2b);\n        iVar6 = sym.SupportWrapper.exe_PR_decomposeActivationCode(unaff_EBP + -0x34, unaff_EBP + -100);\n        *arg_8h_01 = iVar6;\n        if (iVar6 == 0) {\n            iVar6 = fcn.00453880(unaff_EBP + -0x5f, 0x4a0154, 3);\n            if (iVar6 != 0) {\n                iVar6 = fcn.00453880(unaff_EBP + -0x62, extraout_ECX + 0x6e, 3);\n                iVar3 = fcn.00453880(unaff_EBP + -0x5f, extraout_ECX + 0x6b, 3);\n                iVar4 = fcn.00453880(unaff_EBP + -0x58, extraout_ECX + 0x71, 3);\n                iVar5 = fcn.00453880(unaff_EBP + -0x5c, extraout_ECX + 0x74, 2);\n                if ((1U - (iVar6 != 0) & 1U - (iVar3 != 0) & 1U - (iVar4 != 0) & 1U - (iVar5 != 0)) == 0)\n                goto code_r0x0040158d;\n            }\n            cVar7 = '\\0';\n            *(unaff_EBP + -0x98) = 0;\n            iVar6 = sym.SupportWrapper.exe_PR_activation\n                              (unaff_EBP + -0x34, extraout_ECX + 0x6b, extraout_ECX + 0x1b, unaff_EBP + -0x98);\n            *arg_8h_01 = iVar6;\n            if (iVar6 == 0) {\n                if ((*(unaff_EBP + -0x98) == 0x60010120) &&\n                   (iVar6 = fcn.00453880(unaff_EBP + -100, 0x4a0158, 2),  iVar6 != 0)) {\n                    *(extraout_ECX + 0x1a) = 1;\n                    cVar1 = fcn.004015a8(arg_8h_01);\n                    if ((cVar1 != '\\0') &&\n                       (iVar6 = sym.SupportWrapper.exe_PR_getLicenseStatus(extraout_ECX + 0x1b, unaff_EBP + -0x98), \n                       iVar6 == 0)) {\n                        if ((*(unaff_EBP + -0x98) == 0x60010106) || (*(unaff_EBP + -0x98) == 0x60010107)) {\n                            cVar7 = '\\x01';\n                        }\n                        *(extraout_ECX + 0x19) = cVar7;\n                        *(extraout_ECX + 0x1a) = cVar7 == '\\0';\n                    }\n                }\n                else {\n                    *(extraout_ECX + 0x19) = 1;\n                }\n            }\n            goto code_r0x004015a0;\n        }\n    }\ncode_r0x0040158d:\n    *arg_8h_01 = -0x1ffeffe0;\ncode_r0x004015a0:\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 1375
    },
    "004021a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004021a8(uint32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint *in_ECX;\n    \n    if (arg_8h != 0xffffffff) {\n        if (in_ECX[5] < arg_8h) {\n            fcn.0040209f(arg_8h, in_ECX[4]);\n        }\n        else if ((arg_ch == '\\0') || (0xf < arg_8h)) {\n            if (arg_8h == 0) {\n                in_ECX[4] = 0;\n                if (0xf < in_ECX[5]) {\n                    in_ECX = *in_ECX;\n                }\n                *in_ECX = 0;\n            }\n        }\n        else {\n            uVar2 = in_ECX[4];\n            if (arg_8h < in_ECX[4]) {\n                uVar2 = arg_8h;\n            }\n            fcn.004022cb(1, uVar2);\n        }\n        return arg_8h != 0;\n    }\n    fcn.0044e7eb(\"string too long\");\n    pcVar1 = swi(3);\n    uVar2 = (*pcVar1)();\n    return uVar2;\n}\n",
        "token_count": 291
    },
    "004025ff": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004025ff(uint32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint *in_ECX;\n    \n    if (arg_8h < 0x7fffffff) {\n        if (in_ECX[5] < arg_8h) {\n            fcn.0040250f(arg_8h, in_ECX[4]);\n        }\n        else if ((arg_ch == '\\0') || (7 < arg_8h)) {\n            if (arg_8h == 0) {\n                in_ECX[4] = 0;\n                if (7 < in_ECX[5]) {\n                    in_ECX = *in_ECX;\n                }\n                *in_ECX = 0;\n            }\n        }\n        else {\n            uVar2 = in_ECX[4];\n            if (arg_8h < in_ECX[4]) {\n                uVar2 = arg_8h;\n            }\n            fcn.00402754(1, uVar2);\n        }\n        return arg_8h != 0;\n    }\n    fcn.0044e7eb(\"string too long\");\n    pcVar1 = swi(3);\n    uVar2 = (*pcVar1)();\n    return uVar2;\n}\n",
        "token_count": 290
    },
    "00402754": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402754(uint arg_8h, int32_t arg_ch)\n\n{\n    uint arg_ch_00;\n    uint *in_ECX;\n    \n    if ((arg_8h != '\\0') && (7 < in_ECX[5])) {\n        arg_ch_00 = *in_ECX;\n        if (arg_ch != 0) {\n            fcn.0040272f(in_ECX, arg_ch_00, arg_ch);\n        }\n        fcn.00452a07(arg_ch_00);\n    }\n    in_ECX[4] = arg_ch;\n    in_ECX[5] = 7;\n    *(in_ECX + arg_ch * 2) = 0;\n    return;\n}\n",
        "token_count": 160
    },
    "004045e1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_30h\n\nvoid fcn.004045e1(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint extraout_ECX_02;\n    uint extraout_ECX_03;\n    uint extraout_ECX_04;\n    uint extraout_ECX_05;\n    uint extraout_ECX_06;\n    uint noname_0;\n    int32_t unaff_EBP;\n    uint *puVar5;\n    uint var_5c8h;\n    uint nSize;\n    uint var_5c0h;\n    uint var_5a8h;\n    uint var_590h;\n    uint var_578h;\n    uint var_560h;\n    uint var_548h;\n    uint var_530h;\n    uint var_520h;\n    uint var_51ch;\n    uint var_518h;\n    uint var_508h;\n    uint var_504h;\n    uint var_500h;\n    uint var_4e8h;\n    uint var_4d8h;\n    uint var_4d4h;\n    uint var_4d0h;\n    uint var_4c0h;\n    uint var_4bch;\n    uint lpExistingFileName;\n    uint var_4a8h;\n    uint var_4a4h;\n    uint var_4a0h;\n    uint var_490h;\n    uint var_48ch;\n    uint var_488h;\n    uint var_478h;\n    uint var_474h;\n    uint var_470h;\n    uint var_460h;\n    uint var_45ch;\n    uint lpNewFileName;\n    uint var_448h;\n    uint var_444h;\n    uint lpFilename;\n    uint lpBuffer;\n    char *pcVar6;\n    char *pcVar7;\n    uint var_30h;\n    char16_t *pcVar8;\n    uint uVar9;\n    uint uVar10;\n    uint var_4h;\n    uint uVar11;\n    \n    uVar11 = 0x5bc;\n    fcn.0045b335();\n    *(unaff_EBP + -0x5c8) = extraout_ECX;\n    uVar10 = 0x800010;\n    uVar9 = 0x270;\n    pcVar8 = L\"SupportWrapper.cpp\";\n    uVar1 = fcn.0042c180();\n    fcn.0042c3c0(uVar1, pcVar8, uVar9, uVar10, \"UploadResult\", uVar11);\n    fcn.0045400a(\"Packing files...\\n\\n\", uVar11);\n    *(unaff_EBP + -0x238) = 0;\n    fcn.00453710(unaff_EBP + -0x236, 0, 0x206);\n    (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)(0x104, unaff_EBP + -0x238);\n    *(unaff_EBP + -0x504) = 7;\n    *(unaff_EBP + -0x508) = 0;\n    *(unaff_EBP + -0x518) = 0;\n    *(unaff_EBP + -4) = 0;\n    if (*(unaff_EBP + -0x238) == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.00453054(unaff_EBP + -0x238);\n    }\n    fcn.00402667(unaff_EBP + -0x238, uVar1);\n    *(unaff_EBP + -0x4a4) = 7;\n    *(unaff_EBP + -0x4a8) = 0;\n    *(unaff_EBP + -0x4b8) = 0;\n    *(unaff_EBP + -0x4bc) = 7;\n    *(unaff_EBP + -0x4c0) = 0;\n    *(unaff_EBP + -0x4d0) = 0;\n    *(unaff_EBP + -4) = 2;\n    fcn.00406264(unaff_EBP + -0x578);\n    *(unaff_EBP + -4) = 3;\n    fcn.0040c05d(L\".zip\");\n    *(unaff_EBP + -4) = 5;\n    fcn.00402754(1, 0);\n    fcn.00401a5b(0x4a078c);\n    *(unaff_EBP + -4) = 6;\n    uVar1 = fcn.0040c07f(unaff_EBP + -0x4a0);\n    fcn.004017bf(uVar1);\n    fcn.00402754(1, 0);\n    *(unaff_EBP + -4) = 5;\n    fcn.00402754(1, 0);\n    iVar2 = *(extraout_ECX + 0x160);\n    if ((iVar2 != 0) || (*(extraout_ECX + 0x100) != 0)) {\n        *(unaff_EBP + -0x51c) = 7;\n        *(unaff_EBP + -0x520) = 0;\n        *(unaff_EBP + -0x530) = 0;\n        *(unaff_EBP + -4) = 7;\n        iVar4 = extraout_ECX + 0x150;\n        if (iVar2 == 0) {\n            iVar4 = extraout_ECX + 0xf0;\n        }\n        if (unaff_EBP + -0x530 != iVar4) {\n            fcn.00402450(iVar4, 0, 0xffffffff);\n        }\n        fcn.00401a5b(L\"\\\\zipcloak.exe\");\n        *(unaff_EBP + -4) = 8;\n        fcn.0040c0a5(unaff_EBP + -0x488);\n        *(unaff_EBP + -4) = 9;\n        fcn.0040c05d(0x4a0c54);\n        *(unaff_EBP + -4) = 10;\n        fcn.0040c07f(unaff_EBP + -0x530);\n        *(unaff_EBP + -4) = 0xb;\n        fcn.0040c05d(0x4a0c4c);\n        *(unaff_EBP + -4) = 0xc;\n        fcn.0040c07f(unaff_EBP + -0x4b8);\n        *(unaff_EBP + -4) = 0xd;\n        fcn.0040c05d(0x4a0c48);\n        fcn.00402754(1, 0);\n        fcn.00402754(1, 0);\n        fcn.00402754(1, 0);\n        fcn.00402754(1, 0);\n        *(unaff_EBP + -4) = 0x13;\n        fcn.00402754(1, 0);\n        iVar2 = fcn.0042dfd0();\n        if (iVar2 != 0) {\n            iVar2 = unaff_EBP + -0x470;\n            if (7 < *(unaff_EBP + -0x45c)) {\n                iVar2 = *(unaff_EBP + -0x470);\n            }\n            pcVar7 = \"UploadResult\";\n            pcVar6 = \"%s Failed to add password on archive[%d]: %S\";\n            uVar10 = 0x800002;\n            uVar9 = 0x294;\n            pcVar8 = L\"SupportWrapper.cpp\";\n            uVar1 = fcn.0042c180(iVar2);\n            fcn.0042c3c0(uVar1, pcVar8, uVar9, uVar10, pcVar6, pcVar7);\n        }\n        fcn.00402754(1, 0);\n        fcn.00402754(1, 0);\n        *(unaff_EBP + -4) = 5;\n        fcn.00402754(1, 0);\n    }\n    *(unaff_EBP + -0x30) = 0;\n    puVar5 = unaff_EBP + -0x2e;\n    for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(unaff_EBP + -0x5c4) = 0x10;\n    (*_sym.imp.KERNEL32.dll_GetComputerNameW)(unaff_EBP + -0x30, unaff_EBP + -0x5c4);\n    fcn.00403e81();\n    *(unaff_EBP + -4) = 0x14;\n    fcn.0040411c(unaff_EBP + -0x4e8, 0);\n    *(unaff_EBP + -4) = 0x15;\n    fcn.004019b5(unaff_EBP + -0x548, 0, 0xffffffff);\n    if (*(unaff_EBP + -0x30) == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.00453054(unaff_EBP + -0x30);\n    }\n    fcn.0040186c(unaff_EBP + -0x30, uVar1);\n    uVar1 = fcn.00453054(0x4a0c94);\n    fcn.0040186c(0x4a0c94, uVar1);\n    if (*(unaff_EBP + -0x4d8) != 0) {\n        fcn.004019b5(unaff_EBP + -0x4e8, 0, 0xffffffff);\n        uVar1 = fcn.00453054(0x4a0c94);\n        fcn.0040186c(0x4a0c94, uVar1);\n    }\n    fcn.004019b5(unaff_EBP + -0x4a0, 0, 0xffffffff);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    *(unaff_EBP + -4) = 2;\n    fcn.00402754(1, 0);\n    uVar1 = 0x4a00e0;\n    *(unaff_EBP + -0x5c4) = 0;\n    *(unaff_EBP + -0x444) = 7;\n    *(unaff_EBP + -0x448) = 0;\n    *(unaff_EBP + -0x458) = 0;\n    fcn.00402667(0x4a00e0, 0);\n    *(unaff_EBP + -4) = 0x16;\n    if ((*(extraout_ECX + 0x6c) == 0) && (*(extraout_ECX + 0x1a8) == 0)) {\n        pcVar7 = \"UploadResult\";\n        pcVar6 = \"%s Report through network drive disabled\";\n        uVar11 = 0x800008;\n        uVar10 = 0x2d1;\n        pcVar8 = L\"SupportWrapper.cpp\";\n        uVar9 = fcn.0042c180(extraout_ECX_00);\n        fcn.0042c3c0(uVar9, pcVar8, uVar10, uVar11, pcVar6, pcVar7);\n        uVar9 = extraout_ECX_01;\n        iVar2 = extraout_ECX;\n    }\n    else {\n        if (unaff_EBP + -0x458 != extraout_ECX + 0x5c) {\n            fcn.00402450(extraout_ECX + 0x5c, 0, 0xffffffff);\n        }\n        if ((*(extraout_ECX + 0x1a8) != 0) && (unaff_EBP + -0x458 != extraout_ECX + 0x198)) {\n            fcn.00402450(extraout_ECX + 0x198, 0, 0xffffffff);\n        }\n        fcn.0042d220();\n        iVar2 = fcn.004262e0();\n        if (iVar2 == 0) {\n            fcn.00425da0(0);\n        }\n        iVar2 = fcn.004085ca(unaff_EBP + -0x500, *(unaff_EBP + -0x448) + -1, 1);\n        uVar10 = 0x4a078c;\n        *(unaff_EBP + -4) = 0x17;\n        uVar9 = fcn.00453054(0x4a078c);\n        iVar2 = fcn.00409963(uVar10, *(iVar2 + 0x10), 0x4a078c, uVar9);\n        *(unaff_EBP + -4) = 0x16;\n        fcn.00402754(1, 0);\n        if (iVar2 != 0) {\n            uVar9 = fcn.00453054(0x4a078c);\n            fcn.0040186c(0x4a078c, uVar9);\n        }\n        fcn.004019b5(unaff_EBP + -0x4d0, 0, 0xffffffff);\n        iVar2 = unaff_EBP + -0x458;\n        if (7 < *(unaff_EBP + -0x444)) {\n            iVar2 = *(unaff_EBP + -0x458);\n        }\n        iVar4 = unaff_EBP + -0x4b8;\n        if (7 < *(unaff_EBP + -0x4a4)) {\n            iVar4 = *(unaff_EBP + -0x4b8);\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_CopyFileW)(iVar4, iVar2, 0);\n        uVar9 = extraout_ECX_02;\n        if (iVar2 == 0) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            fcn.00402aa7(uVar3 & 0xffff | 0x80030000);\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar2 == 3) {\n                pcVar7 = \"UploadResult\";\n                pcVar6 = \"%s Cannot find path %S\";\n                uVar11 = 0x800002;\n                uVar10 = 0x2c6;\n                pcVar8 = L\"SupportWrapper.cpp\";\n                uVar9 = fcn.0042c180();\n                fcn.0042c3c0(uVar9, pcVar8, uVar10, uVar11, pcVar6, pcVar7);\n                uVar9 = extraout_ECX_03;\n            }\n            else {\n                iVar2 = unaff_EBP + -0x458;\n                if (7 < *(unaff_EBP + -0x444)) {\n                    iVar2 = *(unaff_EBP + -0x458);\n                }\n                iVar4 = unaff_EBP + -0x4b8;\n                if (7 < *(unaff_EBP + -0x4a4)) {\n                    iVar4 = *(unaff_EBP + -0x4b8);\n                }\n                (*_sym.imp.KERNEL32.dll_GetLastError)(iVar4, iVar2);\n                pcVar7 = \"UploadResult\";\n                pcVar6 = \"%s Error %lu copy %S to %S\";\n                uVar11 = 0x800002;\n                uVar10 = 0x2cb;\n                pcVar8 = L\"SupportWrapper.cpp\";\n                uVar9 = fcn.0042c180();\n                fcn.0042c3c0(uVar9, pcVar8, uVar10, uVar11, pcVar6, pcVar7);\n                uVar9 = extraout_ECX_04;\n            }\n        }\n        iVar2 = *(unaff_EBP + -0x5c8);\n    }\n    if ((*(iVar2 + 0xcc) == 0) && (*(iVar2 + 0x1c0) == 0)) {\n        pcVar7 = \"UploadResult\";\n        pcVar6 = \"%s Report through FTP disabled\";\n        uVar11 = 0x800008;\n        uVar10 = 0x2db;\n        pcVar8 = L\"SupportWrapper.cpp\";\n        uVar9 = fcn.0042c180(uVar9);\n        fcn.0042c3c0(uVar9, pcVar8, uVar10, uVar11, pcVar6, pcVar7);\n        uVar9 = extraout_ECX_05;\n    }\n    else {\n        uVar9 = fcn.004059a4(unaff_EBP + -0x4b8, unaff_EBP + -0x4d0);\n        fcn.00402aa7(uVar9);\n        uVar9 = extraout_ECX_06;\n    }\n    if (((*(iVar2 + 0x178) == 0) || (*(iVar2 + 400) == 0)) && ((*(iVar2 + 0x118) == 0 || (*(iVar2 + 0x130) == 0)))) {\n        pcVar7 = \"UploadResult\";\n        pcVar6 = \"%s Report through HTTP disabled\";\n        uVar11 = 0x800008;\n        uVar10 = 0x2e6;\n        pcVar8 = L\"SupportWrapper.cpp\";\n        uVar9 = fcn.0042c180(uVar9);\n        fcn.0042c3c0(uVar9, pcVar8, uVar10, uVar11, pcVar6, pcVar7);\n    }\n    else {\n        fcn.00405fbe(unaff_EBP + -0x4b8, unaff_EBP + -0x518);\n    }\n    if (*(iVar2 + 4) == 0) {\n        *(unaff_EBP + -0x474) = 7;\n        *(unaff_EBP + -0x478) = 0;\n        *(unaff_EBP + -0x488) = 0;\n        *(unaff_EBP + -0x48c) = 7;\n        *(unaff_EBP + -0x490) = 0;\n        *(unaff_EBP + -0x4a0) = 0;\n        *(unaff_EBP + -0x440) = 0;\n        fcn.00453710(unaff_EBP + -0x43e, 0, 0x206);\n        (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, unaff_EBP + -0x440, 0x104);\n        *(unaff_EBP + -0x4d4) = 7;\n        *(unaff_EBP + -0x4d8) = 0;\n        *(unaff_EBP + -0x4e8) = 0;\n        *(unaff_EBP + -4) = 0x1a;\n        *(unaff_EBP + -0x45c) = 7;\n        *(unaff_EBP + -0x460) = 0;\n        *(unaff_EBP + -0x470) = 0;\n        if (*(unaff_EBP + -0x440) == 0) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = fcn.00453054(unaff_EBP + -0x440);\n        }\n        fcn.00402667(unaff_EBP + -0x440, uVar1);\n        *(unaff_EBP + -4) = 0x1b;\n        fcn.0042d3f0(unaff_EBP + -0x4e8);\n        *(unaff_EBP + -4) = 0x1a;\n        fcn.00402754(1, 0);\n        fcn.0042c5b0();\n        *(unaff_EBP + -4) = 0x1c;\n        fcn.0042d3f0(unaff_EBP + -0x4e8);\n        uVar1 = fcn.00426760();\n        fcn.004017bf(uVar1);\n        fcn.00402754(1, 0);\n        uVar1 = fcn.00426760();\n        fcn.004017bf(uVar1);\n        fcn.00402754(1, 0);\n        pcVar7 = \"UploadResult\";\n        pcVar6 = \"%s wsRemoteFilePathFullFolder %S\";\n        uVar10 = 0x800008;\n        uVar9 = 0x2f8;\n        pcVar8 = L\"SupportWrapper.cpp\";\n        uVar1 = fcn.0042c180();\n        fcn.0042c3c0(uVar1, pcVar8, uVar9, uVar10, pcVar6, pcVar7);\n        pcVar7 = \"UploadResult\";\n        pcVar6 = \"%s wsModuleFolder %S\";\n        uVar10 = 0x800008;\n        uVar9 = 0x2f9;\n        pcVar8 = L\"SupportWrapper.cpp\";\n        uVar1 = fcn.0042c180();\n        fcn.0042c3c0(uVar1, pcVar8, uVar9, uVar10, pcVar6, pcVar7);\n        fcn.00402754(1, 0);\n        *(unaff_EBP + -4) = 0x19;\n        fcn.00402754(1, 0);\n        iVar2 = unaff_EBP + -0x488;\n        if (7 < *(unaff_EBP + -0x474)) {\n            iVar2 = *(unaff_EBP + -0x488);\n        }\n        iVar2 = fcn.00409963(noname_0, *(unaff_EBP + -0x490), iVar2, *(unaff_EBP + -0x478));\n        if (iVar2 == 0) {\n            pcVar7 = \"UploadResult\";\n            pcVar6 = \"%s wsRemoteFilePathFullFolder == wsModuleFolder == %S\";\n            uVar10 = 0x800008;\n            uVar9 = 0x2ff;\n            pcVar8 = L\"SupportWrapper.cpp\";\n            uVar1 = fcn.0042c180();\n            fcn.0042c3c0(uVar1, pcVar8, uVar9, uVar10, pcVar6, pcVar7);\n        }\n        else if (*(unaff_EBP + -0x448) != 0) {\n            fcn.0040c0a5(unaff_EBP + -0x458);\n            *(unaff_EBP + -4) = 0x1d;\n            fcn.0040c05d(0x4a0c48);\n            *(unaff_EBP + -4) = 0x1f;\n            fcn.00402754(1, 0);\n            fcn.0042d220();\n            pcVar7 = \"UploadResult\";\n            pcVar6 = \"%s show %S\";\n            uVar10 = 0x800008;\n            uVar9 = 0x307;\n            pcVar8 = L\"SupportWrapper.cpp\";\n            uVar1 = fcn.0042c180();\n            fcn.0042c3c0(uVar1, pcVar8, uVar9, uVar10, pcVar6, pcVar7);\n            iVar2 = fcn.0042d960(0, 0);\n            if (iVar2 == 0) {\n                iVar2 = unaff_EBP + -0x470;\n                if (7 < *(unaff_EBP + -0x45c)) {\n                    iVar2 = *(unaff_EBP + -0x470);\n                }\n                iVar4 = unaff_EBP + -0x458;\n                if (7 < *(unaff_EBP + -0x444)) {\n                    iVar4 = *(unaff_EBP + -0x458);\n                }\n                (*_sym.imp.KERNEL32.dll_GetLastError)(iVar4, iVar2);\n                pcVar7 = \"UploadResult\";\n                pcVar6 = \"%s Error %lu show %S with command [%S]\";\n                uVar10 = 0x800002;\n                uVar9 = 0x312;\n                pcVar8 = L\"SupportWrapper.cpp\";\n                uVar1 = fcn.0042c180();\n                fcn.0042c3c0(uVar1, pcVar8, uVar9, uVar10, pcVar6, pcVar7);\n            }\n            else {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n            }\n            fcn.00402754(1, 0);\n        }\n        fcn.00402754(1, 0);\n        uVar1 = 1;\n        *(unaff_EBP + -4) = 0x16;\n        fcn.00402754(1, 0);\n    }\n    pcVar6 = \"UploadResult\";\n    uVar11 = 0x800020;\n    uVar10 = 0x318;\n    pcVar8 = L\"SupportWrapper.cpp\";\n    uVar9 = fcn.0042c180();\n    fcn.0042c3c0(uVar9, pcVar8, uVar10, uVar11, pcVar6, uVar1);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 5810
    },
    "00405692": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00405692(void)\n\n{\n    int32_t iVar1;\n    uint arg_ch;\n    int32_t unaff_EBP;\n    uint arg_ch_00;\n    uint var_2f0h;\n    uint var_288h;\n    uint var_23ch;\n    uint var_238h;\n    uint var_234h;\n    uint var_230h;\n    uint var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint var_4h;\n    \n    fcn.0045b335(0x2e4);\n    *(unaff_EBP + -0x234) = 0xffffffff;\n    arg_ch_00 = 0;\n    *(unaff_EBP + -0x218) = 0;\n    *(unaff_EBP + -0x238) = 0;\n    *(unaff_EBP + -0x23c) = 0x104;\n    fcn.00453710(unaff_EBP + -0x216, 0, 0x206);\n    iVar1 = (*_sym.imp.WININET.dll_InternetGetLastResponseInfoW)\n                      (unaff_EBP + -0x238, unaff_EBP + -0x218, unaff_EBP + -0x23c);\n    if (iVar1 != 0) {\n        arg_ch = 0;\n        *(unaff_EBP + -0x21c) = 7;\n        *(unaff_EBP + -0x220) = 0;\n        *(unaff_EBP + -0x230) = 0;\n        if (*(unaff_EBP + -0x218) != 0) {\n            arg_ch = fcn.00453054(unaff_EBP + -0x218);\n        }\n        fcn.00402667(unaff_EBP + -0x218, arg_ch);\n        *(unaff_EBP + -4) = 0;\n        fcn.00408696(unaff_EBP + -0x230);\n        *(unaff_EBP + -4) = 2;\n        fcn.00402754(1, 0);\n        fcn.004083c2(unaff_EBP + -0x234);\n        if (*(unaff_EBP + -0x218) != 0) {\n            arg_ch_00 = fcn.00453054(unaff_EBP + -0x218);\n        }\n        fcn.00402667(unaff_EBP + -0x218, arg_ch_00);\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.00408704();\n        *(unaff_EBP + -0x288) = vtable.std::ios_base.0;\n        fcn.0044e8ed(unaff_EBP + -0x288);\n    }\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 645
    },
    "004059a4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_88h\n// WARNING: Variable defined which should be unmapped: var_84h\n// WARNING: Variable defined which should be unmapped: var_80h\n// WARNING: Variable defined which should be unmapped: var_b0h\n// WARNING: Variable defined which should be unmapped: var_e8h\n// WARNING: Variable defined which should be unmapped: var_e4h\n// WARNING: Variable defined which should be unmapped: var_e0h\n// WARNING: Variable defined which should be unmapped: var_98h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_68h\n// WARNING: Variable defined which should be unmapped: var_70h\n// WARNING: Variable defined which should be unmapped: var_6ch\n// WARNING: Variable defined which should be unmapped: var_a0h\n// WARNING: Variable defined which should be unmapped: var_9ch\n// WARNING: Variable defined which should be unmapped: var_b8h\n// WARNING: Variable defined which should be unmapped: var_b4h\n// WARNING: Variable defined which should be unmapped: var_c8h\n// WARNING: Variable defined which should be unmapped: var_d0h\n// WARNING: Variable defined which should be unmapped: var_cch\n// WARNING: Variable defined which should be unmapped: var_f8h\n\nvoid __cdecl fcn.004059a4(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t extraout_ECX_01;\n    int32_t extraout_ECX_02;\n    int32_t *piVar4;\n    uint extraout_ECX_03;\n    uint *puVar5;\n    int32_t unaff_EBP;\n    int32_t iVar6;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_154h;\n    uint var_14ch;\n    uint var_110h;\n    uint var_f8h;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    char16_t *pcVar7;\n    uint uVar8;\n    uint arg_14h;\n    char *pcVar9;\n    char *pcVar10;\n    uint var_4h;\n    uint uVar11;\n    \n    uVar11 = 0x16c;\n    fcn.0045b335();\n    puVar5 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x178) = puVar5;\n    *(unaff_EBP + -0x174) = *(unaff_EBP + 0xc);\n    fcn.0045400a(\"Sending files via FTP...\\n\\n\", uVar11);\n    *(unaff_EBP + -0x6c) = 7;\n    *(unaff_EBP + -0x70) = 0;\n    *(unaff_EBP + -0x80) = 0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x9c) = 7;\n    *(unaff_EBP + -0xa0) = 0;\n    *(unaff_EBP + -0xb0) = 0;\n    *(unaff_EBP + -0x84) = 7;\n    *(unaff_EBP + -0x88) = 0;\n    *(unaff_EBP + -0x98) = 0;\n    *(unaff_EBP + -0xe4) = 7;\n    *(unaff_EBP + -0xe8) = 0;\n    *(unaff_EBP + -0xf8) = 0;\n    *(unaff_EBP + -4) = 3;\n    if (*(extraout_ECX + 0x1c0) == 0) {\n        if (unaff_EBP + -0x80 != extraout_ECX + 0xbc) {\n            fcn.00402450(extraout_ECX + 0xbc, 0, 0xffffffff);\n        }\n        *(unaff_EBP + -0x168) = *(extraout_ECX + 0xec);\n        if (unaff_EBP + -0xb0 != extraout_ECX + 0x8c) {\n            fcn.00402450(extraout_ECX + 0x8c, 0, 0xffffffff);\n        }\n        iVar2 = unaff_EBP + -0x98;\n        if (iVar2 != extraout_ECX + 0xa4) {\n            fcn.00402450(extraout_ECX + 0xa4, 0, 0xffffffff);\n            iVar2 = extraout_ECX_01;\n        }\n        iVar6 = extraout_ECX + 0xd4;\n    }\n    else {\n        if (unaff_EBP + -0x80 != extraout_ECX + 0x1b0) {\n            fcn.00402450(extraout_ECX + 0x1b0, 0, 0xffffffff);\n        }\n        *(unaff_EBP + -0x168) = *(extraout_ECX + 0x1c8);\n        if (unaff_EBP + -0xb0 != extraout_ECX + 0x1cc) {\n            fcn.00402450(extraout_ECX + 0x1cc, 0, 0xffffffff);\n        }\n        iVar2 = unaff_EBP + -0x98;\n        if (iVar2 != extraout_ECX + 0x1e4) {\n            fcn.00402450(extraout_ECX + 0x1e4, 0, 0xffffffff);\n            iVar2 = extraout_ECX_00;\n        }\n        iVar6 = extraout_ECX + 0x1fc;\n    }\n    if (unaff_EBP + -0xf8 != iVar6) {\n        fcn.00402450(iVar6, 0, 0xffffffff);\n        iVar2 = extraout_ECX_02;\n    }\n    uVar11 = *(unaff_EBP + -0x168);\n    pcVar10 = \"WrapperAPP::FtpUpload()\";\n    pcVar9 = \"%s Report result to ftp://%S:%d\";\n    arg_14h = 0x800040;\n    uVar8 = 0x3c2;\n    pcVar7 = L\"SupportWrapper.cpp\";\n    uVar1 = fcn.0042c180(iVar2);\n    fcn.0042c3c0(uVar1, pcVar7, uVar8, arg_14h, pcVar9, pcVar10);\n    *(unaff_EBP + -0xd0) = 0;\n    *(unaff_EBP + -0xe0) = 0;\n    *(unaff_EBP + -0xcc) = 7;\n    fcn.00402450(unaff_EBP + -0x80, 0, 0xffffffff);\n    *(unaff_EBP + -4) = 4;\n    uVar1 = fcn.00453054(0x4a1024);\n    iVar2 = fcn.00409847(0x4a1024, 0, uVar1);\n    if (iVar2 == -1) {\n        pcVar7 = L\"ftp://\";\n        uVar1 = fcn.00453054(L\"ftp://\");\n        fcn.0040977e(pcVar7, L\"ftp://\", uVar1);\n    }\n    fcn.00401000();\n    *(unaff_EBP + -4) = 5;\n    fcn.00428680();\n    *(unaff_EBP + -0xb8) = 0;\n    *(unaff_EBP + -200) = 0;\n    *(unaff_EBP + -0xb4) = 7;\n    fcn.00402450(unaff_EBP + -0x164, 0, 0xffffffff);\n    iVar2 = 0;\n    *(unaff_EBP + -4) = 6;\n    uVar1 = 1;\n    if (*(unaff_EBP + -0x154) != 0) {\n        fcn.00453710(unaff_EBP + -0x50, 0, 0x3c);\n        iVar2 = fcn.00455a3f(*(unaff_EBP + -0x14c), unaff_EBP + -0x50, 0x1e, 10);\n        if (iVar2 == 0) {\n            uVar1 = fcn.00453054(0x4a103c);\n            fcn.0040186c(0x4a103c, uVar1);\n            if (*(unaff_EBP + -0x50) == 0) {\n                uVar1 = 0;\n            }\n            else {\n                uVar1 = fcn.00453054(unaff_EBP + -0x50);\n            }\n            fcn.0040186c(unaff_EBP + -0x50, uVar1);\n        }\n        iVar2 = unaff_EBP + -200;\n        if (7 < *(unaff_EBP + -0xb4)) {\n            iVar2 = *(unaff_EBP + -200);\n        }\n        uVar1 = 3;\n    }\n    uVar1 = (*_sym.imp.WININET.dll_InternetOpenW)(0x4a1040, uVar1, iVar2, 0, 0x4000000);\n    *(unaff_EBP + -0x168) = uVar1;\n    fcn.00402754(1, 0);\n    fcn.0040172f();\n    *(unaff_EBP + -4) = 3;\n    fcn.00402754(1, 0);\n    *(unaff_EBP + -0x16c) = 0;\n    if (*(unaff_EBP + -0x168) == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n        pcVar10 = \"WrapperAPP::FtpUpload()\";\n        pcVar9 = \"%s InternetOpen failed %lu\";\n        uVar11 = fcn.0042c180();\n        fcn.0042c3c0(uVar11, L\"SupportWrapper.cpp\", 0x3e6, 0x800002, pcVar9, pcVar10);\n        fcn.00402aa7(0x80020000);\n    }\n    else {\n        iVar2 = unaff_EBP + -0x98;\n        if (7 < *(unaff_EBP + -0x84)) {\n            iVar2 = *(unaff_EBP + -0x98);\n        }\n        iVar6 = unaff_EBP + -0xb0;\n        if (7 < *(unaff_EBP + -0x9c)) {\n            iVar6 = *(unaff_EBP + -0xb0);\n        }\n        iVar3 = unaff_EBP + -0x80;\n        if (7 < *(unaff_EBP + -0x6c)) {\n            iVar3 = *(unaff_EBP + -0x80);\n        }\n        iVar2 = (*_sym.imp.WININET.dll_InternetConnectW)\n                          (*(unaff_EBP + -0x168), iVar3, uVar11, iVar6, iVar2, 1, 0x28000000, 0);\n        *(unaff_EBP + -0x170) = iVar2;\n        if (iVar2 == 0) {\n            (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar1 = 0x3f4;\n            pcVar7 = L\"SupportWrapper.cpp\";\n            uVar11 = fcn.0042c180();\n            fcn.0042c3c0(uVar11, pcVar7, uVar1, 0x800002, \"%s InternetConnect failed %lu\", \"WrapperAPP::FtpUpload()\");\n            fcn.00402aa7(0x80020000);\n        }\n        else {\n            piVar4 = *(unaff_EBP + -0x174);\n            if (7 < piVar4[5]) {\n                piVar4 = *piVar4;\n            }\n            uVar8 = 0x800040;\n            uVar1 = 0x3f9;\n            pcVar7 = L\"SupportWrapper.cpp\";\n            uVar11 = fcn.0042c180(piVar4);\n            fcn.0042c3c0(uVar11, pcVar7, uVar1, uVar8, \"%s Uploading %S to %S\", \"WrapperAPP::FtpUpload()\");\n            iVar6 = fcn.004057ee();\n            if (iVar6 == 0) {\n                fcn.00402aa7(0x80020000);\n            }\n            *(unaff_EBP + -0x58) = 0;\n            *(unaff_EBP + -0x68) = 0;\n            *(unaff_EBP + -0x54) = 7;\n            fcn.00402450(unaff_EBP + -0xf8, 0, 0xffffffff);\n            *(unaff_EBP + -4) = 7;\n            if (*(unaff_EBP + -0x58) != 0) {\n                iVar2 = fcn.004085ca(unaff_EBP + -0x110, *(unaff_EBP + -0x58) + -1, 1);\n                uVar1 = 0x4a10b4;\n                *(unaff_EBP + -4) = 8;\n                uVar11 = fcn.00453054(0x4a10b4);\n                iVar2 = fcn.00409963(uVar1, *(iVar2 + 0x10), 0x4a10b4, uVar11);\n                *(unaff_EBP + -4) = 7;\n                fcn.00402754(1, 0);\n                if (iVar2 != 0) {\n                    uVar11 = fcn.00453054(0x4a10b4);\n                    fcn.0040186c(0x4a10b4, uVar11);\n                }\n                iVar2 = *(unaff_EBP + -0x170);\n                puVar5 = *(unaff_EBP + -0x178);\n            }\n            fcn.004019b5(*(unaff_EBP + -0x174), 0, 0xffffffff);\n            iVar6 = unaff_EBP + -0x68;\n            if (7 < *(unaff_EBP + -0x54)) {\n                iVar6 = *(unaff_EBP + -0x68);\n            }\n            if (7 < puVar5[5]) {\n                puVar5 = *puVar5;\n            }\n            iVar6 = (*_sym.imp.WININET.dll_FtpPutFileW)(iVar2, puVar5, iVar6, 0x802, 0);\n            if (iVar6 == 0) {\n                (*_sym.imp.KERNEL32.dll_GetLastError)();\n                pcVar10 = \"WrapperAPP::FtpUpload()\";\n                pcVar9 = \"%s FtpPutFile %S failed %lu\";\n                uVar1 = 0x40d;\n                pcVar7 = L\"SupportWrapper.cpp\";\n                uVar11 = fcn.0042c180(extraout_ECX_03);\n                fcn.0042c3c0(uVar11, pcVar7, uVar1, 0x800002, pcVar9, pcVar10);\n                fcn.00402aa7(0x80020000);\n                iVar2 = *(unaff_EBP + -0x170);\n            }\n            fcn.00402754(1, 0);\n            (*_sym.imp.WININET.dll_InternetCloseHandle)(iVar2);\n        }\n        (*_sym.imp.WININET.dll_InternetCloseHandle)(*(unaff_EBP + -0x168));\n    }\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 3819
    },
    "004067fe": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: oflag\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.004067fe(void)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    uint extraout_ECX_00;\n    int32_t unaff_EBP;\n    uint var_40h;\n    char16_t *arg_ch;\n    uint arg_10h;\n    uint oflag;\n    char *arg_18h;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    uint uVar2;\n    \n    uVar2 = 0x34;\n    fcn.0045b335();\n    if (*(extraout_ECX + 0x18) != 0) {\n        fcn.0045400a(\"Generate Support Token...\\n\\n\", uVar2);\n        *(unaff_EBP + -0x14) = 7;\n        *(unaff_EBP + -0x18) = 0;\n        *(unaff_EBP + -0x28) = 0;\n        uVar2 = fcn.00453054(L\"https://spnsupport.trendmicro.com/default.aspx?guid=\");\n        fcn.00402667(L\"https://spnsupport.trendmicro.com/default.aspx?guid=\", uVar2);\n        *(unaff_EBP + -4) = 0;\n        uVar2 = fcn.0040fa2c();\n        *(unaff_EBP + -4) = 1;\n        fcn.004019b5(uVar2, 0, 0xffffffff);\n        *(unaff_EBP + -4) = 0;\n        fcn.00402754(1, 0);\n        iVar1 = unaff_EBP + -0x28;\n        if (7 < *(unaff_EBP + -0x14)) {\n            iVar1 = *(unaff_EBP + -0x28);\n        }\n        arg_18h = \"Query Support Token(%S)\";\n        arg_10h = 0x497;\n        arg_ch = L\"SupportWrapper.cpp\";\n        uVar2 = fcn.0042c180(extraout_ECX_00);\n        fcn.0042c3c0(uVar2, arg_ch, arg_10h, 0x800008, arg_18h, iVar1);\n        iVar1 = unaff_EBP + -0x28;\n        if (7 < *(unaff_EBP + -0x14)) {\n            iVar1 = *(unaff_EBP + -0x28);\n        }\n        (*_sym.imp.SHELL32.dll_ShellExecuteW)(0, L\"open\", iVar1, 0, 0, 1);\n        fcn.00402754(1, 0);\n    }\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 662
    },
    "00407744": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl\nfcn.00407744(uint arg_8h, uint noname_1, uint noname_2, uint noname_3, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint arg_34h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_260h;\n    uint var_250h;\n    uint var_24ch;\n    uint var_248h;\n    uint var_238h;\n    uint var_234h;\n    uint var_230h;\n    uint var_220h;\n    uint var_21ch;\n    uint lpBuffer;\n    char16_t *pcVar3;\n    uint uVar4;\n    uint uVar5;\n    char *pcVar6;\n    uint arg_14h;\n    uint var_4h;\n    uint uVar7;\n    \n    uVar7 = 0x254;\n    fcn.0045b335();\n    iVar2 = 1;\n    *(unaff_EBP + -4) = 1;\n    iVar1 = unaff_EBP + 8;\n    if (7 < *(unaff_EBP + 0x1c)) {\n        iVar1 = *(unaff_EBP + 8);\n    }\n    iVar1 = fcn.004558b6(iVar1, 0x4a00e0);\n    if ((iVar1 == 0) || (*(unaff_EBP + 0x18) == 0)) {\n        arg_14h = 0x800004;\n        uVar5 = 0x584;\n        pcVar3 = L\"SupportWrapper.cpp\";\n        uVar4 = fcn.0042c180();\n        fcn.0042c3c0(uVar4, pcVar3, uVar5, arg_14h, \"CFGIP is empty\", uVar7);\n    }\n    else {\n        *(unaff_EBP + -0x21c) = 7;\n        *(unaff_EBP + -0x220) = 0;\n        *(unaff_EBP + -0x230) = 0;\n        uVar7 = fcn.00453054(L\"http://\");\n        fcn.00402667(L\"http://\", uVar7);\n        *(unaff_EBP + -4) = 2;\n        fcn.004019b5(unaff_EBP + 8, 0, 0xffffffff);\n        uVar7 = fcn.00453054(L\":8888/\");\n        fcn.0040186c(L\":8888/\", uVar7);\n        fcn.004019b5(unaff_EBP + 0x20, 0, 0xffffffff);\n        *(unaff_EBP + -0x218) = 0;\n        fcn.00453710(unaff_EBP + -0x216, 0, 0x206);\n        (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)(0x104, unaff_EBP + -0x218);\n        *(unaff_EBP + -0x24c) = 7;\n        *(unaff_EBP + -0x250) = 0;\n        *(unaff_EBP + -0x260) = 0;\n        *(unaff_EBP + -4) = 3;\n        if (*(unaff_EBP + -0x218) == 0) {\n            uVar7 = 0;\n        }\n        else {\n            uVar7 = fcn.00453054(unaff_EBP + -0x218);\n        }\n        fcn.00402667(unaff_EBP + -0x218, uVar7);\n        *(unaff_EBP + -0x248) = 0;\n        *(unaff_EBP + -0x234) = 7;\n        *(unaff_EBP + -0x238) = 0;\n        fcn.00402450(unaff_EBP + -0x260, 0, 0xffffffff);\n        *(unaff_EBP + -4) = 4;\n        uVar7 = fcn.00453054(0x4a078c);\n        fcn.0040186c(0x4a078c, uVar7);\n        fcn.004019b5(unaff_EBP + 0x20, 0, 0xffffffff);\n        iVar1 = unaff_EBP + 0x20;\n        if (7 < *(unaff_EBP + 0x34)) {\n            iVar1 = *(unaff_EBP + 0x20);\n        }\n        pcVar6 = \"%S URL: %S\";\n        uVar5 = 0x800004;\n        uVar4 = 0x596;\n        pcVar3 = L\"SupportWrapper.cpp\";\n        uVar7 = fcn.0042c180();\n        fcn.0042c3c0(uVar7, pcVar3, uVar4, uVar5, pcVar6, iVar1);\n        iVar1 = unaff_EBP + 0x20;\n        if (7 < *(unaff_EBP + 0x34)) {\n            iVar1 = *(unaff_EBP + 0x20);\n        }\n        pcVar6 = \"%S Local path: %S\";\n        uVar5 = 0x800004;\n        uVar4 = 0x597;\n        pcVar3 = L\"SupportWrapper.cpp\";\n        uVar7 = fcn.0042c180();\n        fcn.0042c3c0(uVar7, pcVar3, uVar4, uVar5, pcVar6, iVar1);\n        iVar1 = unaff_EBP + -0x230;\n        if (7 < *(unaff_EBP + -0x21c)) {\n            iVar1 = *(unaff_EBP + -0x230);\n        }\n        (*_sym.imp.WININET.dll_DeleteUrlCacheEntryW)(iVar1);\n        do {\n            iVar1 = (*_sym.imp.urlmon.dll_URLDownloadToFileW)();\n            if ((-1 < iVar1) || (iVar2 == 3)) break;\n            iVar2 = iVar2 + 1;\n            iVar1 = unaff_EBP + 0x20;\n            if (7 < *(unaff_EBP + 0x34)) {\n                iVar1 = *(unaff_EBP + 0x20);\n            }\n            uVar4 = 0x800004;\n            uVar5 = 0x5a5;\n            uVar7 = fcn.0042c180(iVar1);\n            fcn.0042c3c0(uVar7, L\"SupportWrapper.cpp\", uVar5, uVar4, \"Download %S failed(hr=%d); Retry time(%d)\", iVar1)\n            ;\n            (*_sym.imp.KERNEL32.dll_Sleep)();\n        } while (iVar2 < 4);\n        fcn.00402754(1, 0);\n        fcn.00402754(1, 0);\n        fcn.00402754(1, 0);\n    }\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 1625
    },
    "004083c2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004083c2(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t *piVar3;\n    int32_t *arg_8h_01;\n    int32_t iVar4;\n    uint32_t arg_8h_02;\n    int32_t unaff_EBP;\n    uint var_34h;\n    uint var_30h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0045b36b(0x28);\n    *(unaff_EBP + -0x18) = arg_8h_01;\n    *(unaff_EBP + -0x14) = 0;\n    fcn.0040e45b(arg_8h_01, 0);\n    *(unaff_EBP + -4) = 0;\n    if (*(unaff_EBP + -0x20) != '\\0') {\n        arg_8h_00 = fcn.0040e1fb(unaff_EBP + -0x1c);\n        *(unaff_EBP + -4) = 1;\n        piVar3 = fcn.0040c724(arg_8h_00);\n        fcn.0040e226();\n        *(unaff_EBP + -4) = 2;\n        iVar1 = *piVar3;\n        iVar4 = *(*arg_8h_01 + 4) + arg_8h_01;\n        iVar2 = *(iVar4 + 0x38);\n        *(unaff_EBP + -0x28) = 1;\n        *(unaff_EBP + -0x30) = iVar2 == 0;\n        (**(iVar1 + 0x24))(unaff_EBP + -0x34, *(iVar4 + 0x38), *(unaff_EBP + -0x30), 0, *(unaff_EBP + -0x28), iVar4, \n                           unaff_EBP + -0x14, *(unaff_EBP + 8));\n        *(unaff_EBP + -4) = 0;\n    }\n    if (*(unaff_EBP + -0x14) != 0) {\n        arg_8h_02 = *(arg_8h_01 + *(*arg_8h_01 + 4) + 0xc) | *(unaff_EBP + -0x14);\n        if (*(arg_8h_01 + *(*arg_8h_01 + 4) + 0x38) == 0) {\n            arg_8h_02 = arg_8h_02 | 4;\n        }\n        fcn.0040e96e(arg_8h_02, 0);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    piVar3 = *(*(**(unaff_EBP + -0x24) + 4) + 0x38 + *(unaff_EBP + -0x24));\n    if (piVar3 != NULL) {\n        (**(*piVar3 + 8))();\n    }\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 851
    },
    "00408ea8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408ea8(code **param_1)\n\n{\n    code *pcVar1;\n    uint unaff_ESI;\n    \n    *param_1 = vtable.std::basic_filebuf_char__struct_std::char_traits_char__.0;\n    if (param_1[0x14] != NULL) {\n        fcn.00409d6e();\n    }\n    if (*(param_1 + 0x13) != '\\0') {\n        fcn.00409b3a();\n    }\n    pcVar1 = param_1[0xd];\n    *param_1 = vtable.std::basic_streambuf_char__struct_std::char_traits_char__.0;\n    if (pcVar1 != NULL) {\n        fcn.0040e226(unaff_ESI);\n        fcn.00452a07(pcVar1);\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "00409847": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00409847(int16_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *in_ECX;\n    int16_t *piVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int16_t *piVar6;\n    \n    if ((arg_10h != 0) || (in_ECX[4] <= arg_ch && arg_ch != in_ECX[4])) {\n        if ((arg_ch < in_ECX[4]) && (uVar4 = in_ECX[4] - arg_ch,  arg_10h <= uVar4)) {\n            iVar5 = uVar4 + (1 - arg_10h);\n            puVar1 = in_ECX;\n            if (7 < in_ECX[5]) {\n                puVar1 = *in_ECX;\n            }\n            piVar3 = puVar1 + arg_ch * 2;\n            do {\n                if (iVar5 != 0) {\n                    iVar2 = iVar5;\n                    piVar6 = piVar3;\n                    do {\n                        if (*piVar6 == *arg_8h) goto code_r0x004098a7;\n                        piVar6 = piVar6 + 1;\n                        iVar2 = iVar2 + -1;\n                    } while (iVar2 != 0);\n                }\n                piVar6 = NULL;\ncode_r0x004098a7:\n                if (piVar6 == NULL) break;\n                iVar2 = fcn.0040d558(arg_10h);\n                if (iVar2 == 0) {\n                    if (7 < in_ECX[5]) {\n                        in_ECX = *in_ECX;\n                    }\n                    return piVar6 - in_ECX >> 1;\n                }\n                iVar5 = iVar5 + (-1 - (piVar6 - piVar3 >> 1));\n                piVar3 = piVar6 + 1;\n            } while( true );\n        }\n        arg_ch = 0xffffffff;\n    }\n    return arg_ch;\n}\n",
        "token_count": 466
    },
    "0040ab3c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ab3c(uint arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t arg_8h_00;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    if ((*(in_ECX + 0x3c) & 6) != 6) {\n        arg_8h_00 = fcn.004024e3(arg_ch);\n        fcn.0040272f(arg_8h_00, arg_8h, arg_ch);\n        arg_ch = arg_ch * 2;\n        *(in_ECX + 0x38) = arg_ch + arg_8h_00;\n        if ((*(in_ECX + 0x3c) & 4) == 0) {\n            **(in_ECX + 0xc) = arg_8h_00;\n            **(in_ECX + 0x1c) = arg_8h_00;\n            **(in_ECX + 0x2c) = arg_ch >> 1;\n        }\n        if ((*(in_ECX + 0x3c) & 2) == 0) {\n            uVar1 = *(in_ECX + 0x3c);\n            **(in_ECX + 0x10) = arg_8h_00;\n            iVar2 = arg_8h_00;\n            if ((uVar1 & 0x10) != 0) {\n                iVar2 = arg_ch + arg_8h_00;\n            }\n            **(in_ECX + 0x20) = iVar2;\n            **(in_ECX + 0x30) = (arg_ch - iVar2) + arg_8h_00 >> 1;\n            if (**(in_ECX + 0x1c) == 0) {\n                **(in_ECX + 0xc) = arg_8h_00;\n                **(in_ECX + 0x1c) = 0;\n                **(in_ECX + 0x2c) = arg_8h_00 >> 1;\n            }\n        }\n        *(in_ECX + 0x3c) = *(in_ECX + 0x3c) | 1;\n    }\n    return;\n}\n",
        "token_count": 508
    },
    "0040ac03": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0040ac03(uint noname_0, uint ******arg_ch, int32_t arg_10h, uint arg_14h, uint32_t arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int32_t *piVar3;\n    char *pcVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    uint *******pppppppuVar7;\n    char *unaff_EBX;\n    char *pcVar8;\n    uint32_t unaff_EDI;\n    int32_t iVar9;\n    int32_t **in_FS_OFFSET;\n    uint32_t arg_8h;\n    char *pcVar10;\n    uchar *puVar11;\n    int16_t *arg_8h_00;\n    uint32_t arg_8h_01;\n    uint uStack172;\n    uint32_t uStack156;\n    uint uStack152;\n    uint32_t uStack148;\n    uint *******pppppppuStack144;\n    uint uStack140;\n    uint uStack136;\n    uint32_t uStack124;\n    uchar auStack120 [16];\n    int16_t aiStack104 [6];\n    int32_t iStack92;\n    uchar auStack84 [24];\n    uint uStack60;\n    int16_t iStack56;\n    int16_t iStack54;\n    uchar uStack48;\n    uint32_t uStack28;\n    int32_t *piStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0xffffffff;\n    uStack16 = 0x487c85;\n    piStack20 = *in_FS_OFFSET;\n    uStack28 = *0x4b4f00 ^ &uStack156;\n    uStack172 = *0x4b4f00 ^ &stack0xffffff58;\n    *in_FS_OFFSET = &piStack20;\n    pppppppuStack144 = arg_ch;\n    uStack152 = arg_14h;\n    piVar3 = fcn.0040d4bf(arg_1ch);\n    arg_8h_00 = aiStack104;\n    fcn.0040cd3f(arg_8h_00);\n    uStack16 = 0;\n    if (iStack92 == 0) {\n        pppppppuStack144 = NULL;\n    }\n    else {\n        uVar5 = (**(*piVar3 + 0x10))();\n        pppppppuStack144 = uVar5 & 0xffff;\n    }\n    piVar3 = fcn.0040e157(arg_1ch);\n    puVar11 = auStack84;\n    pcVar10 = \"0123456789ABCDEFabcdef-+Xx\";\n    (**(*piVar3 + 0x2c))(\"0123456789ABCDEFabcdef-+Xx\", \"\");\n    cVar1 = fcn.0040caf9(unaff_EDI);\n    if (cVar1 == '\\0') {\n        if (*(arg_10h + 4) == '\\0') {\n            fcn.0040bfba();\n        }\n        if (*(arg_10h + 6) == iStack54) {\n            *unaff_EBX = '+';\n        }\n        else {\n            if (*(arg_10h + 4) == '\\0') {\n                fcn.0040bfba();\n            }\n            if (*(arg_10h + 6) != iStack56) goto code_r0x0040ad09;\n            *unaff_EBX = '-';\n        }\n        unaff_EBX = unaff_EBX + 1;\n        fcn.0040bf93();\n    }\ncode_r0x0040ad09:\n    arg_18h = arg_18h & 0xe00;\n    uStack152 = 10;\n    uVar5 = -(arg_18h != 0) & 10;\n    if (arg_18h == 0x800) {\n        uVar5 = 0x10;\n    }\n    if (arg_18h == 0x400) {\n        uVar5 = 8;\n    }\n    pcVar8 = unaff_EDI & 0xffffff00;\n    arg_8h_01 = arg_8h_00 & 0xffff;\n    arg_8h = uStack172;\n    uStack156 = uVar5;\n    cVar1 = fcn.0040caf9(uStack172);\n    if (cVar1 == '\\0') {\n        if (*(arg_10h + 4) == '\\0') {\n            fcn.0040bfba();\n        }\n        if (*(arg_10h + 6) == aiStack104[0]) {\n            puVar11 = puVar11 & 0xff000000 | CONCAT12(1, puVar11);\n            uStack172 = CONCAT31(uStack172 >> 8, 1);\n            fcn.0040bf93();\n            cVar1 = fcn.0040caf9(arg_8h_01);\n            if (cVar1 == '\\0') {\n                if (*(arg_10h + 4) == '\\0') {\n                    fcn.0040bfba();\n                }\n                if (*(arg_10h + 6) != uStack60._2_2_) {\n                    if (*(arg_10h + 4) == '\\0') {\n                        fcn.0040bfba();\n                    }\n                    if (*(arg_10h + 6) != uStack60) goto code_r0x0040ae18;\n                }\n                if ((uVar5 == 0) || (uVar5 == 0x10)) {\n                    arg_8h_01 = arg_8h_01 & 0xffffff00;\n                    fcn.0040bf93();\n                }\n            }\n        }\n    }\ncode_r0x0040ae18:\n    uStack140 = 0;\n    uStack136 = 0xf;\n    uStack156 = uStack156 & 0xffffff00;\n    fcn.0040d587(1, arg_8h_01);\n    pcVar4 = puVar11 + 0x1f;\n    uStack48 = 1;\n    iVar9 = 0;\n    cVar1 = fcn.0040caf9(pcVar10);\n    if (cVar1 == '\\0') {\n        do {\n            if (*(arg_10h + 4) == '\\0') {\n                fcn.0040bfba();\n            }\n            uVar5 = fcn.0040ca6d(auStack120, *(arg_10h + 6));\n            if (uVar5 < uStack172) {\n                cVar1 = \"0123456789ABCDEFabcdef-+Xx\"[uVar5];\n                *unaff_EBX = cVar1;\n                if (((arg_8h >> 0x18 != '\\0') || (cVar1 != '0')) && (unaff_EBX < pcVar10)) {\n                    unaff_EBX = unaff_EBX + 1;\n                    arg_8h = CONCAT13(1, arg_8h);\n                }\n                pcVar6 = &stack0xffffff58;\n                if (0xf < uStack148) {\n                    pcVar6 = pcVar8;\n                }\n                arg_8h = arg_8h & 0xff000000 | CONCAT12(1, arg_8h);\n                if (pcVar6[iVar9] != '\\x7f') {\n                    pcVar6 = &stack0xffffff58;\n                    if (0xf < uStack148) {\n                        pcVar6 = pcVar8;\n                    }\n                    pcVar6[iVar9] = pcVar6[iVar9] + '\\x01';\n                }\n            }\n            else {\n                pcVar6 = &stack0xffffff58;\n                if (0xf < uStack148) {\n                    pcVar6 = pcVar8;\n                }\n                if ((pcVar6[iVar9] == '\\0') || (iVar2 = puVar11,  iVar2 == 0)) break;\n                if (*(arg_10h + 4) == '\\0') {\n                    fcn.0040bfba();\n                    iVar2 = puVar11;\n                }\n                if (*(arg_10h + 6) != iVar2) break;\n                fcn.0040180b(1, 0);\n                iVar9 = iVar9 + 1;\n            }\n            fcn.0040bf93();\n            cVar1 = fcn.0040caf9(pcVar10);\n        } while (cVar1 == '\\0');\n        if (iVar9 != 0) {\n            pcVar10 = &stack0xffffff58;\n            if (0xf < uStack148) {\n                pcVar10 = pcVar8;\n            }\n            if (pcVar10[iVar9] < '\\x01') {\n                cVar1 = '\\0';\n                goto code_r0x0040af61;\n            }\n            iVar9 = iVar9 + 1;\n        }\n    }\n    cVar1 = arg_8h >> 0x10;\ncode_r0x0040af61:\n    pppppppuVar7 = &pppppppuStack144;\n    if (0xf < uStack124) {\n        pppppppuVar7 = pppppppuStack144;\n    }\n    if (cVar1 != '\\0') {\n        while ((iVar9 != 0 && (*pppppppuVar7 != '\\x7f'))) {\n            iVar9 = iVar9 + -1;\n            if (iVar9 != 0) {\n                pcVar10 = &stack0xffffff58;\n                if (0xf < uStack148) {\n                    pcVar10 = pcVar8;\n                }\n                if (*pppppppuVar7 != pcVar10[iVar9]) goto code_r0x0040afc6;\n            }\n            if (iVar9 == 0) {\n                pcVar10 = &stack0xffffff58;\n                if (0xf < uStack148) {\n                    pcVar10 = pcVar8;\n                }\n                if (*pppppppuVar7 < *pcVar10) goto code_r0x0040afc6;\n            }\n            if ('\\0' < *(pppppppuVar7 + 1)) {\n                pppppppuVar7 = pppppppuVar7 + 1;\n            }\n        }\n        pcVar4 = unaff_EBX;\n        if (arg_8h >> 0x18 == '\\0') {\n            *unaff_EBX = '0';\n            pcVar4 = unaff_EBX + 1;\n        }\n    }\ncode_r0x0040afc6:\n    *pcVar4 = '\\0';\n    fcn.0040230f();\n    fcn.0040230f();\n    *in_FS_OFFSET = uStack60;\n    fcn.004529f8(arg_8h);\n    return;\n}\n",
        "token_count": 2404
    },
    "0040b003": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040b003(uint arg_8h, char *arg_ch, int32_t arg_10h, char *arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    uint8_t uVar1;\n    char *pcVar2;\n    char cVar3;\n    int16_t iVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    int32_t *piVar7;\n    char *pcVar8;\n    char **ppcVar9;\n    char cVar10;\n    char *pcVar11;\n    char *pcVar12;\n    int32_t iVar13;\n    int32_t *in_FS_OFFSET;\n    uchar *arg_8h_00;\n    uint32_t in_stack_ffffff6c;\n    char *pcVar14;\n    uint uStack132;\n    char *pcStack128;\n    uint uStack124;\n    char *pcStack120;\n    char *pcStack116;\n    char *pcStack112;\n    int32_t *piStack108;\n    char *pcStack104;\n    int32_t *piStack100;\n    uint32_t uStack96;\n    char *pcStack88;\n    uchar *puStack84;\n    uchar uStack76;\n    uint32_t uStack68;\n    uint uStack60;\n    uint uStack56;\n    char *pcStack52;\n    uchar auStack40 [4];\n    int32_t iStack36;\n    uint32_t uStack32;\n    uint uStack28;\n    uchar uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    int16_t iStack8;\n    int16_t iStack6;\n    \n    uStack12 = 0xffffffff;\n    uStack16 = 0x487bf3;\n    uStack20 = *in_FS_OFFSET;\n    uStack28 = *0x4b4f00 ^ &stack0xffffff6c;\n    uVar5 = *0x4b4f00 ^ &stack0xffffff60;\n    *in_FS_OFFSET = &stack0xffffffec;\n    pcStack112 = arg_ch;\n    pcStack120 = arg_14h;\n    if ((*(arg_18h + 0x14) & 0x3000) == 0x3000) {\n        fcn.0040b74f(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n        goto code_r0x0040b67c;\n    }\n    arg_8h_00 = &stack0xffffff94;\n    uVar6 = fcn.0040e1fb(arg_8h_00);\n    uStack16 = 0;\n    uStack132 = fcn.0040d4bf(uVar6);\n    uStack16 = 0xffffffff;\n    fcn.0040e226(arg_8h_00, uVar5);\n    fcn.0040cd3f(&stack0xffffffac);\n    uStack20 = 1;\n    uVar6 = fcn.0040e1fb(&stack0xffffff7c);\n    uStack24 = 2;\n    piVar7 = fcn.0040e157(uVar6);\n    uStack24 = 1;\n    fcn.0040e226();\n    (**(*piVar7 + 0x2c))(\"0123456789-+Ee\", \"\", &stack0xffffffbc);\n    pcVar8 = pcStack88;\n    cVar3 = fcn.0040caf9(pcStack88);\n    if (cVar3 == '\\0') {\n        if (*(arg_10h + 4) == '\\0') {\n            fcn.0040bfba();\n        }\n        if (*(arg_10h + 6) == iStack6) {\n            *puStack84 = 0x2b;\n        }\n        else {\n            if (*(arg_10h + 4) == '\\0') {\n                fcn.0040bfba();\n            }\n            if (*(arg_10h + 6) != iStack8) goto code_r0x0040b174;\n            *puStack84 = 0x2d;\n        }\n        arg_ch = puStack84 + 1;\n        pcStack116 = arg_ch;\n        fcn.0040bf93();\n    }\ncode_r0x0040b174:\n    pcStack88 = &stack0xffffffcc;\n    if (0xf < uStack32) {\n        pcStack88 = pcStack52;\n    }\n    pcStack120 = pcStack120 & 0xff00ffff;\n    pcStack104 = NULL;\n    piStack108 = NULL;\n    if ((*pcStack88 == '\\x7f') || (*pcStack88 < '\\x01')) {\n        pcVar14 = pcVar8;\n        cVar3 = fcn.0040caf9(pcVar8);\n        if (cVar3 == '\\0') {\n            do {\n                if (*(arg_10h + 4) == '\\0') {\n                    fcn.0040bfba();\n                }\n                uVar5 = fcn.0040ca6d(&stack0xffffffe0, *(arg_10h + 6));\n                pcVar12 = arg_ch;\n                if (9 < uVar5) break;\n                if (piStack108 < 0x24) {\n                    if ((uVar5 != 0) || (piStack108 != NULL)) {\n                        *arg_ch = \"0123456789-+Ee\"[uVar5];\n                        arg_ch = arg_ch + 1;\n                        piStack108 = piStack108 + 1;\n                    }\n                }\n                else {\n                    pcStack112 = pcStack112 + 1;\n                }\n                uStack124._0_3_ = CONCAT12(1, uStack124);\n                uStack124 = uStack124 & 0xff000000 | uStack124;\n                fcn.0040bf93();\n                pcVar14 = pcVar8;\n                cVar3 = fcn.0040caf9(pcVar8);\n                pcVar12 = arg_ch;\n            } while (cVar3 == '\\0');\n            goto code_r0x0040b3e6;\n        }\n    }\n    else {\n        if (iStack36 == 0) {\n            uStack96 = 0;\n        }\n        else {\n            uStack96 = (**(*piStack100 + 0x10))();\n            uStack96 = uStack96 & 0xffff;\n        }\n        pcVar14 = NULL;\n        uStack60 = 0;\n        uStack76 = 0;\n        uStack56 = 0xf;\n        fcn.0040d587(1, 0);\n        iVar13 = 0;\n        cVar3 = fcn.0040caf9(piStack100);\n        uVar5 = uStack68;\n        pcVar8 = pcStack88;\n        if (cVar3 == '\\0') {\n            do {\n                if (*(arg_10h + 4) == '\\0') {\n                    fcn.0040bfba();\n                }\n                uVar5 = fcn.0040ca6d(&stack0xffffffd8, *(arg_10h + 6));\n                if (uVar5 < 10) {\n                    uStack132._0_3_ = CONCAT12(1, uStack132);\n                    uStack132 = uStack132 & 0xff000000 | uStack132;\n                    if (pcStack116 < 0x24) {\n                        if ((uVar5 != 0) || (pcStack116 != NULL)) {\n                            *arg_ch = \"0123456789-+Ee\"[uVar5];\n                            arg_ch = arg_ch + 1;\n                            pcStack116 = pcStack116 + 1;\n                            pcStack128 = arg_ch;\n                        }\n                    }\n                    else {\n                        pcStack120 = pcStack120 + 1;\n                    }\n                    pcVar8 = &stack0xffffffa8;\n                    if (0xf < uStack68) {\n                        pcVar8 = pcStack88;\n                    }\n                    if (pcVar8[iVar13] != '\\x7f') {\n                        pcVar8 = &stack0xffffffa8;\n                        if (0xf < uStack68) {\n                            pcVar8 = pcStack88;\n                        }\n                        pcVar8[iVar13] = pcVar8[iVar13] + '\\x01';\n                    }\n                }\n                else {\n                    pcVar8 = &stack0xffffffa8;\n                    if (0xf < uStack68) {\n                        pcVar8 = pcStack88;\n                    }\n                    if ((pcVar8[iVar13] == '\\0') || (iVar4 = piStack108,  iVar4 == 0)) break;\n                    if (*(arg_10h + 4) == '\\0') {\n                        fcn.0040bfba();\n                        iVar4 = piStack108;\n                    }\n                    if (*(arg_10h + 6) != iVar4) break;\n                    fcn.0040180b(1, 0);\n                    iVar13 = iVar13 + 1;\n                }\n                fcn.0040bf93();\n                cVar3 = fcn.0040caf9(piStack100);\n            } while (cVar3 == '\\0');\n            uVar5 = uStack68;\n            pcVar8 = pcStack88;\n            if (iVar13 == 0) goto code_r0x0040b308;\n            pcVar12 = &stack0xffffffa8;\n            if (0xf < uStack68) {\n                pcVar12 = pcStack88;\n            }\n            if ('\\0' < pcVar12[iVar13]) {\n                iVar13 = iVar13 + 1;\n                goto code_r0x0040b308;\n            }\ncode_r0x0040b35a:\n            uStack132 = CONCAT13(1, uStack132);\n        }\n        else {\ncode_r0x0040b308:\n            while (iVar13 != 0) {\n                uVar1 = *piStack100;\n                uStack124 = uStack124 & 0xffffff | uVar1 << 0x18;\n                if (uVar1 == 0x7f) break;\n                iVar13 = iVar13 + -1;\n                if (iVar13 != 0) {\n                    pcVar12 = &stack0xffffffa8;\n                    if (0xf < uVar5) {\n                        pcVar12 = pcVar8;\n                    }\n                    uVar5 = uStack68;\n                    if (uVar1 != pcVar12[iVar13]) goto code_r0x0040b35a;\n                }\n                if (iVar13 == 0) {\n                    pcVar12 = &stack0xffffffa8;\n                    if (0xf < uVar5) {\n                        pcVar12 = pcVar8;\n                    }\n                    uVar5 = uStack68;\n                    if (uVar1 < *pcVar12) goto code_r0x0040b35a;\n                }\n                if ('\\0' < *(piStack100 + 1)) {\n                    piStack100 = piStack100 + 1;\n                }\n            }\n        }\n        fcn.0040230f();\n        pcVar8 = pcStack104;\n        pcVar12 = pcStack120;\ncode_r0x0040b3e6:\n        pcStack120 = pcVar12;\n        if ((uStack124._2_1_ != '\\0') && (piStack108 == NULL)) {\n            *arg_ch = '0';\n            arg_ch = arg_ch + 1;\n            pcStack120 = arg_ch;\n        }\n    }\n    in_stack_ffffff6c = 0x40b404;\n    pcVar12 = pcVar8;\n    cVar3 = fcn.0040caf9(pcVar8);\n    if (cVar3 == '\\0') {\n        if (*(arg_10h + 4) == '\\0') {\n            fcn.0040bfba();\n        }\n        in_stack_ffffff6c = 0x40b41d;\n        iVar4 = (**(*piStack108 + 0xc))();\n        if (*(arg_10h + 6) == iVar4) {\n            ppcVar9 = fcn.0045685e();\n            *arg_ch = **ppcVar9;\n            arg_ch = arg_ch + 1;\n            in_stack_ffffff6c = 0x40b43d;\n            uStack124 = arg_ch;\n            fcn.0040bf93();\n        }\n    }\n    if (pcStack112 == NULL) {\n        pcVar12 = pcVar8;\n        cVar3 = fcn.0040caf9(pcVar8);\n        pcVar11 = pcStack120;\n        pcVar2 = pcStack116;\n        while (cVar3 == '\\0') {\n            if (*(arg_10h + 4) == '\\0') {\n                in_stack_ffffff6c = 0x40b465;\n                fcn.0040bfba();\n            }\n            arg_ch = uStack124;\n            pcVar2 = pcVar11;\n            if (*(arg_10h + 6) != iStack36) break;\n            pcVar11 = pcVar11 + -1;\n            pcStack128._0_3_ = CONCAT12(1, pcStack128._0_2_);\n            pcStack128 = pcStack128 & 0xff000000 | pcStack128;\n            in_stack_ffffff6c = 0x40b47d;\n            fcn.0040bf93();\n            pcVar12 = pcVar8;\n            cVar3 = fcn.0040caf9(pcVar8);\n            arg_ch = uStack124;\n            pcVar2 = pcVar11;\n        }\n        pcStack116 = pcVar2;\n        if (pcStack116 < 0) {\n            *arg_ch = '0';\n            arg_ch = arg_ch + 1;\n            pcStack116 = pcStack116 + 1;\n        }\n    }\n    while( true ) {\n        cVar3 = fcn.0040caf9(pcVar8);\n        cVar10 = pcVar12 >> 0x10;\n        if (cVar3 != '\\0') break;\n        if (*(arg_10h + 4) == '\\0') {\n            fcn.0040bfba();\n        }\n        uVar5 = fcn.0040ca6d(&stack0xffffffd8, *(arg_10h + 6));\n        cVar10 = pcVar12 >> 0x10;\n        if (9 < uVar5) break;\n        if (pcStack116 < 0x24) {\n            *arg_ch = \"0123456789-+Ee\"[uVar5];\n            arg_ch = arg_ch + 1;\n            pcStack116 = pcStack116 + 1;\n        }\n        uStack132._0_3_ = CONCAT12(1, uStack132);\n        uStack132 = uStack132 & 0xff000000 | uStack132;\n        fcn.0040bf93();\n    }\n    pcVar12 = arg_ch;\n    if (uStack132._2_1_ != '\\0') {\n        cVar3 = fcn.0040caf9(pcVar8);\n        if (cVar3 == '\\0') {\n            if (*(arg_10h + 4) == '\\0') {\n                fcn.0040bfba();\n            }\n            if (*(arg_10h + 6) != uStack20._2_2_) {\n                if (*(arg_10h + 4) == '\\0') {\n                    fcn.0040bfba();\n                }\n                if (*(arg_10h + 6) != uStack20) goto code_r0x0040b659;\n            }\n            *arg_ch = 'e';\n            pcVar12 = arg_ch + 1;\n            uStack132 = pcVar12;\n            fcn.0040bf93();\n            pcStack116 = NULL;\n            cVar3 = fcn.0040caf9(pcVar8);\n            if (cVar3 == '\\0') {\n                if (*(arg_10h + 4) == '\\0') {\n                    fcn.0040bfba();\n                }\n                if (*(arg_10h + 6) == uStack28._2_2_) {\n                    *pcVar12 = '+';\n                }\n                else {\n                    if (*(arg_10h + 4) == '\\0') {\n                        fcn.0040bfba();\n                    }\n                    if (*(arg_10h + 6) != uStack28) goto code_r0x0040b5b9;\n                    *pcVar12 = '-';\n                }\n                pcVar12 = arg_ch + 2;\n                fcn.0040bf93();\n            }\ncode_r0x0040b5b9:\n            cVar3 = fcn.0040caf9(pcVar8);\n            if (cVar3 == '\\0') {\n                do {\n                    if (*(arg_10h + 4) == '\\0') {\n                        fcn.0040bfba();\n                    }\n                    pcVar12 = pcVar14;\n                    if (*(arg_10h + 6) != pcStack52) break;\n                    cVar10 = '\\x01';\n                    fcn.0040bf93();\n                    cVar3 = fcn.0040caf9(pcVar8);\n                    pcVar12 = pcVar14;\n                } while (cVar3 == '\\0');\n                if (cVar10 != '\\0') {\n                    *pcVar12 = '0';\n                    pcVar12 = pcVar12 + 1;\n                }\n            }\n            while (cVar3 = fcn.0040caf9(pcVar8),  cVar3 == '\\0') {\n                if (*(arg_10h + 4) == '\\0') {\n                    fcn.0040bfba();\n                }\n                uVar5 = fcn.0040ca6d(&stack0xffffffc8, *(arg_10h + 6));\n                if (9 < uVar5) break;\n                if (pcStack128 < 8) {\n                    *pcVar12 = \"0123456789-+Ee\"[uVar5];\n                    pcVar12 = pcVar12 + 1;\n                    pcStack128 = pcStack128 + 1;\n                }\n                in_stack_ffffff6c = in_stack_ffffff6c & 0xff000000 | CONCAT12(1, in_stack_ffffff6c);\n                fcn.0040bf93();\n            }\n        }\ncode_r0x0040b659:\n        uStack132._2_1_ = in_stack_ffffff6c >> 0x10;\n    }\n    if ((in_stack_ffffff6c >> 0x18 != '\\0') || (uStack132._2_1_ == '\\0')) {\n        pcVar12 = pcStack112;\n    }\n    *pcVar12 = '\\0';\n    fcn.0040230f();\ncode_r0x0040b67c:\n    *in_FS_OFFSET = uStack20;\n    fcn.004529f8(in_stack_ffffff6c);\n    return;\n}\n",
        "token_count": 4166
    },
    "0040b69d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b69d(uint arg_8h, uint arg_ch)\n\n{\n    ushort uVar1;\n    int32_t in_ECX;\n    \n    fcn.0040cd56();\n    *(in_ECX + 0x3c) = 0;\n    *(in_ECX + 0x38) = arg_8h;\n    uVar1 = fcn.0040be4e(0x20);\n    *(in_ECX + 0x40) = uVar1;\n    if (*(in_ECX + 0x38) == 0) {\n        fcn.0040e96e(*(in_ECX + 0xc) | 4, 0);\n    }\n    if (arg_ch != '\\0') {\n        fcn.0044e89b(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "0040b74f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040b74f(uint noname_0, uint arg_ch, int32_t arg_10h, ushort *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int16_t iVar3;\n    uint *puVar4;\n    uint uVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    int32_t *piVar8;\n    uint *puVar9;\n    uint32_t uVar10;\n    ushort *puVar11;\n    int32_t iVar12;\n    ushort *puVar13;\n    ushort *puVar14;\n    ushort *puVar15;\n    int32_t *in_FS_OFFSET;\n    ushort *arg_8h;\n    ushort *puVar16;\n    ushort *puVar17;\n    ushort *arg_8h_00;\n    char *pcStack220;\n    uint uStack216;\n    ushort *arg_8h_01;\n    uchar *arg_8h_02;\n    ushort *puVar18;\n    uint8_t *puVar19;\n    int32_t *piStack180;\n    int32_t *piStack176;\n    int32_t *piStack172;\n    ushort *puStack168;\n    ushort auStack164 [2];\n    uint32_t uStack160;\n    uint32_t uStack156;\n    uint32_t uStack152;\n    uint uStack148;\n    int32_t *piStack144;\n    uchar auStack140 [4];\n    uint uStack136;\n    uchar auStack132 [4];\n    int32_t iStack128;\n    uint32_t uStack124;\n    int16_t iStack116;\n    uchar auStack112 [16];\n    int16_t iStack96;\n    int16_t iStack94;\n    int16_t iStack84;\n    int16_t iStack82;\n    int32_t iStack80;\n    int16_t iStack72;\n    int16_t iStack70;\n    int16_t iStack68;\n    int16_t iStack66;\n    uchar uStack56;\n    uchar uStack52;\n    uint32_t uStack28;\n    uchar uStack24;\n    int32_t iStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0xffffffff;\n    uStack16 = 0x487c47;\n    iStack20 = *in_FS_OFFSET;\n    uStack28 = *0x4b4f00 ^ &stack0xffffff4c;\n    puVar4 = *0x4b4f00 ^ &stack0xffffff40;\n    *in_FS_OFFSET = &stack0xffffffec;\n    uStack148 = arg_ch;\n    uStack136 = arg_1ch;\n    puStack168 = arg_14h;\n    uVar5 = fcn.0040e1fb(&stack0xffffff74);\n    uStack16 = 0;\n    uStack148 = fcn.0040d4bf(uVar5);\n    uStack16 = 0xffffffff;\n    fcn.0040e226();\n    arg_8h_02 = &stack0xffffff90;\n    fcn.0040cd3f(arg_8h_02);\n    arg_8h_01 = &stack0xffffff5c;\n    iStack20 = 1;\n    uVar5 = fcn.0040e1fb(arg_8h_01);\n    uStack24 = 2;\n    piVar6 = fcn.0040e157(uVar5);\n    uStack24 = 1;\n    fcn.0040e226();\n    arg_8h = &stack0xffffffa0;\n    uStack216 = \"\";\n    pcStack220 = \"0123456789ABCDEFabcdef-+XxPp\";\n    (**(*piVar6 + 0x2c))();\n    piVar6 = piStack172;\n    arg_8h_00 = arg_14h;\n    cVar2 = fcn.0040caf9(arg_14h);\n    if (cVar2 == '\\0') {\n        if (*(arg_10h + 4) == '\\0') {\n            fcn.0040bfba();\n        }\n        if (*(arg_10h + 6) == iStack66) {\n            *piVar6 = 0x2b;\n        }\n        else {\n            if (*(arg_10h + 4) == '\\0') {\n                fcn.0040bfba();\n            }\n            if (*(arg_10h + 6) != iStack68) goto code_r0x0040b897;\n            *piVar6 = 0x2d;\n        }\n        piVar6 = piVar6 + 1;\n        fcn.0040bf93();\n    }\ncode_r0x0040b897:\n    *piVar6 = 0x7830;\n    puVar14 = piVar6 + 2;\n    puVar11 = arg_8h_02 & 0xffff00ff;\n    puVar18 = NULL;\n    puVar16 = 0x40b8b9;\n    puVar17 = arg_14h;\n    cVar2 = fcn.0040caf9(arg_14h);\n    if (cVar2 == '\\0') {\n        if (*(arg_10h + 4) == '\\0') {\n            puVar16 = 0x40b8c9;\n            fcn.0040bfba();\n        }\n        if (*(arg_10h + 6) == iStack116) {\n            fcn.0040bf93();\n            puVar16 = arg_14h;\n            cVar2 = fcn.0040caf9(arg_14h);\n            if (cVar2 == '\\0') {\n                if (*(arg_10h + 4) == '\\0') {\n                    fcn.0040bfba();\n                }\n                if (*(arg_10h + 6) != iStack70) {\n                    if (*(arg_10h + 4) == '\\0') {\n                        fcn.0040bfba();\n                    }\n                    if (*(arg_10h + 6) != iStack72) goto code_r0x0040b925;\n                }\n                fcn.0040bf93();\n            }\n            else {\ncode_r0x0040b925:\n                arg_8h = arg_8h & 0xffff0000 | CONCAT11(1, arg_8h);\n            }\n        }\n    }\n    piVar6 = &stack0xffffff70;\n    if (0xf < uStack124) {\n        piVar6 = piStack144;\n    }\n    if ((*piVar6 == '\\x7f') || (*piVar6 < '\\x01')) {\n        puVar13 = arg_14h;\n        cVar2 = fcn.0040caf9(arg_14h);\n        puVar15 = arg_8h;\n        while (arg_8h = puVar13,  cVar2 == '\\0') {\n            if (*(arg_10h + 4) == '\\0') {\n                fcn.0040bfba();\n            }\n            uVar7 = fcn.0040ca6d(&stack0xffffff84, *(arg_10h + 6));\n            puVar18 = puVar14;\n            if (0x15 < uVar7) break;\n            if (puVar11 < 0x24) {\n                if ((uVar7 != 0) || (puVar11 != NULL)) {\n                    *puVar14 = \"0123456789ABCDEFabcdef-+XxPp\"[uVar7];\n                    puVar14 = puVar14 + 1;\n                    puVar11 = puVar11 + 1;\n                }\n            }\n            else {\n                puVar15 = puVar15 + 1;\n            }\n            uStack216._0_2_ = CONCAT11(1, uStack216);\n            uStack216 = uStack216 & 0xffff0000 | uStack216;\n            fcn.0040bf93();\n            puVar13 = arg_14h;\n            cVar2 = fcn.0040caf9(arg_14h);\n            puVar18 = puVar14;\n        }\n    }\n    else {\n        if (iStack128 == 0) {\n            puVar19 = NULL;\n            arg_14h = arg_8h_01;\n        }\n        else {\n            uVar7 = (**(*piStack180 + 0x10))();\n            puVar19 = uVar7 & 0xffff;\n            arg_14h = arg_8h_01;\n        }\n        uStack152 = 0;\n        uStack148 = 0xf;\n        puStack168 = puStack168 & 0xffffff00;\n        fcn.0040d587(1, 0);\n        uStack56 = 3;\n        iVar12 = 0;\n        puVar15 = arg_8h;\n        cVar2 = fcn.0040caf9(arg_8h);\n        if (cVar2 == '\\0') {\n            do {\n                if (*(arg_10h + 4) == '\\0') {\n                    fcn.0040bfba();\n                }\n                uVar7 = fcn.0040ca6d(&stack0xffffff84, *(arg_10h + 6));\n                if (uVar7 < 0x16) {\n                    uStack216._0_2_ = CONCAT11(1, uStack216);\n                    uStack216 = uStack216 & 0xffff0000 | uStack216;\n                    if (puVar11 < 0x24) {\n                        if ((uVar7 != 0) || (puVar11 != NULL)) {\n                            *puVar14 = \"0123456789ABCDEFabcdef-+XxPp\"[uVar7];\n                            puVar14 = puVar14 + 1;\n                            puVar11 = puVar11 + 1;\n                            puVar18 = puVar14;\n                        }\n                    }\n                    else {\n                        puVar15 = puVar15 + 1;\n                    }\n                    piVar8 = &stack0xffffff54;\n                    if (0xf < uStack152) {\n                        piVar8 = piStack172;\n                    }\n                    arg_8h = arg_14h;\n                    if (*(piVar8 + iVar12) != '\\x7f') {\n                        piVar8 = &stack0xffffff54;\n                        if (0xf < uStack152) {\n                            piVar8 = piStack172;\n                        }\n                        *(piVar8 + iVar12) = *(piVar8 + iVar12) + '\\x01';\n                    }\n                }\n                else {\n                    piVar8 = &stack0xffffff54;\n                    if (0xf < uStack152) {\n                        piVar8 = piStack172;\n                    }\n                    uStack160 = uStack152;\n                    piStack180 = piStack172;\n                    if ((*(piVar8 + iVar12) == '\\0') || (iVar3 = puVar4,  iVar3 == 0)) break;\n                    if (*(arg_10h + 4) == '\\0') {\n                        fcn.0040bfba();\n                    }\n                    uStack160 = uStack152;\n                    piStack180 = piStack172;\n                    if (*(arg_10h + 6) != iVar3) break;\n                    fcn.0040180b(1, 0);\n                    iVar12 = iVar12 + 1;\n                    arg_8h = arg_14h;\n                }\n                fcn.0040bf93();\n                arg_14h = arg_8h;\n                cVar2 = fcn.0040caf9(arg_8h);\n                uStack160 = uStack156;\n                piStack180 = piStack176;\n            } while (cVar2 == '\\0');\n            if (iVar12 == 0) goto code_r0x0040bab3;\n            piVar8 = &stack0xffffff54;\n            if (0xf < uStack160) {\n                piVar8 = piStack180;\n            }\n            if ('\\0' < *(piVar8 + iVar12)) {\n                iVar12 = iVar12 + 1;\n                goto code_r0x0040bab3;\n            }\ncode_r0x0040bb05:\n            uStack216._0_3_ = CONCAT12(1, uStack216);\n            uStack216 = uStack216 & 0xff000000 | uStack216;\n        }\n        else {\ncode_r0x0040bab3:\n            while (iVar12 != 0) {\n                uVar1 = *puVar19;\n                uStack216 = uStack216 & 0xffffff | uVar1 << 0x18;\n                if (uVar1 == 0x7f) break;\n                iVar12 = iVar12 + -1;\n                if (iVar12 != 0) {\n                    piVar8 = &stack0xffffff54;\n                    if (0xf < uStack160) {\n                        piVar8 = piStack180;\n                    }\n                    uStack160 = uStack152;\n                    if (uVar1 != *(piVar8 + iVar12)) goto code_r0x0040bb05;\n                }\n                if (iVar12 == 0) {\n                    piVar8 = &stack0xffffff54;\n                    if (0xf < uStack160) {\n                        piVar8 = piStack180;\n                    }\n                    uStack160 = uStack152;\n                    if (uVar1 < *piVar8) goto code_r0x0040bb05;\n                }\n                if ('\\0' < puVar19[1]) {\n                    puVar19 = puVar19 + 1;\n                }\n            }\n        }\n        uStack52 = 1;\n        fcn.0040230f();\n        arg_8h_01 = arg_14h;\n    }\n    if ((uStack216._1_1_ != '\\0') && (puVar11 == NULL)) {\n        *puVar14 = 0x30;\n        puVar14 = puVar14 + 1;\n        puVar18 = puVar14;\n    }\n    cVar2 = fcn.0040caf9(arg_14h);\n    if (cVar2 == '\\0') {\n        if (*(arg_10h + 4) == '\\0') {\n            fcn.0040bfba();\n        }\n        iVar3 = (**(*piVar6 + 0xc))();\n        if (*(arg_10h + 6) == iVar3) {\n            puVar9 = fcn.0045685e();\n            *puVar14 = **puVar9;\n            puVar14 = puVar14 + 1;\n            puVar11 = puVar14;\n            fcn.0040bf93();\n        }\n    }\n    if (arg_8h_01 == NULL) {\n        cVar2 = fcn.0040caf9(arg_14h);\n        if (cVar2 == '\\0') {\n            uStack216 = \"0123456789ABCDEFabcdef-+XxPp\";\n            puVar14 = puVar11;\n            do {\n                if (*(arg_10h + 4) == '\\0') {\n                    fcn.0040bfba();\n                }\n                if (*(arg_10h + 6) != iStack128) break;\n                uStack216 = uStack216 + -1;\n                pcStack220._0_2_ = CONCAT11(1, pcStack220._0_1_);\n                pcStack220 = pcStack220 & 0xffff0000 | pcStack220;\n                fcn.0040bf93();\n                cVar2 = fcn.0040caf9(arg_14h);\n            } while (cVar2 == '\\0');\n        }\n        if (uStack216 < 0) {\n            *puVar14 = 0x30;\n            puVar14 = puVar14 + 1;\n        }\n    }\n    while (puVar11 = arg_14h,  cVar2 = fcn.0040caf9(arg_14h),  cVar2 == '\\0') {\n        if (*(arg_10h + 4) == '\\0') {\n            fcn.0040bfba();\n        }\n        uVar7 = fcn.0040ca6d(&stack0xffffff7c, *(arg_10h + 6));\n        if (0x15 < uVar7) break;\n        if (puVar15 < 0x24) {\n            *puVar14 = \"0123456789ABCDEFabcdef-+XxPp\"[uVar7];\n            puVar14 = puVar14 + 1;\n            puVar15 = puVar15 + 1;\n        }\n        arg_8h_00 = arg_8h_00 & 0xffff0000 | CONCAT11(1, arg_8h_00);\n        fcn.0040bf93();\n    }\n    cVar2 = arg_8h_00 >> 8;\n    puVar15 = puVar14;\n    if (cVar2 == '\\0') goto code_r0x0040be03;\n    cVar2 = fcn.0040caf9(arg_14h);\n    if (cVar2 == '\\0') {\n        if (*(arg_10h + 4) == '\\0') {\n            fcn.0040bfba();\n        }\n        if (*(arg_10h + 6) != iStack82) {\n            if (*(arg_10h + 4) == '\\0') {\n                fcn.0040bfba();\n            }\n            if (*(arg_10h + 6) != iStack84) goto code_r0x0040bdff;\n        }\n        *puVar14 = 0x70;\n        puVar15 = puVar14 + 1;\n        fcn.0040bf93();\n        puVar13 = NULL;\n        uVar7 = puVar17 & 0xffff00ff;\n        cVar2 = fcn.0040caf9(pcStack220);\n        if (cVar2 == '\\0') {\n            if (*(arg_10h + 4) == '\\0') {\n                fcn.0040bfba();\n            }\n            if (*(arg_10h + 6) == iStack94) {\n                *puVar15 = 0x2b;\n            }\n            else {\n                if (*(arg_10h + 4) == '\\0') {\n                    fcn.0040bfba();\n                }\n                if (*(arg_10h + 6) != iStack96) goto code_r0x0040bd5f;\n                *puVar15 = 0x2d;\n            }\n            puVar15 = puVar14 + 1;\n            fcn.0040bf93();\n        }\ncode_r0x0040bd5f:\n        cVar2 = fcn.0040caf9(arg_8h_00);\n        uVar10 = uVar7;\n        if (cVar2 == '\\0') {\n            do {\n                if (*(arg_10h + 4) == '\\0') {\n                    fcn.0040bfba();\n                }\n                puVar13 = puVar18;\n                if (*(arg_10h + 6) != piStack144) break;\n                arg_8h = arg_8h & 0xffff0000 | 0x100;\n                fcn.0040bf93();\n                cVar2 = fcn.0040caf9(uVar7);\n                puVar13 = puVar18;\n            } while (cVar2 == '\\0');\n            uVar7 = uVar10;\n            if (arg_8h >> 8 != '\\0') {\n                *puVar15 = 0x30;\n                puVar15 = puVar15 + 1;\n            }\n        }\n        while (cVar2 = fcn.0040caf9(uVar7),  cVar2 == '\\0') {\n            if (*(arg_10h + 4) == '\\0') {\n                fcn.0040bfba();\n            }\n            uVar10 = fcn.0040ca6d(&stack0xffffff6c, *(arg_10h + 6));\n            if (0x15 < uVar10) break;\n            if (puVar13 < 8) {\n                *puVar15 = \"0123456789ABCDEFabcdef-+XxPp\"[uVar10];\n                puVar15 = puVar15 + 1;\n                puVar13 = puVar13 + 1;\n            }\n            puVar11 = puVar11 & 0xffff0000 | CONCAT11(1, puVar11);\n            fcn.0040bf93();\n        }\n    }\ncode_r0x0040bdff:\n    cVar2 = arg_8h >> 8;\ncode_r0x0040be03:\n    if ((arg_8h >> 0x10 != '\\0') || (cVar2 == '\\0')) {\n        puVar15 = arg_8h_01;\n    }\n    *puVar15 = 0;\n    *puVar4 = puVar16;\n    fcn.0040230f();\n    *in_FS_OFFSET = iStack80;\n    fcn.004529f8(puVar11);\n    return;\n}\n",
        "token_count": 4632
    },
    "0040be8e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040be8e(int32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    \n    cVar1 = *(arg_8h + 0xd);\n    while (cVar1 == '\\0') {\n        fcn.0040be8e(arg_8h[2]);\n        piVar2 = *arg_8h;\n        if (arg_8h[6] != 0) {\n            fcn.0040cd13();\n        }\n        fcn.00452a07(arg_8h);\n        arg_8h = piVar2;\n        cVar1 = *(piVar2 + 0xd);\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "0040becf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040becf(int32_t *arg_8h)\n\n{\n    int32_t **ppiVar1;\n    int32_t **ppiVar2;\n    int32_t *in_ECX;\n    \n    ppiVar1 = arg_8h[2];\n    arg_8h[2] = *ppiVar1;\n    if (*(*ppiVar1 + 0xd) == '\\0') {\n        *(*ppiVar1 + 4) = arg_8h;\n    }\n    ppiVar1[1] = arg_8h[1];\n    if (arg_8h == *(*in_ECX + 4)) {\n        *(*in_ECX + 4) = ppiVar1;\n    }\n    else {\n        ppiVar2 = arg_8h[1];\n        if (arg_8h == *ppiVar2) {\n            *ppiVar2 = ppiVar1;\n        }\n        else {\n            ppiVar2[2] = ppiVar1;\n        }\n    }\n    *ppiVar1 = arg_8h;\n    arg_8h[1] = ppiVar1;\n    return;\n}\n",
        "token_count": 253
    },
    "0040bf13": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bf13(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *in_ECX;\n    \n    iVar1 = *arg_8h;\n    *arg_8h = *(iVar1 + 8);\n    if (*(*(iVar1 + 8) + 0xd) == '\\0') {\n        *(*(iVar1 + 8) + 4) = arg_8h;\n    }\n    *(iVar1 + 4) = arg_8h[1];\n    if (arg_8h == *(*in_ECX + 4)) {\n        *(*in_ECX + 4) = iVar1;\n    }\n    else {\n        piVar2 = arg_8h[1];\n        if (arg_8h == piVar2[2]) {\n            piVar2[2] = iVar1;\n        }\n        else {\n            *piVar2 = iVar1;\n        }\n    }\n    *(iVar1 + 8) = arg_8h;\n    arg_8h[1] = iVar1;\n    return;\n}\n",
        "token_count": 249
    },
    "0040bf59": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t ** __fastcall fcn.0040bf59(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar2 = *param_1;\n    if (*(piVar2 + 0xd) == '\\0') {\n        piVar1 = piVar2[2];\n        if (*(piVar2[2] + 0xd) == '\\0') {\n            do {\n                piVar2 = piVar1;\n                piVar1 = *piVar2;\n            } while (*(piVar1 + 0xd) == '\\0');\n            *param_1 = piVar2;\n        }\n        else {\n            while ((piVar2 = piVar2[1],  *(piVar2 + 0xd) == '\\0' && (*param_1 == piVar2[2]))) {\n                *param_1 = piVar2;\n            }\n            *param_1 = piVar2;\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 224
    },
    "0040c525": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0040c525(void)\n\n{\n    uint32_t uVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *arg_8h;\n    int16_t *arg_8h_00;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t unaff_EBP;\n    ulong uVar7;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_4h;\n    \n    fcn.0045b36b(0x2c);\n    *(unaff_EBP + -0x30) = arg_8h_00;\n    *(unaff_EBP + -0x28) = arg_8h;\n    uVar6 = 0;\n    *(unaff_EBP + -0x2c) = 0;\n    if (*arg_8h_00 == 0) {\n        uVar5 = 0;\n        *(unaff_EBP + -0x24) = 0;\n    }\n    else {\n        uVar5 = fcn.00453054(arg_8h_00);\n        *(unaff_EBP + -0x24) = uVar5;\n    }\n    uVar1 = *(*(*arg_8h + 4) + 0x20 + arg_8h);\n    iVar4 = *(*(*arg_8h + 4) + 0x24 + arg_8h);\n    if ((iVar4 < 0) || ((iVar4 < 1 && (((uVar1 == 0 || (iVar4 < 0)) || ((iVar4 < 1 && (uVar1 <= uVar5)))))))) {\n        *(unaff_EBP + -0x1c) = 0;\n        *(unaff_EBP + -0x20) = *(unaff_EBP + -0x18);\n        iVar3 = *(unaff_EBP + -0x1c);\n    }\n    else {\n        iVar3 = uVar1 - uVar5;\n        *(unaff_EBP + -0x20) = iVar4 - (uVar1 < uVar5);\n    }\n    *(unaff_EBP + -0x18) = iVar3;\n    fcn.0040e5a1(arg_8h);\n    *(unaff_EBP + -4) = 0;\n    if (*(unaff_EBP + -0x34) == '\\0') {\n        uVar6 = 4;\n        goto code_r0x0040c6d0;\n    }\n    *(unaff_EBP + -4) = 1;\n    if ((*(*(*arg_8h + 4) + 0x14 + arg_8h) & 0x1c0) == 0x40) {\ncode_r0x0040c608:\n        uVar7 = (**(**(*(*arg_8h + 4) + 0x38 + arg_8h) + 0x24))(*(unaff_EBP + -0x30), *(unaff_EBP + -0x24), 0);\n        if ((uVar7 == *(unaff_EBP + -0x24)) && (uVar7 >> 0x20 == 0)) {\n            iVar4 = *(unaff_EBP + -0x18);\n            iVar3 = *(unaff_EBP + -0x20);\n            while( true ) {\n                if ((iVar3 < 0) || ((iVar3 < 1 && (iVar4 == 0)))) goto code_r0x0040c68a;\n                iVar2 = fcn.0040e49e(*(*(*arg_8h + 4) + 0x40 + arg_8h));\n                if (iVar2 == -1) break;\n                iVar4 = *(unaff_EBP + -0x18) + -1;\n                iVar3 = *(unaff_EBP + -0x20) + -1 + (*(unaff_EBP + -0x18) != 0);\n                *(unaff_EBP + -0x18) = iVar4;\n                *(unaff_EBP + -0x20) = iVar3;\n            }\n            uVar6 = 4;\n        }\n        else {\n            uVar6 = 4;\n        }\n    }\n    else {\n        iVar4 = *(unaff_EBP + -0x18);\n        iVar3 = *(unaff_EBP + -0x20);\n        while( true ) {\n            if ((iVar3 < 0) || ((iVar3 < 1 && (iVar4 == 0)))) goto code_r0x0040c600;\n            iVar2 = fcn.0040e49e(*(*(*arg_8h + 4) + 0x40 + arg_8h));\n            if (iVar2 == -1) break;\n            iVar4 = *(unaff_EBP + -0x18) + -1;\n            iVar3 = *(unaff_EBP + -0x20) + -1 + (*(unaff_EBP + -0x18) != 0);\n            *(unaff_EBP + -0x18) = iVar4;\n            *(unaff_EBP + -0x20) = iVar3;\n        }\n        uVar6 = 4;\n        *(unaff_EBP + -0x2c) = 4;\ncode_r0x0040c600:\n        if (uVar6 == 0) goto code_r0x0040c608;\n    }\ncode_r0x0040c68a:\n    iVar4 = *(*arg_8h + 4);\n    *(iVar4 + 0x20 + arg_8h) = 0;\n    *(iVar4 + 0x24 + arg_8h) = 0;\n    *(unaff_EBP + -4) = 0;\ncode_r0x0040c6d0:\n    if (uVar6 != 0) {\n        uVar6 = *(arg_8h + *(*arg_8h + 4) + 0xc) | uVar6;\n        if (*(arg_8h + *(*arg_8h + 4) + 0x38) == 0) {\n            uVar6 = uVar6 | 4;\n        }\n        fcn.0040e96e(uVar6, 0);\n    }\n    fcn.0040e660();\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 1482
    },
    "0040c856": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c856(uint arg_8h, uint ****arg_ch, uint32_t arg_10h, uint16_t *arg_14h)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint ****ppppuVar4;\n    uchar uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t unaff_EBX;\n    uint unaff_ESI;\n    uint32_t **in_FS_OFFSET;\n    uint32_t uVar8;\n    uint uVar9;\n    uint32_t uStack84;\n    uint32_t uStack80;\n    uint32_t uStack76;\n    uint32_t uStack72;\n    uint32_t uStack68;\n    uint ****ppppuStack64;\n    uint ****appppuStack60 [2];\n    uchar uStack52;\n    uint32_t uStack44;\n    uint32_t uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint32_t *puStack28;\n    uint32_t *puStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0xffffffff;\n    uStack16 = 0x486f69;\n    puStack20 = *in_FS_OFFSET;\n    puStack28 = *0x4b4f00 ^ &uStack84;\n    uVar3 = *0x4b4f00 ^ &stack0xffffffa0;\n    *in_FS_OFFSET = &puStack20;\n    uStack72 = arg_8h;\n    appppuStack60[0] = arg_ch;\n    iVar6 = 0;\n    uVar2 = *arg_14h;\n    while (uVar2 != 0) {\n        if (uVar2 == *arg_14h) {\n            arg_10h = arg_10h + 1;\n        }\n        iVar6 = iVar6 + 1;\n        uVar2 = arg_14h[iVar6];\n    }\n    uStack36 = 0;\n    uVar9 = 0;\n    uStack32 = 0xf;\n    uStack52 = 0;\n    uVar8 = arg_10h;\n    fcn.0040d587(arg_10h, 0);\n    puStack20 = NULL;\n    uVar7 = 1;\n    uStack72 = 0xfffffffe;\n    uStack84 = 1;\n    while( true ) {\n        iVar6 = 0;\n        unaff_EBX = unaff_EBX & 0xffffff;\n        uStack76 = 0;\n        if (arg_10h == 0) break;\n        do {\n            uVar2 = arg_14h[iVar6];\n            if (uVar2 != 0) {\n                ppppuStack64 = *arg_14h;\n                do {\n                    uVar7 = uStack84;\n                    if (uVar2 == *arg_14h) break;\n                    iVar6 = iVar6 + 1;\n                    uVar2 = arg_14h[iVar6];\n                } while (uVar2 != 0);\n            }\n            ppppuVar4 = appppuStack60;\n            if (0xf < uStack40) {\n                ppppuVar4 = appppuStack60[0];\n            }\n            if (*(ppppuVar4 + uStack76) == '\\0') {\n                iVar6 = iVar6 + uVar7;\n                if ((arg_14h[iVar6] == *arg_14h) || (arg_14h[iVar6] == 0)) {\n                    ppppuVar4 = appppuStack60;\n                    if (0xf < uStack40) {\n                        ppppuVar4 = appppuStack60[0];\n                    }\n                    uVar5 = 0x7f;\n                    if (uStack84 < 0x7f) {\n                        uVar5 = uStack84;\n                    }\n                    *(ppppuVar4 + uStack76) = uVar5;\n                    uStack72 = uStack76;\n                    goto code_r0x0040ca22;\n                }\n                cVar1 = fcn.0040caf9(uStack68);\n                if (cVar1 != '\\0') {\ncode_r0x0040c9cc:\n                    ppppuVar4 = &ppppuStack64;\n                    if (0xf < uStack44) {\n                        ppppuVar4 = ppppuStack64;\n                    }\n                    uVar5 = 0x7f;\n                    if (unaff_EBX < 0x7f) {\n                        uVar5 = unaff_EBX;\n                    }\n                    *(ppppuVar4 + uStack80) = uVar5;\n                    uStack76 = uStack80;\n                    goto code_r0x0040ca22;\n                }\n                if (*(uStack84 + 4) == '\\0') {\n                    fcn.0040bfba();\n                }\n                if (arg_14h[iVar6] != *(uStack84 + 6)) goto code_r0x0040c9cc;\n                cVar1 = '\\x01';\n                unaff_ESI = CONCAT13(1, unaff_ESI);\n                uStack76 = uStack80;\n            }\n            else {\n                ppppuVar4 = appppuStack60;\n                if (0xf < uStack40) {\n                    ppppuVar4 = appppuStack60[0];\n                }\n                iVar6 = iVar6 + *(ppppuVar4 + uStack76);\ncode_r0x0040ca22:\n                cVar1 = unaff_EBX >> 0x18;\n            }\n            uStack76 = uStack76 + 1;\n            uVar7 = uStack84;\n        } while (uStack76 < arg_10h);\n        if ((cVar1 == '\\0') || (uVar8 = uStack68,  cVar1 = fcn.0040caf9(uStack68),  cVar1 != '\\0')) break;\n        uVar7 = unaff_EBX + 1;\n        fcn.0040bf93();\n        unaff_EBX = uVar7;\n    }\n    fcn.0040230f(uVar8, uVar9, uVar3);\n    *in_FS_OFFSET = puStack28;\n    fcn.004529f8(unaff_ESI);\n    return;\n}\n",
        "token_count": 1398
    },
    "0040caf9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040caf9(int32_t *arg_8h)\n\n{\n    int32_t *in_ECX;\n    \n    if (*(in_ECX + 1) == '\\0') {\n        fcn.0040bfba();\n    }\n    if (*(arg_8h + 1) == '\\0') {\n        fcn.0040bfba();\n    }\n    if (*in_ECX == 0) {\n        if (*arg_8h != 0) {\n            return 0;\n        }\n    }\n    else if (*arg_8h == 0) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 142
    },
    "0040d04c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d04c(uint arg_8h, uint arg_ch)\n\n{\n    uchar uVar1;\n    int32_t in_ECX;\n    \n    fcn.0040cd56();\n    *(in_ECX + 0x3c) = 0;\n    *(in_ECX + 0x38) = arg_8h;\n    uVar1 = fcn.0040d00c(0x20);\n    *(in_ECX + 0x40) = uVar1;\n    if (*(in_ECX + 0x38) == 0) {\n        fcn.0040e96e(*(in_ECX + 0xc) | 4, 0);\n    }\n    if (arg_ch != '\\0') {\n        fcn.0044e89b(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "0040dd57": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040dd57(code **param_1)\n\n{\n    *param_1 = vtable.std::ctype_wchar_t_.0;\n    if (param_1[4] != NULL) {\n        fcn.00455f3f(param_1[3]);\n    }\n    fcn.00455f3f(param_1[5]);\n    *param_1 = vtable.std::_Facet_base.0;\n    return;\n}\n",
        "token_count": 100
    },
    "0040df29": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0040df29(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b4f00 ^ &stack0xfffffffc;\n    var_10h = 0;\n    fcn.0044eeef(&var_ch, arg_8h, &var_10h, in_ECX + 0x18);\n    fcn.004529f8(var_10h);\n    return;\n}\n",
        "token_count": 147
    },
    "0040e2be": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040e2be(int32_t param_1)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    uint16_t **ppuVar3;\n    int32_t iVar4;\n    \n    iVar4 = 0;\n    if (**(param_1 + 0x1c) != 0) {\n        iVar4 = **(param_1 + 0x2c);\n    }\n    if (iVar4 < 2) {\n        ppuVar3 = fcn.0040e267();\n        uVar2 = 0xffff;\n        if (ppuVar3 != -1) {\n            ppuVar3 = fcn.0040e29b();\n            uVar2 = ppuVar3;\n        }\n    }\n    else {\n        **(param_1 + 0x2c) = **(param_1 + 0x2c) + -1;\n        ppuVar3 = *(param_1 + 0x1c);\n        puVar1 = *ppuVar3;\n        *ppuVar3 = puVar1 + 1;\n        uVar2 = puVar1[1];\n    }\n    return ppuVar3 & 0xffff0000 | uVar2;\n}\n",
        "token_count": 281
    },
    "0040e327": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040e327(uint arg_8h)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    uint arg_8h_00;\n    int32_t *piVar3;\n    int32_t *extraout_ECX;\n    int32_t iVar4;\n    uint32_t arg_8h_01;\n    uint32_t uVar5;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0045b36b(8);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    iVar4 = *(*extraout_ECX + 4) + extraout_ECX;\n    if (*(iVar4 + 0xc) == 0) {\n        if (*(iVar4 + 0x3c) != 0) {\n            fcn.0040e68d();\n        }\n        if ((*(unaff_EBP + 8) == '\\0') && ((*(extraout_ECX + *(*extraout_ECX + 4) + 0x14) & 1) != 0)) {\n            arg_8h_00 = fcn.0040e1fb(unaff_EBP + 8);\n            *(unaff_EBP + -4) = 0;\n            piVar3 = fcn.0040e157(arg_8h_00);\n            fcn.0040e226();\n            *(unaff_EBP + -4) = 1;\n            iVar2 = fcn.0040e29b();\n            while (iVar2 != -1) {\n                cVar1 = (**(*piVar3 + 0x10))(0x48, iVar2);\n                if (cVar1 == '\\0') goto code_r0x0040e422;\n                iVar2 = fcn.0040e2be();\n            }\n            uVar5 = *(extraout_ECX + *(*extraout_ECX + 4) + 0xc);\n            arg_8h_01 = uVar5 | 1;\n            if (*(extraout_ECX + *(*extraout_ECX + 4) + 0x38) == 0) {\n                arg_8h_01 = uVar5 | 5;\n            }\n            fcn.0040e96e(arg_8h_01, 0);\ncode_r0x0040e422:\n            *(unaff_EBP + -4) = 0xffffffff;\n        }\n        iVar4 = *(*extraout_ECX + 4) + extraout_ECX;\n        if (*(iVar4 + 0xc) == 0) goto code_r0x0040e453;\n    }\n    uVar5 = *(iVar4 + 0xc) | 2;\n    if (*(iVar4 + 0x38) == 0) {\n        uVar5 = *(iVar4 + 0xc) | 6;\n    }\n    fcn.0040e96e(uVar5, 0);\ncode_r0x0040e453:\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 694
    },
    "0040e4d9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0040e4d9(void)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h;\n    uint32_t uVar3;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_4h;\n    \n    fcn.0045b36b(0x18);\n    *(unaff_EBP + -0x18) = arg_8h;\n    fcn.0040e5a1(arg_8h);\n    *(unaff_EBP + -4) = 0;\n    if (*(unaff_EBP + -0x20) == '\\0') {\n        uVar3 = 4;\n    }\n    else {\n        *(unaff_EBP + -4) = 1;\n        iVar1 = fcn.0040e49e(10);\n        uVar3 = 0;\n        if (iVar1 == -1) {\n            uVar3 = 4;\n        }\n        *(unaff_EBP + -4) = 0;\n    }\n    iVar2 = *(*arg_8h + 4) + arg_8h;\n    *(unaff_EBP + -0x1c) = iVar2;\n    if (uVar3 != 0) {\n        uVar3 = *(iVar2 + 0xc) | uVar3;\n        if (*(*(unaff_EBP + -0x1c) + 0x38) == 0) {\n            uVar3 = uVar3 | 4;\n        }\n        fcn.0040e96e(uVar3, 0);\n    }\n    fcn.0040e660();\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 419
    },
    "0040e5a1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e5a1(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0045b302(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    piVar1 = *(unaff_EBP + 8);\n    *extraout_ECX = piVar1;\n    piVar2 = *(*(*piVar1 + 4) + 0x38 + piVar1);\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 4))();\n    }\n    *(unaff_EBP + -4) = 0;\n    if ((*(*(*piVar1 + 4) + 0xc + piVar1) == 0) && (*(*(*piVar1 + 4) + 0x3c + piVar1) != 0)) {\n        fcn.0040e68d();\n    }\n    *(extraout_ECX + 1) = *(*(*piVar1 + 4) + 0xc + piVar1) == 0;\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 299
    },
    "00453c86": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00453c86(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != '\\0') {\n        fcn.00455f3f(*(param_1 + 4));\n    }\n    *(param_1 + 4) = 0;\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 83
    },
    "0040e96e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e96e(uint32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    char *arg_8h_00;\n    uint *arg_ch_00;\n    uint uStack36;\n    uint uStack32;\n    \n    *(in_ECX + 0xc) = arg_8h & 0x17;\n    uVar2 = *(in_ECX + 0x10) & arg_8h & 0x17;\n    if (uVar2 == 0) {\n        return;\n    }\n    if (arg_ch == '\\0') {\n        arg_ch_00 = &uStack36;\n        uStack36 = 1;\n        uStack32 = 0x4b81f8;\n        if ((uVar2 & 4) == 0) {\n            if ((uVar2 & 2) == 0) {\n                arg_8h_00 = \"ios_base::eofbit set\";\n                fcn.0040e8a1(\"ios_base::eofbit set\", arg_ch_00);\n            }\n            else {\n                arg_8h_00 = \"ios_base::failbit set\";\n                fcn.0040e8a1(\"ios_base::failbit set\", arg_ch_00);\n            }\n        }\n        else {\n            arg_8h_00 = 0x4a2368;\n            fcn.0040e8a1(0x4a2368, arg_ch_00);\n        }\n    }\n    else {\n        arg_ch_00 = NULL;\n        arg_8h_00 = NULL;\n    }\n    fcn.0045b275(arg_8h_00, arg_ch_00);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 411
    },
    "0040ea4c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0040ea4c(void)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    int32_t unaff_EBP;\n    uint var_40h;\n    uint var_28h;\n    uint var_14h;\n    char *arg_ch;\n    uint arg_10h;\n    uint var_4h;\n    \n    fcn.0045b335(0x34);\n    fcn.00402707(arg_8h);\n    *(unaff_EBP + -4) = 0;\n    fcn.00426660(0);\n    arg_10h = 1;\n    fcn.00402754(1, 0);\n    iVar1 = unaff_EBP + -0x28;\n    if (0xf < *(unaff_EBP + -0x14)) {\n        iVar1 = *(unaff_EBP + -0x28);\n    }\n    if (*0x4b962c == '\\0') {\n        fcn.00435dcd(0x4b9608);\n        *0x4b962c = '\\x01';\n    }\n    if (*0x4b9628 == 0) {\n        *0x4b9628 = fcn.00456a6c(0x4000);\n        if (*0x4b9628 == 0) {\n            arg_ch = \"ZIP_init error\\n\";\n            iVar1 = fcn.00456012();\n            fcn.00456afe(iVar1 + 0x40, arg_ch, arg_10h);\n            goto code_r0x0040eadf;\n        }\n    }\n    fcn.0043686d(iVar1, 0x4b9608);\ncode_r0x0040eadf:\n    fcn.0040230f();\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 439
    },
    "0040f661": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0040f661(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *puVar4;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_6ch;\n    uint var_54h;\n    uint var_3ch;\n    uint in_stack_ffffffd8;\n    uint var_4h;\n    \n    fcn.0045b335(0x9c);\n    uVar1 = *0x4b9730;\n    *(unaff_EBP + -0xa8) = 0;\n    if ((uVar1 & 1) == 0) {\n        *0x4b9744 = 0;\n        *0x4b9730 = uVar1 | 1;\n        *0x4b9748 = 7;\n        *0x4b9734 = 0;\n        fcn.00453ab0(0x48b976);\n    }\n    if (*0x4b9744 == 0) {\n        *(unaff_EBP + -0xa4) = 0;\n        *(unaff_EBP + -0xa2) = 0;\n        *(unaff_EBP + -0x9e) = 0;\n        *(unaff_EBP + -0x9a) = 0;\n        *(unaff_EBP + -0x96) = 0;\n        if (unaff_EBP + -0xa4 != NULL) {\n            *(unaff_EBP + -0xa4) = *0x4b9690;\n            *(unaff_EBP + -0xa0) = *0x4b9694;\n            *(unaff_EBP + -0x9c) = *0x4b9698;\n            *(unaff_EBP + -0x98) = *0x4b969c;\n        }\n        *(unaff_EBP + -0x3c) = 0;\n        puVar4 = unaff_EBP + -0x3a;\n        for (iVar3 = 9; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar4 = 0;\n            puVar4 = puVar4 + 1;\n        }\n        *puVar4 = 0;\n        fcn.00456d85(unaff_EBP + -0x3c, 0x14, L\"%d.%02d.%02d-%02d%02d.%02d_\", *(unaff_EBP + -0xa4));\n        if (*(unaff_EBP + -0x3c) == 0) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = fcn.00453054(unaff_EBP + -0x3c);\n        }\n        fcn.00402667(unaff_EBP + -0x3c, uVar2);\n        *(unaff_EBP + -0x94) = 0;\n        fcn.0042e6c0();\n        fcn.0040229c(unaff_EBP + -0x94);\n        *(unaff_EBP + -4) = 0;\n        uVar2 = fcn.00426570(0);\n        *(unaff_EBP + -4) = 1;\n        fcn.004019b5(uVar2, 0, 0xffffffff);\n        fcn.00402754(1, 0);\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.0040230f();\n        in_stack_ffffffd8 = 0x4b9734;\n    }\n    fcn.004084c5(in_stack_ffffffd8);\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 877
    },
    "0040fa75": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040fa75(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t *piVar3;\n    int32_t *arg_8h_01;\n    int32_t iVar4;\n    uint32_t arg_8h_02;\n    int32_t unaff_EBP;\n    uint var_34h;\n    uint var_30h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0045b36b(0x28);\n    *(unaff_EBP + -0x18) = arg_8h_01;\n    *(unaff_EBP + -0x14) = 0;\n    fcn.0040e45b(arg_8h_01, 0);\n    *(unaff_EBP + -4) = 0;\n    if (*(unaff_EBP + -0x20) != '\\0') {\n        arg_8h_00 = fcn.0040e1fb(unaff_EBP + -0x1c);\n        *(unaff_EBP + -4) = 1;\n        piVar3 = fcn.0040c724(arg_8h_00);\n        fcn.0040e226();\n        *(unaff_EBP + -4) = 2;\n        iVar1 = *piVar3;\n        iVar4 = *(*arg_8h_01 + 4) + arg_8h_01;\n        iVar2 = *(iVar4 + 0x38);\n        *(unaff_EBP + -0x28) = 1;\n        *(unaff_EBP + -0x30) = iVar2 == 0;\n        (**(iVar1 + 0x30))(unaff_EBP + -0x34, *(iVar4 + 0x38), *(unaff_EBP + -0x30), 0, *(unaff_EBP + -0x28), iVar4, \n                           unaff_EBP + -0x14, *(unaff_EBP + 8));\n        *(unaff_EBP + -4) = 0;\n    }\n    if (*(unaff_EBP + -0x14) != 0) {\n        arg_8h_02 = *(arg_8h_01 + *(*arg_8h_01 + 4) + 0xc) | *(unaff_EBP + -0x14);\n        if (*(arg_8h_01 + *(*arg_8h_01 + 4) + 0x38) == 0) {\n            arg_8h_02 = arg_8h_02 | 4;\n        }\n        fcn.0040e96e(arg_8h_02, 0);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    piVar3 = *(*(**(unaff_EBP + -0x24) + 4) + 0x38 + *(unaff_EBP + -0x24));\n    if (piVar3 != NULL) {\n        (**(*piVar3 + 8))();\n    }\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 851
    },
    "0040fb78": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040fb78(int32_t *param_1)\n\n{\n    if (*param_1 != 0) {\n        fcn.0040fc99(*param_1, param_1[1]);\n        fcn.00452a07(*param_1);\n        *param_1 = 0;\n        param_1[1] = 0;\n        param_1[2] = 0;\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "0040fcc6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0040fcc6(void)\n\n{\n    int32_t *piVar1;\n    int16_t iVar2;\n    int32_t *arg_8h;\n    uint extraout_EDX;\n    uint32_t uVar3;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_4h;\n    \n    fcn.0045b36b(0x1c);\n    *(unaff_EBP + -0x1c) = extraout_EDX;\n    *(unaff_EBP + -0x18) = arg_8h;\n    uVar3 = 0;\n    fcn.0040e45b(arg_8h, 0);\n    *(unaff_EBP + -4) = 0;\n    if (*(unaff_EBP + -0x24) != '\\0') {\n        *(unaff_EBP + -4) = 1;\n        iVar2 = fcn.0040e267();\n        if (iVar2 == -1) {\n            uVar3 = 3;\n        }\n        else {\n            **(unaff_EBP + -0x1c) = iVar2;\n        }\n        *(unaff_EBP + -4) = 0;\n    }\n    if (uVar3 != 0) {\n        uVar3 = *(arg_8h + *(*arg_8h + 4) + 0xc) | uVar3;\n        if (*(arg_8h + *(*arg_8h + 4) + 0x38) == 0) {\n            uVar3 = uVar3 | 4;\n        }\n        fcn.0040e96e(uVar3, 0);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    piVar1 = *(*(**(unaff_EBP + -0x28) + 4) + 0x38 + *(unaff_EBP + -0x28));\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))();\n    }\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 501
    },
    "0040ff93": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.0040ff93(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_c4h;\n    uint var_b4h;\n    uint var_ach;\n    uint var_74h;\n    uint var_70h;\n    uint var_5ch;\n    uint var_14h;\n    uint arg_8h_01;\n    int32_t arg_8h_02;\n    uint var_4h;\n    \n    fcn.0045b302(0xbc);\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -0xc4) = 0x4a4438;\n    *(unaff_EBP + -0xb4) = 0x4a2278;\n    *(unaff_EBP + -0x5c) = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n    arg_8h_02 = unaff_EBP + -0xac;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x14) = 2;\n    fcn.00409a95(arg_8h_02);\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0xc4 + *(*(unaff_EBP + -0xc4) + 4)) =\n         vtable.std::basic_stringstream_char__struct_std::char_traits_char___class_std::allocator_char__.0;\n    iVar1 = *(*(unaff_EBP + -0xc4) + 4);\n    *(unaff_EBP + -200 + iVar1) = iVar1 + -0x68;\n    fcn.0040a91c(arg_8h_02, arg_8h_00);\n    *(unaff_EBP + -0xac) =\n         vtable.std::basic_stringbuf_char__struct_std::char_traits_char___class_std::allocator_char__.0;\n    *(unaff_EBP + -0x74) = 0;\n    *(unaff_EBP + -0x70) = 0;\n    *(unaff_EBP + -4) = 3;\n    fcn.0040c1d5();\n    if (*(unaff_EBP + 0xc) != 0) {\n        arg_8h_01 = *(unaff_EBP + 0xc);\n        fcn.004137b5(extraout_ECX);\n        fcn.00411d70(arg_8h_01);\n        fcn.004137b5();\n    }\n    fcn.0040c1d5();\n    fcn.0040c39a();\n    fcn.00411ee9(arg_8h_00);\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00411eba();\n    *(unaff_EBP + -0x5c) = vtable.std::ios_base.0;\n    fcn.0044e8ed(unaff_EBP + -0x5c);\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 743
    },
    "00410e99": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_94h\n// WARNING: Variable defined which should be unmapped: var_13ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_6ch\n// WARNING: Variable defined which should be unmapped: var_74h\n// WARNING: Variable defined which should be unmapped: var_b4h\n// WARNING: Variable defined which should be unmapped: var_c0h\n// WARNING: Variable defined which should be unmapped: var_cch\n// WARNING: Variable defined which should be unmapped: var_c8h\n// WARNING: Variable defined which should be unmapped: var_d0h\n// WARNING: Variable defined which should be unmapped: var_d8h\n// WARNING: Variable defined which should be unmapped: var_d4h\n// WARNING: Variable defined which should be unmapped: var_e0h\n// WARNING: Variable defined which should be unmapped: var_dch\n// WARNING: Variable defined which should be unmapped: var_ech\n// WARNING: Variable defined which should be unmapped: var_f8h\n// WARNING: Variable defined which should be unmapped: var_f4h\n// WARNING: Variable defined which should be unmapped: var_fch\n// WARNING: Variable defined which should be unmapped: var_104h\n// WARNING: Variable defined which should be unmapped: var_100h\n// WARNING: Variable defined which should be unmapped: var_10ch\n// WARNING: Variable defined which should be unmapped: var_108h\n// WARNING: Variable defined which should be unmapped: var_118h\n// WARNING: Variable defined which should be unmapped: var_124h\n// WARNING: Variable defined which should be unmapped: var_120h\n// WARNING: Variable defined which should be unmapped: var_128h\n// WARNING: Variable defined which should be unmapped: var_130h\n// WARNING: Variable defined which should be unmapped: var_12ch\n// WARNING: Variable defined which should be unmapped: var_134h\n\nvoid __cdecl fcn.00410e99(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    char *pcVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint extraout_ECX_02;\n    uint extraout_ECX_03;\n    uint extraout_ECX_04;\n    uint extraout_ECX_05;\n    uint extraout_ECX_06;\n    uint extraout_ECX_07;\n    uint extraout_ECX_08;\n    uint extraout_ECX_09;\n    uint extraout_ECX_10;\n    uint extraout_ECX_11;\n    uint extraout_ECX_12;\n    uint extraout_ECX_13;\n    uint extraout_ECX_14;\n    uint extraout_ECX_15;\n    uint extraout_ECX_16;\n    uint extraout_ECX_17;\n    uint extraout_ECX_18;\n    uint extraout_ECX_19;\n    uint extraout_ECX_20;\n    uint extraout_ECX_21;\n    int32_t extraout_ECX_22;\n    uint32_t uVar7;\n    int32_t unaff_EBP;\n    int32_t *piVar8;\n    uint uVar9;\n    uint uVar10;\n    int32_t iVar11;\n    uint var_13ch;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b4h;\n    uint var_94h;\n    uint var_74h;\n    uint var_6ch;\n    uint var_54h;\n    uint var_4ch;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    char16_t *pcVar12;\n    uint var_4h;\n    \n    fcn.0045b335(0x130);\n    *(unaff_EBP + -0x110) = extraout_ECX;\n    *(unaff_EBP + -0xc0) = 0;\n    iVar6 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0xf0) = 0;\n    *(unaff_EBP + -200) = 0;\n    *(unaff_EBP + -0xe8) = 1;\n    *(unaff_EBP + -0xcc) = iVar6;\n    fcn.00413bce(extraout_ECX, extraout_ECX);\n    iVar6 = *(iVar6 + 0x18);\n    if (iVar6 == -0xc) {\n        iVar6 = 0;\n    }\n    iVar6 = *(iVar6 + 4);\n    *(unaff_EBP + -0xcc) = iVar6;\n    while (iVar5 = *(unaff_EBP + -0xec),  iVar5 != iVar6) {\n        iVar1 = fcn.0045306d(0x148);\n        if (iVar1 == 0) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = fcn.004102f1();\n        }\n        *(unaff_EBP + -0xd4) = 0;\n        *(unaff_EBP + -0xd0) = 0;\n        fcn.00414f9d(uVar2);\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x100) = 0;\n        uVar2 = *(unaff_EBP + -0x100);\n        pcVar12 = L\"<xmlattr>.name\";\n        uVar10 = extraout_ECX_00;\n        fcn.00413b2c(L\"<xmlattr>.name\");\n        iVar1 = unaff_EBP + -0x34;\n        iVar5 = iVar5 + 0x18;\n        iVar11 = unaff_EBP + -0x6c;\n        *(unaff_EBP + -4) = 1;\n        *(unaff_EBP + -0xdc) = iVar5;\n        uVar9 = extraout_ECX_01;\n        fcn.00413b82(iVar11, iVar1);\n        *(unaff_EBP + -4) = 2;\n        uVar2 = fcn.00426760(iVar11, iVar1, uVar9, pcVar12, uVar10, uVar2);\n        piVar8 = *(unaff_EBP + -0xd4);\n        fcn.004017bf(uVar2);\n        fcn.00402754(1, 0);\n        fcn.00402754(1, 0);\n        *(unaff_EBP + -4) = 0;\n        fcn.00402754(1, 0);\n        *(unaff_EBP + -0xd8) = 0;\n        *(unaff_EBP + -0x128) = 0;\n        fcn.00413b2c(L\"<xmlattr>.order\");\n        *(unaff_EBP + -4) = 3;\n        pcVar3 = fcn.00414f5b(unaff_EBP + -0xbc, unaff_EBP + -0x34);\n        piVar4 = pcVar3 + 4;\n        if (*pcVar3 == '\\0') {\n            piVar4 = unaff_EBP + -0xd8;\n        }\n        iVar1 = *piVar4;\n        *(unaff_EBP + -0xbc) = 0;\n        *(unaff_EBP + -4) = 0;\n        piVar8[8] = iVar1;\n        fcn.00402754(1, 0);\n        *(unaff_EBP + -0x10c) = 0;\n        fcn.00413b2c(L\"Execute.<xmlattr>.platform\");\n        *(unaff_EBP + -4) = 4;\n        uVar2 = fcn.00413b82(unaff_EBP + -0x6c, unaff_EBP + -0x34);\n        fcn.004017bf(uVar2);\n        fcn.00402754(1, 0);\n        *(unaff_EBP + -4) = 0;\n        fcn.00402754(1, 0);\n        *(unaff_EBP + -0x114) = 0;\n        uVar2 = *(unaff_EBP + -0x114);\n        pcVar12 = L\"Execute.<xmlattr>.path\";\n        uVar10 = extraout_ECX_02;\n        fcn.00413b2c(L\"Execute.<xmlattr>.path\");\n        iVar1 = unaff_EBP + -0x4c;\n        *(unaff_EBP + -4) = 5;\n        uVar9 = extraout_ECX_03;\n        fcn.00413b82(iVar1, unaff_EBP + -0x34);\n        *(unaff_EBP + -4) = 6;\n        uVar2 = fcn.00426760(iVar1, unaff_EBP + -0x34, uVar9, pcVar12, uVar10, uVar2);\n        fcn.004017bf(uVar2);\n        fcn.00402754(1, 0);\n        fcn.00402754(1, 0);\n        *(unaff_EBP + -4) = 0;\n        fcn.00402754(1, 0);\n        *(unaff_EBP + -0xf8) = 0;\n        fcn.00413b2c(L\"Execute\");\n        *(unaff_EBP + -4) = 7;\n        uVar2 = fcn.00413b82(unaff_EBP + -0x6c, unaff_EBP + -0x34);\n        fcn.004017bf(uVar2);\n        fcn.00402754(1, 0);\n        *(unaff_EBP + -4) = 0;\n        fcn.00402754(1, 0);\n        *(unaff_EBP + -0x118) = 0;\n        fcn.00413b2c(L\"Execute.<xmlattr>.options\");\n        *(unaff_EBP + -4) = 8;\n        uVar2 = fcn.00413b82(unaff_EBP + -0x6c, unaff_EBP + -0x34);\n        fcn.004017bf(uVar2);\n        fcn.00402754(1, 0);\n        *(unaff_EBP + -4) = 0;\n        fcn.00402754(1, 0);\n        *(unaff_EBP + -0x120) = 0;\n        fcn.00413b2c(L\"Execute.<xmlattr>.logfile\");\n        *(unaff_EBP + -4) = 9;\n        uVar2 = fcn.00413b82(unaff_EBP + -0x6c, unaff_EBP + -0x34);\n        fcn.004017bf(uVar2);\n        fcn.00402754(1, 0);\n        *(unaff_EBP + -4) = 0;\n        fcn.00402754(1, 0);\n        *(unaff_EBP + -0xf4) = 0;\n        uVar2 = *(unaff_EBP + -0xf4);\n        pcVar12 = L\"Execute.<xmlattr>.method\";\n        uVar10 = extraout_ECX_04;\n        fcn.00413b2c(L\"Execute.<xmlattr>.method\");\n        *(unaff_EBP + -4) = 10;\n        iVar1 = unaff_EBP + -0x34;\n        iVar11 = unaff_EBP + -0x4c;\n        uVar9 = extraout_ECX_05;\n        fcn.00413b82(iVar11, iVar1);\n        *(unaff_EBP + -4) = 0xb;\n        uVar2 = fcn.00426760(iVar11, iVar1, uVar9, pcVar12, uVar10, uVar2);\n        fcn.004017bf(uVar2);\n        fcn.00402754(1, 0);\n        fcn.00402754(1, 0);\n        *(unaff_EBP + -4) = 0;\n        fcn.00402754(1, 0);\n        *(unaff_EBP + -0x3c) = 0;\n        *(unaff_EBP + -0x38) = 7;\n        *(unaff_EBP + -0x4c) = 0;\n        uVar2 = fcn.00453054(L\"<xmlattr>.enable\");\n        fcn.00402667(L\"<xmlattr>.enable\", uVar2);\n        *(unaff_EBP + -4) = 0xc;\n        iVar1 = fcn.00410dd3(iVar5, unaff_EBP + -0x4c, 0);\n        piVar8[7] = iVar1;\n        *(unaff_EBP + -4) = 0;\n        fcn.00402754(1, 0);\n        *(unaff_EBP + -0x3c) = 0;\n        *(unaff_EBP + -0x38) = 7;\n        *(unaff_EBP + -0x4c) = 0;\n        uVar2 = fcn.00453054(L\"CollectLog.<xmlattr>.enable\");\n        fcn.00402667(L\"CollectLog.<xmlattr>.enable\", uVar2);\n        *(unaff_EBP + -4) = 0xd;\n        iVar1 = fcn.00410dd3(iVar5, unaff_EBP + -0x4c, 0);\n        piVar8[0x45] = iVar1;\n        *(unaff_EBP + -4) = 0;\n        fcn.00402754(1, 0);\n        *(unaff_EBP + -0x3c) = 0;\n        *(unaff_EBP + -0x38) = 7;\n        *(unaff_EBP + -0x4c) = 0;\n        uVar2 = fcn.00453054(L\"CollectFile.<xmlattr>.enable\");\n        fcn.00402667(L\"CollectFile.<xmlattr>.enable\", uVar2);\n        *(unaff_EBP + -4) = 0xe;\n        iVar1 = fcn.00410dd3(iVar5, unaff_EBP + -0x4c, 0);\n        piVar8[0x46] = iVar1;\n        *(unaff_EBP + -4) = 0;\n        fcn.00402754(1, 0);\n        *(unaff_EBP + -0x3c) = 0;\n        *(unaff_EBP + -0x38) = 7;\n        *(unaff_EBP + -0x4c) = 0;\n        uVar2 = fcn.00453054(L\"CollectFile.<xmlattr>.password-protected\");\n        fcn.00402667(L\"CollectFile.<xmlattr>.password-protected\", uVar2);\n        *(unaff_EBP + -4) = 0xf;\n        iVar5 = fcn.00410dd3(iVar5, unaff_EBP + -0x4c, 0);\n        piVar8[0x47] = iVar5;\n        *(unaff_EBP + -4) = 0;\n        fcn.00402754(1, 0);\n        iVar5 = (**(*piVar8 + 0x38))();\n        if (iVar5 != 0) {\n            *(unaff_EBP + -0x11c) = 0;\n            uVar2 = *(unaff_EBP + -0x11c);\n            pcVar12 = L\"CollectLog.<xmlattr>.method\";\n            uVar10 = extraout_ECX_06;\n            fcn.00413b2c(L\"CollectLog.<xmlattr>.method\");\n            iVar6 = unaff_EBP + -0x34;\n            iVar5 = unaff_EBP + -0x4c;\n            *(unaff_EBP + -4) = 0x10;\n            uVar9 = extraout_ECX_07;\n            fcn.00413b82(iVar5, iVar6);\n            *(unaff_EBP + -4) = 0x11;\n            uVar2 = fcn.00426760(iVar5, iVar6, uVar9, pcVar12, uVar10, uVar2);\n            fcn.004017bf(uVar2);\n            fcn.00402754(1, 0);\n            fcn.00402754(1, 0);\n            *(unaff_EBP + -4) = 0;\n            fcn.00402754(1, 0);\n            *(unaff_EBP + -0x124) = 0;\n            uVar2 = *(unaff_EBP + -0x124);\n            pcVar12 = L\"CollectLog.<xmlattr>.path\";\n            uVar10 = extraout_ECX_08;\n            fcn.00413b2c(L\"CollectLog.<xmlattr>.path\");\n            iVar6 = unaff_EBP + -0x34;\n            iVar5 = unaff_EBP + -0x4c;\n            *(unaff_EBP + -4) = 0x12;\n            uVar9 = extraout_ECX_09;\n            fcn.00413b82(iVar5, iVar6);\n            *(unaff_EBP + -4) = 0x13;\n            uVar2 = fcn.00426760(iVar5, iVar6, uVar9, pcVar12, uVar10, uVar2);\n            fcn.004017bf(uVar2);\n            fcn.00402754(1, 0);\n            fcn.00402754(1, 0);\n            *(unaff_EBP + -4) = 0;\n            fcn.00402754(1, 0);\n            fcn.0042d220();\n            *(unaff_EBP + -0xfc) = 0;\n            fcn.00413b2c(L\"CollectLog\");\n            *(unaff_EBP + -4) = 0x17;\n            iVar6 = fcn.00413a0d(unaff_EBP + -0x34);\n            *(unaff_EBP + -0xd8) = iVar6;\n            fcn.00402754(1, 0);\n            uVar7 = *(unaff_EBP + -0xc0);\n            uVar2 = extraout_ECX_10;\n            if ((uVar7 & 4) != 0) {\n                *(unaff_EBP + -0xc0) = uVar7 & 0xfffffffb;\n                fcn.00402754(1, 0);\n                uVar7 = *(unaff_EBP + -0xc0);\n                uVar2 = extraout_ECX_11;\n            }\n            if ((uVar7 & 2) != 0) {\n                *(unaff_EBP + -0xc0) = uVar7 & 0xfffffffd;\n                fcn.00402754(1, 0);\n                uVar7 = *(unaff_EBP + -0xc0);\n                uVar2 = extraout_ECX_12;\n            }\n            if ((uVar7 & 1) != 0) {\n                *(unaff_EBP + -0xc0) = uVar7 & 0xfffffffe;\n                fcn.00402754(1, 0);\n                uVar2 = extraout_ECX_13;\n            }\n            fcn.00413bce(uVar2, uVar2);\n            uVar7 = *(unaff_EBP + -0xc0);\n            if (uVar7 < '\\0') {\n                *(unaff_EBP + -0xc0) = uVar7 & 0xffffff7f;\n                fcn.00402754(1, 0);\n                uVar7 = *(unaff_EBP + -0xc0);\n            }\n            if ((uVar7 & 0x40) != 0) {\n                *(unaff_EBP + -0xc0) = uVar7 & 0xffffffbf;\n                fcn.00402754(1, 0);\n                uVar7 = *(unaff_EBP + -0xc0);\n            }\n            if ((uVar7 & 0x20) != 0) {\n                *(unaff_EBP + -0xc0) = uVar7 & 0xffffffdf;\n                fcn.00402754(1, 0);\n                uVar7 = *(unaff_EBP + -0xc0);\n            }\n            if ((uVar7 & 0x10) != 0) {\n                *(unaff_EBP + -0xc0) = uVar7 & 0xffffffef;\n                fcn.00402754(1, 0);\n                uVar7 = *(unaff_EBP + -0xc0);\n            }\n            if ((uVar7 & 8) != 0) {\n                *(unaff_EBP + -0xc0) = uVar7 & 0xfffffff7;\n                fcn.00402754(1, 0);\n                uVar7 = *(unaff_EBP + -0xc0);\n            }\n            iVar6 = *(iVar6 + 0x18);\n            if (iVar6 == -0xc) {\n                iVar6 = 0;\n            }\n            iVar6 = *(iVar6 + 4);\n            if ((uVar7 & 0x1000) != 0) {\n                *(unaff_EBP + -0xc0) = uVar7 & 0xffffefff;\n                fcn.00402754(1, 0);\n                uVar7 = *(unaff_EBP + -0xc0);\n            }\n            if ((uVar7 & 0x800) != 0) {\n                *(unaff_EBP + -0xc0) = uVar7 & 0xfffff7ff;\n                fcn.00402754(1, 0);\n                uVar7 = *(unaff_EBP + -0xc0);\n            }\n            if ((uVar7 & 0x400) != 0) {\n                *(unaff_EBP + -0xc0) = uVar7 & 0xfffffbff;\n                fcn.00402754(1, 0);\n                uVar7 = *(unaff_EBP + -0xc0);\n            }\n            if ((uVar7 & 0x200) != 0) {\n                *(unaff_EBP + -0xc0) = uVar7 & 0xfffffdff;\n                fcn.00402754(1, 0);\n                uVar7 = *(unaff_EBP + -0xc0);\n            }\n            if ((uVar7 & 0x100) != 0) {\n                *(unaff_EBP + -0xc0) = uVar7 & 0xfffffeff;\n                fcn.00402754(1, 0);\n            }\n            uVar7 = *(unaff_EBP + -0xc0);\n            while( true ) {\n                iVar5 = *(unaff_EBP + -0xe4);\n                *(unaff_EBP + -0xc1) = iVar5 != iVar6;\n                if ((uVar7 & 0x10000) != 0) {\n                    uVar7 = uVar7 & 0xfffeffff;\n                    *(unaff_EBP + -0xc0) = uVar7;\n                    fcn.00402754(1, 0);\n                }\n                *(unaff_EBP + -4) = 0;\n                if ((uVar7 & 0x8000) != 0) {\n                    uVar7 = uVar7 & 0xffff7fff;\n                    *(unaff_EBP + -0xc0) = uVar7;\n                    fcn.00402754(1, 0);\n                }\n                if (*(unaff_EBP + -0xc1) == '\\0') break;\n                if ((uVar7 & 0x40000) != 0) {\n                    uVar7 = uVar7 & 0xfffbffff;\n                    *(unaff_EBP + -0xc0) = uVar7;\n                    fcn.00402754(1, 0);\n                }\n                *(unaff_EBP + -4) = 0;\n                if ((uVar7 & 0x20000) != 0) {\n                    uVar7 = uVar7 & 0xfffdffff;\n                    *(unaff_EBP + -0xc0) = uVar7;\n                    fcn.00402754(1, 0);\n                }\n                if (*(iVar5 + 0x28) != 0) {\n                    fcn.00412468(iVar5 + 0x18);\n                }\n                fcn.00413bf4();\n                if ((uVar7 & 0x4000) != 0) {\n                    uVar7 = uVar7 & 0xffffbfff;\n                    *(unaff_EBP + -0xc0) = uVar7;\n                    fcn.00402754(1, 0);\n                }\n                if ((uVar7 & 0x2000) != 0) {\n                    uVar7 = uVar7 & 0xffffdfff;\n                    *(unaff_EBP + -0xc0) = uVar7;\n                    fcn.00402754(1, 0);\n                }\n            }\n            iVar6 = *(unaff_EBP + -0xcc);\n            piVar8 = *(unaff_EBP + -0xd4);\n        }\n        iVar5 = (**(*piVar8 + 0x3c))();\n        if (iVar5 != 0) {\n            *(unaff_EBP + -0x104) = 0;\n            uVar2 = *(unaff_EBP + -0x104);\n            pcVar12 = L\"CollectFile.<xmlattr>.method\";\n            uVar10 = extraout_ECX_14;\n            fcn.00413b2c(L\"CollectFile.<xmlattr>.method\");\n            iVar6 = unaff_EBP + -0x34;\n            iVar5 = unaff_EBP + -0x4c;\n            *(unaff_EBP + -4) = 0x28;\n            uVar9 = extraout_ECX_15;\n            fcn.00413b82(iVar5, iVar6);\n            *(unaff_EBP + -4) = 0x29;\n            uVar2 = fcn.00426760(iVar5, iVar6, uVar9, pcVar12, uVar10, uVar2);\n            fcn.004017bf(uVar2);\n            fcn.00402754(1, 0);\n            fcn.00402754(1, 0);\n            *(unaff_EBP + -4) = 0;\n            fcn.00402754(1, 0);\n            *(unaff_EBP + -0x108) = 0;\n            uVar2 = *(unaff_EBP + -0x108);\n            pcVar12 = L\"CollectFile.<xmlattr>.path\";\n            uVar10 = extraout_ECX_16;\n            fcn.00413b2c(L\"CollectFile.<xmlattr>.path\");\n            iVar6 = unaff_EBP + -0x34;\n            iVar5 = unaff_EBP + -0x4c;\n            *(unaff_EBP + -4) = 0x2a;\n            uVar9 = extraout_ECX_17;\n            fcn.00413b82(iVar5, iVar6);\n            *(unaff_EBP + -4) = 0x2b;\n            uVar2 = fcn.00426760(iVar5, iVar6, uVar9, pcVar12, uVar10, uVar2);\n            fcn.004017bf(uVar2);\n            fcn.00402754(1, 0);\n            fcn.00402754(1, 0);\n            *(unaff_EBP + -4) = 0;\n            fcn.00402754(1, 0);\n            fcn.0042d220();\n            *(unaff_EBP + -0xf0) = 0;\n            fcn.00413b2c(L\"CollectFile\");\n            *(unaff_EBP + -4) = 0x2f;\n            iVar6 = fcn.00413a0d(unaff_EBP + -0x34);\n            *(unaff_EBP + -0xdc) = iVar6;\n            fcn.00402754(1, 0);\n            uVar7 = *(unaff_EBP + -0xc0);\n            uVar2 = extraout_ECX_18;\n            if ((uVar7 & 0x200000) != 0) {\n                *(unaff_EBP + -0xc0) = uVar7 & 0xffdfffff;\n                fcn.00402754(1, 0);\n                uVar7 = *(unaff_EBP + -0xc0);\n                uVar2 = extraout_ECX_19;\n            }\n            if ((uVar7 & 0x100000) != 0) {\n                *(unaff_EBP + -0xc0) = uVar7 & 0xffefffff;\n                fcn.00402754(1, 0);\n                uVar7 = *(unaff_EBP + -0xc0);\n                uVar2 = extraout_ECX_20;\n            }\n            if ((uVar7 & 0x80000) != 0) {\n                *(unaff_EBP + -0xc0) = uVar7 & 0xfff7ffff;\n                fcn.00402754(1, 0);\n                uVar2 = extraout_ECX_21;\n            }\n            fcn.00413bce(uVar2, uVar2);\n            uVar7 = *(unaff_EBP + -0xc0);\n            if ((uVar7 & 0x4000000) != 0) {\n                *(unaff_EBP + -0xc0) = uVar7 & 0xfbffffff;\n                fcn.00402754(1, 0);\n                uVar7 = *(unaff_EBP + -0xc0);\n            }\n            if ((uVar7 & 0x2000000) != 0) {\n                *(unaff_EBP + -0xc0) = uVar7 & 0xfdffffff;\n                fcn.00402754(1, 0);\n                uVar7 = *(unaff_EBP + -0xc0);\n            }\n            if ((uVar7 & 0x1000000) != 0) {\n                *(unaff_EBP + -0xc0) = uVar7 & 0xfeffffff;\n                fcn.00402754(1, 0);\n                uVar7 = *(unaff_EBP + -0xc0);\n            }\n            if ((uVar7 & 0x800000) != 0) {\n                *(unaff_EBP + -0xc0) = uVar7 & 0xff7fffff;\n                fcn.00402754(1, 0);\n                uVar7 = *(unaff_EBP + -0xc0);\n            }\n            if ((uVar7 & 0x400000) != 0) {\n                *(unaff_EBP + -0xc0) = uVar7 & 0xffbfffff;\n                fcn.00402754(1, 0);\n                uVar7 = *(unaff_EBP + -0xc0);\n            }\n            iVar6 = *(iVar6 + 0x18);\n            if (iVar6 == -0xc) {\n                iVar6 = 0;\n            }\n            iVar6 = *(iVar6 + 4);\n            if (uVar7 < 0) {\n                *(unaff_EBP + -0xc0) = uVar7 & 0x7fffffff;\n                fcn.00402754(1, 0);\n                uVar7 = *(unaff_EBP + -0xc0);\n            }\n            if ((uVar7 & 0x40000000) != 0) {\n                *(unaff_EBP + -0xc0) = uVar7 & 0xbfffffff;\n                fcn.00402754(1, 0);\n                uVar7 = *(unaff_EBP + -0xc0);\n            }\n            if ((uVar7 & 0x20000000) != 0) {\n                *(unaff_EBP + -0xc0) = uVar7 & 0xdfffffff;\n                fcn.00402754(1, 0);\n                uVar7 = *(unaff_EBP + -0xc0);\n            }\n            if ((uVar7 & 0x10000000) != 0) {\n                *(unaff_EBP + -0xc0) = uVar7 & 0xefffffff;\n                fcn.00402754(1, 0);\n                uVar7 = *(unaff_EBP + -0xc0);\n            }\n            if ((uVar7 & 0x8000000) != 0) {\n                *(unaff_EBP + -0xc0) = uVar7 & 0xf7ffffff;\n                fcn.00402754(1, 0);\n            }\n            uVar7 = *(unaff_EBP + -200);\n            while( true ) {\n                iVar5 = *(unaff_EBP + -0xe0);\n                *(unaff_EBP + -0xc1) = iVar5 != iVar6;\n                if ((uVar7 & 8) != 0) {\n                    uVar7 = uVar7 & 0xfffffff7;\n                    fcn.00402754(1, 0);\n                }\n                *(unaff_EBP + -4) = 0;\n                if ((uVar7 & 4) != 0) {\n                    uVar7 = uVar7 & 0xfffffffb;\n                    fcn.00402754(1, 0);\n                }\n                if (*(unaff_EBP + -0xc1) == '\\0') break;\n                if ((uVar7 & 0x20) != 0) {\n                    uVar7 = uVar7 & 0xffffffdf;\n                    fcn.00402754(1, 0);\n                }\n                *(unaff_EBP + -4) = 0;\n                if ((uVar7 & 0x10) != 0) {\n                    uVar7 = uVar7 & 0xffffffef;\n                    fcn.00402754(1, 0);\n                }\n                if (*(iVar5 + 0x28) != 0) {\n                    fcn.00412468(iVar5 + 0x18);\n                }\n                fcn.00413bf4();\n                if ((uVar7 & 2) != 0) {\n                    uVar7 = uVar7 & 0xfffffffd;\n                    fcn.00402754(1, 0);\n                }\n                if ((uVar7 & 1) != 0) {\n                    uVar7 = uVar7 & 0xfffffffe;\n                    fcn.00402754(1, 0);\n                }\n            }\n            piVar8 = *(unaff_EBP + -0xd4);\n            *(unaff_EBP + -200) = uVar7;\n            *(unaff_EBP + -200) = uVar7;\n            *(unaff_EBP + -200) = uVar7;\n            *(unaff_EBP + -200) = uVar7;\n            *(unaff_EBP + -200) = uVar7;\n            *(unaff_EBP + -200) = uVar7;\n            iVar6 = *(unaff_EBP + -0xcc);\n        }\n        iVar1 = (**(*piVar8 + 4))();\n        iVar5 = *(unaff_EBP + -0xd0);\n        if ((((*(iVar1 + 0x10) == 0) || (iVar1 = (**(*piVar8 + 0xc))(),  iVar1 == 0)) ||\n            (iVar1 = (**(*piVar8 + 0x18))(),  *(iVar1 + 0x10) == 0)) ||\n           (iVar1 = (**(*piVar8 + 0x1c))(),  *(iVar1 + 0x10) == 0)) {\n            *(unaff_EBP + -0xe8) = 0;\n        }\n        else {\n            uVar2 = (**(*piVar8 + 0xc))();\n            *(unaff_EBP + -0x134) = uVar2;\n            iVar1 = extraout_ECX_22;\n            if (iVar5 != 0) {\n                piVar4 = iVar5 + 4;\n                LOCK();\n                iVar1 = *piVar4;\n                *piVar4 = *piVar4 + 1;\n            }\n            *(unaff_EBP + -300) = iVar5;\n            *(unaff_EBP + -0x130) = piVar8;\n            *(unaff_EBP + -4) = 0x40;\n            fcn.00413cad(unaff_EBP + -0x13c, iVar1, unaff_EBP + -0x134, *0x4b96e0);\n            *(unaff_EBP + -4) = 0;\n            if (*(unaff_EBP + -300) != 0) {\n                fcn.0040cd13();\n            }\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (iVar5 != 0) {\n            fcn.0040cd13();\n        }\n        fcn.00413bf4();\n    }\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 8634
    },
    "004125ea": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004125ea(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    if ((param_1[2] - param_1[1]) / 0x18 == 0) {\n        iVar3 = (param_1[1] - *param_1) / 0x18;\n        if (iVar3 == 0xaaaaaaa) {\n            fcn.0044e7eb(\"vector<T> too long\");\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        uVar1 = iVar3 + 1;\n        uVar4 = (param_1[2] - *param_1) / 0x18;\n        if (0xaaaaaaa - (uVar4 >> 1) < uVar4) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = uVar4 + (uVar4 >> 1);\n        }\n        if (uVar4 < uVar1) {\n            uVar4 = uVar1;\n        }\n        fcn.00412ddd(uVar4);\n    }\n    return;\n}\n",
        "token_count": 278
    },
    "00412f12": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00412f12(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch, uint *****arg_20h\n            , int32_t arg_24h, uint arg_28h, uint arg_2ch, uint32_t arg_30h)\n\n{\n    char cVar1;\n    uint arg_14h_00;\n    uint8_t uVar2;\n    uchar uVar3;\n    uint8_t **ppuVar4;\n    int32_t *piVar5;\n    uint *****pppppuVar6;\n    int32_t *piVar7;\n    uint32_t uVar8;\n    uint *puVar9;\n    int32_t *****pppppiVar10;\n    uint uVar11;\n    int32_t unaff_ESI;\n    int32_t iVar12;\n    int32_t unaff_EDI;\n    uint32_t arg_1ch_00;\n    int32_t **in_FS_OFFSET;\n    int32_t *****arg_8h_00;\n    int32_t *****pppppiVar13;\n    uchar *arg_8h_01;\n    int32_t *****pppppiStack124;\n    int32_t *****pppppiStack120;\n    uint32_t uStack116;\n    uint uStack112;\n    uint32_t uStack108;\n    uint32_t uStack104;\n    uint *****pppppuStack100;\n    uchar auStack96 [4];\n    uint *****pppppuStack92;\n    int32_t iStack88;\n    uint32_t uStack84;\n    uint32_t uStack80;\n    uint32_t uStack72;\n    int32_t *piStack68;\n    uint uStack64;\n    uchar uStack48;\n    uchar uStack44;\n    uint32_t uStack28;\n    int32_t *piStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0xffffffff;\n    uStack16 = 0x489158;\n    piStack20 = *in_FS_OFFSET;\n    uStack28 = *0x4b4f00 ^ &pppppiStack124;\n    *in_FS_OFFSET = &piStack20;\n    uStack80 = arg_ch;\n    iStack88 = arg_18h;\n    pppppuStack92 = arg_20h;\n    uStack116 = arg_30h;\n    if ((arg_30h == 0) || ((*arg_20h != '+' && (*arg_20h != '-')))) {\n        arg_1ch_00 = 0;\n    }\n    else {\n        arg_1ch_00 = 1;\n    }\n    if ((*(arg_18h + 0x14) & 0x3000) == 0x3000) {\n        uVar11 = 0x4a43cc;\n        if (((arg_1ch_00 + 2 <= arg_30h) && (*(arg_20h + arg_1ch_00) == '0')) &&\n           ((cVar1 = *(arg_20h + arg_1ch_00 + 1),  cVar1 == 'x' || (cVar1 == 'X')))) {\n            arg_1ch_00 = arg_1ch_00 + 2;\n        }\n    }\n    else {\n        uVar11 = 0x4a43d0;\n    }\n    uStack84 = fcn.004573e0(arg_20h, uVar11);\n    uStack112 = CONCAT22(uStack112._2_2_, 0x2e);\n    ppuVar4 = fcn.0045685e();\n    uStack112 = uStack112 & 0xffffff00 | **ppuVar4;\n    pppppiStack120 = fcn.004573e0(arg_20h, &uStack112);\n    arg_8h_01 = auStack96;\n    uVar11 = fcn.0040e1fb(arg_8h_01);\n    uStack16 = 0;\n    piVar5 = fcn.0040cf69(uVar11);\n    uStack16 = 0xffffffff;\n    fcn.0040e226();\n    uVar2 = (**(*piVar5 + 0x20))();\n    uStack116 = uStack116 & 0xffffff00 | uVar2;\n    pppppiVar13 = NULL;\n    uStack64 = 0xf;\n    piStack68 = NULL;\n    uStack84 = uStack84 & 0xffffff00;\n    pppppiVar10 = pppppiStack124;\n    fcn.0040d587(pppppiStack124, 0);\n    uStack28 = 1;\n    pppppuVar6 = &pppppuStack92;\n    if (0xf < uStack72) {\n        pppppuVar6 = pppppuStack92;\n    }\n    unaff_ESI = unaff_ESI + uStack108;\n    uVar8 = uStack108;\n    (**(*piVar5 + 0x1c))(uStack108, unaff_ESI, pppppuVar6);\n    arg_8h_00 = &pppppiStack120;\n    uVar11 = fcn.0040e1fb(arg_8h_00);\n    uStack44 = 2;\n    piVar7 = fcn.004198b6(uVar11);\n    uStack44 = 1;\n    piVar5 = piVar7;\n    fcn.0040e226();\n    fcn.0040cd3f(&uStack84);\n    uStack48 = 3;\n    (**(*piVar7 + 0x10))();\n    if (pppppiVar10 == pppppiVar13) {\n        iVar12 = pppppiStack120 + arg_24h;\n        pppppiVar10 = pppppiStack120;\n    }\n    else {\n        iVar12 = pppppiVar10 + arg_24h;\n        fcn.0041962e(pppppiStack120, arg_2ch, arg_8h_01);\n        fcn.0041962e(uVar8 + 1, arg_28h, pppppiVar10);\n        uVar3 = (*(*pppppiVar10)[3])();\n        puVar9 = &uStack112;\n        if (0xf < pppppuStack92) {\n            puVar9 = uStack112;\n        }\n        *(puVar9 + pppppiVar10) = uVar3;\n    }\n    fcn.0041962e(pppppiVar10, arg_24h, arg_8h_01);\n    pppppuVar6 = &pppppuStack100;\n    if (0xf < uStack80) {\n        pppppuVar6 = pppppuStack100;\n    }\n    cVar1 = *pppppuVar6;\n    while (((cVar1 != '\\x7f' && (arg_18h = unaff_EDI,  '\\0' < cVar1)) && (cVar1 < unaff_ESI - arg_1ch_00))) {\n        unaff_ESI = unaff_ESI - cVar1;\n        fcn.0041962e(unaff_ESI, 1, iVar12);\n        if ('\\0' < *(pppppuVar6 + 1)) {\n            pppppuVar6 = pppppuVar6 + 1;\n        }\n        arg_18h = unaff_EDI;\n        cVar1 = *pppppuVar6;\n    }\n    if (((*(arg_18h + 0x24) < 0) || ((*(arg_18h + 0x24) < 1 && (*(arg_18h + 0x20) == 0)))) ||\n       (*(arg_18h + 0x20) <= uStack108)) {\n        iVar12 = 0;\n    }\n    else {\n        iVar12 = *(arg_18h + 0x20) - uStack108;\n    }\n    uVar8 = *(arg_18h + 0x14) & 0x1c0;\n    if (uVar8 == 0x40) {\n        pppppiVar10 = &pppppiStack124;\n        if (0xf < uStack104) {\n            pppppiVar10 = pppppiStack124;\n        }\n        puVar9 = fcn.004136af(arg_8h, &stack0xffffff68, arg_10h, arg_14h, pppppiVar10, arg_1ch_00);\n    }\n    else if (uVar8 == 0x100) {\n        pppppiVar10 = &pppppiStack124;\n        if (0xf < uStack104) {\n            pppppiVar10 = pppppiStack124;\n        }\n        puVar9 = fcn.004136af(arg_8h, &stack0xffffff68, arg_10h, arg_14h, pppppiVar10, arg_1ch_00);\n        puVar9 = fcn.004136e0(arg_8h, &stack0xffffff68, *puVar9, puVar9[1], arg_1ch, iVar12);\n        iVar12 = 0;\n    }\n    else {\n        puVar9 = fcn.004136e0(arg_8h, &stack0xffffff68, arg_10h, arg_14h, arg_1ch, iVar12);\n        iVar12 = 0;\n        pppppiVar10 = &pppppiStack124;\n        if (0xf < uStack104) {\n            pppppiVar10 = pppppiStack124;\n        }\n        puVar9 = fcn.004136af(arg_8h, &stack0xffffff68, *puVar9, puVar9[1], pppppiVar10, arg_1ch_00);\n    }\n    pppppiVar10 = &pppppiStack124;\n    if (0xf < uStack104) {\n        pppppiVar10 = pppppiStack124;\n    }\n    puVar9 = fcn.004136af(arg_8h, &stack0xffffff68, *puVar9, puVar9[1], pppppiVar10 + arg_1ch_00, uStack108 - arg_1ch_00\n                         );\n    uVar11 = *puVar9;\n    arg_14h_00 = puVar9[1];\n    *(unaff_EDI + 0x20) = 0;\n    *(unaff_EDI + 0x24) = 0;\n    fcn.004136e0(arg_8h, piVar5, uVar11, arg_14h_00, arg_1ch, iVar12);\n    fcn.0040230f();\n    fcn.0040230f();\n    *in_FS_OFFSET = piStack68;\n    fcn.004529f8(arg_8h_00);\n    return;\n}\n",
        "token_count": 2432
    },
    "0041337b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0041337b(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h, uint *****arg_18h, uint arg_1ch, char *arg_20h, \n            uint32_t arg_24h)\n\n{\n    char cVar1;\n    uint arg_14h_00;\n    uint8_t uVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    uint *****arg_8h_00;\n    uint *****pppppuVar5;\n    uint *puVar6;\n    int32_t unaff_EBX;\n    uint *****pppppuVar7;\n    int32_t unaff_ESI;\n    uint *****pppppuVar8;\n    int32_t arg_1ch_00;\n    uint32_t arg_1ch_01;\n    int32_t **in_FS_OFFSET;\n    uint32_t uVar9;\n    int32_t *piStack124;\n    uint *****pppppuStack108;\n    uint32_t uStack104;\n    char *pcStack100;\n    uint ****ppppuStack92;\n    uint *****pppppuStack88;\n    uint *****pppppuStack84;\n    uint32_t auStack80 [3];\n    uint32_t uStack68;\n    uint32_t uStack64;\n    uint uStack60;\n    int32_t *piStack52;\n    uchar uStack44;\n    uchar uStack40;\n    uint32_t uStack28;\n    uint uStack24;\n    int32_t *piStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0xffffffff;\n    uStack16 = 0x489201;\n    piStack20 = *in_FS_OFFSET;\n    uStack28 = *0x4b4f00 ^ &pppppuStack108;\n    piStack124 = *0x4b4f00 ^ &stack0xffffff88;\n    *in_FS_OFFSET = &piStack20;\n    auStack80[0] = arg_ch;\n    pppppuStack88 = arg_18h;\n    pcStack100 = arg_20h;\n    uStack104 = arg_24h;\n    if ((arg_24h == 0) || ((*arg_20h != '+' && (*arg_20h != '-')))) {\n        arg_1ch_01 = 0;\n    }\n    else {\n        arg_1ch_01 = 1;\n    }\n    if (((((arg_18h[5] & 0xe00) == 0x800) && (arg_1ch_01 + 2 <= arg_24h)) && (arg_20h[arg_1ch_01] == '0')) &&\n       ((arg_20h[arg_1ch_01 + 1] == 'x' || (arg_20h[arg_1ch_01 + 1] == 'X')))) {\n        arg_1ch_01 = arg_1ch_01 + 2;\n    }\n    uVar3 = fcn.0040e1fb(&ppppuStack92);\n    uStack16 = 0;\n    piVar4 = fcn.0040cf69(uVar3);\n    uStack16 = 0xffffffff;\n    fcn.0040e226();\n    uVar9 = 0;\n    uStack60 = 0xf;\n    uStack64 = 0;\n    auStack80[0] = auStack80[0] & 0xffffff00;\n    pppppuVar7 = pppppuStack108;\n    fcn.0040d587(pppppuStack108, 0);\n    uStack24 = 1;\n    arg_8h_00 = &pppppuStack88;\n    if (0xf < uStack68) {\n        arg_8h_00 = pppppuStack88;\n    }\n    (**(*piVar4 + 0x1c))(unaff_EBX, unaff_ESI + unaff_EBX);\n    uVar3 = fcn.0040e1fb(&piStack124);\n    uStack40 = 2;\n    pppppuVar5 = fcn.004198b6(uVar3);\n    uStack40 = 1;\n    fcn.0040e226();\n    fcn.0040cd3f(auStack80);\n    uStack44 = 3;\n    pppppuVar8 = &pppppuStack84;\n    if (0xf < uStack64) {\n        pppppuVar8 = pppppuStack84;\n    }\n    if ((*pppppuVar8 != '\\x7f') && ('\\0' < *pppppuVar8)) {\n        uVar2 = (**(*piStack124 + 0x10))();\n        uVar9 = uVar9 & 0xffffff00 | uVar2;\n        cVar1 = *pppppuVar8;\n        while (((cVar1 != '\\x7f' && (arg_18h = pppppuVar5,  '\\0' < cVar1)) && (cVar1 < pppppuVar7 - arg_1ch_01))) {\n            pppppuVar7 = pppppuVar7 - cVar1;\n            fcn.0041962e(pppppuVar7, 1, uVar9);\n            if ('\\0' < *(pppppuVar8 + 1)) {\n                pppppuVar8 = pppppuVar8 + 1;\n            }\n            arg_18h = pppppuVar5;\n            cVar1 = *pppppuVar8;\n        }\n    }\n    if (((arg_18h[9] < 0) || ((arg_18h[9] < 1 && (arg_18h[8] == NULL)))) || (arg_18h[8] <= ppppuStack92)) {\n        arg_1ch_00 = 0;\n    }\n    else {\n        arg_1ch_00 = arg_18h[8] - ppppuStack92;\n    }\n    if ((arg_18h[5] & 0x1c0) == 0x40) {\n        pppppuVar7 = &pppppuStack108;\n        if (0xf < pppppuStack88) {\n            pppppuVar7 = pppppuStack108;\n        }\n        puVar6 = fcn.004136af(arg_8h, &stack0xffffff7c, arg_10h, arg_14h, pppppuVar7, arg_1ch_01);\n    }\n    else if ((arg_18h[5] & 0x1c0) == 0x100) {\n        pppppuVar7 = &pppppuStack108;\n        if (0xf < pppppuStack88) {\n            pppppuVar7 = pppppuStack108;\n        }\n        puVar6 = fcn.004136af(arg_8h, &stack0xffffff7c, arg_10h, arg_14h, pppppuVar7, arg_1ch_01);\n        puVar6 = fcn.004136e0(arg_8h, &stack0xffffff7c, *puVar6, puVar6[1], arg_1ch, arg_1ch_00);\n        arg_1ch_00 = 0;\n    }\n    else {\n        puVar6 = fcn.004136e0(arg_8h, &stack0xffffff7c, arg_10h, arg_14h, arg_1ch, arg_1ch_00);\n        arg_1ch_00 = 0;\n        pppppuVar7 = &pppppuStack108;\n        if (0xf < pppppuStack88) {\n            pppppuVar7 = pppppuStack108;\n        }\n        puVar6 = fcn.004136af(arg_8h, &stack0xffffff7c, *puVar6, puVar6[1], pppppuVar7, arg_1ch_01);\n    }\n    pppppuVar7 = &pppppuStack108;\n    if (0xf < pppppuStack88) {\n        pppppuVar7 = pppppuStack108;\n    }\n    puVar6 = fcn.004136af(arg_8h, &stack0xffffff88, *puVar6, puVar6[1], pppppuVar7 + arg_1ch_01, \n                          ppppuStack92 - arg_1ch_01);\n    uVar3 = *puVar6;\n    arg_14h_00 = puVar6[1];\n    arg_18h[8] = NULL;\n    arg_18h[9] = NULL;\n    fcn.004136e0(arg_8h, unaff_EBX, uVar3, arg_14h_00, arg_1ch, arg_1ch_00);\n    fcn.0040230f();\n    fcn.0040230f();\n    *in_FS_OFFSET = piStack52;\n    fcn.004529f8(arg_8h_00);\n    return;\n}\n",
        "token_count": 2032
    },
    "00413cad": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00413cad(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t **ppiVar1;\n    int32_t **arg_14h_00;\n    uint *puVar2;\n    int32_t arg_8h_00;\n    uint *puVar3;\n    int32_t **ppiVar4;\n    int32_t **extraout_ECX;\n    int32_t unaff_EBP;\n    int32_t **ppiVar5;\n    bool bVar6;\n    uint var_14h;\n    uint arg_ch;\n    uint var_4h;\n    \n    fcn.0045b36b(8);\n    *(unaff_EBP + -4) = 0;\n    ppiVar1 = *extraout_ECX;\n    arg_14h_00 = *(unaff_EBP + 0x10);\n    ppiVar4 = ppiVar1[1];\n    bVar6 = true;\n    *(unaff_EBP + -0x14) = 1;\n    ppiVar5 = ppiVar1;\n    while (*(ppiVar4 + 0xd) == '\\0') {\n        bVar6 = *arg_14h_00 < ppiVar4[4];\n        *(unaff_EBP + -0x14) = bVar6;\n        ppiVar5 = ppiVar4;\n        if (bVar6) {\n            ppiVar4 = *ppiVar4;\n        }\n        else {\n            ppiVar4 = ppiVar4[2];\n        }\n    }\n    *(unaff_EBP + 0x10) = ppiVar5;\n    ppiVar4 = ppiVar5;\n    if (bVar6) {\n        if (ppiVar5 != *ppiVar1) {\n            fcn.00413e12();\n            ppiVar4 = *(unaff_EBP + 0x10);\n            goto code_r0x00413d25;\n        }\n        arg_8h_00 = unaff_EBP + 0x10;\n        arg_ch = 1;\n    }\n    else {\ncode_r0x00413d25:\n        if (*arg_14h_00 <= ppiVar4[4]) {\n            ppiVar1 = *(unaff_EBP + 8);\n            *ppiVar1 = ppiVar4;\n            *(ppiVar1 + 1) = 0;\n            goto code_r0x00413d4d;\n        }\n        arg_8h_00 = unaff_EBP + -0x14;\n        arg_ch = *(unaff_EBP + -0x14);\n    }\n    puVar3 = fcn.00415006(arg_8h_00, arg_ch, ppiVar5, arg_14h_00);\n    puVar2 = *(unaff_EBP + 8);\n    *puVar2 = *puVar3;\n    *(puVar2 + 1) = 1;\ncode_r0x00413d4d:\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 699
    },
    "00413e12": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t ** __fastcall fcn.00413e12(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    \n    ppiVar3 = *param_1;\n    if (*(ppiVar3 + 0xd) == '\\0') {\n        piVar1 = *ppiVar3;\n        if (*(*ppiVar3 + 0xd) != '\\0') {\n            while ((ppiVar3 = ppiVar3[1],  *(ppiVar3 + 0xd) == '\\0' && (*param_1 == *ppiVar3))) {\n                *param_1 = ppiVar3;\n            }\n            if (*(*param_1 + 0xd) != '\\0') {\n                return param_1;\n            }\n            *param_1 = ppiVar3;\n            return param_1;\n        }\n        do {\n            piVar2 = piVar1;\n            piVar1 = piVar2[2];\n        } while (*(piVar2[2] + 0xd) == '\\0');\n    }\n    else {\n        piVar2 = ppiVar3[2];\n    }\n    *param_1 = piVar2;\n    return param_1;\n}\n",
        "token_count": 280
    },
    "004140f9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004140f9(code **param_1)\n\n{\n    code *pcVar1;\n    uint unaff_ESI;\n    \n    *param_1 = vtable.std::basic_filebuf_wchar_t__struct_std::char_traits_wchar_t__.0;\n    if (param_1[0x14] != NULL) {\n        fcn.00414ae4();\n    }\n    if (*(param_1 + 0x13) != '\\0') {\n        fcn.00414920();\n    }\n    pcVar1 = param_1[0xd];\n    *param_1 = vtable.std::basic_streambuf_wchar_t__struct_std::char_traits_wchar_t__.0;\n    if (pcVar1 != NULL) {\n        fcn.0040e226(unaff_ESI);\n        fcn.00452a07(pcVar1);\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "00414970": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414970(int32_t *param_1)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint ******ppppppuVar4;\n    int32_t iVar5;\n    uint ******ppppppuVar6;\n    uint ******ppppppuVar7;\n    int32_t **in_FS_OFFSET;\n    int32_t *in_stack_ffffffbc;\n    uint ******ppppppuStack60;\n    int32_t iStack56;\n    uint ******appppppuStack52 [3];\n    uint32_t uStack40;\n    int32_t iStack36;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    int32_t *piStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0xffffffff;\n    uStack16 = 0x487b86;\n    piStack20 = *in_FS_OFFSET;\n    uStack28 = *0x4b4f00 ^ &stack0xffffffbc;\n    uVar2 = *0x4b4f00 ^ &stack0xffffffb0;\n    *in_FS_OFFSET = &piStack20;\n    if (((param_1[0x10] != 0) && (*(param_1 + 0x46) != '\\0')) &&\n       (iVar1 = (**(*param_1 + 0xc))(0xffff, uVar2),  iVar1 != -1)) {\n        uStack32 = 0xf;\n        iStack36 = 0;\n        appppppuStack52[0] = appppppuStack52[0] & 0xffffff00;\n        fcn.0040d587(8, 0);\n        in_stack_ffffffbc = param_1 + 0x12;\n        piStack20 = NULL;\n        uVar2 = uStack40;\n        ppppppuVar4 = ppppppuStack60;\ncode_r0x00414a0a:\n        ppppppuVar7 = appppppuStack52;\n        if (0xf < uVar2) {\n            ppppppuVar7 = ppppppuVar4;\n        }\n        ppppppuVar6 = appppppuStack52;\n        if (0xf < uVar2) {\n            ppppppuVar6 = ppppppuVar4;\n        }\n        iVar3 = (**(*param_1[0x10] + 0x20))(ppppppuStack60, ppppppuVar6, iStack36 + ppppppuVar7, &iStack56);\n        if (iVar3 == 0) {\n            *(param_1 + 0x46) = 0;\n        }\n        else if (iVar3 != 1) goto code_r0x00414ab7;\n        ppppppuVar4 = appppppuStack52;\n        if (0xf < uStack32) {\n            ppppppuVar4 = appppppuStack52[0];\n        }\n        iVar3 = iStack56 - ppppppuVar4;\n        if (iVar3 != 0) {\n            ppppppuVar4 = appppppuStack52;\n            if (0xf < uStack32) {\n                ppppppuVar4 = appppppuStack52[0];\n            }\n            iVar5 = fcn.00456245(ppppppuVar4, 1, iVar3, param_1[0x14]);\n            if (iVar3 != iVar5) goto code_r0x00414ab7;\n        }\n        if (*(param_1 + 0x46) == '\\0') goto code_r0x00414ab7;\n        uVar2 = uStack32;\n        ppppppuVar4 = appppppuStack52[0];\n        if (iVar3 == 0) {\n            fcn.0040180b(8, 0);\n            uVar2 = uStack40;\n            ppppppuVar4 = ppppppuStack60;\n        }\n        goto code_r0x00414a0a;\n    }\ncode_r0x00414ac6:\n    *in_FS_OFFSET = piStack20;\n    fcn.004529f8(in_stack_ffffffbc);\n    return;\ncode_r0x00414ab7:\n    fcn.0040230f();\n    goto code_r0x00414ac6;\n}\n",
        "token_count": 977
    },
    "00414cde": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_14h_2\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00414cde(uint param_1, uint param_2)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int32_t *extraout_ECX;\n    int32_t extraout_EDX;\n    uint unaff_ESI;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t uStackY65752;\n    uint uStackY65740;\n    int32_t iStackY65736;\n    uint uStackY65732;\n    uint uStackY65728;\n    uint uStackY65724;\n    uint uStackY65720;\n    uint uStackY65708;\n    uint uStackY65704;\n    int32_t iStackY65700;\n    uint uStackY65692;\n    uchar *puStackY65676;\n    uchar *puStackY65672;\n    uint *puStackY65668;\n    uchar auStackY65664 [65536];\n    uint var_7ch;\n    uint var_78h;\n    uint var_70h;\n    uint uStackY92;\n    uint *in_stack_ffffffbc;\n    uint var_30h;\n    uint32_t var_2ch;\n    uint var_18h;\n    uint var_14h_2;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4887b0;\n    var_ch_2 = *in_FS_OFFSET;\n    fcn.00459c50();\n    *in_FS_OFFSET = &fcn.00414cde::var_ch_2;\n    puVar1 = *(*extraout_ECX + 4) + 0x14 + extraout_ECX;\n    *puVar1 = *puVar1 & 0xfffffffe;\n    uStackY65740 = CONCAT31(uStackY65740._1_3_, 1);\n    iVar3 = *(*(*extraout_ECX + 4) + 0x38 + extraout_ECX);\n    uStackY65752 = uStackY65752 & 0xffffff00 | iVar3 == 0;\n    var_2ch = uStackY65752;\n    iStackY65736 = 0;\n    uStackY65732 = 0;\n    uStackY65728 = 0;\n    fcn.004162b4(iVar3, uStackY65752, 0, uStackY65740);\n    var_4h = 0;\n    if (*(*(*extraout_ECX + 4) + 0xc + extraout_ECX) != 0) {\n        fcn.0040229c(\"read error\");\n        in_stack_ffffffbc = &fcn.00414cde::var_2ch;\n        var_4h._0_1_ = 1;\n        fcn.00410100(in_stack_ffffffbc, var_14h, 0);\n        var_4h = CONCAT31(var_4h._1_3_, 2);\n        fcn.00414c83(\"C:\\\\ci-jenkins\\\\workspace\\\\iRobot\\\\iRobot_1.62\\\\iRobot_1.62\\\\import\\\\boost\\\\boost/property_tree/detail/xml_parser_read_rapidxml.hpp\"\n                     , 0x65);\n    }\n    uStackY65740 = 0;\n    fcn.00415216(&stack0xfffeff34);\n    iVar2 = iStackY65736;\n    puStackY65676 = &stack0xfffeff80;\n    puStackY65672 = &stack0xfffeff80;\n    puStackY65668 = &fcn.00414cde::var_7ch;\n    uStackY65724 = 0;\n    uStackY65720 = 0;\n    uStackY65708 = 0;\n    uStackY65704 = 0;\n    iStackY65700 = 0;\n    uStackY65692 = 0;\n    var_7ch = 0;\n    var_78h = 0;\n    var_4h._0_1_ = 4;\n    fcn.0041562f(iStackY65736);\n    fcn.00413959();\n    var_4h._0_1_ = 5;\n    for (iVar3 = iStackY65700; iVar3 != 0; iVar3 = *(iVar3 + 0x2c)) {\n        uStackY92 = 0x414e5c;\n        fcn.004156d8(6);\n    }\n    fcn.004177a4();\n    *(extraout_EDX + 0x18) = unaff_ESI;\n    var_4h._0_1_ = 4;\n    fcn.004139d2();\n    var_4h = CONCAT31(var_4h._1_3_, 3);\n    fcn.00415270();\n    if (iVar2 != 0) {\n        uStackY92 = 0x414e9a;\n        fcn.00452a07();\n    }\n    *in_FS_OFFSET = var_ch_2;\n    fcn.004529f8(in_stack_ffffffbc);\n    return;\n}\n",
        "token_count": 1239
    },
    "00414f08": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00414f08(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char *pcVar1;\n    int32_t unaff_EBP;\n    char *arg_8h_00;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_4h;\n    \n    fcn.0045b335(0x28);\n    arg_8h_00 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x30) = 0;\n    pcVar1 = fcn.00415c75(unaff_EBP + -0x2c, *(unaff_EBP + 0xc));\n    *(unaff_EBP + -4) = 0;\n    if (*pcVar1 != '\\0') {\n        arg_8h_00 = pcVar1 + 4;\n    }\n    fcn.004084c5(arg_8h_00);\n    if (*(unaff_EBP + -0x2c) != '\\0') {\n        fcn.00402754(1, 0);\n    }\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 286
    },
    "00414f5b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00414f5b(uint arg_8h, uint arg_ch)\n\n{\n    uchar *arg_8h_00;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_4h;\n    \n    fcn.0045b335(0x14);\n    arg_8h_00 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x20) = 0;\n    fcn.004154a1(unaff_EBP + -0x1c, *(unaff_EBP + 0xc));\n    *(unaff_EBP + -4) = 0;\n    if (*(unaff_EBP + -0x1c) == '\\0') {\n        *arg_8h_00 = 0;\n    }\n    else {\n        fcn.00415cb7(arg_8h_00);\n    }\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 244
    },
    "00415006": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415006(int32_t **arg_8h, uint arg_ch, int32_t **arg_10h, uint arg_14h)\n\n{\n    int32_t *arg_8h_00;\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t **in_ECX;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    \n    if (0x9249247 < in_ECX[1]) {\n        fcn.0044e7eb(\"map/set<T> too long\");\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    piVar2 = fcn.004165ae(arg_14h);\n    in_ECX[1] = in_ECX[1] + 1;\n    piVar2[1] = arg_10h;\n    if (arg_10h == *in_ECX) {\n        (*in_ECX)[1] = piVar2;\n        **in_ECX = piVar2;\n        (*in_ECX)[2] = piVar2;\n    }\n    else if (arg_ch == '\\0') {\n        arg_10h[2] = piVar2;\n        if (arg_10h == (*in_ECX)[2]) {\n            (*in_ECX)[2] = piVar2;\n        }\n    }\n    else {\n        *arg_10h = piVar2;\n        if (arg_10h == **in_ECX) {\n            **in_ECX = piVar2;\n        }\n    }\n    iVar3 = piVar2[1];\n    piVar5 = piVar2;\n    do {\n        if (*(iVar3 + 0xc) != '\\0') {\n            *((*in_ECX)[1] + 0xc) = 1;\n            *arg_8h = piVar2;\n            return;\n        }\n        arg_8h_00 = piVar5[1];\n        piVar4 = *arg_8h_00[1];\n        if (arg_8h_00 == piVar4) {\n            piVar4 = arg_8h_00[1][2];\n            if (*(piVar4 + 3) == '\\0') {\ncode_r0x004150b5:\n                *(arg_8h_00 + 3) = 1;\n                *(piVar4 + 3) = 1;\n                *(*(piVar5[1] + 4) + 0xc) = 0;\n                piVar5 = *(piVar5[1] + 4);\n            }\n            else {\n                if (piVar5 == arg_8h_00[2]) {\n                    fcn.0040becf(arg_8h_00);\n                    piVar5 = arg_8h_00;\n                }\n                *(piVar5[1] + 0xc) = 1;\n                *(*(piVar5[1] + 4) + 0xc) = 0;\n                fcn.0040bf13(*(piVar5[1] + 4));\n            }\n        }\n        else {\n            if (*(piVar4 + 3) == '\\0') goto code_r0x004150b5;\n            if (piVar5 == *arg_8h_00) {\n                fcn.0040bf13(arg_8h_00);\n                piVar5 = arg_8h_00;\n            }\n            *(piVar5[1] + 0xc) = 1;\n            *(*(piVar5[1] + 4) + 0xc) = 0;\n            fcn.0040becf(*(piVar5[1] + 4));\n        }\n        iVar3 = piVar5[1];\n    } while( true );\n}\n",
        "token_count": 838
    },
    "00415339": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415339(int32_t *param_1)\n\n{\n    code *pcVar1;\n    uint arg_8h;\n    int32_t iVar2;\n    \n    if (param_1[2] - param_1[1] >> 1 == 0) {\n        iVar2 = param_1[1] - *param_1 >> 1;\n        if (iVar2 == 0x7fffffff) {\n            fcn.0044e7eb(\"vector<T> too long\");\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        arg_8h = fcn.00415397(iVar2 + 1);\n        fcn.004153c3(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 172
    },
    "004153c3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004153c3(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar4 = 0;\n    iVar3 = arg_8h;\n    iVar2 = fcn.004024e3(arg_8h);\n    fcn.004530c0(iVar2, *in_ECX, in_ECX[1] - *in_ECX & 0xfffffffe, iVar3, uVar4);\n    iVar3 = in_ECX[1];\n    iVar1 = *in_ECX;\n    if (*in_ECX != 0) {\n        fcn.00452a07(*in_ECX);\n    }\n    *in_ECX = iVar2;\n    in_ECX[2] = iVar2 + arg_8h * 2;\n    in_ECX[1] = iVar2 + (iVar3 - iVar1 >> 1) * 2;\n    return;\n}\n",
        "token_count": 233
    },
    "004154fa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid __cdecl fcn.004154fa(uint arg_8h)\n\n{\n    int16_t *piVar1;\n    uint arg_8h_00;\n    code *pcVar2;\n    uint *arg_ch;\n    uint *puVar3;\n    uint extraout_ECX;\n    int32_t unaff_EBP;\n    int16_t *arg_ch_00;\n    uint var_5ch;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_4h;\n    \n    fcn.0045b335(0x50);\n    *(unaff_EBP + -0x4c) = 0;\n    puVar3 = arg_ch;\n    if (7 < arg_ch[5]) {\n        puVar3 = *arg_ch;\n    }\n    arg_ch_00 = arg_ch[7];\n    piVar1 = puVar3 + arg_ch[4] * 2;\n    if (arg_ch_00 != piVar1) {\n        do {\n            if (*arg_ch_00 == *(arg_ch + 6)) break;\n            arg_ch_00 = arg_ch_00 + 1;\n        } while (arg_ch_00 != piVar1);\n    }\n    *(unaff_EBP + -0x34) = 0;\n    arg_8h_00 = arg_ch[7];\n    *(unaff_EBP + -0x30) = 7;\n    *(unaff_EBP + -0x44) = 0;\n    fcn.00416b3b(arg_8h_00, arg_ch_00);\n    *(unaff_EBP + -4) = 0;\n    arg_ch[7] = arg_ch_00;\n    puVar3 = arg_ch;\n    if (7 < arg_ch[5]) {\n        puVar3 = *arg_ch;\n    }\n    if (arg_ch_00 != puVar3 + arg_ch[4] * 2) {\n        arg_ch[7] = arg_ch_00 + 1;\n    }\n    fcn.00415f33(unaff_EBP + -0x2c, unaff_EBP + -0x44);\n    *(unaff_EBP + -4) = 1;\n    if (*(unaff_EBP + -0x2c) == '\\0') {\n        *(unaff_EBP + -4) = 0;\n        fcn.0040229c(\"Path syntax error\");\n        *(unaff_EBP + -4) = 2;\n        fcn.00416146(unaff_EBP + -0x28, arg_ch);\n        *(unaff_EBP + -4) = 3;\n        fcn.004161c4(extraout_ECX, extraout_ECX);\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    fcn.004084c5(unaff_EBP + -0x28);\n    if (*(unaff_EBP + -0x2c) != '\\0') {\n        fcn.00402754(1, 0);\n        *(unaff_EBP + -0x2c) = 0;\n    }\n    fcn.00402754(1, 0);\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 762
    },
    "004156d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_48h\n\nvoid __cdecl fcn.004156d8(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t *extraout_ECX;\n    uint extraout_EDX;\n    int32_t iVar7;\n    int32_t unaff_EBP;\n    uint var_2fch;\n    uint var_2f8h;\n    uint var_2f4h;\n    uint var_2f0h;\n    uint var_2ech;\n    uint var_2e8h;\n    uint var_2e4h;\n    uint var_2e0h;\n    uint var_2c8h;\n    uint var_2ach;\n    uint var_294h;\n    uint var_278h;\n    uint var_260h;\n    uint var_244h;\n    uint var_240h;\n    uint var_224h;\n    uint var_220h;\n    uint var_204h;\n    uint var_1e8h;\n    uint var_1cch;\n    uint var_1b0h;\n    uint var_194h;\n    uint var_178h;\n    uint var_160h;\n    uint var_148h;\n    uint var_130h;\n    uint var_118h;\n    uint var_fch;\n    uint var_e4h;\n    uint var_c8h;\n    uint var_b0h;\n    uint var_94h;\n    uint var_7ch;\n    uint var_60h;\n    uint var_48h;\n    uint var_2ch;\n    uint var_4h;\n    \n    fcn.0045b335(0x2f0);\n    *(unaff_EBP + -0x2e4) = extraout_EDX;\n    *(unaff_EBP + -0x2ec) = extraout_ECX;\n    iVar2 = extraout_ECX[5];\n    if (iVar2 == 1) {\n        iVar2 = 0x4b96e8;\n        if (*extraout_ECX != 0) {\n            iVar2 = *extraout_ECX;\n        }\n        *(unaff_EBP + -0x2e8) = iVar2;\n        uVar1 = fcn.00413959();\n        *(unaff_EBP + -4) = 0;\n        puVar3 = fcn.00416491(uVar1);\n        *(unaff_EBP + -4) = 1;\n        fcn.00402707(*puVar3);\n        *(unaff_EBP + -4) = 2;\n        fcn.00416af0(puVar3 + 1);\n        *(unaff_EBP + -4) = 3;\n        piVar4 = fcn.00416118(unaff_EBP + -0x2fc, unaff_EBP + -0x130);\n        *(unaff_EBP + -0x2e4) = *piVar4 + 0x18;\n        *(unaff_EBP + -4) = 4;\n        fcn.004139d2();\n        fcn.00402754(1, 0);\n        *(unaff_EBP + -4) = 0;\n        fcn.004139d2();\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.004139d2();\n        piVar4 = extraout_ECX;\n        if (extraout_ECX[8] != 0) {\n            uVar1 = fcn.00413959();\n            *(unaff_EBP + -4) = 5;\n            if ((*0x4b9750 & 1) == 0) {\n                *0x4b9750 = *0x4b9750 | 1;\n                *(unaff_EBP + -4) = 6;\n                fcn.00416f21();\n                fcn.00453ab0(0x48b9ad);\n                *(unaff_EBP + -4) = 5;\n            }\n            iVar2 = fcn.004164e5(uVar1);\n            fcn.00401ed3(iVar2);\n            *(unaff_EBP + -4) = 8;\n            fcn.00416af0(iVar2 + 0x18);\n            *(unaff_EBP + -4) = 9;\n            piVar5 = fcn.00416118(unaff_EBP + -0x2f4, unaff_EBP + -0xfc);\n            *(unaff_EBP + -0x2f0) = *piVar5 + 0x18;\n            *(unaff_EBP + -4) = 10;\n            fcn.004139d2();\n            fcn.00402754(1, 0);\n            *(unaff_EBP + -4) = 0xb;\n            fcn.004139d2();\n            fcn.00402754(1, 0);\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.004139d2();\n            piVar5 = extraout_ECX[8];\n            if (piVar5 != NULL) {\n                do {\n                    iVar2 = 0x4b96e8;\n                    if (*piVar5 != 0) {\n                        iVar2 = *piVar5;\n                    }\n                    *(unaff_EBP + -0x2e8) = iVar2;\n                    uVar1 = fcn.00413959();\n                    *(unaff_EBP + -4) = 0xc;\n                    puVar3 = fcn.00416491(uVar1);\n                    *(unaff_EBP + -4) = 0xd;\n                    fcn.00402707(*puVar3);\n                    *(unaff_EBP + -4) = 0xe;\n                    fcn.00416af0(puVar3 + 1);\n                    *(unaff_EBP + -4) = 0xf;\n                    fcn.00416118(unaff_EBP + -0x2f8, unaff_EBP + -0x60);\n                    *(unaff_EBP + -4) = 0x10;\n                    fcn.004139d2();\n                    fcn.00402754(1, 0);\n                    *(unaff_EBP + -4) = 0xc;\n                    fcn.004139d2();\n                    *(unaff_EBP + -4) = 0xffffffff;\n                    fcn.004139d2();\n                    iVar2 = piVar5[1];\n                    if (iVar2 == 0) {\n                        iVar7 = 0;\n                    }\n                    else {\n                        iVar7 = piVar5[3];\n                    }\n                    iVar6 = 0x4b96e8;\n                    if (iVar2 != 0) {\n                        iVar6 = iVar2;\n                    }\n                    uVar1 = fcn.00415f0b(iVar6, iVar7);\n                    fcn.004017bf(uVar1);\n                    fcn.00402754(1, 0);\n                    if (piVar5[4] == 0) {\n                        piVar5 = NULL;\n                    }\n                    else {\n                        piVar5 = piVar5[6];\n                    }\n                } while (piVar5 != NULL);\n                piVar4 = *(unaff_EBP + -0x2ec);\n            }\n        }\n        for (iVar2 = piVar4[6]; iVar2 != 0; iVar2 = *(iVar2 + 0x2c)) {\n            fcn.004156d8(*(unaff_EBP + 8));\n        }\n    }\n    else if (1 < iVar2) {\n        if (iVar2 < 4) {\n            if ((*(unaff_EBP + 8) & 1) == 0) {\n                iVar2 = extraout_ECX[1];\n                if (iVar2 == 0) {\n                    iVar7 = 0;\n                }\n                else {\n                    iVar7 = extraout_ECX[3];\n                }\n                iVar6 = 0x4b96e8;\n                if (iVar2 != 0) {\n                    iVar6 = iVar2;\n                }\n                uVar1 = fcn.00415f0b(iVar6, iVar7);\n                *(unaff_EBP + -4) = 0x19;\n                fcn.004019b5(uVar1, 0, 0xffffffff);\n            }\n            else {\n                iVar2 = 0x4b96e8;\n                if (extraout_ECX[1] != 0) {\n                    iVar2 = extraout_ECX[1];\n                }\n                fcn.00402707(iVar2);\n                *(unaff_EBP + -4) = 0x11;\n                uVar1 = fcn.004160a4(unaff_EBP + -0x2c);\n                *(unaff_EBP + -4) = 0x12;\n                if ((*0x4b976c & 1) == 0) {\n                    *0x4b976c = *0x4b976c | 1;\n                    *(unaff_EBP + -4) = 0x13;\n                    fcn.00416f21();\n                    fcn.00453ab0(0x48b99e);\n                    *(unaff_EBP + -4) = 0x12;\n                }\n                iVar2 = fcn.004164e5(uVar1);\n                fcn.00401ed3(iVar2);\n                *(unaff_EBP + -4) = 0x15;\n                fcn.00416af0(iVar2 + 0x18);\n                *(unaff_EBP + -4) = 0x16;\n                fcn.00416118(unaff_EBP + -0x2ec, unaff_EBP + -200);\n                *(unaff_EBP + -4) = 0x17;\n                fcn.004139d2();\n                fcn.00402754(1, 0);\n                *(unaff_EBP + -4) = 0x18;\n                fcn.004139d2();\n                fcn.00402754(1, 0);\n                *(unaff_EBP + -4) = 0x11;\n                fcn.004139d2();\n            }\n        }\n        else {\n            if ((iVar2 != 4) || ((*(unaff_EBP + 8) & 2) != 0)) goto code_r0x00415c6f;\n            iVar2 = extraout_ECX[1];\n            if (iVar2 == 0) {\n                iVar7 = 0;\n            }\n            else {\n                iVar7 = extraout_ECX[3];\n            }\n            iVar6 = 0x4b96e8;\n            if (iVar2 != 0) {\n                iVar6 = iVar2;\n            }\n            uVar1 = fcn.00415f0b(iVar6, iVar7);\n            *(unaff_EBP + -4) = 0x1a;\n            uVar1 = fcn.004160a4(uVar1);\n            *(unaff_EBP + -4) = 0x1b;\n            if ((*0x4b9788 & 1) == 0) {\n                *0x4b9788 = *0x4b9788 | 1;\n                *(unaff_EBP + -4) = 0x1c;\n                fcn.00416f21();\n                fcn.00453ab0(0x48b98f);\n                *(unaff_EBP + -4) = 0x1b;\n            }\n            iVar2 = fcn.004164e5(uVar1);\n            fcn.00401ed3(iVar2);\n            *(unaff_EBP + -4) = 0x1e;\n            fcn.00416af0(iVar2 + 0x18);\n            *(unaff_EBP + -4) = 0x1f;\n            fcn.00416118(unaff_EBP + -0x2ec, unaff_EBP + -0x94);\n            *(unaff_EBP + -4) = 0x20;\n            fcn.004139d2();\n            fcn.00402754(1, 0);\n            *(unaff_EBP + -4) = 0x21;\n            fcn.004139d2();\n            fcn.00402754(1, 0);\n            *(unaff_EBP + -4) = 0x1a;\n            fcn.004139d2();\n        }\n        fcn.00402754(1, 0);\n    }\ncode_r0x00415c6f:\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 2854
    },
    "00415c75": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00415c75(uint arg_8h, uint arg_ch)\n\n{\n    uchar *arg_8h_00;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_4h;\n    \n    fcn.0045b335(0x14);\n    arg_8h_00 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x20) = 0;\n    fcn.004154a1(unaff_EBP + -0x1c, *(unaff_EBP + 0xc));\n    *(unaff_EBP + -4) = 0;\n    if (*(unaff_EBP + -0x1c) == '\\0') {\n        *arg_8h_00 = 0;\n    }\n    else {\n        fcn.0041655c(arg_8h_00);\n    }\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 243
    },
    "00415d7a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00415d7a(uint arg_8h, uint arg_ch)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0045b302(8);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    if (*(unaff_EBP + 0xc) != 0) {\n        extraout_ECX[0x15] = 0x4a4370;\n        extraout_ECX[0x17] = vtable.boost::exception_detail::clone_base.0;\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x10) = 1;\n    }\n    fcn.00415de8(*(unaff_EBP + 8));\n    *extraout_ECX =\n         vtable.boost::exception_detail::clone_impl_struct_boost::exception_detail::error_info_injector_class_boost::property_tree::xml_parser::xml_parser_error__.2.0\n    ;\n    extraout_ECX[0x10] =\n         vtable.boost::exception_detail::clone_impl_struct_boost::exception_detail::error_info_injector_class_boost::property_tree::xml_parser::xml_parser_error__.1.0\n    ;\n    *(*(extraout_ECX[0x15] + 4) + 0x54 + extraout_ECX) =\n         vtable.boost::exception_detail::clone_impl_struct_boost::exception_detail::error_info_injector_class_boost::property_tree::xml_parser::xml_parser_error__.0\n    ;\n    *(*(extraout_ECX[0x15] + 4) + 0x50 + extraout_ECX) = 0;\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 441
    },
    "00415f6e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415f6e(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x18) == 0) {\n        *(arg_8h + 0x28) = 0;\n        *(in_ECX + 0x18) = arg_8h;\n    }\n    else {\n        *(arg_8h + 0x28) = *(in_ECX + 0x1c);\n        *(*(in_ECX + 0x1c) + 0x2c) = arg_8h;\n    }\n    *(in_ECX + 0x1c) = arg_8h;\n    *(arg_8h + 0x2c) = 0;\n    *(arg_8h + 0x10) = in_ECX;\n    return;\n}\n",
        "token_count": 193
    },
    "00416313": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00416313(int16_t **arg_8h)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    code *pcVar3;\n    char cVar4;\n    uint uVar5;\n    code *var_14h;\n    char *var_8h;\n    int16_t *var_4h;\n    \n    piVar2 = *arg_8h;\n    if (*piVar2 == 0x21) {\n        var_4h = piVar2 + 1;\n        iVar1 = *var_4h;\n        if (iVar1 == 0x2d) {\n            if (piVar2[2] == 0x2d) {\n                *arg_8h = piVar2 + 3;\n                uVar5 = fcn.00416d88(arg_8h);\n                return uVar5;\n            }\n        }\n        else if (iVar1 == 0x44) {\n            if ((((piVar2[2] == 0x4f) && (piVar2[3] == 0x43)) &&\n                ((piVar2[4] == 0x54 && ((piVar2[5] == 0x59 && (piVar2[6] == 0x50)))))) &&\n               ((piVar2[7] == 0x45 && (cVar4 = fcn.00416755(),  cVar4 != '\\0')))) {\n                *arg_8h = piVar2 + 9;\n                uVar5 = fcn.00416e74(arg_8h);\n                return uVar5;\n            }\n        }\n        else if (((((iVar1 == 0x5b) && (piVar2[2] == 0x43)) && (piVar2[3] == 0x44)) &&\n                 ((piVar2[4] == 0x41 && (piVar2[5] == 0x54)))) && ((piVar2[6] == 0x41 && (piVar2[7] == 0x5b)))) {\n            *arg_8h = piVar2 + 8;\n            uVar5 = fcn.00416dec(arg_8h);\n            return uVar5;\n        }\n        for (; *arg_8h = var_4h,  *var_4h != 0x3e; var_4h = var_4h + 1) {\n            if (*var_4h == 0) {\n                fcn.00453bd4();\n                var_14h = vtable.boost::property_tree::detail::rapidxml::parse_error.0;\n                var_8h = \"unexpected end of data\";\n                fcn.0045b275(&var_14h, 0x4aca34);\n                pcVar3 = swi(3);\n                uVar5 = (*pcVar3)();\n                return uVar5;\n            }\n        }\n        *arg_8h = *arg_8h + 1;\n        uVar5 = 0;\n    }\n    else if (*piVar2 == 0x3f) {\n        *arg_8h = piVar2 + 1;\n        iVar1 = piVar2[1];\n        if ((((iVar1 == 0x78) || (iVar1 == 0x58)) && ((piVar2[2] == 0x6d || (piVar2[2] == 0x4d)))) &&\n           (((piVar2[3] == 0x6c || (piVar2[3] == 0x4c)) && (cVar4 = fcn.00416755(),  cVar4 != '\\0')))) {\n            *arg_8h = piVar2 + 5;\n            uVar5 = fcn.00416d2d(arg_8h);\n        }\n        else {\n            uVar5 = fcn.00416d2d(arg_8h);\n        }\n    }\n    else {\n        uVar5 = fcn.00416c45(arg_8h);\n    }\n    return uVar5;\n}\n",
        "token_count": 905
    },
    "00416789": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00416789(void)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t *arg_8h;\n    uint32_t uVar5;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_4h;\n    \n    fcn.0045b36b(0x1c);\n    *(unaff_EBP + -0x18) = arg_8h;\n    *(unaff_EBP + -0x1c) = 0;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    fcn.0040e45b(arg_8h, 1);\n    *(unaff_EBP + -4) = 0;\n    if (*(unaff_EBP + -0x24) == '\\0') {\n        uVar5 = 0;\n    }\n    else {\n        *(unaff_EBP + -4) = 1;\n        uVar3 = fcn.0040e29b();\n        *(unaff_EBP + -0x1c) = uVar3 & 0xffff;\n        if ((uVar3 & 0xffff) == -1) {\n            uVar5 = 3;\n        }\n        else {\n            fcn.0040e267();\n            puVar1 = arg_8h + 2;\n            uVar3 = *puVar1;\n            *puVar1 = *puVar1 + 1;\n            uVar5 = 0;\n            arg_8h[3] = arg_8h[3] + (0xfffffffe < uVar3);\n        }\n        *(unaff_EBP + -4) = 0;\n    }\n    iVar4 = *(*arg_8h + 4) + arg_8h;\n    *(unaff_EBP + -0x20) = iVar4;\n    if (uVar5 != 0) {\n        uVar5 = *(iVar4 + 0xc) | uVar5;\n        if (*(*(unaff_EBP + -0x20) + 0x38) == 0) {\n            uVar5 = uVar5 | 4;\n        }\n        fcn.0040e96e(uVar5, 0);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    piVar2 = *(*(**(unaff_EBP + -0x28) + 4) + 0x38 + *(unaff_EBP + -0x28));\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 8))();\n    }\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 656
    },
    "00416c45": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint16_t ** __cdecl fcn.00416c45(int16_t **arg_8h)\n\n{\n    code *pcVar1;\n    int16_t **ppiVar2;\n    int16_t *piVar3;\n    int16_t *piVar4;\n    code *var_18h;\n    char *var_ch;\n    int16_t *var_8h;\n    uint var_4h;\n    \n    ppiVar2 = fcn.00417299(1);\n    piVar3 = *arg_8h;\n    fcn.00417a8f();\n    var_8h = *arg_8h;\n    if (var_8h == piVar3) {\n        fcn.00453bd4();\n        var_ch = \"expected element name\";\n    }\n    else {\n        *ppiVar2 = piVar3;\n        ppiVar2[2] = var_8h - piVar3 >> 1;\n        fcn.004162f7();\n        fcn.00417aad(arg_8h, ppiVar2);\n        piVar3 = *arg_8h;\n        if (*piVar3 == 0x3e) {\n            *arg_8h = piVar3 + 1;\n            fcn.00417c35(arg_8h, ppiVar2);\ncode_r0x00416ce2:\n            piVar3 = 0x4b96e8;\n            if (*ppiVar2 == NULL) {\n                piVar4 = NULL;\n            }\n            else {\n                piVar3 = *ppiVar2;\n                piVar4 = ppiVar2[2];\n            }\n            piVar3[piVar4] = 0;\n            return ppiVar2;\n        }\n        var_8h = piVar3;\n        if (*piVar3 == 0x2f) {\n            var_8h = piVar3 + 1;\n            *arg_8h = var_8h;\n            if (*var_8h == 0x3e) {\n                *arg_8h = piVar3 + 2;\n                goto code_r0x00416ce2;\n            }\n        }\n        fcn.00453bd4();\n        var_ch = 0x4a3888;\n    }\n    var_18h = vtable.boost::property_tree::detail::rapidxml::parse_error.0;\n    fcn.0045b275(&var_18h, 0x4aca34);\n    pcVar1 = swi(3);\n    ppiVar2 = (*pcVar1)();\n    return ppiVar2;\n}\n",
        "token_count": 569
    },
    "00416fc3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00416fc3(uint arg_8h, uint arg_ch)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0045b302(8);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    if (*(unaff_EBP + 0xc) != 0) {\n        extraout_ECX[9] = 0x4a422c;\n        extraout_ECX[0xb] = vtable.boost::exception_detail::clone_base.0;\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x10) = 1;\n    }\n    fcn.00417031(*(unaff_EBP + 8));\n    *extraout_ECX =\n         vtable.boost::exception_detail::clone_impl_struct_boost::exception_detail::error_info_injector_class_boost::property_tree::ptree_bad_path__.2.0\n    ;\n    extraout_ECX[4] =\n         vtable.boost::exception_detail::clone_impl_struct_boost::exception_detail::error_info_injector_class_boost::property_tree::ptree_bad_path__.1.0\n    ;\n    *(*(extraout_ECX[9] + 4) + 0x24 + extraout_ECX) =\n         vtable.boost::exception_detail::clone_impl_struct_boost::exception_detail::error_info_injector_class_boost::property_tree::ptree_bad_path__.0\n    ;\n    *(*(extraout_ECX[9] + 4) + 0x20 + extraout_ECX) = 0;\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 424
    },
    "00417a8f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00417a8f(uint16_t **param_1)\n\n{\n    uint16_t *puVar1;\n    uint32_t uVar2;\n    \n    puVar1 = *param_1;\n    while( true ) {\n        uVar2 = *puVar1;\n        if (0x7f < uVar2) {\n            uVar2 = 0x7a;\n        }\n        if (*(uVar2 + 0x4a40f8) == '\\0') break;\n        puVar1 = puVar1 + 1;\n    }\n    *param_1 = puVar1;\n    return;\n}\n",
        "token_count": 141
    },
    "00417aad": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417aad(int16_t **arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    int16_t **arg_8h_00;\n    int32_t iVar4;\n    int16_t *piVar5;\n    int16_t *piVar6;\n    code *var_18h;\n    char *var_ch;\n    int16_t *var_8h;\n    uint var_4h;\n    \n    cVar3 = fcn.00417e50();\n    while( true ) {\n        if (cVar3 == '\\0') {\n            return;\n        }\n        var_8h = *arg_8h;\n        piVar6 = var_8h + 1;\n        *arg_8h = piVar6;\n        while (cVar3 = fcn.00417e50(),  cVar3 != '\\0') {\n            piVar6 = piVar6 + 1;\n        }\n        *arg_8h = piVar6;\n        if (piVar6 == var_8h) {\n            fcn.00453bd4();\n            var_ch = \"expected attribute name\";\n            goto code_r0x00417c26;\n        }\n        arg_8h_00 = fcn.00417e34();\n        arg_8h_00[2] = *arg_8h - var_8h >> 1;\n        *arg_8h_00 = var_8h;\n        fcn.00417e03(arg_8h_00);\n        fcn.004162f7();\n        var_8h = *arg_8h;\n        if (*var_8h != 0x3d) {\n            fcn.00453bd4();\n            var_ch = \"expected =\";\n            goto code_r0x00417c26;\n        }\n        *arg_8h = var_8h + 1;\n        piVar6 = 0x4b96e8;\n        if (*arg_8h_00 == NULL) {\n            piVar5 = NULL;\n        }\n        else {\n            piVar6 = *arg_8h_00;\n            piVar5 = arg_8h_00[2];\n        }\n        piVar6[piVar5] = 0;\n        fcn.004162f7();\n        var_8h = *arg_8h;\n        iVar1 = *var_8h;\n        if ((iVar1 != 0x27) && (iVar1 != 0x22)) break;\n        *arg_8h = var_8h + 1;\n        if (iVar1 == 0x27) {\n            iVar4 = fcn.00417fc7();\n        }\n        else {\n            iVar4 = fcn.004181c2();\n        }\n        arg_8h_00[1] = var_8h + 1;\n        arg_8h_00[3] = iVar4 - (var_8h + 1) >> 1;\n        var_8h = *arg_8h;\n        if (*var_8h != iVar1) break;\n        *arg_8h = var_8h + 1;\n        piVar6 = 0x4b96e8;\n        if (arg_8h_00[1] == NULL) {\n            piVar5 = NULL;\n        }\n        else {\n            piVar5 = arg_8h_00[3];\n            piVar6 = arg_8h_00[1];\n        }\n        piVar6[piVar5] = 0;\n        fcn.004162f7();\n        cVar3 = fcn.00417e50();\n    }\n    fcn.00453bd4();\n    var_ch = \"expected \\' or \\\"\";\ncode_r0x00417c26:\n    var_18h = vtable.boost::property_tree::detail::rapidxml::parse_error.0;\n    fcn.0045b275(&var_18h, 0x4aca34);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 909
    },
    "00417c35": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417c35(int16_t **arg_8h, int32_t arg_ch)\n\n{\n    int16_t *piVar1;\n    code *pcVar2;\n    int16_t iVar3;\n    int16_t *piVar4;\n    int32_t iVar5;\n    int16_t *piVar6;\n    uint *arg_8h_00;\n    int32_t iVar7;\n    code *var_2ch;\n    char *var_20h;\n    int16_t *var_1ch;\n    code *var_18h;\n    uint var_ch;\n    int16_t *var_8h;\n    uint var_4h;\n    \n    while( true ) {\n        fcn.004162f7();\n        iVar3 = **arg_8h;\n        while( true ) {\n            if (iVar3 == 0) {\n                var_1ch = *arg_8h;\n                fcn.00453bd4();\n                var_2ch = vtable.boost::property_tree::detail::rapidxml::parse_error.0;\n                var_20h = \"unexpected end of data\";\n                arg_8h_00 = &var_2ch;\n                goto code_r0x00417d64;\n            }\n            piVar1 = *arg_8h;\n            if (iVar3 == 0x3c) break;\n            piVar4 = fcn.00418970();\n            if (piVar4[-1] == 0x20) {\n                piVar4 = piVar4 + -1;\n            }\n            iVar5 = fcn.00417299(2);\n            *(iVar5 + 4) = piVar1;\n            iVar7 = piVar4 - piVar1 >> 1;\n            *(iVar5 + 0xc) = iVar7;\n            fcn.00415f6e(iVar5);\n            piVar6 = 0x4b96e8;\n            if (*(arg_ch + 4) != 0) {\n                piVar6 = *(arg_ch + 4);\n            }\n            if (*piVar6 == 0) {\n                *(arg_ch + 4) = piVar1;\n                *(arg_ch + 0xc) = iVar7;\n            }\n            iVar3 = **arg_8h;\n            *piVar4 = 0;\n        }\n        if (piVar1[1] == 0x2f) break;\n        *arg_8h = piVar1 + 1;\n        iVar5 = fcn.00416313(arg_8h);\n        if (iVar5 != 0) {\n            fcn.00415f6e(iVar5);\n        }\n    }\n    *arg_8h = *arg_8h + 2;\n    fcn.00417a8f();\n    fcn.004162f7();\n    var_8h = *arg_8h;\n    if (*var_8h == 0x3e) {\n        *arg_8h = var_8h + 1;\n        return;\n    }\n    fcn.00453bd4();\n    var_18h = vtable.boost::property_tree::detail::rapidxml::parse_error.0;\n    var_ch = 0x4a3888;\n    arg_8h_00 = &var_18h;\ncode_r0x00417d64:\n    fcn.0045b275(arg_8h_00, 0x4aca34);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 776
    },
    "00417e03": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417e03(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x20) == 0) {\n        *(arg_8h + 0x14) = 0;\n        *(in_ECX + 0x20) = arg_8h;\n    }\n    else {\n        *(arg_8h + 0x14) = *(in_ECX + 0x24);\n        *(*(in_ECX + 0x24) + 0x18) = arg_8h;\n    }\n    *(in_ECX + 0x24) = arg_8h;\n    *(arg_8h + 0x18) = 0;\n    *(arg_8h + 0x10) = in_ECX;\n    return;\n}\n",
        "token_count": 187
    },
    "00417e65": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417e65(uint noname_0, uint *arg_ch)\n\n{\n    int32_t arg_8h;\n    code *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *in_ECX;\n    uint32_t uVar5;\n    \n    uVar5 = 0xffffffff;\n    if (arg_ch[4] != -1) {\n        uVar5 = arg_ch[4];\n    }\n    if (uVar5 < -in_ECX[4] - 1) {\n        if (uVar5 != 0) {\n            arg_8h = in_ECX[4] + uVar5;\n            cVar2 = fcn.004021a8(arg_8h, 0);\n            if (cVar2 != '\\0') {\n                puVar4 = in_ECX;\n                if (0xf < in_ECX[5]) {\n                    puVar4 = *in_ECX;\n                }\n                puVar3 = in_ECX;\n                if (0xf < in_ECX[5]) {\n                    puVar3 = *in_ECX;\n                }\n                if (in_ECX[4] != 0) {\n                    fcn.004530c0(puVar3 + uVar5, puVar4, in_ECX[4]);\n                }\n                if (in_ECX == arg_ch) {\n                    puVar4 = in_ECX;\n                    if (0xf < in_ECX[5]) {\n                        puVar4 = *in_ECX;\n                    }\n                    puVar3 = in_ECX;\n                    if (0xf < in_ECX[5]) {\n                        puVar3 = *in_ECX;\n                    }\n                    if (uVar5 != 0) {\n                        fcn.004530c0(puVar3, puVar4, uVar5);\n                    }\n                }\n                else {\n                    if (0xf < arg_ch[5]) {\n                        arg_ch = *arg_ch;\n                    }\n                    puVar4 = in_ECX;\n                    if (0xf < in_ECX[5]) {\n                        puVar4 = *in_ECX;\n                    }\n                    if (uVar5 != 0) {\n                        fcn.00452a10(puVar4, arg_ch, uVar5);\n                    }\n                }\n                in_ECX[4] = arg_8h;\n                if (0xf < in_ECX[5]) {\n                    in_ECX = *in_ECX;\n                }\n                *(in_ECX + arg_8h) = 0;\n            }\n        }\n        return;\n    }\n    fcn.0044e7eb(\"string too long\");\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 603
    },
    "00417fc7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint16_t * __fastcall fcn.00417fc7(uint16_t **param_1)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint16_t *puVar4;\n    uint16_t uVar5;\n    code *var_1ch;\n    char *var_10h;\n    uint16_t *var_ch;\n    uint var_8h;\n    uint16_t *var_4h;\n    \n    var_ch = *param_1;\n    while( true ) {\n        uVar3 = *var_ch;\n        if (0x7f < uVar3) {\n            uVar3 = 0x7a;\n        }\n        if (*(uVar3 + 0x4a3bf8) == '\\0') break;\n        var_ch = var_ch + 1;\n    }\n    *param_1 = var_ch;\n    var_4h = var_ch;\n    cVar2 = fcn.0041868a();\n    puVar4 = var_ch;\n    if (cVar2 != '\\0') {\n        var_8h = 0x70;\n        do {\n            if (*var_ch != 0x26) goto code_r0x00418175;\n            uVar5 = var_ch[1];\n            if (uVar5 == 0x23) {\n                if (var_ch[2] == 0x78) {\n                    var_ch = var_ch + 3;\n                    while (*(*var_ch + 0x4a3ef8) != -1) {\n                        var_ch = var_ch + 1;\n                    }\n                }\n                else {\n                    var_ch = var_ch + 2;\n                    while (*(*var_ch + 0x4a3ef8) != -1) {\n                        var_ch = var_ch + 1;\n                    }\n                }\n                fcn.00418875();\n                if (*var_ch != 0x3b) {\n                    fcn.00453bd4();\n                    var_1ch = vtable.boost::property_tree::detail::rapidxml::parse_error.0;\n                    var_10h = \"expected ;\";\n                    fcn.0045b275(&var_1ch, 0x4aca34);\n                    pcVar1 = swi(3);\n                    puVar4 = (*pcVar1)();\n                    return puVar4;\n                }\n                var_ch = var_ch + 1;\n            }\n            else {\n                if (uVar5 == 0x61) {\n                    if (((var_ch[2] == 0x6d) && (var_ch[3] == 0x70)) && (var_ch[4] == 0x3b)) {\n                        *puVar4 = 0x26;\n                        var_ch = var_ch + 5;\n                    }\n                    else {\n                        if (((var_ch[2] != var_8h) || (var_ch[3] != 0x6f)) ||\n                           ((var_ch[4] != 0x73 || (var_ch[5] != 0x3b)))) goto code_r0x00418175;\n                        uVar5 = 0x27;\ncode_r0x00418077:\n                        *puVar4 = uVar5;\n                        var_ch = var_ch + 6;\n                    }\n                }\n                else {\n                    if (uVar5 == 0x67) {\n                        if ((var_ch[2] == 0x74) && (var_ch[3] == 0x3b)) {\n                            uVar5 = 0x3e;\ncode_r0x0041809f:\n                            *puVar4 = uVar5;\n                            var_ch = var_ch + 4;\n                            goto code_r0x0041817e;\n                        }\n                    }\n                    else if (uVar5 == 0x6c) {\n                        if ((var_ch[2] == 0x74) && (var_ch[3] == 0x3b)) {\n                            uVar5 = 0x3c;\n                            goto code_r0x0041809f;\n                        }\n                    }\n                    else if ((((uVar5 == 0x71) && (var_ch[2] == 0x75)) && (var_ch[3] == 0x6f)) &&\n                            ((var_ch[4] == 0x74 && (var_ch[5] == 0x3b)))) {\n                        uVar5 = 0x22;\n                        goto code_r0x00418077;\n                    }\ncode_r0x00418175:\n                    *puVar4 = *var_ch;\n                    var_ch = var_ch + 1;\n                }\ncode_r0x0041817e:\n                var_4h = puVar4 + 1;\n            }\n            puVar4 = var_4h;\n            cVar2 = fcn.0041868a();\n        } while (cVar2 != '\\0');\n    }\n    *param_1 = var_ch;\n    return puVar4;\n}\n",
        "token_count": 1094
    },
    "004181c2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint16_t * __fastcall fcn.004181c2(uint16_t **param_1)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint16_t *puVar4;\n    uint16_t uVar5;\n    code *var_1ch;\n    char *var_10h;\n    uint16_t *var_ch;\n    uint var_8h;\n    uint16_t *var_4h;\n    \n    var_ch = *param_1;\n    while( true ) {\n        uVar3 = *var_ch;\n        if (0x7f < uVar3) {\n            uVar3 = 0x7a;\n        }\n        if (*(uVar3 + 0x4a3af8) == '\\0') break;\n        var_ch = var_ch + 1;\n    }\n    *param_1 = var_ch;\n    var_4h = var_ch;\n    cVar2 = fcn.0041869f();\n    puVar4 = var_ch;\n    if (cVar2 != '\\0') {\n        var_8h = 0x70;\n        do {\n            if (*var_ch != 0x26) goto code_r0x00418370;\n            uVar5 = var_ch[1];\n            if (uVar5 == 0x23) {\n                if (var_ch[2] == 0x78) {\n                    var_ch = var_ch + 3;\n                    while (*(*var_ch + 0x4a3ef8) != -1) {\n                        var_ch = var_ch + 1;\n                    }\n                }\n                else {\n                    var_ch = var_ch + 2;\n                    while (*(*var_ch + 0x4a3ef8) != -1) {\n                        var_ch = var_ch + 1;\n                    }\n                }\n                fcn.00418875();\n                if (*var_ch != 0x3b) {\n                    fcn.00453bd4();\n                    var_1ch = vtable.boost::property_tree::detail::rapidxml::parse_error.0;\n                    var_10h = \"expected ;\";\n                    fcn.0045b275(&var_1ch, 0x4aca34);\n                    pcVar1 = swi(3);\n                    puVar4 = (*pcVar1)();\n                    return puVar4;\n                }\n                var_ch = var_ch + 1;\n            }\n            else {\n                if (uVar5 == 0x61) {\n                    if (((var_ch[2] == 0x6d) && (var_ch[3] == 0x70)) && (var_ch[4] == 0x3b)) {\n                        *puVar4 = 0x26;\n                        var_ch = var_ch + 5;\n                    }\n                    else {\n                        if (((var_ch[2] != var_8h) || (var_ch[3] != 0x6f)) ||\n                           ((var_ch[4] != 0x73 || (var_ch[5] != 0x3b)))) goto code_r0x00418370;\n                        uVar5 = 0x27;\ncode_r0x00418272:\n                        *puVar4 = uVar5;\n                        var_ch = var_ch + 6;\n                    }\n                }\n                else {\n                    if (uVar5 == 0x67) {\n                        if ((var_ch[2] == 0x74) && (var_ch[3] == 0x3b)) {\n                            uVar5 = 0x3e;\ncode_r0x0041829a:\n                            *puVar4 = uVar5;\n                            var_ch = var_ch + 4;\n                            goto code_r0x00418379;\n                        }\n                    }\n                    else if (uVar5 == 0x6c) {\n                        if ((var_ch[2] == 0x74) && (var_ch[3] == 0x3b)) {\n                            uVar5 = 0x3c;\n                            goto code_r0x0041829a;\n                        }\n                    }\n                    else if ((((uVar5 == 0x71) && (var_ch[2] == 0x75)) && (var_ch[3] == 0x6f)) &&\n                            ((var_ch[4] == 0x74 && (var_ch[5] == 0x3b)))) {\n                        uVar5 = 0x22;\n                        goto code_r0x00418272;\n                    }\ncode_r0x00418370:\n                    *puVar4 = *var_ch;\n                    var_ch = var_ch + 1;\n                }\ncode_r0x00418379:\n                var_4h = puVar4 + 1;\n            }\n            puVar4 = var_4h;\n            cVar2 = fcn.0041869f();\n        } while (cVar2 != '\\0');\n    }\n    *param_1 = var_ch;\n    return puVar4;\n}\n",
        "token_count": 1092
    },
    "00418489": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418489(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t iVar3;\n    \n    iVar1 = in_EDX - in_ECX >> 3;\n    if (0x20 < iVar1) {\n        do {\n            if (arg_8h < 1) break;\n            piVar2 = fcn.00418b8d(in_EDX);\n            iVar3 = *piVar2;\n            iVar1 = piVar2[1];\n            arg_8h = arg_8h / 2 + (arg_8h / 2) / 2;\n            if ((iVar3 - in_ECX & 0xfffffff8U) < (in_EDX - iVar1 & 0xfffffff8U)) {\n                fcn.00418489(arg_8h);\n                iVar3 = in_EDX;\n                in_ECX = iVar1;\n            }\n            else {\n                fcn.00418489(arg_8h);\n            }\n            iVar1 = iVar3 - in_ECX >> 3;\n            in_EDX = iVar3;\n        } while (0x20 < iVar1);\n        if (0x20 < iVar1) {\n            fcn.00418dd0();\n            fcn.00418e25();\n            return;\n        }\n    }\n    if (1 < iVar1) {\n        fcn.00418e84();\n    }\n    return;\n}\n",
        "token_count": 338
    },
    "00418970": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint16_t * __fastcall fcn.00418970(uint16_t **param_1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint16_t *puVar5;\n    uint16_t uVar6;\n    code *var_1ch;\n    char *var_10h;\n    uint16_t *var_ch;\n    uint16_t **var_8h;\n    uint16_t *var_4h;\n    \n    var_ch = *param_1;\n    while( true ) {\n        uVar4 = *var_ch;\n        if (0x7f < uVar4) {\n            uVar4 = 0x7a;\n        }\n        if (*(uVar4 + 0x4a38f8) == '\\0') break;\n        var_ch = var_ch + 1;\n    }\n    *param_1 = var_ch;\n    var_8h = param_1;\n    var_4h = var_ch;\n    cVar3 = fcn.00418f41();\n    puVar5 = var_ch;\n    do {\n        if (cVar3 == '\\0') {\n            *var_8h = var_ch;\n            return puVar5;\n        }\n        uVar6 = *var_ch;\n        if (uVar6 != 0x26) goto code_r0x00418b0e;\n        uVar1 = var_ch[1];\n        if (uVar1 == 0x23) {\n            if (var_ch[2] == 0x78) {\n                var_ch = var_ch + 3;\n                while (*(*var_ch + 0x4a3ef8) != -1) {\n                    var_ch = var_ch + 1;\n                }\n            }\n            else {\n                var_ch = var_ch + 2;\n                while (*(*var_ch + 0x4a3ef8) != -1) {\n                    var_ch = var_ch + 1;\n                }\n            }\n            fcn.00418875();\n            if (*var_ch != 0x3b) {\n                fcn.00453bd4();\n                var_1ch = vtable.boost::property_tree::detail::rapidxml::parse_error.0;\n                var_10h = \"expected ;\";\n                fcn.0045b275(&var_1ch, 0x4aca34);\n                pcVar2 = swi(3);\n                puVar5 = (*pcVar2)();\n                return puVar5;\n            }\n            var_ch = var_ch + 1;\n            puVar5 = var_4h;\n        }\n        else {\n            if (uVar1 == 0x61) {\n                if (((var_ch[2] == 0x6d) && (var_ch[3] == 0x70)) && (var_ch[4] == 0x3b)) {\n                    *puVar5 = 0x26;\n                    var_ch = var_ch + 5;\n                }\n                else {\n                    if (((var_ch[2] != 0x70) || (var_ch[3] != 0x6f)) || ((var_ch[4] != 0x73 || (var_ch[5] != 0x3b))))\n                    goto code_r0x00418b0e;\n                    uVar6 = 0x27;\ncode_r0x00418a1a:\n                    *puVar5 = uVar6;\n                    var_ch = var_ch + 6;\n                }\n            }\n            else {\n                if (uVar1 == 0x67) {\n                    if ((var_ch[2] == 0x74) && (var_ch[3] == 0x3b)) {\n                        uVar6 = 0x3e;\ncode_r0x00418a3f:\n                        *puVar5 = uVar6;\n                        var_ch = var_ch + 4;\n                        goto code_r0x00418b3f;\n                    }\n                }\n                else if (uVar1 == 0x6c) {\n                    if ((var_ch[2] == 0x74) && (var_ch[3] == 0x3b)) {\n                        uVar6 = 0x3c;\n                        goto code_r0x00418a3f;\n                    }\n                }\n                else if ((((uVar1 == 0x71) && (var_ch[2] == 0x75)) && (var_ch[3] == 0x6f)) &&\n                        ((var_ch[4] == 0x74 && (var_ch[5] == 0x3b)))) {\n                    uVar6 = 0x22;\n                    goto code_r0x00418a1a;\n                }\ncode_r0x00418b0e:\n                cVar3 = fcn.00416755();\n                if (cVar3 != '\\0') {\n                    *puVar5 = 0x20;\n                    puVar5 = puVar5 + 1;\n                    var_4h = puVar5;\n                    do {\n                        var_ch = var_ch + 1;\n                        cVar3 = fcn.00416755();\n                    } while (cVar3 != '\\0');\n                    goto code_r0x00418b42;\n                }\n                *puVar5 = uVar6;\n                var_ch = var_ch + 1;\n            }\ncode_r0x00418b3f:\n            var_4h = puVar5 + 1;\n            puVar5 = var_4h;\n        }\ncode_r0x00418b42:\n        cVar3 = fcn.00418f41();\n    } while( true );\n}\n",
        "token_count": 1237
    },
    "00418dd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418dd0(int32_t param_1, int32_t param_2)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    arg_8h = param_2 - param_1 >> 3;\n    if ((1 < arg_8h) && (iVar1 = arg_8h - (param_2 - param_1 >> 0x1f) >> 1,  0 < iVar1)) {\n        var_4h = param_1 + iVar1 * 8;\n        do {\n            iVar1 = iVar1 + -1;\n            var_ch = var_4h[-2];\n            var_8h = var_4h[-1];\n            var_4h = var_4h + -2;\n            fcn.0041904c(arg_8h, &var_ch);\n        } while (0 < iVar1);\n    }\n    return;\n}\n",
        "token_count": 226
    },
    "00419147": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00419147(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int16_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0045b36b(0x18);\n    piVar1 = *(unaff_EBP + 8);\n    if ((*(*(*piVar1 + 4) + 0xc + piVar1) & 1) == 0) {\n        uVar5 = 0;\n        *(unaff_EBP + -0x1c) = 0;\n        fcn.0040e45b(piVar1, 1);\n        *(unaff_EBP + -4) = 0;\n        if (*(unaff_EBP + -0x20) != '\\0') {\n            uVar4 = fcn.0040e1fb(unaff_EBP + -0x14);\n            *(unaff_EBP + -4) = 1;\n            uVar4 = fcn.0040e157(uVar4);\n            *(unaff_EBP + -0x18) = uVar4;\n            fcn.0040e226();\n            *(unaff_EBP + -4) = 2;\n            iVar3 = fcn.0040e29b();\n            while (iVar3 != -1) {\n                cVar2 = (**(**(unaff_EBP + -0x18) + 0x10))(0x48, iVar3);\n                if (cVar2 == '\\0') goto code_r0x00419221;\n                iVar3 = fcn.0040e2be();\n            }\n            uVar5 = 1;\ncode_r0x00419221:\n            *(unaff_EBP + -4) = 0;\n        }\n        if (uVar5 != 0) {\n            uVar5 = *(piVar1 + *(*piVar1 + 4) + 0xc) | uVar5;\n            if (*(piVar1 + *(*piVar1 + 4) + 0x38) == 0) {\n                uVar5 = uVar5 | 4;\n            }\n            fcn.0040e96e(uVar5, 0);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        piVar1 = *(*(**(unaff_EBP + -0x24) + 4) + 0x38 + *(unaff_EBP + -0x24));\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 8))();\n        }\n    }\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 672
    },
    "0041ba07": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ba07(uint *arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    uint *arg_8h_00;\n    int32_t iVar5;\n    int32_t in_ECX;\n    int32_t *unaff_EBX;\n    int32_t *in_FS_OFFSET;\n    char16_t *pcVar6;\n    uint uVar7;\n    uint uVar8;\n    char *pcVar9;\n    uint arg_14h;\n    int32_t *arg_8h_01;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0xffffffff;\n    uStack16 = 0x489f56;\n    uStack20 = *in_FS_OFFSET;\n    uVar2 = *0x4b4f00 ^ &stack0xffffff88;\n    *in_FS_OFFSET = &uStack20;\n    if (7 < arg_8h[5]) {\n        arg_8h = *arg_8h;\n    }\n    pcVar9 = \"PluginInitialize::%S\";\n    uVar8 = 0x800040;\n    uVar7 = 0x2ae;\n    pcVar6 = L\"c:\\\\ci-jenkins\\\\workspace\\\\irobot\\\\irobot_1.62\\\\irobot_1.62\\\\src\\\\supportwrapper\\\\WrpPluginImpl.h\";\n    uVar3 = fcn.0042c180();\n    fcn.0042c3c0(uVar3, pcVar6, uVar7, uVar8, pcVar9, arg_8h);\n    arg_8h_01 = **(in_ECX + 0xc);\n    if (*(in_ECX + 0xc) != arg_8h_01) {\n        do {\n            (**(**(arg_8h_01 + 0x14) + 4))(uVar2);\n            cVar1 = fcn.0040c112();\n            if (cVar1 != '\\0') break;\n            iVar5 = *(in_ECX + 0xc);\n            piVar4 = fcn.0040bf59();\n        } while (iVar5 != *piVar4);\n    }\n    if (*(in_ECX + 0x148) != 0) {\n        fcn.00402667(0x4a00e0, 0);\n        uStack20 = 0;\n        fcn.00401a5b(0x4a078c);\n        uStack20 = CONCAT31(uStack20._1_3_, 1);\n        uVar3 = (**(*unaff_EBX + 0x18))();\n        arg_8h_00 = fcn.0040c07f(uVar3);\n        if (7 < arg_8h_00[5]) {\n            arg_8h_00 = *arg_8h_00;\n        }\n        iVar5 = fcn.00428780(arg_8h_00);\n        arg_8h_01 = 0x1;\n        fcn.00402754(1, 0);\n        fcn.00402754(1, 0);\n        uVar3 = 1;\n        fcn.00402754(1, 0);\n        if (iVar5 == 0) {\n            pcVar9 = \"Failed set proxy to HouseCall\";\n            arg_14h = 0x800002;\n            uVar8 = 0x2b9;\n            pcVar6 = \n            L\"c:\\\\ci-jenkins\\\\workspace\\\\irobot\\\\irobot_1.62\\\\irobot_1.62\\\\src\\\\supportwrapper\\\\WrpPluginImpl.h\";\n            uVar7 = fcn.0042c180();\n            fcn.0042c3c0(uVar7, pcVar6, uVar8, arg_14h, pcVar9, uVar3);\n        }\n    }\n    *in_FS_OFFSET = uStack20;\n    fcn.004529f8(arg_8h_01);\n    return;\n}\n",
        "token_count": 900
    },
    "0041c44e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.0041c44e(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    code **ppcVar4;\n    uint arg_14h;\n    int32_t iVar5;\n    char16_t *extraout_ECX;\n    char16_t *extraout_ECX_00;\n    char16_t *extraout_ECX_01;\n    char16_t *extraout_ECX_02;\n    char16_t *extraout_ECX_03;\n    char16_t *extraout_ECX_04;\n    uint extraout_ECX_05;\n    int32_t unaff_EBP;\n    char16_t *pcVar6;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0045b302(0xc);\n    *(unaff_EBP + -0x10) = 0;\n    puVar1 = *(unaff_EBP + 8);\n    *puVar1 = 0;\n    puVar1[1] = 0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = 1;\n    if (str.irobotgui[0] == L'\\0') {\n        uVar2 = 0;\n        pcVar6 = extraout_ECX;\n    }\n    else {\n        uVar2 = fcn.00453054(L\"irobotgui\");\n        pcVar6 = L\"irobotgui\";\n    }\n    iVar5 = *(unaff_EBP + 0xc);\n    iVar3 = fcn.00409963(pcVar6, *(iVar5 + 0x10), L\"irobotgui\", uVar2);\n    if (iVar3 == 0) {\n        ppcVar4 = fcn.0045306d(0x1c);\n        *(unaff_EBP + 0xc) = ppcVar4;\n        *(unaff_EBP + -4) = 1;\n        if (ppcVar4 == NULL) {\n            ppcVar4 = NULL;\n        }\n        else {\n            ppcVar4[5] = NULL;\n            uVar2 = 0;\n            ppcVar4[6] = 0x7;\n            *(ppcVar4 + 1) = 0;\n            *(unaff_EBP + -4) = 2;\n            *ppcVar4 = vtable.ATTK::Plugin::PluginInitializeiRobotGUI.0;\n            if (str.irobotgui[0] != L'\\0') {\n                uVar2 = fcn.00453054(L\"irobotgui\");\n            }\n            fcn.00402667(L\"irobotgui\", uVar2);\n        }\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x18) = 0;\n        *(unaff_EBP + -0x14) = 0;\n        fcn.0041f23b(ppcVar4);\ncode_r0x0041c512:\n        iVar5 = puVar1[1];\n        puVar1[1] = *(unaff_EBP + -0x14);\n        *puVar1 = *(unaff_EBP + -0x18);\n    }\n    else {\n        if (str.irobotcli[0] == L'\\0') {\n            uVar2 = 0;\n            pcVar6 = extraout_ECX_00;\n        }\n        else {\n            uVar2 = fcn.00453054(L\"irobotcli\");\n            pcVar6 = L\"irobotcli\";\n        }\n        iVar3 = fcn.00409963(pcVar6, *(iVar5 + 0x10), L\"irobotcli\", uVar2);\n        if (iVar3 == 0) {\n            ppcVar4 = fcn.0045306d(0x1c);\n            *(unaff_EBP + 0xc) = ppcVar4;\n            *(unaff_EBP + -4) = 3;\n            if (ppcVar4 == NULL) {\n                ppcVar4 = NULL;\n            }\n            else {\n                ppcVar4[5] = NULL;\n                uVar2 = 0;\n                ppcVar4[6] = 0x7;\n                *(ppcVar4 + 1) = 0;\n                *(unaff_EBP + -4) = 4;\n                *ppcVar4 = vtable.ATTK::Plugin::PluginInitializeiRobotCLI.0;\n                if (str.irobotcli[0] != L'\\0') {\n                    uVar2 = fcn.00453054(L\"irobotcli\");\n                }\n                fcn.00402667(L\"irobotcli\", uVar2);\n            }\n            *(unaff_EBP + -4) = 0;\n            *(unaff_EBP + -0x18) = 0;\n            *(unaff_EBP + -0x14) = 0;\n            fcn.0041f29d(ppcVar4);\n            goto code_r0x0041c512;\n        }\n        if (str.quickclean[0] == L'\\0') {\n            uVar2 = 0;\n            pcVar6 = extraout_ECX_01;\n        }\n        else {\n            pcVar6 = L\"quickclean\";\n            uVar2 = fcn.00453054(L\"quickclean\");\n        }\n        iVar3 = fcn.00409963(pcVar6, *(iVar5 + 0x10), L\"quickclean\", uVar2);\n        if (iVar3 == 0) {\n            ppcVar4 = fcn.0045306d(0x1c);\n            *(unaff_EBP + 0xc) = ppcVar4;\n            *(unaff_EBP + -4) = 5;\n            if (ppcVar4 == NULL) {\n                ppcVar4 = NULL;\n            }\n            else {\n                ppcVar4[5] = NULL;\n                uVar2 = 0;\n                ppcVar4[6] = 0x7;\n                *(ppcVar4 + 1) = 0;\n                *(unaff_EBP + -4) = 6;\n                *ppcVar4 = vtable.ATTK::Plugin::PluginInitializeQuickClean.0;\n                if (str.quickclean[0] != L'\\0') {\n                    uVar2 = fcn.00453054(L\"quickclean\");\n                }\n                fcn.00402667(L\"quickclean\", uVar2);\n            }\n            *(unaff_EBP + -4) = 0;\n            *(unaff_EBP + -0x18) = 0;\n            *(unaff_EBP + -0x14) = 0;\n            fcn.0041f2ff(ppcVar4);\n            goto code_r0x0041c512;\n        }\n        if (str.updater[0] == L'\\0') {\n            uVar2 = 0;\n            pcVar6 = extraout_ECX_02;\n        }\n        else {\n            pcVar6 = L\"updater\";\n            uVar2 = fcn.00453054(L\"updater\");\n        }\n        iVar3 = fcn.00409963(pcVar6, *(iVar5 + 0x10), L\"updater\", uVar2);\n        if (iVar3 == 0) {\n            ppcVar4 = fcn.0045306d(0x1c);\n            *(unaff_EBP + 0xc) = ppcVar4;\n            *(unaff_EBP + -4) = 7;\n            if (ppcVar4 == NULL) {\n                ppcVar4 = NULL;\n            }\n            else {\n                ppcVar4[5] = NULL;\n                ppcVar4[6] = 0x7;\n                uVar2 = 0;\n                *(ppcVar4 + 1) = 0;\n                *(unaff_EBP + -4) = 8;\n                *ppcVar4 = vtable.ATTK::Plugin::PluginInitializeUpdater.0;\n                if (str.updater[0] != L'\\0') {\n                    uVar2 = fcn.00453054(L\"updater\");\n                }\n                fcn.00402667(L\"updater\", uVar2);\n            }\n            *(unaff_EBP + -4) = 0;\n            *(unaff_EBP + -0x18) = 0;\n            *(unaff_EBP + -0x14) = 0;\n            fcn.0041f361(ppcVar4);\n            goto code_r0x0041c512;\n        }\n        if (str.prerequisitechecker[0] == L'\\0') {\n            uVar2 = 0;\n            pcVar6 = extraout_ECX_03;\n        }\n        else {\n            pcVar6 = L\"prerequisitechecker\";\n            uVar2 = fcn.00453054(L\"prerequisitechecker\");\n        }\n        iVar3 = fcn.00409963(pcVar6, *(iVar5 + 0x10), L\"prerequisitechecker\", uVar2);\n        if (iVar3 == 0) {\n            ppcVar4 = fcn.0045306d(0x1c);\n            *(unaff_EBP + 0xc) = ppcVar4;\n            *(unaff_EBP + -4) = 9;\n            if (ppcVar4 == NULL) {\n                ppcVar4 = NULL;\n            }\n            else {\n                ppcVar4[5] = NULL;\n                uVar2 = 0;\n                ppcVar4[6] = 0x7;\n                *(ppcVar4 + 1) = 0;\n                *(unaff_EBP + -4) = 10;\n                *ppcVar4 = vtable.ATTK::Plugin::PluginInitializeTimebomb.0;\n                if (str.prerequisitechecker[0] != L'\\0') {\n                    uVar2 = fcn.00453054(L\"prerequisitechecker\");\n                }\n                fcn.00402667(L\"prerequisitechecker\", uVar2);\n            }\n            *(unaff_EBP + -4) = 0;\n            *(unaff_EBP + -0x18) = 0;\n            *(unaff_EBP + -0x14) = 0;\n            fcn.0041f3c3(ppcVar4);\n            goto code_r0x0041c512;\n        }\n        if (str.foldercollector[0] == L'\\0') {\n            uVar2 = 0;\n            pcVar6 = extraout_ECX_04;\n        }\n        else {\n            pcVar6 = L\"foldercollector\";\n            uVar2 = fcn.00453054(L\"foldercollector\");\n        }\n        iVar3 = fcn.00409963(pcVar6, *(iVar5 + 0x10), L\"foldercollector\", uVar2);\n        if (iVar3 == 0) {\n            ppcVar4 = fcn.0045306d(0x1c);\n            *(unaff_EBP + 0xc) = ppcVar4;\n            *(unaff_EBP + -4) = 0xb;\n            if (ppcVar4 == NULL) {\n                ppcVar4 = NULL;\n            }\n            else {\n                ppcVar4[5] = NULL;\n                uVar2 = 0;\n                ppcVar4[6] = 0x7;\n                *(ppcVar4 + 1) = 0;\n                *(unaff_EBP + -4) = 0xc;\n                *ppcVar4 = vtable.ATTK::Plugin::PluginInitializeFolderCollector.0;\n                if (str.foldercollector[0] != L'\\0') {\n                    uVar2 = fcn.00453054(L\"foldercollector\");\n                }\n                fcn.00402667(L\"foldercollector\", uVar2);\n            }\n            *(unaff_EBP + -4) = 0;\n            *(unaff_EBP + -0x18) = 0;\n            *(unaff_EBP + -0x14) = 0;\n            fcn.0041f425(ppcVar4);\n            goto code_r0x0041c512;\n        }\n        if (*0x4a4780 == 0) {\n            arg_14h = 0;\n            uVar2 = extraout_ECX_05;\n        }\n        else {\n            uVar2 = 0x4a4780;\n            arg_14h = fcn.00453054(0x4a4780);\n        }\n        iVar5 = fcn.00409963(uVar2, *(iVar5 + 0x10), 0x4a4780, arg_14h);\n        if (iVar5 != 0) goto code_r0x0041c8f6;\n        ppcVar4 = fcn.0045306d(0x1c);\n        *(unaff_EBP + 0xc) = ppcVar4;\n        *(unaff_EBP + -4) = 0xd;\n        if (ppcVar4 == NULL) {\n            ppcVar4 = NULL;\n        }\n        else {\n            ppcVar4[5] = NULL;\n            uVar2 = 0;\n            ppcVar4[6] = 0x7;\n            *(ppcVar4 + 1) = 0;\n            *(unaff_EBP + -4) = 0xe;\n            *ppcVar4 = vtable.ATTK::Plugin::PluginInitializeReboot.0;\n            if (*0x4a4780 != 0) {\n                uVar2 = fcn.00453054(0x4a4780);\n            }\n            fcn.00402667(0x4a4780, uVar2);\n        }\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x18) = 0;\n        *(unaff_EBP + -0x14) = 0;\n        fcn.0041f487(ppcVar4);\n        iVar5 = puVar1[1];\n        uVar2 = *(unaff_EBP + -0x18);\n        puVar1[1] = *(unaff_EBP + -0x14);\n        *puVar1 = uVar2;\n    }\n    if (iVar5 != 0) {\n        fcn.0040cd13();\n    }\ncode_r0x0041c8f6:\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 3285
    },
    "0041c900": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.0041c900(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    code **ppcVar4;\n    uint arg_14h;\n    int32_t iVar5;\n    char16_t *extraout_ECX;\n    char16_t *extraout_ECX_00;\n    char16_t *extraout_ECX_01;\n    char16_t *extraout_ECX_02;\n    char16_t *extraout_ECX_03;\n    char16_t *extraout_ECX_04;\n    uint extraout_ECX_05;\n    int32_t unaff_EBP;\n    char16_t *pcVar6;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0045b302(0xc);\n    *(unaff_EBP + -0x10) = 0;\n    puVar1 = *(unaff_EBP + 8);\n    *puVar1 = 0;\n    puVar1[1] = 0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = 1;\n    if (str.irobotgui[0] == L'\\0') {\n        uVar2 = 0;\n        pcVar6 = extraout_ECX;\n    }\n    else {\n        uVar2 = fcn.00453054(L\"irobotgui\");\n        pcVar6 = L\"irobotgui\";\n    }\n    iVar5 = *(unaff_EBP + 0xc);\n    iVar3 = fcn.00409963(pcVar6, *(iVar5 + 0x10), L\"irobotgui\", uVar2);\n    if (iVar3 == 0) {\n        ppcVar4 = fcn.0045306d(0x1c);\n        *(unaff_EBP + 0xc) = ppcVar4;\n        *(unaff_EBP + -4) = 1;\n        if (ppcVar4 == NULL) {\n            ppcVar4 = NULL;\n        }\n        else {\n            ppcVar4[5] = NULL;\n            uVar2 = 0;\n            ppcVar4[6] = 0x7;\n            *(ppcVar4 + 1) = 0;\n            *(unaff_EBP + -4) = 2;\n            *ppcVar4 = vtable.ATTK::Plugin::PluginExecuteiRobotGUI.0;\n            if (str.irobotgui[0] != L'\\0') {\n                uVar2 = fcn.00453054(L\"irobotgui\");\n            }\n            fcn.00402667(L\"irobotgui\", uVar2);\n        }\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x18) = 0;\n        *(unaff_EBP + -0x14) = 0;\n        fcn.0041f4e9(ppcVar4);\ncode_r0x0041c9c4:\n        iVar5 = puVar1[1];\n        puVar1[1] = *(unaff_EBP + -0x14);\n        *puVar1 = *(unaff_EBP + -0x18);\n    }\n    else {\n        if (str.irobotcli[0] == L'\\0') {\n            uVar2 = 0;\n            pcVar6 = extraout_ECX_00;\n        }\n        else {\n            uVar2 = fcn.00453054(L\"irobotcli\");\n            pcVar6 = L\"irobotcli\";\n        }\n        iVar3 = fcn.00409963(pcVar6, *(iVar5 + 0x10), L\"irobotcli\", uVar2);\n        if (iVar3 == 0) {\n            ppcVar4 = fcn.0045306d(0x1c);\n            *(unaff_EBP + 0xc) = ppcVar4;\n            *(unaff_EBP + -4) = 3;\n            if (ppcVar4 == NULL) {\n                ppcVar4 = NULL;\n            }\n            else {\n                ppcVar4[5] = NULL;\n                uVar2 = 0;\n                ppcVar4[6] = 0x7;\n                *(ppcVar4 + 1) = 0;\n                *(unaff_EBP + -4) = 4;\n                *ppcVar4 = vtable.ATTK::Plugin::PluginExecuteiRobotCLI.0;\n                if (str.irobotcli[0] != L'\\0') {\n                    uVar2 = fcn.00453054(L\"irobotcli\");\n                }\n                fcn.00402667(L\"irobotcli\", uVar2);\n            }\n            *(unaff_EBP + -4) = 0;\n            *(unaff_EBP + -0x18) = 0;\n            *(unaff_EBP + -0x14) = 0;\n            fcn.0041f54b(ppcVar4);\n            goto code_r0x0041c9c4;\n        }\n        if (str.quickclean[0] == L'\\0') {\n            uVar2 = 0;\n            pcVar6 = extraout_ECX_01;\n        }\n        else {\n            pcVar6 = L\"quickclean\";\n            uVar2 = fcn.00453054(L\"quickclean\");\n        }\n        iVar3 = fcn.00409963(pcVar6, *(iVar5 + 0x10), L\"quickclean\", uVar2);\n        if (iVar3 == 0) {\n            ppcVar4 = fcn.0045306d(0x1c);\n            *(unaff_EBP + 0xc) = ppcVar4;\n            *(unaff_EBP + -4) = 5;\n            if (ppcVar4 == NULL) {\n                ppcVar4 = NULL;\n            }\n            else {\n                ppcVar4[5] = NULL;\n                uVar2 = 0;\n                ppcVar4[6] = 0x7;\n                *(ppcVar4 + 1) = 0;\n                *(unaff_EBP + -4) = 6;\n                *ppcVar4 = vtable.ATTK::Plugin::PluginExecuteQuickClean.0;\n                if (str.quickclean[0] != L'\\0') {\n                    uVar2 = fcn.00453054(L\"quickclean\");\n                }\n                fcn.00402667(L\"quickclean\", uVar2);\n            }\n            *(unaff_EBP + -4) = 0;\n            *(unaff_EBP + -0x18) = 0;\n            *(unaff_EBP + -0x14) = 0;\n            fcn.0041f5ad(ppcVar4);\n            goto code_r0x0041c9c4;\n        }\n        if (str.updater[0] == L'\\0') {\n            uVar2 = 0;\n            pcVar6 = extraout_ECX_02;\n        }\n        else {\n            pcVar6 = L\"updater\";\n            uVar2 = fcn.00453054(L\"updater\");\n        }\n        iVar3 = fcn.00409963(pcVar6, *(iVar5 + 0x10), L\"updater\", uVar2);\n        if (iVar3 == 0) {\n            ppcVar4 = fcn.0045306d(0x1c);\n            *(unaff_EBP + 0xc) = ppcVar4;\n            *(unaff_EBP + -4) = 7;\n            if (ppcVar4 == NULL) {\n                ppcVar4 = NULL;\n            }\n            else {\n                ppcVar4[5] = NULL;\n                ppcVar4[6] = 0x7;\n                uVar2 = 0;\n                *(ppcVar4 + 1) = 0;\n                *(unaff_EBP + -4) = 8;\n                *ppcVar4 = vtable.ATTK::Plugin::PluginExecuteUpdater.0;\n                if (str.updater[0] != L'\\0') {\n                    uVar2 = fcn.00453054(L\"updater\");\n                }\n                fcn.00402667(L\"updater\", uVar2);\n            }\n            *(unaff_EBP + -4) = 0;\n            *(unaff_EBP + -0x18) = 0;\n            *(unaff_EBP + -0x14) = 0;\n            fcn.0041f60f(ppcVar4);\n            goto code_r0x0041c9c4;\n        }\n        if (str.prerequisitechecker[0] == L'\\0') {\n            uVar2 = 0;\n            pcVar6 = extraout_ECX_03;\n        }\n        else {\n            pcVar6 = L\"prerequisitechecker\";\n            uVar2 = fcn.00453054(L\"prerequisitechecker\");\n        }\n        iVar3 = fcn.00409963(pcVar6, *(iVar5 + 0x10), L\"prerequisitechecker\", uVar2);\n        if (iVar3 == 0) {\n            ppcVar4 = fcn.0045306d(0x1c);\n            *(unaff_EBP + 0xc) = ppcVar4;\n            *(unaff_EBP + -4) = 9;\n            if (ppcVar4 == NULL) {\n                ppcVar4 = NULL;\n            }\n            else {\n                ppcVar4[5] = NULL;\n                uVar2 = 0;\n                ppcVar4[6] = 0x7;\n                *(ppcVar4 + 1) = 0;\n                *(unaff_EBP + -4) = 10;\n                *ppcVar4 = vtable.ATTK::Plugin::PluginExecuteTimebomb.0;\n                if (str.prerequisitechecker[0] != L'\\0') {\n                    uVar2 = fcn.00453054(L\"prerequisitechecker\");\n                }\n                fcn.00402667(L\"prerequisitechecker\", uVar2);\n            }\n            *(unaff_EBP + -4) = 0;\n            *(unaff_EBP + -0x18) = 0;\n            *(unaff_EBP + -0x14) = 0;\n            fcn.0041f671(ppcVar4);\n            goto code_r0x0041c9c4;\n        }\n        if (str.foldercollector[0] == L'\\0') {\n            uVar2 = 0;\n            pcVar6 = extraout_ECX_04;\n        }\n        else {\n            pcVar6 = L\"foldercollector\";\n            uVar2 = fcn.00453054(L\"foldercollector\");\n        }\n        iVar3 = fcn.00409963(pcVar6, *(iVar5 + 0x10), L\"foldercollector\", uVar2);\n        if (iVar3 == 0) {\n            ppcVar4 = fcn.0045306d(0x1c);\n            *(unaff_EBP + 0xc) = ppcVar4;\n            *(unaff_EBP + -4) = 0xb;\n            if (ppcVar4 == NULL) {\n                ppcVar4 = NULL;\n            }\n            else {\n                ppcVar4[5] = NULL;\n                uVar2 = 0;\n                ppcVar4[6] = 0x7;\n                *(ppcVar4 + 1) = 0;\n                *(unaff_EBP + -4) = 0xc;\n                *ppcVar4 = vtable.ATTK::Plugin::PluginExecuteFolderCollector.0;\n                if (str.foldercollector[0] != L'\\0') {\n                    uVar2 = fcn.00453054(L\"foldercollector\");\n                }\n                fcn.00402667(L\"foldercollector\", uVar2);\n            }\n            *(unaff_EBP + -4) = 0;\n            *(unaff_EBP + -0x18) = 0;\n            *(unaff_EBP + -0x14) = 0;\n            fcn.0041f6d3(ppcVar4);\n            goto code_r0x0041c9c4;\n        }\n        if (*0x4a4780 == 0) {\n            arg_14h = 0;\n            uVar2 = extraout_ECX_05;\n        }\n        else {\n            uVar2 = 0x4a4780;\n            arg_14h = fcn.00453054(0x4a4780);\n        }\n        iVar5 = fcn.00409963(uVar2, *(iVar5 + 0x10), 0x4a4780, arg_14h);\n        if (iVar5 != 0) goto code_r0x0041cda8;\n        ppcVar4 = fcn.0045306d(0x1c);\n        *(unaff_EBP + 0xc) = ppcVar4;\n        *(unaff_EBP + -4) = 0xd;\n        if (ppcVar4 == NULL) {\n            ppcVar4 = NULL;\n        }\n        else {\n            ppcVar4[5] = NULL;\n            uVar2 = 0;\n            ppcVar4[6] = 0x7;\n            *(ppcVar4 + 1) = 0;\n            *(unaff_EBP + -4) = 0xe;\n            *ppcVar4 = vtable.ATTK::Plugin::PluginExecuteReboot.0;\n            if (*0x4a4780 != 0) {\n                uVar2 = fcn.00453054(0x4a4780);\n            }\n            fcn.00402667(0x4a4780, uVar2);\n        }\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x18) = 0;\n        *(unaff_EBP + -0x14) = 0;\n        fcn.0041f735(ppcVar4);\n        iVar5 = puVar1[1];\n        uVar2 = *(unaff_EBP + -0x18);\n        puVar1[1] = *(unaff_EBP + -0x14);\n        *puVar1 = uVar2;\n    }\n    if (iVar5 != 0) {\n        fcn.0040cd13();\n    }\ncode_r0x0041cda8:\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 3296
    },
    "0041cdb2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.0041cdb2(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    code **ppcVar4;\n    int32_t iVar5;\n    char16_t *extraout_ECX;\n    char16_t *extraout_ECX_00;\n    char16_t *pcVar6;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0045b302(0xc);\n    *(unaff_EBP + -0x10) = 0;\n    puVar1 = *(unaff_EBP + 8);\n    *puVar1 = 0;\n    puVar1[1] = 0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = 1;\n    if (str.irobot[0] == L'\\0') {\n        uVar2 = 0;\n        pcVar6 = extraout_ECX;\n    }\n    else {\n        uVar2 = fcn.00453054(L\"irobot\");\n        pcVar6 = L\"irobot\";\n    }\n    iVar5 = *(unaff_EBP + 0xc);\n    iVar3 = fcn.00409963(pcVar6, *(iVar5 + 0x10), L\"irobot\", uVar2);\n    if (iVar3 == 0) {\n        ppcVar4 = fcn.0045306d(0x1c);\n        *(unaff_EBP + 0xc) = ppcVar4;\n        *(unaff_EBP + -4) = 1;\n        if (ppcVar4 == NULL) {\n            ppcVar4 = NULL;\n        }\n        else {\n            ppcVar4[5] = NULL;\n            uVar2 = 0;\n            ppcVar4[6] = 0x7;\n            *(ppcVar4 + 1) = 0;\n            *(unaff_EBP + -4) = 2;\n            *ppcVar4 = vtable.ATTK::Plugin::PluginCollectiRobot.0;\n            if (str.irobot[0] != L'\\0') {\n                uVar2 = fcn.00453054(L\"irobot\");\n            }\n            fcn.00402667(L\"irobot\", uVar2);\n        }\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x18) = 0;\n        *(unaff_EBP + -0x14) = 0;\n        fcn.0041f797(ppcVar4);\n        iVar5 = puVar1[1];\n        puVar1[1] = *(unaff_EBP + -0x14);\n        *puVar1 = *(unaff_EBP + -0x18);\n    }\n    else {\n        if (str.foldercollector[0] == L'\\0') {\n            uVar2 = 0;\n            pcVar6 = extraout_ECX_00;\n        }\n        else {\n            uVar2 = fcn.00453054(L\"foldercollector\");\n            pcVar6 = L\"foldercollector\";\n        }\n        iVar5 = fcn.00409963(pcVar6, *(iVar5 + 0x10), L\"foldercollector\", uVar2);\n        if (iVar5 != 0) goto code_r0x0041cf3f;\n        ppcVar4 = fcn.0045306d(0x1c);\n        *(unaff_EBP + 0xc) = ppcVar4;\n        *(unaff_EBP + -4) = 3;\n        if (ppcVar4 == NULL) {\n            ppcVar4 = NULL;\n        }\n        else {\n            ppcVar4[5] = NULL;\n            uVar2 = 0;\n            ppcVar4[6] = 0x7;\n            *(ppcVar4 + 1) = 0;\n            *(unaff_EBP + -4) = 4;\n            *ppcVar4 = vtable.ATTK::Plugin::PluginCollectFolderCollector.0;\n            if (str.foldercollector[0] != L'\\0') {\n                uVar2 = fcn.00453054(L\"foldercollector\");\n            }\n            fcn.00402667(L\"foldercollector\", uVar2);\n        }\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x18) = 0;\n        *(unaff_EBP + -0x14) = 0;\n        fcn.0041f800(ppcVar4);\n        iVar5 = puVar1[1];\n        uVar2 = *(unaff_EBP + -0x18);\n        puVar1[1] = *(unaff_EBP + -0x14);\n        *puVar1 = uVar2;\n    }\n    if (iVar5 != 0) {\n        fcn.0040cd13();\n    }\ncode_r0x0041cf3f:\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 1212
    },
    "0041d153": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.0041d153(void)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    char cVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint32_t *extraout_ECX;\n    uint *arg_8h;\n    int32_t unaff_EBP;\n    int32_t *piVar8;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    char16_t *pcVar9;\n    uint uVar10;\n    char *arg_18h;\n    uint uVar11;\n    char *arg_1ch;\n    uint var_4h;\n    int32_t iVar12;\n    \n    iVar12 = 0x2c;\n    fcn.0045b302();\n    uVar11 = 0x800010;\n    uVar10 = 0x90;\n    pcVar9 = L\"WrpPlugin.cpp\";\n    uVar6 = fcn.0042c180();\n    fcn.0042c3c0(uVar6, pcVar9, uVar10, uVar11, \"PluginMgr::Init\", iVar12);\n    piVar8 = *(extraout_ECX[3] + 0xc);\n    piVar2 = *piVar8;\n    *(extraout_ECX[3] + 0x14) = piVar2;\n    if (piVar8 != piVar2) {\n        piVar8 = piVar2[5];\n        *(unaff_EBP + -0x1c) = piVar8;\n        do {\n            iVar12 = fcn.0045306d(0x10);\n            *(unaff_EBP + -0x20) = iVar12;\n            *(unaff_EBP + -4) = 0;\n            if (iVar12 == 0) {\n                arg_8h = NULL;\n            }\n            else {\n                uVar6 = (**(*piVar8 + 0x14))();\n                if ((*0x4b97cc & 1) == 0) {\n                    *0x4b97cc = *0x4b97cc | 1;\n                    *(unaff_EBP + -4) = 1;\n                    fcn.0041cfd3();\n                    fcn.00453ab0(0x48b9df);\n                    *(unaff_EBP + -4) = 0;\n                }\n                fcn.0041eb2c(unaff_EBP + -0x30, uVar6);\n                *(unaff_EBP + -4) = 0;\n                *(unaff_EBP + -0x18) = *(unaff_EBP + -0x30);\n                if (*(unaff_EBP + -0x30) == 0) {\n                    if (*(unaff_EBP + -0x2c) != 0) {\n                        fcn.0040cd13();\n                    }\n                    *(unaff_EBP + -0x18) = 0x4b97d0;\n                }\n                else if (*(unaff_EBP + -0x2c) != 0) {\n                    fcn.0040cd13();\n                }\n                uVar6 = (**(*piVar8 + 0x14))();\n                if ((*0x4b97a4 & 1) == 0) {\n                    *0x4b97a4 = *0x4b97a4 | 1;\n                    *(unaff_EBP + -4) = 3;\n                    fcn.0041cf49();\n                    fcn.00453ab0(0x48b9bc);\n                    *(unaff_EBP + -4) = 0;\n                }\n                fcn.0041ea14(unaff_EBP + -0x38, uVar6);\n                *(unaff_EBP + -4) = 0;\n                *(unaff_EBP + -0x14) = *(unaff_EBP + -0x38);\n                if (*(unaff_EBP + -0x38) == 0) {\n                    if (*(unaff_EBP + -0x34) != 0) {\n                        fcn.0040cd13();\n                    }\n                    *(unaff_EBP + -0x14) = 0x4b97a8;\n                }\n                else if (*(unaff_EBP + -0x34) != 0) {\n                    fcn.0040cd13();\n                }\n                (**(*piVar8 + 0x2c))();\n                uVar6 = fcn.0041d05b();\n                (**(*piVar8 + 0x28))();\n                uVar10 = fcn.0041d05b();\n                arg_8h = *(unaff_EBP + -0x20);\n                *arg_8h = *(unaff_EBP + -0x14);\n                arg_8h[1] = *(unaff_EBP + -0x18);\n                arg_8h[2] = uVar10;\n                arg_8h[3] = uVar6;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            *(unaff_EBP + -0x28) = 0;\n            *(unaff_EBP + -0x24) = 0;\n            fcn.0041f0aa(arg_8h);\n            *(unaff_EBP + -4) = 5;\n            iVar12 = (**(*piVar8 + 0x14))();\n            if (*(iVar12 + 0x10) != 0) {\n                (**(*piVar8 + 0x14))();\n                cVar5 = fcn.0040c112();\n                if (cVar5 != '\\0') goto code_r0x0041d300;\n                (**(*piVar8 + 0x14))();\n                arg_18h = \"%s unsupported initialize method %S\";\n                var_14h = 0xa0;\ncode_r0x0041d497:\n                arg_1ch = \"PluginMgr::Init\";\n                uVar10 = 0x800002;\n                uVar6 = fcn.0042c180();\n                fcn.0042c3c0(uVar6, L\"WrpPlugin.cpp\", var_14h, uVar10, arg_18h, arg_1ch);\n                *(unaff_EBP + -4) = 0xffffffff;\n                if (*(unaff_EBP + -0x24) != 0) {\n                    fcn.0040cd13();\n                }\n                goto code_r0x0041d4e3;\n            }\ncode_r0x0041d300:\n            iVar12 = (**(*piVar8 + 0x14))();\n            if (*(iVar12 + 0x10) != 0) {\n                (**(*piVar8 + 0x14))();\n                cVar5 = fcn.0040c112();\n                if (cVar5 == '\\0') {\n                    (**(*piVar8 + 0x14))();\n                    arg_18h = \"%s unsupported execute method %S\";\n                    var_14h = 0xa5;\n                    goto code_r0x0041d497;\n                }\n            }\n            iVar12 = (**(*piVar8 + 0x28))();\n            if (*(iVar12 + 0x10) != 0) {\n                (**(*piVar8 + 0x28))();\n                cVar5 = fcn.0040c112();\n                if (cVar5 == '\\0') {\n                    (**(*piVar8 + 0x28))();\n                    arg_18h = \"%s unsupported collect method %S\";\n                    var_14h = 0xaa;\n                    goto code_r0x0041d497;\n                }\n            }\n            iVar12 = (**(*piVar8 + 0x2c))();\n            if (*(iVar12 + 0x10) != 0) {\n                (**(*piVar8 + 0x2c))();\n                cVar5 = fcn.0040c112();\n                if (cVar5 == '\\0') {\n                    (**(*piVar8 + 0x2c))();\n                    arg_18h = \"%s unsupported collect method %S\";\n                    var_14h = 0xaf;\n                    goto code_r0x0041d497;\n                }\n            }\n            uVar3 = extraout_ECX[1];\n            uVar1 = unaff_EBP - 0x28;\n            if ((uVar1 < uVar3) && (*extraout_ECX < uVar1 || *extraout_ECX == uVar1)) {\n                uVar4 = *extraout_ECX;\n                if (uVar3 == extraout_ECX[2]) {\n                    fcn.0041e9bc(uVar1);\n                }\n                iVar12 = *extraout_ECX + (uVar1 - uVar4 >> 3) * 8;\n                if (extraout_ECX[1] != 0) {\ncode_r0x0041d3cb:\n                    fcn.0041ee45(iVar12);\n                }\n            }\n            else {\n                if (uVar3 == extraout_ECX[2]) {\n                    fcn.0041e9bc();\n                }\n                if (extraout_ECX[1] != 0) {\n                    iVar12 = unaff_EBP + -0x28;\n                    goto code_r0x0041d3cb;\n                }\n            }\n            extraout_ECX[1] = extraout_ECX[1] + 8;\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (*(unaff_EBP + -0x24) != 0) {\n                fcn.0040cd13();\n            }\n            iVar12 = unaff_EBP + -0x1c;\n            iVar7 = fcn.00410da6(iVar12);\n            if (iVar7 == 0) break;\n            piVar8 = *(unaff_EBP + -0x1c);\n        } while( true );\n    }\n    uVar11 = 0x800020;\n    uVar10 = 0xb8;\n    pcVar9 = L\"WrpPlugin.cpp\";\n    uVar6 = fcn.0042c180();\n    fcn.0042c3c0(uVar6, pcVar9, uVar10, uVar11, \"PluginMgr::Init\", iVar12);\ncode_r0x0041d4e3:\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 2422
    },
    "0041d775": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041d775(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t arg_1ch;\n    int32_t extraout_ECX;\n    uint extraout_ECX_00;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint hKey;\n    uint in_stack_ffffffa4;\n    uint in_stack_ffffffa8;\n    uint in_stack_ffffffac;\n    uint in_stack_ffffffb0;\n    uint in_stack_ffffffb4;\n    uint uVar5;\n    char16_t *pcVar6;\n    uint uVar7;\n    char *pcVar8;\n    char *pcVar9;\n    uint var_14h_2;\n    uint var_10h_2;\n    uint var_4h;\n    \n    fcn.0045b302();\n    if (*(extraout_ECX + 0x18) == 0) {\n        iVar3 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyW)();\n        arg_1ch = iVar3 == 0;\n        pcVar8 = \"RegDeleteKey=%d: %S\";\n        uVar7 = 0x800040;\n        uVar5 = 300;\n        pcVar6 = L\"WrpPlugin.cpp\";\n        uVar4 = fcn.0042c180();\n        fcn.0042c3c0(uVar4, pcVar6, uVar5, uVar7, pcVar8, arg_1ch);\n    }\n    else {\n        iVar3 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)();\n        if (iVar3 == 0) {\n            iVar1 = *(extraout_ECX + 0x34);\n            *(unaff_EBP + -0x14) = *(extraout_ECX + 0x3c);\n            *(unaff_EBP + -0x1c) = &stack0xffffffc0;\n            uVar5 = 0x41d7d6;\n            fcn.004084c5(extraout_ECX + 0x40);\n            iVar3 = extraout_ECX + 0x1c;\n            *(unaff_EBP + -4) = 0;\n            fcn.004084c5(iVar3);\n            uVar4 = *(extraout_ECX + 0x38);\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0041d936(*(unaff_EBP + -0x10), uVar4, iVar3, in_stack_ffffffa4, in_stack_ffffffa8, in_stack_ffffffac, \n                         in_stack_ffffffb0, in_stack_ffffffb4, uVar5);\n            pcVar2 = _sym.imp.ADVAPI32.dll_RegDeleteValueW;\n            if ((iVar1 == 0) &&\n               (iVar3 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueW)(*(unaff_EBP + -0x10), 0x4a520c),  iVar3 != 0)) {\n                pcVar9 = \"RestoreWer()\";\n                pcVar8 = \"%s Error delete value DumpFolder\";\n                uVar7 = 0x800002;\n                uVar5 = 0x112;\n                pcVar6 = L\"WrpPlugin.cpp\";\n                uVar4 = fcn.0042c180();\n                fcn.0042c3c0(uVar4, pcVar6, uVar5, uVar7, pcVar8, pcVar9);\n            }\n            if ((*(unaff_EBP + -0x14) == 0) && (iVar3 = (*pcVar2)(),  iVar3 != 0)) {\n                pcVar9 = \"RestoreWer()\";\n                pcVar8 = \"%s Error delete value DumpType\";\n                uVar7 = 0x800002;\n                uVar5 = 0x11b;\n                pcVar6 = L\"WrpPlugin.cpp\";\n                uVar4 = fcn.0042c180();\n                fcn.0042c3c0(uVar4, pcVar6, uVar5, uVar7, pcVar8, pcVar9);\n            }\n        }\n        else {\n            pcVar9 = \"RestoreWer()\";\n            pcVar8 = \"%s Error opening key %S.\";\n            uVar7 = 0x800002;\n            uVar5 = 0x11f;\n            pcVar6 = L\"WrpPlugin.cpp\";\n            uVar4 = fcn.0042c180();\n            fcn.0042c3c0(uVar4, pcVar6, uVar5, uVar7, pcVar8, pcVar9);\n        }\n        iVar3 = (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n        pcVar8 = \"RestoreWer()\";\n        if (iVar3 == 0) {\n            pcVar9 = \"%s Success closing key.\";\n            uVar5 = 0x800040;\n            uVar4 = 0x124;\n        }\n        else {\n            pcVar9 = \"%s Error closing key.\";\n            uVar5 = 0x800002;\n            uVar4 = 0x126;\n        }\n        pcVar6 = L\"WrpPlugin.cpp\";\n        uVar7 = fcn.0042c180(extraout_ECX_00);\n        fcn.0042c3c0(uVar7, pcVar6, uVar4, uVar5, pcVar9, pcVar8);\n    }\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 1240
    },
    "0041dbc7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_f4h\n// WARNING: Variable defined which should be unmapped: var_f0h\n// WARNING: Variable defined which should be unmapped: var_ech\n// WARNING: Variable defined which should be unmapped: var_e8h\n// WARNING: Variable defined which should be unmapped: var_e4h\n// WARNING: Variable defined which should be unmapped: var_4h_3\n// WARNING: Variable defined which should be unmapped: var_18h_2\n// WARNING: Variable defined which should be unmapped: var_74h\n// WARNING: Variable defined which should be unmapped: var_78h\n// WARNING: Variable defined which should be unmapped: var_7ch\n// WARNING: Variable defined which should be unmapped: var_80h\n// WARNING: Variable defined which should be unmapped: var_cch\n// WARNING: Variable defined which should be unmapped: var_5ch_3\n// WARNING: Variable defined which should be unmapped: var_b4h\n// WARNING: Variable defined which should be unmapped: var_5ch_2\n// WARNING: Variable defined which should be unmapped: var_9ch\n// WARNING: Variable defined which should be unmapped: var_98h\n// WARNING: Variable defined which should be unmapped: var_44h_2\n// WARNING: Variable defined which should be unmapped: var_2ch_2\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_4h_2\n// WARNING: Variable defined which should be unmapped: lpExistingFileName\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: lpNewFileName\n// WARNING: Variable defined which should be unmapped: var_f8h\n// WARNING: Variable defined which should be unmapped: var_b4h_2\n// WARNING: Variable defined which should be unmapped: var_b4h_3\n\nvoid __cdecl\nfcn.0041dbc7(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint arg_8h, uint arg_ch, uint arg_10h, \n            uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint arg_8h_00;\n    uint arg_ch_00;\n    int32_t noname_15_00;\n    int32_t iVar1;\n    uint arg_14h_00;\n    int32_t extraout_ECX;\n    int32_t noname_16_00;\n    int32_t unaff_EBP;\n    uint var_5ch;\n    uint var_4h_2;\n    uint lpExistingFileName;\n    uint var_20h;\n    uint var_30h;\n    uint lpNewFileName;\n    uint var_18h;\n    uint var_4h;\n    uint var_fch;\n    uint var_f4h_3;\n    uint var_f0h_3;\n    uint var_ech_3;\n    uint var_f8h_2;\n    uint var_f4h_2;\n    uint var_f0h_2;\n    uint var_ech_2;\n    uint var_e8h_2;\n    uint var_b4h_3;\n    uint var_b4h_2;\n    uint var_f8h;\n    int32_t var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    int32_t iVar2;\n    uint in_stack_ffffff84;\n    uint in_stack_ffffff88;\n    uint in_stack_ffffff8c;\n    uint var_cch;\n    uint in_stack_ffffff94;\n    uint in_stack_ffffff98;\n    uint uVar3;\n    uint in_stack_ffffff9c;\n    int32_t noname_8_00;\n    uint var_5ch_3;\n    uint in_stack_ffffffa4;\n    uint var_b4h;\n    uint in_stack_ffffffac;\n    uint var_5ch_2;\n    uint in_stack_ffffffb4;\n    uint noname_14_00;\n    uint in_stack_ffffffb8;\n    char16_t *noname_15_01;\n    uint in_stack_ffffffbc;\n    uint arg_ch_01;\n    uint var_9ch;\n    uint var_98h;\n    uint var_44h_2;\n    uint var_2ch_2;\n    uint noname_18_00;\n    uint noname_19_00;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint noname_24;\n    char16_t *noname_25;\n    uint var_18h_2;\n    uint var_4h_3;\n    uint noname_28;\n    \n    noname_28 = 0xf0;\n    fcn.0045b335();\n    var_f4h = *(unaff_EBP + 8);\n    iVar2 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0xf0) = *(unaff_EBP + 0x18);\n    *(unaff_EBP + -0xec) = *(unaff_EBP + 0xc);\n    arg_8h_00 = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -0xf4) = *(unaff_EBP + 0x1c);\n    *(unaff_EBP + -0xe8) = arg_8h_00;\n    fcn.004084c5(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    arg_ch_00 = fcn.00453054(L\"\\\\DumpFolder\");\n    noname_25 = L\"\\\\DumpFolder\";\n    fcn.0040186c(L\"\\\\DumpFolder\", arg_ch_00);\n    fcn.00425da0(0);\n    fcn.00401a5b(0x4a078c);\n    *(unaff_EBP + -4) = 1;\n    fcn.0040c07f(var_f4h);\n    noname_24 = 0;\n    *(unaff_EBP + -4) = 3;\n    fcn.00402754(1, 0);\n    fcn.00401a5b(0x4a078c);\n    *(unaff_EBP + -4) = 4;\n    fcn.0040c07f(iVar2);\n    *(unaff_EBP + -4) = 6;\n    fcn.00402754(1, 0);\n    fcn.00402707(0x4a00e0);\n    *(unaff_EBP + -4) = 7;\n    *(unaff_EBP + -0x9c) = 0;\n    noname_19_00 = 0x4a00e0;\n    fcn.00402707(0x4a00e0);\n    *(unaff_EBP + -4) = 8;\n    *(unaff_EBP + -0x80) = 0;\n    *(unaff_EBP + -0x78) = 0;\n    noname_18_00 = 0x4a00e0;\n    *(unaff_EBP + -0x7c) = 1;\n    fcn.00402707(0x4a00e0);\n    *(unaff_EBP + -4) = 9;\n    noname_16_00 = unaff_EBP + -0x2c;\n    if (7 < *(unaff_EBP + -0x18)) {\n        noname_16_00 = *(unaff_EBP + -0x2c);\n    }\n    noname_15_00 = unaff_EBP + -0x44;\n    if (7 < *(unaff_EBP + -0x30)) {\n        noname_15_00 = *(unaff_EBP + -0x44);\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_MoveFileExW)();\n    if (iVar1 != 0) {\n        if (*(*(extraout_ECX + 0xc) + 0x28) != 0) {\n            *(unaff_EBP + -0xf8) = &fcn.0041dbc7::var_5ch_2;\n            fcn.004084c5(iVar2);\n            *(unaff_EBP + -4) = 0xc;\n            fcn.004084c5(unaff_EBP + -0x5c);\n            *(unaff_EBP + -4) = 9;\n            fcn.0041d4e9(2, unaff_EBP + -0x5c, in_stack_ffffff94, in_stack_ffffff98, in_stack_ffffff9c, var_5ch_3, \n                         in_stack_ffffffa4, 0x41de2c, iVar2, var_5ch_2, in_stack_ffffffb4, in_stack_ffffffb8, \n                         in_stack_ffffffbc, var_9ch, 0x41dd19, noname_15_00, noname_16_00, 9, noname_18_00, noname_19_00\n                         , 0x4a00e0, 1, 0, 1, noname_24, noname_25, arg_ch_00, arg_8h_00, noname_28, var_5ch, noname_0, \n                         var_4h_2, noname_2, noname_3, noname_4, lpExistingFileName, var_20h, noname_7, noname_8, \n                         noname_9, var_30h, lpNewFileName);\n        }\n        var_5ch_2 = 0x41de73;\n        (**(**(*(unaff_EBP + -0xf0) + 4) + 4))();\n        var_5ch_2 = 9;\n        (*_sym.imp.KERNEL32.dll_MoveFileExW)();\n        goto code_r0x0041de95;\n    }\n    arg_14h_00 = fcn.00453054(L\"ATTK.bin\");\n    arg_ch_01 = *(var_f4h + 0x10);\n    noname_15_01 = L\"ATTK.bin\";\n    noname_14_00 = 0x41dd3d;\n    iVar1 = fcn.00409963(L\"ATTK.bin\", arg_ch_01, L\"ATTK.bin\", arg_14h_00);\n    if (iVar1 == 0) {\n        noname_14_00 = 0x41dd51;\n        iVar1 = fcn.004262e0();\n        if (iVar1 == 0) goto code_r0x0041ddaa;\n        if (*(*(extraout_ECX + 0xc) + 0x28) != 0) {\n            *(unaff_EBP + -0xfc) = &fcn.0041dbc7::var_5ch_3;\n            uVar3 = 0x41dd6f;\n            noname_8_00 = iVar2;\n            fcn.004084c5(iVar2);\n            iVar1 = unaff_EBP + -0x5c;\n            *(unaff_EBP + -4) = 10;\n            fcn.004084c5(iVar1);\n            *(unaff_EBP + -4) = 9;\n            fcn.0041d4e9(2, iVar1, in_stack_ffffff84, in_stack_ffffff88, in_stack_ffffff8c, var_cch, in_stack_ffffff94, \n                         uVar3, noname_8_00, var_5ch_3, in_stack_ffffffa4, var_b4h, in_stack_ffffffac, var_5ch_2, \n                         noname_14_00, noname_15_01, arg_ch_01, L\"ATTK.bin\", arg_14h_00, noname_15_00, noname_16_00, 9, \n                         noname_18_00, noname_19_00, 0x4a00e0, 1, 0, 1, noname_24, noname_25, arg_ch_00, arg_8h_00, \n                         noname_28, var_5ch, noname_0, var_4h_2, noname_2, noname_3, noname_4, lpExistingFileName, \n                         var_20h, noname_7);\n        }\n        var_e4h = *(unaff_EBP + 0x20);\n        var_e8h = *(unaff_EBP + -0xec);\n        var_ech = *(unaff_EBP + -0xf4);\n        var_f0h = *(unaff_EBP + -0xe8);\n        var_f4h = iVar2;\n    }\n    else {\ncode_r0x0041ddaa:\n        if (*(*(extraout_ECX + 0xc) + 0x28) != 0) {\n            *(unaff_EBP + -0xf8) = &fcn.0041dbc7::var_5ch_3;\n            uVar3 = 0x41ddc4;\n            iVar1 = var_f4h;\n            fcn.004084c5(var_f4h);\n            iVar2 = unaff_EBP + -0x5c;\n            *(unaff_EBP + -4) = 0xb;\n            fcn.004084c5(iVar2);\n            *(unaff_EBP + -4) = 9;\n            fcn.0041d4e9(2, iVar2, in_stack_ffffff84, in_stack_ffffff88, in_stack_ffffff8c, var_cch, in_stack_ffffff94, \n                         uVar3, iVar1, var_5ch_3, in_stack_ffffffa4, var_b4h, in_stack_ffffffac, var_5ch_2, noname_14_00\n                         , noname_15_01, arg_ch_01, L\"ATTK.bin\", arg_14h_00, noname_15_00, noname_16_00, 9, noname_18_00\n                         , noname_19_00, 0x4a00e0, 1, 0, 1, noname_24, noname_25, arg_ch_00, arg_8h_00, noname_28, \n                         var_5ch, noname_0, var_4h_2, noname_2, noname_3, noname_4, lpExistingFileName, var_20h, \n                         noname_7);\n        }\n        var_e4h = *(unaff_EBP + 0x20);\n        var_e8h = *(unaff_EBP + -0xec);\n        var_ech = *(unaff_EBP + -0xf4);\n        var_f0h = *(unaff_EBP + -0xe8);\n    }\n    (**(**(*(unaff_EBP + -0xf0) + 4) + 4))(var_f4h, var_f0h, var_ech, var_e8h, var_e4h);\ncode_r0x0041de95:\n    if (*(*(extraout_ECX + 0xc) + 0x28) != 0) {\n        fcn.0041d775();\n    }\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 3694
    },
    "0041e9bc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e9bc(int32_t *param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    if (param_1[2] - param_1[1] >> 3 == 0) {\n        iVar3 = param_1[1] - *param_1 >> 3;\n        if (iVar3 == 0x1fffffff) {\n            fcn.0044e7eb(\"vector<T> too long\");\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        uVar4 = iVar3 + 1;\n        uVar2 = param_1[2] - *param_1 >> 3;\n        if (0x1fffffff - (uVar2 >> 1) < uVar2) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = uVar2 + (uVar2 >> 1);\n        }\n        if (uVar2 < uVar4) {\n            uVar2 = uVar4;\n        }\n        fcn.0041ed78(uVar2);\n    }\n    return;\n}\n",
        "token_count": 271
    },
    "0041ea14": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.0041ea14(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint noname_1;\n    int32_t unaff_EBP;\n    uint *puVar3;\n    uint uVar4;\n    uint *puVar5;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0045b335(0x3c);\n    *(unaff_EBP + -0x48) = 0;\n    *(unaff_EBP + -0x34) = *(unaff_EBP + 0xc);\n    puVar2 = *0x4b97c4;\n    *(unaff_EBP + -0x38) = *(unaff_EBP + 8);\n    if (*(puVar2[1] + 0xd) == '\\0') {\n        uVar4 = *(unaff_EBP + -0x34);\n        puVar3 = puVar2[1];\n        puVar5 = puVar2;\n        do {\n            cVar1 = fcn.0041ee84(puVar3 + 4, uVar4);\n            if (cVar1 == '\\0') {\n                puVar2 = *puVar3;\n                puVar5 = puVar3;\n            }\n            else {\n                puVar2 = puVar3[2];\n            }\n            puVar3 = puVar2;\n        } while (*(puVar2 + 0xd) == '\\0');\n        uVar4 = *(unaff_EBP + -0x34);\n        puVar2 = *0x4b97c4;\n        if (puVar5 != *0x4b97c4) {\n            cVar1 = fcn.0041ee84(uVar4, puVar5 + 4);\n            puVar2 = *0x4b97c4;\n            if (cVar1 == '\\0') {\n                *(unaff_EBP + -0x38) = puVar5;\n                goto code_r0x0041ea8d;\n            }\n        }\n    }\n    else {\n        uVar4 = *(unaff_EBP + -0x34);\n    }\n    *(unaff_EBP + -0x38) = puVar2;\ncode_r0x0041ea8d:\n    if (puVar2 == *(unaff_EBP + -0x38)) {\n        fcn.0041c44e(unaff_EBP + -0x44, uVar4);\n        *(unaff_EBP + -4) = 0;\n        if (*(unaff_EBP + -0x44) != 0) {\n            fcn.004084c5(uVar4);\n            fcn.0041ee10(unaff_EBP + -0x44);\n            *(unaff_EBP + -4) = 1;\n            fcn.0041efd0(unaff_EBP + -0x3c, noname_1, unaff_EBP + -0x30, *0x4b96e1);\n            *(unaff_EBP + -4) = 0;\n            if (*(unaff_EBP + -0x14) != 0) {\n                fcn.0040cd13();\n            }\n            fcn.00402754(1, 0);\n        }\n        fcn.0041e990(unaff_EBP + -0x44);\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*(unaff_EBP + -0x40) != 0) {\n            fcn.0040cd13();\n        }\n    }\n    else {\n        fcn.0041ee10(*(unaff_EBP + -0x38) + 10);\n    }\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 938
    },
    "0041eb2c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.0041eb2c(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint noname_1;\n    int32_t unaff_EBP;\n    uint *puVar3;\n    uint uVar4;\n    uint *puVar5;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0045b335(0x3c);\n    *(unaff_EBP + -0x48) = 0;\n    *(unaff_EBP + -0x34) = *(unaff_EBP + 0xc);\n    puVar2 = *0x4b97ec;\n    *(unaff_EBP + -0x38) = *(unaff_EBP + 8);\n    if (*(puVar2[1] + 0xd) == '\\0') {\n        uVar4 = *(unaff_EBP + -0x34);\n        puVar3 = puVar2[1];\n        puVar5 = puVar2;\n        do {\n            cVar1 = fcn.0041ee84(puVar3 + 4, uVar4);\n            if (cVar1 == '\\0') {\n                puVar2 = *puVar3;\n                puVar5 = puVar3;\n            }\n            else {\n                puVar2 = puVar3[2];\n            }\n            puVar3 = puVar2;\n        } while (*(puVar2 + 0xd) == '\\0');\n        uVar4 = *(unaff_EBP + -0x34);\n        puVar2 = *0x4b97ec;\n        if (puVar5 != *0x4b97ec) {\n            cVar1 = fcn.0041ee84(uVar4, puVar5 + 4);\n            puVar2 = *0x4b97ec;\n            if (cVar1 == '\\0') {\n                *(unaff_EBP + -0x38) = puVar5;\n                goto code_r0x0041eba5;\n            }\n        }\n    }\n    else {\n        uVar4 = *(unaff_EBP + -0x34);\n    }\n    *(unaff_EBP + -0x38) = puVar2;\ncode_r0x0041eba5:\n    if (puVar2 == *(unaff_EBP + -0x38)) {\n        fcn.0041c900(unaff_EBP + -0x44, uVar4);\n        *(unaff_EBP + -4) = 0;\n        if (*(unaff_EBP + -0x44) != 0) {\n            fcn.004084c5(uVar4);\n            fcn.0041ee10(unaff_EBP + -0x44);\n            *(unaff_EBP + -4) = 1;\n            fcn.0041efd0(unaff_EBP + -0x3c, noname_1, unaff_EBP + -0x30, *0x4b96e1);\n            *(unaff_EBP + -4) = 0;\n            if (*(unaff_EBP + -0x14) != 0) {\n                fcn.0040cd13();\n            }\n            fcn.00402754(1, 0);\n        }\n        fcn.0041e990(unaff_EBP + -0x44);\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*(unaff_EBP + -0x40) != 0) {\n            fcn.0040cd13();\n        }\n    }\n    else {\n        fcn.0041ee10(*(unaff_EBP + -0x38) + 10);\n    }\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 932
    },
    "0041ec44": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.0041ec44(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint noname_1;\n    int32_t unaff_EBP;\n    uint *puVar3;\n    uint uVar4;\n    uint *puVar5;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0045b335(0x3c);\n    *(unaff_EBP + -0x48) = 0;\n    *(unaff_EBP + -0x34) = *(unaff_EBP + 0xc);\n    puVar2 = *0x4b9814;\n    *(unaff_EBP + -0x38) = *(unaff_EBP + 8);\n    if (*(puVar2[1] + 0xd) == '\\0') {\n        uVar4 = *(unaff_EBP + -0x34);\n        puVar3 = puVar2[1];\n        puVar5 = puVar2;\n        do {\n            cVar1 = fcn.0041ee84(puVar3 + 4, uVar4);\n            if (cVar1 == '\\0') {\n                puVar2 = *puVar3;\n                puVar5 = puVar3;\n            }\n            else {\n                puVar2 = puVar3[2];\n            }\n            puVar3 = puVar2;\n        } while (*(puVar2 + 0xd) == '\\0');\n        uVar4 = *(unaff_EBP + -0x34);\n        puVar2 = *0x4b9814;\n        if (puVar5 != *0x4b9814) {\n            cVar1 = fcn.0041ee84(uVar4, puVar5 + 4);\n            puVar2 = *0x4b9814;\n            if (cVar1 == '\\0') {\n                *(unaff_EBP + -0x38) = puVar5;\n                goto code_r0x0041ecbd;\n            }\n        }\n    }\n    else {\n        uVar4 = *(unaff_EBP + -0x34);\n    }\n    *(unaff_EBP + -0x38) = puVar2;\ncode_r0x0041ecbd:\n    if (puVar2 == *(unaff_EBP + -0x38)) {\n        fcn.0041cdb2(unaff_EBP + -0x44, uVar4);\n        *(unaff_EBP + -4) = 0;\n        if (*(unaff_EBP + -0x44) != 0) {\n            fcn.004084c5(uVar4);\n            fcn.0041ee45(unaff_EBP + -0x44);\n            *(unaff_EBP + -4) = 1;\n            fcn.0041efd0(unaff_EBP + -0x3c, noname_1, unaff_EBP + -0x30, *0x4b96e1);\n            *(unaff_EBP + -4) = 0;\n            if (*(unaff_EBP + -0x14) != 0) {\n                fcn.0040cd13();\n            }\n            fcn.00402754(1, 0);\n        }\n        fcn.0041e990(unaff_EBP + -0x44);\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*(unaff_EBP + -0x40) != 0) {\n            fcn.0040cd13();\n        }\n    }\n    else {\n        fcn.0041ee45(*(unaff_EBP + -0x38) + 10);\n    }\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 931
    },
    "0041eeae": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041eeae(int32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    uint var_4h;\n    \n    cVar1 = *(arg_8h + 0xd);\n    while (cVar1 == '\\0') {\n        fcn.0041eeae(arg_8h[2]);\n        piVar2 = *arg_8h;\n        if (arg_8h[0xb] != 0) {\n            fcn.0040cd13();\n        }\n        fcn.00402754(1, 0);\n        fcn.00452a07(arg_8h);\n        arg_8h = piVar2;\n        cVar1 = *(piVar2 + 0xd);\n    }\n    return;\n}\n",
        "token_count": 179
    },
    "0041efd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.0041efd0(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    char cVar2;\n    char cVar3;\n    int32_t arg_8h_00;\n    uint *puVar4;\n    int32_t **extraout_ECX;\n    int32_t **ppiVar5;\n    int32_t unaff_EBP;\n    int32_t **ppiVar6;\n    int32_t **ppiVar7;\n    uint var_18h;\n    int32_t **var_14h;\n    uint arg_8h_01;\n    uint var_4h;\n    \n    fcn.0045b36b(0xc);\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    *(unaff_EBP + -4) = 0;\n    ppiVar7 = *extraout_ECX;\n    arg_8h_01 = *(unaff_EBP + 0x10);\n    ppiVar6 = ppiVar7[1];\n    cVar2 = '\\x01';\n    cVar3 = *(ppiVar6 + 0xd);\n    *(unaff_EBP + -0x14) = 1;\n    ppiVar5 = extraout_ECX;\n    if (cVar3 == '\\0') {\n        do {\n            ppiVar7 = ppiVar6;\n            cVar2 = fcn.0041ee84(arg_8h_01, ppiVar7 + 4);\n            *(unaff_EBP + -0x14) = cVar2;\n            if (cVar2 == '\\0') {\n                ppiVar6 = ppiVar7[2];\n            }\n            else {\n                ppiVar6 = *ppiVar7;\n            }\n        } while (*(ppiVar6 + 0xd) == '\\0');\n        ppiVar5 = *(unaff_EBP + -0x18);\n    }\n    *(unaff_EBP + 0x10) = ppiVar7;\n    ppiVar6 = ppiVar7;\n    if (cVar2 == '\\0') {\ncode_r0x0041f050:\n        cVar3 = fcn.0041ee84(ppiVar6 + 4, arg_8h_01);\n        if (cVar3 == '\\0') {\n            ppiVar7 = *(unaff_EBP + 8);\n            *ppiVar7 = ppiVar6;\n            *(ppiVar7 + 1) = 0;\n            goto code_r0x0041f080;\n        }\n        var_18h = *(unaff_EBP + -0x14);\n        arg_8h_00 = unaff_EBP + -0x14;\n        var_14h = ppiVar7;\n    }\n    else {\n        if (ppiVar7 != **ppiVar5) {\n            fcn.00413e12();\n            ppiVar6 = *(unaff_EBP + 0x10);\n            goto code_r0x0041f050;\n        }\n        arg_8h_00 = unaff_EBP + 0x10;\n        arg_8h_01 = 1;\n    }\n    puVar4 = fcn.0041f10f(arg_8h_00, var_18h, var_14h, arg_8h_01);\n    puVar1 = *(unaff_EBP + 8);\n    *puVar1 = *puVar4;\n    *(puVar1 + 1) = 1;\ncode_r0x0041f080:\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 857
    },
    "0041f10f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f10f(int32_t **arg_8h, uint arg_ch, int32_t **arg_10h, uint arg_14h)\n\n{\n    int32_t *arg_8h_00;\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t **in_ECX;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    \n    if (0x5555553 < in_ECX[1]) {\n        fcn.0044e7eb(\"map/set<T> too long\");\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    piVar2 = fcn.0041f8a6(arg_14h);\n    in_ECX[1] = in_ECX[1] + 1;\n    piVar2[1] = arg_10h;\n    if (arg_10h == *in_ECX) {\n        (*in_ECX)[1] = piVar2;\n        **in_ECX = piVar2;\n        (*in_ECX)[2] = piVar2;\n    }\n    else if (arg_ch == '\\0') {\n        arg_10h[2] = piVar2;\n        if (arg_10h == (*in_ECX)[2]) {\n            (*in_ECX)[2] = piVar2;\n        }\n    }\n    else {\n        *arg_10h = piVar2;\n        if (arg_10h == **in_ECX) {\n            **in_ECX = piVar2;\n        }\n    }\n    iVar3 = piVar2[1];\n    piVar5 = piVar2;\n    do {\n        if (*(iVar3 + 0xc) != '\\0') {\n            *((*in_ECX)[1] + 0xc) = 1;\n            *arg_8h = piVar2;\n            return;\n        }\n        arg_8h_00 = piVar5[1];\n        piVar4 = *arg_8h_00[1];\n        if (arg_8h_00 == piVar4) {\n            piVar4 = arg_8h_00[1][2];\n            if (*(piVar4 + 3) == '\\0') {\ncode_r0x0041f1be:\n                *(arg_8h_00 + 3) = 1;\n                *(piVar4 + 3) = 1;\n                *(*(piVar5[1] + 4) + 0xc) = 0;\n                piVar5 = *(piVar5[1] + 4);\n            }\n            else {\n                if (piVar5 == arg_8h_00[2]) {\n                    fcn.0040becf(arg_8h_00);\n                    piVar5 = arg_8h_00;\n                }\n                *(piVar5[1] + 0xc) = 1;\n                *(*(piVar5[1] + 4) + 0xc) = 0;\n                fcn.0040bf13(*(piVar5[1] + 4));\n            }\n        }\n        else {\n            if (*(piVar4 + 3) == '\\0') goto code_r0x0041f1be;\n            if (piVar5 == *arg_8h_00) {\n                fcn.0040bf13(arg_8h_00);\n                piVar5 = arg_8h_00;\n            }\n            *(piVar5[1] + 0xc) = 1;\n            *(*(piVar5[1] + 4) + 0xc) = 0;\n            fcn.0040becf(*(piVar5[1] + 4));\n        }\n        iVar3 = piVar5[1];\n    } while( true );\n}\n",
        "token_count": 845
    },
    "00420210": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420210(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    if ((*param_1 != 0) && (var_4h = 0,  param_1[4] != 0)) {\n        var_8h = 0;\n        do {\n            iVar1 = *param_1 + var_8h;\n            (**(param_2 + 4))(param_2, *(*param_1 + 0x10 + var_8h));\n            var_4h = var_4h + 1;\n            var_8h = var_8h + 0x18;\n            *(iVar1 + 0x10) = 0;\n            *(iVar1 + 0x14) = 0;\n        } while (var_4h < param_1[4]);\n    }\n    (**(param_2 + 4))(param_2, *param_1);\n    (**(param_2 + 4))(param_2, param_1[1]);\n    (**(param_2 + 4))(param_2, param_1[2]);\n    (**(param_2 + 4))(param_2, param_1[3]);\n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    param_1[8] = 0;\n    param_1[9] = 0;\n    return;\n}\n",
        "token_count": 405
    },
    "004203d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004203d0(uint *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint var_4h;\n    \n    if ((param_1[3] != 0) && (uVar1 = 0,  param_1[6] != 0)) {\n        do {\n            fcn.00420210();\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < param_1[6]);\n    }\n    (**(param_2 + 4))(param_2, *param_1);\n    (**(param_2 + 4))(param_2, param_1[1]);\n    (**(param_2 + 4))(param_2, param_1[2]);\n    (**(param_2 + 4))(param_2, param_1[3]);\n    (**(param_2 + 4))(param_2, param_1[4]);\n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    return;\n}\n",
        "token_count": 303
    },
    "00420550": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00420550(int32_t *param_1, code **param_2)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    bool bVar7;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar4 = 0;\n    uVar6 = 0;\n    if (param_1[6] == 0) {\n        param_1[0xc] = 0;\n    }\n    else {\n        iVar2 = (**param_2)(param_2, param_1[6] << 2);\n        param_1[0xc] = iVar2;\n        if (iVar2 == 0) {\n            return 2;\n        }\n    }\n    uVar3 = 0;\n    if (param_1[6] != 0) {\n        iVar2 = 0;\n        do {\n            uVar3 = uVar3 + 1;\n            *(param_1[0xc] + -4 + uVar3 * 4) = iVar4;\n            iVar4 = iVar4 + *(iVar2 + 0x18 + param_1[3]);\n            iVar2 = iVar2 + 0x28;\n        } while (uVar3 < param_1[6]);\n    }\n    if (param_1[5] == 0) {\n        param_1[0xd] = 0;\n    }\n    else {\n        iVar4 = (**param_2)(param_2, param_1[5] << 3);\n        param_1[0xd] = iVar4;\n        if (iVar4 == 0) {\n            return 2;\n        }\n    }\n    uVar3 = 0;\n    if (param_1[5] != 0) {\n        var_ch = 0;\n        var_10h = 0;\n        do {\n            iVar4 = param_1[0xd];\n            *(iVar4 + uVar3 * 8) = var_10h;\n            *(iVar4 + 4 + uVar3 * 8) = var_ch;\n            puVar1 = *param_1 + uVar3 * 8;\n            bVar7 = CARRY4(var_10h, *puVar1);\n            var_10h = var_10h + *puVar1;\n            var_ch = var_ch + *(*param_1 + 4 + uVar3 * 8) + bVar7;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < param_1[5]);\n    }\n    if (param_1[6] == 0) {\n        param_1[0xe] = 0;\n    }\n    else {\n        iVar4 = (**param_2)(param_2, param_1[6] << 2);\n        param_1[0xe] = iVar4;\n        if (iVar4 == 0) {\n            return 2;\n        }\n    }\n    if (param_1[7] == 0) {\n        param_1[0xf] = 0;\n    }\n    else {\n        iVar4 = (**param_2)(param_2, param_1[7] << 2);\n        param_1[0xf] = iVar4;\n        if (iVar4 == 0) {\n            return 2;\n        }\n    }\n    uVar3 = 0;\n    if (param_1[7] != 0) {\n        var_4h = 0;\n        uVar5 = 0;\n        do {\n            bVar7 = *(param_1[4] + 0x18 + var_4h) != '\\0';\n            if (bVar7) {\n                if (uVar5 == 0) {\n                    iVar4 = uVar6 * 0x28;\n                    while( true ) {\n                        if (param_1[6] <= uVar6) {\n                            return 0x10;\n                        }\n                        *(param_1[0xe] + uVar6 * 4) = uVar3;\n                        if (*(param_1[3] + 0x24 + iVar4) != 0) break;\n                        uVar6 = uVar6 + 1;\n                        iVar4 = iVar4 + 0x28;\n                    }\n                }\ncode_r0x004206a1:\n                *(param_1[0xf] + uVar3 * 4) = uVar6;\n                if ((bVar7) && (uVar5 = uVar5 + 1,  *(param_1[3] + 0x24 + uVar6 * 0x28) <= uVar5)) {\n                    uVar6 = uVar6 + 1;\n                    uVar5 = 0;\n                }\n            }\n            else {\n                if (uVar5 != 0) goto code_r0x004206a1;\n                *(param_1[0xf] + uVar3 * 4) = 0xffffffff;\n            }\n            var_4h = var_4h + 0x20;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < param_1[7]);\n    }\n    return 0;\n}\n",
        "token_count": 1185
    },
    "00420880": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420880(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    \n    if ((arg_ch == 0) && (arg_8h <= in_ECX[1])) {\n        *in_ECX = *in_ECX + arg_8h;\n        in_ECX[1] = in_ECX[1] - arg_8h;\n        return 0;\n    }\n    return 0x10;\n}\n",
        "token_count": 109
    },
    "004208b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004208b0(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = fcn.00420770();\n    if (iVar1 == 0) {\n        while ((var_8h | var_4h) != 0) {\n            iVar1 = fcn.00420770();\n            if (((iVar1 == 0) && (var_ch == 0)) && (var_10h <= param_1[1])) {\n                *param_1 = *param_1 + var_10h;\n                param_1[1] = param_1[1] - var_10h;\n            }\n            iVar1 = fcn.00420770();\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n        }\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 228
    },
    "00420910": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00420910(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = fcn.00420770();\n    if (iVar1 == 0) {\n        while( true ) {\n            if ((var_8h == arg_8h) && (var_4h == arg_ch)) {\n                return 0;\n            }\n            if ((var_8h | var_4h) == 0) break;\n            iVar1 = fcn.00420770();\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            if ((var_ch == 0) && (var_10h <= in_ECX[1])) {\n                *in_ECX = *in_ECX + var_10h;\n                in_ECX[1] = in_ECX[1] - var_10h;\n                iVar1 = 0;\n            }\n            else {\n                iVar1 = 0x10;\n            }\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            iVar1 = fcn.00420770();\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n        }\n        iVar1 = 0x10;\n    }\n    return iVar1;\n}\n",
        "token_count": 329
    },
    "00420aa0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00420aa0(int32_t *arg_8h, int32_t *arg_ch, code **arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t in_EDX;\n    uint32_t uVar2;\n    uint var_4h;\n    \n    iVar1 = fcn.00420a20(arg_8h, arg_10h);\n    if (iVar1 == 0) {\n        if (in_EDX == 0) {\n            *arg_ch = 0;\n        }\n        else {\n            iVar1 = (**arg_10h)(arg_10h, in_EDX * 4);\n            *arg_ch = iVar1;\n            if (iVar1 == 0) {\n                return 2;\n            }\n        }\n        uVar2 = 0;\n        if (in_EDX != 0) {\n            do {\n                if ((*(uVar2 + *arg_8h) != '\\0') && (iVar1 = fcn.00420720(),  iVar1 != 0)) {\n                    return iVar1;\n                }\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < in_EDX);\n        }\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 280
    },
    "00420b20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00420b20(uint32_t *arg_8h, int32_t *arg_ch, int32_t *arg_10h, int32_t *arg_14h, code **arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00420770();\n    if ((iVar1 != 0) || (iVar1 = fcn.00420770(),  iVar1 != 0)) {\n        return iVar1;\n    }\n    if (((var_4h == 0) && (var_8h < 0x80000000)) && (var_8h < 0x4000000)) {\n        *arg_8h = var_8h;\n        iVar1 = fcn.00420910(9, 0);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (var_8h == 0) {\n            *arg_ch = 0;\n        }\n        else {\n            iVar1 = (**arg_18h)(arg_18h, var_8h * 8);\n            *arg_ch = iVar1;\n            if (iVar1 == 0) {\n                return 2;\n            }\n        }\n        uVar3 = 0;\n        if (*arg_8h != 0) {\n            do {\n                iVar1 = fcn.00420770();\n                if (iVar1 != 0) {\n                    return iVar1;\n                }\n                uVar3 = uVar3 + 1;\n            } while (uVar3 < *arg_8h);\n        }\n        iVar1 = fcn.00420770();\n        if (iVar1 == 0) {\n            while( true ) {\n                if (var_8h == 0) {\n                    if (*arg_10h == 0) {\n                        if (*arg_8h == 0) {\n                            *arg_10h = 0;\n                        }\n                        else {\n                            iVar1 = (**arg_18h)(arg_18h, *arg_8h);\n                            *arg_10h = iVar1;\n                            if (iVar1 == 0) {\n                                return 2;\n                            }\n                        }\n                        if (*arg_8h == 0) {\n                            *arg_14h = 0;\n                        }\n                        else {\n                            iVar1 = (**arg_18h)(arg_18h, *arg_8h << 2);\n                            *arg_14h = iVar1;\n                            if (iVar1 == 0) {\n                                return 2;\n                            }\n                        }\n                        if (*arg_8h != 0) {\n                            uVar3 = 0;\n                            do {\n                                uVar2 = uVar3 + 1;\n                                *(uVar3 + *arg_10h) = 0;\n                                *(*arg_14h + -4 + uVar2 * 4) = 0;\n                                uVar3 = uVar2;\n                            } while (uVar2 < *arg_8h);\n                        }\n                    }\n                    return 0;\n                }\n                if (var_8h == 10) {\n                    iVar1 = fcn.00420aa0(arg_10h, arg_14h, arg_18h);\n                }\n                else {\n                    iVar1 = fcn.00420770();\n                    if (iVar1 != 0) {\n                        return iVar1;\n                    }\n                    if ((var_ch == 0) && (var_10h <= in_ECX[1])) {\n                        *in_ECX = *in_ECX + var_10h;\n                        in_ECX[1] = in_ECX[1] - var_10h;\n                        iVar1 = 0;\n                    }\n                    else {\n                        iVar1 = 0x10;\n                    }\n                }\n                if (iVar1 != 0) break;\n                iVar1 = fcn.00420770();\n                if (iVar1 != 0) {\n                    return iVar1;\n                }\n            }\n            return iVar1;\n        }\n        return iVar1;\n    }\n    return 4;\n}\n",
        "token_count": 938
    },
    "00420d30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00420f78)\n// WARNING: Removing unreachable block (ram,0x00420f8b)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00420d30(code **arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    int32_t iVar5;\n    uint8_t **in_ECX;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    uint32_t *puVar8;\n    int32_t *in_EDX;\n    uint32_t uVar9;\n    uint8_t *puVar10;\n    uint32_t uVar11;\n    ulong uVar12;\n    uint in_stack_ffffff84;\n    uint32_t var_74h;\n    int32_t var_70h;\n    uint var_6ch;\n    uint32_t var_64h;\n    int32_t var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint32_t var_54h;\n    int32_t var_50h;\n    uint32_t var_4ch;\n    int32_t var_48h;\n    uint32_t var_44h;\n    int32_t var_40h;\n    uint32_t var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    uint32_t var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_19h;\n    uint32_t var_8h;\n    \n    var_8h = *0x4b4f00 ^ &stack0xfffffffc;\n    var_40h = 0;\n    var_30h = 0;\n    iVar3 = fcn.00420770();\n    if ((((iVar3 != 0) || (var_50h != 0)) || (0x7fffffff < var_54h)) || ((0x3ffffff < var_54h || (0x20 < var_54h)))) {\ncode_r0x00420efe:\n        fcn.004529f8(in_stack_ffffff84);\n        return;\n    }\n    in_EDX[4] = var_54h;\n    if (var_54h == 0) {\n        *in_EDX = 0;\n    }\n    else {\n        iVar3 = (**arg_8h)(arg_8h, var_54h * 0x18);\n        *in_EDX = iVar3;\n        if (iVar3 == 0) goto code_r0x00420f2b;\n    }\n    if (var_54h != 0) {\n        iVar3 = 0;\n        uVar9 = var_54h;\n        do {\n            iVar2 = *in_EDX;\n            iVar3 = iVar3 + 0x18;\n            *(iVar2 + -8 + iVar3) = 0;\n            *(iVar2 + -4 + iVar3) = 0;\n            uVar9 = uVar9 - 1;\n        } while (uVar9 != 0);\n    }\n    var_44h = 0;\n    if (var_54h == 0) goto code_r0x00420efe;\n    var_2ch = 0;\n    do {\n        puVar4 = *in_EDX + var_2ch;\n        if (in_ECX[1] == NULL) {\ncode_r0x004210ed:\n            fcn.004529f8(in_stack_ffffff84);\n            return;\n        }\n        puVar6 = in_ECX[1] + -1;\n        in_ECX[1] = puVar6;\n        var_19h._0_1_ = **in_ECX;\n        puVar10 = *in_ECX + 1;\n        *in_ECX = puVar10;\n        uVar11 = 0;\n        uVar9 = var_19h & 0xf;\n        if ((var_19h & 0xf) != 0) {\n            do {\n                if (puVar6 == NULL) goto code_r0x004210ed;\n                puVar6 = puVar6 + -1;\n                in_ECX[1] = puVar6;\n                *(&var_19h + uVar11 + 1) = *puVar10;\n                puVar10 = puVar10 + 1;\n                uVar11 = uVar11 + 1;\n                *in_ECX = puVar10;\n            } while (uVar11 < uVar9);\n        }\n        if (8 < uVar9) goto code_r0x00420efe;\n        puVar4[2] = 0;\n        puVar4[3] = 0;\n        if ((var_19h & 0xf) != 0) {\n            do {\n                uVar12 = fcn.00485dd0();\n                puVar4[2] = puVar4[2] | uVar12;\n                puVar4[3] = puVar4[3] | uVar12 >> 0x20;\n                uVar9 = uVar9 - 1;\n            } while (uVar9 != 0);\n        }\n        uVar1 = var_19h;\n        if ((var_19h & 0x10) == 0) {\n            *puVar4 = 1;\n            puVar4[1] = 1;\n        }\n        else {\n            iVar3 = fcn.00420770();\n            if (((iVar3 != 0) || (var_60h != 0)) || ((0x7fffffff < var_64h || (0x3ffffff < var_64h))))\n            goto code_r0x00420efe;\n            *puVar4 = var_64h;\n            iVar3 = fcn.00420770();\n            if ((((iVar3 != 0) || (var_70h != 0)) || (0x7fffffff < var_74h)) ||\n               (((0x3ffffff < var_74h || (puVar4[1] = var_74h,  0x20 < *puVar4)) || (0x20 < var_74h))))\n            goto code_r0x00420efe;\n        }\n        if ((uVar1 & 0x20) != 0) {\n            iVar3 = fcn.00420770();\n            if (iVar3 != 0) goto code_r0x00420efe;\n            puVar4[5] = 0;\n            puVar4[4] = 0;\n            iVar3 = fcn.004206e0(0);\n            uVar1 = var_19h;\n            if (iVar3 != 0) goto code_r0x00420efe;\n        }\n        while (uVar1 < '\\0') {\n            if (in_ECX[1] == NULL) goto code_r0x004210ed;\n            puVar10 = *in_ECX + 1;\n            puVar7 = in_ECX[1] + -1;\n            in_ECX[1] = puVar7;\n            uVar1 = **in_ECX;\n            *in_ECX = puVar10;\n            puVar6 = uVar1 & 0xf;\n            if (puVar7 < puVar6) goto code_r0x004210ed;\n            in_ECX[1] = puVar7 + -puVar6;\n            *in_ECX = puVar6 + puVar10;\n            if (((uVar1 & 0x10) != 0) &&\n               ((((iVar3 = fcn.00420770(),  iVar3 != 0 || (var_48h != 0)) ||\n                 ((0x7fffffff < var_4ch ||\n                  (((0x3ffffff < var_4ch || (iVar3 = fcn.00420770(),  iVar3 != 0)) || (var_38h != 0)))))) ||\n                ((0x7fffffff < var_3ch || (0x3ffffff < var_3ch)))))) goto code_r0x00420efe;\n            if ((uVar1 & 0x20) != 0) {\n                iVar3 = fcn.00420770();\n                if (iVar3 != 0) goto code_r0x00420efe;\n                *in_ECX = *in_ECX;\n                in_ECX[1] = in_ECX[1];\n            }\n        }\n        var_30h = var_30h + *puVar4;\n        var_40h = var_40h + puVar4[1];\n        var_44h = var_44h + 1;\n        var_2ch = var_2ch + 0x18;\n    } while (var_44h < var_54h);\n    if (var_40h == 0) goto code_r0x00420efe;\n    uVar9 = var_40h - 1;\n    in_EDX[5] = uVar9;\n    if (uVar9 == 0) {\n        in_EDX[1] = 0;\n    }\n    else {\n        iVar3 = (**arg_8h)(arg_8h, uVar9 * 8);\n        in_EDX[1] = iVar3;\n        if (iVar3 == 0) goto code_r0x00420f2b;\n    }\n    uVar11 = 0;\n    if (uVar9 != 0) {\n        do {\n            puVar4 = in_EDX[1] + uVar11 * 8;\n            iVar3 = fcn.00420770();\n            if (((iVar3 != 0) || (var_38h != 0)) || ((0x7fffffff < var_3ch || (0x3ffffff < var_3ch))))\n            goto code_r0x00420efe;\n            *puVar4 = var_3ch;\n            iVar3 = fcn.00420770();\n            if ((((iVar3 != 0) || (var_48h != 0)) || (0x7fffffff < var_4ch)) || (0x3ffffff < var_4ch))\n            goto code_r0x00420efe;\n            uVar11 = uVar11 + 1;\n            puVar4[1] = var_4ch;\n        } while (uVar11 < uVar9);\n    }\n    if (var_30h < uVar9) goto code_r0x00420efe;\n    uVar9 = var_30h - (var_40h + -1);\n    in_EDX[6] = uVar9;\n    if (uVar9 == 0) {\n        in_EDX[2] = 0;\n    }\n    else {\n        puVar4 = (**arg_8h)(arg_8h, uVar9 * 4);\n        in_EDX[2] = puVar4;\n        if (puVar4 == NULL) {\ncode_r0x00420f2b:\n            fcn.004529f8(in_stack_ffffff84);\n            return;\n        }\n        if (uVar9 == 1) {\n            uVar9 = 0;\n            if (var_30h != 0) {\n                while (uVar11 = 0,  in_EDX[5] != 0) {\n                    puVar8 = in_EDX[1];\n                    while (*puVar8 != uVar9) {\n                        uVar11 = uVar11 + 1;\n                        puVar8 = puVar8 + 2;\n                        if (in_EDX[5] <= uVar11) goto code_r0x004212db;\n                    }\n                    if ((uVar11 < 0) || (uVar9 = uVar9 + 1,  var_30h <= uVar9)) break;\n                }\n            }\ncode_r0x004212db:\n            if (uVar9 == var_30h) goto code_r0x00420efe;\n            *puVar4 = uVar9;\n            goto code_r0x004212e5;\n        }\n    }\n    uVar11 = 0;\n    if (uVar9 != 0) {\n        do {\n            iVar2 = in_EDX[2];\n            iVar3 = uVar11 * 4;\n            iVar5 = fcn.00420770();\n            if (((iVar5 != 0) || (var_38h != 0)) || ((0x7fffffff < var_3ch || (0x3ffffff < var_3ch))))\n            goto code_r0x00420efe;\n            uVar11 = uVar11 + 1;\n            *(iVar2 + iVar3) = var_3ch;\n        } while (uVar11 < uVar9);\n    }\ncode_r0x004212e5:\n    fcn.004529f8(in_stack_ffffff84);\n    return;\n}\n",
        "token_count": 2837
    },
    "00421300": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t * __cdecl fcn.00421300(int32_t *arg_8h, code **arg_ch, code **arg_10h)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    uint32_t *puVar3;\n    uint *puVar4;\n    uint32_t *puVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t *puVar8;\n    uint8_t uVar9;\n    uint8_t **in_ECX;\n    uint32_t **in_EDX;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uint8_t *var_28h;\n    int32_t var_24h;\n    uint32_t *var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t *var_10h;\n    uint32_t *var_ch;\n    uint32_t **var_8h;\n    uint32_t *var_4h;\n    \n    var_8h = in_EDX;\n    puVar3 = fcn.00420910(0xb, 0);\n    if ((puVar3 == NULL) && (puVar3 = fcn.00420770(),  puVar3 == NULL)) {\n        if ((var_1ch == 0) && ((var_20h < 0x80000000 && (var_20h < 0x4000000)))) {\n            puVar2 = in_ECX[1];\n            *in_EDX = var_20h;\n            if (puVar2 == NULL) {\n                return 0x10;\n            }\n            in_ECX[1] = puVar2 + -1;\n            uVar1 = **in_ECX;\n            *in_ECX = *in_ECX + 1;\n            puVar3 = 0x4;\n            if (uVar1 == 0) {\n                puVar3 = NULL;\n            }\n            if (puVar3 == NULL) {\n                if (var_20h == NULL) {\n                    *arg_8h = 0;\n                }\n                else {\n                    iVar10 = (**arg_ch)(arg_ch, var_20h * 0x28);\n                    *arg_8h = iVar10;\n                    if (iVar10 == 0) {\n                        return 0x2;\n                    }\n                }\n                puVar3 = NULL;\n                if (*in_EDX != NULL) {\n                    iVar10 = 0;\n                    do {\n                        puVar4 = *arg_8h + iVar10;\n                        puVar3 = puVar3 + 1;\n                        *puVar4 = 0;\n                        puVar4[1] = 0;\n                        puVar4[2] = 0;\n                        puVar4[3] = 0;\n                        puVar4[4] = 0;\n                        puVar4[5] = 0;\n                        puVar4[6] = 0;\n                        puVar4[7] = 0;\n                        puVar4[8] = 0;\n                        puVar4[9] = 0;\n                        iVar10 = iVar10 + 0x28;\n                    } while (puVar3 < *in_EDX);\n                }\n                puVar3 = NULL;\n                if (*in_EDX != NULL) {\n                    do {\n                        puVar5 = fcn.00420d30(arg_ch);\n                        if (puVar5 != NULL) {\n                            return puVar5;\n                        }\n                        puVar3 = puVar3 + 1;\n                        in_EDX = var_8h;\n                    } while (puVar3 < *var_8h);\n                }\n                puVar3 = fcn.00420910(0xc, 0);\n                if (puVar3 == NULL) {\n                    var_10h = puVar3;\n                    if (*in_EDX != NULL) {\n                        do {\n                            iVar10 = *arg_8h;\n                            var_ch = puVar3;\n                            uVar6 = fcn.004202e0();\n                            if (uVar6 == 0) {\n                                *(puVar3 + iVar10 + 0xc) = 0;\n                            }\n                            else {\n                                iVar7 = (**arg_ch)(arg_ch, uVar6 << 3);\n                                *(puVar3 + iVar10 + 0xc) = iVar7;\n                                if (iVar7 == 0) {\n                                    return 0x2;\n                                }\n                            }\n                            uVar11 = 0;\n                            if (uVar6 != 0) {\n                                do {\n                                    puVar3 = fcn.00420770();\n                                    if (puVar3 != NULL) {\n                                        return puVar3;\n                                    }\n                                    uVar11 = uVar11 + 1;\n                                } while (uVar11 < uVar6);\n                            }\n                            var_10h = var_10h + 1;\n                            puVar3 = var_ch + 10;\n                            in_EDX = var_8h;\n                            var_ch = puVar3;\n                        } while (var_10h < *var_8h);\n                    }\n                    puVar3 = fcn.00420770();\n                    while (puVar3 == NULL) {\n                        if (var_20h == NULL) {\n                            return NULL;\n                        }\n                        if (var_20h == 0xa) {\n                            puVar3 = *in_EDX;\n                            var_4h = NULL;\n                            var_10h = NULL;\n                            var_ch = NULL;\n                            if (in_ECX[1] == NULL) {\ncode_r0x0042165f:\n                                puVar8 = 0x10;\n                                puVar5 = var_4h;\n                            }\n                            else {\n                                in_ECX[1] = in_ECX[1] + -1;\n                                uVar1 = **in_ECX;\n                                *in_ECX = *in_ECX + 1;\n                                if (uVar1 == 0) {\n                                    puVar8 = fcn.004209a0(&var_10h, arg_10h);\n                                    puVar5 = var_10h;\n                                    if (puVar8 == NULL) {\n                                        var_4h = var_10h;\ncode_r0x004215a5:\n                                        if (puVar3 == NULL) {\ncode_r0x004215a9:\n                                            var_ch = NULL;\n                                            goto code_r0x004215d7;\n                                        }\n                                        var_ch = (**arg_10h)(arg_10h, puVar3 * 4);\n                                        if (var_ch != NULL) goto code_r0x004215d7;\n                                        puVar8 = 0x2;\n                                        puVar5 = var_4h;\n                                    }\n                                }\n                                else if (puVar3 == NULL) {\n                                    var_4h = NULL;\n                                    var_ch = NULL;\ncode_r0x004215d7:\n                                    puVar8 = NULL;\n                                    puVar5 = var_ch;\n                                    if (puVar3 != NULL) {\n                                        do {\n                                            if (*(puVar8 + var_4h) != '\\0') {\n                                                *puVar5 = 0;\n                                                iVar10 = 0;\n                                                do {\n                                                    if (in_ECX[1] == NULL) goto code_r0x0042165f;\n                                                    in_ECX[1] = in_ECX[1] + -1;\n                                                    uVar1 = **in_ECX;\n                                                    *in_ECX = *in_ECX + 1;\n                                                    uVar9 = iVar10;\n                                                    iVar10 = iVar10 + 8;\n                                                    *puVar5 = *puVar5 | uVar1 << (uVar9 & 0x1f);\n                                                } while (iVar10 < 0x20);\n                                            }\n                                            puVar8 = puVar8 + 1;\n                                            puVar5 = puVar5 + 1;\n                                        } while (puVar8 < puVar3);\n                                    }\n                                    puVar8 = NULL;\n                                    puVar5 = var_4h;\n                                    if (*var_8h != NULL) {\n                                        iVar10 = 0;\n                                        puVar3 = NULL;\n                                        do {\n                                            puVar8 = puVar3 + 1;\n                                            iVar7 = *arg_8h;\n                                            iVar10 = iVar10 + 0x28;\n                                            *(iVar7 + -0xc + iVar10) = *(var_4h + puVar3);\n                                            *(iVar7 + -8 + iVar10) = var_ch[puVar3];\n                                            puVar3 = puVar8;\n                                        } while (puVar8 < *var_8h);\n                                        puVar8 = NULL;\n                                    }\n                                }\n                                else {\n                                    puVar5 = (**arg_10h)(arg_10h, puVar3);\n                                    var_4h = puVar5;\n                                    if (puVar5 != NULL) {\n                                        if (puVar3 != NULL) {\n                                            for (uVar6 = puVar3 >> 2; uVar6 != 0; uVar6 = uVar6 - 1) {\n                                                *puVar5 = 0x1010101;\n                                                puVar5 = puVar5 + 1;\n                                            }\n                                            for (uVar6 = puVar3 & 3; uVar6 != 0; uVar6 = uVar6 - 1) {\n                                                *puVar5 = 1;\n                                                puVar5 = puVar5 + 1;\n                                            }\n                                            goto code_r0x004215a5;\n                                        }\n                                        goto code_r0x004215a9;\n                                    }\n                                    puVar8 = 0x2;\n                                }\n                            }\n                            (*arg_10h[1])(arg_10h, var_ch);\n                            (*arg_10h[1])(arg_10h, puVar5);\n                            if (puVar8 != NULL) {\n                                return puVar8;\n                            }\n                        }\n                        else {\n                            puVar3 = fcn.00420770();\n                            if (puVar3 != NULL) {\n                                return puVar3;\n                            }\n                            if ((var_24h == 0) && (var_28h <= in_ECX[1])) {\n                                *in_ECX = *in_ECX + var_28h;\n                                in_ECX[1] = in_ECX[1] + -var_28h;\n                                puVar3 = NULL;\n                            }\n                            else {\n                                puVar3 = 0x10;\n                            }\n                            if (puVar3 != NULL) {\n                                return puVar3;\n                            }\n                        }\n                        puVar3 = fcn.00420770();\n                        in_EDX = var_8h;\n                    }\n                }\n            }\n        }\n        else {\n            puVar3 = 0x4;\n        }\n    }\n    return puVar3;\n}\n",
        "token_count": 2335
    },
    "00421700": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00421a6c)\n// WARNING: Removing unreachable block (ram,0x00421a74)\n// WARNING: Removing unreachable block (ram,0x00421c55)\n// WARNING: Removing unreachable block (ram,0x00421a8c)\n// WARNING: Removing unreachable block (ram,0x00421acf)\n// WARNING: Removing unreachable block (ram,0x00421ae5)\n// WARNING: Removing unreachable block (ram,0x00421b09)\n// WARNING: Removing unreachable block (ram,0x00421b10)\n// WARNING: Removing unreachable block (ram,0x00421b1e)\n// WARNING: Removing unreachable block (ram,0x00421b20)\n// WARNING: Removing unreachable block (ram,0x00421b28)\n// WARNING: Removing unreachable block (ram,0x00421b2a)\n// WARNING: Removing unreachable block (ram,0x00421afa)\n// WARNING: Removing unreachable block (ram,0x00421ad6)\n// WARNING: Removing unreachable block (ram,0x00421a9c)\n// WARNING: Removing unreachable block (ram,0x00421ac7)\n// WARNING: Removing unreachable block (ram,0x00421b2d)\n// WARNING: Removing unreachable block (ram,0x00421b34)\n// WARNING: Removing unreachable block (ram,0x00421b3b)\n// WARNING: Removing unreachable block (ram,0x00421b5b)\n// WARNING: Removing unreachable block (ram,0x00421b5e)\n// WARNING: Removing unreachable block (ram,0x00421b68)\n// WARNING: Removing unreachable block (ram,0x00421b70)\n// WARNING: Removing unreachable block (ram,0x00421b75)\n// WARNING: Removing unreachable block (ram,0x00421b80)\n// WARNING: Removing unreachable block (ram,0x00421c00)\n// WARNING: Removing unreachable block (ram,0x00421b87)\n// WARNING: Removing unreachable block (ram,0x00421ba7)\n// WARNING: Removing unreachable block (ram,0x00421bad)\n// WARNING: Removing unreachable block (ram,0x00421bbc)\n// WARNING: Removing unreachable block (ram,0x00421c61)\n// WARNING: Removing unreachable block (ram,0x00421bca)\n// WARNING: Removing unreachable block (ram,0x00421bd8)\n// WARNING: Removing unreachable block (ram,0x00421c07)\n// WARNING: Removing unreachable block (ram,0x00421be0)\n// WARNING: Removing unreachable block (ram,0x00421c0b)\n// WARNING: Removing unreachable block (ram,0x00421c20)\n// WARNING: Removing unreachable block (ram,0x00421c3b)\n// WARNING: Removing unreachable block (ram,0x00421be5)\n// WARNING: Removing unreachable block (ram,0x00421c3e)\n// WARNING: Removing unreachable block (ram,0x00421c41)\n// WARNING: Removing unreachable block (ram,0x00421c4d)\n// WARNING: Removing unreachable block (ram,0x00421b53)\n// WARNING: Removing unreachable block (ram,0x00421aba)\n// WARNING: Removing unreachable block (ram,0x00421c63)\n// WARNING: Removing unreachable block (ram,0x00421c82)\n// WARNING: Removing unreachable block (ram,0x0042176b)\n// WARNING: Removing unreachable block (ram,0x0042176f)\n// WARNING: Removing unreachable block (ram,0x0042177d)\n// WARNING: Removing unreachable block (ram,0x00421783)\n// WARNING: Removing unreachable block (ram,0x00421795)\n// WARNING: Removing unreachable block (ram,0x004217a0)\n// WARNING: Removing unreachable block (ram,0x004217b0)\n// WARNING: Removing unreachable block (ram,0x004217b8)\n// WARNING: Removing unreachable block (ram,0x00421840)\n// WARNING: Removing unreachable block (ram,0x004217c1)\n// WARNING: Removing unreachable block (ram,0x004217d1)\n// WARNING: Removing unreachable block (ram,0x004217d8)\n// WARNING: Removing unreachable block (ram,0x004218fa)\n// WARNING: Removing unreachable block (ram,0x004218fe)\n// WARNING: Removing unreachable block (ram,0x00421903)\n// WARNING: Removing unreachable block (ram,0x00421914)\n// WARNING: Removing unreachable block (ram,0x00421926)\n// WARNING: Removing unreachable block (ram,0x0042194f)\n// WARNING: Removing unreachable block (ram,0x004219ed)\n// WARNING: Removing unreachable block (ram,0x004219f1)\n// WARNING: Removing unreachable block (ram,0x00421a03)\n// WARNING: Removing unreachable block (ram,0x00421c8f)\n// WARNING: Removing unreachable block (ram,0x00421c9d)\n// WARNING: Removing unreachable block (ram,0x00421cab)\n// WARNING: Removing unreachable block (ram,0x00421caf)\n// WARNING: Removing unreachable block (ram,0x00421cb6)\n// WARNING: Removing unreachable block (ram,0x00421cbf)\n// WARNING: Removing unreachable block (ram,0x00421cc3)\n// WARNING: Removing unreachable block (ram,0x00421cd1)\n// WARNING: Removing unreachable block (ram,0x004217e1)\n// WARNING: Removing unreachable block (ram,0x004217eb)\n// WARNING: Removing unreachable block (ram,0x004217fd)\n// WARNING: Removing unreachable block (ram,0x0042180b)\n// WARNING: Removing unreachable block (ram,0x0042180f)\n// WARNING: Removing unreachable block (ram,0x00421816)\n// WARNING: Removing unreachable block (ram,0x0042181f)\n// WARNING: Removing unreachable block (ram,0x00421827)\n// WARNING: Removing unreachable block (ram,0x00421839)\n\nint32_t __cdecl\nfcn.00421700(int32_t arg_8h, uint32_t *arg_ch, int32_t *arg_10h, int32_t *arg_14h, int32_t *arg_18h, code **arg_1ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t in_EDX;\n    int32_t *piVar6;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    if (in_EDX != 0) {\n        puVar1 = arg_8h + 0x24;\n        uVar5 = in_EDX;\n        do {\n            *puVar1 = 1;\n            puVar1 = puVar1 + 10;\n            uVar5 = uVar5 - 1;\n        } while (uVar5 != 0);\n    }\n    *arg_ch = in_EDX;\n    iVar2 = fcn.00420770();\n    if (iVar2 == 0) {\n        if (*arg_ch == 0) {\n            *arg_10h = 0;\n            *arg_14h = 0;\n            *arg_18h = 0;\n        }\n        else {\n            iVar2 = (**arg_1ch)(arg_1ch, *arg_ch << 3);\n            *arg_10h = iVar2;\n            if (iVar2 == 0) {\n                return 2;\n            }\n            iVar2 = (**arg_1ch)(arg_1ch, *arg_ch);\n            *arg_14h = iVar2;\n            if (iVar2 == 0) {\n                return 2;\n            }\n            iVar2 = (**arg_1ch)(arg_1ch, *arg_ch << 2);\n            *arg_18h = iVar2;\n            if (iVar2 == 0) {\n                return 2;\n            }\n        }\n        var_20h = 0;\n        if (in_EDX != 0) {\n            piVar6 = arg_8h + 0xc;\n            do {\n                if (piVar6[6] != 0) {\n                    iVar2 = fcn.004202e0();\n                    if ((iVar2 != 0) && (iVar2 = iVar2 + -1,  -1 < iVar2)) {\n                        do {\n                            uVar5 = 0;\n                            if (piVar6[2] == 0) {\ncode_r0x0042198c:\n                                var_30h = *(*piVar6 + iVar2 * 8);\n                                var_2ch = *(*piVar6 + 4 + iVar2 * 8);\n                                goto code_r0x004219ac;\n                            }\n                            piVar3 = piVar6[-2] + 4;\n                            while (*piVar3 != iVar2) {\n                                uVar5 = uVar5 + 1;\n                                piVar3 = piVar3 + 2;\n                                if (piVar6[2] <= uVar5) goto code_r0x0042198c;\n                            }\n                            if (uVar5 < 0) goto code_r0x0042198c;\n                            iVar2 = iVar2 + -1;\n                        } while (-1 < iVar2);\n                    }\n                    var_30h = 0;\n                    var_2ch = 0;\ncode_r0x004219ac:\n                    iVar2 = *arg_10h;\n                    *(iVar2 + var_8h * 8) = var_30h;\n                    *(iVar2 + 4 + var_8h * 8) = var_2ch;\n                    var_8h = var_8h + 1;\n                }\n                var_20h = var_20h + 1;\n                piVar6 = piVar6 + 10;\n            } while (var_20h < in_EDX);\n        }\n        uVar4 = 0;\n        uVar5 = *arg_ch;\n        if (uVar5 != 0) {\n            puVar1 = *arg_18h;\n            iVar2 = *arg_14h;\n            do {\n                *(iVar2 + uVar4) = 0;\n                uVar4 = uVar4 + 1;\n                *puVar1 = 0;\n                puVar1 = puVar1 + 1;\n            } while (uVar4 < uVar5);\n        }\n        if (in_EDX != 0) {\n            do {\n                in_EDX = in_EDX - 1;\n            } while (in_EDX != 0);\n        }\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 2476
    },
    "00421df0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00421df0(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint uVar2;\n    uint32_t in_EDX;\n    uint32_t uVar3;\n    \n    uVar1 = 0;\n    uVar3 = 0;\n    if (arg_8h != 0) {\n        do {\n            *(arg_ch + uVar3 * 4) = uVar1;\n            while( true ) {\n                if (in_EDX <= uVar1) {\n                    return 0x10;\n                }\n                if ((*(in_ECX + uVar1 * 2) == '\\0') && (*(in_ECX + 1 + uVar1 * 2) == '\\0')) break;\n                uVar1 = uVar1 + 1;\n            }\n            uVar3 = uVar3 + 1;\n            uVar1 = uVar1 + 1;\n        } while (uVar3 < arg_8h);\n    }\n    *(arg_ch + uVar3 * 4) = uVar1;\n    uVar2 = 0x10;\n    if (uVar1 == in_EDX) {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 290
    },
    "00421e50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.00421e50(int32_t *arg_8h, int32_t *arg_ch, int32_t *arg_10h, int32_t *arg_14h, int32_t *arg_18h, int32_t *arg_1ch, \n            code **arg_20h, int32_t arg_24h)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t in_ECX;\n    uint32_t uVar7;\n    uint *in_EDX;\n    uchar *puVar8;\n    int32_t iVar9;\n    uint *puVar10;\n    bool bVar11;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    uVar4 = fcn.00420770();\n    if (uVar4 != 0) {\n        return uVar4;\n    }\n    if ((var_18h == 2) && (var_14h == 0)) {\n        uVar4 = fcn.004208b0();\n        if (uVar4 != 0) {\n            return uVar4;\n        }\n        uVar4 = fcn.00420770();\n        if (uVar4 != 0) {\n            return uVar4;\n        }\n    }\n    if ((var_18h == 4) && (var_14h == 0)) {\n        uVar4 = fcn.00421cf0(in_ECX, &var_8h, arg_8h, arg_ch, arg_10h, arg_20h, arg_24h);\n        if (uVar4 != 0) {\n            return uVar4;\n        }\n        puVar1 = in_ECX + 0x28;\n        uVar4 = *puVar1;\n        *puVar1 = *puVar1 + *(in_ECX + 0x20);\n        *(in_ECX + 0x2c) = *(in_ECX + 0x2c) + *(in_ECX + 0x24) + CARRY4(uVar4, *(in_ECX + 0x20));\n        uVar4 = fcn.00420770();\n        if (uVar4 != 0) {\n            return uVar4;\n        }\n    }\n    if ((var_18h | var_14h) == 0) {\n        return 0;\n    }\n    if ((var_18h == 5) && (var_14h == 0)) {\n        uVar4 = fcn.00420830();\n        uVar6 = var_4h;\n        if (uVar4 == 0) {\n            *(in_ECX + 0x1c) = var_4h;\n            if ((var_4h != 0) && (uVar4 = (**arg_20h)(arg_20h, var_4h << 5),  uVar4 == 0)) {\n                return 2;\n            }\n            *(in_ECX + 0x10) = uVar4;\n            if (uVar6 != 0) {\n                iVar5 = uVar4 + 0x19;\n                uVar7 = uVar6;\n                do {\n                    *(iVar5 + -1) = 1;\n                    *(iVar5 + 3) = 0;\n                    iVar5 = iVar5 + 0x20;\n                    uVar7 = uVar7 - 1;\n                } while (uVar7 != 0);\n            }\n            var_8h = uVar4;\n            uVar4 = fcn.00420770();\n            while (uVar4 == 0) {\n                if ((var_28h | var_24h) == 0) {\n                    iVar5 = 0;\n                    uVar4 = 0;\n                    var_10h = 0;\n                    if (uVar6 == 0) goto code_r0x004222f6;\n                    puVar8 = var_8h + 0x18;\n                    goto code_r0x00422260;\n                }\n                uVar4 = fcn.00420770();\n                if (uVar4 != 0) {\n                    return uVar4;\n                }\n                if ((var_1ch != 0) || (in_EDX[1] <= var_20h && var_20h != in_EDX[1])) goto code_r0x00422308;\n                uVar4 = var_20h;\n                uVar7 = var_1ch;\n                if ((var_28h >> 0x1f != var_24h) || (7 < var_28h - 0xe)) goto code_r0x00422215;\n    // switch table (8 cases) at 0x422314\n                switch(*((var_28h - 0xe) * 4 + 0x422314)) {\n                case 0x422009:\n                    uVar4 = fcn.00420d00();\n                    if (uVar4 != 0) {\n                        return uVar4;\n                    }\n                    uVar4 = var_20h - 1;\n                    if ((uVar4 & 1) != 0) goto code_r0x00422308;\n                    iVar5 = fcn.00422ea0(arg_20h);\n                    if (iVar5 == 0) {\n                        return 2;\n                    }\n                    if (uVar6 == 0xffffffff) {\n                        *(in_ECX + 0x40) = 0;\n                    }\n                    else {\n                        iVar5 = (**arg_20h)(arg_20h, uVar6 * 4 + 4);\n                        *(in_ECX + 0x40) = iVar5;\n                        if (iVar5 == 0) {\n                            return 2;\n                        }\n                    }\n                    fcn.00452a10(*(in_ECX + 0x44), *in_EDX, uVar4);\n                    uVar7 = fcn.00421df0(var_4h, *(in_ECX + 0x40));\n                    if (uVar7 != 0) {\n                        return uVar7;\n                    }\ncode_r0x00422215:\n                    uVar4 = fcn.00420880(uVar4, uVar7);\ncode_r0x0042221c:\n                    if (uVar4 != 0) {\n                        return uVar4;\n                    }\n                    break;\n                case 0x42209f:\n                    uVar4 = fcn.004209a0(arg_14h, arg_24h);\n                    if (uVar4 != 0) {\n                        return uVar4;\n                    }\n                    if (uVar6 != 0) {\n                        do {\n                            uVar4 = uVar4 + 1;\n                        } while (uVar4 < uVar6);\n                    }\n                    break;\n                case 0x4220e4:\n                    uVar4 = fcn.004209a0(arg_18h, arg_24h);\n                    goto code_r0x0042221c;\n                case 0x4220f9:\n                    uVar4 = fcn.00420a20(arg_1ch, arg_24h);\n                    if (uVar4 != 0) {\n                        return uVar4;\n                    }\n                    uVar4 = fcn.00420d00();\n                    if (uVar4 != 0) {\n                        return uVar4;\n                    }\n                    if (uVar6 != 0) {\n                        puVar10 = var_8h + 0x14;\n                        uVar4 = 0;\n                        do {\n                            cVar2 = *(uVar4 + *arg_1ch);\n                            *(puVar10 + 9) = cVar2;\n                            *puVar10 = 0;\n                            if ((cVar2 != '\\0') && (uVar6 = fcn.00420720(),  uVar6 != 0)) {\n                                return uVar6;\n                            }\n                            uVar4 = uVar4 + 1;\n                            puVar10 = puVar10 + 8;\n                        } while (uVar4 < var_4h);\n                    }\n                    (**(arg_24h + 4))(arg_24h, *arg_1ch);\n                    *arg_1ch = 0;\n                    break;\n                case 0x42217b:\n                    uVar4 = fcn.00420a20(arg_1ch, arg_24h);\n                    if (uVar4 != 0) {\n                        return uVar4;\n                    }\n                    uVar4 = fcn.00420d00();\n                    if (uVar4 != 0) {\n                        return uVar4;\n                    }\n                    uVar4 = 0;\n                    if (uVar6 != 0) {\n                        puVar10 = var_8h + 4;\n                        do {\n                            cVar2 = *(uVar4 + *arg_1ch);\n                            *(puVar10 + 6) = cVar2;\n                            *puVar10 = 0;\n                            puVar10[-1] = 0;\n                            if (cVar2 != '\\0') {\n                                uVar6 = fcn.00420720();\n                                if (uVar6 != 0) {\n                                    return uVar6;\n                                }\n                                uVar6 = fcn.00420720();\n                                if (uVar6 != 0) {\n                                    return uVar6;\n                                }\n                            }\n                            uVar4 = uVar4 + 1;\n                            puVar10 = puVar10 + 8;\n                        } while (uVar4 < var_4h);\n                    }\n                    (**(arg_24h + 4))(arg_24h, *arg_1ch);\n                    *arg_1ch = 0;\n                    break;\n                case 0x422215:\n                    goto code_r0x00422215;\n                }\n                uVar4 = fcn.00420770();\n                uVar6 = var_4h;\n            }\n        }\n    }\n    else {\ncode_r0x00422308:\n        uVar4 = 0x10;\n    }\n    return uVar4;\ncode_r0x00422260:\n    puVar8[2] = 0;\n    if (*arg_14h == 0) {\n        *puVar8 = 1;\ncode_r0x0042227f:\n        puVar8[1] = 0;\n        iVar3 = *arg_8h;\n        iVar9 = iVar5 + 1;\n        *(puVar8 + -0x10) = *(iVar3 + -8 + iVar9 * 8);\n        *(puVar8 + -0xc) = *(iVar3 + -4 + iVar9 * 8);\n        *(puVar8 + -8) = *(*arg_10h + -4 + iVar9 * 4);\n        puVar8[3] = *(iVar5 + *arg_ch);\n        iVar5 = iVar9;\n    }\n    else {\n        bVar11 = *(*arg_14h + uVar4) == '\\0';\n        *puVar8 = bVar11;\n        if (bVar11) goto code_r0x0042227f;\n        if (*arg_18h == 0) {\n            puVar8[1] = 1;\n        }\n        else {\n            puVar8[1] = *(*arg_18h + var_10h) == '\\0';\n        }\n        var_10h = var_10h + 1;\n        *(puVar8 + -0x10) = 0;\n        *(puVar8 + -0xc) = 0;\n        *(puVar8 + -8) = 0;\n        puVar8[3] = 0;\n    }\n    uVar4 = uVar4 + 1;\n    puVar8 = puVar8 + 0x20;\n    if (uVar6 <= uVar4) {\ncode_r0x004222f6:\n        uVar4 = fcn.00420550();\n        return uVar4;\n    }\n    goto code_r0x00422260;\n}\n",
        "token_count": 2740
    },
    "004223e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.004223e0(uint *arg_8h, uint32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t arg_ch_00;\n    int32_t arg_10h_00;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar2 = fcn.00421cf0(arg_14h, &var_4h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_24h);\n    if (iVar2 == 0) {\n        arg_ch_00 = var_10h + arg_ch;\n        arg_10h_00 = var_ch + arg_10h + CARRY4(var_10h, arg_ch);\n        if (*(arg_14h + 0x18) != 1) {\n            return 0x10;\n        }\n        iVar1 = *(arg_14h + 0xc);\n        var_4h = fcn.00420380();\n        var_10h = arg_ch_00;\n        var_ch = arg_10h_00;\n        iVar2 = (**(var_8h + 0xc))(var_8h, &var_10h, 0);\n        if (iVar2 == 0) {\n            iVar2 = fcn.00422ea0(arg_24h);\n            if (iVar2 == 0) {\n                return 2;\n            }\n            iVar2 = fcn.00423990(var_8h, arg_ch_00, arg_10h_00, *arg_8h, var_4h, arg_24h);\n            if (iVar2 == 0) {\n                if (*(iVar1 + 0x1c) != 0) {\n                    uVar3 = (**0x4b96e4)(var_4h, 0x4ba960);\n                    if (~uVar3 != *(iVar1 + 0x20)) {\n                        return 3;\n                    }\n                }\n                iVar2 = 0;\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 540
    },
    "004225a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Removing unreachable block (ram,0x0042276c)\n// WARNING: Removing unreachable block (ram,0x00422784)\n// WARNING: Removing unreachable block (ram,0x0042278e)\n// WARNING: Removing unreachable block (ram,0x004227a2)\n// WARNING: Removing unreachable block (ram,0x004227bd)\n// WARNING: Removing unreachable block (ram,0x004227d7)\n// WARNING: Removing unreachable block (ram,0x004227f8)\n// WARNING: Removing unreachable block (ram,0x00422816)\n// WARNING: Removing unreachable block (ram,0x0042281e)\n// WARNING: Removing unreachable block (ram,0x00422823)\n// WARNING: Removing unreachable block (ram,0x0042285d)\n// WARNING: Removing unreachable block (ram,0x0042284c)\n// WARNING: Removing unreachable block (ram,0x00422883)\n// WARNING: Removing unreachable block (ram,0x00422887)\n// WARNING: Removing unreachable block (ram,0x0042288a)\n// WARNING: Removing unreachable block (ram,0x0042288f)\n// WARNING: Removing unreachable block (ram,0x00422895)\n// WARNING: Removing unreachable block (ram,0x004228cb)\n// WARNING: Removing unreachable block (ram,0x004228d0)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004225a0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    int32_t in_EDX;\n    uint32_t uVar3;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint32_t var_1eh;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b4f00 ^ &stack0xfffffffc;\n    iVar1 = (**(in_EDX + 0xc))();\n    if ((iVar1 == 0) && (iVar1 = (**(in_EDX + 8))(),  iVar1 == 0)) {\n        uVar2 = 0;\n        do {\n            if (*(&var_24h + uVar2) != *(uVar2 + 0x4b78f0)) goto code_r0x00422921;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < 6);\n        if (var_1eh != '\\0') {\n            fcn.004529f8(arg_8h);\n            return;\n        }\n        *(in_ECX + 0x20) = 0x20;\n        *(in_ECX + 0x24) = 0;\n        uVar2 = (**0x4b96e4)(0x14, 0x4ba960);\n        if (~uVar2 != stack0xffffffe0) {\n            fcn.004529f8(arg_8h);\n            return;\n        }\n        if (var_ch != 0) {\n            fcn.004529f8(arg_8h);\n            return;\n        }\n        if (var_10h == 0) {\n            fcn.004529f8(arg_8h);\n            return;\n        }\n        uVar3 = var_10h + var_18h;\n        uVar2 = var_14h + CARRY4(var_10h, var_18h);\n        if ((var_14h <= uVar2) && ((var_14h < uVar2 || (var_18h <= uVar3)))) {\n            uVar2 = uVar2 + (0xffffffdf < uVar3);\n            if ((var_14h <= uVar2) &&\n               (((var_14h < uVar2 || (var_18h <= uVar3 + 0x20)) && (iVar1 = (**(in_EDX + 0xc))(),  iVar1 == 0)))) {\n                fcn.004529f8(arg_8h);\n                return;\n            }\n        }\n    }\ncode_r0x00422921:\n    fcn.004529f8(arg_8h);\n    return;\n}\n",
        "token_count": 1064
    },
    "00422ef0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_98h\n\nvoid __cdecl fcn.00422ef0(uint32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    code **in_EDX;\n    bool bVar3;\n    int32_t var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint32_t var_88h;\n    int32_t var_84h;\n    uint32_t var_80h;\n    uint var_7ch;\n    uint var_6ch;\n    uint var_68h;\n    int32_t var_58h;\n    int32_t var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint32_t var_8h;\n    \n    var_8h = *0x4b4f00 ^ &stack0xfffffffc;\n    var_68h = 0;\n    var_6ch = 0;\n    iVar1 = fcn.00425b20(*(in_ECX + 0x14), arg_18h);\n    if (iVar1 == 0) {\n        var_54h = arg_14h;\n        var_68h = arg_10h;\n        var_58h = 0;\n        var_30h = 1;\n        var_34h = 0;\n        var_24h = 0;\n        var_50h = 0;\n        var_4ch = 0;\n        var_2ch = 1;\n        var_84h = arg_ch;\n        while( true ) {\n            var_8ch = 0;\n            var_80h = 0x40000;\n            if ((var_84h == 0) && (arg_8h < 0x40000)) {\n                var_80h = arg_8h;\n            }\n            iVar2 = (**in_EDX)();\n            iVar1 = var_58h;\n            if (iVar2 != 0) break;\n            var_88h = var_80h;\n            var_98h = var_58h;\n            iVar2 = fcn.00425830(var_8ch, &var_88h, 1, &var_90h);\n            var_80h = var_80h - var_88h;\n            bVar3 = arg_8h < var_88h;\n            arg_8h = arg_8h - var_88h;\n            var_84h = var_84h - bVar3;\n            if ((((iVar2 != 0) || (var_58h == var_54h)) || ((var_88h == 0 && (iVar1 == var_58h)))) ||\n               (iVar1 = (*in_EDX[1])(),  iVar1 != 0)) break;\n        }\n        (**(arg_18h + 4))(arg_18h, var_6ch);\n    }\n    fcn.004529f8(var_98h);\n    return;\n}\n",
        "token_count": 729
    },
    "00423090": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00423090(uint32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint noname_2;\n    code **in_EDX;\n    bool bVar3;\n    uint in_stack_ffffff44;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint32_t var_a4h;\n    int32_t var_a0h;\n    uint32_t var_9ch;\n    uint var_98h;\n    uint var_88h;\n    uint var_84h;\n    int32_t var_74h;\n    int32_t var_70h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b4f00 ^ &stack0xfffffffc;\n    var_84h = 0;\n    var_88h = 0;\n    if (*(in_ECX + 0x14) != 1) {\n        fcn.004529f8(in_stack_ffffff44);\n        return;\n    }\n    iVar1 = fcn.00423b60(arg_18h);\n    if (iVar1 == 0) {\n        var_84h = arg_10h;\n        var_70h = arg_14h;\n        fcn.00423bd0();\n        var_a0h = arg_ch;\n        while( true ) {\n            var_a8h = 0;\n            var_9ch = 0x40000;\n            if ((var_a0h == 0) && (arg_8h < 0x40000)) {\n                var_9ch = arg_8h;\n            }\n            iVar2 = (**in_EDX)();\n            iVar1 = var_74h;\n            if (iVar2 != 0) break;\n            var_a4h = var_9ch;\n            iVar2 = fcn.00423d60(var_a8h, &var_a4h, noname_2, &var_ach);\n            var_9ch = var_9ch - var_a4h;\n            bVar3 = arg_8h < var_a4h;\n            arg_8h = arg_8h - var_a4h;\n            var_a0h = var_a0h - bVar3;\n            if ((((iVar2 != 0) || (var_74h == var_70h)) || ((var_a4h == 0 && (iVar1 == var_74h)))) ||\n               (iVar1 = (*in_EDX[1])(),  iVar1 != 0)) break;\n        }\n        (**(arg_18h + 4))(arg_18h, var_88h);\n    }\n    fcn.004529f8(in_stack_ffffff44);\n    return;\n}\n",
        "token_count": 646
    },
    "004235d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_60h\n\nvoid __cdecl\nfcn.004235d0(int32_t arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint32_t arg_18h, code **arg_1ch, uint *arg_20h\n            )\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int64_t iVar8;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    int32_t var_50h;\n    int32_t *var_4ch;\n    uint32_t var_48h;\n    int32_t var_44h;\n    uint *var_40h;\n    int32_t var_3ch;\n    code **var_38h;\n    uint32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b4f00 ^ &stack0xfffffffc;\n    var_28h = arg_8h;\n    var_30h = arg_14h;\n    var_38h = arg_1ch;\n    var_24h = arg_18h;\n    var_40h = arg_20h;\n    var_10h = 0;\n    var_ch = 0;\n    var_48h = 0;\n    var_44h = 0;\n    var_4ch = in_ECX;\n    var_3ch = in_EDX;\n    iVar2 = fcn.00423320();\n    _var_60h = CONCAT44(var_5ch, var_60h);\n    _var_58h = CONCAT44(var_54h, var_58h);\n    if (iVar2 == 0) {\n        uVar5 = in_ECX[4];\n        uVar6 = 0;\n        _var_60h = CONCAT44(var_5ch, var_60h);\n        _var_58h = CONCAT44(var_54h, var_58h);\n        if (uVar5 != 0) {\n            do {\n                uVar7 = *in_ECX + uVar6 * 0x18;\n                iVar2 = *(uVar7 + 8);\n                var_20h = uVar7;\n                if (((iVar2 == 0) || (iVar2 == 0x21)) || (iVar2 == 0x30101)) {\n                    var_2ch = 0;\n                    var_34h = var_24h;\n                    iVar2 = var_30h;\n                    if (uVar5 == 4) {\n                        var_14h = 0;\n                        var_1ch = 3;\n                        uVar5 = *(var_4ch[3] + uVar6 * 8);\n                        iVar2 = *(var_4ch[3] + 4 + uVar6 * 8);\n                        var_50h = uVar6 * 4;\n                        var_18h = 2;\n                        var_2ch = (&var_1ch)[uVar6];\n                        if (uVar6 < 2) {\n                            var_34h = uVar5;\n                            if (iVar2 != 0) goto code_r0x00423930;\n                            iVar2 = (**var_38h)(var_38h, uVar5);\n                            if ((iVar2 == 0) && (uVar5 != 0)) goto code_r0x00423930;\n                            *(-var_50h + 4 + var_40h) = iVar2;\n                            *(&var_ch + -var_50h) = uVar5;\n                            uVar7 = var_20h;\n                        }\n                        else {\n                            if (uVar6 != 2) goto code_r0x0042395c;\n                            if ((iVar2 != 0) || (var_24h < uVar5)) {\n                                fcn.004529f8(var_60h);\n                                return;\n                            }\n                            iVar2 = (var_24h - uVar5) + var_30h;\n                            var_48h = uVar5;\n                            var_44h = iVar2;\n                            var_34h = uVar5;\n                        }\n                    }\n                    var_20h = *(var_3ch + var_2ch * 8);\n                    var_2ch = *(var_3ch + 4 + var_2ch * 8);\n                    iVar8 = fcn.004234c0();\n                    _var_58h = iVar8 + CONCAT44(arg_10h, arg_ch);\n                    iVar4 = (**(var_28h + 0xc))(var_28h, &var_58h, 0);\n                    if (iVar4 != 0) break;\n                    uVar5 = *(uVar7 + 8);\n                    uVar1 = *(uVar7 + 0xc);\n                    if ((uVar5 | uVar1) == 0) {\n                        if ((var_20h != var_34h) || (var_2ch != 0)) {\n                            fcn.004529f8(var_60h);\n                            return;\n                        }\n                        iVar2 = fcn.00423240(var_20h, 0);\n                    }\n                    else if ((uVar5 == 0x30101) && (uVar1 == 0)) {\n                        iVar2 = fcn.00422ef0(var_20h, var_2ch, iVar2, var_34h, var_38h);\n                    }\n                    else {\n                        uVar7 = var_20h;\n                        if ((uVar5 != 0x21) || (uVar1 != 0)) goto code_r0x0042395c;\n                        iVar2 = fcn.00423090(var_20h, var_2ch, iVar2, var_34h, var_38h);\n                    }\ncode_r0x00423907:\n                    if (iVar2 != 0) break;\n                }\n                else {\n                    var_20h = *(uVar7 + 0xc);\n                    if ((iVar2 == 0x303011b) && (var_20h == 0)) {\n                        iVar2 = *(var_3ch + 8);\n                        iVar4 = *(var_3ch + 0xc);\n                        if (uVar6 != 3) goto code_r0x0042395c;\n                        var_20h = uVar7;\n                        iVar8 = fcn.004234c0();\n                        _var_60h = iVar8 + CONCAT44(arg_10h, arg_ch);\n                        iVar3 = (**(var_28h + 0xc))(var_28h, &var_60h, 0);\n                        if (iVar3 == 0) {\n                            if (iVar4 != 0) {\ncode_r0x00423930:\n                                fcn.004529f8(var_60h);\n                                return;\n                            }\n                            iVar4 = (**var_38h)(var_38h, iVar2);\n                            var_40h[2] = iVar4;\n                            if ((iVar4 == 0) && (iVar2 != 0)) goto code_r0x00423930;\n                            iVar4 = fcn.00423240(iVar2, 0);\n                            if (iVar4 == 0) {\n                                iVar2 = fcn.004241b0(*var_40h, var_10h, var_40h[1], var_ch, var_40h[2], iVar2, var_30h, \n                                                     var_24h);\n                                goto code_r0x00423907;\n                            }\n                        }\n                        break;\n                    }\n                    if (uVar6 != 1) {\ncode_r0x0042395c:\n                        var_20h = uVar7;\n                        fcn.004529f8(var_60h);\n                        return;\n                    }\n                    if ((iVar2 == 0x3030103) && (var_20h == 0)) {\n                        fcn.00424030(0x3030103, &var_20h);\n                    }\n                    else {\n                        if ((iVar2 != 0x3030501) || (var_20h != 0)) goto code_r0x0042395c;\n                        var_20h = uVar7;\n                        fcn.00425c10();\n                    }\n                }\n                uVar6 = uVar6 + 1;\n                uVar5 = var_4ch[4];\n                in_ECX = var_4ch;\n            } while (uVar6 < uVar5);\n        }\n    }\n    fcn.004529f8(var_60h);\n    return;\n}\n",
        "token_count": 2025
    },
    "00423aa0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00423b27)\n// WARNING: Removing unreachable block (ram,0x00423af7)\n\nuint __fastcall fcn.00423aa0(uint *param_1)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint8_t in_AC;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    bool bVar6;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = (in_AC & 1) * 0x40000;\n    bVar6 = (((in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000) & 0x200000) != 0;\n    if (((((((uVar1 ^ 0x40000) & 0x40000) != 0) * 0x40000 ^ uVar1) & 0x40000) != 0) && (!bVar6 != bVar6)) {\n        puVar2 = cpuid_basic_info(0);\n        uVar5 = puVar2[1];\n        uVar4 = puVar2[2];\n        uVar3 = puVar2[3];\n        *param_1 = *puVar2;\n        param_1[1] = uVar5;\n        param_1[3] = uVar3;\n        param_1[2] = uVar4;\n        puVar2 = cpuid_Version_info(1);\n        uVar5 = puVar2[1];\n        uVar4 = puVar2[2];\n        uVar3 = puVar2[3];\n        param_1[4] = *puVar2;\n        param_1[5] = uVar5;\n        param_1[6] = uVar3;\n        param_1[7] = uVar4;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 459
    },
    "00423c30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00423c30(uint32_t *param_1, uint8_t param_2)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    // switch table (6 cases) at 0x423d3c\n    switch(param_1[0x1e]) {\n    case 0:\n        *(param_1 + 0x1f) = param_2;\n        if (param_2 == 0) {\n            return 8;\n        }\n        if (param_2 < '\\0') {\n            param_1[0x1d] = (param_2 & 0x1f) << 0x10;\n            return 1;\n        }\n        if ((param_2 & 0x7f) < 3) {\n            param_1[0x1d] = 0;\n            return 1;\n        }\n        break;\n    case 1:\n        param_1[0x1d] = param_1[0x1d] | param_2 << 8;\n        return 2;\n    case 2:\n        param_1[0x1d] = (param_2 | param_1[0x1d]) + 1;\n        uVar1 = 3;\n        if ((*(param_1 + 0x1f) & 0x80) == 0) {\n            uVar1 = 6;\n        }\n        return uVar1;\n    case 3:\n        param_1[0x1c] = param_2 << 8;\n        return 4;\n    case 4:\n        param_1[0x1c] = (param_2 | param_1[0x1c]) + 1;\n        if ((*(param_1 + 0x1f) & 0x60) < 0x40) {\n            uVar1 = 6;\n            if (param_1[0x22] != 0) {\n                uVar1 = 9;\n            }\n            return uVar1;\n        }\n        return 5;\n    case 5:\n        if (param_2 < 0xe1) {\n            uVar2 = param_2 / 9;\n            uVar3 = param_2 % 9;\n            uVar4 = uVar2 % 5;\n            param_1[2] = uVar2 / 5;\n            if (uVar4 + uVar3 < 5) {\n                *param_1 = uVar3;\n                param_1[1] = uVar4;\n                param_1[0x22] = 0;\n                return 6;\n            }\n            return 9;\n        }\n    }\n    return 9;\n}\n",
        "token_count": 613
    },
    "00423d60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00423d60(int32_t arg_8h, int32_t *arg_ch, uint noname_2, int32_t *arg_14h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t in_EDX;\n    uint32_t uVar7;\n    int32_t iVar8;\n    bool bVar9;\n    bool bVar10;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = *arg_ch;\n    iVar4 = *(in_ECX + 0x78);\n    *arg_ch = 0;\n    *arg_14h = 0;\n    uVar2 = var_ch;\n    do {\n        if (iVar4 == 8) {\n            *arg_14h = 1;\n            return 0;\n        }\n        iVar4 = *(in_ECX + 0x78);\n        iVar8 = *(in_ECX + 0x24);\n        if (iVar4 == 9) {\n            return 1;\n        }\n        if ((iVar4 == 6) || (iVar4 == 7)) {\n            uVar5 = in_EDX - iVar8;\n            var_ch = var_4h - *arg_ch;\n            uVar7 = *(in_ECX + 0x74);\n            uVar6 = uVar5;\n            if (uVar7 <= uVar5) {\n                uVar6 = uVar7;\n            }\n            var_8h = uVar7 <= uVar5;\n            uVar1 = *(in_ECX + 0x7c);\n            if (uVar1 < '\\0') {\n                if (iVar4 == 6) {\n                    bVar9 = (uVar1 >> 5 & 3) == 3;\n                    bVar10 = (uVar1 >> 5 & 3) == 0;\n                    if ((!bVar9) && (*(in_ECX + 0x80) != 0)) {\n                        return 1;\n                    }\n                    if ((bVar10) && (*(in_ECX + 0x84) != 0)) {\n                        return 1;\n                    }\n                    *(in_ECX + 0x4c) = 1;\n                    *(in_ECX + 0x48) = 0;\n                    *(in_ECX + 0x58) = 0;\n                    if (bVar9) {\n                        *(in_ECX + 0x2c) = 0;\n                        *(in_ECX + 0x30) = 0;\n                        *(in_ECX + 0x50) = 1;\n                    }\n                    if (!bVar10) {\n                        *(in_ECX + 0x50) = 1;\n                    }\n                    *(in_ECX + 0x80) = 0;\n                    *(in_ECX + 0x84) = 0;\n                    *(in_ECX + 0x78) = 7;\n                }\n                if (*(in_ECX + 0x70) <= var_ch && var_ch != *(in_ECX + 0x70)) {\n                    var_ch = *(in_ECX + 0x70);\n                }\n                iVar4 = fcn.00425830(arg_8h, &var_ch, var_8h, arg_14h);\n                iVar8 = *(in_ECX + 0x24) - iVar8;\n                *(in_ECX + 0x70) = *(in_ECX + 0x70) - var_ch;\n                *arg_ch = *arg_ch + var_ch;\n                *(in_ECX + 0x74) = *(in_ECX + 0x74) - iVar8;\n                arg_8h = arg_8h + var_ch;\n                if (iVar4 != 0) {\n                    return iVar4;\n                }\n                iVar4 = *arg_14h;\n                if (iVar4 == 3) {\n                    return 0;\n                }\n                if ((var_ch == 0) && (iVar8 == 0)) {\n                    if (iVar4 != 4) {\n                        return 1;\n                    }\n                    if (*(in_ECX + 0x74) != 0) {\n                        return 1;\n                    }\n                    if (*(in_ECX + 0x70) != 0) {\n                        return 1;\n                    }\n                    *(in_ECX + 0x78) = 0;\n                }\n                if (iVar4 == 4) {\n                    *arg_14h = 2;\n                }\n            }\n            else {\n                if (*arg_ch == var_4h) {\n                    *arg_14h = 3;\n                    return 0;\n                }\n                if (*(in_ECX + 0x78) == 6) {\n                    if (uVar1 != 1) {\n                        if (*(in_ECX + 0x80) != 0) {\n                            return 1;\n                        }\n                    }\n                    else {\n                        *(in_ECX + 0x84) = 1;\n                        *(in_ECX + 0x88) = 1;\n                    }\n                    *(in_ECX + 0x80) = 0;\n                    *(in_ECX + 0x4c) = 1;\n                    *(in_ECX + 0x48) = 0;\n                    *(in_ECX + 0x58) = 0;\n                    if (uVar1 == 1) {\n                        *(in_ECX + 0x2c) = 0;\n                        *(in_ECX + 0x30) = 0;\n                        *(in_ECX + 0x50) = 1;\n                    }\n                }\n                uVar7 = var_ch;\n                if (uVar6 < var_ch) {\n                    uVar7 = uVar6;\n                }\n                if (uVar7 == 0) {\n                    return 1;\n                }\n                var_ch = uVar2;\n                fcn.00452a10(*(in_ECX + 0x14) + *(in_ECX + 0x24), arg_8h, uVar7);\n                *(in_ECX + 0x24) = *(in_ECX + 0x24) + uVar7;\n                if ((*(in_ECX + 0x30) == 0) && (*(in_ECX + 0xc) - *(in_ECX + 0x2c) <= uVar7)) {\n                    *(in_ECX + 0x30) = *(in_ECX + 0xc);\n                }\n                *(in_ECX + 0x2c) = *(in_ECX + 0x2c) + uVar7;\n                *(in_ECX + 0x74) = *(in_ECX + 0x74) - uVar7;\n                iVar4 = *(in_ECX + 0x74);\n                *arg_ch = *arg_ch + uVar7;\n                arg_8h = arg_8h + uVar7;\n                *(in_ECX + 0x78) = -(iVar4 != 0) & 7;\n            }\n        }\n        else {\n            if (*arg_ch == var_4h) {\n                *arg_14h = 3;\n                return 0;\n            }\n            *arg_ch = *arg_ch + 1;\n            var_ch = uVar2;\n            uVar3 = fcn.00423c30();\n            *(in_ECX + 0x78) = uVar3;\n            arg_8h = arg_8h + 1;\n        }\n        iVar4 = *(in_ECX + 0x78);\n        uVar2 = var_ch;\n    } while( true );\n}\n",
        "token_count": 1741
    },
    "00424030": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00424030(uint noname_0, uint32_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    uint8_t *puVar4;\n    uint32_t in_EDX;\n    uint8_t *puVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar8 = 0;\n    uVar7 = *arg_ch & 7;\n    if (in_EDX < 5) {\n        return 0;\n    }\n    puVar4 = (in_EDX - 4) + in_ECX;\n    iVar6 = -1;\n    do {\n        while( true ) {\n            for (puVar5 = iVar8 + in_ECX; (puVar5 < puVar4 && ((*puVar5 & 0xfe) != 0xe8)); puVar5 = puVar5 + 1) {\n            }\n            iVar9 = puVar5 - in_ECX;\n            if (puVar4 <= puVar5) {\n                if (3 < iVar9 - iVar6) {\n                    *arg_ch = 0;\n                    return iVar9;\n                }\n                *arg_ch = uVar7 << ((iVar9 - iVar6) - 1U & 0x1f) & 7;\n                return iVar9;\n            }\n            if (iVar9 - iVar6 < 4) break;\n            uVar7 = 0;\ncode_r0x0042408e:\n            uVar1 = puVar5[4];\n            if ((uVar1 == 0) || (uVar1 == 0xff)) {\n                uVar3 = CONCAT31(CONCAT21(CONCAT11(uVar1, puVar5[3]), puVar5[2]), puVar5[1]);\n                while (uVar3 = (uVar3 - iVar9) - 5,  uVar7 != 0) {\n                    cVar2 = uVar3 >> (*(uVar7 + 0x4a22dc) * -8 + 0x18U & 0x1f);\n                    if ((cVar2 != '\\0') && (cVar2 != -1)) break;\n                    uVar3 = (1 << (*(uVar7 + 0x4a22dc) * -8 + 0x20U & 0x1f)) - 1U ^ uVar3;\n                }\n                puVar5[4] = ~((uVar3 >> 0x18 & 1) - 1);\n                puVar5[3] = uVar3 >> 0x10;\n                puVar5[2] = uVar3 >> 8;\n                puVar5[1] = uVar3;\n                iVar8 = iVar9 + 5;\n                iVar6 = iVar9;\n            }\n            else {\n                uVar7 = (uVar7 & 3) * 2 | 1;\n                iVar8 = iVar9 + 1;\n                iVar6 = iVar9;\n            }\n        }\n        uVar3 = uVar7 << ((iVar9 - iVar6) - 1U & 0x1f);\n        uVar7 = uVar3 & 7;\n        if ((uVar7 == 0) ||\n           (((*(uVar7 + 0x4a22d4) != '\\0' && (puVar5[4 - *(uVar7 + 0x4a22dc)] != 0)) &&\n            (puVar5[4 - *(uVar7 + 0x4a22dc)] != 0xff)))) goto code_r0x0042408e;\n        uVar7 = (uVar3 & 3) * 2 | 1;\n        iVar8 = iVar9 + 1;\n        iVar6 = iVar9;\n    } while( true );\n}\n",
        "token_count": 892
    },
    "00425140": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425140(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *(param_1 + 0x48);\n    if ((uVar1 != 0) && (uVar1 < 0x112)) {\n        uVar2 = param_2 - *(param_1 + 0x24);\n        uVar3 = *(param_1 + 0x28);\n        uVar4 = *(param_1 + 0x38);\n        uVar6 = uVar1;\n        if (uVar2 < uVar1) {\n            uVar6 = uVar2;\n        }\n        iVar5 = *(param_1 + 0x14);\n        if ((*(param_1 + 0x30) == 0) && (*(param_1 + 0xc) - *(param_1 + 0x2c) <= uVar6)) {\n            *(param_1 + 0x30) = *(param_1 + 0xc);\n        }\n        *(param_1 + 0x2c) = *(param_1 + 0x2c) + uVar6;\n        *(param_1 + 0x48) = uVar1 - uVar6;\n        uVar1 = *(param_1 + 0x24);\n        for (; uVar6 != 0; uVar6 = uVar6 - 1) {\n            *(uVar1 + iVar5) = *(((-(uVar1 < uVar4) & uVar3) - uVar4) + uVar1 + iVar5);\n            uVar1 = uVar1 + 1;\n        }\n        *(param_1 + 0x24) = uVar1;\n    }\n    return;\n}\n",
        "token_count": 452
    },
    "004251c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004251c0(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t in_EDX;\n    \n    do {\n        iVar1 = fcn.00424490(arg_8h);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (*(in_ECX + 0xc) <= *(in_ECX + 0x2c)) {\n            *(in_ECX + 0x30) = *(in_ECX + 0xc);\n        }\n        fcn.00425140();\n    } while (((*(in_ECX + 0x24) < in_EDX) && (*(in_ECX + 0x18) < arg_8h)) && (*(in_ECX + 0x48) < 0x112));\n    if (0x112 < *(in_ECX + 0x48)) {\n        *(in_ECX + 0x48) = 0x112;\n    }\n    return 0;\n}\n",
        "token_count": 232
    },
    "00425240": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00425240(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *in_ECX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint8_t *in_EDX;\n    uint32_t uVar6;\n    uint16_t *puVar7;\n    uint8_t *puVar8;\n    uint8_t *puVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint8_t *var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = in_ECX[4];\n    iVar10 = in_ECX[0xd];\n    uVar1 = in_ECX[8];\n    uVar2 = (1 << (in_ECX[2] & 0x1f)) - 1U & in_ECX[0xb];\n    puVar9 = in_EDX + arg_8h;\n    uVar12 = in_ECX[7];\n    var_10h = in_EDX;\n    if (uVar12 < 0x1000000) {\n        if (puVar9 <= in_EDX) {\n            return 0;\n        }\n        uVar12 = uVar12 << 8;\n        uVar1 = uVar1 << 8 | *in_EDX;\n        var_10h = in_EDX + 1;\n    }\n    uVar3 = (uVar12 >> 0xb) * *(in_ECX[4] + (in_ECX[0xd] * 0x10 + uVar2) * 2);\n    if (uVar1 < uVar3) {\n        iVar4 = in_ECX[4] + 0xe6c;\n        if ((in_ECX[0xc] != 0) || (in_ECX[0xb] != 0)) {\n            iVar10 = in_ECX[9];\n            if (iVar10 == 0) {\n                iVar10 = in_ECX[10];\n            }\n            iVar4 = iVar4 + ((*(in_ECX[5] + -1 + iVar10) >> (8 - *in_ECX & 0x1f)) +\n                            (((1 << (in_ECX[1] & 0x1f)) - 1U & in_ECX[0xb]) << (*in_ECX & 0x1f))) * 0x600;\n        }\n        if (in_ECX[0xd] < 7) {\n            uVar12 = 1;\n            do {\n                uVar12 = uVar12 * 2;\n                uVar2 = uVar3;\n                if (uVar3 < 0x1000000) {\n                    if (puVar9 <= var_10h) {\n                        return 0;\n                    }\n                    uVar2 = uVar3 << 8;\n                    uVar1 = uVar1 << 8 | *var_10h;\n                    var_10h = var_10h + 1;\n                }\n                uVar3 = (uVar2 >> 0xb) * *(uVar12 + iVar4);\n                if (uVar3 <= uVar1) {\n                    uVar1 = uVar1 - uVar3;\n                    uVar12 = uVar12 + 1;\n                    uVar3 = uVar2 - uVar3;\n                }\n                puVar8 = var_10h;\n            } while (uVar12 < 0x100);\n        }\n        else {\n            if (in_ECX[9] < in_ECX[0xe]) {\n                iVar10 = in_ECX[10];\n            }\n            else {\n                iVar10 = 0;\n            }\n            uVar2 = *((in_ECX[5] - in_ECX[0xe]) + in_ECX[9] + iVar10);\n            arg_8h = 0x100;\n            uVar12 = 1;\n            do {\n                uVar2 = uVar2 * 2;\n                uVar6 = arg_8h & uVar2;\n                if (uVar3 < 0x1000000) {\n                    if (puVar9 <= var_10h) {\n                        return 0;\n                    }\n                    uVar3 = uVar3 << 8;\n                    uVar1 = uVar1 << 8 | *var_10h;\n                    var_10h = var_10h + 1;\n                }\n                uVar5 = (uVar3 >> 0xb) * *(iVar4 + (uVar6 + uVar12 + arg_8h) * 2);\n                if (uVar1 < uVar5) {\n                    uVar12 = uVar12 * 2;\n                    uVar6 = ~uVar6;\n                    uVar3 = uVar5;\n                }\n                else {\n                    uVar3 = uVar3 - uVar5;\n                    uVar1 = uVar1 - uVar5;\n                    uVar12 = uVar12 * 2 + 1;\n                }\n                arg_8h = arg_8h & uVar6;\n                puVar8 = var_10h;\n            } while (uVar12 < 0x100);\n        }\n        var_10h = 0x1;\n        goto code_r0x0042581a;\n    }\n    uVar12 = uVar12 - uVar3;\n    uVar1 = uVar1 - uVar3;\n    puVar8 = var_10h;\n    if (uVar12 < 0x1000000) {\n        if (puVar9 <= var_10h) {\n            return 0;\n        }\n        uVar12 = uVar12 * 0x100;\n        uVar1 = uVar1 * 0x100 | *var_10h;\n        puVar8 = var_10h + 1;\n    }\n    uVar6 = (uVar12 >> 0xb) * *(iVar4 + 0x180 + iVar10 * 2);\n    if (uVar1 < uVar6) {\n        var_1ch = 0;\n        puVar7 = iVar4 + 0x664;\n        var_10h = 0x2;\n    }\n    else {\n        uVar12 = uVar12 - uVar6;\n        uVar1 = uVar1 - uVar6;\n        var_10h = 0x3;\n        if (uVar12 < 0x1000000) {\n            if (puVar9 <= puVar8) {\n                return 0;\n            }\n            uVar1 = uVar1 * 0x100 | *puVar8;\n            uVar12 = uVar12 * 0x100;\n            puVar8 = puVar8 + 1;\n        }\n        uVar3 = (uVar12 >> 0xb) * *(iVar4 + 0x198 + iVar10 * 2);\n        if (uVar1 < uVar3) {\n            if (uVar3 < 0x1000000) {\n                if (puVar9 <= puVar8) {\n                    return 0;\n                }\n                uVar3 = uVar3 * 0x100;\n                uVar1 = uVar1 << 8 | *puVar8;\n                puVar8 = puVar8 + 1;\n            }\n            uVar6 = (uVar3 >> 0xb) * *(iVar4 + ((iVar10 + 0xf) * 0x10 + uVar2) * 2);\n            if (uVar1 < uVar6) {\n                if ((uVar6 < 0x1000000) && (puVar9 <= puVar8)) {\n                    return 0;\n                }\n                return 3;\n            }\ncode_r0x004255bb:\n            uVar1 = uVar1 - uVar6;\n            uVar6 = uVar3 - uVar6;\n        }\n        else {\n            uVar12 = uVar12 - uVar3;\n            uVar1 = uVar1 - uVar3;\n            if (uVar12 < 0x1000000) {\n                if (puVar9 <= puVar8) {\n                    return 0;\n                }\n                uVar12 = uVar12 * 0x100;\n                uVar1 = uVar1 * 0x100 | *puVar8;\n                puVar8 = puVar8 + 1;\n            }\n            uVar6 = (uVar12 >> 0xb) * *(iVar4 + 0x1b0 + iVar10 * 2);\n            if (uVar6 <= uVar1) {\n                uVar3 = uVar12 - uVar6;\n                uVar1 = uVar1 - uVar6;\n                if (uVar3 < 0x1000000) {\n                    if (puVar9 <= puVar8) {\n                        return 0;\n                    }\n                    uVar3 = uVar3 * 0x100;\n                    uVar1 = uVar1 * 0x100 | *puVar8;\n                    puVar8 = puVar8 + 1;\n                }\n                uVar6 = (uVar3 >> 0xb) * *(iVar4 + 0x1c8 + iVar10 * 2);\n                if (uVar6 <= uVar1) goto code_r0x004255bb;\n            }\n        }\n        var_1ch = 0xc;\n        puVar7 = iVar4 + 0xa68;\n    }\n    if (uVar6 < 0x1000000) {\n        if (puVar9 <= puVar8) {\n            return 0;\n        }\n        uVar6 = uVar6 << 8;\n        uVar1 = uVar1 << 8 | *puVar8;\n        puVar8 = puVar8 + 1;\n    }\n    uVar3 = (uVar6 >> 0xb) * *puVar7;\n    if (uVar1 < uVar3) {\n        puVar7 = puVar7 + uVar2 * 8 + 2;\n        var_ch = 0;\n        var_18h = 8;\n    }\n    else {\n        uVar6 = uVar6 - uVar3;\n        uVar1 = uVar1 - uVar3;\n        if (uVar6 < 0x1000000) {\n            if (puVar9 <= puVar8) {\n                return 0;\n            }\n            uVar6 = uVar6 * 0x100;\n            uVar1 = uVar1 * 0x100 | *puVar8;\n            puVar8 = puVar8 + 1;\n        }\n        uVar12 = (uVar6 >> 0xb) * puVar7[1];\n        if (uVar1 < uVar12) {\n            puVar7 = puVar7 + uVar2 * 8 + 0x82;\n            var_ch = 8;\n            var_18h = 8;\n            uVar3 = uVar12;\n        }\n        else {\n            uVar3 = uVar6 - uVar12;\n            uVar1 = uVar1 - uVar12;\n            puVar7 = puVar7 + 0x102;\n            var_ch = 0x10;\n            var_18h = 0x100;\n        }\n    }\n    uVar12 = 1;\n    do {\n        uVar2 = uVar12 * 2;\n        uVar6 = uVar3;\n        if (uVar3 < 0x1000000) {\n            if (puVar9 <= puVar8) {\n                return 0;\n            }\n            uVar6 = uVar3 << 8;\n            uVar1 = uVar1 << 8 | *puVar8;\n            puVar8 = puVar8 + 1;\n        }\n        uVar3 = (uVar6 >> 0xb) * puVar7[uVar12];\n        if (uVar3 <= uVar1) {\n            uVar1 = uVar1 - uVar3;\n            uVar2 = uVar2 + 1;\n            uVar3 = uVar6 - uVar3;\n        }\n        uVar12 = uVar2;\n    } while (uVar2 < var_18h);\n    uVar2 = uVar2 + (var_ch - var_18h);\n    if (var_1ch < 4) {\n        uVar12 = 3;\n        if (uVar2 < 4) {\n            uVar12 = uVar2;\n        }\n        uVar2 = 1;\n        do {\n            uVar2 = uVar2 * 2;\n            uVar6 = uVar3;\n            if (uVar3 < 0x1000000) {\n                if (puVar9 <= puVar8) {\n                    return 0;\n                }\n                uVar6 = uVar3 << 8;\n                uVar1 = uVar1 << 8 | *puVar8;\n                puVar8 = puVar8 + 1;\n            }\n            uVar3 = (uVar6 >> 0xb) * *(uVar2 + uVar12 * 0x80 + iVar4 + 0x360);\n            if (uVar3 <= uVar1) {\n                uVar1 = uVar1 - uVar3;\n                uVar2 = uVar2 + 1;\n                uVar3 = uVar6 - uVar3;\n            }\n        } while (uVar2 < 0x40);\n        uVar2 = uVar2 - 0x40;\n        if (3 < uVar2) {\n            iVar10 = (uVar2 >> 1) - 1;\n            if (uVar2 < 0xe) {\n                iVar4 = iVar4 + (((uVar2 & 1 | 2) << (iVar10 & 0x1f)) - uVar2) * 2 + 0x55e;\n            }\n            else {\n                iVar10 = (uVar2 >> 1) - 5;\n                do {\n                    if (uVar3 < 0x1000000) {\n                        if (puVar9 <= puVar8) {\n                            return 0;\n                        }\n                        uVar3 = uVar3 << 8;\n                        uVar1 = uVar1 << 8 | *puVar8;\n                        puVar8 = puVar8 + 1;\n                    }\n                    uVar3 = uVar3 >> 1;\n                    uVar1 = uVar1 - (0xffffffffU - (uVar1 - uVar3 >> 0x1f) & uVar3);\n                    iVar10 = iVar10 + -1;\n                } while (iVar10 != 0);\n                iVar4 = iVar4 + 0x644;\n                iVar10 = 4;\n            }\n            iVar11 = 1;\n            do {\n                iVar11 = iVar11 * 2;\n                uVar12 = uVar3;\n                if (uVar3 < 0x1000000) {\n                    if (puVar9 <= puVar8) {\n                        return 0;\n                    }\n                    uVar12 = uVar3 << 8;\n                    uVar1 = uVar1 << 8 | *puVar8;\n                    puVar8 = puVar8 + 1;\n                }\n                uVar3 = (uVar12 >> 0xb) * *(iVar11 + iVar4);\n                if (uVar3 <= uVar1) {\n                    uVar1 = uVar1 - uVar3;\n                    iVar11 = iVar11 + 1;\n                    uVar3 = uVar12 - uVar3;\n                }\n                iVar10 = iVar10 + -1;\n            } while (iVar10 != 0);\n        }\n    }\ncode_r0x0042581a:\n    if (0xffffff < uVar3) {\n        return var_10h;\n    }\n    if (puVar9 <= puVar8) {\n        return 0;\n    }\n    return var_10h;\n}\n",
        "token_count": 3552
    },
    "00425830": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00425830(uchar *arg_8h, uint32_t *arg_ch, int32_t arg_10h, uint *arg_14h)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    uchar *arg_8h_00;\n    int32_t iVar3;\n    uint *in_ECX;\n    uint32_t uVar4;\n    uint32_t in_EDX;\n    uint *puVar5;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *arg_ch;\n    *arg_ch = 0;\n    fcn.00425140();\n    iVar3 = in_ECX[0x12];\n    *arg_14h = 0;\n    do {\n        if (iVar3 == 0x112) {\n            iVar3 = in_ECX[8];\n            if (iVar3 == 0) {\n                *arg_14h = 1;\n            }\n            return iVar3 != 0;\n        }\n        if (in_ECX[0x13] != 0) {\n            while ((var_4h != 0 && (in_ECX[0x16] < 5))) {\n                *(in_ECX[0x16] + 0x5c + in_ECX) = *arg_8h;\n                in_ECX[0x16] = in_ECX[0x16] + 1;\n                *arg_ch = *arg_ch + 1;\n                arg_8h = arg_8h + 1;\n                var_4h = var_4h - 1;\n            }\n            if (in_ECX[0x16] < 5) goto code_r0x00425ae8;\n            if (*(in_ECX + 0x17) != '\\0') {\n                return true;\n            }\n            in_ECX[8] = CONCAT31(CONCAT21(CONCAT11(*(in_ECX + 0x5d), *(in_ECX + 0x5e)), *(in_ECX + 0x5f)), \n                                 *(in_ECX + 0x18));\n            in_ECX[7] = 0xffffffff;\n            in_ECX[0x13] = 0;\n            in_ECX[0x16] = 0;\n        }\n        bVar1 = false;\n        if (in_EDX <= in_ECX[9]) {\n            if ((in_ECX[0x12] == 0) && (in_ECX[8] == 0)) {\n                *arg_14h = 4;\n                return false;\n            }\n            if (arg_10h == 0) {\n                *arg_14h = 2;\n                return false;\n            }\n            if (in_ECX[0x12] != 0) goto code_r0x00425aab;\n            bVar1 = true;\n        }\n        if (in_ECX[0x14] != 0) {\n            uVar2 = (0x300 << (in_ECX[1] + *in_ECX & 0x1fU)) + 0x736;\n            if (uVar2 != 0) {\n                puVar5 = in_ECX[4];\n                for (uVar4 = uVar2 >> 1; uVar4 != 0; uVar4 = uVar4 - 1) {\n                    *puVar5 = 0x4000400;\n                    puVar5 = puVar5 + 1;\n                }\n                for (uVar2 = (uVar2 & 1) != 0; uVar2 != 0; uVar2 = uVar2 - 1) {\n                    *puVar5 = 0x400;\n                    puVar5 = puVar5 + 2;\n                }\n            }\n            in_ECX[0x11] = 1;\n            in_ECX[0x10] = 1;\n            in_ECX[0xf] = 1;\n            in_ECX[0xe] = 1;\n            in_ECX[0xd] = 0;\n            in_ECX[0x14] = 0;\n        }\n        uVar2 = in_ECX[0x16];\n        if (uVar2 == 0) {\n            if ((var_4h < 0x14) || (bVar1)) {\n                iVar3 = fcn.00425240(var_4h);\n                if (iVar3 == 0) {\n                    fcn.00452a10(in_ECX + 0x17, arg_8h, var_4h);\n                    *arg_ch = *arg_ch + var_4h;\n                    in_ECX[0x16] = var_4h;\ncode_r0x00425ae8:\n                    *arg_14h = 3;\n                    return false;\n                }\n                arg_8h_00 = arg_8h;\n                if ((bVar1) && (iVar3 != 2)) goto code_r0x00425aab;\n            }\n            else {\n                arg_8h_00 = arg_8h + (var_4h - 0x14);\n            }\n            in_ECX[6] = arg_8h;\n            iVar3 = fcn.004251c0(arg_8h_00);\n            if (iVar3 != 0) {\n                return true;\n            }\n            iVar3 = in_ECX[6] - arg_8h;\n        }\n        else {\n            for (uVar4 = 0; (uVar2 < 0x14 && (uVar4 < var_4h)); uVar4 = uVar4 + 1) {\n                *(in_ECX + uVar2 + 0x5c) = arg_8h[uVar4];\n                uVar2 = uVar2 + 1;\n            }\n            in_ECX[0x16] = uVar2;\n            if ((uVar2 < 0x14) || (bVar1)) {\n                iVar3 = fcn.00425240(uVar2);\n                if (iVar3 == 0) {\n                    *arg_ch = *arg_ch + uVar4;\n                    *arg_14h = 3;\n                    return false;\n                }\n                if ((bVar1) && (iVar3 != 2)) {\ncode_r0x00425aab:\n                    *arg_14h = 2;\n                    return true;\n                }\n            }\n            in_ECX[6] = in_ECX + 0x17;\n            iVar3 = fcn.004251c0(in_ECX + 0x17);\n            if (iVar3 != 0) {\n                return true;\n            }\n            iVar3 = ((in_ECX[6] - uVar2) - in_ECX) + (uVar4 - 0x5c);\n            in_ECX[0x16] = 0;\n        }\n        var_4h = var_4h - iVar3;\n        *arg_ch = *arg_ch + iVar3;\n        arg_8h = arg_8h + iVar3;\n        iVar3 = in_ECX[0x12];\n    } while( true );\n}\n",
        "token_count": 1575
    },
    "00426570": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426570(uint CodePage)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int16_t *arg_8h;\n    int32_t iVar3;\n    uint arg_ch;\n    ushort *in_ECX;\n    uint *in_EDX;\n    int32_t *in_FS_OFFSET;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48a9b9;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    puVar2 = in_EDX;\n    if (0xf < in_EDX[5]) {\n        puVar2 = *in_EDX;\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(CodePage, 0, puVar2, 0xffffffff, 0, 0, uVar1);\n    *(in_ECX + 10) = 7;\n    *(in_ECX + 8) = 0;\n    *in_ECX = 0;\n    var_4h = 0;\n    arg_8h = fcn.0044f469(-(uVar1 * 2 >> 0x20 != 0) | uVar1 * 2);\n    if (0xf < in_EDX[5]) {\n        in_EDX = *in_EDX;\n    }\n    iVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(CodePage, 0, in_EDX, 0xffffffff, arg_8h, uVar1);\n    if (iVar3 != 0) {\n        if (*arg_8h == 0) {\n            arg_ch = 0;\n        }\n        else {\n            arg_ch = fcn.00453054(arg_8h);\n        }\n        fcn.00402667(arg_8h, arg_ch);\n    }\n    if (arg_8h != NULL) {\n        fcn.00456859(arg_8h);\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 512
    },
    "00426660": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426660(uint CodePage)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    char *arg_8h;\n    int32_t iVar4;\n    uchar *in_ECX;\n    uint *in_EDX;\n    int32_t *in_FS_OFFSET;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x48a319;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_4h = 0;\n    puVar2 = in_EDX;\n    if (7 < in_EDX[5]) {\n        puVar2 = *in_EDX;\n    }\n    uVar3 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(CodePage, 0, puVar2, 0xffffffff, 0, 0, 0, 0, uVar1);\n    *(in_ECX + 0x14) = 0xf;\n    *(in_ECX + 0x10) = 0;\n    *in_ECX = 0;\n    fcn.0040220b(0x4a23ad, 0);\n    var_4h = 0;\n    arg_8h = fcn.0044f469(uVar3);\n    if (7 < in_EDX[5]) {\n        in_EDX = *in_EDX;\n    }\n    iVar4 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(CodePage, 0, in_EDX, 0xffffffff, arg_8h, uVar3, 0, 0);\n    if (iVar4 != 0) {\n        if (*arg_8h == '\\0') {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.00453900(arg_8h);\n        }\n        fcn.0040220b(arg_8h, uVar3);\n    }\n    if (arg_8h != NULL) {\n        fcn.00456859(arg_8h);\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 526
    },
    "00426760": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00426760(uint param_1, int16_t **param_2)\n\n{\n    uint32_t uVar1;\n    uint arg_ch;\n    uint uVar2;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint *arg_8h;\n    int32_t *in_FS_OFFSET;\n    uint var_5ch;\n    uint var_58h;\n    uint32_t var_44h;\n    uint *var_40h;\n    uint var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48a290;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (0x7 < param_2[5]) {\n        param_2 = *param_2;\n    }\n    arg_ch = 0;\n    var_14h = 7;\n    var_18h = 0;\n    var_28h = var_28h & 0xffff0000;\n    var_10h = uVar1;\n    if (*param_2 != 0) {\n        arg_ch = fcn.00453054(param_2);\n    }\n    fcn.00402667(param_2, arg_ch);\n    var_4h = 0;\n    fcn.00426660(0xfde9);\n    var_4h._0_1_ = 2;\n    uVar2 = extraout_ECX;\n    if (7 < var_14h) {\n        fcn.00452a07(var_28h, param_2, arg_ch, uVar1);\n        uVar2 = extraout_ECX_00;\n    }\n    var_14h = 7;\n    var_18h = 0;\n    var_28h = var_28h & 0xffff0000;\n    fcn.004268e0(uVar2);\n    var_4h._0_1_ = 3;\n    arg_8h = &var_40h;\n    if (0xf < var_2ch) {\n        arg_8h = var_40h;\n    }\n    var_14h = 0xf;\n    var_18h = 0;\n    var_28h = var_28h & 0xffffff00;\n    if (*arg_8h == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.00453900(arg_8h);\n    }\n    fcn.0040220b(arg_8h, uVar2);\n    var_4h = CONCAT31(var_4h._1_3_, 4);\n    fcn.00426570(0xfde9);\n    if (0xf < var_14h) {\n        fcn.00452a07(var_28h);\n    }\n    if (0xf < var_2ch) {\n        fcn.00452a07(var_40h);\n    }\n    var_2ch = 0xf;\n    var_30h = 0;\n    var_40h = var_40h & 0xffffff00;\n    if (0xf < var_44h) {\n        fcn.00452a07(var_58h);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(arg_ch);\n    return;\n}\n",
        "token_count": 829
    },
    "00426a60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nushort * __fastcall fcn.00426a60(ushort *param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int16_t *arg_8h;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    int16_t *arg_10h;\n    char16_t *arg_14h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t hMem;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x48a249;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *(param_1 + 10) = 7;\n    *(param_1 + 8) = 0;\n    *param_1 = 0;\n    var_4h = 0;\n    hMem = 0;\n    (*_sym.imp.KERNEL32.dll_FormatMessageW)(0x1300, 0, param_2, 0x409, &hMem, 0, 0, uVar1);\n    if (hMem != 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(hMem);\n        arg_8h = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, iVar2 * 2 + 0x50);\n        if (arg_8h != NULL) {\n            arg_14h = L\"%s(error code:%d)\";\n            arg_10h = arg_8h;\n            uVar3 = (*_sym.imp.KERNEL32.dll_LocalSize)(arg_8h, L\"%s(error code:%d)\", hMem, param_2);\n            fcn.0041c3f9(arg_8h, uVar3, arg_10h, arg_14h);\n            if (*arg_8h == 0) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = fcn.00453054(arg_8h);\n            }\n            fcn.00402667(arg_8h, uVar3);\n            (*_sym.imp.KERNEL32.dll_LocalFree)(arg_8h);\n        }\n        (*_sym.imp.KERNEL32.dll_LocalFree)(hMem);\n    }\n    *in_FS_OFFSET = var_ch;\n    return param_1;\n}\n",
        "token_count": 553
    },
    "00426b50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __fastcall fcn.00426b50(int32_t *param_1)\n\n{\n    code **ppcVar1;\n    int32_t iVar2;\n    ushort uVar3;\n    uint *puVar4;\n    uint uVar5;\n    int32_t *piVar6;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_18h;\n    int32_t *var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x48a212;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    *param_1 = 0x4a4438;\n    param_1[4] = 0x4a2278;\n    param_1[0x1a] = vtable.std::basic_ios_wchar_t__struct_std::char_traits_wchar_t__.0;\n    var_4h = 0;\n    *(param_1 + *(*param_1 + 4)) = vtable.std::basic_istream_wchar_t__struct_std::char_traits_wchar_t__.0;\n    var_10h = 1;\n    *(*(*param_1 + 4) + -4 + param_1) = *(*param_1 + 4) + -0x18;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    iVar2 = *(*param_1 + 4);\n    *(param_1 + iVar2 + 0x30) = 0;\n    *(param_1 + iVar2 + 8) = 0;\n    *(param_1 + iVar2 + 0x10) = 0;\n    *(param_1 + iVar2 + 0x14) = 0x201;\n    *(param_1 + iVar2 + 0x18) = 6;\n    *(param_1 + iVar2 + 0x1c) = 0;\n    *(param_1 + iVar2 + 0x20) = 0;\n    *(param_1 + iVar2 + 0x24) = 0;\n    *(param_1 + iVar2 + 0x28) = 0;\n    *(param_1 + iVar2 + 0x2c) = 0;\n    fcn.0040e96e(0, 0);\n    puVar4 = fcn.0045306d(4);\n    if (puVar4 == NULL) {\n        puVar4 = NULL;\n    }\n    else {\n        uVar5 = fcn.0044ec0d(1);\n        *puVar4 = uVar5;\n    }\n    *(param_1 + iVar2 + 0x30) = puVar4;\n    ppcVar1 = param_1 + 6;\n    *(param_1 + iVar2 + 0x38) = ppcVar1;\n    *(param_1 + iVar2 + 0x3c) = 0;\n    uVar5 = fcn.0040e1fb(&var_14h);\n    var_4h = 3;\n    piVar6 = fcn.0040e157(uVar5);\n    var_4h = CONCAT31(var_4h._1_3_, 2);\n    if (var_14h != NULL) {\n        puVar4 = (**(*var_14h + 8))();\n        if (puVar4 != NULL) {\n            (***puVar4)(1);\n        }\n    }\n    uVar3 = (**(*piVar6 + 0x30))(0x20);\n    *(param_1 + iVar2 + 0x40) = uVar3;\n    if (*(param_1 + iVar2 + 0x38) == 0) {\n        fcn.0040e96e(*(param_1 + iVar2 + 0xc) | 4, 0);\n    }\n    *(param_1 + *(param_1[4] + 4) + 0x10) = vtable.std::basic_ostream_wchar_t__struct_std::char_traits_wchar_t__.0;\n    *(*(param_1[4] + 4) + 0xc + param_1) = *(param_1[4] + 4) + -8;\n    *(param_1 + *(*param_1 + 4)) = vtable.std::basic_iostream_wchar_t__struct_std::char_traits_wchar_t__.0;\n    *(*(*param_1 + 4) + -4 + param_1) = *(*param_1 + 4) + -0x20;\n    var_4h = 6;\n    *(param_1 + *(*param_1 + 4)) =\n         vtable.std::basic_stringstream_wchar_t__struct_std::char_traits_wchar_t___class_std::allocator_wchar_t__.0;\n    *(*(*param_1 + 4) + -4 + param_1) = *(*param_1 + 4) + -0x68;\n    *ppcVar1 = vtable.std::basic_streambuf_wchar_t__struct_std::char_traits_wchar_t__.0;\n    puVar4 = fcn.0045306d(4);\n    if (puVar4 == NULL) {\n        puVar4 = NULL;\n    }\n    else {\n        uVar5 = fcn.0044ec0d(1);\n        *puVar4 = uVar5;\n    }\n    param_1[9] = param_1 + 7;\n    param_1[0xd] = param_1 + 0xb;\n    param_1[0xe] = param_1 + 0xc;\n    param_1[0x11] = param_1 + 0xf;\n    param_1[0x13] = puVar4;\n    param_1[10] = param_1 + 8;\n    param_1[0x12] = param_1 + 0x10;\n    param_1[8] = 0;\n    *param_1[0xe] = 0;\n    *param_1[0x12] = 0;\n    *param_1[9] = 0;\n    *param_1[0xd] = 0;\n    *param_1[0x11] = 0;\n    *ppcVar1 = vtable.std::basic_stringbuf_wchar_t__struct_std::char_traits_wchar_t___class_std::allocator_wchar_t__.0;\n    param_1[0x14] = 0;\n    param_1[0x15] = 0;\n    *in_FS_OFFSET = var_ch;\n    return param_1;\n}\n",
        "token_count": 1495
    },
    "00426dd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426dd0(uint arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    ushort uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t *in_ECX;\n    int32_t arg_8h_00;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48a1b4;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    if (arg_10h != NULL) {\n        *in_ECX = 0x4a21b4;\n        in_ECX[2] = vtable.std::basic_ios_wchar_t__struct_std::char_traits_wchar_t__.0;\n        var_4h = 0;\n    }\n    *(in_ECX + *(*in_ECX + 4)) = vtable.std::basic_ostream_wchar_t__struct_std::char_traits_wchar_t__.0;\n    *(*(*in_ECX + 4) + -4 + in_ECX) = *(*in_ECX + 4) + -8;\n    arg_8h_00 = *(*in_ECX + 4) + in_ECX;\n    *(arg_8h_00 + 0x30) = 0;\n    *(arg_8h_00 + 8) = 0;\n    *(arg_8h_00 + 0x10) = 0;\n    *(arg_8h_00 + 0x14) = 0x201;\n    *(arg_8h_00 + 0x18) = 6;\n    *(arg_8h_00 + 0x1c) = 0;\n    *(arg_8h_00 + 0x20) = 0;\n    *(arg_8h_00 + 0x24) = 0;\n    *(arg_8h_00 + 0x28) = 0;\n    *(arg_8h_00 + 0x2c) = 0;\n    fcn.0040e96e(0, 0);\n    puVar2 = fcn.0045306d(4);\n    if (puVar2 == NULL) {\n        puVar2 = NULL;\n    }\n    else {\n        uVar3 = fcn.0044ec0d(1);\n        *puVar2 = uVar3;\n    }\n    *(arg_8h_00 + 0x38) = arg_8h;\n    *(arg_8h_00 + 0x30) = puVar2;\n    *(arg_8h_00 + 0x3c) = 0;\n    uVar3 = fcn.0040e1fb(&arg_10h);\n    var_4h = 1;\n    piVar4 = fcn.0040e157(uVar3);\n    var_4h = var_4h & 0xffffff00;\n    if (arg_10h != NULL) {\n        puVar2 = (**(*arg_10h + 8))();\n        if (puVar2 != NULL) {\n            (***puVar2)(1);\n        }\n    }\n    uVar1 = (**(*piVar4 + 0x30))(0x20);\n    *(arg_8h_00 + 0x40) = uVar1;\n    if (*(arg_8h_00 + 0x38) == 0) {\n        fcn.0040e96e(*(arg_8h_00 + 0xc) | 4, 0);\n    }\n    if (arg_ch != '\\0') {\n        fcn.0044e89b(arg_8h_00);\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 883
    },
    "004273c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004273c0(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    iVar2 = *(in_ECX + 4);\n    piVar1 = fcn.00429160(&var_4h, arg_8h);\n    if ((iVar2 != *piVar1) && (arg_10h != 0)) {\n        return 0;\n    }\n    iVar2 = fcn.00428fc0(arg_8h);\n    if (iVar2 != arg_ch) {\n        fcn.00402450(arg_ch, 0, 0xffffffff);\n    }\n    return 1;\n}\n",
        "token_count": 178
    },
    "00427420": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00427420(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 8) == 0) {\n        return 0;\n    }\n    iVar1 = **(in_ECX + 4);\n    *(in_ECX + 0xc) = iVar1;\n    iVar1 = iVar1 + 0x10;\n    if (arg_8h != iVar1) {\n        fcn.00402450(iVar1, 0, 0xffffffff);\n    }\n    iVar1 = *(in_ECX + 0xc) + 0x28;\n    if (arg_ch != iVar1) {\n        fcn.00402450(iVar1, 0, 0xffffffff);\n    }\n    return 1;\n}\n",
        "token_count": 189
    },
    "00427bf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00427bf0(uint *arg_8h)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int16_t *in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint *in_EDX;\n    uint unaff_EBX;\n    int32_t *in_FS_OFFSET;\n    char16_t *pcVar4;\n    uint *puVar5;\n    uint uVar6;\n    uint uVar7;\n    char *pcVar8;\n    uint32_t in_stack_ffffff54;\n    uint in_stack_ffffff58;\n    uint in_stack_ffffff5c;\n    uint pProxyConfig;\n    int32_t var_74h;\n    int16_t *hMem;\n    int16_t *var_6ch;\n    uint32_t var_68h;\n    uint *var_64h;\n    uint32_t var_5dh;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    int32_t var_34h;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48a569;\n    var_ch = *in_FS_OFFSET;\n    var_14h = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &fcn.00427bf0::var_ch;\n    var_68h = 0;\n    var_64h = arg_8h;\n    *arg_8h = 1;\n    puVar5 = &fcn.00427bf0::pProxyConfig;\n    iVar2 = (*_sym.imp.WINHTTP.dll_WinHttpGetIEProxyConfigForCurrentUser)(puVar5, var_14h);\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar2 == 2) {\n            pcVar8 = \"GETPROXY:No Internet Explorer proxy settings can be found.\";\n            uVar6 = 0x2000002;\n            uVar7 = 0xcb;\n            pcVar4 = L\"GetProxy.cpp\";\n            uVar3 = fcn.0042c180();\n            fcn.0042c3c0(uVar3, pcVar4, uVar7, uVar6, pcVar8, puVar5);\n        }\n        else {\n            pcVar8 = \"GETPROXY:WinHttpGetIEProxyConfigForCurrentUser failed! err=(%lu)\";\n            uVar6 = 0x2000002;\n            uVar7 = 0xcd;\n            pcVar4 = L\"GetProxy.cpp\";\n            uVar3 = fcn.0042c180(extraout_ECX_00);\n            fcn.0042c3c0(uVar3, pcVar4, uVar7, uVar6, pcVar8, iVar2);\n        }\n        goto code_r0x00427ec9;\n    }\n    var_30h = 7;\n    var_34h = 0;\n    var_44h = var_44h & 0xffff0000;\n    var_18h = 7;\n    var_1ch = 0;\n    var_2ch = var_2ch & 0xffff0000;\n    var_4h = 1;\n    if (var_74h != 0) {\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(var_74h);\n    }\n    piVar1 = hMem;\n    if (hMem != NULL) {\n        if (*hMem == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.00453054(hMem);\n        }\n        fcn.00402667(piVar1, uVar3);\n        in_stack_ffffff5c = 0x427ca8;\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(hMem);\n    }\n    piVar1 = var_6ch;\n    if (var_6ch != NULL) {\n        if (*var_6ch == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.00453054(var_6ch);\n        }\n        fcn.00402667(piVar1, uVar3);\n        in_stack_ffffff5c = 0x427cd5;\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(var_6ch);\n    }\n    if ((in_ECX == NULL) || (var_1ch == 0)) {\ncode_r0x00427d29:\n        var_5dh._0_1_ = '\\0';\n    }\n    else {\n        uVar3 = 0;\n        var_48h = 7;\n        var_4ch = 0;\n        stack0xffffffa0 = stack0xffffffa0 & 0xffff0000;\n        if (*in_ECX != 0) {\n            uVar3 = fcn.00453054(in_ECX);\n        }\n        fcn.00402667(in_ECX, uVar3);\n        var_4h = CONCAT31(var_4h._1_3_, 2);\n        var_68h = 1;\n        iVar2 = fcn.00427990();\n        var_5dh._0_1_ = '\\x01';\n        if (iVar2 == 0) goto code_r0x00427d29;\n    }\n    var_4h = 1;\n    if (((var_68h & 1) != 0) && (7 < var_48h)) {\n        fcn.00452a07(stack0xffffffa0);\n    }\n    if (var_5dh == '\\0') {\n        if (var_34h == 0) {\n            pcVar8 = \"GETPROXY:No usable static proxy.\";\n            uVar6 = 0x2000008;\n            uVar7 = 0xc3;\n            pcVar4 = L\"GetProxy.cpp\";\n            uVar3 = fcn.0042c180();\n            fcn.0042c3c0(uVar3, pcVar4, uVar7, uVar6, pcVar8, puVar5);\n            if (7 < var_18h) {\n                fcn.00452a07(var_2ch);\n            }\n            var_18h = 7;\n            var_1ch = 0;\n            var_2ch = var_2ch & 0xffff0000;\n            if (7 < var_30h) {\n                fcn.00452a07(var_44h);\n            }\n            goto code_r0x00427ec9;\n        }\n        uVar7 = 0xffffffff;\n        uVar3 = 0;\n        in_stack_ffffff54 = in_stack_ffffff54 & 0xffff0000;\n        puVar5 = &fcn.00427bf0::var_44h;\n        fcn.00402450(puVar5, 0, 0xffffffff);\n        fcn.00427560(in_EDX + 6, puVar5, uVar3, uVar7, in_stack_ffffff54, in_stack_ffffff58, in_stack_ffffff5c);\n        if (7 < in_EDX[5]) {\n            in_EDX = *in_EDX;\n        }\n        pcVar8 = \"GETPROXY:static proxy (%S:%d) from %S\";\n        uVar6 = 0x2000040;\n        uVar7 = 0xbe;\n        pcVar4 = L\"GetProxy.cpp\";\n        uVar3 = fcn.0042c180(extraout_ECX);\n        fcn.0042c3c0(uVar3, pcVar4, uVar7, uVar6, pcVar8, in_EDX);\n    }\n    else {\n        *var_64h = 0;\n    }\n    if (7 < var_18h) {\n        fcn.00452a07(var_2ch);\n    }\n    var_18h = 7;\n    var_1ch = 0;\n    var_2ch = var_2ch & 0xffff0000;\n    if (7 < var_30h) {\n        fcn.00452a07(var_44h);\n    }\ncode_r0x00427ec9:\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(unaff_EBX);\n    return;\n}\n",
        "token_count": 1919
    },
    "00427ef0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00427ef0(uint param_1, uint *param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint arg_8h;\n    uint extraout_ECX;\n    char16_t *arg_ch;\n    uint arg_10h;\n    uint arg_14h;\n    char *arg_18h;\n    uint pProxyConfig;\n    int16_t *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    _pProxyConfig = 0;\n    _var_ch = 0;\n    iVar2 = (*_sym.imp.WINHTTP.dll_WinHttpGetIEProxyConfigForCurrentUser)(&pProxyConfig);\n    pcVar1 = _sym.imp.KERNEL32.dll_GlobalFree;\n    if (iVar2 != 0) {\n        if (var_ch != 0) {\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(var_ch);\n        }\n        if (var_8h != 0) {\n            (*pcVar1)(var_8h);\n        }\n        if (var_10h != NULL) {\n            if (*var_10h == 0) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = fcn.00453054(var_10h);\n            }\n            fcn.00402667(var_10h, uVar3);\n            (*pcVar1)(var_10h);\n        }\n        *param_2 = pProxyConfig;\n        return 1;\n    }\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    arg_18h = \"GETPROXY:failed %lu getting IE auto-proxy setting\";\n    arg_14h = 0x2000004;\n    arg_10h = 0xe9;\n    arg_ch = L\"GetProxy.cpp\";\n    arg_8h = fcn.0042c180(extraout_ECX);\n    fcn.0042c3c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, uVar3);\n    return 0;\n}\n",
        "token_count": 488
    },
    "004283e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004283e0(uint *arg_8h)\n\n{\n    bool bVar1;\n    bool bVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int16_t *in_ECX;\n    uint *in_EDX;\n    uint *puVar5;\n    uint unaff_ESI;\n    int32_t *in_FS_OFFSET;\n    char16_t *arg_ch;\n    uint arg_14h;\n    char *arg_18h;\n    uint uVar6;\n    uint32_t in_stack_ffffff3c;\n    uint in_stack_ffffff40;\n    uint in_stack_ffffff44;\n    uint var_90h;\n    uint var_8ch;\n    uint32_t var_88h;\n    uint var_78h;\n    uint32_t var_74h;\n    uint32_t var_70h;\n    uint var_60h;\n    uint32_t var_5ch;\n    uint32_t var_58h;\n    int32_t var_48h;\n    uint32_t var_44h;\n    uint32_t var_40h;\n    uint var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x48a512;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    bVar2 = false;\n    *arg_8h = 1;\n    var_5ch = 7;\n    var_60h = 0;\n    var_70h = var_70h & 0xffff0000;\n    var_44h = 7;\n    var_48h = 0;\n    var_58h = var_58h & 0xffff0000;\n    var_14h = 7;\n    var_18h = 0;\n    var_28h = var_28h & 0xffff0000;\n    var_2ch = 7;\n    var_30h = 0;\n    var_40h = var_40h & 0xffff0000;\n    var_4h = 3;\n    iVar3 = fcn.00428ad0(&var_28h, &var_40h);\n    if (iVar3 == 0) goto code_r0x004285e0;\n    if ((in_ECX == NULL) || (var_48h == 0)) {\ncode_r0x004284ef:\n        bVar1 = false;\n    }\n    else {\n        uVar4 = 0;\n        var_74h = 7;\n        var_88h = var_88h & 0xffff0000;\n        if (*in_ECX != 0) {\n            uVar4 = fcn.00453054(in_ECX);\n        }\n        fcn.00402667(in_ECX, uVar4);\n        var_4h = CONCAT31(var_4h._1_3_, 4);\n        bVar2 = true;\n        iVar3 = fcn.00427990();\n        if (iVar3 == 0) goto code_r0x004284ef;\n        bVar1 = true;\n    }\n    var_4h = 3;\n    if ((bVar2) && (7 < var_74h)) {\n        fcn.00452a07(var_88h);\n    }\n    if (bVar1) {\n        *arg_8h = 0;\n    }\n    else {\n        uVar6 = 0xffffffff;\n        uVar4 = 0;\n        in_stack_ffffff3c = in_stack_ffffff3c & 0xffff0000;\n        puVar5 = &var_70h;\n        fcn.00402450(puVar5, 0, 0xffffffff);\n        iVar3 = fcn.00427560(in_EDX + 6, puVar5, uVar4, uVar6, in_stack_ffffff3c, in_stack_ffffff40, in_stack_ffffff44);\n        if (iVar3 != 0) {\n            puVar5 = in_EDX;\n            if (7 < in_EDX[5]) {\n                puVar5 = *in_EDX;\n            }\n            arg_18h = \"GETPROXY:get proxy (%S:%d) from repos %S for %S\";\n            arg_14h = 0x2000040;\n            uVar6 = 0x172;\n            arg_ch = L\"GetProxy.cpp\";\n            uVar4 = fcn.0042c180();\n            fcn.0042c3c0(uVar4, arg_ch, uVar6, arg_14h, arg_18h, puVar5);\n            if (in_EDX + 7 != &var_28h) {\n                fcn.00402450(&var_28h, 0, 0xffffffff);\n            }\n            if (in_EDX + 0xd != &var_40h) {\n                fcn.00402450(&var_40h, 0, 0xffffffff);\n            }\n        }\n    }\ncode_r0x004285e0:\n    if (7 < var_2ch) {\n        fcn.00452a07(var_40h);\n    }\n    var_2ch = 7;\n    var_30h = 0;\n    var_40h = var_40h & 0xffff0000;\n    if (7 < var_14h) {\n        fcn.00452a07(var_28h);\n    }\n    var_14h = 7;\n    var_18h = 0;\n    var_28h = var_28h & 0xffff0000;\n    if (7 < var_44h) {\n        fcn.00452a07(var_58h);\n    }\n    var_44h = 7;\n    var_48h = 0;\n    var_58h = var_58h & 0xffff0000;\n    if (7 < var_5ch) {\n        fcn.00452a07(var_70h);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(unaff_ESI);\n    return;\n}\n",
        "token_count": 1418
    },
    "00428780": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00428780(int16_t *arg_8h)\n\n{\n    bool bVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint noname_0;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint in_EDX;\n    int32_t *in_FS_OFFSET;\n    uint arg_14h;\n    uint uVar6;\n    char16_t *pcVar7;\n    uint extraout_var;\n    uint uVar8;\n    char *pcVar9;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    code **var_70h;\n    uint *var_6ch;\n    uint var_68h;\n    uint *var_64h;\n    char var_5dh;\n    int32_t var_5ch;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint var_34h;\n    uint32_t var_30h;\n    uint *var_2ch;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48a6e2;\n    var_ch = *in_FS_OFFSET;\n    var_14h = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_78h = 0;\n    var_74h = 0x4a62f8;\n    var_70h = 0x4a630c;\n    var_6ch = NULL;\n    var_68h = 0;\n    var_7ch = in_EDX;\n    var_6ch = fcn.0042aae0(var_14h);\n    var_4h = 0;\n    uVar2 = 0;\n    var_18h = 7;\n    var_1ch = 0;\n    var_2ch = var_2ch._2_2_ << 0x10;\n    var_64h = var_6ch;\n    if (str.kv.repos[0] != L'\\0') {\n        uVar2 = fcn.00453054(L\"kv.repos\");\n    }\n    fcn.00402667(L\"kv.repos\", uVar2);\n    var_4h = CONCAT31(var_4h._1_3_, 1);\n    if (arg_8h != NULL) {\n        uVar2 = fcn.00453054(0x4a078c);\n        fcn.0040977e(noname_0, 0x4a078c, uVar2);\n        if (*arg_8h == 0) {\n            uVar3 = 0;\n            uVar2 = extraout_ECX;\n        }\n        else {\n            uVar3 = fcn.00453054(arg_8h);\n            uVar2 = extraout_ECX_00;\n        }\n        fcn.0040977e(uVar2, arg_8h, uVar3);\n    }\n    puVar5 = &var_2ch;\n    if (7 < var_18h) {\n        puVar5 = var_2ch;\n    }\n    iVar4 = fcn.00429210(puVar5);\n    if (iVar4 == 0) {\n        puVar5 = &var_2ch;\n        if (7 < var_18h) {\n            puVar5 = var_2ch;\n        }\n        pcVar9 = \"SETPROXY: no repository found at %S\";\n        uVar8 = 0x2000008;\n        uVar3 = 0x1c7;\n        pcVar7 = L\"GetProxy.cpp\";\n        uVar2 = fcn.0042c180(extraout_ECX_01);\n        fcn.0042c3c0(uVar2, pcVar7, uVar3, uVar8, pcVar9, puVar5);\n    }\n    uVar2 = 0;\n    var_48h = 7;\n    var_4ch = 0;\n    var_5ch = var_5ch._2_2_ << 0x10;\n    if (str.ProxyServerList[0] != L'\\0') {\n        uVar2 = fcn.00453054(L\"ProxyServerList\");\n    }\n    fcn.00402667(L\"ProxyServerList\", uVar2);\n    puVar5 = &var_5ch;\n    var_4h = CONCAT31(var_4h._1_3_, 2);\n    bVar1 = false;\n    var_78h = 1;\n    iVar4 = (**var_70h)();\n    uVar2 = extraout_var;\n    if (iVar4 != 0) {\n        uVar3 = 0;\n        var_30h = 7;\n        var_34h = 0;\n        var_44h = var_44h & 0xffff0000;\n        if (str.ProxyBypassList[0] != L'\\0') {\n            uVar3 = fcn.00453054(L\"ProxyBypassList\");\n        }\n        fcn.00402667(L\"ProxyBypassList\", uVar3);\n        var_4h = 3;\n        bVar1 = true;\n        var_78h = 3;\n        iVar4 = (**var_70h)(&var_44h, var_7ch, 0);\n        var_5dh = '\\0';\n        if (iVar4 != 0) goto code_r0x00428967;\n    }\n    var_5dh = '\\x01';\ncode_r0x00428967:\n    if (bVar1) {\n        if (7 < var_30h) {\n            fcn.00452a07(var_44h);\n        }\n        var_30h = 7;\n        var_34h = 0;\n        var_44h = var_44h & 0xffff0000;\n    }\n    var_4h = 1;\n    if (7 < var_48h) {\n        fcn.00452a07(var_5ch);\n    }\n    if (var_5dh == '\\0') {\n        puVar5 = &var_2ch;\n        if (7 < var_18h) {\n            puVar5 = var_2ch;\n        }\n        iVar4 = fcn.004292f0(puVar5);\n        if (iVar4 == 0) {\n            puVar5 = &var_2ch;\n            if (7 < var_18h) {\n                puVar5 = var_2ch;\n            }\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)(puVar5);\n            pcVar9 = \"SETPROXY:failed %lu save to repository %S\";\n            arg_14h = 0x2000002;\n            uVar6 = 0x1d3;\n            pcVar7 = L\"GetProxy.cpp\";\n            uVar8 = fcn.0042c180();\n            fcn.0042c3c0(uVar8, pcVar7, uVar6, arg_14h, pcVar9, uVar3);\n        }\n    }\n    else {\n        pcVar9 = \"SETPROXY:cannot set proxy in repository\";\n        uVar6 = 0x2000002;\n        uVar8 = 0x1cd;\n        pcVar7 = L\"GetProxy.cpp\";\n        uVar3 = fcn.0042c180();\n        fcn.0042c3c0(uVar3, pcVar7, uVar8, uVar6, pcVar9, puVar5);\n    }\n    if (7 < var_18h) {\n        fcn.00452a07(var_2ch);\n    }\n    var_4h = 0xffffffff;\n    var_2ch = var_2ch & 0xffff0000;\n    var_18h = 7;\n    var_1ch = 0;\n    fcn.00429d10(&var_7ch, *var_6ch, var_6ch);\n    fcn.00452a07(var_6ch);\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(uVar2);\n    return;\n}\n",
        "token_count": 1891
    },
    "00428ad0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00428ad0(uint *arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *in_ECX;\n    uint extraout_ECX;\n    uint *in_EDX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t *in_FS_OFFSET;\n    char16_t *pcVar6;\n    uint uVar7;\n    uint uVar8;\n    char *pcVar9;\n    char16_t *arg_8h_00;\n    uint var_b0h;\n    uint *var_ach;\n    uint var_a8h;\n    int32_t var_a4h;\n    uint *var_a0h;\n    uint var_9ch;\n    uint *var_98h;\n    uint32_t var_94h;\n    char var_8dh;\n    uint32_t var_8ch;\n    uint var_7ch;\n    uint32_t var_78h;\n    uint32_t var_74h;\n    uint var_64h;\n    uint32_t var_60h;\n    uint32_t var_5ch;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint *var_44h;\n    uint var_34h;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48a675;\n    var_ch = *in_FS_OFFSET;\n    var_14h = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_94h = 0;\n    var_ach = arg_ch;\n    var_a8h = 0x4a62f8;\n    var_a4h = 0x4a630c;\n    var_a0h = NULL;\n    var_9ch = 0;\n    var_a0h = fcn.0042aae0(var_14h);\n    var_4h = 0;\n    uVar1 = 0;\n    var_30h = 7;\n    var_34h = 0;\n    var_44h = var_44h._2_2_ << 0x10;\n    var_98h = var_a0h;\n    if (str.kv.repos[0] != L'\\0') {\n        uVar1 = fcn.00453054(L\"kv.repos\");\n    }\n    arg_8h_00 = L\"kv.repos\";\n    fcn.00402667(L\"kv.repos\", uVar1);\n    var_4h._0_1_ = 1;\n    puVar3 = &var_44h;\n    if (7 < var_30h) {\n        puVar3 = var_44h;\n    }\n    iVar2 = fcn.00429210(puVar3);\n    if (iVar2 == 0) {\n        puVar3 = &var_44h;\n        if (7 < var_30h) {\n            puVar3 = var_44h;\n        }\n        pcVar9 = \"GetProxy:repository %S not found\";\n        uVar8 = 0x2000008;\n        uVar7 = 0x1ea;\n        pcVar6 = L\"GetProxy.cpp\";\n        uVar1 = fcn.0042c180(extraout_ECX);\n        fcn.0042c3c0(uVar1, pcVar6, uVar7, uVar8, pcVar9, puVar3);\n        goto code_r0x00428f45;\n    }\n    uVar1 = 0;\n    var_60h = 7;\n    var_64h = 0;\n    var_74h = var_74h & 0xffff0000;\n    var_48h = 7;\n    var_4ch = 0;\n    var_5ch = var_5ch & 0xffff0000;\n    var_4h._0_1_ = 3;\n    var_78h = 7;\n    var_7ch = 0;\n    var_8ch = var_8ch & 0xffff0000;\n    if (str.ProxyServerList[0] != L'\\0') {\n        uVar1 = fcn.00453054(L\"ProxyServerList\");\n    }\n    fcn.00402667(L\"ProxyServerList\", uVar1);\n    var_4h = CONCAT31(var_4h._1_3_, 4);\n    uVar4 = 1;\n    var_94h = 1;\n    iVar2 = (**(var_a4h + 4))(&var_8ch, &var_74h);\n    if (iVar2 == 0) {\ncode_r0x00428ce5:\n        var_8dh = '\\x01';\n    }\n    else {\n        uVar1 = 0;\n        var_18h = 7;\n        var_1ch = 0;\n        var_2ch = var_2ch & 0xffff0000;\n        if (str.ProxyBypassList[0] != L'\\0') {\n            uVar1 = fcn.00453054(L\"ProxyBypassList\");\n        }\n        fcn.00402667(L\"ProxyBypassList\", uVar1);\n        var_4h = 5;\n        uVar4 = 3;\n        var_94h = 3;\n        iVar2 = (**(var_a4h + 4))(&var_2ch, &var_5ch);\n        var_8dh = '\\0';\n        if (iVar2 == 0) goto code_r0x00428ce5;\n    }\n    if ((uVar4 & 2) != 0) {\n        uVar4 = uVar4 & 0xfffffffd;\n        if (7 < var_18h) {\n            fcn.00452a07(var_2ch);\n        }\n        var_18h = 7;\n        var_1ch = 0;\n        var_2ch = var_2ch & 0xffff0000;\n    }\n    var_4h._0_1_ = 3;\n    var_4h._1_3_ = 0;\n    if (((uVar4 & 1) != 0) && (uVar4 = uVar4 & 0xfffffffe,  7 < var_78h)) {\n        fcn.00452a07(var_8ch);\n    }\n    if (var_8dh == '\\0') {\n        if (in_ECX != &var_74h) {\n            fcn.00402450(&var_74h, 0, 0xffffffff);\n        }\n        if (in_EDX != &var_5ch) {\n            fcn.00402450(&var_5ch, 0, 0xffffffff);\n        }\n        uVar1 = 0;\n        var_78h = 7;\n        var_7ch = 0;\n        var_8ch = var_8ch & 0xffff0000;\n        if (str.ProxyUsername[0] != L'\\0') {\n            uVar1 = fcn.00453054(L\"ProxyUsername\");\n        }\n        fcn.00402667(L\"ProxyUsername\", uVar1);\n        var_4h = CONCAT31(var_4h._1_3_, 6);\n        uVar5 = uVar4 | 4;\n        var_94h = uVar5;\n        iVar2 = (**(var_a4h + 4))(&var_8ch, &var_74h);\n        if (iVar2 == 0) {\ncode_r0x00428e67:\n            var_8dh = '\\0';\n        }\n        else {\n            uVar1 = 0;\n            var_18h = 7;\n            var_1ch = 0;\n            var_2ch = var_2ch & 0xffff0000;\n            if (str.ProxyPassword[0] != L'\\0') {\n                uVar1 = fcn.00453054(L\"ProxyPassword\");\n            }\n            fcn.00402667(L\"ProxyPassword\", uVar1);\n            var_4h = 7;\n            uVar5 = uVar4 | 0xc;\n            var_94h = uVar5;\n            iVar2 = (**(var_a4h + 4))(&var_2ch, &var_5ch);\n            var_8dh = '\\x01';\n            if (iVar2 == 0) goto code_r0x00428e67;\n        }\n        if ((uVar5 & 8) != 0) {\n            uVar5 = uVar5 & 0xfffffff7;\n            if (7 < var_18h) {\n                fcn.00452a07(var_2ch);\n            }\n            var_18h = 7;\n            var_1ch = 0;\n            var_2ch = var_2ch & 0xffff0000;\n        }\n        var_4h._0_1_ = 3;\n        var_4h._1_3_ = 0;\n        if (((uVar5 & 4) != 0) && (7 < var_78h)) {\n            fcn.00452a07(var_8ch);\n        }\n        if (var_8dh != '\\0') {\n            if (arg_8h != &var_74h) {\n                fcn.00402450(&var_74h, 0, 0xffffffff);\n            }\n            if (var_ach != &var_5ch) {\n                fcn.00402450(&var_5ch, 0, 0xffffffff);\n            }\n        }\n    }\n    else {\n        pcVar9 = \"GetProxy:cannot get proxy in repository\";\n        uVar8 = 0x2000002;\n        uVar7 = 0x1f2;\n        pcVar6 = L\"GetProxy.cpp\";\n        uVar1 = fcn.0042c180();\n        fcn.0042c3c0(uVar1, pcVar6, uVar7, uVar8, pcVar9, puVar3);\n    }\n    if (7 < var_48h) {\n        fcn.00452a07(var_5ch);\n    }\n    var_48h = 7;\n    var_4ch = 0;\n    var_5ch = var_5ch & 0xffff0000;\n    if (7 < var_60h) {\n        fcn.00452a07(var_74h);\n    }\n    var_60h = 7;\n    var_64h = 0;\n    var_74h = var_74h & 0xffff0000;\ncode_r0x00428f45:\n    if (7 < var_30h) {\n        fcn.00452a07(var_44h);\n    }\n    var_4h = 0xffffffff;\n    var_44h = var_44h & 0xffff0000;\n    var_30h = 7;\n    var_34h = 0;\n    fcn.00429d10(&var_ach, *var_a0h, var_a0h);\n    fcn.00452a07(var_a0h);\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(arg_8h_00);\n    return;\n}\n",
        "token_count": 2567
    },
    "00429530": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00429530(uint16_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    uint *puVar2;\n    uint16_t *puVar3;\n    uint *in_ECX;\n    uint32_t uVar4;\n    uint16_t *puVar5;\n    uint16_t *puVar6;\n    \n    if (arg_10h == 0) {\n        uVar4 = in_ECX[4];\n        if (arg_ch < in_ECX[4]) {\n            uVar4 = arg_ch;\n        }\n        return uVar4;\n    }\n    if (in_ECX[4] < arg_10h) {\n        return 0xffffffff;\n    }\n    uVar4 = in_ECX[4] - arg_10h;\n    if (arg_ch < uVar4) {\n        uVar4 = arg_ch;\n    }\n    puVar2 = in_ECX;\n    if (7 < in_ECX[5]) {\n        puVar2 = *in_ECX;\n    }\n    puVar6 = puVar2 + uVar4 * 2;\n    uVar1 = *arg_8h;\n    do {\n        if (*puVar6 == uVar1) {\n            puVar3 = puVar6;\n            puVar5 = arg_8h;\n            uVar4 = arg_10h;\n            if (arg_10h == 0) {\ncode_r0x004295a2:\n                if (7 < in_ECX[5]) {\n                    in_ECX = *in_ECX;\n                }\n                return puVar6 - in_ECX >> 1;\n            }\n            while (*puVar3 == *puVar5) {\n                puVar3 = puVar3 + 1;\n                puVar5 = puVar5 + 1;\n                uVar4 = uVar4 - 1;\n                if (uVar4 == 0) goto code_r0x004295a2;\n            }\n            if ((-(*puVar3 < *puVar5) & 0xfffffffe) == 0xffffffff) goto code_r0x004295a2;\n        }\n        puVar3 = fcn.00402445();\n        if (puVar6 == puVar3) {\n            return 0xffffffff;\n        }\n        puVar6 = puVar6 + -1;\n    } while( true );\n}\n",
        "token_count": 533
    },
    "004295f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004295f0(int16_t *arg_8h)\n\n{\n    uint arg_ch;\n    int32_t in_ECX;\n    \n    if (*arg_8h == 0) {\n        arg_ch = 0;\n    }\n    else {\n        arg_ch = fcn.00453054(arg_8h);\n    }\n    fcn.00402667(arg_8h, arg_ch);\n    fcn.0042a3c0(in_ECX + 0x1c);\n    return 1;\n}\n",
        "token_count": 117
    },
    "00429630": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429630(uint16_t *arg_8h)\n\n{\n    int16_t *piVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t in_ECX;\n    int16_t *piVar6;\n    int16_t *piVar7;\n    int16_t **ppiVar8;\n    uint *arg_8h_00;\n    uint var_1ch;\n    uint var_10h;\n    int32_t var_4h;\n    \n    puVar5 = &var_10h;\n    arg_8h_00 = &var_1ch;\n    var_4h = in_ECX;\n    fcn.0042a760(arg_8h_00);\n    piVar2 = fcn.0042aa60(arg_8h_00);\n    puVar3 = *piVar2;\n    if (puVar3 != NULL) {\n        puVar3 = *puVar3;\n    }\n    ppiVar8 = *(puVar3[1] + (puVar3[2] - 1 & piVar2[2]) * 4);\n    if (*arg_8h == 0) {\n        piVar7 = NULL;\n    }\n    else {\n        piVar7 = fcn.00453054(arg_8h);\n    }\n    piVar1 = ppiVar8[4];\n    if (0x7 < ppiVar8[5]) {\n        ppiVar8 = *ppiVar8;\n    }\n    piVar6 = piVar7;\n    if (piVar1 < piVar7) {\n        piVar6 = piVar1;\n    }\n    do {\n        if (piVar6 == NULL) {\n            iVar4 = 0;\ncode_r0x004296a6:\n            if (((iVar4 == 0) && (piVar7 <= piVar1)) && (piVar1 == piVar7)) {\n                if (*(in_ECX + 0x44) != 0) {\n                    puVar3 = *(*(in_ECX + 0x38) + (*(in_ECX + 0x3c) - 1U & *(in_ECX + 0x40) + *(in_ECX + 0x44) + -1) * 4\n                              );\n                    if (7 < puVar3[5]) {\n                        fcn.00452a07(*puVar3, arg_8h_00, puVar5);\n                    }\n                    puVar3[5] = 7;\n                    puVar3[4] = 0;\n                    *puVar3 = 0;\n                    piVar2 = in_ECX + 0x44;\n                    *piVar2 = *piVar2 + -1;\n                    if (*piVar2 == 0) {\n                        *(in_ECX + 0x40) = 0;\n                    }\n                }\n                if (*(var_4h + 0x44) != 0) {\n                    puVar5 = &var_10h;\n                    fcn.0042a760(puVar5);\n                    piVar2 = fcn.0042aa60(puVar5);\n                    puVar5 = *piVar2;\n                    if (puVar5 != NULL) {\n                        puVar5 = *puVar5;\n                    }\n                    iVar4 = *(puVar5[1] + (puVar5[2] - 1 & piVar2[2]) * 4);\n                    if (var_4h + 0x1c != iVar4) {\n                        fcn.00402450(iVar4, 0, 0xffffffff);\n                    }\n                }\n            }\n            return;\n        }\n        if (*ppiVar8 != *arg_8h) {\n            iVar4 = (-(*ppiVar8 < *arg_8h) & 0xfffffffe) + 1;\n            goto code_r0x004296a6;\n        }\n        ppiVar8 = ppiVar8 + 2;\n        arg_8h = arg_8h + 1;\n        piVar6 = piVar6 + -1;\n    } while( true );\n}\n",
        "token_count": 916
    },
    "00429af0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00429af0(uint32_t arg_8h)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    uint arg_1ch;\n    uint arg_8h_00;\n    uint extraout_ECX;\n    char16_t *arg_ch;\n    uint arg_10h;\n    uint arg_14h;\n    char *arg_18h;\n    \n    if (5000 < arg_8h) {\n        iVar1 = fcn.0042a180();\n        if (iVar1 == 1) {\n            return 1;\n        }\n        arg_1ch = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        arg_18h = \"DoWrite() DoOutputToFile() failed, Error=%lu\";\n        arg_14h = 0x2000002;\n        arg_10h = 0x1d;\n        arg_ch = L\"c:\\\\ci-jenkins\\\\workspace\\\\irobot\\\\irobot_1.62\\\\irobot_1.62\\\\src\\\\common\\\\XmlReport.h\";\n        arg_8h_00 = fcn.0042c180(extraout_ECX);\n        in_EAX = fcn.0042c3c0(arg_8h_00, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 310
    },
    "00429d10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t ** __cdecl fcn.00429d10(int32_t **arg_8h, int32_t **arg_ch, int32_t **arg_10h)\n\n{\n    char cVar1;\n    int32_t **ppiVar2;\n    int32_t **ppiVar3;\n    int32_t **ppiVar4;\n    int32_t **in_ECX;\n    uint var_4h;\n    \n    ppiVar2 = *in_ECX;\n    if ((arg_ch == *ppiVar2) && (arg_10h == ppiVar2)) {\n        fcn.0042a8f0(ppiVar2[1]);\n        (*in_ECX)[1] = *in_ECX;\n        **in_ECX = *in_ECX;\n        (*in_ECX)[2] = *in_ECX;\n        in_ECX[1] = NULL;\n        *arg_8h = **in_ECX;\n        return arg_8h;\n    }\n    if (arg_ch != arg_10h) {\n        do {\n            ppiVar2 = arg_ch;\n            if (*(arg_ch + 0xd) == '\\0') {\n                ppiVar3 = arg_ch[2];\n                if (*(ppiVar3 + 0xd) == '\\0') {\n                    cVar1 = *(*ppiVar3 + 0xd);\n                    arg_ch = ppiVar3;\n                    ppiVar3 = *ppiVar3;\n                    while (cVar1 == '\\0') {\n                        cVar1 = *(*ppiVar3 + 0xd);\n                        arg_ch = ppiVar3;\n                        ppiVar3 = *ppiVar3;\n                    }\n                }\n                else {\n                    cVar1 = *(arg_ch[1] + 0xd);\n                    ppiVar4 = arg_ch[1];\n                    ppiVar3 = arg_ch;\n                    while ((arg_ch = ppiVar4,  cVar1 == '\\0' && (ppiVar3 == arg_ch[2]))) {\n                        cVar1 = *(arg_ch[1] + 0xd);\n                        ppiVar4 = arg_ch[1];\n                        ppiVar3 = arg_ch;\n                    }\n                }\n            }\n            fcn.0042a480(&var_4h, ppiVar2);\n        } while (arg_ch != arg_10h);\n    }\n    *arg_8h = arg_ch;\n    return arg_8h;\n}\n",
        "token_count": 539
    },
    "00429dd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00429dd0(int16_t **arg_8h)\n\n{\n    int16_t *piVar1;\n    int16_t *piVar2;\n    uint32_t uVar3;\n    int16_t **ppiVar4;\n    int32_t *in_ECX;\n    int16_t **ppiVar5;\n    int16_t *piVar6;\n    uint *puVar7;\n    uint *puVar8;\n    uint *var_8h;\n    uint var_4h;\n    \n    var_8h = *in_ECX;\n    if (*(var_8h[1] + 0xd) == '\\0') {\n        piVar1 = arg_8h[4];\n        puVar7 = var_8h[1];\n        do {\n            ppiVar4 = puVar7 + 4;\n            ppiVar5 = arg_8h;\n            if (0x7 < arg_8h[5]) {\n                ppiVar5 = *arg_8h;\n            }\n            piVar2 = puVar7[8];\n            if (7 < puVar7[9]) {\n                ppiVar4 = *ppiVar4;\n            }\n            piVar6 = piVar1;\n            if (piVar2 < piVar1) {\n                piVar6 = piVar2;\n            }\n            for (; piVar6 != NULL; piVar6 = piVar6 + -1) {\n                if (*ppiVar4 != *ppiVar5) {\n                    uVar3 = (-(*ppiVar4 < *ppiVar5) & 0xfffffffe) + 1;\n                    goto code_r0x00429e13;\n                }\n                ppiVar4 = ppiVar4 + 2;\n                ppiVar5 = ppiVar5 + 2;\n            }\n            uVar3 = 0;\ncode_r0x00429e13:\n            if (uVar3 == 0) {\n                if (piVar1 <= piVar2) {\n                    uVar3 = piVar2 != piVar1;\n                    goto code_r0x00429e25;\n                }\ncode_r0x00429e4f:\n                puVar8 = puVar7[2];\n            }\n            else {\ncode_r0x00429e25:\n                if (uVar3 < 0) goto code_r0x00429e4f;\n                puVar8 = *puVar7;\n                var_8h = puVar7;\n            }\n            puVar7 = puVar8;\n        } while (*(puVar8 + 0xd) == '\\0');\n    }\n    return var_8h;\n}\n",
        "token_count": 575
    },
    "00429e70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t ** __fastcall fcn.00429e70(int32_t **param_1)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    int32_t **ppiVar4;\n    \n    piVar2 = *param_1;\n    if (*(piVar2 + 0xd) == '\\0') {\n        ppiVar3 = piVar2[2];\n        if (*(ppiVar3 + 0xd) == '\\0') {\n            cVar1 = *(*ppiVar3 + 0xd);\n            ppiVar4 = *ppiVar3;\n            while (cVar1 == '\\0') {\n                cVar1 = *(*ppiVar4 + 0xd);\n                ppiVar3 = ppiVar4;\n                ppiVar4 = *ppiVar4;\n            }\n            *param_1 = ppiVar3;\n            return param_1;\n        }\n        piVar2 = piVar2[1];\n        cVar1 = *(piVar2 + 0xd);\n        while ((cVar1 == '\\0' && (*param_1 == piVar2[2]))) {\n            *param_1 = piVar2;\n            piVar2 = piVar2[1];\n            cVar1 = *(piVar2 + 0xd);\n        }\n        *param_1 = piVar2;\n    }\n    return param_1;\n}\n",
        "token_count": 308
    },
    "0042a180": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042a180(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    int32_t iVar7;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint extraout_ECX_02;\n    uint extraout_ECX_03;\n    int32_t *in_FS_OFFSET;\n    char16_t *pcVar8;\n    uint uVar9;\n    uint uVar10;\n    char *pcVar11;\n    uint in_stack_ffffffcc;\n    int32_t var_2ch;\n    uint *var_28h;\n    uint var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48a408;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_2ch = param_1;\n    if (*(param_1 + 0x38) == 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(var_10h);\n        pcVar11 = \"DoOutputToFile() invalid m_pBufWriter, Error=%lu\";\n        uVar10 = 0x2000002;\n        uVar9 = 0x99;\n        pcVar8 = L\"c:\\\\ci-jenkins\\\\workspace\\\\irobot\\\\irobot_1.62\\\\irobot_1.62\\\\src\\\\common\\\\XmlReport.h\";\n        uVar3 = fcn.0042c180(extraout_ECX);\n        fcn.0042c3c0(uVar3, pcVar8, uVar9, uVar10, pcVar11, uVar2);\n        goto code_r0x0042a359;\n    }\n    var_14h = 7;\n    var_18h = 0;\n    var_28h = var_28h & 0xffff0000;\n    var_4h = 0;\n    if (param_1 + 0x18 == &var_28h) {\ncode_r0x0042a236:\n        puVar6 = &var_28h;\n    }\n    else {\n        fcn.00417f4d(&var_28h);\n        uVar2 = *(param_1 + 0x28);\n        *(param_1 + 0x28) = var_18h;\n        uVar1 = *(param_1 + 0x2c);\n        *(param_1 + 0x2c) = var_14h;\n        puVar6 = var_28h;\n        var_18h = uVar2;\n        var_14h = uVar1;\n        if (uVar1 < 8) goto code_r0x0042a236;\n    }\n    iVar4 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0xfde9, 0, puVar6, var_18h, 0, 0, 0, 0);\n    if (iVar4 < 1) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        pcVar11 = \"DoOutputToFile() m_Writer.GetUtf8String() failed, Error=%lu\";\n        uVar9 = 0xd1;\n        uVar2 = extraout_ECX_03;\ncode_r0x0042a32f:\n        uVar10 = 0x2000002;\n        pcVar8 = L\"c:\\\\ci-jenkins\\\\workspace\\\\irobot\\\\irobot_1.62\\\\irobot_1.62\\\\src\\\\common\\\\XmlReport.h\";\n        uVar2 = fcn.0042c180(uVar2);\n        fcn.0042c3c0(uVar2, pcVar8, uVar9, uVar10, pcVar11, uVar3);\n    }\n    else {\n        iVar5 = fcn.0044f469(iVar4);\n        if (iVar5 == 0) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            pcVar11 = \"DoOutputToFile() invalid pBuffer, Error=%lu\";\n            uVar9 = 0xcc;\n            uVar2 = extraout_ECX_02;\n            goto code_r0x0042a32f;\n        }\n        puVar6 = &var_28h;\n        if (7 < var_14h) {\n            puVar6 = var_28h;\n        }\n        iVar7 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0xfde9, 0, puVar6, var_18h, iVar5, iVar4, 0, 0);\n        if (iVar7 < 1) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            pcVar11 = \"DoOutputToFile() m_Writer.GetUtf8String() failed, Error=%lu\";\n            uVar9 = 0xbc;\n            uVar2 = extraout_ECX_01;\ncode_r0x0042a2d6:\n            uVar10 = 0x2000002;\n            pcVar8 = L\"c:\\\\ci-jenkins\\\\workspace\\\\irobot\\\\irobot_1.62\\\\irobot_1.62\\\\src\\\\common\\\\XmlReport.h\";\n            uVar2 = fcn.0042c180(uVar2);\n            fcn.0042c3c0(uVar2, pcVar8, uVar9, uVar10, pcVar11, uVar3);\n        }\n        else {\n            iVar4 = (**(**(var_2ch + 0x38) + 4))(iVar5, iVar4, &var_2ch);\n            if (iVar4 == 0) {\n                uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                pcVar11 = \"DoOutputToFile() m_pBufWriter->Write() failed, Error=%lu\";\n                uVar9 = 0xb7;\n                uVar2 = extraout_ECX_00;\n                goto code_r0x0042a2d6;\n            }\n        }\n        fcn.00456859(iVar5);\n    }\n    if (7 < var_14h) {\n        fcn.00452a07(var_28h);\n    }\ncode_r0x0042a359:\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(in_stack_ffffffcc);\n    return;\n}\n",
        "token_count": 1489
    },
    "0042a3c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a3c0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    ushort *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48a811;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    uVar3 = *(in_ECX + 0x10) + 1;\n    if (*(in_ECX + 8) < uVar3 || *(in_ECX + 8) == uVar3) {\n        fcn.0042a780();\n    }\n    uVar3 = *(in_ECX + 8) - 1;\n    *(in_ECX + 0xc) = *(in_ECX + 0xc) & uVar3;\n    iVar1 = (uVar3 & *(in_ECX + 0x10) + *(in_ECX + 0xc)) * 4;\n    if (*(iVar1 + *(in_ECX + 4)) == 0) {\n        iVar4 = fcn.0045306d(0x18);\n        if (iVar4 == 0) {\n            fcn.0044e7ba();\n            iVar4 = extraout_ECX;\n        }\n        *(iVar1 + *(in_ECX + 4)) = iVar4;\n    }\n    puVar2 = *(iVar1 + *(in_ECX + 4));\n    var_4h = 0;\n    if (puVar2 != NULL) {\n        *(puVar2 + 10) = 7;\n        *(puVar2 + 8) = 0;\n        *puVar2 = 0;\n        fcn.00402450(arg_8h, 0, 0xffffffff);\n    }\n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 1;\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 501
    },
    "0042a480": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042a546)\n// WARNING: Removing unreachable block (ram,0x0042a556)\n// WARNING: Removing unreachable block (ram,0x0042a55f)\n// WARNING: Removing unreachable block (ram,0x0042a562)\n// WARNING: Removing unreachable block (ram,0x0042a552)\n// WARNING: Removing unreachable block (ram,0x0042a570)\n// WARNING: Removing unreachable block (ram,0x0042a57f)\n// WARNING: Removing unreachable block (ram,0x0042a58a)\n// WARNING: Removing unreachable block (ram,0x0042a586)\n// WARNING: Removing unreachable block (ram,0x0042a57a)\n// WARNING: Removing unreachable block (ram,0x0042a58d)\n\nvoid __cdecl fcn.0042a480(int32_t **arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t **ppiVar4;\n    int32_t **ppiVar5;\n    uint uVar6;\n    int32_t *in_ECX;\n    int32_t **ppiVar7;\n    int32_t **ppiVar8;\n    int32_t **ppiVar9;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(arg_ch + 0xd) != '\\0') {\n        fcn.0044e819(\"invalid map/set<T> iterator\");\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    fcn.00429e70();\n    ppiVar9 = *arg_ch;\n    if (*(ppiVar9 + 0xd) == '\\0') {\n        if (*(arg_ch[2] + 0xd) == '\\0') {\n            ppiVar9 = arg_ch[2];\n        }\n    }\n    else {\n        ppiVar9 = arg_ch[2];\n    }\n    ppiVar8 = arg_ch[1];\n    if (*(ppiVar9 + 0xd) == '\\0') {\n        ppiVar9[1] = ppiVar8;\n    }\n    if (*(*in_ECX + 4) == arg_ch) {\n        *(*in_ECX + 4) = ppiVar9;\n    }\n    else if (*ppiVar8 == arg_ch) {\n        *ppiVar8 = ppiVar9;\n    }\n    else {\n        ppiVar8[2] = ppiVar9;\n    }\n    ppiVar5 = *in_ECX;\n    if (*ppiVar5 == arg_ch) {\n        ppiVar7 = ppiVar8;\n        if (*(ppiVar9 + 0xd) == '\\0') {\n            cVar1 = *(*ppiVar9 + 0xd);\n            ppiVar5 = *ppiVar9;\n            ppiVar7 = ppiVar9;\n            while (ppiVar4 = ppiVar5,  cVar1 == '\\0') {\n                ppiVar5 = *ppiVar4;\n                cVar1 = *(ppiVar5 + 0xd);\n                ppiVar7 = ppiVar4;\n            }\n            ppiVar5 = *in_ECX;\n        }\n        *ppiVar5 = ppiVar7;\n    }\n    iVar2 = *in_ECX;\n    if (*(iVar2 + 8) == arg_ch) {\n        if (*(ppiVar9 + 0xd) == '\\0') {\n            uVar6 = fcn.0042aa40();\n            *(iVar2 + 8) = uVar6;\n        }\n        else {\n            *(iVar2 + 8) = ppiVar8;\n        }\n    }\n    if (*(arg_ch + 3) == '\\x01') {\n        if (ppiVar9 != *(*in_ECX + 4)) {\n            do {\n                ppiVar5 = ppiVar8;\n                if (*(ppiVar9 + 3) != '\\x01') break;\n                ppiVar8 = *ppiVar5;\n                if (ppiVar9 == ppiVar8) {\n                    ppiVar8 = ppiVar5[2];\n                    if (*(ppiVar8 + 3) == '\\0') {\n                        *(ppiVar8 + 3) = 1;\n                        *(ppiVar5 + 3) = 0;\n                        fcn.0042a980(ppiVar5);\n                        ppiVar8 = ppiVar5[2];\n                    }\n                    if (*(ppiVar8 + 0xd) == '\\0') {\n                        if ((*(*ppiVar8 + 3) != '\\x01') || (*(ppiVar8[2] + 3) != '\\x01')) {\n                            if (*(ppiVar8[2] + 3) == '\\x01') {\n                                *(*ppiVar8 + 3) = 1;\n                                *(ppiVar8 + 3) = 0;\n                                fcn.0042a9e0(ppiVar8);\n                                ppiVar8 = ppiVar5[2];\n                            }\n                            *(ppiVar8 + 3) = *(ppiVar5 + 3);\n                            *(ppiVar5 + 3) = 1;\n                            *(ppiVar8[2] + 3) = 1;\n                            fcn.0042a980(ppiVar5);\n                            *(ppiVar9 + 3) = 1;\n                            goto code_r0x0042a6dd;\n                        }\ncode_r0x0042a67f:\n                        *(ppiVar8 + 3) = 0;\n                    }\n                }\n                else {\n                    if (*(ppiVar8 + 3) == '\\0') {\n                        *(ppiVar8 + 3) = 1;\n                        *(ppiVar5 + 3) = 0;\n                        fcn.0042a9e0(ppiVar5);\n                        ppiVar8 = *ppiVar5;\n                    }\n                    if (*(ppiVar8 + 0xd) == '\\0') {\n                        if ((*(ppiVar8[2] + 3) == '\\x01') && (*(*ppiVar8 + 3) == '\\x01')) goto code_r0x0042a67f;\n                        if (*(*ppiVar8 + 3) == '\\x01') {\n                            *(ppiVar8[2] + 3) = 1;\n                            *(ppiVar8 + 3) = 0;\n                            fcn.0042a980(ppiVar8);\n                            ppiVar8 = *ppiVar5;\n                        }\n                        *(ppiVar8 + 3) = *(ppiVar5 + 3);\n                        *(ppiVar5 + 3) = 1;\n                        *(*ppiVar8 + 3) = 1;\n                        fcn.0042a9e0(ppiVar5);\n                        *(ppiVar9 + 3) = 1;\n                        goto code_r0x0042a6dd;\n                    }\n                }\n                ppiVar8 = ppiVar5[1];\n                ppiVar9 = ppiVar5;\n            } while (ppiVar5 != *(*in_ECX + 4));\n        }\n        *(ppiVar9 + 3) = 1;\n    }\ncode_r0x0042a6dd:\n    if (7 < arg_ch[0xf]) {\n        fcn.00452a07(arg_ch[10]);\n    }\n    arg_ch[0xf] = 7;\n    arg_ch[0xe] = 0;\n    *(arg_ch + 10) = 0;\n    if (7 < arg_ch[9]) {\n        fcn.00452a07(arg_ch[4]);\n    }\n    arg_ch[9] = 7;\n    arg_ch[8] = 0;\n    *(arg_ch + 4) = 0;\n    fcn.00452a07(arg_ch);\n    if (in_ECX[1] != 0) {\n        in_ECX[1] = in_ECX[1] + -1;\n    }\n    *arg_8h = arg_ch;\n    return;\n}\n",
        "token_count": 1757
    },
    "0042a780": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042a780(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint *puVar8;\n    uint *puVar9;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    uVar1 = *(param_1 + 8);\n    uVar6 = 1;\n    if (uVar1 != 0) {\n        uVar6 = uVar1;\n    }\n    for (; (uVar6 == uVar1 || (uVar6 < 8)); uVar6 = uVar6 * 2) {\n        if (0xaaaaaaa - uVar6 < uVar6) goto code_r0x0042a8e4;\n    }\n    uVar6 = uVar6 - uVar1;\n    uVar5 = *(param_1 + 0xc);\n    uVar1 = uVar1 + uVar6;\n    var_4h = NULL;\n    if ((uVar1 == 0) || ((uVar1 < 0x40000000 && (var_4h = fcn.0045306d(uVar1 * 4),  var_4h != NULL)))) {\n        iVar3 = *(param_1 + 4) + uVar5 * 4;\n        iVar4 = ((*(param_1 + 8) * 4 - iVar3) + *(param_1 + 4) >> 2) * 4;\n        iVar3 = fcn.004530c0(var_4h + uVar5, iVar3, iVar4);\n        iVar4 = iVar4 + iVar3;\n        if (uVar6 < uVar5) {\n            fcn.004530c0(iVar4, *(param_1 + 4), uVar6 * 4);\n            iVar3 = uVar6 * 4 + *(param_1 + 4);\n            iVar4 = ((uVar5 * 4 - iVar3) + *(param_1 + 4) >> 2) * 4;\n            iVar3 = fcn.004530c0(var_4h, iVar3, iVar4);\n            uVar5 = uVar6;\n            puVar9 = iVar4 + iVar3;\n        }\n        else {\n            iVar7 = uVar6 - uVar5;\n            iVar3 = (uVar5 * 4 >> 2) * 4;\n            iVar4 = fcn.004530c0(iVar4, *(param_1 + 4), iVar3);\n            puVar8 = iVar3 + iVar4;\n            puVar9 = var_4h;\n            if (iVar7 != 0) {\n                for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n        }\n        if (uVar5 != 0) {\n            for (; uVar5 != 0; uVar5 = uVar5 - 1) {\n                *puVar9 = 0;\n                puVar9 = puVar9 + 1;\n            }\n        }\n        if (*(param_1 + 4) != 0) {\n            fcn.00452a07(*(param_1 + 4));\n        }\n        *(param_1 + 8) = *(param_1 + 8) + uVar6;\n        *(param_1 + 4) = var_4h;\n        return;\n    }\n    fcn.0044e7ba();\ncode_r0x0042a8e4:\n    fcn.0044e7eb(\"deque<T> too long\");\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 873
    },
    "0042a8f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a8f0(int32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    \n    cVar1 = *(arg_8h + 0xd);\n    while (cVar1 == '\\0') {\n        fcn.0042a8f0(arg_8h[2]);\n        piVar2 = *arg_8h;\n        if (7 < arg_8h[0xf]) {\n            fcn.00452a07(arg_8h[10]);\n        }\n        arg_8h[0xf] = 7;\n        arg_8h[0xe] = 0;\n        *(arg_8h + 10) = 0;\n        if (7 < arg_8h[9]) {\n            fcn.00452a07(arg_8h[4]);\n        }\n        arg_8h[9] = 7;\n        arg_8h[8] = 0;\n        *(arg_8h + 4) = 0;\n        fcn.00452a07(arg_8h);\n        arg_8h = piVar2;\n        cVar1 = *(piVar2 + 0xd);\n    }\n    return;\n}\n",
        "token_count": 275
    },
    "0042a980": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a980(int32_t *arg_8h)\n\n{\n    int32_t **ppiVar1;\n    int32_t **ppiVar2;\n    int32_t *in_ECX;\n    \n    ppiVar1 = arg_8h[2];\n    arg_8h[2] = *ppiVar1;\n    if (*(*ppiVar1 + 0xd) == '\\0') {\n        *(*ppiVar1 + 4) = arg_8h;\n    }\n    ppiVar1[1] = arg_8h[1];\n    if (arg_8h == *(*in_ECX + 4)) {\n        *(*in_ECX + 4) = ppiVar1;\n        *ppiVar1 = arg_8h;\n        arg_8h[1] = ppiVar1;\n        return;\n    }\n    ppiVar2 = arg_8h[1];\n    if (arg_8h == *ppiVar2) {\n        *ppiVar2 = ppiVar1;\n        *ppiVar1 = arg_8h;\n        arg_8h[1] = ppiVar1;\n        return;\n    }\n    ppiVar2[2] = ppiVar1;\n    *ppiVar1 = arg_8h;\n    arg_8h[1] = ppiVar1;\n    return;\n}\n",
        "token_count": 299
    },
    "0042a9e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a9e0(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *in_ECX;\n    \n    iVar1 = *arg_8h;\n    *arg_8h = *(iVar1 + 8);\n    if (*(*(iVar1 + 8) + 0xd) == '\\0') {\n        *(*(iVar1 + 8) + 4) = arg_8h;\n    }\n    *(iVar1 + 4) = arg_8h[1];\n    if (arg_8h == *(*in_ECX + 4)) {\n        *(*in_ECX + 4) = iVar1;\n        *(iVar1 + 8) = arg_8h;\n        arg_8h[1] = iVar1;\n        return;\n    }\n    piVar2 = arg_8h[1];\n    if (arg_8h == piVar2[2]) {\n        piVar2[2] = iVar1;\n        *(iVar1 + 8) = arg_8h;\n        arg_8h[1] = iVar1;\n        return;\n    }\n    *piVar2 = iVar1;\n    *(iVar1 + 8) = arg_8h;\n    arg_8h[1] = iVar1;\n    return;\n}\n",
        "token_count": 299
    },
    "0042aa40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042aa40(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    cVar1 = *(*(param_1 + 8) + 0xd);\n    iVar2 = *(param_1 + 8);\n    while (iVar3 = iVar2,  cVar1 == '\\0') {\n        iVar2 = *(iVar3 + 8);\n        cVar1 = *(iVar2 + 0xd);\n        param_1 = iVar3;\n    }\n    return param_1;\n}\n",
        "token_count": 132
    },
    "0042abd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0042abd0(int32_t **param_1, uint *param_2, int32_t *param_3, int16_t **param_4, uint param_5)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    char cVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    int32_t *noname_3;\n    int32_t **noname_3_00;\n    int32_t *extraout_ECX;\n    int32_t *extraout_ECX_00;\n    int16_t **ppiVar6;\n    int16_t **ppiVar7;\n    int16_t *piVar8;\n    int16_t *piVar9;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h;\n    int32_t *var_ch_2;\n    int16_t **var_10h_2;\n    uint var_14h_2;\n    uint var_10h;\n    uint var_ch;\n    int32_t **noname_3_01;\n    uint32_t uStack52;\n    uint var_1ch;\n    int16_t *var_18h;\n    int32_t **var_14h;\n    uint32_t *puStack20;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x48a340;\n    var_ch_3 = *in_FS_OFFSET;\n    uStack52 = *0x4b4f00 ^ &stack0xfffffffc;\n    puStack20 = &uStack52;\n    *in_FS_OFFSET = &var_ch_3;\n    var_4h = 0;\n    var_14h = param_1;\n    if (param_1[1] == NULL) {\n        puStack20 = &uStack52;\n        fcn.0042b030(var_8h, 1, *param_1, param_1, var_14h_2);\n        *in_FS_OFFSET = var_ch_3;\n        return var_8h;\n    }\n    noname_3 = *param_1;\n    if (var_ch_2 == *noname_3) {\n        var_18h = var_ch_2[8];\n        ppiVar6 = var_ch_2 + 4;\n        if (7 < var_ch_2[9]) {\n            ppiVar6 = *ppiVar6;\n        }\n        ppiVar7 = var_10h_2;\n        if (0x7 < var_10h_2[5]) {\n            ppiVar7 = *var_10h_2;\n        }\n        piVar9 = var_18h;\n        if (var_10h_2[4] < var_18h) {\n            piVar9 = var_10h_2[4];\n        }\n        for (; piVar9 != NULL; piVar9 = piVar9 + -1) {\n            if (*ppiVar7 != *ppiVar6) {\n                uVar5 = (-(*ppiVar7 < *ppiVar6) & 0xfffffffe) + 1;\n                goto code_r0x0042ac6f;\n            }\n            ppiVar7 = ppiVar7 + 2;\n            ppiVar6 = ppiVar6 + 2;\n        }\n        uVar5 = 0;\ncode_r0x0042ac6f:\n        if (uVar5 == 0) {\n            if (var_10h_2[4] < var_18h) {\n                uVar5 = 0xffffffff;\n            }\n            else {\n                uVar5 = var_10h_2[4] != var_18h;\n            }\n        }\n        noname_3 = uVar5 & 0xffffff00 | uVar5 < 0;\n        puStack20 = &uStack52;\n        if (uVar5 < 0) {\n            puStack20 = &uStack52;\n            fcn.0042b030(var_8h, 1, var_ch_2, noname_3, var_14h_2);\n            *in_FS_OFFSET = var_ch_3;\n            return var_8h;\n        }\n    }\n    else {\n        if (var_ch_2 == noname_3) {\n            iVar1 = noname_3[2];\n            ppiVar6 = iVar1 + 0x10;\n            ppiVar7 = var_10h_2;\n            if (0x7 < var_10h_2[5]) {\n                ppiVar7 = *var_10h_2;\n            }\n            piVar9 = *(iVar1 + 0x20);\n            if (7 < *(iVar1 + 0x24)) {\n                ppiVar6 = *ppiVar6;\n            }\n            piVar8 = var_10h_2[4];\n            if (piVar9 < var_10h_2[4]) {\n                piVar8 = piVar9;\n            }\n            for (; piVar8 != NULL; piVar8 = piVar8 + -1) {\n                if (*ppiVar6 != *ppiVar7) {\n                    uVar5 = (-(*ppiVar6 < *ppiVar7) & 0xfffffffe) + 1;\n                    goto code_r0x0042ad17;\n                }\n                ppiVar6 = ppiVar6 + 2;\n                ppiVar7 = ppiVar7 + 2;\n            }\n            uVar5 = 0;\ncode_r0x0042ad17:\n            if (uVar5 == 0) {\n                if (piVar9 < var_10h_2[4]) {\n                    uVar5 = 0xffffffff;\n                }\n                else {\n                    uVar5 = piVar9 != var_10h_2[4];\n                }\n            }\n            puStack20 = &uStack52;\n            if (uVar5 < 0) {\n                puStack20 = &uStack52;\n                fcn.0042b030(var_8h, 0, noname_3[2], noname_3, var_14h_2);\n                *in_FS_OFFSET = var_ch_3;\n                return var_8h;\n            }\n            goto code_r0x0042aef2;\n        }\n        var_18h = var_ch_2[8];\n        ppiVar6 = var_ch_2 + 4;\n        if (7 < var_ch_2[9]) {\n            ppiVar6 = *ppiVar6;\n        }\n        ppiVar7 = var_10h_2;\n        if (0x7 < var_10h_2[5]) {\n            ppiVar7 = *var_10h_2;\n        }\n        piVar9 = var_18h;\n        if (var_10h_2[4] < var_18h) {\n            piVar9 = var_10h_2[4];\n        }\n        for (; piVar9 != NULL; piVar9 = piVar9 + -1) {\n            if (*ppiVar7 != *ppiVar6) {\n                uVar5 = (-(*ppiVar7 < *ppiVar6) & 0xfffffffe) + 1;\n                goto code_r0x0042adbc;\n            }\n            ppiVar7 = ppiVar7 + 2;\n            ppiVar6 = ppiVar6 + 2;\n        }\n        uVar5 = 0;\ncode_r0x0042adbc:\n        if (uVar5 == 0) {\n            if (var_10h_2[4] < var_18h) {\n                uVar5 = 0xffffffff;\n            }\n            else {\n                uVar5 = var_10h_2[4] != var_18h;\n            }\n        }\n        puVar2 = &uStack52;\n        if (uVar5 < 0) {\n            fcn.0042afd0();\n            cVar3 = fcn.0041ee84(var_ch_2 + 4, var_10h_2);\n            puVar2 = puStack20;\n            if (cVar3 != '\\0') {\n                noname_3_01 = noname_3_00;\n                if (*(var_ch_2[2] + 0xd) == '\\0') {\n                    fcn.0042b030(var_8h, 1, var_ch_2, noname_3_00, var_14h_2);\n                    *in_FS_OFFSET = var_ch_3;\n                    return var_8h;\n                }\n                goto code_r0x0042ae2b;\n            }\n        }\n        puStack20 = puVar2;\n        cVar3 = fcn.0041ee84(var_ch_2 + 4, var_10h_2);\n        noname_3 = extraout_ECX;\n        if ((cVar3 != '\\0') &&\n           ((fcn.00429e70(),  var_ch_2 == *var_14h ||\n            (cVar3 = fcn.0041ee84(var_10h_2, var_ch_2 + 4),  noname_3 = extraout_ECX_00,  cVar3 != '\\0')))) {\n            noname_3_01 = var_14h;\n            if (*(var_ch_2[2] + 0xd) == '\\0') {\n                fcn.0042b030(var_8h, 1, var_ch_2, var_14h, var_14h_2);\n                *in_FS_OFFSET = var_ch_3;\n                return var_8h;\n            }\ncode_r0x0042ae2b:\n            fcn.0042b030(var_8h, 0, var_ch_2, noname_3_01, var_14h_2);\n            *in_FS_OFFSET = var_ch_3;\n            return var_8h;\n        }\n    }\ncode_r0x0042aef2:\n    var_4h = 0xffffffff;\n    puVar4 = fcn.0042b240(&var_1ch, noname_3, var_10h_2, var_14h_2);\n    *var_8h = *puVar4;\n    *in_FS_OFFSET = var_ch_3;\n    return var_8h;\n}\n",
        "token_count": 2274
    },
    "0042afd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t ** __fastcall fcn.0042afd0(int32_t **param_1)\n\n{\n    char cVar1;\n    int32_t **ppiVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    \n    ppiVar2 = *param_1;\n    if (*(ppiVar2 + 0xd) != '\\0') {\n        *param_1 = ppiVar2[2];\n        return param_1;\n    }\n    piVar4 = *ppiVar2;\n    if (*(piVar4 + 0xd) == '\\0') {\n        piVar3 = piVar4[2];\n        if (*(piVar4[2] + 0xd) == '\\0') {\n            do {\n                piVar4 = piVar3;\n                piVar3 = piVar4[2];\n            } while (*(piVar3 + 0xd) == '\\0');\n            *param_1 = piVar4;\n            return param_1;\n        }\n    }\n    else {\n        piVar4 = ppiVar2[1];\n        cVar1 = *(piVar4 + 0xd);\n        while ((cVar1 == '\\0' && (*param_1 == *piVar4))) {\n            *param_1 = piVar4;\n            piVar4 = piVar4[1];\n            cVar1 = *(piVar4 + 0xd);\n        }\n        if (*(*param_1 + 0xd) != '\\0') {\n            return param_1;\n        }\n    }\n    *param_1 = piVar4;\n    return param_1;\n}\n",
        "token_count": 352
    },
    "0042b030": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042b030(int32_t **arg_8h, uint arg_ch, int32_t **arg_10h, uint noname_3, int32_t *arg_18h)\n\n{\n    char cVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t *piVar5;\n    int32_t **in_ECX;\n    int32_t *piVar6;\n    int32_t *piVar7;\n    int32_t **ppiVar8;\n    \n    if (0x3fffffd < in_ECX[1]) {\n        fcn.0042af30(arg_18h);\n        fcn.0044e7eb(\"map/set<T> too long\");\n        pcVar4 = swi(3);\n        (*pcVar4)();\n        return;\n    }\n    in_ECX[1] = in_ECX[1] + 1;\n    arg_18h[1] = arg_10h;\n    if (arg_10h == *in_ECX) {\n        (*in_ECX)[1] = arg_18h;\n        **in_ECX = arg_18h;\n        (*in_ECX)[2] = arg_18h;\n    }\n    else if (arg_ch == '\\0') {\n        arg_10h[2] = arg_18h;\n        if (arg_10h == (*in_ECX)[2]) {\n            (*in_ECX)[2] = arg_18h;\n        }\n    }\n    else {\n        *arg_10h = arg_18h;\n        if (arg_10h == **in_ECX) {\n            **in_ECX = arg_18h;\n        }\n    }\n    cVar1 = *(arg_18h[1] + 0xc);\n    piVar5 = arg_18h;\n    do {\n        if (cVar1 != '\\0') {\n            *((*in_ECX)[1] + 0xc) = 1;\n            *arg_8h = arg_18h;\n            return;\n        }\n        piVar7 = piVar5[1];\n        piVar6 = *piVar7[1];\n        if (piVar7 == piVar6) {\n            piVar6 = piVar7[1][2];\n            if (*(piVar6 + 3) != '\\0') {\n                if (piVar5 == piVar7[2]) {\n                    ppiVar8 = piVar7[2];\n                    piVar7[2] = *ppiVar8;\n                    if (*(*ppiVar8 + 0xd) == '\\0') {\n                        (*ppiVar8)[1] = piVar7;\n                    }\n                    ppiVar8[1] = piVar7[1];\n                    if (piVar7 == (*in_ECX)[1]) {\n                        (*in_ECX)[1] = ppiVar8;\n                    }\n                    else {\n                        ppiVar2 = piVar7[1];\n                        if (piVar7 == *ppiVar2) {\n                            *ppiVar2 = ppiVar8;\n                        }\n                        else {\n                            ppiVar2[2] = ppiVar8;\n                        }\n                    }\n                    *ppiVar8 = piVar7;\n                    piVar7[1] = ppiVar8;\n                    piVar5 = piVar7;\n                }\n                *(piVar5[1] + 0xc) = 1;\n                *(*(piVar5[1] + 4) + 0xc) = 0;\n                piVar7 = *(piVar5[1] + 4);\n                ppiVar8 = *piVar7;\n                *piVar7 = ppiVar8[2];\n                if (*(ppiVar8[2] + 0xd) == '\\0') {\n                    *(ppiVar8[2] + 4) = piVar7;\n                }\n                ppiVar8[1] = piVar7[1];\n                if (piVar7 == (*in_ECX)[1]) {\n                    (*in_ECX)[1] = ppiVar8;\n                    ppiVar8[2] = piVar7;\n                }\n                else {\n                    piVar6 = piVar7[1];\n                    if (piVar7 == piVar6[2]) {\n                        piVar6[2] = ppiVar8;\n                        ppiVar8[2] = piVar7;\n                    }\n                    else {\n                        *piVar6 = ppiVar8;\n                        ppiVar8[2] = piVar7;\n                    }\n                }\n                goto code_r0x0042b1ff;\n            }\ncode_r0x0042b156:\n            *(piVar7 + 3) = 1;\n            *(piVar6 + 3) = 1;\n            *(*(piVar5[1] + 4) + 0xc) = 0;\n            piVar5 = *(piVar5[1] + 4);\n        }\n        else {\n            if (*(piVar6 + 3) == '\\0') goto code_r0x0042b156;\n            if (piVar5 == *piVar7) {\n                iVar3 = *piVar7;\n                *piVar7 = *(iVar3 + 8);\n                if (*(*(iVar3 + 8) + 0xd) == '\\0') {\n                    *(*(iVar3 + 8) + 4) = piVar7;\n                }\n                *(iVar3 + 4) = piVar7[1];\n                if (piVar7 == (*in_ECX)[1]) {\n                    (*in_ECX)[1] = iVar3;\n                }\n                else {\n                    piVar5 = piVar7[1];\n                    if (piVar7 == piVar5[2]) {\n                        piVar5[2] = iVar3;\n                    }\n                    else {\n                        *piVar5 = iVar3;\n                    }\n                }\n                *(iVar3 + 8) = piVar7;\n                piVar7[1] = iVar3;\n                piVar5 = piVar7;\n            }\n            *(piVar5[1] + 0xc) = 1;\n            *(*(piVar5[1] + 4) + 0xc) = 0;\n            piVar7 = *(piVar5[1] + 4);\n            ppiVar8 = piVar7[2];\n            piVar7[2] = *ppiVar8;\n            if (*(*ppiVar8 + 0xd) == '\\0') {\n                (*ppiVar8)[1] = piVar7;\n            }\n            ppiVar8[1] = piVar7[1];\n            if (piVar7 == (*in_ECX)[1]) {\n                (*in_ECX)[1] = ppiVar8;\n            }\n            else {\n                ppiVar2 = piVar7[1];\n                if (piVar7 == *ppiVar2) {\n                    *ppiVar2 = ppiVar8;\n                }\n                else {\n                    ppiVar2[2] = ppiVar8;\n                }\n            }\n            *ppiVar8 = piVar7;\ncode_r0x0042b1ff:\n            piVar7[1] = ppiVar8;\n        }\n        cVar1 = *(piVar5[1] + 0xc);\n    } while( true );\n}\n",
        "token_count": 1603
    },
    "0042b240": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __thiscall fcn.0042b240(int32_t **param_1, int32_t **param_2, uint param_3, int32_t **param_4, uint param_5)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    int32_t **ppiVar6;\n    int32_t **ppiVar7;\n    int16_t **ppiVar8;\n    int32_t **ppiVar9;\n    int16_t **ppiVar10;\n    int32_t *piVar11;\n    int32_t *in_FS_OFFSET;\n    bool bVar12;\n    int32_t **var_8h;\n    int32_t **var_10h_2;\n    uint var_14h_2;\n    uint var_10h;\n    uint var_ch;\n    uint32_t uStack52;\n    int32_t **var_20h;\n    int32_t **var_1ch;\n    uint32_t var_18h;\n    int32_t **var_14h;\n    uint32_t *puStack20;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    ppiVar10 = var_10h_2;\n    uStack12 = 0x48a360;\n    var_ch_2 = *in_FS_OFFSET;\n    uStack52 = *0x4b4f00 ^ &stack0xfffffffc;\n    puStack20 = &uStack52;\n    *in_FS_OFFSET = &var_ch_2;\n    var_4h = 0;\n    var_20h = *param_1;\n    cVar1 = *(var_20h[1] + 0xd);\n    bVar12 = true;\n    var_18h = CONCAT31(var_18h._1_3_, 1);\n    var_14h = var_20h;\n    ppiVar6 = var_20h[1];\n    while (cVar1 == '\\0') {\n        piVar2 = ppiVar6[8];\n        ppiVar7 = ppiVar6 + 4;\n        if (0x7 < ppiVar6[9]) {\n            ppiVar7 = *ppiVar7;\n        }\n        ppiVar8 = var_10h_2;\n        if (0x7 < var_10h_2[5]) {\n            ppiVar8 = *var_10h_2;\n        }\n        piVar11 = piVar2;\n        if (var_10h_2[4] < piVar2) {\n            piVar11 = var_10h_2[4];\n        }\n        for (; piVar11 != NULL; piVar11 = piVar11 + -1) {\n            if (*ppiVar8 != *ppiVar7) {\n                uVar5 = (-(*ppiVar8 < *ppiVar7) & 0xfffffffe) + 1;\n                goto code_r0x0042b2c5;\n            }\n            ppiVar8 = ppiVar8 + 2;\n            ppiVar7 = ppiVar7 + 2;\n        }\n        uVar5 = 0;\ncode_r0x0042b2c5:\n        if (uVar5 == 0) {\n            if (var_10h_2[4] < piVar2) {\n                uVar5 = 0xffffffff;\n            }\n            else {\n                uVar5 = var_10h_2[4] != piVar2;\n            }\n        }\n        bVar12 = uVar5 < 0;\n        var_18h = var_18h & 0xffffff00 | bVar12;\n        if (bVar12) {\n            ppiVar7 = *ppiVar6;\n        }\n        else {\n            ppiVar7 = ppiVar6[2];\n        }\n        var_14h = ppiVar6;\n        ppiVar6 = ppiVar7;\n        cVar1 = *(ppiVar7 + 0xd);\n    }\n    ppiVar6 = var_14h;\n    var_1ch = param_1;\n    puVar4 = &uStack52;\n    if (bVar12) {\n        var_10h_2 = var_14h;\n        if (var_14h == *var_20h) {\n            puStack20 = &uStack52;\n            ppiVar6 = fcn.0042b030(&param_4, 1, var_14h, var_14h, var_14h_2);\n            *var_8h = *ppiVar6;\n            *(var_8h + 1) = 1;\n            *in_FS_OFFSET = var_ch_2;\n            return;\n        }\n        fcn.0042afd0();\n        ppiVar6 = var_10h_2;\n        puVar4 = puStack20;\n    }\n    puStack20 = puVar4;\n    var_10h_2 = ppiVar10[4];\n    ppiVar7 = ppiVar6 + 4;\n    if (0x7 < ppiVar10[5]) {\n        ppiVar10 = *ppiVar10;\n    }\n    ppiVar3 = ppiVar6[8];\n    if (0x7 < ppiVar6[9]) {\n        ppiVar7 = *ppiVar7;\n    }\n    ppiVar9 = var_10h_2;\n    if (ppiVar3 < var_10h_2) {\n        ppiVar9 = ppiVar3;\n    }\n    do {\n        if (ppiVar9 == NULL) {\n            uVar5 = 0;\ncode_r0x0042b394:\n            if (uVar5 == 0) {\n                ppiVar7 = var_10h_2;\n                if (ppiVar3 < var_10h_2) {\n                    uVar5 = 0xffffffff;\n                }\n                else {\n                    uVar5 = ppiVar3 != var_10h_2;\n                }\n            }\n            if (uVar5 < 0) {\n                ppiVar6 = fcn.0042b030(&var_20h, var_18h, var_14h, ppiVar7, var_14h_2);\n                *var_8h = *ppiVar6;\n                *(var_8h + 1) = 1;\n                *in_FS_OFFSET = var_ch_2;\n                return;\n            }\n            fcn.0042af30(var_14h_2);\n            *var_8h = ppiVar6;\n            *(var_8h + 1) = 0;\n            *in_FS_OFFSET = var_ch_2;\n            return;\n        }\n        if (*ppiVar7 != *ppiVar10) {\n            uVar5 = (-(*ppiVar7 < *ppiVar10) & 0xfffffffe) + 1;\n            goto code_r0x0042b394;\n        }\n        ppiVar7 = ppiVar7 + 2;\n        ppiVar10 = ppiVar10 + 2;\n        ppiVar9 = ppiVar9 + -1;\n    } while( true );\n}\n",
        "token_count": 1603
    },
    "0042b510": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042b510(void)\n\n{\n    int32_t iVar1;\n    uint unaff_retaddr;\n    char *arg_ch;\n    \n    if (*0x4b9654 == 0) {\n        fcn.00435dcd(0x4b9630);\n    }\n    *0x4b9654 = *0x4b9654 + 1;\n    if (*0x4b9650 == 0) {\n        *0x4b9650 = fcn.00456a6c(0x4000);\n        if (*0x4b9650 == 0) {\n            arg_ch = \"HC_ZIP_init error\\n\";\n            iVar1 = fcn.00456012();\n            fcn.00456afe(iVar1 + 0x40, arg_ch, unaff_retaddr);\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 198
    },
    "0042c3c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c3c0(uint32_t *arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint noname_0;\n    ulong uStack0000001c;\n    ulong uStack00000024;\n    uint uStack00000030;\n    uint32_t uStack00000034;\n    uint arg_8h_00;\n    uint in_stack_fffffff8;\n    \n    fcn.00459c50();\n    uVar2 = *arg_8h & arg_14h;\n    if (((uVar2 & 0xffff000) != 0) && ((uVar2 & 0xfff) != 0)) {\n        if ((*arg_8h < 0) && (*0x4b965c != 0)) {\n            uStack00000034 = fcn.0045a7fa(&stack0x0000103c, 0xfff, 0xffe, arg_18h, &arg_1ch);\n            if (uStack00000034 < 0xffd) {\n                fcn.00453710();\n                uStack0000001c = *0x4a2310;\n                uStack00000024 = *0x4a2318;\n                uStack00000030 = 0x20000;\n                arg_8h_00 = noname_0;\n                fcn.0042bf70(noname_0, &stack0x0000103c);\n                (*_sym.imp.ADVAPI32.dll_TraceEvent)();\n                fcn.004529f8(arg_8h_00);\n                return;\n            }\n        }\n        else {\n            iVar3 = fcn.0042c320(arg_14h);\n            iVar4 = fcn.0045a7fa(&stack0x0000103c + iVar3, 0xfff - iVar3, 0xffe - iVar3, arg_18h, &arg_1ch);\n            iVar5 = fcn.00455bdd(&stack0x0000103c + iVar4 + iVar3, (0xfff - iVar4) - iVar3, \"[%S(%d)]\\n\", arg_ch);\n            uVar6 = iVar5 + iVar4 + iVar3;\n            uVar2 = 0xfff;\n            if (uVar6 < 0xffe) {\n                if (0xffe < uVar6) {\n                    fcn.0045aabe();\n                    pcVar1 = swi(3);\n                    (*pcVar1)();\n                    return;\n                }\n                (&stack0x0000103c)[uVar6] = 0;\n                uVar2 = uVar6;\n            }\n            if ((*arg_8h & 0x20000000) != 0) {\n                fcn.0042c230(&stack0x0000103c, uVar2);\n            }\n            if ((*arg_8h & 0x40000000) != 0) {\n                (*_sym.imp.KERNEL32.dll_OutputDebugStringA)();\n            }\n        }\n    }\n    fcn.004529f8(in_stack_fffffff8);\n    return;\n}\n",
        "token_count": 743
    },
    "0042c5b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nushort * __fastcall fcn.0042c5b0(ushort *param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    int16_t *arg_8h;\n    uint32_t uVar2;\n    uint arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint var_18h;\n    uint lpFileName;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x48a9b9;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *(param_1 + 10) = 7;\n    *(param_1 + 8) = 0;\n    *param_1 = 0;\n    var_4h = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFullPathNameW)(param_2, 0, 0, 0, uVar1);\n    arg_8h = fcn.0044f469(-(uVar1 * 2 >> 0x20 != 0) | uVar1 * 2);\n    if (arg_8h != NULL) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetFullPathNameW)(param_2, uVar1, arg_8h, 0);\n        if ((uVar2 != 0) && (uVar2 <= uVar1)) {\n            if (*arg_8h == 0) {\n                arg_ch = 0;\n            }\n            else {\n                arg_ch = fcn.00453054(arg_8h);\n            }\n            fcn.00402667(arg_8h, arg_ch);\n        }\n        fcn.00456859(arg_8h);\n    }\n    *in_FS_OFFSET = var_ch;\n    return param_1;\n}\n",
        "token_count": 430
    },
    "0042c680": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nushort * __fastcall fcn.0042c680(ushort *param_1)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    int16_t *arg_8h;\n    uint32_t uVar3;\n    uint arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    int32_t nBufferLength;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x48a979;\n    nBufferLength = *in_FS_OFFSET;\n    uVar2 = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &nBufferLength;\n    *(param_1 + 10) = 7;\n    *(param_1 + 8) = 0;\n    *param_1 = 0;\n    var_4h = 0;\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)(0, 0, uVar2);\n    if (uVar2 != 0) {\n        iVar1 = (uVar2 + 1) * 2;\n        arg_8h = fcn.0044f469(-(iVar1 >> 0x20 != 0) | iVar1);\n        if (arg_8h != NULL) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)(uVar2, arg_8h);\n            if ((uVar3 != 0) && (uVar3 <= uVar2)) {\n                if (*arg_8h == 0) {\n                    arg_ch = 0;\n                }\n                else {\n                    arg_ch = fcn.00453054(arg_8h);\n                }\n                fcn.00402667(arg_8h, arg_ch);\n            }\n            fcn.00456859(arg_8h);\n        }\n    }\n    *in_FS_OFFSET = nBufferLength;\n    return param_1;\n}\n",
        "token_count": 433
    },
    "0042c880": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ach\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042c880(int32_t **arg_8h)\n\n{\n    int16_t *arg_8h_00;\n    int16_t iVar1;\n    ushort uVar2;\n    int32_t **ppiVar3;\n    int32_t iVar4;\n    int32_t **ppiVar5;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    int32_t **ppiVar6;\n    int32_t **ppiVar7;\n    uint32_t uVar8;\n    int32_t *in_FS_OFFSET;\n    bool bVar9;\n    uint uVar10;\n    uint var_ach;\n    uint var_a4h;\n    int32_t **var_9ch;\n    int32_t var_98h;\n    int32_t **var_94h;\n    int32_t var_90h;\n    uint32_t var_8ch;\n    uint var_7ch;\n    uint32_t var_78h;\n    uint32_t var_74h;\n    uint var_64h;\n    uint32_t var_60h;\n    uint32_t var_5ch;\n    uint var_4ch;\n    uint32_t var_48h;\n    int32_t **var_44h;\n    int32_t var_34h;\n    uint32_t var_30h;\n    int32_t **var_2ch;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    int32_t **var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h._0_1_ = 0xff;\n    var_4h._1_3_ = 0xffffff;\n    uStack12 = 0x48aaf3;\n    var_ch = *in_FS_OFFSET;\n    ppiVar3 = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_14h = ppiVar3;\n    if (arg_8h != NULL) {\n        var_98h = 0;\n        var_78h = 7;\n        var_7ch = 0;\n        var_8ch = var_8ch & 0xffff0000;\n        var_4h._0_1_ = 0;\n        var_4h._1_3_ = 0;\n        var_90h = in_ECX;\ncode_r0x0042c8e2:\n        do {\n            iVar4 = in_ECX;\n            ppiVar5 = arg_8h;\n            if (var_98h == 0) {\n                var_98h = 1;\n                if (*arg_8h == 0x22) {\n                    arg_8h = arg_8h + 2;\n                    uVar10 = 0x22;\n                }\n                else {\n                    uVar10 = 0x20;\n                }\n                var_94h = fcn.0045ab98(arg_8h, uVar10, ppiVar3);\n                if (var_94h != NULL) {\n                    ppiVar6 = var_94h - arg_8h >> 1;\n                    ppiVar7 = in_ECX + 4;\n                    if (arg_8h != NULL) {\n                        uVar8 = *(in_ECX + 0x18);\n                        ppiVar5 = ppiVar7;\n                        if (7 < uVar8) {\n                            ppiVar5 = *ppiVar7;\n                        }\n                        if (ppiVar5 <= arg_8h) {\n                            ppiVar5 = ppiVar7;\n                            if (7 < uVar8) {\n                                ppiVar5 = *ppiVar7;\n                            }\n                            if (arg_8h < ppiVar5 + *(in_ECX + 0x14) * 2) {\n                                if (uVar8 < 8) {\n                                    fcn.00402450(ppiVar7, arg_8h - ppiVar7 >> 1, ppiVar6);\n                                    iVar4 = var_90h;\n                                    ppiVar5 = var_94h;\n                                    ppiVar3 = ppiVar7;\n                                }\n                                else {\n                                    fcn.00402450(ppiVar7, arg_8h - *ppiVar7 >> 1, ppiVar6);\n                                    iVar4 = var_90h;\n                                    ppiVar5 = var_94h;\n                                    ppiVar3 = ppiVar7;\n                                }\n                                goto code_r0x0042c9f5;\n                            }\n                        }\n                    }\n                    if (ppiVar6 < 0x7fffffff) {\n                        if (*(in_ECX + 0x18) < ppiVar6) {\n                            ppiVar3 = ppiVar6;\n                            fcn.0040250f(ppiVar6, *(in_ECX + 0x14));\n                        }\n                        else if (ppiVar6 == NULL) {\n                            *(in_ECX + 0x14) = 0;\n                            ppiVar5 = ppiVar7;\n                            if (0x7 < *(in_ECX + 0x18)) {\n                                ppiVar5 = *ppiVar7;\n                            }\n                            *ppiVar5 = 0;\n                        }\n                        iVar4 = var_90h;\n                        ppiVar5 = var_94h;\n                        if (ppiVar6 != NULL) {\n                            ppiVar5 = ppiVar7;\n                            if (7 < *(in_ECX + 0x18)) {\n                                ppiVar5 = *ppiVar7;\n                            }\n                            if (ppiVar6 != NULL) {\n                                fcn.00452a10(ppiVar5, arg_8h, ppiVar6 * 2);\n                            }\n                            *(in_ECX + 0x14) = ppiVar6;\n                            if (7 < *(in_ECX + 0x18)) {\n                                ppiVar7 = *ppiVar7;\n                            }\n                            *(ppiVar7 + ppiVar6 * 2) = 0;\n                            iVar4 = var_90h;\n                            ppiVar5 = var_94h;\n                        }\n                        goto code_r0x0042c9f5;\n                    }\n                    goto code_r0x0042cec1;\n                }\ncode_r0x0042cecb:\n                if (*arg_8h == 0) {\n                    fcn.00402667(arg_8h, 0);\n                }\n                else {\n                    uVar10 = fcn.00453054(arg_8h);\n                    fcn.00402667(arg_8h, uVar10);\n                }\n                goto code_r0x0042d085;\n            }\ncode_r0x0042c9f5:\n            in_ECX = iVar4;\n            iVar4 = fcn.0045ac46(ppiVar5, 0x4a48b4);\n            if (iVar4 == 0) goto code_r0x0042d085;\n            arg_8h = iVar4 + 2;\n            if (*(iVar4 + 2) == 0) goto code_r0x0042d085;\n            if (*(iVar4 + 2) == 0x20) {\n                arg_8h = iVar4 + 4;\n                if (arg_8h == NULL) goto code_r0x0042d085;\n                if (*arg_8h == 0x20) goto code_r0x0042c8e2;\n            }\n            iVar1 = *arg_8h;\n            if ((iVar1 == 0x2d) || (iVar1 == 0x2f)) {\n                arg_8h_00 = arg_8h + 2;\n                if (*(arg_8h + 2) == 0) goto code_r0x0042d085;\n                arg_8h = fcn.0045ac46(arg_8h_00, 0x4a2330);\n                ppiVar5 = var_2ch;\n                var_9ch = arg_8h;\n                if (arg_8h == NULL) {\n                    uVar10 = 0;\n                    var_30h = 7;\n                    var_34h = 0;\n                    var_44h = var_44h._2_2_ << 0x10;\n                    if (*arg_8h_00 != 0) {\n                        uVar10 = fcn.00453054(arg_8h_00);\n                    }\n                    fcn.00402667(arg_8h_00, uVar10);\n                    var_4h._0_1_ = 3;\n                    if (*(in_ECX + 0x48) == '\\0') {\n                        bVar9 = 7 < var_30h;\n                        ppiVar3 = &var_44h;\n                        if (bVar9) {\n                            ppiVar3 = var_44h;\n                        }\n                        ppiVar5 = &var_44h;\n                        if (bVar9) {\n                            ppiVar5 = var_44h;\n                        }\n                        ppiVar7 = &var_44h;\n                        if (bVar9) {\n                            ppiVar7 = var_44h;\n                        }\n                        fcn.0041ef8a(ppiVar7, ppiVar3 + var_34h * 2, ppiVar5);\n                    }\n                    uVar10 = fcn.0042d680(&var_44h, &var_8ch);\n                    var_4h._0_1_ = 4;\n                    fcn.0042d710(&var_a4h, uVar10);\n                    fcn.004293f0();\n                    goto code_r0x0042d074;\n                }\n                if (*arg_8h != 0x20) {\n                    ppiVar7 = arg_8h;\n                    do {\n                        iVar1 = *ppiVar7;\n                        ppiVar7 = ppiVar7 + 2;\n                    } while (iVar1 != 0);\n                    if (ppiVar7 - (arg_8h + 2) >> 1 != 1) {\n                        var_44h = var_44h._2_2_ << 0x10;\n                        var_30h = 7;\n                        var_34h = 0;\n                        fcn.00402667(arg_8h_00, arg_8h - arg_8h_00 >> 1);\n                        var_4h._0_1_ = 8;\n                        if (*(in_ECX + 0x48) == '\\0') {\n                            bVar9 = 7 < var_30h;\n                            var_94h = &var_44h;\n                            if (bVar9) {\n                                var_94h = var_44h;\n                            }\n                            ppiVar5 = &var_44h;\n                            if (bVar9) {\n                                ppiVar5 = var_44h;\n                            }\n                            ppiVar5 = ppiVar5 + var_34h * 2;\n                            ppiVar7 = &var_44h;\n                            if (bVar9) {\n                                ppiVar7 = var_44h;\n                            }\n                            if (ppiVar7 != ppiVar5) {\n                                ppiVar6 = var_94h - ppiVar7;\n                                var_94h = ppiVar6;\n                                do {\n                                    uVar2 = fcn.00457a96(*ppiVar7);\n                                    *(ppiVar6 + ppiVar7) = uVar2;\n                                    ppiVar7 = ppiVar7 + 2;\n                                    arg_8h = var_9ch;\n                                } while (ppiVar7 != ppiVar5);\n                            }\n                        }\n                        ppiVar5 = arg_8h + 2;\n                        if (*ppiVar5 == 0x22) {\n                            ppiVar5 = arg_8h + 1;\n                            ppiVar7 = fcn.0045ac46(ppiVar5, 0x4a0c48);\n                            if (ppiVar7 != NULL) {\n                                arg_8h = ppiVar7 + 2;\n                                goto code_r0x0042cbf3;\n                            }\n                        }\n                        else {\n                            ppiVar7 = fcn.0045ab98(ppiVar5, 0x20);\n                            arg_8h = ppiVar7;\ncode_r0x0042cbf3:\n                            if (ppiVar7 != NULL) {\n                                if (var_34h != 0) {\n                                    var_2ch = var_2ch & 0xffff0000;\n                                    var_18h = 7;\n                                    var_1ch = 0;\n                                    fcn.00402667(ppiVar5, ppiVar7 - ppiVar5 >> 1);\n                                    var_4h._0_1_ = 0xb;\n                                    var_74h = var_74h & 0xffff0000;\n                                    var_60h = 7;\n                                    var_64h = 0;\n                                    fcn.00402450(&var_44h, 0, 0xffffffff);\n                                    var_4h._0_1_ = 0xc;\n                                    var_5ch = var_5ch & 0xffff0000;\n                                    var_48h = 7;\n                                    var_4ch = 0;\n                                    fcn.00402450(&var_2ch, 0, 0xffffffff);\n                                    var_4h._0_1_ = 0xd;\n                                    iVar4 = fcn.0042aba0(&var_74h);\n                                    fcn.0042b240(&var_ach, extraout_ECX, iVar4 + 0x10, iVar4);\n                                    fcn.004293f0();\n                                    if (7 < var_18h) {\n                                        fcn.00452a07(var_2ch);\n                                    }\n                                }\n                                var_4h._0_1_ = 0;\n                                if (7 < var_30h) {\n                                    fcn.00452a07(var_44h);\n                                }\n                                var_44h = var_44h & 0xffff0000;\n                                var_30h = 7;\n                                var_34h = 0;\n                                in_ECX = var_90h;\n                                goto code_r0x0042c8e2;\n                            }\n                        }\n                        uVar10 = 0;\n                        var_18h = 7;\n                        var_1ch = 0;\n                        var_2ch = var_2ch & 0xffff0000;\n                        if (*ppiVar5 != 0) {\n                            uVar10 = fcn.00453054(ppiVar5);\n                        }\n                        fcn.00402667(ppiVar5, uVar10);\n                        var_4h._0_1_ = 9;\n                        if (var_34h != 0) {\n                            uVar10 = fcn.0042d680(&var_44h, &var_2ch);\n                            var_4h._0_1_ = 10;\n                            fcn.0042d710(&var_a4h, uVar10);\n                            fcn.004293f0();\n                        }\n                        if (7 < var_18h) {\n                            fcn.00452a07(var_2ch);\n                        }\n                        var_18h = 7;\n                        var_1ch = 0;\n                        var_2ch = var_2ch & 0xffff0000;\n                        goto code_r0x0042d074;\n                    }\n                }\n                uVar8 = arg_8h - arg_8h_00 >> 1;\n                var_18h = 7;\n                var_1ch = 0;\n                var_2ch = var_2ch & 0xffff0000;\n                if (0x7ffffffe < uVar8) {\ncode_r0x0042cec1:\n                    fcn.0044e7eb(\"string too long\");\n                    goto code_r0x0042cecb;\n                }\n                if (uVar8 < 8) {\n                    if (uVar8 == 0) {\n                        var_1ch = 0;\n                        var_2ch = ppiVar5 & 0xffff0000;\n                    }\n                }\n                else {\n                    fcn.0040250f(uVar8, 0);\n                }\n                if (uVar8 != 0) {\n                    ppiVar5 = &var_2ch;\n                    if (7 < var_18h) {\n                        ppiVar5 = var_2ch;\n                    }\n                    if (uVar8 != 0) {\n                        fcn.00452a10(ppiVar5, arg_8h_00, uVar8 * 2);\n                    }\n                    ppiVar5 = &var_2ch;\n                    if (7 < var_18h) {\n                        ppiVar5 = var_2ch;\n                    }\n                    var_1ch = uVar8;\n                    *(ppiVar5 + uVar8 * 2) = 0;\n                }\n                var_4h._0_1_ = 5;\n                if (var_1ch != 0) {\n                    if (*(var_90h + 0x48) == '\\0') {\n                        bVar9 = 7 < var_18h;\n                        var_94h = &var_2ch;\n                        if (bVar9) {\n                            var_94h = var_2ch;\n                        }\n                        ppiVar5 = &var_2ch;\n                        if (bVar9) {\n                            ppiVar5 = var_2ch;\n                        }\n                        ppiVar5 = ppiVar5 + var_1ch * 2;\n                        ppiVar7 = &var_2ch;\n                        if (bVar9) {\n                            ppiVar7 = var_2ch;\n                        }\n                        if (ppiVar7 != ppiVar5) {\n                            ppiVar6 = var_94h - ppiVar7;\n                            var_94h = ppiVar6;\n                            do {\n                                uVar2 = fcn.00457a96(*ppiVar7);\n                                *(ppiVar7 + ppiVar6) = uVar2;\n                                ppiVar7 = ppiVar7 + 2;\n                                arg_8h = var_9ch;\n                            } while (ppiVar7 != ppiVar5);\n                        }\n                    }\n                    var_74h = var_74h & 0xffff0000;\n                    var_60h = 7;\n                    var_64h = 0;\n                    fcn.00402450(&var_2ch, 0, 0xffffffff);\n                    var_4h._0_1_ = 6;\n                    var_5ch = var_5ch & 0xffff0000;\n                    var_48h = 7;\n                    var_4ch = 0;\n                    fcn.00402450(&var_8ch, 0, 0xffffffff);\n                    var_4h._0_1_ = 7;\n                    iVar4 = fcn.0042aba0(&var_74h);\n                    fcn.0042b240(&var_a4h, extraout_ECX_00, iVar4 + 0x10, iVar4);\n                    if (7 < var_48h) {\n                        fcn.00452a07(var_5ch);\n                    }\n                    var_48h = 7;\n                    var_4ch = 0;\n                    var_5ch = var_5ch & 0xffff0000;\n                    if (7 < var_60h) {\n                        fcn.00452a07(var_74h);\n                    }\n                }\n                in_ECX = var_90h;\n                var_4h._0_1_ = 0;\n                if (7 < var_18h) {\n                    fcn.00452a07(var_2ch);\n                }\n                goto code_r0x0042c8e2;\n            }\n            if (iVar1 != 0x22) {\n                uVar10 = 0x4a48b4;\n            }\n            else {\n                arg_8h = arg_8h + 2;\n                uVar10 = 0x4a0c48;\n            }\n            ppiVar5 = fcn.0045ac46(arg_8h, uVar10);\n            if (ppiVar5 == NULL) {\n                var_30h = 7;\n                var_34h = 0;\n                var_44h = var_44h & 0xffff0000;\n                if (*arg_8h == 0) {\n                    uVar10 = 0;\n                }\n                else {\n                    uVar10 = fcn.00453054(arg_8h);\n                }\n                fcn.00402667(arg_8h, uVar10);\n                var_4h._0_1_ = 2;\n                fcn.00412468(&var_44h);\ncode_r0x0042d074:\n                if (7 < var_30h) {\n                    fcn.00452a07(var_44h);\n                }\n                goto code_r0x0042d085;\n            }\n            var_1ch = 0;\n            var_2ch = var_2ch & 0xffff0000;\n            var_18h = 7;\n            fcn.00402667(arg_8h, ppiVar5 - arg_8h >> 1);\n            ppiVar3 = &var_2ch;\n            var_4h._0_1_ = 1;\n            fcn.00412468(ppiVar3);\n            if (iVar1 == 0x22) {\n                arg_8h = ppiVar5;\n            }\n            var_4h._0_1_ = 0;\n            if (7 < var_18h) {\n                fcn.00452a07(var_2ch);\n            }\n            arg_8h = arg_8h + 2;\n            in_ECX = var_90h;\n            if (arg_8h == NULL) goto code_r0x0042d085;\n        } while( true );\n    }\ncode_r0x0042d09b:\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(var_ach);\n    return;\ncode_r0x0042d085:\n    if (7 < var_78h) {\n        fcn.00452a07(var_8ch);\n    }\n    goto code_r0x0042d09b;\n}\n",
        "token_count": 4937
    },
    "0042d340": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0042d340(int16_t *param_1, int16_t *param_2)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int16_t *piVar3;\n    int16_t iVar4;\n    \n    iVar4 = *param_2;\n    piVar3 = NULL;\n    do {\n        if (iVar4 == 0) {\ncode_r0x0042d371:\n            iVar4 = *param_1;\n            while (iVar4 == 0x2a) {\n                param_1 = param_1 + 1;\n                iVar4 = *param_1;\n            }\n            return *param_1 == 0;\n        }\n        iVar1 = *param_1;\n        if (iVar1 == 0x2a) {\n            iVar4 = *param_2;\n            if (iVar4 != 0) {\n                piVar2 = NULL;\n                do {\n                    iVar1 = *param_1;\n                    if (iVar1 == 0x2a) {\n                        piVar2 = param_1 + 1;\n                        if (*piVar2 == 0) {\n                            return 1;\n                        }\n                        param_1 = piVar2;\n                        piVar3 = param_2 + 1;\n                    }\n                    else if ((iVar1 == iVar4) || (iVar1 == 0x3f)) {\n                        param_1 = param_1 + 1;\n                        param_2 = param_2 + 1;\n                    }\n                    else {\n                        param_1 = piVar2;\n                        param_2 = piVar3;\n                        piVar3 = piVar3 + 1;\n                    }\n                    iVar4 = *param_2;\n                } while (iVar4 != 0);\n            }\n            goto code_r0x0042d371;\n        }\n        if ((iVar1 != iVar4) && (iVar1 != 0x3f)) {\n            return (iVar1 >> 8) << 8;\n        }\n        iVar4 = param_2[1];\n        param_2 = param_2 + 1;\n        param_1 = param_1 + 1;\n    } while( true );\n}\n",
        "token_count": 478
    },
    "0042d790": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0042d790(void)\n\n{\n    uint32_t arg_1ch;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    int32_t *in_FS_OFFSET;\n    uint uVar4;\n    char16_t *pcVar5;\n    uint uVar6;\n    uint uVar7;\n    char *pcVar8;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48ab2b;\n    var_ch = *in_FS_OFFSET;\n    arg_1ch = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (*0x4b9700 == 0) {\n        var_10h = fcn.0045306d(0x40);\n        var_4h = 0;\n        if (var_10h == 0) {\n            *0x4b9700 = 0;\n        }\n        else {\n            *0x4b9700 = fcn.00431bb0();\n        }\n        var_4h = 0xffffffff;\n        fcn.00453ab0(0x42e3b0);\n    }\n    if ((*(*0x4b9700 + 0x1c) != 0) && (*(*0x4b9700 + 0x24) != 0)) {\n        pcVar8 = \"before pfCreateJobObject...\";\n        uVar7 = 0x2000004;\n        uVar6 = 0x3e;\n        pcVar5 = L\"ProcessUtility.cpp\";\n        uVar1 = fcn.0042c180();\n        fcn.0042c3c0(uVar1, pcVar5, uVar6, uVar7, pcVar8, arg_1ch);\n        iVar2 = fcn.0042e330();\n        uVar1 = 0;\n        iVar2 = (**(iVar2 + 0x1c))(0, L\"Global\\\\TM_HC_ATTK_PLUGIN_JOB\");\n        if (iVar2 == 0) {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            pcVar8 = \"CreateJobObject Error ! Error Code is %lu\";\n            uVar4 = 0x2000004;\n            uVar7 = 0x44;\n            pcVar5 = L\"ProcessUtility.cpp\";\n            uVar6 = fcn.0042c180(extraout_ECX);\n            fcn.0042c3c0(uVar6, pcVar5, uVar7, uVar4, pcVar8, uVar1);\n        }\n        else {\n            pcVar8 = \"before pfSetInformationJobObject...\";\n            uVar4 = 0x2000004;\n            uVar7 = 0x4d;\n            pcVar5 = L\"ProcessUtility.cpp\";\n            var_24h = 2;\n            _var_18h = 0;\n            _var_20h = 0;\n            uVar6 = fcn.0042c180();\n            fcn.0042c3c0(uVar6, pcVar5, uVar7, uVar4, pcVar8, uVar1);\n            iVar3 = fcn.0042e330();\n            iVar3 = (**(iVar3 + 0x24))(iVar2, 5, &var_24h, 0x14);\n            if (iVar3 == 0) {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n                uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                pcVar8 = \"SetInformationJobObject Error ! Error Code is %lu\";\n                uVar4 = 0x2000004;\n                uVar7 = 0x59;\n                pcVar5 = L\"ProcessUtility.cpp\";\n                uVar6 = fcn.0042c180(extraout_ECX_00);\n                fcn.0042c3c0(uVar6, pcVar5, uVar7, uVar4, pcVar8, uVar1);\n                *in_FS_OFFSET = var_ch;\n                return 0;\n            }\n        }\n        *in_FS_OFFSET = var_ch;\n        return iVar2;\n    }\n    pcVar8 = \"No pfCreateJobObject or pfSetInformationJobObject...\";\n    uVar7 = 0x2000004;\n    uVar6 = 0x5d;\n    pcVar5 = L\"ProcessUtility.cpp\";\n    uVar1 = fcn.0042c180();\n    fcn.0042c3c0(uVar1, pcVar5, uVar6, uVar7, pcVar8, arg_1ch);\n    *in_FS_OFFSET = var_ch;\n    return 0;\n}\n",
        "token_count": 1133
    },
    "0042d960": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_a0h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042d960(uint *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t arg_1ch;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *in_ECX;\n    int16_t *in_EDX;\n    uint *puVar5;\n    uint32_t uVar6;\n    int32_t *in_FS_OFFSET;\n    bool bVar7;\n    char16_t *pcVar8;\n    uint arg_1ch_00;\n    uint uVar9;\n    uint uVar10;\n    char *pcVar11;\n    uint var_a0h;\n    uint var_9ch;\n    uint32_t var_74h;\n    uint *var_64h;\n    uint var_58h;\n    int32_t var_54h;\n    uint var_4ch;\n    int32_t var_48h;\n    uint *var_44h;\n    uint32_t var_40h;\n    int32_t var_3ch;\n    code *var_38h;\n    uint32_t var_34h;\n    uint var_30h;\n    int16_t *var_2ch;\n    uint *lpPathName;\n    uint var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48abc7;\n    var_ch = *in_FS_OFFSET;\n    arg_1ch = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_44h = arg_8h;\n    var_3ch = arg_ch;\n    var_40h = 0;\n    var_2ch = in_EDX;\n    var_10h = arg_1ch;\n    if (arg_ch != 0) {\n        if (*0x4b9700 == 0) {\n            var_48h = fcn.0045306d(0x40);\n            var_4h = 0;\n            if (var_48h == 0) {\n                *0x4b9700 = 0;\n            }\n            else {\n                *0x4b9700 = fcn.00431bb0();\n            }\n            var_4h = 0xffffffff;\n            fcn.00453ab0(0x42e3b0);\n        }\n        if (*(*0x4b9700 + 0x20) == 0) {\n            pcVar11 = \"no AssignProcessToJobObject\";\n            uVar10 = 0x2000004;\n            uVar9 = 0x69;\n            pcVar8 = L\"ProcessUtility.cpp\";\n            uVar2 = fcn.0042c180();\n            fcn.0042c3c0(uVar2, pcVar8, uVar9, uVar10, pcVar11, arg_1ch);\n        }\n    }\n    if (in_ECX[4] == 0) {\n        pcVar11 = \"cmdline.empty()\";\n        uVar10 = 0x2000004;\n        uVar9 = 0x71;\n        pcVar8 = L\"ProcessUtility.cpp\";\n        uVar2 = fcn.0042c180();\n        fcn.0042c3c0(uVar2, pcVar8, uVar9, uVar10, pcVar11, arg_1ch);\n        goto code_r0x0042dd46;\n    }\n    uVar6 = in_ECX[4] + 1;\n    var_4h = 1;\n    var_38h = vtable.AutoCleanBuf_wchar_t_.0;\n    var_34h = uVar6;\n    var_30h = fcn.0044f469(-(uVar6 * 2 >> 0x20 != 0) | uVar6 * 2);\n    uVar2 = (**(var_38h + 8))();\n    fcn.00453710(var_30h, 0, uVar2);\n    var_4h = 2;\n    if (var_34h < uVar6) {\n        pcVar11 = \"Insufficient buffer %lu; %d requested\";\n        uVar10 = 0x2000004;\n        uVar9 = 0x7a;\n        pcVar8 = L\"ProcessUtility.cpp\";\n        uVar6 = var_34h;\n        uVar2 = fcn.0042c180();\n        fcn.0042c3c0(uVar2, pcVar8, uVar9, uVar10, pcVar11, uVar6);\n    }\n    else {\n        if (7 < in_ECX[5]) {\n            in_ECX = *in_ECX;\n        }\n        fcn.0045ac88(var_30h, var_34h, in_ECX);\n    }\n    var_64h = var_44h;\n    bVar7 = var_44h != NULL;\n    var_58h = 0;\n    _var_54h = 0;\n    var_4ch = 0;\n    fcn.00453710(&var_9ch, 0, 0x40);\n    var_74h = var_74h | -bVar7 & 0x100;\n    uVar6 = -bVar7 & 0x8000000;\n    var_a0h = 0x44;\n    if ((var_3ch != 0) && (iVar3 = fcn.0042e330(),  *(iVar3 + 0x20) != 0)) {\n        pcVar11 = \"CreationFlag = CreationFlag | CREATE_SUSPENDED\";\n        uVar10 = 0x2000004;\n        uVar9 = 0x8a;\n        pcVar8 = L\"ProcessUtility.cpp\";\n        uVar2 = fcn.0042c180();\n        fcn.0042c3c0(uVar2, pcVar8, uVar9, uVar10, pcVar11, arg_1ch);\n        uVar6 = uVar6 | 4;\n    }\n    puVar5 = NULL;\n    var_48h = 0;\n    var_4h._0_1_ = 3;\n    if (var_2ch != NULL) {\n        puVar5 = fcn.0045306d(0x1c);\n        var_4h._0_1_ = 4;\n        var_44h = puVar5;\n        if (puVar5 == NULL) {\n            puVar5 = NULL;\n        }\n        else {\n            lpPathName = lpPathName & 0xffff0000;\n            var_14h = 7;\n            var_18h = 0;\n            if (*var_2ch == 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = fcn.00453054(var_2ch);\n            }\n            fcn.00402667(var_2ch, uVar2);\n            var_4h = CONCAT31(var_4h._1_3_, 5);\n            var_40h = 1;\n            fcn.0042c680();\n            puVar5[6] = 0;\n            if (puVar5[4] != 0) {\n                puVar4 = &lpPathName;\n                if (7 < var_14h) {\n                    puVar4 = lpPathName;\n                }\n                uVar2 = (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(puVar4);\n                puVar5[6] = uVar2;\n            }\n        }\n        var_4h._0_1_ = 3;\n        var_4h._1_3_ = 0;\n        if (((var_40h & 1) != 0) && (7 < var_14h)) {\n            fcn.00452a07(lpPathName);\n        }\n    }\n    iVar3 = (*_sym.imp.KERNEL32.dll_CreateProcessW)(0, var_30h, 0, 0, bVar7, uVar6, 0, 0, &var_a0h, &var_58h);\n    var_4h = CONCAT31(var_4h._1_3_, 2);\n    if (puVar5 != NULL) {\n        if ((puVar5[6] != 0) && (puVar5[4] != 0)) {\n            puVar4 = puVar5;\n            if (7 < puVar5[5]) {\n                puVar4 = *puVar5;\n            }\n            (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(puVar4);\n        }\n        if (7 < puVar5[5]) {\n            fcn.00452a07(*puVar5);\n        }\n        puVar5[5] = 7;\n        puVar5[4] = 0;\n        *puVar5 = 0;\n        fcn.00452a07(puVar5);\n    }\n    iVar1 = var_3ch;\n    if (iVar3 != 0) {\n        if ((var_3ch != 0) && (iVar3 = fcn.0042e330(),  *(iVar3 + 0x20) != 0)) {\n            pcVar11 = \"before pfAssignProcessToJobObject...\";\n            uVar10 = 0x2000004;\n            uVar9 = 0x9d;\n            pcVar8 = L\"ProcessUtility.cpp\";\n            uVar2 = fcn.0042c180();\n            fcn.0042c3c0(uVar2, pcVar8, uVar9, uVar10, pcVar11, arg_1ch);\n            iVar3 = fcn.0042e330();\n            iVar3 = (**(iVar3 + 0x20))(iVar1, var_58h);\n            if (iVar3 == 0) {\n                (*_sym.imp.KERNEL32.dll_GetLastError)();\n                arg_1ch_00 = 0;\n                pcVar11 = \"bAssignProcessToJobObject=%d; err=%lu\";\n                uVar10 = 0x2000002;\n                uVar9 = 0xa2;\n                pcVar8 = L\"ProcessUtility.cpp\";\n                uVar2 = fcn.0042c180();\n                fcn.0042c3c0(uVar2, pcVar8, uVar9, uVar10, pcVar11, arg_1ch_00);\n            }\n            (*_sym.imp.KERNEL32.dll_Sleep)(10);\n            if (var_54h == 0) goto code_r0x0042dd32;\n            (*_sym.imp.KERNEL32.dll_ResumeThread)(var_54h);\n        }\n        if (var_54h != 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(var_54h);\n        }\n    }\ncode_r0x0042dd32:\n    var_38h = vtable.AutoCleanBuf_wchar_t_.0;\n    fcn.00456859(var_30h);\ncode_r0x0042dd46:\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(var_a0h);\n    return;\n}\n",
        "token_count": 2524
    },
    "0042e600": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042e600(uint8_t *param_1)\n\n{\n    uint16_t *puVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint16_t *puVar6;\n    uint arg_8h;\n    uint lpLibFileName;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b4f00 ^ &stack0xfffffffc;\n    arg_8h = 0x106;\n    uVar4 = (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)(&lpLibFileName);\n    if (((uVar4 != 0) && (uVar4 < 0x105)) && (param_1 != NULL)) {\n        iVar5 = (*_sym.imp.KERNEL32.dll_lstrlenW)(&lpLibFileName);\n        pcVar3 = _sym.imp.KERNEL32.dll_lstrcatW;\n        if (*(&stack0xfffffd26 + iVar5 * 2) != 0x5c) {\n            *(&lpLibFileName + iVar5 * 2) = 0x5c;\n            iVar5 = iVar5 + 1;\n        }\n        if (*param_1 != 0) {\n            puVar1 = &lpLibFileName + iVar5 * 2;\n            puVar6 = puVar1;\n            do {\n                do {\n                    uVar2 = *param_1;\n                    param_1 = param_1 + 1;\n                    *puVar6 = uVar2;\n                    puVar6 = puVar6 + 1;\n                } while (uVar2 != 0);\n                (*pcVar3)(&lpLibFileName, 0x4a6824);\n                (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(&lpLibFileName, 0, 8);\n                puVar6 = puVar1;\n            } while (*param_1 != 0);\n        }\n    }\n    fcn.004529f8(arg_8h);\n    return;\n}\n",
        "token_count": 452
    },
    "0042e9a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042e9a0(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint in_ECX;\n    \n    if (*0x4b9678 != 0) {\n        fcn.0042ef40(arg_8h, arg_ch, in_ECX, arg_14h);\n        return;\n    }\n    fcn.0042e9d0(arg_8h, arg_ch, in_ECX, arg_14h);\n    return;\n}\n",
        "token_count": 118
    },
    "0042f830": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0042f830(void)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_18h;\n    int16_t *var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48ade8;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if ((*0x4b9854 & 1) == 0) {\n        *0x4b9854 = *0x4b9854 | 1;\n        *0x4b9858 = vtable.CCriticalSectionLock.0;\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x4b985c, uVar2);\n        fcn.00453ab0(0x48bb40);\n    }\n    (**(*0x4b9858 + 4))();\n    var_4h = 0;\n    if ((*0x4b9854 & 2) == 0) {\n        *0x4b9854 = *0x4b9854 | 2;\n        *0x4b9888 = 7;\n        *0x4b9884 = 0;\n        *0x4b9874 = 0;\n        fcn.00453ab0(fcn.0048bae0);\n    }\n    if (*0x4b9884 == 0) {\n        var_4h._0_1_ = 1;\n        var_14h = fcn.0044f469(0x208);\n        uVar3 = (**0x4a67f0)();\n        fcn.00453710(var_14h, 0, uVar3);\n        pcVar1 = _sym.imp.KERNEL32.dll_GetSystemDirectoryW;\n        var_4h = CONCAT31(var_4h._1_3_, 2);\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)(var_14h, 0x104);\n        if (0x104 < uVar2) {\n            fcn.00456859(var_14h);\n            var_14h = fcn.0044f469(-(uVar2 * 2 >> 0x20 != 0) | uVar2 * 2);\n            uVar3 = (**0x4a67f0)();\n            fcn.00453710(var_14h, 0, uVar3);\n            (*pcVar1)(var_14h, uVar2);\n        }\n        if (*var_14h == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.00453054(var_14h);\n        }\n        fcn.00402667(var_14h, uVar3);\n        fcn.00456859(var_14h);\n    }\n    var_4h = 0xffffffff;\n    (**(*0x4b9858 + 8))();\n    *in_FS_OFFSET = var_ch;\n    return 0x4b9874;\n}\n",
        "token_count": 749
    },
    "00431040": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00431040(uint arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint32_t arg_1ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x48aea8;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    iVar3 = 0;\n    var_4h = 0;\n    if (0 < *(in_ECX + 0x2c)) {\n        do {\n            uVar2 = fcn.00453054(0x4a6d28);\n            fcn.0040186c(0x4a6d28, uVar2);\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < *(in_ECX + 0x2c));\n    }\n    fcn.004019b5(&arg_8h, 0, 0xffffffff);\n    uVar2 = fcn.00453054(0x4a6d2c);\n    fcn.0040186c(0x4a6d2c, uVar2);\n    if (*(in_ECX + 0x30) != 0) {\n        cVar1 = fcn.00429af0(*(in_ECX + 0x24));\n        if (cVar1 == '\\x01') {\n            fcn.00402667(0x4a00e0, 0);\n        }\n    }\n    if (7 < arg_1ch) {\n        fcn.00452a07(arg_8h);\n    }\n    *in_FS_OFFSET = var_ch;\n    return 1;\n}\n",
        "token_count": 423
    },
    "00431640": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00431640(int32_t **arg_8h, uint *arg_ch, uint noname_2, uint noname_3, uint noname_4, int32_t arg_1ch, \n            uint32_t arg_20h)\n\n{\n    int32_t *arg_8h_00;\n    uint16_t uVar1;\n    int32_t *arg_ch_00;\n    char16_t *arg_8h_01;\n    uint uVar2;\n    int32_t **ppiVar3;\n    uint *puVar4;\n    uint *puVar5;\n    int32_t *in_FS_OFFSET;\n    uint in_stack_ffffff90;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint var_34h;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x48ae79;\n    var_ch = *in_FS_OFFSET;\n    arg_8h_01 = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_4h = 1;\n    arg_8h[5] = 0x7;\n    arg_8h[4] = NULL;\n    *arg_8h = 0;\n    puVar5 = &arg_ch;\n    if (7 < arg_20h) {\n        puVar5 = arg_ch;\n    }\ncode_r0x004316a4:\n    do {\n        while( true ) {\n            puVar4 = &arg_ch;\n            if (7 < arg_20h) {\n                puVar4 = arg_ch;\n            }\n            if (puVar5 == puVar4 + arg_1ch * 2) goto code_r0x00431905;\n            uVar1 = *puVar5;\n            if ((((0x1f < uVar1) || (uVar1 == 9)) || (uVar1 == 10)) || (uVar1 == 0xd)) break;\n            uVar2 = fcn.00426300(uVar1);\n            var_4h._0_1_ = 2;\n            fcn.0040c702(uVar2);\n            var_4h._0_1_ = 3;\n            arg_8h_01 = fcn.0040c05d(0x4a54a0);\n            var_4h = CONCAT31(var_4h._1_3_, 4);\n            fcn.004019b5(arg_8h_01, 0, 0xffffffff);\n            if (7 < var_18h) {\n                fcn.00452a07(var_2ch);\n            }\n            var_18h = 7;\n            var_2ch = var_2ch & 0xffff0000;\n            if (7 < var_30h) {\n                fcn.00452a07(var_44h);\n            }\n            var_4h = CONCAT31(var_4h._1_3_, 1);\n            var_30h = 7;\n            var_44h = var_44h & 0xffff0000;\n            if (var_48h < 8) {\ncode_r0x004318f3:\n                puVar5 = puVar5 + 2;\n            }\n            else {\n                fcn.00452a07(var_5ch);\n                puVar5 = puVar5 + 2;\n            }\n        }\n        if (uVar1 != 0x3c) {\n            if (uVar1 == 0x26) {\n                uVar2 = fcn.00453054(L\"&amp;\");\n                arg_8h_01 = L\"&amp;\";\n                fcn.0040186c(L\"&amp;\", uVar2);\n                puVar5 = puVar5 + 2;\n                goto code_r0x004316a4;\n            }\n            if (uVar1 == 0x3e) {\n                uVar2 = fcn.00453054(L\"&gt;\");\n                arg_8h_01 = L\"&gt;\";\n                fcn.0040186c(L\"&gt;\", uVar2);\n                puVar5 = puVar5 + 2;\n                goto code_r0x004316a4;\n            }\n            if (uVar1 == 0x22) {\n                uVar2 = fcn.00453054(L\"&quot;\");\n                arg_8h_01 = L\"&quot;\";\n                fcn.0040186c(L\"&quot;\", uVar2);\n                puVar5 = puVar5 + 2;\n                goto code_r0x004316a4;\n            }\n            if (uVar1 == 0x27) {\n                uVar2 = fcn.00453054(L\"&apos;\");\n                arg_8h_01 = L\"&apos;\";\n                fcn.0040186c(L\"&apos;\", uVar2);\n                puVar5 = puVar5 + 2;\n                goto code_r0x004316a4;\n            }\n            arg_ch_00 = arg_8h[4];\n            if ((-arg_ch_00 - 1U < 2) || (arg_8h_00 = arg_ch_00 + 1,  0x7ffffffe < arg_8h_00)) {\n                fcn.0044e7eb(\"string too long\");\ncode_r0x00431905:\n                if (7 < arg_20h) {\n                    fcn.00452a07(arg_ch, arg_8h_01);\n                }\n                *in_FS_OFFSET = var_ch;\n                fcn.004529f8(in_stack_ffffff90);\n                return;\n            }\n            if (arg_8h[5] < arg_8h_00) {\n                fcn.0040250f(arg_8h_00, arg_ch_00);\n                if (arg_8h_00 == NULL) goto code_r0x004318f3;\n            }\n            else if (arg_8h_00 == NULL) {\n                arg_8h[4] = NULL;\n                if (arg_8h[5] < 0x8) {\n                    *arg_8h = 0;\n                    puVar5 = puVar5 + 2;\n                }\n                else {\n                    **arg_8h = 0;\n                    puVar5 = puVar5 + 2;\n                }\n                goto code_r0x004316a4;\n            }\n            ppiVar3 = arg_8h;\n            if (0x7 < arg_8h[5]) {\n                ppiVar3 = *arg_8h;\n            }\n            *(ppiVar3 + arg_8h[4] * 2) = uVar1;\n            arg_8h[4] = arg_8h_00;\n            if (arg_8h[5] < 0x8) {\n                *(arg_8h + arg_8h_00 * 2) = 0;\n                goto code_r0x004318f3;\n            }\n            *(*arg_8h + arg_8h_00 * 2) = 0;\n            puVar5 = puVar5 + 2;\n            goto code_r0x004316a4;\n        }\n        uVar2 = fcn.00453054(L\"&lt;\");\n        arg_8h_01 = L\"&lt;\";\n        fcn.0040186c(L\"&lt;\", uVar2);\n        puVar5 = puVar5 + 2;\n    } while( true );\n}\n",
        "token_count": 1731
    },
    "00431960": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00431960(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    if (*(arg_8h + 0x18) != 0) {\n        fcn.0040186c(arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "00431980": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00431980(uint *arg_8h, int16_t *arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint *puVar1;\n    int32_t iVar2;\n    \n    if (*arg_ch == 0) {\n        arg_ch_00 = 0;\n    }\n    else {\n        arg_ch_00 = fcn.00453054(arg_ch);\n    }\n    fcn.00402667(arg_ch, arg_ch_00);\n    puVar1 = arg_8h + 8;\n    arg_8h[0xc] = 0;\n    if (7 < arg_8h[0xd]) {\n        puVar1 = *puVar1;\n    }\n    *puVar1 = 0;\n    iVar2 = (**(*arg_8h[1] + 4))(arg_ch, arg_10h);\n    if (iVar2 == 0) {\n        fcn.00472fd0(*arg_8h, 0);\n    }\n    return;\n}\n",
        "token_count": 228
    },
    "00431bb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.00431bb0(code **param_1)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    code *pcVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x48af88;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    param_1[1] = NULL;\n    param_1[2] = NULL;\n    var_4h = 0;\n    *param_1 = vtable.DLLKernel32.0;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    param_1[6] = NULL;\n    param_1[7] = NULL;\n    param_1[8] = NULL;\n    param_1[9] = NULL;\n    param_1[10] = NULL;\n    param_1[0xb] = NULL;\n    param_1[0xc] = NULL;\n    param_1[0xd] = NULL;\n    param_1[0xe] = NULL;\n    param_1[0xf] = NULL;\n    puVar2 = fcn.0042f830(uVar1);\n    if (7 < puVar2[5]) {\n        puVar2 = *puVar2;\n    }\n    if (param_1[2] == NULL) {\n        pcVar3 = (**(*param_1 + 4))(puVar2);\n        param_1[2] = pcVar3;\n    }\n    *in_FS_OFFSET = var_ch;\n    return param_1;\n}\n",
        "token_count": 409
    },
    "00432120": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00432120(void)\n\n{\n    int32_t arg_1ch;\n    uint arg_8h;\n    uint extraout_ECX;\n    char16_t *arg_ch;\n    uint arg_10h;\n    uint arg_14h;\n    char *arg_18h;\n    uint uVar1;\n    uint var_210h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b4f00 ^ &stack0xfffffffc;\n    var_210h._0_2_ = 0;\n    fcn.00453710(&var_210h + 2, 0, 0x206);\n    uVar1 = 0x1c;\n    arg_1ch = (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 0x1c, 0, 1, &var_210h);\n    if (arg_1ch != 0) {\n        arg_18h = \"GETGUID:Error get cache file path;SHGetFolderPath returns(%d)\";\n        arg_14h = 0x2000002;\n        arg_10h = 0x5c;\n        arg_ch = L\"GetGUIDInternal.cpp\";\n        arg_8h = fcn.0042c180(extraout_ECX);\n        fcn.0042c3c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n        fcn.004529f8(uVar1);\n        return;\n    }\n    if (var_210h == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.00453054(&var_210h);\n    }\n    fcn.00402667(&var_210h, uVar1);\n    uVar1 = fcn.00453054(L\"\\\\housecall.guid.cache\");\n    fcn.0040186c(L\"\\\\housecall.guid.cache\", uVar1);\n    fcn.004529f8(uVar1);\n    return;\n}\n",
        "token_count": 466
    },
    "00432650": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t * __fastcall fcn.00432650(uint32_t *param_1)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint *puVar5;\n    int32_t *piVar6;\n    int32_t *in_FS_OFFSET;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    uStack12 = 0x48b063;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    var_4h = 0;\n    if (*0x4b79b8 != 1) {\n        piVar6 = 0x4b79b8;\n        do {\n            puVar3 = fcn.0045306d(8);\n            var_4h._0_1_ = 1;\n            if (puVar3 == NULL) {\n                puVar3 = NULL;\n            }\n            else {\n                *puVar3 = 0;\n                puVar3[1] = 0;\n                uVar4 = fcn.00433e50(0, 0);\n                *puVar3 = uVar4;\n            }\n            var_4h = var_4h._1_3_ << 8;\n            puVar1 = param_1[1];\n            puVar5 = &var_10h;\n            var_10h = puVar3;\n            if (puVar5 < puVar1) {\n                puVar5 = *param_1;\n                if (&var_10h < puVar5) goto code_r0x00432721;\n                if (puVar1 == param_1[2]) {\n                    fcn.00433a80(puVar5, uVar2);\n                }\n                if (param_1[1] != NULL) {\n                    *param_1[1] = *(*param_1 + (&var_10h - puVar5 >> 2) * 4);\n                }\n            }\n            else {\ncode_r0x00432721:\n                if (puVar1 == param_1[2]) {\n                    fcn.00433a80(puVar5, uVar2);\n                }\n                if (param_1[1] != NULL) {\n                    *param_1[1] = puVar3;\n                }\n            }\n            param_1[1] = param_1[1] + 4;\n            piVar6 = piVar6 + 1;\n        } while (*piVar6 != 1);\n    }\n    *in_FS_OFFSET = var_ch;\n    return param_1;\n}\n",
        "token_count": 662
    },
    "004327f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004327f0(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    int32_t iVar5;\n    \n    iVar3 = 0;\n    iVar5 = *0x4b79b8;\n    if (*0x4b79b8 != 1) {\n        do {\n            if (arg_8h == iVar5) {\n                piVar1 = *(*in_ECX + iVar3 * 4);\n                iVar5 = *piVar1;\n                iVar3 = fcn.00433e90(iVar5, *(iVar5 + 4), &arg_ch);\n                if (piVar1[1] == 0xffffffe) {\n                    fcn.0044e7eb(\"list<T> too long\");\n                    pcVar2 = swi(3);\n                    uVar4 = (*pcVar2)();\n                    return uVar4;\n                }\n                piVar1[1] = piVar1[1] + 1;\n                *(iVar5 + 4) = iVar3;\n                **(iVar3 + 4) = iVar3;\n                return 1;\n            }\n            iVar5 = *(iVar3 * 4 + 0x4b79bc);\n            iVar3 = iVar3 + 1;\n        } while (iVar5 != 1);\n    }\n    return 0;\n}\n",
        "token_count": 328
    },
    "00432870": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00432870(int32_t *param_1)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t **ppiVar7;\n    int32_t extraout_ECX;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    int32_t **ppiVar11;\n    uint *puVar12;\n    int32_t *in_FS_OFFSET;\n    ulong uVar13;\n    char *in_stack_fffffec8;\n    uint var_104h;\n    uint var_100h;\n    int32_t **var_fch;\n    uint32_t var_f8h;\n    uint var_f4h;\n    int32_t **var_f0h;\n    int32_t *var_ech;\n    uint32_t var_e8h;\n    int32_t *var_e4h;\n    uint var_e0h;\n    int32_t *piStack224;\n    uint var_d8h;\n    uint var_20h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48b111;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    iVar8 = 0;\n    if (*0x4b79b8 != 1) {\n        iVar6 = 0;\n        do {\n            if (*(*(*param_1 + iVar6) + 4) != 0) {\n                ppiVar1 = *(*param_1 + iVar8 * 4);\n                if (0x1 < ppiVar1[1]) {\n                    var_e4h = NULL;\n                    var_ech = NULL;\n                    ppiVar7 = fcn.00433e50(0, 0);\n                    in_stack_fffffec8 = &var_e0h;\n                    var_4h = 0;\n                    var_f0h = ppiVar7;\n                    fcn.00459d93(in_stack_fffffec8, 8, 0x1a, 0x433940);\n                    var_4h = CONCAT31(var_4h._1_3_, 1);\n                    var_e8h = 0;\n                    piVar2 = ppiVar1[1];\n                    piVar5 = NULL;\n                    goto joined_r0x0043295c;\n                }\n                break;\n            }\n            iVar8 = iVar8 + 1;\n            iVar6 = iVar8 * 4;\n        } while (*(iVar6 + 0x4b79b8) != 1);\n    }\n    goto code_r0x004328d1;\njoined_r0x0043295c:\n    if (piVar2 == NULL) goto code_r0x00432ae5;\n    piVar2 = *ppiVar7;\n    piVar3 = **ppiVar1;\n    iVar8 = *piVar3;\n    if (&var_f0h != ppiVar1) {\n        uVar10 = 0xffffffe - piVar5;\n        if (uVar10 == 0) goto code_r0x00432b72;\n        var_ech = piVar5 + 1;\n        ppiVar1[1] = ppiVar1[1] + -1;\n        var_e4h = var_ech;\n    }\n    *piVar3[1] = iVar8;\n    **(iVar8 + 4) = piVar2;\n    *piVar2[1] = piVar3;\n    iVar6 = piVar2[1];\n    piVar2[1] = *(iVar8 + 4);\n    *(iVar8 + 4) = piVar3[1];\n    piVar3[1] = iVar6;\n    uVar10 = 0;\n    var_f8h = 0;\n    if (var_e8h == 0) {\ncode_r0x00432a88:\n        ppiVar11 = &var_e0h + var_f8h * 2;\n        if (ppiVar11 != &var_f0h) {\n            var_f0h = *ppiVar11;\n            *ppiVar11 = ppiVar7;\n            var_ech = (&piStack224)[var_f8h * 2];\n            (&piStack224)[var_f8h * 2] = var_e4h;\n            var_e4h = var_ech;\n            ppiVar7 = var_f0h;\n        }\n        if (var_f8h == var_e8h) {\n            var_e8h = var_e8h + 1;\n        }\n    }\n    else {\n        ppiVar11 = &var_e0h;\n        do {\n            if (ppiVar11[1] == NULL) break;\n            in_stack_fffffec8 = &var_f0h;\n            fcn.00433af0(in_stack_fffffec8);\n            if (ppiVar11 == &var_f0h) {\n                var_e4h = var_ech;\n            }\n            else {\n                ppiVar7 = *ppiVar11;\n                *ppiVar11 = var_f0h;\n                var_e4h = ppiVar11[1];\n                ppiVar11[1] = var_ech;\n                var_f0h = ppiVar7;\n                var_ech = var_e4h;\n            }\n            uVar10 = uVar10 + 1;\n            ppiVar11 = ppiVar11 + 2;\n            ppiVar7 = var_f0h;\n            var_e4h = var_ech;\n        } while (uVar10 < var_e8h);\n        var_f8h = uVar10;\n        if (uVar10 != 0x19) goto code_r0x00432a88;\n        in_stack_fffffec8 = &var_f0h;\n        fcn.00433af0(in_stack_fffffec8);\n        var_e4h = var_ech;\n        ppiVar7 = var_f0h;\n    }\n    piVar2 = ppiVar1[1];\n    piVar5 = var_e4h;\n    goto joined_r0x0043295c;\ncode_r0x00432ae5:\n    if (1 < var_e8h) {\n        iVar8 = var_e8h - 1;\n        puVar12 = &var_d8h;\n        do {\n            in_stack_fffffec8 = puVar12 + -2;\n            fcn.00433af0(in_stack_fffffec8);\n            puVar12 = puVar12 + 2;\n            iVar8 = iVar8 + -1;\n        } while (iVar8 != 0);\n    }\n    var_fch = &var_e8h + var_e8h * 2;\n    iVar8 = **ppiVar1;\n    if ((ppiVar1 != var_fch) && (uVar10 = (&var_e4h)[var_e8h * 2],  uVar10 != 0)) {\n        var_e4h = ppiVar1[1];\n        uVar13 = CONCAT44(**var_fch, *var_fch);\n        var_e8h = 0xffffffe - ppiVar1[1];\n        if (var_e8h < uVar10) {\ncode_r0x00432b72:\n            in_stack_fffffec8 = \"list<T> too long\";\n            uVar13 = fcn.0044e7eb(\"list<T> too long\");\n            iVar8 = extraout_ECX;\n        }\n        iVar9 = uVar13 >> 0x20;\n        iVar6 = uVar13;\n        ppiVar1[1] = uVar10 + var_e4h;\n        var_fch[1] = NULL;\n        **(iVar9 + 4) = iVar6;\n        **(iVar6 + 4) = iVar8;\n        **(iVar8 + 4) = iVar9;\n        uVar4 = *(iVar8 + 4);\n        *(iVar8 + 4) = *(iVar6 + 4);\n        *(iVar6 + 4) = *(iVar9 + 4);\n        *(iVar9 + 4) = uVar4;\n    }\n    var_4h = var_4h & 0xffffff00;\n    fcn.00459cc6(&var_e0h, 8, 0x1a, 0x433960);\n    ppiVar1 = *ppiVar7;\n    *ppiVar7 = ppiVar7;\n    ppiVar7[1] = ppiVar7;\n    while (ppiVar1 != ppiVar7) {\n        ppiVar11 = *ppiVar1;\n        fcn.00452a07(ppiVar1);\n        ppiVar1 = ppiVar11;\n    }\n    fcn.00452a07(ppiVar7);\ncode_r0x004328d1:\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(in_stack_fffffec8);\n    return;\n}\n",
        "token_count": 2046
    },
    "00433030": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00433030(char *arg_8h, uint samDesired, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint extraout_ECX;\n    uint uVar2;\n    char16_t *pcVar3;\n    uint uVar4;\n    uint uVar5;\n    char *pcVar6;\n    char *arg_18h;\n    uint uVar7;\n    uint uVar8;\n    uint *puVar9;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t phkResult;\n    int32_t var_4h;\n    \n    puVar9 = &phkResult;\n    uVar2 = 0;\n    uVar8 = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000002);\n    if (iVar1 != 0) {\n        if (iVar1 == 2) {\n            uVar7 = 0x80000002;\n            pcVar6 = \"GetGUID: registry (%x,%s) does not exist\";\n            uVar5 = 0x2000008;\n            uVar4 = 0x181;\n            pcVar3 = L\"GetGUIDInternal.cpp\";\n            uVar8 = fcn.0042c180();\n            fcn.0042c3c0(uVar8, pcVar3, uVar4, uVar5, pcVar6, uVar7);\n        }\n        else {\n            (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar7 = 0x80000002;\n            pcVar6 = \"GetGUID: RegOpenKeyEx(%x,%s) failed: %lu\";\n            uVar5 = 0x2000002;\n            uVar4 = 0x183;\n            pcVar3 = L\"GetGUIDInternal.cpp\";\n            uVar8 = fcn.0042c180(extraout_ECX);\n            fcn.0042c3c0(uVar8, pcVar3, uVar4, uVar5, pcVar6, uVar7);\n        }\n        goto code_r0x004331c9;\n    }\n    var_4h = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(phkResult, arg_8h, 0, 0, 0, &var_4h);\n    if (iVar1 != 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n        uVar5 = 0x80000002;\n        pcVar6 = \"GetGUID: query data(%x,%s,%s) length failed: %lu\";\n        uVar4 = 0x2000002;\n        uVar8 = 0x18c;\n        pcVar3 = L\"GetGUIDInternal.cpp\";\n        uVar2 = fcn.0042c180();\n        fcn.0042c3c0(uVar2, pcVar3, uVar8, uVar4, pcVar6, uVar5);\n        uVar2 = 0;\n        goto code_r0x004331c9;\n    }\n    var_ch = var_4h + 1;\n    pcVar6 = fcn.0044f469(var_ch);\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(phkResult, arg_8h, 0, &var_10h, pcVar6, &var_ch);\n    if (iVar1 == 0) {\n        if (var_10h != 1) {\n            arg_18h = \"GetGUID: registry(%x,%s,%s) type mismatch: %lu\";\n            uVar2 = 0x19b;\n            goto code_r0x0043317d;\n        }\n        pcVar6[var_4h] = '\\0';\n        if (*pcVar6 == '\\0') {\n            var_10h = 0;\n        }\n        else {\n            var_10h = fcn.00453900(pcVar6, uVar8, samDesired, puVar9);\n        }\n        arg_8h = pcVar6;\n        fcn.0040220b(pcVar6, var_10h);\n        uVar2 = 1;\n    }\n    else {\n        var_10h = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        arg_18h = \"GetGUID: RegQueryValueExA(%x,%s,%s) failed: %lu\";\n        uVar2 = 0x195;\ncode_r0x0043317d:\n        uVar5 = 0x80000002;\n        uVar4 = 0x2000002;\n        pcVar3 = L\"GetGUIDInternal.cpp\";\n        uVar8 = fcn.0042c180();\n        fcn.0042c3c0(uVar8, pcVar3, uVar2, uVar4, arg_18h, uVar5);\n        uVar2 = 0;\n    }\n    if (pcVar6 != NULL) {\n        fcn.00456859(pcVar6, arg_8h, var_10h);\n    }\ncode_r0x004331c9:\n    if (phkResult != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n    }\n    return uVar2;\n}\n",
        "token_count": 1173
    },
    "004331e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004331e0(uint arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *arg_10h_00;\n    char *arg_1ch;\n    uint arg_8h_00;\n    int32_t *in_FS_OFFSET;\n    char16_t *arg_ch_00;\n    uint arg_10h_01;\n    uint arg_14h;\n    char *arg_18h;\n    uint in_stack_ffffffc8;\n    uint var_30h;\n    uint *var_2ch;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x48b228;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_18h = 0xf;\n    var_1ch = 0;\n    var_2ch = var_2ch & 0xffffff00;\n    var_4h = 0;\n    var_14h = uVar1;\n    iVar2 = fcn.00433030(arg_8h, arg_ch, &var_2ch);\n    if (iVar2 != 0) {\n        if (var_1ch - 0x24U < 2) {\n            arg_10h_00 = &var_2ch;\n            if (0xf < var_18h) {\n                arg_10h_00 = var_2ch;\n            }\n            fcn.004537a0(arg_10h, 0x25, arg_10h_00);\n        }\n        else {\n            if ((arg_ch & 0x100) == 0) {\n                arg_1ch = 0x4a73f4;\n                if ((arg_ch & 0x200) == 0) {\n                    arg_1ch = \"native\";\n                }\n            }\n            else {\n                arg_1ch = 0x4a73f0;\n            }\n            arg_18h = \"GetGUID(%s): %s\\\\%s GUID length mismatch: %d\";\n            arg_14h = 0x2000002;\n            arg_10h_01 = 0x1bb;\n            arg_ch_00 = L\"GetGUIDInternal.cpp\";\n            arg_8h_00 = fcn.0042c180();\n            fcn.0042c3c0(arg_8h_00, arg_ch_00, arg_10h_01, arg_14h, arg_18h, arg_1ch);\n        }\n    }\n    if (0xf < var_18h) {\n        fcn.00452a07(var_2ch, uVar1);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(in_stack_ffffffc8);\n    return;\n}\n",
        "token_count": 682
    },
    "00433880": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433880(ulong *arg_8h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    piVar3 = *0x4b9848;\n    if (*0x4b9848 != *0x4b984c) {\n        while( true ) {\n            puVar1 = *piVar3;\n            iVar2 = (***puVar1)(arg_8h);\n            if (iVar2 != 0) break;\n            piVar3 = piVar3 + 1;\n            if (piVar3 == *0x4b984c) {\n                return;\n            }\n        }\n        if ((puVar1[1] != 0) && (iVar2 = fcn.004336b0(),  iVar2 != 0)) {\n            fcn.004324d0(*arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 208
    },
    "00433a80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00433a80(int32_t *param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    if (param_1[2] - param_1[1] >> 2 == 0) {\n        iVar3 = param_1[1] - *param_1 >> 2;\n        if (iVar3 == 0x3fffffff) {\n            fcn.0044e7eb(\"vector<T> too long\");\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        uVar4 = iVar3 + 1;\n        uVar2 = param_1[2] - *param_1 >> 2;\n        if (0x3fffffff - (uVar2 >> 1) < uVar2) {\n            uVar2 = 0;\n            if (uVar4 != 0) {\n                uVar2 = uVar4;\n            }\n            fcn.00433dd0(uVar2);\n            return;\n        }\n        uVar2 = uVar2 + (uVar2 >> 1);\n        if (uVar2 < uVar4) {\n            uVar2 = uVar4;\n        }\n        fcn.00433dd0(uVar2);\n    }\n    return;\n}\n",
        "token_count": 302
    },
    "00433ee0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00433ee0(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint *in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_54h;\n    uint *var_2ch;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x48b2d6;\n    var_ch = *in_FS_OFFSET;\n    var_14h = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar1 = *0x4b9844;\n    *in_ECX = 0;\n    var_54h._0_1_ = '\\0';\n    if ((uVar1 & 1) == 0) {\n        *0x4b9844 = uVar1 | 1;\n        var_4h = 0;\n        fcn.00433430(var_14h);\n        fcn.00453ab0(0x48bab0);\n    }\n    var_4h = 0xffffffff;\n    fcn.00433880(&var_54h);\n    var_18h = 0xf;\n    var_1ch = 0;\n    var_2ch = var_2ch & 0xffffff00;\n    if (var_54h == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.00453900(&var_54h);\n    }\n    fcn.0040220b(&var_54h, uVar2);\n    var_4h = 1;\n    uVar2 = fcn.00453900(0x4a7618);\n    fcn.004096dc(0x4a7618, uVar2);\n    fcn.0040190f(arg_8h, 0, 0xffffffff);\n    puVar3 = &var_2ch;\n    if (0xf < var_18h) {\n        puVar3 = var_2ch;\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 0, puVar3);\n    *in_ECX = uVar2;\n    if (0xf < var_18h) {\n        fcn.00452a07(var_2ch);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(arg_8h);\n    return;\n}\n",
        "token_count": 596
    },
    "004345d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.004345d0(uint arg_8h)\n\n{\n    code **ppcVar1;\n    uint32_t uVar2;\n    ushort uVar3;\n    uint *puVar4;\n    uint uVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint32_t arg_8h_00;\n    int32_t *in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_18h;\n    int32_t *var_14h;\n    code **var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x48b3ea;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    *in_ECX = 0x4a43c4;\n    in_ECX[0x1c] = vtable.std::basic_ios_wchar_t__struct_std::char_traits_wchar_t__.0;\n    var_4h = 0;\n    *(in_ECX + *(*in_ECX + 4)) = vtable.std::basic_istream_wchar_t__struct_std::char_traits_wchar_t__.0;\n    var_18h = 1;\n    *(*(*in_ECX + 4) + -4 + in_ECX) = *(*in_ECX + 4) + -0x18;\n    in_ECX[2] = 0;\n    in_ECX[3] = 0;\n    iVar7 = *(*in_ECX + 4);\n    *(in_ECX + iVar7 + 0x30) = 0;\n    *(in_ECX + iVar7 + 8) = 0;\n    *(in_ECX + iVar7 + 0x10) = 0;\n    *(in_ECX + iVar7 + 0x14) = 0x201;\n    *(in_ECX + iVar7 + 0x18) = 6;\n    *(in_ECX + iVar7 + 0x1c) = 0;\n    *(in_ECX + iVar7 + 0x20) = 0;\n    *(in_ECX + iVar7 + 0x24) = 0;\n    *(in_ECX + iVar7 + 0x28) = 0;\n    *(in_ECX + iVar7 + 0x2c) = 0;\n    var_14h = in_ECX;\n    fcn.0040e96e(0, 0);\n    puVar4 = fcn.0045306d(4);\n    if (puVar4 == NULL) {\n        puVar4 = NULL;\n    }\n    else {\n        uVar5 = fcn.0044ec0d(1);\n        *puVar4 = uVar5;\n    }\n    *(in_ECX + iVar7 + 0x30) = puVar4;\n    ppcVar1 = in_ECX + 4;\n    *(in_ECX + iVar7 + 0x38) = ppcVar1;\n    *(in_ECX + iVar7 + 0x3c) = 0;\n    var_10h = ppcVar1;\n    uVar5 = fcn.0040e1fb(&var_1ch);\n    var_4h = 2;\n    piVar6 = fcn.0040e157(uVar5);\n    var_4h = CONCAT31(var_4h._1_3_, 1);\n    if (var_1ch != NULL) {\n        puVar4 = (**(*var_1ch + 8))();\n        if (puVar4 != NULL) {\n            (***puVar4)(1);\n        }\n    }\n    uVar3 = (**(*piVar6 + 0x30))(0x20);\n    *(in_ECX + iVar7 + 0x40) = uVar3;\n    if (*(in_ECX + iVar7 + 0x38) == 0) {\n        fcn.0040e96e(*(in_ECX + iVar7 + 0xc) | 4, 0);\n    }\n    var_4h = 3;\n    *(in_ECX + *(*in_ECX + 4)) = vtable.std::basic_ifstream_wchar_t__struct_std::char_traits_wchar_t__.0;\n    *(*(*in_ECX + 4) + -4 + in_ECX) = *(*in_ECX + 4) + -0x70;\n    *ppcVar1 = vtable.std::basic_streambuf_wchar_t__struct_std::char_traits_wchar_t__.0;\n    puVar4 = fcn.0045306d(4);\n    if (puVar4 == NULL) {\n        puVar4 = NULL;\n    }\n    else {\n        uVar5 = fcn.0044ec0d(1);\n        *puVar4 = uVar5;\n    }\n    in_ECX[0x11] = puVar4;\n    in_ECX[7] = in_ECX + 5;\n    in_ECX[0xb] = in_ECX + 9;\n    in_ECX[0xc] = in_ECX + 10;\n    in_ECX[0xf] = in_ECX + 0xd;\n    var_10h[0xc] = in_ECX + 0xe;\n    in_ECX[6] = 0;\n    *var_10h[8] = 0;\n    *var_10h[0xc] = 0;\n    *var_10h[3] = 0;\n    *var_10h[7] = 0;\n    *var_10h[0xb] = 0;\n    var_10h[3] = in_ECX + 5;\n    *var_10h = vtable.std::basic_filebuf_wchar_t__struct_std::char_traits_wchar_t__.0;\n    *(var_10h + 0x13) = 0;\n    *(var_10h + 0x46) = 0;\n    var_10h[7] = in_ECX + 9;\n    var_10h[8] = in_ECX + 10;\n    var_10h[0xb] = in_ECX + 0xd;\n    var_10h[0xc] = in_ECX + 0xe;\n    var_10h[4] = var_10h + 2;\n    var_10h[2] = NULL;\n    *var_10h[8] = 0;\n    *var_10h[0xc] = 0;\n    *var_10h[3] = 0;\n    *var_10h[7] = 0;\n    *var_10h[0xb] = 0;\n    var_10h[0x14] = NULL;\n    var_10h[0x12] = *0x4b96f0;\n    var_10h[0x10] = NULL;\n    var_4h = CONCAT31(var_4h._1_3_, 4);\n    iVar7 = fcn.00434a30(arg_8h);\n    if (iVar7 == 0) {\n        uVar2 = *(*(*var_14h + 4) + 0xc + var_14h);\n        arg_8h_00 = uVar2 | 2;\n        if (*(var_14h + *(*var_14h + 4) + 0x38) == 0) {\n            arg_8h_00 = uVar2 | 6;\n        }\n        fcn.0040e96e(arg_8h_00, 0);\n        *in_FS_OFFSET = var_ch;\n        return var_14h;\n    }\n    *in_FS_OFFSET = var_ch;\n    return var_14h;\n}\n",
        "token_count": 1750
    },
    "004348c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004348c0(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t arg_8h;\n    int32_t *piVar4;\n    \n    if (param_1[0x18] == 0) {\n        piVar4 = NULL;\n    }\n    else {\n        cVar2 = fcn.00414970();\n        piVar4 = param_1 + 4;\n        if (cVar2 == '\\0') {\n            piVar4 = NULL;\n        }\n        iVar3 = fcn.004567e2(param_1[0x18]);\n        if (iVar3 != 0) {\n            piVar4 = NULL;\n        }\n    }\n    param_1[7] = param_1 + 5;\n    param_1[0xb] = param_1 + 9;\n    param_1[0xc] = param_1 + 10;\n    *(param_1 + 0x17) = 0;\n    *(param_1 + 0x56) = 0;\n    param_1[0xf] = param_1 + 0xd;\n    param_1[8] = param_1 + 6;\n    param_1[0x10] = param_1 + 0xe;\n    param_1[6] = 0;\n    *param_1[0xc] = 0;\n    *param_1[0x10] = 0;\n    *param_1[7] = 0;\n    *param_1[0xb] = 0;\n    *param_1[0xf] = 0;\n    param_1[0x18] = 0;\n    param_1[0x16] = *0x4b96f0;\n    param_1[0x14] = 0;\n    if (piVar4 == NULL) {\n        uVar1 = *(*(*param_1 + 4) + 0xc + param_1);\n        arg_8h = uVar1 | 2;\n        if (*(param_1 + *(*param_1 + 4) + 0x38) == 0) {\n            arg_8h = uVar1 | 6;\n        }\n        fcn.0040e96e(arg_8h, 0);\n    }\n    return;\n}\n",
        "token_count": 530
    },
    "00434990": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434990(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    \n    iVar4 = param_1[2] - param_1[1];\n    iVar2 = iVar4 >> 0x1f;\n    if (iVar4 / 0x30 + iVar2 == iVar2) {\n        iVar2 = (param_1[1] - *param_1) / 0x30;\n        if (iVar2 == 0x5555555) {\n            fcn.0044e7eb(\"vector<T> too long\");\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        uVar3 = (param_1[2] - *param_1) / 0x30;\n        uVar5 = iVar2 + 1;\n        if (0x5555555 - (uVar3 >> 1) < uVar3) {\n            uVar3 = 0;\n            if (uVar5 != 0) {\n                uVar3 = uVar5;\n            }\n            fcn.00434bc0(uVar3);\n            return;\n        }\n        uVar3 = uVar3 + (uVar3 >> 1);\n        if (uVar3 < uVar5) {\n            uVar3 = uVar5;\n        }\n        fcn.00434bc0(uVar3);\n    }\n    return;\n}\n",
        "token_count": 342
    },
    "00434a30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00434a30(int32_t *arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    int32_t *piVar4;\n    uint *puVar5;\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_01;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48b4a8;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (*(in_ECX + 0x50) == 0) {\n        iVar3 = fcn.0044f426(arg_8h, 1, 0x40);\n        if (iVar3 != 0) {\n            *(in_ECX + 0xc) = in_ECX + 4;\n            *(in_ECX + 0x1c) = in_ECX + 0x14;\n            *(in_ECX + 0x20) = in_ECX + 0x18;\n            *(in_ECX + 0x4c) = 1;\n            *(in_ECX + 0x46) = 0;\n            *(in_ECX + 0x2c) = in_ECX + 0x24;\n            puVar5 = in_ECX + 8;\n            *(in_ECX + 0x10) = puVar5;\n            *(in_ECX + 0x30) = in_ECX + 0x28;\n            *puVar5 = 0;\n            **(in_ECX + 0x20) = 0;\n            **(in_ECX + 0x30) = 0;\n            **(in_ECX + 0xc) = 0;\n            **(in_ECX + 0x1c) = 0;\n            **(in_ECX + 0x2c) = 0;\n            *(in_ECX + 0x50) = iVar3;\n            *(in_ECX + 0x48) = *0x4b96f0;\n            arg_8h_01 = &arg_8h;\n            *(in_ECX + 0x40) = 0;\n            arg_8h_00 = fcn.0040a951(arg_8h_01);\n            var_4h = 0;\n            piVar4 = fcn.00415128(arg_8h_00);\n            cVar1 = (**(*piVar4 + 0xc))(arg_8h_01, uVar2);\n            if (cVar1 == '\\0') {\n                *(in_ECX + 0xc) = in_ECX + 4;\n                *(in_ECX + 0x1c) = in_ECX + 0x14;\n                *(in_ECX + 0x20) = in_ECX + 0x18;\n                *(in_ECX + 0x2c) = in_ECX + 0x24;\n                *(in_ECX + 0x40) = piVar4;\n                *(in_ECX + 0x10) = puVar5;\n                *(in_ECX + 0x30) = in_ECX + 0x28;\n                *puVar5 = 0;\n                **(in_ECX + 0x20) = 0;\n                **(in_ECX + 0x30) = 0;\n                **(in_ECX + 0xc) = 0;\n                **(in_ECX + 0x1c) = 0;\n                **(in_ECX + 0x2c) = 0;\n            }\n            else {\n                *(in_ECX + 0x40) = 0;\n            }\n            var_4h = 0xffffffff;\n            if (arg_8h != NULL) {\n                puVar5 = (**(*arg_8h + 8))();\n                if (puVar5 != NULL) {\n                    (***puVar5)(1);\n                }\n            }\n            *in_FS_OFFSET = var_ch;\n            return in_ECX;\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return 0;\n}\n",
        "token_count": 977
    },
    "00434db0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00434db0(int32_t *param_1, uint *param_2, int16_t param_3)\n\n{\n    uint32_t arg_8h;\n    int32_t *piVar1;\n    int32_t iVar2;\n    bool bVar3;\n    char cVar4;\n    int16_t iVar5;\n    uint *puVar6;\n    uint32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    uint32_t arg_ch;\n    int16_t *piVar7;\n    int16_t extraout_DX;\n    int16_t extraout_DX_00;\n    int16_t iVar8;\n    uint32_t uVar9;\n    int32_t *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint var_ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_11h;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48b390;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    bVar3 = false;\n    uVar9 = 0;\n    piVar1 = *(*(*param_1 + 4) + 0x38 + param_1);\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 4))();\n    }\n    var_4h = 0;\n    cVar4 = fcn.0040e327(1);\n    if (cVar4 != '\\0') {\n        var_4h = 2;\n        param_2[4] = 0;\n        puVar6 = param_2;\n        if (7 < param_2[5]) {\n            puVar6 = *param_2;\n        }\n        *puVar6 = 0;\n        piVar1 = *(*(*param_1 + 4) + 0x38 + param_1);\n        if ((*piVar1[7] == NULL) || (*piVar1[0xb] < 1)) {\n            iVar5 = (**(*piVar1 + 0x18))();\n        }\n        else {\n            iVar5 = **piVar1[7];\n        }\n        while (iVar5 != -1) {\n            if (iVar5 == var_8h) {\n                bVar3 = true;\n                piVar1 = *(*(*param_1 + 4) + 0x38 + param_1);\n                if (*piVar1[7] != 0) {\n                    iVar2 = *piVar1[0xb];\n                    if (0 < iVar2) {\n                        *piVar1[0xb] = iVar2 + -1;\n                        *piVar1[7] = *piVar1[7] + 2;\n                        goto code_r0x00435034;\n                    }\n                }\n                (**(*piVar1 + 0x1c))();\n                goto code_r0x00435034;\n            }\n            arg_ch = param_2[4];\n            if (0x7ffffffd < arg_ch) {\n                uVar9 = 2;\n                goto code_r0x00435034;\n            }\n            iVar8 = iVar5;\n            if (-arg_ch - 1 < 2) {\n                fcn.0044e7eb(\"string too long\");\n                arg_ch = extraout_ECX;\n                iVar8 = extraout_DX;\n            }\n            arg_8h = arg_ch + 1;\n            if (0x7ffffffe < arg_8h) {\n                fcn.0044e7eb(\"string too long\");\n                arg_ch = extraout_ECX_00;\n                iVar8 = extraout_DX_00;\n            }\n            if (param_2[5] < arg_8h) {\n                fcn.0040250f(arg_8h, arg_ch);\n                iVar8 = iVar5;\n            }\n            else if (arg_8h == 0) {\n                param_2[4] = 0;\n                puVar6 = param_2;\n                if (7 < param_2[5]) {\n                    puVar6 = *param_2;\n                }\n                *puVar6 = 0;\n            }\n            if (arg_8h != 0) {\n                puVar6 = param_2;\n                if (7 < param_2[5]) {\n                    puVar6 = *param_2;\n                }\n                *(puVar6 + param_2[4] * 2) = iVar8;\n                param_2[4] = arg_8h;\n                puVar6 = param_2;\n                if (7 < param_2[5]) {\n                    puVar6 = *param_2;\n                }\n                *(puVar6 + arg_8h * 2) = 0;\n            }\n            bVar3 = true;\n            piVar1 = *(*(*param_1 + 4) + 0x38 + param_1);\n            if (*piVar1[7] == 0) goto code_r0x00434fb2;\n            iVar2 = *piVar1[0xb];\n            if (iVar2 < 2) {\n                if (*piVar1[7] == 0) {\ncode_r0x00434fb2:\n                    iVar5 = (**(*piVar1 + 0x1c))();\n                }\n                else {\n                    iVar2 = *piVar1[0xb];\n                    if (iVar2 < 1) goto code_r0x00434fb2;\n                    *piVar1[0xb] = iVar2 + -1;\n                    piVar7 = *piVar1[7];\n                    *piVar1[7] = piVar7 + 1;\n                    iVar5 = *piVar7;\n                }\n                if (iVar5 == -1) {\n                    iVar5 = -1;\n                }\n                else if ((*piVar1[7] == NULL) || (*piVar1[0xb] < 1)) {\n                    iVar5 = (**(*piVar1 + 0x18))();\n                }\n                else {\n                    iVar5 = **piVar1[7];\n                }\n            }\n            else {\n                *piVar1[0xb] = iVar2 + -1;\n                piVar7 = *piVar1[7] + 1;\n                *piVar1[7] = piVar7;\n                iVar5 = *piVar7;\n            }\n        }\n        uVar9 = 1;\ncode_r0x00435034:\n        if (bVar3) goto code_r0x00435045;\n    }\n    uVar9 = uVar9 | 2;\ncode_r0x00435045:\n    var_4h = 1;\n    if (uVar9 != 0) {\n        uVar9 = *(param_1 + *(*param_1 + 4) + 0xc) | uVar9;\n        if (*(param_1 + *(*param_1 + 4) + 0x38) == 0) {\n            uVar9 = uVar9 | 4;\n        }\n        fcn.0040e96e(uVar9, 0);\n    }\n    var_4h = 0xffffffff;\n    piVar1 = *(*(*param_1 + 4) + 0x38 + param_1);\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))();\n    }\n    *in_FS_OFFSET = var_ch_2;\n    return param_1;\n}\n",
        "token_count": 1686
    },
    "00435e06": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.00435e06(uint arg_8h, uint32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t in_ECX;\n    int32_t unaff_ESI;\n    uint var_1h;\n    \n    iVar1 = (**(unaff_ESI + 4))(*(unaff_ESI + 0x1c), arg_8h, &var_1h, 1);\n    if (iVar1 == 1) {\n        *arg_ch = in_ECX >> 0x18;\n        return 0;\n    }\n    iVar1 = (**(unaff_ESI + 0x18))(*(unaff_ESI + 0x1c), arg_8h);\n    return -(iVar1 != 0);\n}\n",
        "token_count": 189
    },
    "00436043": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00436043(uint *arg_8h, uint *arg_ch, int32_t arg_10h, uint32_t arg_14h, int32_t arg_18h, uint32_t arg_1ch, \n            int32_t arg_20h, uint32_t arg_24h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint32_t var_3ch;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if (in_EAX == 0) {\n        return -0x66;\n    }\n    iVar1 = (**(in_EAX + 0x10))(*(in_EAX + 0x1c), *(in_EAX + 0x20), *(in_EAX + 0x34) + *(in_EAX + 0x2c), 0);\n    if ((iVar1 == 0) && (iVar1 = fcn.00435e81(&var_8h),  iVar1 == 0)) {\n        if (var_8h != 0x2014b50) {\n            var_4h = -0x67;\n        }\n    }\n    else {\n        var_4h = -1;\n    }\n    iVar1 = fcn.00435e3f(*(in_EAX + 0x20));\n    if (iVar1 != 0) {\n        var_4h = -1;\n    }\n    iVar1 = fcn.00435e3f(*(in_EAX + 0x20));\n    if (iVar1 != 0) {\n        var_4h = -1;\n    }\n    iVar1 = fcn.00435e3f(*(in_EAX + 0x20));\n    if (iVar1 != 0) {\n        var_4h = -1;\n    }\n    iVar1 = fcn.00435e3f(*(in_EAX + 0x20));\n    if (iVar1 != 0) {\n        var_4h = -1;\n    }\n    iVar1 = fcn.00435e81(&var_4ch);\n    if (iVar1 != 0) {\n        var_4h = -1;\n    }\n    fcn.00435ffc();\n    iVar1 = fcn.00435e81(&var_48h);\n    if (iVar1 != 0) {\n        var_4h = -1;\n    }\n    iVar1 = fcn.00435e81(&var_44h);\n    if (iVar1 != 0) {\n        var_4h = -1;\n    }\n    iVar1 = fcn.00435e81(&var_40h);\n    if (iVar1 != 0) {\n        var_4h = -1;\n    }\n    iVar1 = fcn.00435e3f(*(in_EAX + 0x20));\n    if (iVar1 != 0) {\n        var_4h = -1;\n    }\n    iVar1 = fcn.00435e3f(*(in_EAX + 0x20));\n    if (iVar1 != 0) {\n        var_4h = -1;\n    }\n    iVar1 = fcn.00435e3f(*(in_EAX + 0x20));\n    if (iVar1 != 0) {\n        var_4h = -1;\n    }\n    iVar1 = fcn.00435e3f(*(in_EAX + 0x20));\n    if (iVar1 != 0) {\n        var_4h = -1;\n    }\n    iVar1 = fcn.00435e3f(*(in_EAX + 0x20));\n    if (iVar1 != 0) {\n        var_4h = -1;\n    }\n    iVar1 = fcn.00435e81(&var_28h);\n    if (iVar1 != 0) {\n        var_4h = -1;\n    }\n    iVar1 = fcn.00435e81(&var_ch);\n    if (iVar1 != 0) {\n        var_4h = -1;\n    }\n    var_8h = var_3ch;\n    if (var_4h == 0) {\n        if (arg_10h != 0) {\n            uVar3 = arg_14h;\n            if (var_3ch < arg_14h) {\n                *(var_3ch + arg_10h) = 0;\n                uVar3 = var_3ch;\n            }\n            if (((var_3ch != 0) && (arg_14h != 0)) &&\n               (uVar2 = (**(in_EAX + 4))(*(in_EAX + 0x1c), *(in_EAX + 0x20), arg_10h, uVar3),  uVar2 != uVar3)) {\n                var_4h = -1;\n            }\n            var_8h = var_3ch - uVar3;\n            if (var_4h != 0) goto code_r0x004362ac;\n        }\n        if (arg_18h != 0) {\n            uVar3 = arg_1ch;\n            if (var_38h < arg_1ch) {\n                uVar3 = var_38h;\n            }\n            if (var_8h != 0) {\n                iVar1 = (**(in_EAX + 0x10))(*(in_EAX + 0x1c), *(in_EAX + 0x20), var_8h, 1);\n                if (iVar1 == 0) {\n                    var_8h = 0;\n                }\n                else {\n                    var_4h = -1;\n                }\n            }\n            if (((var_38h != 0) && (arg_1ch != 0)) &&\n               (uVar2 = (**(in_EAX + 4))(*(in_EAX + 0x1c), *(in_EAX + 0x20), arg_18h, uVar3),  uVar2 != uVar3)) {\n                var_4h = -1;\n            }\n            iVar1 = var_8h + (var_38h - uVar3);\n            goto code_r0x004362b2;\n        }\n    }\ncode_r0x004362ac:\n    iVar1 = var_8h + var_38h;\ncode_r0x004362b2:\n    if (var_4h == 0) {\n        if (arg_20h != 0) {\n            if (var_34h < arg_24h) {\n                *(var_34h + arg_20h) = 0;\n                var_8h = var_34h;\n            }\n            else {\n                var_8h = arg_24h;\n            }\n            if ((iVar1 != 0) && (iVar1 = (**(in_EAX + 0x10))(*(in_EAX + 0x1c), *(in_EAX + 0x20), iVar1, 1),  iVar1 != 0)\n               ) {\n                var_4h = -1;\n            }\n            if (((var_34h != 0) && (arg_24h != 0)) &&\n               (uVar3 = (**(in_EAX + 4))(*(in_EAX + 0x1c), *(in_EAX + 0x20), arg_20h, var_8h),  uVar3 != var_8h)) {\n                var_4h = -1;\n            }\n            if (var_4h != 0) {\n                return var_4h;\n            }\n        }\n        if (arg_8h != NULL) {\n            puVar4 = &var_5ch;\n            for (iVar1 = 0x14; iVar1 != 0; iVar1 = iVar1 + -1) {\n                *arg_8h = *puVar4;\n                puVar4 = puVar4 + 1;\n                arg_8h = arg_8h + 1;\n            }\n        }\n        if (arg_ch != NULL) {\n            *arg_ch = var_ch;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 1935
    },
    "0043640c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043640c(int32_t *arg_8h, int32_t *arg_ch, int32_t **arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_8h = 0;\n    *arg_ch = 0;\n    *arg_10h = NULL;\n    var_4h = 0;\n    iVar1 = (**(unaff_ESI + 0x10))\n                      (*(unaff_ESI + 0x1c), *(unaff_ESI + 0x20), *(unaff_ESI + 0x2c) + *(unaff_ESI + 0x98), 0);\n    if (iVar1 != 0) {\n        return -1;\n    }\n    iVar1 = fcn.00435e81(&var_ch);\n    if (iVar1 == 0) {\n        if (var_ch != 0x4034b50) {\n            var_4h = -0x67;\n        }\n    }\n    else {\n        var_4h = -1;\n    }\n    iVar1 = fcn.00435e3f(*(unaff_ESI + 0x20));\n    if (iVar1 != 0) {\n        var_4h = -1;\n    }\n    iVar1 = fcn.00435e3f(*(unaff_ESI + 0x20));\n    if (iVar1 != 0) {\n        var_4h = -1;\n    }\n    iVar1 = fcn.00435e3f(*(unaff_ESI + 0x20));\n    if (iVar1 == 0) {\n        if ((var_4h == 0) && ((iVar1 = *(unaff_ESI + 0x54),  var_8h != iVar1 || ((iVar1 != 0 && (iVar1 != 8)))))) {\n            var_4h = -0x67;\n        }\n    }\n    else {\n        var_4h = -1;\n    }\n    iVar1 = fcn.00435e81(&var_8h);\n    if (iVar1 != 0) {\n        var_4h = -1;\n    }\n    iVar1 = fcn.00435e81(&var_8h);\n    if (iVar1 == 0) {\n        if (((var_4h == 0) && (var_8h != *(unaff_ESI + 0x5c))) && ((var_ch & 8) == 0)) {\n            var_4h = -0x67;\n        }\n    }\n    else {\n        var_4h = -1;\n    }\n    iVar1 = fcn.00435e81(&var_8h);\n    if (iVar1 == 0) {\n        if (((var_4h == 0) && (var_8h != *(unaff_ESI + 0x60))) && ((var_ch & 8) == 0)) {\n            var_4h = -0x67;\n        }\n    }\n    else {\n        var_4h = -1;\n    }\n    iVar1 = fcn.00435e81(&var_8h);\n    if (iVar1 == 0) {\n        if (((var_4h == 0) && (var_8h != *(unaff_ESI + 100))) && ((var_ch & 8) == 0)) {\n            var_4h = -0x67;\n        }\n    }\n    else {\n        var_4h = -1;\n    }\n    iVar1 = fcn.00435e3f(*(unaff_ESI + 0x20));\n    if (iVar1 == 0) {\n        if ((var_4h == 0) && (var_ch != *(unaff_ESI + 0x68))) {\n            var_4h = -0x67;\n        }\n    }\n    else {\n        var_4h = -1;\n    }\n    *arg_8h = *arg_8h + var_ch;\n    iVar1 = fcn.00435e3f(*(unaff_ESI + 0x20));\n    if (iVar1 != 0) {\n        var_4h = -1;\n    }\n    *arg_ch = var_ch + 0x1e + *(unaff_ESI + 0x98);\n    *arg_10h = arg_8h;\n    *arg_8h = *arg_8h + arg_8h;\n    return var_4h;\n}\n",
        "token_count": 1016
    },
    "004365f3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004365f3(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar8 = 0;\n    var_4h = 0;\n    if (arg_8h == 0) {\n        var_4h = 0xffffff9a;\n    }\n    else {\n        piVar1 = *(arg_8h + 0x9c);\n        if (piVar1 == NULL) {\n            var_4h = 0xffffff9a;\n        }\n        else if (*piVar1 == 0) {\n            var_4h = 0xffffff9c;\n        }\n        else if (arg_10h == 0) {\n            var_4h = 0;\n        }\n        else {\n            piVar1[4] = arg_ch;\n            piVar1[5] = arg_10h;\n            if ((piVar1[0x17] < arg_10h) && (piVar1[0x23] == 0)) {\n                piVar1[5] = piVar1[0x17];\n            }\n            if ((piVar1[2] + piVar1[0x16] < arg_10h) && (piVar1[0x23] != 0)) {\n                piVar1[5] = piVar1[2] + piVar1[0x16];\n            }\n            while (uVar8 <= piVar1[5] && piVar1[5] != uVar8) {\n                if ((piVar1[2] == uVar8) && (uVar6 = piVar1[0x16],  uVar8 < uVar6)) {\n                    var_8h = 0x4000;\n                    if (uVar6 < 0x4000) {\n                        var_8h = uVar6;\n                    }\n                    iVar5 = (*piVar1[0x1c])(piVar1[0x1f], piVar1[0x20], piVar1[0x22] + piVar1[0xf], uVar8);\n                    if ((iVar5 != 0) ||\n                       (uVar6 = (*piVar1[0x19])(piVar1[0x1f], piVar1[0x20], *piVar1, var_8h),  uVar6 != var_8h)) {\n                        return 0xffffffff;\n                    }\n                    if (*(arg_8h + 0xa0) != uVar8) {\n                        if (var_8h != 0) {\n                            do {\n                                iVar5 = *piVar1;\n                                uVar3 = fcn.0044a8e6();\n                                *(iVar5 + uVar8) = *(iVar5 + uVar8) ^ uVar3;\n                                uVar4 = fcn.0044a8fd(*(*piVar1 + uVar8));\n                                *(uVar8 + *piVar1) = uVar4;\n                                uVar8 = uVar8 + 1;\n                            } while (uVar8 < var_8h);\n                        }\n                        uVar8 = 0;\n                    }\n                    piVar1[0xf] = piVar1[0xf] + var_8h;\n                    piVar1[0x16] = piVar1[0x16] - var_8h;\n                    piVar1[1] = *piVar1;\n                    piVar1[2] = var_8h;\n                }\n                if ((piVar1[0x21] == uVar8) || (piVar1[0x23] != uVar8)) {\n                    uVar6 = piVar1[2];\n                    if ((uVar6 == uVar8) && (piVar1[0x16] == uVar8)) {\n                        return var_4h;\n                    }\n                    uVar9 = piVar1[5];\n                    if (uVar6 <= piVar1[5]) {\n                        uVar9 = uVar6;\n                    }\n                    uVar6 = 0;\n                    uVar2 = uVar8;\n                    while (uVar2 < uVar9) {\n                        *(uVar6 + piVar1[4]) = *(uVar6 + piVar1[1]);\n                        uVar6 = uVar6 + 1;\n                        uVar2 = uVar6;\n                    }\n                    iVar5 = fcn.00436f02(piVar1[0x14], piVar1[4], uVar9);\n                    piVar1[0x17] = piVar1[0x17] - uVar9;\n                    piVar1[2] = piVar1[2] - uVar9;\n                    piVar1[5] = piVar1[5] - uVar9;\n                    piVar1[4] = piVar1[4] + uVar9;\n                    piVar1[1] = piVar1[1] + uVar9;\n                    piVar1[6] = piVar1[6] + uVar9;\n                    var_4h = var_4h + uVar9;\n                    piVar1[0x14] = iVar5;\n                }\n                else {\n                    iVar5 = piVar1[6];\n                    iVar7 = piVar1[4];\n                    uVar8 = fcn.00437126(piVar1 + 1, 2);\n                    if ((-1 < uVar8) && (piVar1[7] != 0)) {\n                        uVar8 = 0xfffffffd;\n                    }\n                    iVar5 = piVar1[6] - iVar5;\n                    iVar7 = fcn.00436f02(piVar1[0x14], iVar7, iVar5);\n                    piVar1[0x17] = piVar1[0x17] - iVar5;\n                    var_4h = var_4h + iVar5;\n                    piVar1[0x14] = iVar7;\n                    if (uVar8 == 1) {\n                        return var_4h;\n                    }\n                    if (uVar8 != 0) {\n                        return uVar8;\n                    }\n                }\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 1452
    },
    "0043686d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\ncode ** fcn.0043686d(uint param_1, code **param_2)\n\n{\n    int32_t iVar1;\n    code **ppcVar2;\n    code **ppcVar3;\n    code **ppcVar4;\n    code *apcStack204 [4];\n    code *pcStack188;\n    code *pcStack184;\n    uint uStack176;\n    int32_t iStack172;\n    int32_t iStack168;\n    int32_t iStack160;\n    uint32_t uStack144;\n    int32_t iStack140;\n    int32_t aiStack136 [22];\n    uint uStack48;\n    uint uStack44;\n    int32_t iStack24;\n    uint32_t uStack20;\n    int32_t iStack16;\n    int32_t iStack12;\n    int32_t iStack8;\n    \n    iStack8 = 0;\n    if (param_2 == NULL) {\n        fcn.00438495(apcStack204);\n    }\n    else {\n        ppcVar3 = apcStack204;\n        for (iVar1 = 8; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *ppcVar3 = *param_2;\n            param_2 = param_2 + 1;\n            ppcVar3 = ppcVar3 + 1;\n        }\n    }\n    iStack172 = (*apcStack204[0])(uStack176, param_1, 5);\n    if (iStack172 == 0) {\n        return NULL;\n    }\n    uStack20 = fcn.00435ef5(iStack172);\n    if (uStack20 == 0) {\n        iStack8 = -1;\n    }\n    iVar1 = (*pcStack188)(uStack176, iStack172, uStack20, 0);\n    if (iVar1 != 0) {\n        iStack8 = -1;\n    }\n    iVar1 = fcn.00435e81(&iStack12);\n    if (iVar1 != 0) {\n        iStack8 = -1;\n    }\n    iVar1 = fcn.00435e3f(iStack172);\n    if (iVar1 != 0) {\n        iStack8 = -1;\n    }\n    iVar1 = fcn.00435e3f(iStack172);\n    if (iVar1 != 0) {\n        iStack8 = -1;\n    }\n    iVar1 = fcn.00435e3f(iStack172);\n    if (iVar1 != 0) {\n        iStack8 = -1;\n    }\n    iVar1 = fcn.00435e3f(iStack172);\n    if (iVar1 != 0) {\n        iStack8 = -1;\n    }\n    if (((iStack24 != iStack168) || (iStack16 != 0)) || (iStack12 != 0)) {\n        iStack8 = -0x67;\n    }\n    iVar1 = fcn.00435e81(&iStack140);\n    if (iVar1 != 0) {\n        iStack8 = -1;\n    }\n    iVar1 = fcn.00435e81(aiStack136);\n    if (iVar1 != 0) {\n        iStack8 = -1;\n    }\n    iVar1 = fcn.00435e3f(iStack172);\n    if (iVar1 != 0) {\n        iStack8 = -1;\n    }\n    if (uStack20 < iStack140 + aiStack136[0]) {\n        if (iStack8 != 0) goto code_r0x004369d2;\n        iStack8 = -0x67;\n    }\n    if (iStack8 == 0) {\n        iStack160 = (uStack20 - iStack140) - aiStack136[0];\n        uStack144 = uStack20;\n        uStack48 = 0;\n        uStack44 = 0;\n        ppcVar2 = fcn.00456a6c(0xb4);\n        ppcVar3 = apcStack204;\n        ppcVar4 = ppcVar2;\n        for (iVar1 = 0x2d; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *ppcVar4 = *ppcVar3;\n            ppcVar3 = ppcVar3 + 1;\n            ppcVar4 = ppcVar4 + 1;\n        }\n        fcn.00436363(ppcVar2);\n        return ppcVar2;\n    }\ncode_r0x004369d2:\n    (*pcStack184)(uStack176, iStack172);\n    return NULL;\n}\n",
        "token_count": 1018
    },
    "00436a19": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00436a19(int32_t param_1)\n\n{\n    if (param_1 == 0) {\n        return 0xffffff9a;\n    }\n    if (*(param_1 + 0x9c) != 0) {\n        fcn.004367fc(param_1);\n    }\n    (**(param_1 + 0x14))(*(param_1 + 0x1c), *(param_1 + 0x20));\n    fcn.00455f3f(param_1);\n    return 0;\n}\n",
        "token_count": 121
    },
    "00436a4d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid __cdecl fcn.00436a4d(int32_t *arg_8h, int32_t *arg_ch, uint *arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    uint8_t *extraout_EDX;\n    int32_t *piVar6;\n    int32_t var_28h;\n    int32_t *var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b4f00 ^ &stack0xfffffffc;\n    var_24h = arg_ch;\n    var_14h = arg_18h;\n    if ((arg_8h == NULL) || (arg_8h[0xe] == 0)) goto code_r0x00436c91;\n    if (arg_8h[0x27] != 0) {\n        fcn.004367fc(arg_8h);\n    }\n    iVar3 = fcn.0043640c(&var_20h, &var_28h, &var_1ch);\n    if ((iVar3 != 0) || (piVar4 = fcn.00456a6c(0x90),  var_18h = piVar4,  piVar4 == NULL)) goto code_r0x00436c91;\n    iVar3 = fcn.00456a6c(0x4000);\n    piVar1 = var_18h;\n    piVar4[0x11] = var_28h;\n    piVar4[0x12] = var_1ch;\n    *piVar4 = iVar3;\n    piVar4[0x13] = 0;\n    piVar4[0x23] = arg_14h;\n    if (iVar3 == 0) {\ncode_r0x00436afb:\n        fcn.00455f3f(piVar4);\n    }\n    else {\n        piVar4[0x10] = 0;\n        if (var_24h != NULL) {\n            *var_24h = arg_8h[0x15];\n        }\n        if (arg_10h != NULL) {\n            *arg_10h = 6;\n            uVar5 = arg_8h[0x14] & 6;\n            if (uVar5 == 2) {\n                *arg_10h = 9;\n            }\n            else if (uVar5 == 4) {\n                *arg_10h = 2;\n            }\n            else if (uVar5 == 6) {\n                *arg_10h = 1;\n            }\n        }\n        piVar4[0x15] = arg_8h[0x17];\n        piVar4[0x14] = 0;\n        piVar4[0x21] = arg_8h[0x15];\n        piVar4[0x20] = arg_8h[8];\n        piVar4 = arg_8h;\n        piVar6 = piVar4 + 0x18;\n        for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *piVar6 = *piVar4;\n            piVar4 = piVar4 + 1;\n            piVar6 = piVar6 + 1;\n        }\n        var_18h[0x22] = arg_8h[0xb];\n        var_18h[6] = 0;\n        if ((arg_8h[0x15] == 8) && (arg_14h == 0)) {\n            var_18h[9] = 0;\n            var_18h[10] = 0;\n            var_18h[0xb] = 0;\n            var_18h[1] = 0;\n            var_18h[2] = 0;\n            iVar3 = fcn.00436f77(var_18h + 1, 0xfffffff1, 0x48c3fc, 0x38);\n            piVar4 = var_18h;\n            if (iVar3 != 0) goto code_r0x00436afb;\n            piVar1[0x10] = 1;\n        }\n        piVar1[0x16] = arg_8h[0x18];\n        piVar1[0x17] = arg_8h[0x19];\n        piVar1[0xf] = arg_8h[0x26] + 0x1e + var_20h;\n        piVar1[2] = 0;\n        arg_8h[0x27] = piVar1;\n        if (var_14h != 0) {\n            iVar3 = fcn.00436cb2();\n            arg_8h[0x2c] = iVar3;\n            fcn.0044a940(iVar3);\n            iVar3 = (*arg_8h[4])(arg_8h[7], arg_8h[8], *(arg_8h[0x27] + 0x88) + *(arg_8h[0x27] + 0x3c), 0);\n            if ((iVar3 == 0) && (uVar5 = (*arg_8h[1])(arg_8h[7], arg_8h[8], &var_10h, 0xc),  0xb < uVar5)) {\n                iVar3 = 0;\n                do {\n                    uVar2 = fcn.0044a8e6();\n                    *extraout_EDX = *extraout_EDX ^ uVar2;\n                    fcn.0044a8fd(*extraout_EDX);\n                    iVar3 = iVar3 + 1;\n                } while (iVar3 < 0xc);\n                *(arg_8h[0x27] + 0x3c) = *(arg_8h[0x27] + 0x3c) + 0xc;\n                arg_8h[0x28] = 1;\n            }\n        }\n    }\ncode_r0x00436c91:\n    fcn.004529f8(var_28h);\n    return;\n}\n",
        "token_count": 1460
    },
    "00436cb8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00436cb8(uint32_t arg_8h)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t *in_EDX;\n    uint32_t var_4h;\n    \n    uVar1 = ~in_EAX;\n    if (arg_8h != 0) {\n        do {\n            if ((in_EDX & 3) == 0) break;\n            uVar1 = uVar1 >> 8 ^ *(((*in_EDX ^ uVar1) & 0xff) * 4 + 0x48c408);\n            in_EDX = in_EDX + 1;\n            arg_8h = arg_8h - 1;\n        } while (arg_8h != 0);\n    }\n    if (0x1f < arg_8h) {\n        var_4h = arg_8h >> 5;\n        do {\n            uVar1 = uVar1 ^ *in_EDX;\n            uVar1 = *((uVar1 >> 0x10 & 0xff) * 4 + 0x48c808) ^ *((uVar1 >> 8 & 0xff) * 4 + 0x48cc08) ^\n                    *((uVar1 >> 0x18) * 4 + 0x48c408) ^ *((uVar1 & 0xff) * 4 + 0x48d008) ^ in_EDX[1];\n            uVar1 = *((uVar1 >> 0x10 & 0xff) * 4 + 0x48c808) ^ *((uVar1 >> 8 & 0xff) * 4 + 0x48cc08) ^\n                    *((uVar1 >> 0x18) * 4 + 0x48c408) ^ *((uVar1 & 0xff) * 4 + 0x48d008) ^ in_EDX[2];\n            uVar1 = *((uVar1 >> 0x10 & 0xff) * 4 + 0x48c808) ^ *((uVar1 >> 8 & 0xff) * 4 + 0x48cc08) ^\n                    *((uVar1 >> 0x18) * 4 + 0x48c408) ^ *((uVar1 & 0xff) * 4 + 0x48d008) ^ in_EDX[3];\n            uVar1 = *((uVar1 >> 0x10 & 0xff) * 4 + 0x48c808) ^ *((uVar1 >> 8 & 0xff) * 4 + 0x48cc08) ^\n                    *((uVar1 >> 0x18) * 4 + 0x48c408) ^ *((uVar1 & 0xff) * 4 + 0x48d008) ^ in_EDX[4];\n            uVar1 = *((uVar1 >> 0x10 & 0xff) * 4 + 0x48c808) ^ *((uVar1 >> 8 & 0xff) * 4 + 0x48cc08) ^\n                    *((uVar1 >> 0x18) * 4 + 0x48c408) ^ *((uVar1 & 0xff) * 4 + 0x48d008) ^ in_EDX[5];\n            uVar1 = *((uVar1 >> 0x10 & 0xff) * 4 + 0x48c808) ^ *((uVar1 >> 8 & 0xff) * 4 + 0x48cc08) ^\n                    *((uVar1 >> 0x18) * 4 + 0x48c408) ^ *((uVar1 & 0xff) * 4 + 0x48d008) ^ in_EDX[6];\n            arg_8h = arg_8h - 0x20;\n            uVar1 = *((uVar1 >> 0x10 & 0xff) * 4 + 0x48c808) ^ *((uVar1 >> 8 & 0xff) * 4 + 0x48cc08) ^\n                    *((uVar1 >> 0x18) * 4 + 0x48c408) ^ *((uVar1 & 0xff) * 4 + 0x48d008) ^ in_EDX[7];\n            in_EDX = in_EDX + 8;\n            uVar1 = *((uVar1 >> 0x10 & 0xff) * 4 + 0x48c808) ^ *((uVar1 >> 8 & 0xff) * 4 + 0x48cc08) ^\n                    *((uVar1 >> 0x18) * 4 + 0x48c408) ^ *((uVar1 & 0xff) * 4 + 0x48d008);\n            var_4h = var_4h - 1;\n        } while (var_4h != 0);\n    }\n    if (3 < arg_8h) {\n        var_4h = arg_8h >> 2;\n        do {\n            uVar1 = uVar1 ^ *in_EDX;\n            arg_8h = arg_8h - 4;\n            uVar1 = *((uVar1 >> 0x10 & 0xff) * 4 + 0x48c808) ^ *((uVar1 >> 8 & 0xff) * 4 + 0x48cc08) ^\n                    *((uVar1 >> 0x18) * 4 + 0x48c408) ^ *((uVar1 & 0xff) * 4 + 0x48d008);\n            in_EDX = in_EDX + 1;\n            var_4h = var_4h - 1;\n        } while (var_4h != 0);\n    }\n    for (; arg_8h != 0; arg_8h = arg_8h - 1) {\n        uVar1 = uVar1 >> 8 ^ *(((*in_EDX ^ uVar1) & 0xff) * 4 + 0x48c408);\n        in_EDX = in_EDX + 1;\n    }\n    return ~uVar1;\n}\n",
        "token_count": 1389
    },
    "0043704e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043704e(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t unaff_EDI;\n    uint32_t var_4h;\n    \n    iVar1 = *(unaff_EDI + 0x1c);\n    if (*(iVar1 + 0x34) == 0) {\n        iVar2 = (**(unaff_EDI + 0x20))(*(unaff_EDI + 0x28), 1 << (*(iVar1 + 0x24) & 0x1f), 1);\n        *(iVar1 + 0x34) = iVar2;\n        if (iVar2 == 0) {\n            return 1;\n        }\n    }\n    if (*(iVar1 + 0x28) == 0) {\n        *(iVar1 + 0x30) = 0;\n        *(iVar1 + 0x2c) = 0;\n        *(iVar1 + 0x28) = 1 << (*(iVar1 + 0x24) & 0x1f);\n    }\n    uVar3 = in_EAX - *(unaff_EDI + 0x10);\n    var_4h = *(iVar1 + 0x28);\n    if (uVar3 < var_4h) {\n        var_4h = var_4h - *(iVar1 + 0x30);\n        if (uVar3 < var_4h) {\n            var_4h = uVar3;\n        }\n        fcn.00452a10(*(iVar1 + 0x34) + *(iVar1 + 0x30), *(unaff_EDI + 0xc) - uVar3, var_4h);\n        iVar2 = uVar3 - var_4h;\n        if (iVar2 == 0) {\n            *(iVar1 + 0x30) = *(iVar1 + 0x30) + var_4h;\n            if (*(iVar1 + 0x30) == *(iVar1 + 0x28)) {\n                *(iVar1 + 0x30) = 0;\n            }\n            if (*(iVar1 + 0x28) <= *(iVar1 + 0x2c)) {\n                return 0;\n            }\n            *(iVar1 + 0x2c) = *(iVar1 + 0x2c) + var_4h;\n            return 0;\n        }\n        fcn.00452a10(*(iVar1 + 0x34), *(unaff_EDI + 0xc) - iVar2, iVar2);\n        *(iVar1 + 0x30) = iVar2;\n    }\n    else {\n        fcn.00452a10(*(iVar1 + 0x34), *(unaff_EDI + 0xc) - var_4h, var_4h);\n        *(iVar1 + 0x30) = 0;\n    }\n    *(iVar1 + 0x2c) = *(iVar1 + 0x28);\n    return 0;\n}\n",
        "token_count": 678
    },
    "00437126": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00437126(uint8_t **arg_8h, int32_t arg_ch)\n\n{\n    ushort uVar1;\n    uint32_t *puVar2;\n    uint8_t *puVar3;\n    char cVar4;\n    uint32_t uVar5;\n    uint8_t *puVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint8_t *puVar9;\n    uint8_t uVar10;\n    uint16_t uVar11;\n    int32_t iVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    int32_t iVar15;\n    uint32_t uVar16;\n    uint var_30h;\n    uint var_2ch;\n    uint8_t *var_28h;\n    int32_t var_24h;\n    uint8_t *var_20h;\n    uint8_t *var_1ch;\n    uint var_18h;\n    uint8_t *var_14h;\n    uint32_t var_10h;\n    uint8_t *var_ch;\n    uint8_t *var_8h;\n    uint8_t *var_4h;\n    \n    if ((((arg_8h != NULL) && (puVar2 = arg_8h[7],  puVar2 != NULL)) && (arg_8h[3] != NULL)) &&\n       ((*arg_8h != NULL || (arg_8h[1] == NULL)))) {\n        if (*puVar2 == 0xb) {\n            *puVar2 = 0xc;\n        }\n        var_1ch = arg_8h[3];\n        var_20h = arg_8h[4];\n        uVar14 = puVar2[0xe];\n        var_24h = 0;\n        uVar16 = puVar2[0xf];\n        var_4h = *arg_8h;\n        puVar9 = arg_8h[1];\n        uVar7 = *puVar2;\n        var_14h = var_20h;\n        var_10h = uVar14;\n        var_8h = puVar9;\n        while (uVar7 < 0x1d) {\n    // switch table (29 cases) at 0x43831a\n            switch(*(uVar7 * 4 + 0x43831a)) {\n            case 0x43719b:\n                if (puVar2[2] == 0) {\n                    *puVar2 = 0xc;\n                }\n                else {\n                    for (; uVar16 < 0x10; uVar16 = uVar16 + 8) {\n                        if (var_8h == NULL) goto code_r0x00438235;\n                        var_8h = var_8h + -1;\n                        uVar14 = uVar14 + (*var_4h << (uVar16 & 0x1f));\n                        var_4h = var_4h + 1;\n                        var_10h = uVar14;\n                    }\n                    if (((puVar2[2] & 2) == 0) || (uVar14 != 0x8b1f)) {\n                        puVar2[4] = 0;\n                        if (puVar2[8] != 0) {\n                            *(puVar2[8] + 0x30) = 0xffffffff;\n                        }\n                        if (((*(puVar2 + 2) & 1) == 0) || (((uVar14 & 0xff) * 0x100 + (uVar14 >> 8)) % 0x1f != 0)) {\n                            arg_8h[6] = \"incorrect header check\";\n                        }\n                        else if ((uVar14 & 0xf) == 8) {\n                            var_10h = uVar14 >> 4;\n                            uVar7 = (var_10h & 0xf) + 8;\n                            uVar16 = uVar16 - 4;\n                            if (uVar7 < puVar2[9] || uVar7 == puVar2[9]) {\n                                uVar16 = 0;\n                                puVar2[5] = 1 << uVar7;\n                                puVar6 = fcn.00438c99(0, 0, 0);\n                                puVar2[6] = puVar6;\n                                arg_8h[0xc] = puVar6;\n                                *puVar2 = ~(uVar14 >> 0xc) & 2 | 9;\n                                uVar14 = 0;\n                                var_10h = 0;\n                                goto code_r0x004381e7;\n                            }\n                            arg_8h[6] = \"invalid window size\";\n                            uVar14 = var_10h;\n                        }\n                        else {\n                            arg_8h[6] = \"unknown compression method\";\n                        }\n                        break;\n                    }\n                    uVar16 = 0;\n                    uVar7 = fcn.00436f02(0, 0, 0);\n                    puVar2[6] = uVar7;\n                    var_18h._0_1_ = '\\x1f';\n                    var_18h._1_1_ = 0x8b;\n                    uVar7 = fcn.00436f02(puVar2[6], &var_18h, 2);\n                    uVar14 = 0;\n                    puVar2[6] = uVar7;\n                    var_10h = 0;\n                    *puVar2 = 1;\n                }\n                goto code_r0x004381e7;\n            case 0x4372ca:\n                for (; uVar16 < 0x10; uVar16 = uVar16 + 8) {\n                    if (var_8h == NULL) goto code_r0x00438235;\n                    var_8h = var_8h + -1;\n                    uVar14 = uVar14 + (*var_4h << (uVar16 & 0x1f));\n                    var_4h = var_4h + 1;\n                    var_10h = uVar14;\n                }\n                puVar2[4] = uVar14;\n                if (uVar14 == '\\b') {\n                    if ((uVar14 & 0xe000) == 0) {\n                        if (puVar2[8] != NULL) {\n                            *puVar2[8] = uVar14 >> 8 & 1;\n                        }\n                        if ((*(puVar2 + 4) & 0x200) != 0) {\n                            var_18h._1_1_ = uVar14 >> 8;\n                            var_18h._0_1_ = uVar14;\n                            uVar7 = fcn.00436f02(puVar2[6], &var_18h, 2);\n                            puVar2[6] = uVar7;\n                        }\n                        uVar14 = 0;\n                        uVar16 = 0;\n                        *puVar2 = 2;\n                        goto joined_r0x00437366;\n                    }\n                    arg_8h[6] = \"unknown header flags set\";\n                }\n                else {\n                    arg_8h[6] = \"unknown compression method\";\n                }\n                break;\n            case 0x437363:\njoined_r0x00437366:\n                for (; uVar16 < 0x20; uVar16 = uVar16 + 8) {\n                    if (var_8h == NULL) goto code_r0x00438235;\n                    var_8h = var_8h + -1;\n                    uVar14 = uVar14 + (*var_4h << (uVar16 & 0x1f));\n                    var_4h = var_4h + 1;\n                }\n                if (puVar2[8] != 0) {\n                    *(puVar2[8] + 4) = uVar14;\n                }\n                if ((*(puVar2 + 4) & 0x200) != 0) {\n                    var_18h._1_1_ = uVar14 >> 8;\n                    var_18h._2_1_ = uVar14 >> 0x10;\n                    var_18h._0_1_ = uVar14;\n                    var_18h._3_1_ = uVar14 >> 0x18;\n                    uVar7 = fcn.00436f02(puVar2[6], &var_18h, 4);\n                    puVar2[6] = uVar7;\n                }\n                uVar14 = 0;\n                uVar16 = 0;\n                *puVar2 = 3;\n            case 0x4373db:\n                for (; uVar16 < 0x10; uVar16 = uVar16 + 8) {\n                    if (var_8h == NULL) goto code_r0x00438235;\n                    var_8h = var_8h + -1;\n                    uVar14 = uVar14 + (*var_4h << (uVar16 & 0x1f));\n                    var_4h = var_4h + 1;\n                }\n                if (puVar2[8] != 0) {\n                    *(puVar2[8] + 8) = uVar14 & 0xff;\n                    *(puVar2[8] + 0xc) = uVar14 >> 8;\n                }\n                if ((*(puVar2 + 4) & 0x200) != 0) {\n                    var_18h._0_1_ = uVar14;\n                    var_18h._1_1_ = uVar14 >> 8;\n                    uVar7 = fcn.00436f02(puVar2[6], &var_18h, 2);\n                    puVar2[6] = uVar7;\n                }\n                uVar14 = 0;\n                var_10h = 0;\n                uVar16 = 0;\n                *puVar2 = 4;\ncode_r0x00437459:\n                if ((*(puVar2 + 4) & 0x400) == 0) {\n                    if (puVar2[8] != 0) {\n                        *(puVar2[8] + 0x10) = 0;\n                    }\n                }\n                else {\n                    for (; uVar16 < 0x10; uVar16 = uVar16 + 8) {\n                        if (var_8h == NULL) goto code_r0x00438235;\n                        var_8h = var_8h + -1;\n                        uVar14 = uVar14 + (*var_4h << (uVar16 & 0x1f));\n                        var_4h = var_4h + 1;\n                    }\n                    puVar2[0x10] = uVar14;\n                    if (puVar2[8] != 0) {\n                        *(puVar2[8] + 0x14) = uVar14;\n                    }\n                    if ((*(puVar2 + 4) & 0x200) != 0) {\n                        var_18h._0_1_ = uVar14;\n                        var_18h._1_1_ = uVar14 >> 8;\n                        uVar7 = fcn.00436f02(puVar2[6], &var_18h, 2);\n                        puVar2[6] = uVar7;\n                    }\n                    uVar14 = 0;\n                    var_10h = 0;\n                    uVar16 = 0;\n                }\n                *puVar2 = 5;\ncode_r0x004374dc:\n                if ((*(puVar2 + 4) & 0x400) == 0) {\ncode_r0x0043756e:\n                    puVar2[0x10] = 0;\n                    *puVar2 = 6;\ncode_r0x00437578:\n                    if ((*(puVar2 + 4) & 0x800) == 0) {\n                        if (puVar2[8] != 0) {\n                            *(puVar2[8] + 0x1c) = 0;\n                        }\ncode_r0x00437608:\n                        puVar2[0x10] = 0;\n                        *puVar2 = 7;\ncode_r0x00437612:\n                        if ((*(puVar2 + 4) & 0x1000) == 0) {\n                            if (puVar2[8] != 0) {\n                                *(puVar2[8] + 0x24) = 0;\n                            }\ncode_r0x004376a2:\n                            *puVar2 = 8;\ncode_r0x004376a8:\n                            if ((*(puVar2 + 4) & 0x200) != 0) {\n                                for (; uVar16 < 0x10; uVar16 = uVar16 + 8) {\n                                    if (var_8h == NULL) goto code_r0x00438235;\n                                    var_8h = var_8h + -1;\n                                    uVar14 = uVar14 + (*var_4h << (uVar16 & 0x1f));\n                                    var_4h = var_4h + 1;\n                                    var_10h = uVar14;\n                                }\n                                if (uVar14 != *(puVar2 + 6)) {\n                                    arg_8h[6] = \"header crc mismatch\";\n                                    break;\n                                }\n                                uVar14 = 0;\n                                var_10h = 0;\n                                uVar16 = 0;\n                            }\n                            if (puVar2[8] != 0) {\n                                *(puVar2[8] + 0x2c) = puVar2[4] >> 9 & 1;\n                                *(puVar2[8] + 0x30) = 1;\n                            }\n                            puVar6 = fcn.00436f02(0, 0, 0);\n                            puVar2[6] = puVar6;\n                            arg_8h[0xc] = puVar6;\ncode_r0x00437e42:\n                            *puVar2 = 0xb;\n                            goto code_r0x004381e7;\n                        }\n                        if (var_8h != NULL) {\n                            var_ch = NULL;\n                            do {\n                                uVar10 = var_ch[var_4h];\n                                var_ch = var_ch + 1;\n                                uVar7 = puVar2[8];\n                                if (((uVar7 != 0) && (*(uVar7 + 0x24) != 0)) && (puVar2[0x10] < *(uVar7 + 0x28))) {\n                                    *(*(uVar7 + 0x24) + puVar2[0x10]) = uVar10;\n                                    puVar2[0x10] = puVar2[0x10] + 1;\n                                }\n                            } while ((uVar10 != 0) && (var_ch < var_8h));\n                            if ((*(puVar2 + 4) & 0x200) != 0) {\n                                uVar7 = fcn.00436f02(puVar2[6], var_4h, var_ch);\n                                puVar2[6] = uVar7;\n                            }\n                            var_8h = var_8h + -var_ch;\n                            var_4h = var_4h + var_ch;\n                            if (uVar10 == 0) goto code_r0x004376a2;\n                        }\n                    }\n                    else if (var_8h != NULL) {\n                        var_ch = NULL;\n                        do {\n                            uVar10 = var_ch[var_4h];\n                            var_ch = var_ch + 1;\n                            uVar7 = puVar2[8];\n                            if (((uVar7 != 0) && (*(uVar7 + 0x1c) != 0)) && (puVar2[0x10] < *(uVar7 + 0x20))) {\n                                *(*(uVar7 + 0x1c) + puVar2[0x10]) = uVar10;\n                                puVar2[0x10] = puVar2[0x10] + 1;\n                            }\n                        } while ((uVar10 != 0) && (var_ch < var_8h));\n                        if ((*(puVar2 + 4) & 0x200) != 0) {\n                            uVar7 = fcn.00436f02(puVar2[6], var_4h, var_ch);\n                            puVar2[6] = uVar7;\n                        }\n                        var_8h = var_8h + -var_ch;\n                        var_4h = var_4h + var_ch;\n                        if (uVar10 == 0) goto code_r0x00437608;\n                    }\n                }\n                else {\n                    puVar6 = puVar2[0x10];\n                    var_ch = puVar6;\n                    if (var_8h < puVar6) {\n                        var_ch = var_8h;\n                    }\n                    if (var_ch != NULL) {\n                        uVar7 = puVar2[8];\n                        if ((uVar7 != 0) && (*(uVar7 + 0x10) != 0)) {\n                            iVar8 = *(uVar7 + 0x14) - puVar6;\n                            puVar6 = var_ch;\n                            if (*(uVar7 + 0x18) < var_ch + iVar8) {\n                                puVar6 = *(uVar7 + 0x18) + -iVar8;\n                            }\n                            fcn.00452a10(*(uVar7 + 0x10) + iVar8, var_4h, puVar6);\n                        }\n                        if ((*(puVar2 + 4) & 0x200) != 0) {\n                            uVar7 = fcn.00436f02(puVar2[6], var_4h, var_ch);\n                            puVar2[6] = uVar7;\n                        }\n                        var_8h = var_8h + -var_ch;\n                        var_4h = var_4h + var_ch;\n                        puVar2[0x10] = puVar2[0x10] - var_ch;\n                    }\n                    if (puVar2[0x10] == 0) goto code_r0x0043756e;\n                }\ncode_r0x00438235:\n                arg_8h[3] = var_1ch;\n                arg_8h[4] = var_14h;\n                *arg_8h = var_4h;\n                arg_8h[1] = var_8h;\n                puVar2[0xe] = uVar14;\n                puVar2[0xf] = uVar16;\n                if (((puVar2[10] == 0) && ((0x17 < *puVar2 || (var_20h == arg_8h[4])))) ||\n                   (iVar8 = fcn.0043704e(),  iVar8 == 0)) {\n                    iVar8 = puVar9 - arg_8h[1];\n                    iVar15 = var_20h - arg_8h[4];\n                    arg_8h[2] = arg_8h[2] + iVar8;\n                    arg_8h[5] = arg_8h[5] + iVar15;\n                    puVar2[7] = puVar2[7] + iVar15;\n                    if ((puVar2[2] != 0) && (iVar15 != 0)) {\n                        if (puVar2[4] == 0) {\n                            puVar9 = fcn.00438c99(puVar2[6], arg_8h[3] - iVar15, iVar15);\n                        }\n                        else {\n                            puVar9 = fcn.00436f02();\n                        }\n                        puVar2[6] = puVar9;\n                        arg_8h[0xc] = puVar9;\n                    }\n                    if (*puVar2 == 0xb) {\n                        iVar12 = 0x80;\n                    }\n                    else {\n                        iVar12 = 0;\n                    }\n                    arg_8h[0xb] = (-(puVar2[1] != 0) & 0x40) + iVar12 + puVar2[0xf];\n                    if (((iVar8 != 0) || (iVar15 != 0)) && (arg_ch != 4)) {\n                        return var_24h;\n                    }\n                    if (var_24h != 0) {\n                        return var_24h;\n                    }\n                    return -5;\n                }\n                *puVar2 = 0x1c;\ncode_r0x0043718c:\n                return -4;\n            case 0x437459:\n                goto code_r0x00437459;\n            case 0x4374dc:\n                goto code_r0x004374dc;\n            case 0x437578:\n                goto code_r0x00437578;\n            case 0x437612:\n                goto code_r0x00437612;\n            case 0x4376a8:\n                goto code_r0x004376a8;\n            case 0x437730:\n                for (; uVar16 < 0x20; uVar16 = uVar16 + 8) {\n                    if (var_8h == NULL) goto code_r0x00438235;\n                    var_8h = var_8h + -1;\n                    uVar14 = uVar14 + (*var_4h << (uVar16 & 0x1f));\n                    var_4h = var_4h + 1;\n                    var_10h = uVar14;\n                }\n                puVar6 = ((uVar14 & 0xff00) + uVar14 * 0x10000) * 0x100 + (var_10h >> 0x10 & 0xff) * 0x100 +\n                         (uVar14 >> 0x18);\n                puVar2[6] = puVar6;\n                arg_8h[0xc] = puVar6;\n                uVar14 = 0;\n                uVar16 = 0;\n                *puVar2 = 10;\n            case 0x43778c:\n                if (puVar2[3] == 0) {\n                    arg_8h[3] = var_1ch;\n                    arg_8h[4] = var_14h;\n                    *arg_8h = var_4h;\n                    arg_8h[1] = var_8h;\n                    puVar2[0xe] = uVar14;\n                    puVar2[0xf] = uVar16;\n                    return 2;\n                }\n                puVar6 = fcn.00438c99(0, 0, 0);\n                puVar2[6] = puVar6;\n                arg_8h[0xc] = puVar6;\n                *puVar2 = 0xb;\ncode_r0x004377b2:\n                if (arg_ch != 5) {\ncode_r0x004377bf:\n                    if (puVar2[1] == 0) {\n                        for (; uVar16 < 3; uVar16 = uVar16 + 8) {\n                            if (var_8h == NULL) goto code_r0x00438235;\n                            var_8h = var_8h + -1;\n                            uVar14 = uVar14 + (*var_4h << (uVar16 & 0x1f));\n                            var_4h = var_4h + 1;\n                        }\n                        puVar2[1] = uVar14 & 1;\n                        uVar7 = uVar14 >> 1 & 3;\n                        if (uVar7 == 0) {\n                            *puVar2 = 0xd;\n                        }\n                        else if (uVar7 == 1) {\n                            fcn.00437031();\n                            *puVar2 = 0x12;\n                        }\n                        else if (uVar7 == 2) {\n                            *puVar2 = 0xf;\n                        }\n                        else if (uVar7 == 3) {\n                            arg_8h[6] = \"invalid block type\";\n                            *puVar2 = 0x1b;\n                        }\n                        uVar14 = uVar14 >> 3;\n                        uVar16 = uVar16 - 3;\n                        var_10h = uVar14;\n                    }\n                    else {\n                        uVar14 = uVar14 >> (uVar16 & 7);\n                        uVar16 = uVar16 - (uVar16 & 7);\n                        *puVar2 = 0x18;\n                        var_10h = uVar14;\n                    }\n                    goto code_r0x004381e7;\n                }\n                goto code_r0x00438235;\n            case 0x4377b2:\n                goto code_r0x004377b2;\n            case 0x4377bf:\n                goto code_r0x004377bf;\n            case 0x43785f:\n                uVar14 = uVar14 >> (uVar16 & 7);\n                for (uVar16 = uVar16 - (uVar16 & 7); var_10h = uVar14,  uVar16 < 0x20; uVar16 = uVar16 + 8) {\n                    if (var_8h == NULL) goto code_r0x00438235;\n                    var_8h = var_8h + -1;\n                    uVar14 = uVar14 + (*var_4h << (uVar16 & 0x1f));\n                    var_4h = var_4h + 1;\n                }\n                uVar7 = uVar14 & 0xffff;\n                if (uVar7 == ~uVar14 >> 0x10) {\n                    uVar14 = 0;\n                    puVar2[0x10] = uVar7;\n                    var_10h = 0;\n                    uVar16 = 0;\n                    *puVar2 = 0xe;\n                    goto code_r0x004378c8;\n                }\n                arg_8h[6] = \"invalid stored block lengths\";\n                break;\n            case 0x4378c8:\ncode_r0x004378c8:\n                var_ch = puVar2[0x10];\n                if (var_ch != NULL) {\n                    if (var_8h < var_ch) {\n                        var_ch = var_8h;\n                    }\n                    if (var_14h < var_ch) {\n                        var_ch = var_14h;\n                    }\n                    if (var_ch == NULL) goto code_r0x00438235;\n                    fcn.00452a10(var_1ch, var_4h, var_ch);\n                    var_8h = var_8h + -var_ch;\n                    var_4h = var_4h + var_ch;\n                    var_14h = var_14h + -var_ch;\n                    var_1ch = var_1ch + var_ch;\n                    puVar2[0x10] = puVar2[0x10] - var_ch;\n                    goto code_r0x004381e7;\n                }\n                goto code_r0x00437e42;\n            case 0x43791e:\n                for (; uVar16 < 0xe; uVar16 = uVar16 + 8) {\n                    if (var_8h == NULL) goto code_r0x00438235;\n                    var_8h = var_8h + -1;\n                    uVar14 = uVar14 + (*var_4h << (uVar16 & 0x1f));\n                    var_4h = var_4h + 1;\n                }\n                puVar2[0x18] = (uVar14 & 0x1f) + 0x101;\n                uVar7 = uVar14 >> 10;\n                puVar2[0x19] = (uVar14 >> 5 & 0x1f) + 1;\n                uVar14 = uVar14 >> 0xe;\n                uVar16 = uVar16 - 0xe;\n                puVar2[0x17] = (uVar7 & 0xf) + 4;\n                var_10h = uVar14;\n                if ((puVar2[0x18] < 0x11f) && (puVar2[0x19] < 0x1f)) {\n                    puVar2[0x1a] = 0;\n                    *puVar2 = 0x10;\n                    goto code_r0x004379e7;\n                }\n                arg_8h[6] = \"too many length or distance symbols\";\n                break;\n            case 0x4379e7:\ncode_r0x004379e7:\n                while (puVar2[0x1a] < puVar2[0x17]) {\n                    for (; uVar16 < 3; uVar16 = uVar16 + 8) {\n                        if (var_8h == NULL) goto code_r0x00438235;\n                        var_8h = var_8h + -1;\n                        uVar14 = uVar14 + (*var_4h << (uVar16 & 0x1f));\n                        var_4h = var_4h + 1;\n                    }\n                    uVar11 = uVar14;\n                    uVar14 = uVar14 >> 3;\n                    *(puVar2 + *(puVar2[0x1a] * 2 + 0x48ec88) * 2 + 0x70) = uVar11 & 7;\n                    puVar2[0x1a] = puVar2[0x1a] + 1;\n                    uVar16 = uVar16 - 3;\n                    var_10h = uVar14;\n                }\n                while (puVar2[0x1a] < 0x13) {\n                    *(puVar2 + *(puVar2[0x1a] * 2 + 0x48ec88) * 2 + 0x70) = 0;\n                    puVar2[0x1a] = puVar2[0x1a] + 1;\n                }\n                puVar2[0x1b] = puVar2 + 0x14c;\n                puVar2[0x13] = puVar2 + 0x14c;\n                puVar2[0x15] = 7;\n                var_24h = fcn.004388c6(0, puVar2 + 0x1c, 0x13, puVar2 + 0x1b, puVar2 + 0x15, puVar2 + 0xbc);\n                if (var_24h == 0) {\n                    puVar2[0x1a] = 0;\n                    *puVar2 = 0x11;\n                    goto code_r0x00437c63;\n                }\n                arg_8h[6] = \"invalid code lengths set\";\n                break;\n            case 0x437c63:\ncode_r0x00437c63:\n                while (puVar2[0x1a] < puVar2[0x19] + puVar2[0x18]) {\n                    for (; uVar7 = *(puVar2[0x13] + ((1 << (puVar2[0x15] & 0x1f)) - 1U & uVar14) * 4), \n                        uVar16 < (uVar7 >> 8 & 0xff); uVar16 = uVar16 + 8) {\n                        if (var_8h == NULL) goto code_r0x00438235;\n                        var_8h = var_8h + -1;\n                        uVar14 = uVar14 + (*var_4h << (uVar16 & 0x1f));\n                        var_4h = var_4h + 1;\n                    }\n                    uVar11 = uVar7 >> 0x10;\n                    if (uVar11 < 0x10) {\n                        for (; uVar16 < (uVar7 >> 8 & 0xff); uVar16 = uVar16 + 8) {\n                            if (var_8h == NULL) goto code_r0x00438235;\n                            var_8h = var_8h + -1;\n                            uVar14 = uVar14 + (*var_4h << (uVar16 & 0x1f));\n                            var_4h = var_4h + 1;\n                        }\n                        uVar7 = uVar7 >> 8 & 0xff;\n                        uVar14 = uVar14 >> (uVar7 & 0x1f);\n                        uVar16 = uVar16 - uVar7;\n                        *(puVar2 + puVar2[0x1a] * 2 + 0x70) = uVar11;\n                        puVar2[0x1a] = puVar2[0x1a] + 1;\n                        var_10h = uVar14;\n                    }\n                    else {\n                        if (uVar11 == 0x10) {\n                            uVar7 = uVar7 >> 8 & 0xff;\n                            for (; uVar16 < uVar7 + 2; uVar16 = uVar16 + 8) {\n                                if (var_8h == NULL) goto code_r0x00438235;\n                                var_8h = var_8h + -1;\n                                uVar14 = uVar14 + (*var_4h << (uVar16 & 0x1f));\n                                var_4h = var_4h + 1;\n                            }\n                            uVar14 = uVar14 >> (uVar7 & 0x1f);\n                            uVar16 = uVar16 - uVar7;\n                            if (puVar2[0x1a] == 0) {\n                                arg_8h[6] = \"invalid bit length repeat\";\n                                var_10h = uVar14;\n                                goto code_r0x004381e1;\n                            }\n                            uVar1 = *(puVar2 + puVar2[0x1a] * 2 + 0x6e);\n                            iVar8 = (uVar14 & 3) + 3;\n                            uVar14 = uVar14 >> 2;\n                            uVar16 = uVar16 - 2;\n                        }\n                        else {\n                            uVar7 = uVar7 >> 8 & 0xff;\n                            if (uVar11 == 0x11) {\n                                for (; uVar16 < uVar7 + 3; uVar16 = uVar16 + 8) {\n                                    if (var_8h == NULL) goto code_r0x00438235;\n                                    var_8h = var_8h + -1;\n                                    uVar14 = uVar14 + (*var_4h << (uVar16 & 0x1f));\n                                    var_4h = var_4h + 1;\n                                }\n                                uVar14 = uVar14 >> (uVar7 & 0x1f);\n                                iVar15 = -3;\n                                iVar8 = (uVar14 & 7) + 3;\n                                uVar14 = uVar14 >> 3;\n                            }\n                            else {\n                                for (; uVar16 < uVar7 + 7; uVar16 = uVar16 + 8) {\n                                    if (var_8h == NULL) goto code_r0x00438235;\n                                    var_8h = var_8h + -1;\n                                    uVar14 = uVar14 + (*var_4h << (uVar16 & 0x1f));\n                                    var_4h = var_4h + 1;\n                                }\n                                uVar14 = uVar14 >> (uVar7 & 0x1f);\n                                iVar15 = -7;\n                                iVar8 = (uVar14 & 0x7f) + 0xb;\n                                uVar14 = uVar14 >> 7;\n                            }\n                            uVar1 = 0;\n                            uVar16 = uVar16 + (iVar15 - uVar7);\n                        }\n                        var_10h = uVar14;\n                        if (puVar2[0x19] + puVar2[0x18] < puVar2[0x1a] + iVar8) {\n                            arg_8h[6] = \"invalid bit length repeat\";\n                            *puVar2 = 0x1b;\n                            break;\n                        }\n                        for (; iVar8 != 0; iVar8 = iVar8 + -1) {\n                            *(puVar2 + puVar2[0x1a] * 2 + 0x70) = uVar1;\n                            puVar2[0x1a] = puVar2[0x1a] + 1;\n                        }\n                    }\n                }\n                if (*puVar2 != 0x1b) {\n                    puVar2[0x1b] = puVar2 + 0x14c;\n                    puVar2[0x13] = puVar2 + 0x14c;\n                    puVar2[0x15] = 9;\n                    var_24h = fcn.004388c6(1, puVar2 + 0x1c, puVar2[0x18], puVar2 + 0x1b, puVar2 + 0x15, puVar2 + 0xbc);\n                    if (var_24h == 0) {\n                        puVar2[0x14] = puVar2[0x1b];\n                        puVar2[0x16] = 6;\n                        var_24h = fcn.004388c6(2, puVar2 + puVar2[0x18] * 2 + 0x70, puVar2[0x19], puVar2 + 0x1b, \n                                               puVar2 + 0x16, puVar2 + 0xbc);\n                        if (var_24h == 0) {\n                            *puVar2 = 0x12;\n                            goto code_r0x00437cce;\n                        }\n                        arg_8h[6] = \"invalid distances set\";\n                    }\n                    else {\n                        arg_8h[6] = \"invalid literal/lengths set\";\n                    }\n                    break;\n                }\n                goto code_r0x004381e7;\n            case 0x437cce:\ncode_r0x00437cce:\n                if ((var_8h < 0x6) || (var_14h < 0x102)) {\n                    uVar7 = *(puVar2[0x13] + ((1 << (puVar2[0x15] & 0x1f)) - 1U & uVar14) * 4);\n                    for (; uVar16 < (uVar7 >> 8 & 0xff); uVar16 = uVar16 + 8) {\n                        if (var_8h == NULL) goto code_r0x00438235;\n                        var_8h = var_8h + -1;\n                        uVar14 = uVar14 + (*var_4h << (uVar16 & 0x1f));\n                        var_4h = var_4h + 1;\n                        uVar7 = *(puVar2[0x13] + ((1 << (puVar2[0x15] & 0x1f)) - 1U & uVar14) * 4);\n                    }\n                    cVar4 = uVar7;\n                    uVar5 = uVar7;\n                    if ((cVar4 != '\\0') && ((uVar7 & 0xf0) == 0)) {\n                        var_10h._0_1_ = uVar7 >> 8;\n                        var_ch = uVar7 >> 8 & 0xff;\n                        uVar5 = *(puVar2[0x13] +\n                                 ((((1 << (cVar4 + var_10h & 0x1f)) - 1U & uVar14) >> (var_ch & 0x1f)) + (uVar7 >> 0x10)\n                                 ) * 4);\n                        uVar13 = var_10h;\n                        for (; uVar16 < (uVar5 >> 8 & 0xff) + uVar13; uVar16 = uVar16 + 8) {\n                            var_10h = uVar7 >> 8;\n                            if (var_8h == NULL) goto code_r0x00438235;\n                            var_8h = var_8h + -1;\n                            uVar13 = uVar7 >> 8 & 0xff;\n                            uVar14 = uVar14 + (*var_4h << (uVar16 & 0x1f));\n                            var_4h = var_4h + 1;\n                            uVar5 = *(puVar2[0x13] +\n                                     ((((1 << (cVar4 + uVar13 & 0x1f)) - 1U & uVar14) >> (uVar13 & 0x1f)) +\n                                     (uVar7 >> 0x10)) * 4);\n                        }\n                        uVar14 = uVar14 >> (var_10h & 0x1f);\n                        uVar16 = uVar16 - var_10h;\n                    }\n                    uVar7 = uVar5 >> 8 & 0xff;\n                    uVar14 = uVar14 >> (uVar7 & 0x1f);\n                    uVar16 = uVar16 - uVar7;\n                    puVar2[0x10] = uVar5 >> 0x10;\n                    var_10h = uVar14;\n                    if (uVar5 == '\\0') {\n                        *puVar2 = 0x17;\n                        goto code_r0x004381e7;\n                    }\n                    if ((uVar5 & 0x20) == 0) {\n                        if ((uVar5 & 0x40) == 0) {\n                            puVar2[0x12] = uVar5 & 0xf;\n                            *puVar2 = 0x13;\n                            goto code_r0x00437e6c;\n                        }\n                        arg_8h[6] = \"invalid literal/length code\";\n                        break;\n                    }\n                    goto code_r0x00437e42;\n                }\n                arg_8h[3] = var_1ch;\n                arg_8h[4] = var_14h;\n                *arg_8h = var_4h;\n                arg_8h[1] = var_8h;\n                puVar2[0xe] = uVar14;\n                puVar2[0xf] = uVar16;\n                fcn.004384ea(arg_8h, var_20h);\n                uVar14 = puVar2[0xe];\n                uVar16 = puVar2[0xf];\n                var_1ch = arg_8h[3];\n                var_14h = arg_8h[4];\n                var_4h = *arg_8h;\n                var_8h = arg_8h[1];\n                var_10h = uVar14;\n                goto code_r0x004381e7;\n            case 0x437e6c:\ncode_r0x00437e6c:\n                uVar7 = puVar2[0x12];\n                if (uVar7 != 0) {\n                    if (uVar16 < uVar7) {\n                        do {\n                            if (var_8h == NULL) goto code_r0x00438235;\n                            var_8h = var_8h + -1;\n                            uVar10 = uVar16;\n                            uVar16 = uVar16 + 8;\n                            uVar14 = uVar14 + (*var_4h << (uVar10 & 0x1f));\n                            var_4h = var_4h + 1;\n                        } while (uVar16 < puVar2[0x12]);\n                    }\n                    puVar2[0x10] = puVar2[0x10] + ((1 << (uVar7 & 0x1f)) - 1U & uVar14);\n                    uVar14 = uVar14 >> (uVar7 & 0x1f);\n                    uVar16 = uVar16 - uVar7;\n                }\n                *puVar2 = 0x14;\n            case 0x437eb2:\n                uVar7 = *(puVar2[0x14] + ((1 << (puVar2[0x16] & 0x1f)) - 1U & uVar14) * 4);\n                for (; uVar16 < (uVar7 >> 8 & 0xff); uVar16 = uVar16 + 8) {\n                    if (var_8h == NULL) goto code_r0x00438235;\n                    var_8h = var_8h + -1;\n                    uVar14 = uVar14 + (*var_4h << (uVar16 & 0x1f));\n                    var_4h = var_4h + 1;\n                    uVar7 = *(puVar2[0x14] + ((1 << (puVar2[0x16] & 0x1f)) - 1U & uVar14) * 4);\n                }\n                uVar5 = uVar7;\n                if ((uVar7 & 0xf0) == 0) {\n                    var_10h._0_1_ = uVar7 >> 8;\n                    var_ch = uVar7 >> 8 & 0xff;\n                    uVar5 = *(puVar2[0x14] +\n                             ((((1 << (uVar7 + var_10h & 0x1f)) - 1U & uVar14) >> (var_ch & 0x1f)) + (uVar7 >> 0x10)) *\n                             4);\n                    uVar13 = var_10h;\n                    for (; uVar16 < (uVar5 >> 8 & 0xff) + uVar13; uVar16 = uVar16 + 8) {\n                        var_10h = uVar7 >> 8;\n                        if (var_8h == NULL) goto code_r0x00438235;\n                        var_8h = var_8h + -1;\n                        uVar13 = uVar7 >> 8 & 0xff;\n                        uVar14 = uVar14 + (*var_4h << (uVar16 & 0x1f));\n                        var_4h = var_4h + 1;\n                        uVar5 = *(puVar2[0x14] +\n                                 ((((1 << (uVar7 + uVar13 & 0x1f)) - 1U & uVar14) >> (uVar13 & 0x1f)) + (uVar7 >> 0x10))\n                                 * 4);\n                    }\n                    uVar14 = uVar14 >> (var_10h & 0x1f);\n                    uVar16 = uVar16 - var_10h;\n                }\n                uVar7 = uVar5 >> 8 & 0xff;\n                uVar14 = uVar14 >> (uVar7 & 0x1f);\n                uVar16 = uVar16 - uVar7;\n                var_10h = uVar14;\n                if ((uVar5 & 0x40) != 0) {\n                    arg_8h[6] = \"invalid distance code\";\n                    break;\n                }\n                puVar2[0x11] = uVar5 >> 0x10;\n                puVar2[0x12] = uVar5 & 0xf;\n                *puVar2 = 0x15;\ncode_r0x00437fcb:\n                if (puVar2[0x12] != 0) {\n                    if (uVar16 < puVar2[0x12]) {\n                        do {\n                            if (var_8h == NULL) goto code_r0x00438235;\n                            var_8h = var_8h + -1;\n                            uVar10 = uVar16;\n                            uVar16 = uVar16 + 8;\n                            uVar14 = uVar14 + (*var_4h << (uVar10 & 0x1f));\n                            var_4h = var_4h + 1;\n                        } while (uVar16 < puVar2[0x12]);\n                    }\n                    uVar10 = puVar2[0x12];\n                    puVar2[0x11] = puVar2[0x11] + ((1 << (uVar10 & 0x1f)) - 1U & uVar14);\n                    uVar14 = uVar14 >> (uVar10 & 0x1f);\n                    uVar16 = uVar16 - puVar2[0x12];\n                    var_10h = uVar14;\n                }\n                if (var_20h + (puVar2[0xb] - var_14h) <= puVar2[0x11] &&\n                    puVar2[0x11] != var_20h + (puVar2[0xb] - var_14h)) {\n                    arg_8h[6] = \"invalid distance too far back\";\n                    break;\n                }\n                *puVar2 = 0x16;\ncode_r0x00438032:\n                if (var_14h != NULL) {\n                    uVar7 = puVar2[0x11];\n                    if (var_20h - var_14h < uVar7) {\n                        var_ch = uVar7 - (var_20h - var_14h);\n                        puVar6 = puVar2[0xc];\n                        if (puVar6 < var_ch) {\n                            var_ch = var_ch + -puVar6;\n                            puVar6 = (puVar2[0xd] + puVar2[10]) - var_ch;\n                        }\n                        else {\n                            puVar6 = puVar6 + (puVar2[0xd] - var_ch);\n                        }\n                        var_28h = puVar2[0x10];\n                        if (var_28h < var_ch) goto code_r0x00438081;\n                    }\n                    else {\n                        puVar6 = var_1ch + -uVar7;\n                        var_28h = puVar2[0x10];\ncode_r0x00438081:\n                        var_ch = var_28h;\n                    }\n                    if (var_14h < var_ch) {\n                        var_ch = var_14h;\n                    }\n                    var_14h = var_14h + -var_ch;\n                    puVar2[0x10] = var_28h - var_ch;\n                    do {\n                        uVar10 = *puVar6;\n                        puVar3 = var_1ch + 1;\n                        puVar6 = puVar6 + 1;\n                        var_ch = var_ch + -1;\n                        *var_1ch = uVar10;\n                        var_1ch = puVar3;\n                    } while (var_ch != NULL);\n                    if (puVar2[0x10] == 0) {\ncode_r0x004380d2:\n                        *puVar2 = 0x12;\n                    }\n                    goto code_r0x004381e7;\n                }\n                goto code_r0x00438235;\n            case 0x437fcb:\n                goto code_r0x00437fcb;\n            case 0x438032:\n                goto code_r0x00438032;\n            case 0x4380ba:\n                if (var_14h == NULL) goto code_r0x00438235;\n                var_14h = var_14h + -1;\n                *var_1ch = *(puVar2 + 0x10);\n                var_1ch = var_1ch + 1;\n                goto code_r0x004380d2;\n            case 0x4380dd:\n                if (puVar2[2] != 0) {\n                    for (; uVar16 < 0x20; uVar16 = uVar16 + 8) {\n                        if (var_8h == NULL) goto code_r0x00438235;\n                        var_8h = var_8h + -1;\n                        uVar14 = uVar14 + (*var_4h << (uVar16 & 0x1f));\n                        var_4h = var_4h + 1;\n                        var_10h = uVar14;\n                    }\n                    iVar8 = var_20h - var_14h;\n                    arg_8h[5] = arg_8h[5] + iVar8;\n                    puVar2[7] = puVar2[7] + iVar8;\n                    if (iVar8 != 0) {\n                        if (puVar2[4] == 0) {\n                            puVar6 = fcn.00438c99(puVar2[6], var_1ch - iVar8, iVar8);\n                        }\n                        else {\n                            puVar6 = fcn.00436f02();\n                        }\n                        puVar2[6] = puVar6;\n                        arg_8h[0xc] = puVar6;\n                    }\n                    var_20h = var_14h;\n                    uVar7 = uVar14;\n                    if (puVar2[4] == 0) {\n                        uVar7 = ((uVar14 & 0xff00) + uVar14 * 0x10000) * 0x100 + (var_10h >> 0x10 & 0xff) * 0x100 +\n                                (uVar14 >> 0x18);\n                    }\n                    if (uVar7 != puVar2[6]) {\n                        arg_8h[6] = \"incorrect data check\";\n                        break;\n                    }\n                    uVar14 = 0;\n                    var_10h = 0;\n                    uVar16 = 0;\n                }\n                *puVar2 = 0x19;\n            case 0x43819a:\n                if ((puVar2[2] != 0) && (puVar2[4] != 0)) {\n                    for (; uVar16 < 0x20; uVar16 = uVar16 + 8) {\n                        if (var_8h == NULL) goto code_r0x00438235;\n                        var_8h = var_8h + -1;\n                        uVar14 = uVar14 + (*var_4h << (uVar16 & 0x1f));\n                        var_4h = var_4h + 1;\n                        var_10h = uVar14;\n                    }\n                    if (uVar14 != puVar2[7]) {\n                        arg_8h[6] = \"incorrect length check\";\n                        break;\n                    }\n                    uVar14 = 0;\n                    uVar16 = 0;\n                }\n                *puVar2 = 0x1a;\ncode_r0x00438225:\n                var_24h = 1;\n                goto code_r0x00438235;\n            case 0x438225:\n                goto code_r0x00438225;\n            case 0x43822e:\n                var_24h = -3;\n                goto code_r0x00438235;\n            case 0x438280:\n                goto code_r0x0043718c;\n            }\ncode_r0x004381e1:\n            *puVar2 = 0x1b;\ncode_r0x004381e7:\n            uVar7 = *puVar2;\n        }\n    }\n    return -2;\n}\n",
        "token_count": 12249
    },
    "004383cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004383cc(uint noname_0, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t arg_ch_00;\n    \n    arg_ch_00 = 0;\n    if ((arg_10h & 3) == 1) {\n        arg_ch_00 = 0x4a6378;\n    }\n    else if ((arg_10h & 4) == 0) {\n        if ((arg_10h & 8) != 0) {\n            arg_ch_00 = 0x48ee70;\n        }\n    }\n    else {\n        arg_ch_00 = 0x48ee74;\n    }\n    if ((arg_ch != 0) && (arg_ch_00 != 0)) {\n        fcn.00457d80(arg_ch, arg_ch_00);\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "004384ea": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004384ea(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint uVar9;\n    uint uVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    int32_t iVar15;\n    uchar *puVar16;\n    uint8_t *puVar17;\n    uint8_t *puVar18;\n    int32_t iVar19;\n    uchar *puVar20;\n    uchar *puVar21;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar *var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar2 = arg_8h[4];\n    puVar17 = *arg_8h + -1;\n    puVar1 = puVar17 + arg_8h[1] + -5;\n    iVar11 = iVar2 - arg_ch;\n    puVar3 = arg_8h[7];\n    puVar20 = arg_8h[3] + -1;\n    iVar4 = puVar3[10];\n    uVar5 = puVar3[0xb];\n    uVar6 = puVar3[0xc];\n    iVar19 = puVar3[0xd];\n    var_4h = puVar3[0xe];\n    arg_ch = puVar3[0xf];\n    iVar7 = puVar3[0x13];\n    iVar8 = puVar3[0x14];\n    uVar9 = puVar3[0x15];\n    uVar10 = puVar3[0x16];\n    puVar21 = puVar20;\ncode_r0x00438569:\n    if (arg_ch < 0xf) {\n        puVar18 = puVar17 + 1;\n        puVar17 = puVar17 + 2;\n        var_4h = var_4h + (*puVar18 << (arg_ch & 0x1f)) + (*puVar17 << (arg_ch + 8 & 0x1f));\n        arg_ch = arg_ch + 0x10;\n    }\n    uVar13 = *(iVar7 + ((1 << (uVar9 & 0x1f)) - 1U & var_4h) * 4);\n    uVar12 = uVar13 >> 8 & 0xff;\n    var_4h = var_4h >> (uVar12 & 0x1f);\n    arg_ch = arg_ch - uVar12;\n    while ((uVar13 & 0xff) != 0) {\n        puVar18 = puVar17;\n        puVar16 = puVar21;\n        if ((uVar13 & 0x10) != 0) {\n            var_ch = uVar13 >> 0x10;\n            uVar13 = uVar13 & 0xf;\n            if (uVar13 != 0) {\n                if (arg_ch < uVar13) {\n                    puVar17 = puVar17 + 1;\n                    var_4h = var_4h + (*puVar17 << (arg_ch & 0x1f));\n                    arg_ch = arg_ch + 8;\n                }\n                uVar12 = (1 << uVar13) - 1U & var_4h;\n                var_4h = var_4h >> uVar13;\n                var_ch = var_ch + uVar12;\n                arg_ch = arg_ch - uVar13;\n                puVar18 = puVar17;\n            }\n            if (arg_ch < 0xf) {\n                puVar17 = puVar18 + 1;\n                puVar18 = puVar18 + 2;\n                var_4h = var_4h + (*puVar17 << (arg_ch & 0x1f)) + (*puVar18 << (arg_ch + 8 & 0x1f));\n                arg_ch = arg_ch + 0x10;\n            }\n            uVar13 = *(iVar8 + ((1 << (uVar10 & 0x1f)) - 1U & var_4h) * 4);\n            goto code_r0x00438694;\n        }\n        if ((uVar13 & 0x40) != 0) {\n            if ((uVar13 & 0x20) != 0) {\n                *puVar3 = 0xb;\n                goto code_r0x00438874;\n            }\n            arg_8h[6] = \"invalid literal/length code\";\n            goto code_r0x0043886e;\n        }\n        uVar13 = *(iVar7 + (((1 << (uVar13 & 0xff & 0x1f)) - 1U & var_4h) + (uVar13 >> 0x10)) * 4);\n        uVar12 = uVar13 >> 8 & 0xff;\n        var_4h = var_4h >> (uVar12 & 0x1f);\n        arg_ch = arg_ch - uVar12;\n    }\n    puVar21[1] = uVar13 >> 0x10;\n    puVar16 = puVar21 + 1;\n    goto code_r0x00438838;\ncode_r0x00438694:\n    uVar12 = uVar13 >> 8 & 0xff;\n    var_4h = var_4h >> (uVar12 & 0x1f);\n    uVar12 = arg_ch - uVar12;\n    arg_ch = uVar12;\n    if ((uVar13 & 0x10) != 0) goto code_r0x004386b1;\n    if ((uVar13 & 0x40) != 0) {\n        arg_8h[6] = \"invalid distance code\";\n        goto code_r0x0043886e;\n    }\n    uVar13 = *(iVar8 + (((1 << (uVar13 & 0x1f)) - 1U & var_4h) + (uVar13 >> 0x10)) * 4);\n    goto code_r0x00438694;\ncode_r0x004386b1:\n    uVar14 = uVar13 & 0xf;\n    puVar17 = puVar18;\n    if (uVar12 < uVar14) {\n        arg_ch = uVar12 + 8;\n        puVar17 = puVar18 + 1;\n        var_4h = var_4h + (*puVar17 << (uVar12 & 0x1f));\n        if (arg_ch < uVar14) {\n            puVar17 = puVar18 + 2;\n            var_4h = var_4h + (*puVar17 << (arg_ch & 0x1f));\n            arg_ch = uVar12 + 0x10;\n        }\n    }\n    arg_ch = arg_ch - uVar14;\n    uVar12 = (1 << uVar14) - 1U & var_4h;\n    var_4h = var_4h >> uVar14;\n    uVar12 = (uVar13 >> 0x10) + uVar12;\n    if (uVar12 <= puVar21 - (puVar20 + iVar11)) {\n        var_10h = puVar21 + -uVar12;\n        do {\n            var_ch = var_ch - 3;\n            puVar21[1] = var_10h[1];\n            puVar16 = var_10h + 2;\n            var_10h = var_10h + 3;\n            puVar21[2] = *puVar16;\n            puVar21 = puVar21 + 3;\n            *puVar21 = *var_10h;\n        } while (2 < var_ch);\n        goto code_r0x00438820;\n    }\n    var_8h = uVar12 - (puVar21 - (puVar20 + iVar11));\n    if (uVar5 < var_8h) {\n        arg_8h[6] = \"invalid distance too far back\";\n        puVar18 = puVar17;\ncode_r0x0043886e:\n        *puVar3 = 0x1b;\n        puVar17 = puVar18;\ncode_r0x00438874:\n        iVar19 = puVar17 - (arg_ch >> 3);\n        iVar4 = arg_ch - (arg_ch & 0xfffffff8);\n        *arg_8h = iVar19 + 1;\n        arg_8h[3] = puVar16 + 1;\n        arg_8h[1] = puVar1 + (5 - iVar19);\n        arg_8h[4] = puVar20 + iVar2 + -0x101 + (0x101 - puVar16);\n        puVar3[0xe] = var_4h & (1 << (iVar4 & 0x1f)) - 1U;\n        puVar3[0xf] = iVar4;\n        return;\n    }\n    iVar15 = iVar19 + -1;\n    if (uVar6 == 0) {\n        var_10h = iVar15 + (iVar4 - var_8h);\n        if (var_8h < var_ch) {\n            var_ch = var_ch - var_8h;\n            do {\n                var_10h = var_10h + 1;\n                puVar21 = puVar21 + 1;\n                var_8h = var_8h - 1;\n                *puVar21 = *var_10h;\n            } while (var_8h != 0);\ncode_r0x0043879f:\n            var_10h = puVar21 + -uVar12;\n        }\n    }\n    else if (uVar6 < var_8h) {\n        var_10h = iVar15 + (uVar6 - var_8h) + iVar4;\n        var_8h = var_8h - uVar6;\n        if (var_8h < var_ch) {\n            var_ch = var_ch - var_8h;\n            do {\n                var_10h = var_10h + 1;\n                puVar21 = puVar21 + 1;\n                var_8h = var_8h - 1;\n                *puVar21 = *var_10h;\n            } while (var_8h != 0);\n            var_10h = iVar19 + -1;\n            if (uVar6 < var_ch) {\n                var_ch = var_ch - uVar6;\n                var_8h = uVar6;\n                do {\n                    var_10h = var_10h + 1;\n                    puVar21 = puVar21 + 1;\n                    var_8h = var_8h - 1;\n                    *puVar21 = *var_10h;\n                } while (var_8h != 0);\n                goto code_r0x0043879f;\n            }\n        }\n    }\n    else {\n        var_10h = iVar15 + (uVar6 - var_8h);\n        if (var_8h < var_ch) {\n            var_ch = var_ch - var_8h;\n            do {\n                var_10h = var_10h + 1;\n                puVar21 = puVar21 + 1;\n                var_8h = var_8h - 1;\n                *puVar21 = *var_10h;\n            } while (var_8h != 0);\n            goto code_r0x0043879f;\n        }\n    }\n    if (2 < var_ch) {\n        iVar15 = (var_ch - 3) / 3 + 1;\n        do {\n            var_ch = var_ch - 3;\n            puVar21[1] = var_10h[1];\n            puVar16 = var_10h + 2;\n            var_10h = var_10h + 3;\n            puVar21[2] = *puVar16;\n            puVar21 = puVar21 + 3;\n            iVar15 = iVar15 + -1;\n            *puVar21 = *var_10h;\n        } while (iVar15 != 0);\n    }\ncode_r0x00438820:\n    puVar16 = puVar21;\n    if (var_ch != 0) {\n        puVar16 = puVar21 + 1;\n        *puVar16 = var_10h[1];\n        if (1 < var_ch) {\n            puVar16 = puVar21 + 2;\n            *puVar16 = var_10h[2];\n        }\n    }\ncode_r0x00438838:\n    if ((puVar1 <= puVar17) || (puVar21 = puVar16,  puVar20 + iVar2 + -0x101 <= puVar16)) goto code_r0x00438874;\n    goto code_r0x00438569;\n}\n",
        "token_count": 2969
    },
    "004388c6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004388c6(int32_t param_1, int32_t param_2, uint32_t param_3, int32_t *param_4, uint16_t **param_5, \n                 uint16_t *param_6)\n\n{\n    int16_t *piVar1;\n    uint16_t uVar2;\n    char cVar3;\n    uint16_t *puVar4;\n    uint16_t *puVar5;\n    uint8_t uVar6;\n    uint8_t uVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint32_t *puVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uint *puVar13;\n    uint32_t uVar14;\n    uint16_t *puStack132;\n    uint16_t *puStack128;\n    uint16_t *puStack124;\n    uint16_t *puStack120;\n    int32_t iStack116;\n    uint16_t *puStack112;\n    uint16_t *puStack108;\n    uint32_t uStack104;\n    uint16_t *puStack100;\n    uint16_t *puStack96;\n    uint16_t *puStack92;\n    uint16_t *puStack88;\n    uint16_t *puStack84;\n    uint16_t *puStack80;\n    uint uStack76;\n    uint16_t auStack72 [16];\n    uint uStack40;\n    uint32_t uStack8;\n    \n    uStack8 = *0x4b4f00 ^ &puStack100;\n    puStack80 = param_6;\n    puVar13 = &uStack40;\n    for (iVar8 = 8; iVar8 != 0; iVar8 = iVar8 + -1) {\n        *puVar13 = 0;\n        puVar13 = puVar13 + 1;\n    }\n    uVar9 = 0;\n    if (param_3 != 0) {\n        do {\n            piVar1 = &uStack40 + *(param_2 + uVar9 * 2) * 2;\n            *piVar1 = *piVar1 + 1;\n            uVar9 = uVar9 + 1;\n        } while (uVar9 < param_3);\n    }\n    puStack92 = *param_5;\n    puStack112 = 0xf;\n    do {\n        if (*(&uStack40 + puStack112 * 2) != 0) break;\n        puStack112 = puStack112 + -1;\n    } while (puStack112 != NULL);\n    if (puStack112 < puStack92) {\n        puStack92 = puStack112;\n    }\n    if (puStack112 == NULL) {\n        uStack76 = 0x140;\n        **param_4 = 0x140;\n        *param_4 = *param_4 + 4;\n        **param_4 = 0x140;\n        *param_4 = *param_4 + 4;\n        *param_5 = 0x1;\n    }\n    else {\n        uVar9 = 1;\n        puStack88 = 0x1;\n        do {\n            if (*(&uStack40 + puStack88 * 2) != 0) break;\n            puStack88 = puStack88 + 1;\n        } while (puStack88 < 0x10);\n        uVar14 = uVar9;\n        if (puStack92 < puStack88) {\n            puStack92 = puStack88;\n        }\n        do {\n            uVar14 = uVar14 * 2 - *(&uStack40 + uVar9 * 2);\n            if (uVar14 < 0) goto code_r0x00438c87;\n            uVar9 = uVar9 + 1;\n        } while (uVar9 < 0x10);\n        if ((uVar14 < 1) || ((param_1 != 0 && (puStack112 == 0x1)))) {\n            auStack72[1] = 0;\n            uVar9 = 2;\n            do {\n                *(auStack72 + uVar9 + 2) = *(auStack72 + uVar9) + *(&uStack40 + uVar9);\n                uVar9 = uVar9 + 2;\n            } while (uVar9 < 0x1e);\n            uVar9 = 0;\n            if (param_3 != 0) {\n                do {\n                    if (*(param_2 + uVar9 * 2) != 0) {\n                        param_6[auStack72[*(param_2 + uVar9 * 2)]] = uVar9;\n                        auStack72[*(param_2 + uVar9 * 2)] = auStack72[*(param_2 + uVar9 * 2)] + 1;\n                    }\n                    uVar9 = uVar9 + 1;\n                } while (uVar9 < param_3);\n            }\n            if (param_1 == 0) {\n                puStack124 = param_6;\n                puStack128 = param_6;\n                iStack116 = 0x13;\n            }\n            else if (param_1 == 1) {\n                puStack128 = 0x48ed4e;\n                puStack124 = 0x48ed8e;\n                iStack116 = 0x100;\n            }\n            else {\n                iStack116 = -1;\n                puStack128 = 0x48efd0;\n                puStack124 = 0x48f010;\n            }\n            puStack120 = 0xffffffff;\n            iVar8 = *param_4;\n            puStack84 = NULL;\n            uVar6 = puStack92;\n            puStack108 = 1 << (uVar6 & 0x1f);\n            uStack104 = 0;\n            uVar9 = puStack108 - 1;\n            puStack132 = puStack88;\n            puStack100 = puStack108;\n            if ((param_1 != 1) || (puStack108 < 0x5b0)) {\n                puStack96 = param_6;\n                puVar4 = puStack88;\ncode_r0x00438a90:\n                do {\n                    cVar3 = puVar4;\n                    uVar7 = cVar3 - puStack84;\n                    uVar2 = *puStack96;\n                    if (uVar2 < iStack116) {\n                        uStack76 = CONCAT21(uVar2, uVar7) << 8;\n                    }\n                    else if (iStack116 < uVar2) {\n                        uStack76._0_2_ = CONCAT11(uVar7, *(puStack124 + *puStack96));\n                        uStack76 = CONCAT22(puStack128[*puStack96], uStack76);\n                    }\n                    else {\n                        uStack76 = CONCAT31(uVar7, 0x60);\n                    }\n                    iVar12 = 1 << (cVar3 - puStack84 & 0x1f);\n                    puStack80 = puStack108;\n                    puStack88 = puStack108;\n                    puVar10 = iVar8 + ((uStack104 >> (puStack84 & 0x1f)) + puStack108) * 4;\n                    do {\n                        puStack80 = puStack80 - iVar12;\n                        puVar10 = puVar10 + -iVar12;\n                        *puVar10 = uStack76;\n                    } while (puStack80 != NULL);\n                    for (uVar14 = 1 << (cVar3 - 1U & 0x1f); (uStack104 & uVar14) != 0; uVar14 = uVar14 >> 1) {\n                    }\n                    if (uVar14 == 0) {\n                        uStack104 = 0;\n                    }\n                    else {\n                        uStack104 = (uVar14 - 1 & uStack104) + uVar14;\n                    }\n                    puStack96 = puStack96 + 1;\n                    piVar1 = &uStack40 + puVar4 * 2;\n                    *piVar1 = *piVar1 + -1;\n                    if (*piVar1 == 0) {\n                        if (puVar4 == puStack112) {\n                            uStack76._0_2_ = CONCAT11(cVar3 - puStack84, 0x40);\n                            uStack76 = uStack76;\n                            while (uStack104 != 0) {\n                                if ((puStack84 != NULL) && ((uVar9 & uStack104) != puStack120)) {\n                                    puStack84 = NULL;\n                                    iVar8 = *param_4;\n                                    uStack76._0_2_ = CONCAT11(uVar6, uStack76);\n                                    uStack76 = uStack76;\n                                    puVar4 = puStack92;\n                                }\n                                *(iVar8 + (uStack104 >> (puStack84 & 0x1f)) * 4) = uStack76;\n                                for (uVar14 = 1 << (puVar4 - 1U & 0x1f); (uStack104 & uVar14) != 0; uVar14 = uVar14 >> 1\n                                    ) {\n                                }\n                                if (uVar14 == 0) {\n                                    uStack104 = 0;\n                                }\n                                else {\n                                    uStack104 = (uVar14 - 1 & uStack104) + uVar14;\n                                }\n                            }\n                            *param_4 = *param_4 + puStack100 * 4;\n                            *param_5 = puStack92;\n                            goto code_r0x00438c87;\n                        }\n                        puVar4 = *(param_2 + *puStack96 * 2);\n                        puStack132 = puVar4;\n                    }\n                } while ((puVar4 <= puStack92) || (puStack80 = uVar9 & uStack104,  puStack80 == puStack120));\n                if (puStack84 == NULL) {\n                    puStack84 = puStack92;\n                }\n                iVar8 = iVar8 + puStack108 * 4;\n                iVar11 = puVar4 - puStack84;\n                puVar4 = puStack84 + iVar11;\n                iVar12 = 1 << (iVar11 & 0x1f);\n                if (puVar4 < puStack112) {\n                    puVar5 = &uStack40 + puVar4 * 2;\n                    puStack88 = puVar4;\n                    do {\n                        uVar2 = *puVar5;\n                        if (iVar12 - uVar2 < 1) break;\n                        iVar11 = iVar11 + 1;\n                        puStack88 = puStack88 + 1;\n                        puVar5 = puVar5 + 1;\n                        iVar12 = (iVar12 - uVar2) * 2;\n                    } while (puStack88 < puStack112);\n                }\n                puStack108 = 1 << (iVar11 & 0x1f);\n                puStack100 = puStack100 + puStack108;\n                if ((param_1 != 1) || (puStack100 < 0x5b0)) {\n                    iVar12 = puStack80 * 4;\n                    *(iVar12 + *param_4) = iVar11;\n                    *(iVar12 + 1 + *param_4) = uVar6;\n                    *(iVar12 + 2 + *param_4) = iVar8 - *param_4 >> 2;\n                    puVar4 = puStack132;\n                    puStack120 = puStack80;\n                    goto code_r0x00438a90;\n                }\n            }\n        }\n    }\ncode_r0x00438c87:\n    fcn.004529f8(param_2);\n    return;\n}\n",
        "token_count": 2561
    },
    "0043baf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0043baf0(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t iStack12;\n    int32_t aiStack8 [2];\n    \n    iVar1 = fcn.0043b750(param_1, aiStack8, &iStack12);\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    if (aiStack8[0] == 0x60010106) {\n        if (iStack12 == 1) {\n            *param_2 = 0x6001010b;\n            return 0;\n        }\n        fcn.00458b9e(iStack12, 0x1e);\n        iVar1 = extraout_EDX_00;\n    }\n    else {\n        if (aiStack8[0] != 0x60010107) {\n            if (aiStack8[0] != 0x60010108) {\n                return 0;\n            }\n            *param_2 = 0x6001010b;\n            return 0;\n        }\n        iVar1 = fcn.0043bdb0(0, *(param_1 + 0x12));\n        fcn.00458b9e(iVar1 * 0x1e - iStack12, 0x1e);\n        iVar1 = extraout_EDX;\n    }\n    *param_2 = (iVar1 != 0) + 0x6001010b;\n    return 0;\n}\n",
        "token_count": 356
    },
    "0043bc80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid fcn.0043bc80(uint *param_1, int32_t *param_2, int32_t *param_3, int32_t *param_4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t in_stack_ffffffec;\n    uint32_t arg_8h;\n    unkuint3 Stack16;\n    uint uStack12;\n    uchar uStack8;\n    uint32_t uStack4;\n    \n    uStack4 = *0x4b4f00 ^ &stack0xffffffec;\n    uStack12 = *param_1;\n    uStack8 = 0;\n    Stack16 = *(param_1 + 1);\n    arg_8h = in_stack_ffffffec & 0xff000000 | *(param_1 + 6);\n    iVar1 = fcn.00458c5b(&uStack12);\n    *param_2 = iVar1;\n    iVar1 = fcn.00458c5b(&Stack16);\n    *param_3 = iVar1;\n    iVar2 = fcn.00458c5b(&stack0xffffffec);\n    *param_4 = iVar2;\n    iVar1 = *param_2;\n    if (((((1999 < iVar1) && (iVar1 < 0x7f7)) && ((iVar1 != 0x7f6 || ((0 < *param_3 && (iVar2 < 0x12)))))) &&\n        (0 < *param_3)) && (((*param_3 < 0xd && (0 < iVar2)) && (iVar2 < 0x20)))) {\n        fcn.004529f8(arg_8h);\n        return;\n    }\n    fcn.004529f8(arg_8h);\n    return;\n}\n",
        "token_count": 389
    },
    "0043be30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043be30(void)\n\n{\n    uint unaff_EBX;\n    uchar auStack176 [164];\n    int32_t iStack12;\n    uint32_t uStack4;\n    \n    uStack4 = *0x4b4f00 ^ auStack176;\n    fcn.00453710(auStack176, 0, 0xac);\n    (*_sym.imp.KERNEL32.dll_GetTimeZoneInformation)(auStack176);\n    if (0 < iStack12) {\n        fcn.004529f8(unaff_EBX);\n        return;\n    }\n    fcn.004529f8(unaff_EBX);\n    return;\n}\n",
        "token_count": 143
    },
    "0043bec0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint8_t * fcn.0043bec0(uint8_t *param_1)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    uint8_t *unaff_EDI;\n    bool bVar8;\n    \n    if (param_1 == NULL) {\n        return NULL;\n    }\n    puVar2 = param_1;\n    do {\n        uVar1 = *puVar2;\n        puVar2 = puVar2 + 1;\n    } while (uVar1 != 0);\n    uVar3 = puVar2 - (param_1 + 1);\n    if ((unaff_EDI == NULL) || (*unaff_EDI == 0)) {\n        return param_1 + uVar3;\n    }\n    puVar2 = unaff_EDI;\n    do {\n        uVar1 = *puVar2;\n        puVar2 = puVar2 + 1;\n    } while (uVar1 != 0);\n    uVar4 = puVar2 - (unaff_EDI + 1);\n    if (uVar4 <= uVar3) {\n        puVar2 = param_1;\n        puVar7 = unaff_EDI;\n        if (uVar4 == uVar3) {\n            do {\n                uVar1 = *puVar2;\n                bVar8 = uVar1 < *puVar7;\n                if (uVar1 != *puVar7) {\ncode_r0x0043bf35:\n                    iVar5 = (1 - bVar8) - (bVar8 != 0);\n                    goto code_r0x0043bf3a;\n                }\n                if (uVar1 == 0) break;\n                uVar1 = puVar2[1];\n                bVar8 = uVar1 < puVar7[1];\n                if (uVar1 != puVar7[1]) goto code_r0x0043bf35;\n                puVar2 = puVar2 + 2;\n                puVar7 = puVar7 + 2;\n            } while (uVar1 != 0);\n            iVar5 = 0;\ncode_r0x0043bf3a:\n            if (iVar5 != 0) {\n                return NULL;\n            }\n        }\n        puVar2 = param_1 + (uVar3 - 1);\n        if (puVar2 != param_1) {\n            puVar7 = puVar2 + (-unaff_EDI - uVar4) + 1;\n            do {\n                uVar1 = *puVar2;\n                puVar6 = unaff_EDI + (uVar4 - 1);\n                while (((uVar1 != 0 && (*puVar6 != 0)) && (puVar6[puVar7] == *puVar6))) {\n                    if (puVar6 == unaff_EDI) {\n                        return puVar2 + (1 - uVar4);\n                    }\n                    puVar6 = puVar6 + -1;\n                    uVar1 = puVar6[puVar7];\n                }\n                puVar2 = puVar2 + -1;\n                puVar7 = puVar7 + -1;\n            } while (puVar2 != param_1);\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 746
    },
    "0043c2e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043c2e0(void)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = fcn.0043c030();\n    if ((piVar1 != NULL) && (*piVar1 != 0)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 69
    },
    "0043c8d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043c8d0(int32_t *param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x485e6b;\n    piStack12 = *in_FS_OFFSET;\n    uVar2 = *0x4b4f00 ^ &stack0xffffffe4;\n    *in_FS_OFFSET = &piStack12;\n    piVar3 = fcn.0045306d(4);\n    uStack4 = 0;\n    if (piVar3 == NULL) {\n        uVar4 = 0;\n    }\n    else {\n        uVar4 = fcn.0043c6b0(param_2, uVar2);\n    }\n    uVar2 = param_1[3];\n    uVar1 = param_1[1];\n    uStack8 = 0xffffffff;\n    if ((uVar1 <= uVar2) || (param_1[4] == 0)) {\n        if (param_1[2] < uVar1 >> 2) {\n            param_1[2] = uVar1 >> 2;\n        }\n        (**(*param_1 + 8))(param_1[2] + uVar1);\n        param_1[3] = uVar2;\n    }\n    *(param_1[4] + param_1[3] * 4) = uVar4;\n    param_1[3] = param_1[3] + 1;\n    *in_FS_OFFSET = piVar3;\n    return;\n}\n",
        "token_count": 405
    },
    "0043d110": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043d110(int32_t *param_1, char *param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    \n    if ((param_2 != NULL) && (*param_2 != '\\0')) {\n        if (*param_1 != 0) {\n            fcn.00452a07(*param_1);\n            *param_1 = 0;\n        }\n        pcVar2 = param_2;\n        do {\n            cVar1 = *pcVar2;\n            pcVar2 = pcVar2 + 1;\n        } while (cVar1 != '\\0');\n        pcVar2 = pcVar2 + (1 - (param_2 + 1));\n        iVar3 = fcn.0045306d(pcVar2);\n        *param_1 = iVar3;\n        if (iVar3 != 0) {\n            fcn.004586b0(iVar3, param_2, pcVar2);\n            pcVar2[*param_1 + -1] = '\\0';\n        }\n    }\n    return;\n}\n",
        "token_count": 245
    },
    "0043d710": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0043d710(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t arg_8h;\n    int32_t iStack28;\n    uint32_t uStack20;\n    uchar uStack16;\n    uchar auStack12 [8];\n    uint32_t uStack4;\n    \n    uStack4 = *0x4b4f00 ^ &stack0xffffffe0;\n    iStack28 = param_3;\n    arg_8h = 0;\n    if (param_1 == 0) {\n        fcn.004529f8(0);\n        return;\n    }\n    if (0 < param_2) {\n        do {\n            iVar5 = param_2;\n            if (8 < param_2) {\n                iVar5 = 8;\n            }\n            iVar1 = 0;\n            iVar4 = iVar5 * 5 + (iVar5 * 5 >> 0x1f & 7U) >> 3;\n            uStack20 = 0;\n            uStack16 = 0;\n            if (0 < iVar5) {\n                puVar3 = iVar5 + -1 + param_1;\n                do {\n                    auStack12[iVar1] = *puVar3;\n                    iVar1 = iVar1 + 1;\n                    puVar3 = puVar3 + -1;\n                } while (iVar1 < iVar5);\n            }\n            param_1 = param_1 + iVar5;\n            iVar1 = 0;\n            if (0 < iVar5) {\n                do {\n                    fcn.0043d690(5);\n                    iVar2 = fcn.0043d6e0();\n                    if (iVar2 < 0) {\n                        fcn.004529f8(arg_8h);\n                        return;\n                    }\n                    uStack20 = uStack20 & 0xffffff00 | uStack20 | iVar2;\n                    iVar1 = iVar1 + 1;\n                    param_3 = iStack28;\n                } while (iVar1 < iVar5);\n            }\n            param_2 = param_2 - iVar5;\n            if (param_3 != 0) {\n                fcn.00452a10(param_3, &uStack20, iVar4);\n            }\n            arg_8h = arg_8h + iVar4;\n            if (param_3 != 0) {\n                param_3 = param_3 + iVar4;\n                iStack28 = param_3;\n            }\n        } while (0 < param_2);\n    }\n    fcn.004529f8(arg_8h);\n    return;\n}\n",
        "token_count": 616
    },
    "00458bb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00458bb0(uint param_1, uint param_2)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    float fVar4;\n    float10 in_ST0;\n    uint32_t uStack32;\n    float fStack28;\n    \n    if (*0x4b8ae0 == 0) {\n        uVar1 = ROUND(in_ST0);\n        uStack32 = uVar1;\n        fStack28 = uVar1 >> 0x20;\n        fVar4 = in_ST0;\n        if ((uStack32 != 0) || (fVar4 = fStack28,  (uVar1 & 0x7fffffff00000000) != 0)) {\n            if (fVar4 < 0) {\n                uVar2 = 0x80000000 < (in_ST0 - uVar1 ^ 0x80000000);\n                bVar3 = CARRY4(uStack32, uVar2);\n                uStack32 = uStack32 + uVar2;\n                fStack28 = fStack28 + bVar3;\n            }\n            else {\n                uVar2 = 0x80000000 < in_ST0 - uVar1;\n                bVar3 = uStack32 < uVar2;\n                uStack32 = uStack32 - uVar2;\n                fStack28 = fStack28 - bVar3;\n            }\n        }\n        return CONCAT44(fStack28, uStack32);\n    }\n    return CONCAT44(param_2, in_ST0);\n}\n",
        "token_count": 345
    },
    "0043d9c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043d9c0(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *unaff_ESI;\n    int32_t iVar3;\n    float10 fVar4;\n    float10 fVar5;\n    \n    iVar2 = 0;\n    if (0 < unaff_ESI[1]) {\n        iVar3 = 0;\n        do {\n            iVar1 = *(*unaff_ESI + 4 + iVar3);\n            *arg_8h = *arg_8h + iVar1;\n            if (*(*unaff_ESI + 8 + iVar3) == 0) {\n                iVar1 = fcn.0043d970();\n            }\n            else {\n                fVar4 = fcn.00459610();\n                fVar5 = fcn.00459610();\n                fcn.004594b0((fVar4 * iVar1) / fVar5);\n                iVar1 = fcn.00458bb0();\n            }\n            *arg_ch = *arg_ch + iVar1;\n            iVar2 = iVar2 + 1;\n            iVar3 = iVar3 + 0xc;\n        } while (iVar2 < unaff_ESI[1]);\n    }\n    return;\n}\n",
        "token_count": 287
    },
    "0043daf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0043daf0(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint16_t in_FPUControlWord;\n    float10 fVar7;\n    uint in_stack_fffffe4c;\n    int32_t iStack404;\n    int32_t *piStack400;\n    int32_t iStack396;\n    double dStack392;\n    int32_t iStack384;\n    uint32_t uStack380;\n    double dStack376;\n    uint32_t uStack368;\n    int32_t iStack364;\n    int32_t iStack360;\n    int32_t iStack356;\n    double dStack352;\n    int32_t *piStack340;\n    int32_t *piStack336;\n    int32_t iStack332;\n    uchar auStack328 [260];\n    uint32_t uStack68;\n    \n    uStack68 = *0x4b4f00 ^ &stack0xfffffe4c;\n    iStack332 = arg_10h;\n    piStack336 = arg_14h;\n    iStack404 = 0;\n    iStack384 = 0;\n    auStack328[0] = 0;\n    fcn.00453710(auStack328 + 1);\n    dStack352 = 0.0;\n    if ((arg_10h != 0) && (arg_ch != 0)) {\n        if (arg_8h == '\\x01') {\n            piStack400 = 0x4b4308;\n            piVar6 = 0x4b4308;\n        }\n        else {\n            if (arg_8h != '\\x02') goto code_r0x0043ddd9;\n            piVar6 = 0x4b4388;\n            piStack400 = 0x4b4388;\n        }\n        fcn.0043d9c0(&iStack384, &iStack404);\n        if ((arg_14h != NULL) && (iStack384 <= *arg_14h)) {\n            iVar5 = 0;\n            iStack356 = 0;\n            uStack380 = 0;\n            if (0 < piVar6[1]) {\n                iStack396 = 0;\n                do {\n                    iStack364 = *(*piVar6 + 4 + iStack396);\n                    puVar2 = *piVar6 + iStack396;\n                    uStack368 = *puVar2;\n                    if (*(puVar2 + 8) == 0) {\n                        iVar3 = fcn.0043d970();\n                    }\n                    else {\n                        fVar7 = fcn.00459610();\n                        dStack376 = fVar7 * iStack364;\n                        fVar7 = fcn.00459610();\n                        fcn.004594b0(dStack376 / fVar7);\n                        iVar3 = fcn.00458bb0();\n                    }\n                    if (0 < iVar3) {\n                        dStack392 = dStack392 & 0xffffffff00000000 | iVar3 - 1;\n                        do {\n                            fVar7 = fcn.00459a00();\n                            uVar4 = uStack380 & 0x80000007;\n                            if (uVar4 < 0) {\n                                uVar4 = (uVar4 - 1 | 0xfffffff8) + 1;\n                            }\n                            iStack404 = (*((uStack380 + (uStack380 >> 0x1f & 7U) >> 3) + arg_ch) &\n                                        1 << (7U - uVar4 & 0x1f)) != 0;\n                            dStack392 = dStack392 & 0xffffffff00000000 | dStack392._0_4_ - 1;\n                            uStack380 = uStack380 + 1;\n                            iVar3 = iVar3 + -1;\n                            dStack352 = iStack404 * fVar7 + dStack352;\n                            piVar6 = piStack400;\n                        } while (iVar3 != 0);\n                    }\n                    piStack340 = *piVar6 + 8 + iStack396;\n                    if (*(*piVar6 + 8 + iStack396) == 0) {\n                        fcn.00458bb0();\n                        iVar3 = fcn.0043da50();\n                        if (iVar3 != 0) goto code_r0x0043ddd9;\n                        iVar5 = iVar5 + 8;\n                    }\n                    else {\n                        iVar3 = 0;\n                        if (0 < iStack364) {\n                            iStack360 = iStack364 + -1;\n                            do {\n                                iVar1 = *piStack340;\n                                if (iVar1 == 0) goto code_r0x0043ddd9;\n                                dStack376 = uStack368;\n                                fVar7 = fcn.00459a00();\n                                dStack392 = fVar7;\n                                fVar7 = fcn.0045999a();\n                                fVar7 = fcn.00459860(fVar7 / dStack392);\n                                dStack392 = dStack392 & 0xffffffffffff0000 | in_FPUControlWord;\n                                dStack376 = dStack376 & 0xffffffff00000000 | ROUND(fVar7);\n                                uVar4 = ROUND(fVar7) & 0xff;\n                                if (uStack368 <= uVar4) goto code_r0x0043ddd9;\n                                iStack360 = iStack360 + -1;\n                                auStack328[iVar5] = *(iVar1 + uVar4);\n                                iVar3 = iVar3 + 1;\n                                iVar5 = iVar5 + 1;\n                                piVar6 = piStack400;\n                            } while (iVar3 < iStack364);\n                        }\n                    }\n                    dStack352 = 0.0;\n                    iStack396 = iStack396 + 0xc;\n                    iStack356 = iStack356 + 1;\n                    *piStack336 = iVar5;\n                } while (iStack356 < piVar6[1]);\n            }\n            iVar3 = iStack332;\n            iVar5 = iStack384;\n            fcn.004586b0(iStack332, auStack328, iStack384);\n            *(iVar3 + iVar5) = 0;\n            fcn.004529f8(in_stack_fffffe4c);\n            return;\n        }\n    }\ncode_r0x0043ddd9:\n    fcn.004529f8(in_stack_fffffe4c);\n    return;\n}\n",
        "token_count": 1465
    },
    "0043df60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043df60(uint32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t **in_FS_OFFSET;\n    uint unaff_retaddr;\n    uint32_t *puStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x48617b;\n    puStack12 = *in_FS_OFFSET;\n    puVar1 = *0x4b4f00 ^ &stack0xffffffec;\n    *in_FS_OFFSET = &puStack12;\n    if (param_1[1] != 0) {\n        iVar2 = fcn.0043bfb0(0x48f2e0);\n        if (iVar2 == 0) {\n            iVar2 = fcn.0045306d(0xc0);\n            uStack8 = 0;\n            if (iVar2 != 0) {\n                uVar3 = fcn.00442460(param_1, unaff_retaddr);\n                *in_FS_OFFSET = puVar1;\n                return uVar3;\n            }\n        }\n    }\n    *in_FS_OFFSET = param_1;\n    return 0;\n}\n",
        "token_count": 279
    },
    "0043e070": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043e070(uint param_1, uint8_t *param_2, uint8_t *param_3, int32_t param_4, uint8_t param_5)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint8_t uVar4;\n    uint8_t *puVar5;\n    int32_t iVar6;\n    \n    iVar3 = *0x4b4460;\n    iVar6 = 0;\n    if (param_2 == NULL) {\n        return 0;\n    }\n    uVar4 = *param_2;\n    uVar2 = uVar4;\n    puVar5 = param_2;\n    while (uVar2 != 0) {\n        if (((uVar2 < 0x20) || (0x7f < uVar2)) || ((*(uVar2 + 0x48f260) & param_5) == 0)) {\n            iVar6 = iVar6 + 1;\n        }\n        puVar1 = puVar5 + 1;\n        puVar5 = puVar5 + 1;\n        uVar2 = *puVar1;\n    }\n    if (puVar5 + (iVar6 * 2 - param_2) + 1 <= param_4) {\n        while (uVar4 != 0) {\n            uVar4 = *param_2;\n            if ((0x5f < uVar4 - 0x20) || ((*(uVar4 + 0x48f260) & param_5) == 0)) {\n                *param_3 = 0x25;\n                param_3[1] = *((uVar4 >> 4) + iVar3);\n                param_3 = param_3 + 2;\n                uVar4 = *((uVar4 & 0xf) + iVar3);\n            }\n            *param_3 = uVar4;\n            param_2 = param_2 + 1;\n            param_3 = param_3 + 1;\n            uVar4 = *param_2;\n        }\n        *param_3 = 0;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 486
    },
    "0043efe0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043efe0(uint32_t *param_1, uchar *param_2, int32_t param_3, char param_4)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t *puVar8;\n    \n    puVar1 = param_1;\n    fcn.00453710(param_1, 0, 0x2630);\n    if (param_1[0x98b] == 0) {\n        fcn.0043eda0();\n    }\n    *param_1 = param_3 + 0x1fU >> 5;\n    *(param_1 + 1) = *param_2;\n    *(param_1 + 5) = param_2[1];\n    *(param_1 + 6) = param_2[2];\n    *(param_1 + 7) = param_2[3];\n    *(param_1 + 2) = param_2[4];\n    *(param_1 + 9) = param_2[5];\n    *(param_1 + 10) = param_2[6];\n    *(param_1 + 0xb) = param_2[7];\n    *(param_1 + 3) = param_2[8];\n    *(param_1 + 0xd) = param_2[9];\n    *(param_1 + 0xe) = param_2[10];\n    *(param_1 + 0xf) = param_2[0xb];\n    *(param_1 + 4) = param_2[0xc];\n    *(param_1 + 0x11) = param_2[0xd];\n    *(param_1 + 0x12) = param_2[0xe];\n    *(param_1 + 0x13) = param_2[0xf];\n    if (*param_1 == 4) {\n        uVar6 = param_1[4];\n        iVar7 = 2;\n        puVar2 = param_1 + 2;\n        puVar8 = param_1 + 0x182;\n        do {\n            uVar6 = CONCAT31(CONCAT21(CONCAT11(*((uVar6 & 0xff) + 0x404 + param_1), *((uVar6 >> 0x18) + 0x404 + param_1)\n                                              ), *(((uVar6 >> 8 & 0xff00) >> 8) + 0x404 + param_1)), \n                             *((uVar6 >> 8 & 0xff) + 0x404 + param_1)) ^ puVar2[-1] ^ puVar8[-1];\n            puVar2[3] = uVar6;\n            uVar6 = uVar6 ^ *puVar2;\n            puVar2[4] = uVar6;\n            uVar6 = uVar6 ^ puVar2[1];\n            puVar2[5] = uVar6;\n            uVar6 = uVar6 ^ puVar2[2];\n            puVar2[6] = uVar6;\n            uVar6 = CONCAT31(CONCAT21(CONCAT11(*((uVar6 & 0xff) + 0x404 + param_1), *((uVar6 >> 0x18) + 0x404 + param_1)\n                                              ), *(((uVar6 >> 8 & 0xff00) >> 8) + 0x404 + param_1)), \n                             *((uVar6 >> 8 & 0xff) + 0x404 + param_1)) ^ puVar2[3] ^ *puVar8;\n            puVar2[7] = uVar6;\n            uVar6 = uVar6 ^ puVar2[4];\n            puVar2[8] = uVar6;\n            uVar6 = uVar6 ^ puVar2[5];\n            puVar2[9] = uVar6;\n            uVar6 = uVar6 ^ puVar2[6];\n            puVar2[10] = uVar6;\n            uVar6 = CONCAT31(CONCAT21(CONCAT11(*((uVar6 & 0xff) + 0x404 + param_1), *((uVar6 >> 0x18) + 0x404 + param_1)\n                                              ), *(((uVar6 >> 8 & 0xff00) >> 8) + 0x404 + param_1)), \n                             *((uVar6 >> 8 & 0xff) + 0x404 + param_1)) ^ puVar8[1] ^ puVar2[7];\n            puVar2[0xb] = uVar6;\n            uVar6 = uVar6 ^ puVar2[8];\n            puVar2[0xc] = uVar6;\n            uVar6 = uVar6 ^ puVar2[9];\n            puVar2[0xd] = uVar6;\n            uVar6 = uVar6 ^ puVar2[10];\n            puVar2[0xe] = uVar6;\n            uVar6 = CONCAT31(CONCAT21(CONCAT11(*((uVar6 & 0xff) + 0x404 + param_1), *((uVar6 >> 0x18) + 0x404 + param_1)\n                                              ), *(((uVar6 >> 8 & 0xff00) >> 8) + 0x404 + param_1)), \n                             *((uVar6 >> 8 & 0xff) + 0x404 + param_1)) ^ puVar8[2] ^ puVar2[0xb];\n            puVar2[0xf] = uVar6;\n            uVar6 = uVar6 ^ puVar2[0xc];\n            puVar2[0x10] = uVar6;\n            uVar6 = uVar6 ^ puVar2[0xd];\n            puVar2[0x11] = uVar6;\n            uVar6 = uVar6 ^ puVar2[0xe];\n            puVar2[0x12] = uVar6;\n            uVar6 = CONCAT31(CONCAT21(CONCAT11(*((uVar6 & 0xff) + 0x404 + param_1), *((uVar6 >> 0x18) + 0x404 + param_1)\n                                              ), *(((uVar6 >> 8 & 0xff00) >> 8) + 0x404 + param_1)), \n                             *((uVar6 >> 8 & 0xff) + 0x404 + param_1)) ^ puVar8[3] ^ puVar2[0xf];\n            puVar2[0x13] = uVar6;\n            uVar6 = uVar6 ^ puVar2[0x10];\n            puVar2[0x14] = uVar6;\n            uVar6 = uVar6 ^ puVar2[0x11];\n            puVar2[0x15] = uVar6;\n            uVar6 = uVar6 ^ puVar2[0x12];\n            iVar7 = iVar7 + -1;\n            puVar2[0x16] = uVar6;\n            puVar2 = puVar2 + 0x14;\n            puVar8 = puVar8 + 5;\n        } while (iVar7 != 0);\n    }\n    if (param_4 != '\\x01') {\n        param_1[0x42] = param_1[2];\n        uVar6 = *param_1;\n        param_1[0x43] = param_1[3];\n        param_1[0x41] = param_1[1];\n        param_1[0x44] = param_1[4];\n        param_1 = 0x4;\n        if (4 < uVar6 * 4 + 0x18) {\n            puVar2 = puVar1 + 5;\n            do {\n                uVar6 = *puVar2;\n                uVar3 = (uVar6 >> 7 & 0x1010101) * 0x1b ^ (uVar6 & 0xff7f7f7f) * 2;\n                uVar4 = (uVar3 >> 7 & 0x1010101) * 0x1b ^ (uVar3 & 0xff7f7f7f) * 2;\n                uVar5 = (uVar4 >> 7 & 0x1010101) * 0x1b ^ (uVar4 & 0xff7f7f7f) * 2;\n                uVar6 = uVar6 ^ uVar5;\n                puVar2[0x40] = ((uVar4 ^ uVar6) >> 0x10 | (uVar4 ^ uVar6) << 0x10) ^\n                               ((uVar3 ^ uVar6) >> 8 | (uVar3 ^ uVar6) << 0x18) ^ (uVar6 >> 0x18 | uVar6 << 8) ^ uVar5 ^\n                               uVar4 ^ uVar3;\n                param_1 = param_1 + 1;\n                puVar2 = puVar2 + 1;\n            } while (param_1 < *puVar1 * 4 + 0x18);\n        }\n    }\n    return;\n}\n",
        "token_count": 2099
    },
    "00440be0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00440be0(uint param_1, uint param_2, int32_t param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t extraout_ECX;\n    uint unaff_ESI;\n    char *pcVar4;\n    \n    fcn.00459c50();\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetVersionExA)(*0x10);\n    if (iVar2 != 0) {\n        if (param_3 == 2) {\n            pcVar4 = \"security.dll\";\n        }\n        else {\n            if (param_3 != 1) goto code_r0x00440d72;\n            pcVar4 = \"secur32.dll\";\n        }\n        fcn.004586b0(&stack0x00000090, pcVar4, 0xfff);\n        if (*(extraout_ECX + 0x14) == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(&stack0x00000090);\n            *(extraout_ECX + 0x14) = iVar2;\n            if (iVar2 == 0) goto code_r0x00440d72;\n        }\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (*(extraout_ECX + 0x18) == 0) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*(extraout_ECX + 0x14), \"FreeCredentialsHandle\");\n            *(extraout_ECX + 0x18) = uVar3;\n        }\n        if (*(extraout_ECX + 0x1c) == 0) {\n            uVar3 = (*pcVar1)(*(extraout_ECX + 0x14), \"QuerySecurityPackageInfoA\");\n            *(extraout_ECX + 0x1c) = uVar3;\n        }\n        if (*(extraout_ECX + 0x20) == 0) {\n            uVar3 = (*pcVar1)(*(extraout_ECX + 0x14), \"AcquireCredentialsHandleA\");\n            *(extraout_ECX + 0x20) = uVar3;\n        }\n        if (*(extraout_ECX + 0x24) == 0) {\n            uVar3 = (*pcVar1)(*(extraout_ECX + 0x14), \"FreeContextBuffer\");\n            *(extraout_ECX + 0x24) = uVar3;\n        }\n        if (*(extraout_ECX + 0x28) == 0) {\n            uVar3 = (*pcVar1)(*(extraout_ECX + 0x14), \"InitializeSecurityContextA\");\n            *(extraout_ECX + 0x28) = uVar3;\n        }\n        if (*(extraout_ECX + 0x2c) == 0) {\n            uVar3 = (*pcVar1)(*(extraout_ECX + 0x14), \"CompleteAuthToken\");\n            *(extraout_ECX + 0x2c) = uVar3;\n        }\n        if (*(extraout_ECX + 0x30) == 0) {\n            uVar3 = (*pcVar1)(*(extraout_ECX + 0x14), \"EnumerateSecurityPackagesA\");\n            *(extraout_ECX + 0x30) = uVar3;\n        }\n        if (*(extraout_ECX + 0x34) == 0) {\n            uVar3 = (*pcVar1)(*(extraout_ECX + 0x14), \"DeleteSecurityContext\");\n            *(extraout_ECX + 0x34) = uVar3;\n        }\n        if ((((*(extraout_ECX + 0x18) != 0) && (*(extraout_ECX + 0x1c) != 0)) && (*(extraout_ECX + 0x20) != 0)) &&\n           (((*(extraout_ECX + 0x28) != 0 && (*(extraout_ECX + 0x30) != 0)) && (*(extraout_ECX + 0x34) != 0)))) {\n            fcn.004529f8(unaff_ESI);\n            return;\n        }\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(*(extraout_ECX + 0x14));\n        *(extraout_ECX + 0x14) = 0;\n    }\ncode_r0x00440d72:\n    fcn.004529f8(unaff_ESI);\n    return;\n}\n",
        "token_count": 993
    },
    "00442120": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00442120(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t unaff_EBX;\n    uint32_t uVar4;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    int32_t *unaff_retaddr;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint32_t uStack52;\n    uint uVar5;\n    int32_t iVar6;\n    uchar auStack32 [8];\n    uint uStack24;\n    uint uStack20;\n    int32_t iStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x4865d1;\n    iStack12 = *in_FS_OFFSET;\n    uStack52 = *0x4b4f00 ^ &stack0xffffffd0;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    uStack56 = 0xffffffff;\n    uStack60 = 0x4a23ad;\n    uStack20 = 0;\n    uStack64 = 0x442160;\n    fcn.0043c980();\n    uStack64 = 0;\n    iStack12 = 1;\n    iVar6 = 0;\n    uVar4 = 0;\n    uStack52 = (**(*unaff_retaddr + 0x2c))(&stack0xffffffe0, 1, 1);\n    do {\n        if (uStack52 != 1) {\n            (**(*unaff_retaddr + 0x10))(&stack0xffffffcc);\n            uStack24 = uStack20;\n            if (uStack52 == -0xd) {\n                *(unaff_EBX + 0x10) = 0x1e;\n            }\n            fcn.0043c980(0x4a23ad, 0xffffffff);\ncode_r0x00442286:\n            uStack52 = 1;\n            fcn.0043c360();\n            *in_FS_OFFSET = iVar6;\n            return uStack24;\n        }\n        iVar2 = fcn.0043c2e0();\n        cVar1 = unaff_EDI;\n        uVar5 = unaff_EDI;\n        if ((iVar2 == 0) || ((cVar1 != '\\r' && (cVar1 != '\\n')))) {\n            (&stack0xffffffc4)[uVar4] = cVar1;\n            fcn.0043c5d0(unaff_EDI);\n            if ((&stack0xffffffc0)[uVar4] == '\\n') {\n                uVar3 = uVar4 + 3 & 0x80000003;\n                if (uVar3 < 0) {\n                    uVar3 = (uVar3 - 1 | 0xfffffffc) + 1;\n                }\n                if ((&stack0xffffffc0)[uVar3] == '\\r') {\n                    uVar3 = uVar4 + 2 & 0x80000003;\n                    if (uVar3 < 0) {\n                        uVar3 = (uVar3 - 1 | 0xfffffffc) + 1;\n                    }\n                    if ((&stack0xffffffc0)[uVar3] == '\\n') {\n                        uVar3 = uVar4 + 1 & 0x80000003;\n                        if (uVar3 < 0) {\n                            uVar3 = (uVar3 - 1 | 0xfffffffc) + 1;\n                        }\n                        if ((&stack0xffffffc0)[uVar3] == '\\r') {\n                            fcn.0043c6b0(&stack0xffffffc4);\n                            goto code_r0x00442286;\n                        }\n                    }\n                }\n            }\n            uVar4 = uVar4 + 1 & 0x80000003;\n            if (uVar4 < 0) {\n                uVar4 = (uVar4 - 1 | 0xfffffffc) + 1;\n            }\n        }\n        uStack52 = (**(*unaff_retaddr + 0x2c))(&stack0xffffffd0, 1, 1, 0);\n        unaff_EDI = uVar5;\n    } while( true );\n}\n",
        "token_count": 945
    },
    "00442460": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\ncode ** __thiscall fcn.00442460(code **param_1, uint param_2, uint param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack32;\n    uchar uStack28;\n    uint uStack20;\n    code **ppcStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x4866da;\n    uStack12 = *in_FS_OFFSET;\n    uStack52 = *0x4b4f00 ^ &stack0xffffffd0;\n    *in_FS_OFFSET = &uStack12;\n    uStack32 = 0;\n    uStack56 = param_3;\n    uStack60 = param_2;\n    ppcStack16 = param_1;\n    fcn.00445280();\n    uStack12 = 0;\n    *param_1 = vtable.PR_HTTP::TmHttpURLConnection.0;\n    param_1[5] = NULL;\n    param_1[6] = NULL;\n    param_1[7] = NULL;\n    param_1[8] = NULL;\n    param_1[9] = NULL;\n    param_1[10] = NULL;\n    param_1[0xb] = NULL;\n    param_1[0xc] = NULL;\n    param_1[0xd] = NULL;\n    fcn.0043beb0();\n    uStack12._0_1_ = 1;\n    fcn.0043beb0();\n    uStack12._0_1_ = 2;\n    fcn.0043beb0();\n    uStack12 = CONCAT31(uStack12._1_3_, 3);\n    fcn.0043c980();\n    uStack20 = CONCAT31(uStack20._1_3_, 4);\n    fcn.0043c980(0x4a23ad, 0xffffffff);\n    uStack28 = 5;\n    param_1[0x2d] = 0xffffffff;\n    param_1[0x2e] = NULL;\n    param_1[0x2f] = NULL;\n    param_1[4] = 0x14;\n    uStack20 = fcn.0045306d(8);\n    uStack28 = 6;\n    if (uStack20 == 0) {\n        pcVar1 = NULL;\n    }\n    else {\n        pcVar1 = fcn.00448780();\n    }\n    uStack28 = 5;\n    param_1[0x1e] = pcVar1;\n    uStack20 = fcn.0045306d(8);\n    uStack28 = 7;\n    if (uStack20 == 0) {\n        pcVar1 = NULL;\n    }\n    else {\n        pcVar1 = fcn.00448720();\n    }\n    uStack28 = 5;\n    param_1[0x20] = pcVar1;\n    uStack20 = fcn.0045306d(800);\n    uStack28 = 8;\n    if (uStack20 == 0) {\n        pcVar1 = NULL;\n    }\n    else {\n        pcVar1 = fcn.00447490();\n    }\n    uStack28 = 5;\n    param_1[0x1f] = pcVar1;\n    iVar2 = fcn.0043d100();\n    if ((iVar2 == 0) || (iVar2 = fcn.0043d0c0(),  iVar2 != 0)) {\n        pcVar1 = NULL;\n    }\n    else {\n        pcVar1 = 0x1;\n    }\n    param_1[0x15] = pcVar1;\n    iVar2 = fcn.0043d100();\n    if ((iVar2 == 0) || (iVar2 = fcn.0043d0c0(),  iVar2 != 1)) {\n        pcVar1 = fcn.00446fd0(0, 0, 0, 0);\n        param_1[0x19] = pcVar1;\n    }\n    else {\n        fcn.0043d0d0(&stack0xffffffd4);\n        uStack32 = CONCAT31(uStack32._1_3_, 9);\n        fcn.0043e050(&uStack52);\n        uStack32 = fcn.0043e030(&uStack60);\n        uVar3 = fcn.0043bff0();\n        uVar3 = fcn.0043bff0(uVar3);\n        uVar3 = fcn.0043d0f0(uVar3);\n        uVar3 = fcn.0043bff0(uVar3);\n        pcVar1 = fcn.00446fd0(uVar3);\n        param_1[0x19] = pcVar1;\n        fcn.0043c360();\n        fcn.0043c360();\n        fcn.0043c360();\n    }\n    uStack56 = fcn.0045306d(0x58);\n    if (uStack56 == 0) {\n        pcVar1 = NULL;\n    }\n    else {\n        fcn.0043c980(0x4a23ad, 0xffffffff);\n        pcVar1 = fcn.004451c0(&stack0xffffffd8);\n    }\n    param_1[0x18] = pcVar1;\n    fcn.0043c360();\n    if (param_1[0x15] == NULL) {\n        uVar3 = fcn.0043e010(&uStack32);\n        fcn.0043c590(uVar3);\n        fcn.0043c360();\n        pcVar1 = fcn.0043d0c0();\n    }\n    else {\n        uVar3 = fcn.0043e030(&uStack32);\n        fcn.0043c590(uVar3);\n        fcn.0043c360();\n        pcVar1 = fcn.0043d0f0();\n    }\n    param_1[0x1b] = pcVar1;\n    param_1[0x1c] = 0x1;\n    param_1[0x1d] = 0x1;\n    fcn.00442410();\n    uVar3 = fcn.0043d1b0(&stack0xffffffdc);\n    uStack52 = CONCAT31(uStack52._1_3_, 0x11);\n    fcn.0043c590(uVar3);\n    uStack56 = CONCAT31(uStack56._1_3_, 5);\n    fcn.0043c360();\n    *in_FS_OFFSET = -1;\n    return param_1;\n}\n",
        "token_count": 1523
    },
    "004427d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __thiscall fcn.004427d0(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t *in_FS_OFFSET;\n    char *pcVar6;\n    uchar *puStack76;\n    uchar *puStack72;\n    char *pcStack68;\n    uint32_t uStack64;\n    uint32_t uStack60;\n    uint32_t uStack56;\n    uint uStack40;\n    uchar auStack36 [4];\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    int32_t iStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x4867bd;\n    iStack12 = *in_FS_OFFSET;\n    uStack56 = *0x4b4f00 ^ &stack0xffffffcc;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    uStack40 = 0;\n    uStack60 = 0xffffffff;\n    uStack64 = 0x4a23ad;\n    uStack4 = 0;\n    pcStack68 = 0x442814;\n    fcn.0043c980();\n    pcStack68 = \"GET \";\n    iStack12 = 0;\n    puStack72 = 0x44282c;\n    fcn.0043c5f0();\n    if (*(param_1 + 0x54) == 0) {\n        puStack72 = &stack0xffffffd8;\n        puStack76 = 0x44285a;\n        uVar1 = fcn.0043e050();\n        puStack76 = &stack0xffffffd0;\n        uStack20 = 2;\n        uStack56 = 5;\n        uVar2 = fcn.0043e030();\n        uStack24 = 3;\n        uStack60 = 0xd;\n        uVar1 = fcn.0043c7b0(&stack0xffffffc8, uVar2, uVar1);\n        uStack24 = 4;\n        uVar5 = 0x1d;\n    }\n    else {\n        puStack72 = &stack0xffffffdc;\n        puStack76 = 0x44283e;\n        uVar1 = fcn.0043dff0();\n        uStack20 = 1;\n        uVar5 = 3;\n    }\n    uStack60 = uVar5;\n    fcn.0043c610(uVar1);\n    uStack28 = 3;\n    if ((uVar5 & 0x10) != 0) {\n        uVar5 = uVar5 & 0xffffffef;\n        uStack64 = uVar5;\n        fcn.0043c360();\n    }\n    uStack28 = 2;\n    if ((uVar5 & 8) != 0) {\n        uVar5 = uVar5 & 0xfffffff7;\n        uStack64 = uVar5;\n        fcn.0043c360();\n    }\n    uStack28 = 1;\n    if ((uVar5 & 4) != 0) {\n        uVar5 = uVar5 & 0xfffffffb;\n        uStack64 = uVar5;\n        fcn.0043c360();\n    }\n    uStack28 = 0;\n    if ((uVar5 & 2) != 0) {\n        uStack64 = uVar5 & 0xfffffffd;\n        fcn.0043c360();\n    }\n    fcn.0043c5f0(\" HTTP/1.1\\r\\n\");\n    uVar1 = fcn.0043d0c0();\n    uVar1 = fcn.0043e950(&stack0xffffffd4, uVar1);\n    uStack32 = 5;\n    uVar2 = fcn.0043e010(&stack0xffffffd0);\n    auStack36[0] = 6;\n    uVar2 = fcn.0043ca10(&stack0xffffffbc, \"Host: \", uVar2);\n    auStack36[0] = 7;\n    uVar2 = fcn.0043c840(&stack0xffffffc0, uVar2, 0x48f2ec);\n    auStack36[0] = 8;\n    uVar1 = fcn.0043c7b0(&stack0xffffffc4, uVar2, uVar1);\n    auStack36[0] = 9;\n    iVar3 = fcn.0043c840(&stack0xffffffc8, uVar1, 0x48f42c);\n    auStack36[0] = 10;\n    fcn.0043c610();\n    uStack40._0_1_ = 9;\n    fcn.0043c360();\n    uStack40._0_1_ = 8;\n    fcn.0043c360();\n    uStack40._0_1_ = 7;\n    fcn.0043c360();\n    uStack40._0_1_ = 6;\n    fcn.0043c360();\n    uStack40._0_1_ = 5;\n    fcn.0043c360();\n    uStack40 = uStack40._1_3_ << 8;\n    fcn.0043c360();\n    fcn.0043c5f0(\"User-Agent: \");\n    iVar4 = fcn.0043d180();\n    if (iVar4 == 0) {\n        uVar1 = 0x4b4468;\n    }\n    else {\n        uVar1 = fcn.0043d180();\n    }\n    fcn.0043c5f0(uVar1);\n    fcn.0043c5f0(0x48f42c);\n    fcn.0043c5f0(\"Accept: */*\\r\\nPragma: no-cache\\r\\nCache-Control: no-cache,no-store\\r\\n\");\n    uVar1 = fcn.00441500(&stack0xffffffbc);\n    uStack60 = 0xb;\n    fcn.0043c610(uVar1);\n    uStack64 = uStack64 & 0xffffff00;\n    fcn.0043c360();\n    uVar1 = fcn.004419b0(&stack0xffffffb4);\n    pcStack68 = 0xc;\n    fcn.0043c610(uVar1);\n    puStack72 = puStack72 & 0xffffff00;\n    fcn.0043c360();\n    fcn.0043c5f0(\"Proxy-Connection: Keep-Alive\\r\\n\");\n    if (*(param_1 + 0xa4) == 0) {\n        pcVar6 = \"Connection: Close\\r\\n\";\n    }\n    else {\n        pcVar6 = \"Connection: Keep-Alive\\r\\n\";\n    }\n    fcn.0043c5f0(pcVar6);\n    fcn.0043c5f0(0x48f42c);\n    *in_FS_OFFSET = iVar3;\n    return param_2;\n}\n",
        "token_count": 1581
    },
    "00442b00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00442b00(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00445030();\n    if (iVar1 == 0) {\n        if ((*(param_1 + 0xa8) != 0) && (*(param_1 + 0xa8) != 1)) {\n            fcn.00442410();\n            *(param_1 + 0x94) = 0;\n            *(param_1 + 0xa0) = 1;\n            return 0;\n        }\n        if ((*(param_1 + 0xa4) != 0) && (*(param_1 + 0xa4) != 1)) {\n            fcn.00442410();\n            *(param_1 + 0x84) = 0;\n            *(param_1 + 0x90) = 1;\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 212
    },
    "00442d00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00442d00(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    int32_t iVar5;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x486848;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &stack0xffffffe0;\n    *in_FS_OFFSET = &piStack12;\n    puVar3 = param_1 + 0x88;\n    if (*(param_1 + 0x84) == 0) {\n        iVar5 = 1;\n        puVar4 = puVar3;\n        do {\n            if (*puVar4 != 0) {\n                if (iVar5 == 1) {\n                    if (*(param_1 + 0xa4) == 1) {\n                        fcn.00442b80(uVar1);\n                        *(param_1 + 0xa4) = 2;\n                    }\n                    else {\n                        *puVar3 = 0;\n                        *(param_1 + 0xa4) = 0;\n                    }\n                }\n                else if ((1 < iVar5) && (iVar5 < 4)) {\n                    *(param_1 + 0x84 + iVar5 * 4) = 0;\n                }\n                break;\n            }\n            iVar5 = iVar5 + 1;\n            puVar4 = puVar4 + 1;\n        } while (iVar5 < 4);\n    }\n    else {\n        *(param_1 + 0x84) = 0;\n        iVar5 = 1;\n        puVar4 = puVar3;\n        do {\n            fcn.00444e60();\n            piStack12 = NULL;\n            iVar2 = fcn.0043c2e0();\n            *puVar4 = iVar2 == 0;\n            piStack12 = 0xffffffff;\n            fcn.0043c360();\n            iVar5 = iVar5 + 1;\n            puVar4 = puVar4 + 1;\n        } while (iVar5 < 4);\n        if ((*puVar3 != 0) || (*(param_1 + 0x8c) != 0)) {\n            *(param_1 + 0x90) = 1;\n        }\n        if (*(param_1 + 0x54) != 0) {\n            *puVar3 = 0;\n        }\n        if (*puVar3 != 0) {\n            *(param_1 + 0xa4) = 1;\n        }\n        if (*(param_1 + 0x8c) != 0) {\n            fcn.00441e60();\n        }\n    }\n    *(param_1 + 0x70) = 0;\n    *(param_1 + 0x74) = 1;\n    iVar5 = 1;\n    do {\n        if (*puVar3 != 0) {\n            *(param_1 + 0x70) = 1;\n            if (iVar5 == 1) {\n                if (*(param_1 + 0xa4) == 2) {\n                    *(param_1 + 0x74) = 0;\n                }\n            }\n            else if (((1 < iVar5) && (iVar5 < 4)) && (*(param_1 + 0xa8) == 3)) {\n                *(param_1 + 0x94) = 0;\n                *(param_1 + 0x98) = 1;\n                *(param_1 + 0xa8) = 1;\n            }\n            break;\n        }\n        iVar5 = iVar5 + 1;\n        puVar3 = puVar3 + 1;\n    } while (iVar5 < 4);\n    if (*(param_1 + 0x70) == 0) {\n        *(param_1 + 0x10) = 0x191;\n    }\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 919
    },
    "00442eb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00442eb0(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint32_t *puVar4;\n    int32_t iVar5;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x486878;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &stack0xffffffe4;\n    *in_FS_OFFSET = &piStack12;\n    if (*(param_1 + 0x94) == 0) {\n        iVar5 = 1;\n        piVar3 = param_1 + 0x98;\n        do {\n            if (*piVar3 != 0) {\n                if (iVar5 == 1) {\n                    if (*(param_1 + 0xa8) == 1) {\n                        fcn.00442b80(uVar1);\n                        *(param_1 + 0xa8) = 2;\n                    }\n                    else {\n                        *(param_1 + 0x98) = 0;\n                        *(param_1 + 0xa8) = 0;\n                    }\n                }\n                else if ((1 < iVar5) && (iVar5 < 4)) {\n                    *(param_1 + 0x94 + iVar5 * 4) = 0;\n                }\n                break;\n            }\n            iVar5 = iVar5 + 1;\n            piVar3 = piVar3 + 1;\n        } while (iVar5 < 4);\n    }\n    else {\n        *(param_1 + 0x94) = 0;\n        iVar5 = 1;\n        puVar4 = param_1 + 0x98;\n        do {\n            fcn.00444eb0();\n            piStack12 = NULL;\n            iVar2 = fcn.0043c2e0();\n            *puVar4 = iVar2 == 0;\n            piStack12 = 0xffffffff;\n            fcn.0043c360();\n            iVar5 = iVar5 + 1;\n            puVar4 = puVar4 + 1;\n        } while (iVar5 < 4);\n        if ((*(param_1 + 0x98) != 0) || (*(param_1 + 0x9c) != 0)) {\n            *(param_1 + 0xa0) = 1;\n        }\n        if (*(param_1 + 0x98) != 0) {\n            *(param_1 + 0xa8) = 1;\n        }\n        if (*(param_1 + 0x9c) != 0) {\n            fcn.00441fe0();\n        }\n    }\n    *(param_1 + 0x70) = 0;\n    *(param_1 + 0x74) = 1;\n    iVar5 = 1;\n    piVar3 = param_1 + 0x98;\n    do {\n        if (*piVar3 != 0) {\n            *(param_1 + 0x70) = 1;\n            if ((iVar5 == 1) && (*(param_1 + 0xa8) == 2)) {\n                *(param_1 + 0x74) = 0;\n            }\n            break;\n        }\n        iVar5 = iVar5 + 1;\n        piVar3 = piVar3 + 1;\n    } while (iVar5 < 4);\n    if (*(param_1 + 0x70) == 0) {\n        *(param_1 + 0x10) = 0x197;\n    }\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 836
    },
    "00443cb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00443cb0(uint32_t *param_1, uint32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    char *pcStack16;\n    uint32_t *puStack12;\n    int32_t iStack8;\n    \n    uVar3 = (param_1[1] >> 4 ^ *param_1) & 0xf0f0f0f;\n    uVar4 = *param_1 ^ uVar3;\n    uVar5 = param_1[1] ^ uVar3 << 4;\n    uVar3 = (uVar4 >> 4 ^ uVar5) & 0x1010101;\n    uVar5 = uVar5 ^ uVar3;\n    uVar4 = uVar4 ^ uVar3 << 4;\n    uVar3 = (uVar4 >> 9 ^ uVar4) & 0x550055;\n    uVar4 = uVar4 ^ uVar3 << 9 ^ uVar3;\n    uVar3 = (uVar5 >> 9 ^ uVar5) & 0x550055;\n    uVar5 = uVar5 ^ uVar3 << 9 ^ uVar3;\n    uVar3 = (uVar4 >> 0x12 ^ uVar4) & 0x3333;\n    uVar3 = (uVar5 >> 0x12 ^ uVar5) & 0x3333;\n    uVar4 = uVar4 ^ uVar3 << 0x12 ^ uVar3;\n    uVar5 = uVar5 ^ uVar3 << 0x12 ^ uVar3;\n    uVar3 = (uVar5 >> 0x10 ^ uVar5) & 0xff;\n    uVar5 = uVar5 ^ uVar3 << 0x10 ^ uVar3;\n    pcStack16 = 0x48fd50;\n    puStack12 = param_2;\n    iStack8 = 0x10;\n    do {\n        uVar4 = uVar4 & 0xfffffff;\n        uVar5 = uVar5 & 0xfffffff;\n        if (*pcStack16 == '\\0') {\n            iVar1 = 0x1b;\n            uVar3 = uVar4 >> 1;\n            iVar2 = 0x1b;\n            uVar6 = uVar5 >> 1;\n        }\n        else {\n            iVar1 = 0x1a;\n            uVar3 = uVar4 >> 2;\n            iVar2 = 0x1a;\n            uVar6 = uVar5 >> 2;\n        }\n        uVar4 = uVar3 | uVar4 << iVar1;\n        uVar5 = uVar6 | uVar5 << iVar2;\n        uVar6 = uVar4 >> 8 & 0xff;\n        uVar3 = uVar4 >> 0x10;\n        uVar6 = *(((uVar4 & 0xc0 | uVar6 >> 5) >> 2 | uVar4 >> 0x18 & 0xe) * 4 + 0x490060) |\n                *((((uVar3 & 0xff) >> 5 & 4 | uVar3 & 0x40) >> 1 | uVar3 & 0x1d) * 4 + 0x48ff60) |\n                *((uVar6 >> 1 & 0x3f) * 4 + 0x48fe60) | *((uVar4 & 0x3f) * 4 + 0x48fd60);\n        uVar3 = *(((uVar5 >> 4 & 8 | uVar5 >> 0x10 & 0xc0) >> 2 | uVar5 >> 0x18 & 0xd) * 4 + 0x490460) |\n                *(((uVar5 >> 8 & 0xff) >> 6 & 2 | uVar5 >> 8 & 0x3d) * 4 + 0x490260) | *((uVar5 & 0x3f) * 4 + 0x490160)\n                | *((uVar5 >> 0x10 & 0x3f) * 4 + 0x490360);\n        puStack12[1] = uVar3 & 0xffff0000 | uVar6 >> 0x10;\n        pcStack16 = pcStack16 + 1;\n        *puStack12 = uVar3 << 0x10 | uVar6 & 0xffff;\n        puStack12 = puStack12 + 2;\n        iStack8 = iStack8 + -1;\n    } while (iStack8 != 0);\n    return;\n}\n",
        "token_count": 1083
    },
    "00445020": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00445020(int32_t param_1)\n\n{\n    if (*(param_1 + 0x54) != 0) {\n        return *(param_1 + 0x2c);\n    }\n    return 0;\n}\n",
        "token_count": 56
    },
    "004454e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004454e0(uint param_1, uint param_2, uint param_3, int32_t *param_4, uint param_5, int32_t param_6)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    uint uVar5;\n    int32_t *piVar6;\n    int32_t *piVar7;\n    int32_t *piVar8;\n    bool bVar9;\n    int32_t *arg_8h;\n    int32_t iStack2072;\n    uint uStack2068;\n    uchar uStack2060;\n    uchar auStack2059 [1027];\n    uchar uStack1032;\n    uchar auStack1031 [1027];\n    uint32_t uStack4;\n    \n    uStack4 = *0x4b4f00 ^ &iStack2072;\n    iStack2072 = param_6;\n    uStack2068 = 0;\n    uStack2060 = 0;\n    fcn.00453710(auStack2059, 0, 0x400);\n    uStack1032 = 0;\n    fcn.00453710(auStack1031, 0, 0x400);\n    fcn.00459e39(&uStack2060, 0x401, param_1, 0x400);\n    arg_8h = &uStack1032;\n    iVar2 = fcn.004453f0(param_1, param_2, param_3);\n    piVar3 = &uStack2060;\n    piVar8 = &uStack1032;\n    if (iVar2 == 0) {\n        while (piVar7 = piVar3,  *arg_8h == 0) {\n            piVar3 = piVar8;\n            do {\n                uVar1 = *piVar3;\n                piVar3 = piVar3 + 1;\n            } while (uVar1 != 0);\n            piVar4 = piVar7;\n            piVar6 = piVar8;\n            if (piVar3 == piVar8 + 1) goto code_r0x00445652;\n            do {\n                uVar1 = *piVar4;\n                bVar9 = uVar1 < *piVar6;\n                if (uVar1 != *piVar6) {\ncode_r0x004455d4:\n                    iVar2 = (1 - bVar9) - (bVar9 != 0);\n                    goto code_r0x004455d9;\n                }\n                if (uVar1 == 0) break;\n                uVar1 = *(piVar4 + 1);\n                bVar9 = uVar1 < *(piVar6 + 1);\n                if (uVar1 != *(piVar6 + 1)) goto code_r0x004455d4;\n                piVar4 = piVar4 + 2;\n                piVar6 = piVar6 + 2;\n            } while (uVar1 != 0);\n            iVar2 = 0;\ncode_r0x004455d9:\n            if (((iVar2 == 0) || (param_6 = param_6 + 1,  param_6 == 0x10)) ||\n               (iVar2 = fcn.004453f0(),  piVar3 = piVar8,  piVar8 = piVar7,  iVar2 != 0)) goto code_r0x00445652;\n        }\n        if ((iVar2 == 0) && (uStack4 != 0)) {\n            uVar5 = fcn.004452e0();\n            *(*param_4 + 0x14) = uVar5;\n        }\n    }\ncode_r0x00445652:\n    fcn.004529f8(arg_8h);\n    return;\n}\n",
        "token_count": 847
    },
    "00445d00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00445d00(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uchar *arg_8h;\n    int32_t iStack564;\n    uint uStack556;\n    uint uStack548;\n    char *pcStack544;\n    code *pcStack540;\n    uchar auStack280 [4];\n    uchar auStack276 [8];\n    uchar auStack268 [264];\n    uint32_t uStack4;\n    \n    uStack4 = *0x4b4f00 ^ &stack0xfffffdd0;\n    uStack556 = 0x445750;\n    uStack548 = 0x445a40;\n    pcStack544 = \"freeaddrinfo\";\n    pcStack540 = fcn.00445700;\n    if (*0x4b8308 != 0) {\n        iStack564 = 0x445d69;\n        fcn.004529f8(\"getaddrinfo\");\n        return;\n    }\n    iStack564 = 0x104;\n    arg_8h = &stack0xfffffef4;\n    iVar4 = (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    if (iVar4 == 0) goto code_r0x00445e6f;\n    fcn.004537a0(&stack0xfffffde0, 0x10c, &stack0xfffffeec);\n    fcn.0045a155(&stack0xfffffde0, 0x10c, 0x490ad8);\n    pcVar3 = _sym.imp.KERNEL32.dll_LoadLibraryA;\n    iVar4 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(&stack0xfffffde0);\n    pcVar2 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    pcVar1 = _sym.imp.KERNEL32.dll_FreeLibrary;\n    if (iVar4 == 0) {\ncode_r0x00445ded:\n        fcn.004537a0(&stack0xfffffddc, 0x10c, &stack0xfffffee8);\n        fcn.0045a155(&stack0xfffffddc, 0x10c, 0x490ad0);\n        iVar4 = (*pcVar3)(&stack0xfffffddc);\n        if (iVar4 == 0) goto code_r0x00445e6f;\n        iVar5 = (*pcVar2)(iVar4, \"getaddrinfo\");\n        if (iVar5 == 0) {\ncode_r0x00445e9f:\n            (*pcVar1)(iVar4);\n            goto code_r0x00445e6f;\n        }\n    }\n    else {\n        iVar5 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar4, \"getaddrinfo\");\n        if (iVar5 == 0) {\n            (*pcVar1)(iVar4);\n            goto code_r0x00445ded;\n        }\n    }\n    iVar5 = 0;\n    do {\n        iVar6 = (*pcVar2)(iVar4, *(&stack0xfffffdc8 + iVar5 * 8));\n        *(&stack0xfffffdcc + iVar5 * 8) = iVar6;\n        if (iVar6 == 0) goto code_r0x00445e9f;\n        iVar5 = iVar5 + 1;\n    } while (iVar5 < 3);\n    *0x4b4864 = iStack564;\n    *0x4b486c = uStack556;\n    *0x4b4874 = uStack548;\ncode_r0x00445e6f:\n    *0x4b8308 = 1;\n    fcn.004529f8(arg_8h);\n    return;\n}\n",
        "token_count": 835
    },
    "00446440": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00446440(int32_t *param_1, int32_t param_2, int32_t param_3, int32_t param_4, uint param_5)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    do {\n        if (param_1[4] == 0) {\n            iVar2 = (*_sym.imp.WS2_32.dll_recv)(param_1[1], iVar3 + param_2, param_3 - iVar3, param_5);\n            if (iVar2 < 0) {\n                param_1[3] = -0xb;\n                goto code_r0x004464b9;\n            }\n        }\n        else {\n            iVar2 = (**(*param_1 + 0x4c))(iVar3 + param_2, param_3 - iVar3);\n            if (iVar2 < 0) {\n                param_1[3] = iVar2;\ncode_r0x004464b9:\n                pcVar1 = _sym.imp.WS2_32.dll_WSAGetLastError;\n                iVar2 = (*_sym.imp.WS2_32.dll_WSAGetLastError)();\n                if (iVar2 == 0x2746) {\n                    param_1[3] = -0xe;\n                    return iVar3;\n                }\n                iVar2 = (*pcVar1)();\n                if (iVar2 != 0x274c) {\n                    return iVar3;\n                }\n                param_1[3] = -0xd;\n                return iVar3;\n            }\n        }\n        iVar3 = iVar3 + iVar2;\n        if (((param_3 <= iVar3) || (iVar2 == 0)) || (param_4 == 0)) {\n            param_1[3] = 0;\n            return iVar3;\n        }\n    } while( true );\n}\n",
        "token_count": 417
    },
    "00446500": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00446500(int32_t *param_1, int32_t param_2, int32_t param_3, int32_t param_4, uint param_5)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    do {\n        if (param_1[4] == 0) {\n            iVar2 = (*_sym.imp.WS2_32.dll_send)(param_1[1], iVar3 + param_2, param_3 - iVar3, param_5);\n            if (iVar2 < 0) {\n                param_1[3] = -10;\n                goto code_r0x00446579;\n            }\n        }\n        else {\n            iVar2 = (**(*param_1 + 0x48))(iVar3 + param_2, param_3 - iVar3);\n            if (iVar2 < 0) {\n                param_1[3] = iVar2;\ncode_r0x00446579:\n                pcVar1 = _sym.imp.WS2_32.dll_WSAGetLastError;\n                iVar2 = (*_sym.imp.WS2_32.dll_WSAGetLastError)();\n                if (iVar2 == 0x2746) {\n                    param_1[3] = -0xe;\n                    return iVar3;\n                }\n                iVar2 = (*pcVar1)();\n                if (iVar2 != 0x274c) {\n                    return iVar3;\n                }\n                param_1[3] = -0xd;\n                return iVar3;\n            }\n        }\n        iVar3 = iVar3 + iVar2;\n        if (((param_3 <= iVar3) || (iVar2 == 0)) || (param_4 == 0)) {\n            param_1[3] = 0;\n            return iVar3;\n        }\n    } while( true );\n}\n",
        "token_count": 413
    },
    "00446a50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00446a50(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uchar *in_stack_fffffda8;\n    char cVar4;\n    uchar *puStack580;\n    uint uStack576;\n    uint uStack572;\n    uint uVar5;\n    uint uStack564;\n    uchar *puStack560;\n    uint uStack556;\n    uint uStack552;\n    uint uStack548;\n    uchar auStack532 [4];\n    uchar uStack528;\n    uchar uStack527;\n    uchar uStack526;\n    uint32_t uStack4;\n    \n    uStack4 = *0x4b4f00 ^ &stack0xfffffdec;\n    uStack528 = 5;\n    uStack527 = 1;\n    uStack548 = 0x446a7e;\n    iVar1 = fcn.0043c300();\n    if (iVar1 == 0) {\ncode_r0x00446a93:\n        uStack526 = 0;\n    }\n    else {\n        uStack548 = 0x446a8a;\n        iVar1 = fcn.0043c300();\n        uStack526 = 2;\n        if (iVar1 == 0) goto code_r0x00446a93;\n    }\n    uStack548 = 0;\n    uStack552 = 1;\n    uStack556 = 3;\n    puStack560 = &stack0xfffffdf0;\n    uStack564 = 0x446aaa;\n    fcn.00446500();\n    uStack564 = 0x78;\n    fcn.0043cf90();\n    uVar5 = 0;\n    uStack572 = 1;\n    uStack576 = 2;\n    puStack580 = &stack0xfffffddc;\n    iVar1 = fcn.00446440();\n    if ((iVar1 != 2) || (uStack564 != '\\x05')) {\ncode_r0x00446be8:\n        *(param_1 + 0xc) = 0xffffffc2;\n        uStack572 = 0x446c02;\n        fcn.004529f8(uVar5);\n        return;\n    }\n    if (uStack564._1_1_ == '\\0') {\n        uStack572 = 0x446be1;\n        fcn.004529f8(uVar5);\n        return;\n    }\n    if (uStack564._1_1_ != '\\x02') goto code_r0x00446be8;\n    uVar2 = fcn.0043c300();\n    uVar3 = fcn.0043c300();\n    if ((((uVar2 < 0x100) && (uVar3 < 0x100)) && (uVar2 != 0)) && (uVar3 != 0)) {\n        uStack564._0_2_ = CONCAT11(uVar2, 1);\n        uStack564 = uStack564 & 0xffff0000 | uStack564;\n        uVar5 = fcn.0043bff0(uVar2);\n        fcn.00452a10(&stack0xfffffdce, uVar5);\n        (&stack0xfffffdce)[uVar2] = uVar3;\n        uVar5 = fcn.0043bff0(uVar3);\n        fcn.00452a10(&stack0xfffffdcf + uVar2, uVar5);\n        iVar1 = uVar3 + 3 + uVar2;\n        in_stack_fffffda8 = &stack0xfffffdcc;\n        fcn.00446500(in_stack_fffffda8, iVar1, 1, 0);\n        cVar4 = iVar1 >> 8;\n        iVar1 = fcn.00446440(&stack0xfffffdbc, 2, 1, 0);\n        if ((iVar1 == 2) && (cVar4 == '\\0')) goto code_r0x00446ba7;\n    }\n    *(param_1 + 0xc) = 0xffffffc1;\ncode_r0x00446ba7:\n    fcn.004529f8(in_stack_fffffda8);\n    return;\n}\n",
        "token_count": 941
    },
    "00446fd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00446fd0(char *param_1, uint param_2, int32_t *param_3, uint param_4)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x486beb;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &stack0xfffffff0;\n    *in_FS_OFFSET = &piStack12;\n    if ((param_1 == NULL) || (*param_1 == '\\0')) {\n        iVar2 = fcn.0045306d(0x18);\n        if (iVar2 != 0) {\n            uVar3 = fcn.00445eb0(uVar1);\n            *in_FS_OFFSET = piStack12;\n            return uVar3;\n        }\n    }\n    else {\n        iVar2 = fcn.0045306d(0x30);\n        uStack4 = 0;\n        if (iVar2 != 0) {\n            uVar3 = fcn.00446860(param_1, param_2, param_3, param_4);\n            *in_FS_OFFSET = param_3;\n            return uVar3;\n        }\n    }\n    *in_FS_OFFSET = piStack12;\n    return 0;\n}\n",
        "token_count": 329
    },
    "004471d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar * __thiscall fcn.004471d0(char *param_1, int32_t param_2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    char *pcVar3;\n    uint uVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    int32_t *unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    uint32_t uStack40;\n    uint *puStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x486c28;\n    piStack12 = *in_FS_OFFSET;\n    uStack40 = *0x4b4f00 ^ &stack0xffffffdc;\n    *in_FS_OFFSET = &piStack12;\n    fcn.0043c980(param_2, 0xffffffff);\n    piStack12 = NULL;\n    pcVar3 = param_1;\n    do {\n        cVar2 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar2 != '\\0');\n    uVar4 = fcn.0043c6f0(&stack0xffffffe8, 0, pcVar3 - (param_1 + 1));\n    fcn.0043e870(&uStack40, uVar4);\n    iVar5 = fcn.0043bfb0(param_1);\n    fcn.0043c360();\n    fcn.0043c360();\n    if (iVar5 != 0) {\n        fcn.0043c360();\n        *in_FS_OFFSET = unaff_EDI;\n        return NULL;\n    }\n    pcVar3 = param_1 + 1;\n    do {\n        cVar2 = *param_1;\n        param_1 = param_1 + 1;\n    } while (cVar2 != '\\0');\n    pcVar6 = param_1 + (param_2 - pcVar3);\n    if (param_1[param_2 - pcVar3] != '\\0') {\n        iVar5 = fcn.004471a0(pcVar6);\n        if ((pcVar6[iVar5] == '=') && (pcVar3 = pcVar6 + iVar5 + 1,  *pcVar3 != '\\0')) {\n            iVar5 = fcn.004471a0(pcVar3);\n            pcVar3 = pcVar3 + iVar5;\n            if (*pcVar3 == '\\\"') {\n                cVar2 = pcVar3[1];\n                pcVar6 = pcVar3 + 1;\n                while (cVar2 != '\\0') {\n                    if (cVar2 == '\\\"') {\n                        if (*pcVar6 != '\\0') {\n                            uVar4 = fcn.00447160(pcVar3 + 1, pcVar6);\n                            *puStack16 = uVar4;\n                            fcn.0043c360();\n                            *in_FS_OFFSET = unaff_EDI;\n                            return pcVar6 + (1 - param_2);\n                        }\n                        break;\n                    }\n                    pcVar1 = pcVar6 + 1;\n                    pcVar6 = pcVar6 + 1;\n                    cVar2 = *pcVar1;\n                }\n            }\n        }\n    }\n    fcn.0043c360();\n    *in_FS_OFFSET = unaff_EDI;\n    return 0xffffffff;\n}\n",
        "token_count": 747
    },
    "00449360": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00449360(uint32_t *param_1, uint32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int32_t iStack76;\n    int32_t aiStack64 [7];\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    aiStack64[0] = 0;\n    aiStack64[1] = 0;\n    aiStack64[2] = 1;\n    aiStack64[3] = 1;\n    aiStack64[4] = 1;\n    aiStack64[5] = 1;\n    aiStack64[6] = 1;\n    uStack36 = 1;\n    uStack32 = 0;\n    uStack28 = 1;\n    uStack24 = 1;\n    uStack20 = 1;\n    uStack16 = 1;\n    uStack12 = 1;\n    uStack8 = 1;\n    uStack4 = 0;\n    if (*0x4b8314 != 0) {\n        iVar2 = fcn.00449270();\n        if (iVar2 == 0) {\n            return 0xffffffff;\n        }\n        iVar2 = fcn.004492a0(param_1);\n        if (iVar2 != 0) {\n            return 0xfffffffe;\n        }\n    }\n    uVar5 = (param_1[1] >> 4 ^ *param_1) & 0xf0f0f0f;\n    uVar3 = *param_1 ^ uVar5;\n    uVar5 = param_1[1] ^ uVar5 << 4;\n    uVar6 = (uVar3 << 0x12 ^ uVar3) & 0xcccc0000;\n    uVar3 = uVar3 ^ uVar6 >> 0x12 ^ uVar6;\n    uVar6 = (uVar5 << 0x12 ^ uVar5) & 0xcccc0000;\n    uVar5 = uVar5 ^ uVar6 >> 0x12 ^ uVar6;\n    uVar6 = (uVar5 >> 1 ^ uVar3) & 0x55555555;\n    uVar3 = uVar3 ^ uVar6;\n    uVar5 = uVar5 ^ uVar6 * 2;\n    uVar6 = (uVar3 >> 8 ^ uVar5) & 0xff00ff;\n    uVar5 = uVar5 ^ uVar6;\n    uVar3 = uVar3 ^ uVar6 << 8;\n    uVar6 = (uVar5 >> 1 ^ uVar3) & 0x55555555;\n    uVar3 = uVar3 ^ uVar6;\n    uVar5 = uVar5 ^ uVar6 * 2;\n    uVar5 = (uVar5 >> 0xc & 0xff0 | uVar3 & 0xf000000f) >> 4 | (uVar5 & 0xff) << 0x10 | uVar5 & 0xff00;\n    uVar3 = uVar3 & 0xfffffff;\n    iStack76 = 0;\n    do {\n        if (aiStack64[iStack76] == 0) {\n            iVar2 = 0x1b;\n            uVar6 = uVar3 >> 1;\n            iVar1 = 0x1b;\n            uVar7 = uVar5 >> 1;\n        }\n        else {\n            iVar2 = 0x1a;\n            uVar6 = uVar3 >> 2;\n            iVar1 = 0x1a;\n            uVar7 = uVar5 >> 2;\n        }\n        uVar9 = uVar3 << iVar2 | uVar6;\n        uVar8 = uVar5 << iVar1 | uVar7;\n        uVar6 = uVar3 << iVar2 & 0xfffffff | uVar6;\n        uVar4 = uVar6 >> 1;\n        uVar7 = uVar5 << iVar1 & 0xfffffff | uVar7;\n        uVar3 = *((((uVar9 & 0xc00000 | uVar4 & 0x7000000) >> 1 | uVar9 & 0x100000) >> 0x14) * 4 + 0x4910f8) |\n                *(((uVar4 & 0x60000 | uVar9 & 0x1e000) >> 0xd) * 4 + 0x490ff8) |\n                *(((uVar4 & 0xf00 | uVar9 & 0xc0) >> 6) * 4 + 0x490ef8) | *((uVar9 & 0x3f) * 4 + 0x490df8);\n        uVar5 = uVar7 >> 1;\n        uVar8 = *(((uVar5 & 0x1e00 | uVar8 & 0x180) >> 7) * 4 + 0x4912f8) |\n                *(((uVar5 & 0x6000000 | uVar8 & 0x1e00000) >> 0x15) * 4 + 0x4914f8) |\n                *((uVar7 >> 0xf & 0x3f) * 4 + 0x4913f8) | *((uVar8 & 0x3f) * 4 + 0x4911f8);\n        *param_2 = (uVar8 << 0x10) >> 0x1e | (uVar3 & 0xffff | uVar8 << 0x10) << 2;\n        param_2[1] = uVar8 >> 0x1a | (uVar3 >> 0x10 | uVar8 & 0xffff0000) << 6;\n        if (aiStack64[iStack76 + 1] == 0) {\n            uVar4 = uVar6 << 0x1b | uVar4;\n            uVar5 = uVar7 << 0x1b | uVar5;\n        }\n        else {\n            uVar4 = uVar6 << 0x1a | uVar6 >> 2;\n            uVar5 = uVar7 << 0x1a | uVar7 >> 2;\n        }\n        uVar8 = uVar4 & 0xfffffff;\n        uVar6 = uVar8 >> 1;\n        uVar9 = uVar5 & 0xfffffff;\n        uVar3 = *((((uVar4 & 0xc00000 | uVar6 & 0x7000000) >> 1 | uVar4 & 0x100000) >> 0x14) * 4 + 0x4910f8) |\n                *(((uVar6 & 0x60000 | uVar4 & 0x1e000) >> 0xd) * 4 + 0x490ff8) |\n                *(((uVar6 & 0xf00 | uVar4 & 0xc0) >> 6) * 4 + 0x490ef8) | *((uVar4 & 0x3f) * 4 + 0x490df8);\n        uVar7 = uVar9 >> 1;\n        uVar5 = *(((uVar7 & 0x1e00 | uVar5 & 0x180) >> 7) * 4 + 0x4912f8) |\n                *(((uVar7 & 0x6000000 | uVar5 & 0x1e00000) >> 0x15) * 4 + 0x4914f8) |\n                *((uVar9 >> 0xf & 0x3f) * 4 + 0x4913f8) | *((uVar5 & 0x3f) * 4 + 0x4911f8);\n        param_2[2] = (uVar5 << 0x10) >> 0x1e | (uVar3 & 0xffff | uVar5 << 0x10) << 2;\n        param_2[3] = uVar5 >> 0x1a | (uVar3 >> 0x10 | uVar5 & 0xffff0000) << 6;\n        if (aiStack64[iStack76 + 2] == 0) {\n            uVar6 = uVar8 << 0x1b | uVar6;\n            uVar7 = uVar9 << 0x1b | uVar7;\n        }\n        else {\n            uVar6 = uVar8 << 0x1a | uVar8 >> 2;\n            uVar7 = uVar9 << 0x1a | uVar9 >> 2;\n        }\n        uVar8 = uVar6 & 0xfffffff;\n        uVar4 = uVar8 >> 1;\n        uVar9 = uVar7 & 0xfffffff;\n        uVar3 = *((((uVar6 & 0xc00000 | uVar4 & 0x7000000) >> 1 | uVar6 & 0x100000) >> 0x14) * 4 + 0x4910f8) |\n                *(((uVar4 & 0x60000 | uVar6 & 0x1e000) >> 0xd) * 4 + 0x490ff8) |\n                *(((uVar4 & 0xf00 | uVar6 & 0xc0) >> 6) * 4 + 0x490ef8) | *((uVar6 & 0x3f) * 4 + 0x490df8);\n        uVar6 = uVar9 >> 1;\n        uVar5 = *(((uVar6 & 0x1e00 | uVar7 & 0x180) >> 7) * 4 + 0x4912f8) |\n                *(((uVar6 & 0x6000000 | uVar7 & 0x1e00000) >> 0x15) * 4 + 0x4914f8) |\n                *((uVar9 >> 0xf & 0x3f) * 4 + 0x4913f8) | *((uVar7 & 0x3f) * 4 + 0x4911f8);\n        param_2[4] = (uVar5 << 0x10) >> 0x1e | (uVar3 & 0xffff | uVar5 << 0x10) << 2;\n        param_2[5] = uVar5 >> 0x1a | (uVar3 >> 0x10 | uVar5 & 0xffff0000) << 6;\n        if (aiStack64[iStack76 + 3] == 0) {\n            uVar4 = uVar8 << 0x1b | uVar4;\n            uVar6 = uVar9 << 0x1b | uVar6;\n        }\n        else {\n            uVar4 = uVar8 << 0x1a | uVar8 >> 2;\n            uVar6 = uVar9 << 0x1a | uVar9 >> 2;\n        }\n        uVar3 = uVar4 & 0xfffffff;\n        uVar7 = uVar3 >> 1;\n        uVar5 = uVar6 & 0xfffffff;\n        uVar7 = *((((uVar4 & 0xc00000 | uVar7 & 0x7000000) >> 1 | uVar4 & 0x100000) >> 0x14) * 4 + 0x4910f8) |\n                *(((uVar7 & 0x60000 | uVar4 & 0x1e000) >> 0xd) * 4 + 0x490ff8) |\n                *(((uVar7 & 0xf00 | uVar4 & 0xc0) >> 6) * 4 + 0x490ef8) | *((uVar4 & 0x3f) * 4 + 0x490df8);\n        uVar6 = *(((uVar5 >> 1 & 0x1e00 | uVar6 & 0x180) >> 7) * 4 + 0x4912f8) |\n                *(((uVar5 >> 1 & 0x6000000 | uVar6 & 0x1e00000) >> 0x15) * 4 + 0x4914f8) |\n                *((uVar5 >> 0xf & 0x3f) * 4 + 0x4913f8) | *((uVar6 & 0x3f) * 4 + 0x4911f8);\n        param_2[6] = (uVar6 << 0x10) >> 0x1e | (uVar7 & 0xffff | uVar6 << 0x10) << 2;\n        param_2[7] = uVar6 >> 0x1a | (uVar7 >> 0x10 | uVar6 & 0xffff0000) << 6;\n        iStack76 = iStack76 + 4;\n        param_2 = param_2 + 8;\n    } while (iStack76 < 0x10);\n    return 0;\n}\n",
        "token_count": 3087
    },
    "0044a0b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044a0b0(uint32_t *param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    uint32_t uVar6;\n    \n    uVar3 = (param_1[1] >> 4 ^ *param_1) & 0xf0f0f0f;\n    uVar2 = *param_1 ^ uVar3;\n    uVar3 = param_1[1] ^ uVar3 << 4;\n    uVar4 = (uVar2 >> 0x10 ^ uVar3) & 0xffff;\n    uVar3 = uVar3 ^ uVar4;\n    uVar2 = uVar2 ^ uVar4 << 0x10;\n    uVar4 = (uVar3 >> 2 ^ uVar2) & 0x33333333;\n    uVar2 = uVar2 ^ uVar4;\n    uVar3 = uVar3 ^ uVar4 * 4;\n    uVar4 = (uVar2 >> 8 ^ uVar3) & 0xff00ff;\n    uVar3 = uVar3 ^ uVar4;\n    uVar2 = uVar2 ^ uVar4 << 8;\n    uVar4 = (uVar3 >> 1 ^ uVar2) & 0x55555555;\n    uVar2 = uVar4 ^ uVar2;\n    uVar3 = uVar4 * 2 ^ uVar3;\n    uVar4 = uVar2 >> 0x1d | uVar2 << 3;\n    uVar2 = uVar3 >> 0x1d | uVar3 << 3;\n    if (param_3 == 0) {\n        puVar5 = param_2 + 0x70;\n        param_2 = 4;\n        do {\n            uVar6 = puVar5[2] ^ uVar4;\n            uVar3 = (puVar5[3] ^ uVar4) >> 4;\n            uVar2 = uVar2 ^ *(((uVar3 & 0xfc0000) >> 0x12) * 4 + 0x491bb8) ^ *(((uVar3 & 0xfc00) >> 10) * 4 + 0x4919b8)\n                            ^ *((uVar3 & 0xfc) + 0x4917b8) ^ *((uVar6 >> 0x12 & 0x3f) * 4 + 0x491ab8) ^\n                            *((uVar6 >> 10 & 0x3f) * 4 + 0x4918b8) ^ *((uVar6 >> 2 & 0x3f) * 4 + 0x4916b8) ^\n                            *(((uVar3 | (puVar5[3] ^ uVar4) << 0x1c) >> 0x1a) * 4 + 0x491db8) ^\n                            *((uVar6 >> 0x1a) * 4 + 0x491cb8);\n            uVar6 = *puVar5 ^ uVar2;\n            uVar3 = (puVar5[1] ^ uVar2) >> 4;\n            uVar4 = uVar4 ^ *(((uVar3 & 0xfc0000) >> 0x12) * 4 + 0x491bb8) ^ *(((uVar3 & 0xfc00) >> 10) * 4 + 0x4919b8)\n                            ^ *((uVar3 & 0xfc) + 0x4917b8) ^ *((uVar6 >> 0x12 & 0x3f) * 4 + 0x491ab8) ^\n                            *((uVar6 >> 10 & 0x3f) * 4 + 0x4918b8) ^ *((uVar6 >> 2 & 0x3f) * 4 + 0x4916b8) ^\n                            *(((uVar3 | (puVar5[1] ^ uVar2) << 0x1c) >> 0x1a) * 4 + 0x491db8) ^\n                            *((uVar6 >> 0x1a) * 4 + 0x491cb8);\n            uVar6 = puVar5[-2] ^ uVar4;\n            uVar3 = (puVar5[-1] ^ uVar4) >> 4;\n            puVar1 = puVar5 + -3;\n            uVar2 = uVar2 ^ *(((uVar3 & 0xfc0000) >> 0x12) * 4 + 0x491bb8) ^ *(((uVar3 & 0xfc00) >> 10) * 4 + 0x4919b8)\n                            ^ *((uVar3 & 0xfc) + 0x4917b8) ^ *((uVar6 >> 0x12 & 0x3f) * 4 + 0x491ab8) ^\n                            *((uVar6 >> 10 & 0x3f) * 4 + 0x4918b8) ^ *((uVar6 >> 2 & 0x3f) * 4 + 0x4916b8) ^\n                            *(((uVar3 | (puVar5[-1] ^ uVar4) << 0x1c) >> 0x1a) * 4 + 0x491db8) ^\n                            *((uVar6 >> 0x1a) * 4 + 0x491cb8);\n            uVar6 = puVar5[-4] ^ uVar2;\n            uVar3 = (*puVar1 ^ uVar2) >> 4;\n            puVar5 = puVar5 + -8;\n            uVar4 = uVar4 ^ *(((uVar3 & 0xfc0000) >> 0x12) * 4 + 0x491bb8) ^ *(((uVar3 & 0xfc00) >> 10) * 4 + 0x4919b8)\n                            ^ *((uVar3 & 0xfc) + 0x4917b8) ^ *((uVar6 >> 0x12 & 0x3f) * 4 + 0x491ab8) ^\n                            *((uVar6 >> 10 & 0x3f) * 4 + 0x4918b8) ^ *((uVar6 >> 2 & 0x3f) * 4 + 0x4916b8) ^\n                            *(((uVar3 | (*puVar1 ^ uVar2) << 0x1c) >> 0x1a) * 4 + 0x491db8) ^\n                            *((uVar6 >> 0x1a) * 4 + 0x491cb8);\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else {\n        puVar5 = param_2 + 8;\n        param_2 = 4;\n        do {\n            uVar6 = puVar5[-2] ^ uVar4;\n            uVar3 = (puVar5[-1] ^ uVar4) >> 4;\n            uVar2 = uVar2 ^ *(((uVar3 & 0xfc0000) >> 0x12) * 4 + 0x491bb8) ^ *(((uVar3 & 0xfc00) >> 10) * 4 + 0x4919b8)\n                            ^ *((uVar3 & 0xfc) + 0x4917b8) ^ *((uVar6 >> 0x12 & 0x3f) * 4 + 0x491ab8) ^\n                            *((uVar6 >> 10 & 0x3f) * 4 + 0x4918b8) ^ *((uVar6 >> 2 & 0x3f) * 4 + 0x4916b8) ^\n                            *(((uVar3 | (puVar5[-1] ^ uVar4) << 0x1c) >> 0x1a) * 4 + 0x491db8) ^\n                            *((uVar6 >> 0x1a) * 4 + 0x491cb8);\n            uVar6 = *puVar5 ^ uVar2;\n            uVar3 = (puVar5[1] ^ uVar2) >> 4;\n            uVar4 = uVar4 ^ *(((uVar3 & 0xfc0000) >> 0x12) * 4 + 0x491bb8) ^ *(((uVar3 & 0xfc00) >> 10) * 4 + 0x4919b8)\n                            ^ *((uVar3 & 0xfc) + 0x4917b8) ^ *((uVar6 >> 0x12 & 0x3f) * 4 + 0x491ab8) ^\n                            *((uVar6 >> 10 & 0x3f) * 4 + 0x4918b8) ^ *((uVar6 >> 2 & 0x3f) * 4 + 0x4916b8) ^\n                            *(((uVar3 | (puVar5[1] ^ uVar2) << 0x1c) >> 0x1a) * 4 + 0x491db8) ^\n                            *((uVar6 >> 0x1a) * 4 + 0x491cb8);\n            uVar6 = puVar5[2] ^ uVar4;\n            uVar3 = (puVar5[3] ^ uVar4) >> 4;\n            puVar1 = puVar5 + 5;\n            uVar2 = uVar2 ^ *(((uVar3 & 0xfc0000) >> 0x12) * 4 + 0x491bb8) ^ *(((uVar3 & 0xfc00) >> 10) * 4 + 0x4919b8)\n                            ^ *((uVar3 & 0xfc) + 0x4917b8) ^ *((uVar6 >> 0x12 & 0x3f) * 4 + 0x491ab8) ^\n                            *((uVar6 >> 10 & 0x3f) * 4 + 0x4918b8) ^ *((uVar6 >> 2 & 0x3f) * 4 + 0x4916b8) ^\n                            *(((uVar3 | (puVar5[3] ^ uVar4) << 0x1c) >> 0x1a) * 4 + 0x491db8) ^\n                            *((uVar6 >> 0x1a) * 4 + 0x491cb8);\n            uVar6 = puVar5[4] ^ uVar2;\n            uVar3 = (*puVar1 ^ uVar2) >> 4;\n            puVar5 = puVar5 + 8;\n            uVar4 = uVar4 ^ *(((uVar3 & 0xfc0000) >> 0x12) * 4 + 0x491bb8) ^ *(((uVar3 & 0xfc00) >> 10) * 4 + 0x4919b8)\n                            ^ *((uVar3 & 0xfc) + 0x4917b8) ^ *((uVar6 >> 0x12 & 0x3f) * 4 + 0x491ab8) ^\n                            *((uVar6 >> 10 & 0x3f) * 4 + 0x4918b8) ^ *((uVar6 >> 2 & 0x3f) * 4 + 0x4916b8) ^\n                            *(((uVar3 | (*puVar1 ^ uVar2) << 0x1c) >> 0x1a) * 4 + 0x491db8) ^\n                            *((uVar6 >> 0x1a) * 4 + 0x491cb8);\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    uVar2 = uVar2 >> 3 | uVar2 << 0x1d;\n    uVar3 = uVar4 >> 3 | uVar4 << 0x1d;\n    uVar4 = (uVar3 >> 1 ^ uVar2) & 0x55555555;\n    uVar2 = uVar2 ^ uVar4;\n    uVar3 = uVar3 ^ uVar4 * 2;\n    uVar4 = (uVar2 >> 8 ^ uVar3) & 0xff00ff;\n    uVar3 = uVar3 ^ uVar4;\n    uVar2 = uVar2 ^ uVar4 << 8;\n    uVar4 = (uVar3 >> 2 ^ uVar2) & 0x33333333;\n    uVar2 = uVar2 ^ uVar4;\n    uVar3 = uVar3 ^ uVar4 * 4;\n    uVar4 = (uVar2 >> 0x10 ^ uVar3) & 0xffff;\n    uVar3 = uVar3 ^ uVar4;\n    uVar2 = uVar2 ^ uVar4 << 0x10;\n    uVar4 = (uVar3 >> 4 ^ uVar2) & 0xf0f0f0f;\n    *param_1 = uVar4 ^ uVar2;\n    param_1[1] = uVar4 << 4 ^ uVar3;\n    return;\n}\n",
        "token_count": 3079
    },
    "0044a978": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n\nvoid __cdecl fcn.0044a978(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t iVar5;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    iVar5 = *0x4b8324;\n    var_4h = *0x4b4f00 ^ &stack0xfffffffc;\n    var_20h = in_ECX;\n    if (0xb < arg_ch) {\n        *0x4b8324 = *0x4b8324 + 1;\n        if (iVar5 == 0) {\n            uVar3 = fcn.00458b4f(0);\n            fcn.0045b0e6(uVar3 ^ 0xbb40e64e);\n        }\n        fcn.0044a940(arg_10h);\n        iVar5 = 0;\n        do {\n            iVar4 = fcn.0045b0c3();\n            uVar3 = iVar4 >> 7 & 0xff;\n            uVar1 = fcn.0044a8e6();\n            fcn.0044a8fd(uVar3);\n            *(&var_10h + iVar5) = uVar3 ^ uVar1;\n            iVar5 = iVar5 + 1;\n        } while (iVar5 < 10);\n        fcn.0044a940(arg_10h);\n        var_20h = arg_8h - &var_10h;\n        iVar5 = 0;\n        do {\n            iVar4 = iVar5;\n            uVar2 = fcn.0044a8e6();\n            uVar1 = *(&var_10h + iVar4);\n            fcn.0044a8fd(uVar1);\n            iVar5 = iVar4 + 1;\n            *(&var_10h + var_20h + iVar4) = uVar1 ^ uVar2;\n        } while (iVar5 < 10);\n        uVar1 = fcn.0044a8e6();\n        fcn.0044a8fd(arg_14h >> 0x10 & 0xff);\n        *(arg_8h + iVar5) = arg_14h >> 0x10 ^ uVar1;\n        uVar1 = fcn.0044a8e6();\n        fcn.0044a8fd(arg_14h >> 0x18);\n        *(arg_8h + iVar4 + 2) = arg_14h >> 0x18 ^ uVar1;\n    }\n    fcn.004529f8(var_20h);\n    return;\n}\n",
        "token_count": 671
    },
    "0044aaf7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044aaf7(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    int32_t *piVar5;\n    int32_t *unaff_EDI;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    if (unaff_EDI == NULL) {\n        return 0xffffff98;\n    }\n    if (unaff_EDI[1] == 0) {\n        iVar1 = fcn.0044aabb();\n        unaff_EDI[1] = iVar1;\n        *unaff_EDI = iVar1;\n        if (iVar1 == 0) {\n            return 0xffffff98;\n        }\n    }\n    var_4h = arg_8h;\n    piVar5 = unaff_EDI[1];\n    if (arg_ch != 0) {\n        do {\n            piVar2 = piVar5;\n            if (piVar5[1] == 0) {\n                piVar2 = fcn.0044aabb();\n                *piVar5 = piVar2;\n                if (piVar2 == NULL) {\n                    return 0xffffff98;\n                }\n                unaff_EDI[1] = piVar2;\n            }\n            uVar3 = piVar2[1];\n            if (arg_ch <= piVar2[1]) {\n                uVar3 = arg_ch;\n            }\n            puVar4 = piVar2[2] + 0x10 + piVar2;\n            if (uVar3 != 0) {\n                iVar1 = var_4h - puVar4;\n                var_8h = uVar3;\n                do {\n                    *puVar4 = puVar4[iVar1];\n                    puVar4 = puVar4 + 1;\n                    var_8h = var_8h - 1;\n                } while (var_8h != 0);\n            }\n            piVar2[2] = piVar2[2] + uVar3;\n            piVar2[1] = piVar2[1] - uVar3;\n            var_4h = var_4h + uVar3;\n            arg_ch = arg_ch - uVar3;\n            piVar5 = piVar2;\n        } while (arg_ch != 0);\n    }\n    return 0;\n}\n",
        "token_count": 537
    },
    "0044ac39": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044ac39(uint param_1, int32_t param_2, int32_t *param_3, uint *param_4)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint unaff_EBP;\n    uint *puVar4;\n    int32_t iStackY16604;\n    uint32_t uStackY16600;\n    int32_t iStackY16596;\n    uint32_t uStackY16592;\n    int32_t iStackY16588;\n    uint32_t uStackY16584;\n    int32_t iStackY16580;\n    code *apcStackY16576 [4];\n    code *pcStackY16560;\n    code *pcStackY16556;\n    int32_t iStackY16548;\n    int32_t iStackY16544;\n    uint uStackY16532;\n    uint uStackY16472;\n    uint uStackY40;\n    int32_t iStackY36;\n    int32_t iStackY32;\n    int32_t iVar5;\n    \n    fcn.00459c50();\n    iStackY16580 = 0;\n    if (param_4 == NULL) {\n        fcn.00438495();\n    }\n    else {\n        puVar4 = &stack0xffffbf40;\n        for (iVar5 = 8; iVar5 != 0; iVar5 = iVar5 + -1) {\n            *puVar4 = *param_4;\n            param_4 = param_4 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    }\n    iStackY32 = 0x44aca9;\n    iStackY16544 = (*apcStackY16576[0])();\n    if (iStackY16544 == 0) goto code_r0x0044af84;\n    (*apcStackY16576[3])();\n    uStackY16532 = 0;\n    uStackY16472 = 0;\n    fcn.0044aaef();\n    iStackY32 = 0x44aceb;\n    iStackY16596 = fcn.00456a6c(0x40b8);\n    if (iStackY16596 == 0) {\ncode_r0x0044acf5:\n        (*pcStackY16556)();\n    }\n    else {\n        iVar5 = 0;\n        if (param_2 == 2) {\n            uVar2 = fcn.00435ef5(iStackY16544);\n            if (uVar2 == 0) {\n                iStackY16580 = -1;\n            }\n            iStackY32 = iStackY16548;\n            iStackY36 = 0x44ad36;\n            iVar3 = (*pcStackY16560)();\n            if (iVar3 != 0) {\n                iStackY16580 = -1;\n            }\n            iVar3 = fcn.00435e81(&stack0xffffbf24);\n            if (iVar3 != 0) {\n                iStackY16580 = -1;\n            }\n            iVar3 = fcn.00435e3f(iStackY16544);\n            if (iVar3 != 0) {\n                iStackY16580 = -1;\n            }\n            iVar3 = fcn.00435e3f(iStackY16544);\n            if (iVar3 != 0) {\n                iStackY16580 = -1;\n            }\n            iVar3 = fcn.00435e3f(iStackY16544);\n            if (iVar3 != 0) {\n                iStackY16580 = -1;\n            }\n            iVar3 = fcn.00435e3f(iStackY16544);\n            if (iVar3 != 0) {\n                iStackY16580 = -1;\n            }\n            if (((uStackY16600 != uStackY16592) || (iStackY16588 != 0)) || (uStackY16584 != 0)) {\n                iStackY16580 = -0x67;\n            }\n            iVar3 = fcn.00435e81(&stack0xffffbf38);\n            if (iVar3 != 0) {\n                iStackY16580 = -1;\n            }\n            iVar3 = fcn.00435e81(&stack0xffffbf30);\n            if (iVar3 != 0) {\n                iStackY16580 = -1;\n            }\n            iVar3 = fcn.00435e3f(iStackY16544);\n            uVar1 = uStackY16592;\n            if (iVar3 != 0) {\n                iStackY16580 = -1;\n            }\n            if (uVar2 < uStackY16584 + uStackY16592) {\n                if (iStackY16580 != 0) goto code_r0x0044acf5;\n                iStackY16580 = -0x67;\n            }\n            if (iStackY16580 != 0) goto code_r0x0044acf5;\n            if ((iStackY16588 != 0) && (iVar5 = fcn.00456a6c(iStackY16588 + 1),  iVar5 != 0)) {\n                iStackY32 = iStackY16548;\n                iStackY36 = 0x44ae64;\n                iVar3 = (*apcStackY16576[1])();\n                *(iVar3 + iVar5) = 0;\n            }\n            iStackY16604 = (uVar2 - uStackY16592) - uStackY16584;\n            uStackY16592 = uStackY16584;\n            iStackY16588 = fcn.00456a6c(iStackY16604);\n            iStackY16604 = uVar1 + iStackY16604;\n            iStackY32 = iStackY16544;\n            iStackY36 = iStackY16548;\n            uStackY40 = 0x44aea3;\n            iVar3 = (*pcStackY16560)();\n            uVar2 = uStackY16584;\n            if (iVar3 != 0) {\n                iStackY16580 = -1;\n            }\n            while ((uVar2 != 0 && (iStackY16580 == 0))) {\n                uStackY16584 = 0xff0;\n                if (uStackY16592 < 0xff0) {\n                    uStackY16584 = uStackY16592;\n                }\n                iStackY36 = 0x44aed6;\n                iStackY32 = iStackY16548;\n                uVar2 = (*apcStackY16576[1])();\n                if (uVar2 == uStackY16584) {\n                    iStackY16580 = fcn.0044aaf7(iStackY16588, uStackY16584);\n                }\n                else {\n                    iStackY16580 = -1;\n                }\n                uStackY16592 = uStackY16592 - uStackY16584;\n                uVar2 = uStackY16592;\n            }\n            if (iStackY16588 != 0) {\n                fcn.00455f3f(iStackY16588);\n            }\n            iStackY32 = iStackY16548;\n            iStackY36 = 0x44af2b;\n            iVar3 = (*pcStackY16560)();\n            if (iVar3 != 0) {\n                iStackY16580 = -1;\n            }\n        }\n        if (param_3 != NULL) {\n            *param_3 = iVar5;\n        }\n        if (iStackY16580 == 0) {\n            iStackY32 = 0x44af7e;\n            fcn.00452a10();\n        }\n        else {\n            if (iVar5 != 0) {\n                fcn.00455f3f(iVar5);\n            }\n            fcn.00455f3f(iStackY16596);\n        }\n    }\ncode_r0x0044af84:\n    fcn.004529f8(unaff_EBP);\n    return;\n}\n",
        "token_count": 1772
    },
    "0044b2e2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044b2e2(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = arg_8h;\n    iVar2 = 0;\n    if (arg_8h == 0) {\n        iVar2 = -0x66;\n    }\n    else {\n        if (*(arg_8h + 0x2c) == 1) {\n            iVar2 = fcn.0044b2d1(arg_8h);\n        }\n        if ((arg_ch == 0) && (arg_ch = *(arg_8h + 0x40b4),  arg_ch == 0)) {\n            arg_8h = 0;\n        }\n        else {\n            arg_8h = fcn.00453900(arg_ch);\n        }\n        (**(arg_8h_00 + 0xc))(*(arg_8h_00 + 0x1c), *(arg_8h_00 + 0x20));\n        if (iVar2 == 0) {\n            for (puVar3 = *(arg_8h_00 + 0x24); puVar3 != NULL; puVar3 = *puVar3) {\n                if ((iVar2 == 0) && (puVar3[2] != 0)) {\n                    iVar1 = (**(arg_8h_00 + 8))(*(arg_8h_00 + 0x1c), *(arg_8h_00 + 0x20), puVar3 + 4, puVar3[2]);\n                    if (iVar1 != puVar3[2]) {\n                        iVar2 = -1;\n                    }\n                }\n            }\n        }\n        fcn.0044aad9();\n        if (iVar2 == 0) {\n            iVar2 = fcn.0044ab85(*(arg_8h_00 + 0x20));\n            if (iVar2 == 0) {\n                iVar2 = fcn.0044ab85(*(arg_8h_00 + 0x20));\n                if (iVar2 == 0) {\n                    iVar2 = fcn.0044ab85(*(arg_8h_00 + 0x20));\n                    if (iVar2 == 0) {\n                        iVar2 = fcn.0044ab85(*(arg_8h_00 + 0x20));\n                        if (iVar2 == 0) {\n                            iVar2 = fcn.0044ab85(*(arg_8h_00 + 0x20));\n                            if (iVar2 == 0) {\n                                iVar2 = fcn.0044ab85(*(arg_8h_00 + 0x20));\n                                if (iVar2 == 0) {\n                                    iVar2 = fcn.0044ab85(*(arg_8h_00 + 0x20));\n                                    if (iVar2 == 0) {\n                                        iVar2 = fcn.0044ab85(*(arg_8h_00 + 0x20));\n                                        if ((iVar2 == 0) && (arg_8h != 0)) {\n                                            iVar1 = (**(arg_8h_00 + 8))(*(arg_8h_00 + 0x1c), *(arg_8h_00 + 0x20), arg_ch\n                                                                        , arg_8h);\n                                            if (iVar1 != arg_8h) {\n                                                iVar2 = -1;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        iVar1 = (**(arg_8h_00 + 0x14))(*(arg_8h_00 + 0x1c), *(arg_8h_00 + 0x20));\n        if ((iVar1 != 0) && (iVar2 == 0)) {\n            iVar2 = -1;\n        }\n        if (*(arg_8h_00 + 0x40b4) != 0) {\n            fcn.00455f3f(*(arg_8h_00 + 0x40b4));\n        }\n        fcn.00455f3f(arg_8h_00);\n    }\n    return iVar2;\n}\n",
        "token_count": 958
    },
    "0044b491": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n\nvoid __cdecl\nfcn.0044b491(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            uint32_t arg_20h, int32_t arg_24h, int32_t arg_28h, int32_t arg_2ch, uint arg_30h, int32_t arg_34h, \n            uint arg_38h, uint arg_3ch, int32_t arg_40h, uint arg_44h)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b4f00 ^ &stack0xfffffffc;\n    var_1ch = arg_ch;\n    if (((arg_8h != 0) && ((arg_28h == 0 || (arg_28h == 8)))) &&\n       ((*(arg_8h + 0x2c) != 1 || (iVar2 = fcn.0044b2d1(arg_8h),  iVar2 == 0)))) {\n        if (arg_ch == 0) {\n            var_1ch = 0x490770;\n        }\n        if (arg_24h == 0) {\n            var_18h = 0;\n        }\n        else {\n            var_18h = fcn.00453900(arg_24h);\n        }\n        uVar3 = fcn.00453900(var_1ch);\n        if (arg_10h == 0) {\n            *(arg_8h + 0x4088) = 0;\n        }\n        else {\n            iVar2 = *(arg_10h + 0x18);\n            if (iVar2 == 0) {\n                iVar2 = fcn.0044abf7();\n            }\n            *(arg_8h + 0x4088) = iVar2;\n        }\n        *(arg_8h + 0x7c) = 0;\n        if ((arg_2ch == 8) || (arg_2ch == 9)) {\n            *(arg_8h + 0x7c) = 2;\n        }\n        if (arg_2ch == 2) {\n            *(arg_8h + 0x7c) = *(arg_8h + 0x7c) | 4;\n        }\n        if (arg_2ch == 1) {\n            *(arg_8h + 0x7c) = *(arg_8h + 0x7c) | 6;\n        }\n        if (arg_40h != 0) {\n            *(arg_8h + 0x7c) = *(arg_8h + 0x7c) | 1;\n        }\n        *(arg_8h + 0x80) = arg_28h;\n        *(arg_8h + 0x408c) = 0;\n        *(arg_8h + 0x4090) = 0;\n        *(arg_8h + 0x68) = 0;\n        *(arg_8h + 0x6c) = 0;\n        *(arg_8h + 0x84) = arg_30h;\n        uVar4 = (**(arg_8h + 0xc))(*(arg_8h + 0x1c), *(arg_8h + 0x20));\n        *(arg_8h + 0x70) = uVar4;\n        iVar2 = arg_20h + uVar3 + 0x2e + var_18h;\n        *(arg_8h + 0x78) = iVar2;\n        uVar4 = fcn.00456a6c(iVar2);\n        *(arg_8h + 0x74) = uVar4;\n        fcn.0044abce();\n        fcn.0044abce();\n        fcn.0044abce();\n        fcn.0044abce();\n        fcn.0044abce();\n        fcn.0044abce();\n        fcn.0044abce();\n        fcn.0044abce();\n        fcn.0044abce();\n        fcn.0044abce();\n        fcn.0044abce();\n        fcn.0044abce();\n        fcn.0044abce();\n        if (arg_10h == 0) {\n            fcn.0044abce();\n        }\n        else {\n            fcn.0044abce();\n        }\n        fcn.0044abce();\n        fcn.0044abce();\n        uVar5 = 0;\n        if (uVar3 != 0) {\n            do {\n                *(*(arg_8h + 0x74) + 0x2e + uVar5) = *(var_1ch + uVar5);\n                uVar5 = uVar5 + 1;\n            } while (uVar5 < uVar3);\n        }\n        uVar5 = 0;\n        if (arg_20h != 0) {\n            do {\n                puVar1 = uVar5 + arg_1ch;\n                iVar2 = *(arg_8h + 0x74) + uVar5;\n                uVar5 = uVar5 + 1;\n                *(iVar2 + 0x2e + uVar3) = *puVar1;\n            } while (uVar5 < arg_20h);\n        }\n        uVar5 = 0;\n        if (var_18h != 0) {\n            do {\n                puVar1 = arg_24h + uVar5;\n                iVar2 = *(arg_8h + 0x74) + arg_20h + uVar5;\n                uVar5 = uVar5 + 1;\n                *(iVar2 + 0x2e + uVar3) = *puVar1;\n            } while (uVar5 < var_18h);\n        }\n        if (*(arg_8h + 0x74) != 0) {\n            iVar2 = fcn.0044ab85(*(arg_8h + 0x20));\n            if ((((((iVar2 == 0) && (iVar2 = fcn.0044ab85(*(arg_8h + 0x20)),  iVar2 == 0)) &&\n                  (iVar2 = fcn.0044ab85(*(arg_8h + 0x20)),  iVar2 == 0)) &&\n                 (((iVar2 = fcn.0044ab85(*(arg_8h + 0x20)),  iVar2 == 0 &&\n                   (iVar2 = fcn.0044ab85(*(arg_8h + 0x20)),  iVar2 == 0)) &&\n                  ((iVar2 = fcn.0044ab85(*(arg_8h + 0x20)),  iVar2 == 0 &&\n                   ((iVar2 = fcn.0044ab85(*(arg_8h + 0x20)),  iVar2 == 0 &&\n                    (iVar2 = fcn.0044ab85(*(arg_8h + 0x20)),  iVar2 == 0)))))))) &&\n                (iVar2 = fcn.0044ab85(*(arg_8h + 0x20)),  iVar2 == 0)) &&\n               ((iVar2 = fcn.0044ab85(*(arg_8h + 0x20)),  iVar2 == 0 &&\n                (((uVar3 != 0 &&\n                  (uVar5 = (**(arg_8h + 8))(*(arg_8h + 0x1c), *(arg_8h + 0x20), var_1ch, uVar3),  uVar5 != uVar3)) ||\n                 ((arg_18h != 0 &&\n                  (iVar6 = (**(arg_8h + 8))(*(arg_8h + 0x1c), *(arg_8h + 0x20), arg_14h, arg_18h),  iVar6 != arg_18h))))\n                )))) {\n                iVar2 = -1;\n            }\n            *(arg_8h + 0x34) = 0;\n            *(arg_8h + 0x40) = 0x4000;\n            *(arg_8h + 0x3c) = arg_8h + 0x88;\n            *(arg_8h + 0x38) = 0;\n            *(arg_8h + 0x44) = 0;\n            if (((iVar2 == 0) && (*(arg_8h + 0x80) == 8)) && (*(arg_8h + 0x84) == 0)) {\n                *(arg_8h + 0x50) = 0;\n                *(arg_8h + 0x54) = 0;\n                *(arg_8h + 0x58) = 0;\n                if (0 < arg_34h) {\n                    arg_34h = -arg_34h;\n                }\n                iVar2 = fcn.0044ce3d(arg_8h + 0x30, arg_2ch, 8, arg_34h, arg_38h, arg_3ch, 0x48c3fc, 0x38);\n                if (iVar2 == 0) {\n                    *(arg_8h + 0x68) = 1;\n                }\n            }\n            *(arg_8h + 0x40a4) = 0;\n            if (iVar2 == 0) {\n                if (arg_40h != 0) {\n                    *(arg_8h + 0x4090) = 1;\n                    uVar4 = fcn.00436cb2();\n                    *(arg_8h + 0x40a0) = uVar4;\n                    iVar2 = fcn.0044a978(&var_10h, 0xc, uVar4, arg_44h);\n                    *(arg_8h + 0x40a4) = iVar2;\n                    iVar6 = (**(arg_8h + 8))(*(arg_8h + 0x1c), *(arg_8h + 0x20), &var_10h, iVar2);\n                    if (iVar6 != iVar2) goto code_r0x0044b943;\n                }\n                *(arg_8h + 0x2c) = 1;\n            }\n        }\n    }\ncode_r0x0044b943:\n    fcn.004529f8(arg_14h);\n    return;\n}\n",
        "token_count": 2464
    },
    "0044b9d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044b9d8(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    \n    uVar3 = *(*(in_EAX + 0x1c) + 0x14);\n    if (*(in_EAX + 0x10) < uVar3) {\n        uVar3 = *(in_EAX + 0x10);\n    }\n    if (uVar3 != 0) {\n        fcn.00452a10(*(in_EAX + 0xc), *(*(in_EAX + 0x1c) + 0x10), uVar3);\n        *(in_EAX + 0xc) = *(in_EAX + 0xc) + uVar3;\n        piVar1 = *(in_EAX + 0x1c) + 0x10;\n        *piVar1 = *piVar1 + uVar3;\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + uVar3;\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) - uVar3;\n        piVar1 = *(in_EAX + 0x1c) + 0x14;\n        *piVar1 = *piVar1 - uVar3;\n        iVar2 = *(in_EAX + 0x1c);\n        if (*(iVar2 + 0x14) == 0) {\n            *(iVar2 + 0x10) = *(iVar2 + 8);\n        }\n    }\n    return;\n}\n",
        "token_count": 365
    },
    "0044ba25": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0044ba25(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    int32_t **arg_8h_00;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar3 = arg_8h;\n    if (((arg_8h == NULL) || (arg_8h_00 = arg_8h[7],  arg_8h_00 == NULL)) || (0x4 < arg_ch)) {\n        return 0xfffffffe;\n    }\n    if (((arg_8h[3] == 0) || ((*arg_8h == 0 && (arg_8h[1] != 0)))) || ((arg_8h_00[1] == 0x29a && (arg_ch != 0x4)))) {\n        arg_8h[6] = *0x48ef08;\n        return 0xfffffffe;\n    }\n    if (arg_8h[4] == 0) goto code_r0x0044ba7f;\n    piVar2 = arg_8h_00[10];\n    *arg_8h_00 = arg_8h;\n    arg_8h_00[10] = arg_ch;\n    if (arg_8h_00[1] == 0x2a) {\n        if (arg_8h_00[6] == 0x2) {\n            iVar5 = fcn.00436f02(0, 0, 0);\n            arg_8h[0xc] = iVar5;\n            *(arg_8h_00[2] + arg_8h_00[5]) = 0x1f;\n            arg_8h_00[5] = arg_8h_00[5] + 1;\n            *(arg_8h_00[5] + arg_8h_00[2]) = 0x8b;\n            arg_8h_00[5] = arg_8h_00[5] + 1;\n            *(arg_8h_00[5] + arg_8h_00[2]) = 8;\n            arg_8h_00[5] = arg_8h_00[5] + 1;\n            piVar6 = arg_8h_00[7];\n            if (piVar6 == NULL) {\n                *(arg_8h_00[5] + arg_8h_00[2]) = 0;\n                arg_8h_00[5] = arg_8h_00[5] + 1;\n                *(arg_8h_00[5] + arg_8h_00[2]) = 0;\n                arg_8h_00[5] = arg_8h_00[5] + 1;\n                *(arg_8h_00[5] + arg_8h_00[2]) = 0;\n                arg_8h_00[5] = arg_8h_00[5] + 1;\n                *(arg_8h_00[5] + arg_8h_00[2]) = 0;\n                arg_8h_00[5] = arg_8h_00[5] + 1;\n                *(arg_8h_00[5] + arg_8h_00[2]) = 0;\n                arg_8h_00[5] = arg_8h_00[5] + 1;\n                if (arg_8h_00[0x21] == 0x9) {\n                    uVar4 = 2;\n                }\n                else if ((arg_8h_00[0x22] < 2) && (1 < arg_8h_00[0x21])) {\n                    uVar4 = 0;\n                }\n                else {\n                    uVar4 = 4;\n                }\n                *(arg_8h_00[5] + arg_8h_00[2]) = uVar4;\n                arg_8h_00[5] = arg_8h_00[5] + 1;\n                *(arg_8h_00[5] + arg_8h_00[2]) = 0xb;\n                arg_8h_00[5] = arg_8h_00[5] + 1;\n                arg_8h_00[1] = 0x71;\n            }\n            else {\n                *(arg_8h_00[5] + arg_8h_00[2]) =\n                     ((piVar6[9] == 0) - 1U & 0x10) + ((piVar6[0xb] == 0) - 1U & 2) + ((piVar6[7] == 0) - 1U & 8) +\n                     ((piVar6[4] == 0) - 1U & 4) + (*piVar6 != 0);\n                arg_8h_00[5] = arg_8h_00[5] + 1;\n                *(arg_8h_00[5] + arg_8h_00[2]) = *(arg_8h_00[7] + 1);\n                arg_8h_00[5] = arg_8h_00[5] + 1;\n                *(arg_8h_00[5] + arg_8h_00[2]) = *(arg_8h_00[7] + 5);\n                arg_8h_00[5] = arg_8h_00[5] + 1;\n                *(arg_8h_00[5] + arg_8h_00[2]) = *(arg_8h_00[7] + 6);\n                arg_8h_00[5] = arg_8h_00[5] + 1;\n                *(arg_8h_00[5] + arg_8h_00[2]) = *(arg_8h_00[7] + 7);\n                arg_8h_00[5] = arg_8h_00[5] + 1;\n                if (arg_8h_00[0x21] == 0x9) {\n                    uVar4 = 2;\n                }\n                else if ((arg_8h_00[0x22] < 2) && (1 < arg_8h_00[0x21])) {\n                    uVar4 = 0;\n                }\n                else {\n                    uVar4 = 4;\n                }\n                *(arg_8h_00[5] + arg_8h_00[2]) = uVar4;\n                arg_8h_00[5] = arg_8h_00[5] + 1;\n                *(arg_8h_00[5] + arg_8h_00[2]) = *(arg_8h_00[7] + 3);\n                arg_8h_00[5] = arg_8h_00[5] + 1;\n                piVar6 = arg_8h_00[5];\n                if (arg_8h_00[7][4] != 0) {\n                    *(piVar6 + arg_8h_00[2]) = *(arg_8h_00[7] + 5);\n                    arg_8h_00[5] = arg_8h_00[5] + 1;\n                    *(arg_8h_00[5] + arg_8h_00[2]) = *(arg_8h_00[7] + 0x15);\n                    arg_8h_00[5] = arg_8h_00[5] + 1;\n                    piVar6 = arg_8h_00[5];\n                }\n                if (arg_8h_00[7][0xb] != 0) {\n                    iVar5 = fcn.00436f02(arg_8h[0xc], arg_8h_00[2], piVar6);\n                    arg_8h[0xc] = iVar5;\n                }\n                arg_8h_00[8] = NULL;\n                arg_8h_00[1] = 0x45;\n            }\n        }\n        else {\n            arg_8h_00[1] = 0x71;\n            fcn.0044b9b6();\n            if (arg_8h_00[0x1b] != NULL) {\n                fcn.0044b9b6();\n                fcn.0044b9b6();\n            }\n            iVar5 = fcn.00438c99(0, 0, 0);\n            arg_8h[0xc] = iVar5;\n        }\n    }\n    if (arg_8h_00[1] == 0x45) {\n        piVar6 = arg_8h_00[7];\n        if (piVar6[4] != 0) {\n            arg_8h = arg_8h_00[5];\n            while (arg_8h_00[8] < *(piVar6 + 5)) {\n                piVar6 = arg_8h_00[5];\n                if (piVar6 == arg_8h_00[3]) {\n                    if ((arg_8h_00[7][0xb] != 0) && (arg_8h < piVar6)) {\n                        iVar5 = fcn.00436f02(piVar3[0xc], arg_8h_00[2] + arg_8h, piVar6 - arg_8h);\n                        piVar3[0xc] = iVar5;\n                    }\n                    fcn.0044b9d8();\n                    piVar6 = arg_8h_00[5];\n                    arg_8h = piVar6;\n                    if (piVar6 == arg_8h_00[3]) break;\n                }\n                *(piVar6 + arg_8h_00[2]) = *(arg_8h_00[7][4] + arg_8h_00[8]);\n                arg_8h_00[5] = arg_8h_00[5] + 1;\n                arg_8h_00[8] = arg_8h_00[8] + 1;\n                piVar6 = arg_8h_00[7];\n            }\n            if ((arg_8h_00[7][0xb] != 0) && (arg_8h < arg_8h_00[5])) {\n                iVar5 = fcn.00436f02(piVar3[0xc], arg_8h_00[2] + arg_8h, arg_8h_00[5] - arg_8h);\n                piVar3[0xc] = iVar5;\n            }\n            if (arg_8h_00[8] != arg_8h_00[7][5]) goto code_r0x0044bde8;\n            arg_8h_00[8] = NULL;\n        }\n        arg_8h_00[1] = 0x49;\n    }\ncode_r0x0044bde8:\n    if (arg_8h_00[1] == 0x49) {\n        if (arg_8h_00[7][7] != 0) {\n            arg_8h = arg_8h_00[5];\n            do {\n                piVar6 = arg_8h_00[5];\n                if (piVar6 == arg_8h_00[3]) {\n                    if ((arg_8h_00[7][0xb] != 0) && (arg_8h < piVar6)) {\n                        iVar5 = fcn.00436f02(piVar3[0xc], arg_8h_00[2] + arg_8h, piVar6 - arg_8h);\n                        piVar3[0xc] = iVar5;\n                    }\n                    fcn.0044b9d8();\n                    piVar6 = arg_8h_00[5];\n                    arg_8h = piVar6;\n                    if (piVar6 == arg_8h_00[3]) {\n                        cVar1 = '\\x01';\n                        break;\n                    }\n                }\n                cVar1 = *(arg_8h_00[7][7] + arg_8h_00[8]);\n                arg_8h_00[8] = arg_8h_00[8] + 1;\n                *(piVar6 + arg_8h_00[2]) = cVar1;\n                arg_8h_00[5] = arg_8h_00[5] + 1;\n            } while (cVar1 != '\\0');\n            if ((arg_8h_00[7][0xb] != 0) && (arg_8h < arg_8h_00[5])) {\n                iVar5 = fcn.00436f02(piVar3[0xc], arg_8h_00[2] + arg_8h, arg_8h_00[5] - arg_8h);\n                piVar3[0xc] = iVar5;\n            }\n            if (cVar1 != '\\0') goto code_r0x0044bea6;\n            arg_8h_00[8] = NULL;\n        }\n        arg_8h_00[1] = 0x5b;\n    }\ncode_r0x0044bea6:\n    if (arg_8h_00[1] == 0x5b) {\n        if (arg_8h_00[7][9] != 0) {\n            arg_8h = arg_8h_00[5];\n            do {\n                piVar6 = arg_8h_00[5];\n                if (piVar6 == arg_8h_00[3]) {\n                    if ((arg_8h_00[7][0xb] != 0) && (arg_8h < piVar6)) {\n                        iVar5 = fcn.00436f02(piVar3[0xc], arg_8h_00[2] + arg_8h, piVar6 - arg_8h);\n                        piVar3[0xc] = iVar5;\n                    }\n                    fcn.0044b9d8();\n                    piVar6 = arg_8h_00[5];\n                    arg_8h = piVar6;\n                    if (piVar6 == arg_8h_00[3]) {\n                        cVar1 = '\\x01';\n                        break;\n                    }\n                }\n                cVar1 = *(arg_8h_00[7][9] + arg_8h_00[8]);\n                arg_8h_00[8] = arg_8h_00[8] + 1;\n                *(piVar6 + arg_8h_00[2]) = cVar1;\n                arg_8h_00[5] = arg_8h_00[5] + 1;\n            } while (cVar1 != '\\0');\n            if ((arg_8h_00[7][0xb] != 0) && (arg_8h < arg_8h_00[5])) {\n                iVar5 = fcn.00436f02(piVar3[0xc], arg_8h_00[2] + arg_8h, arg_8h_00[5] - arg_8h);\n                piVar3[0xc] = iVar5;\n            }\n            if (cVar1 != '\\0') goto code_r0x0044bf61;\n        }\n        arg_8h_00[1] = 0x67;\n    }\ncode_r0x0044bf61:\n    if (arg_8h_00[1] == 0x67) {\n        if (arg_8h_00[7][0xb] != 0) {\n            if (arg_8h_00[3] <= arg_8h_00[5] + 2 && arg_8h_00[5] + 2 != arg_8h_00[3]) {\n                fcn.0044b9d8();\n            }\n            piVar6 = arg_8h_00[5] + 2;\n            if (arg_8h_00[3] <= piVar6 && piVar6 != arg_8h_00[3]) goto code_r0x0044bfbb;\n            *(arg_8h_00[5] + arg_8h_00[2]) = *(piVar3 + 0xc);\n            arg_8h_00[5] = arg_8h_00[5] + 1;\n            *(arg_8h_00[5] + arg_8h_00[2]) = *(piVar3 + 0x31);\n            arg_8h_00[5] = arg_8h_00[5] + 1;\n            iVar5 = fcn.00436f02(0, 0, 0);\n            piVar3[0xc] = iVar5;\n        }\n        arg_8h_00[1] = 0x71;\n    }\ncode_r0x0044bfbb:\n    if (arg_8h_00[5] == NULL) {\n        if (((piVar3[1] == 0) && (arg_ch <= piVar2)) && (arg_ch != 0x4)) goto code_r0x0044ba7f;\ncode_r0x0044bff1:\n        if (arg_8h_00[1] == 0x29a) {\n            if (piVar3[1] != 0) {\ncode_r0x0044ba7f:\n                piVar3[6] = *0x48ef14;\n                return 0xfffffffb;\n            }\ncode_r0x0044c00a:\n            if ((arg_8h_00[0x1d] != NULL) || ((arg_ch != NULL && (arg_8h_00[1] != 0x29a)))) goto code_r0x0044c022;\n        }\n        else {\n            if (piVar3[1] == 0) goto code_r0x0044c00a;\ncode_r0x0044c022:\n            iVar5 = (**(arg_8h_00[0x21] * 0xc + 0x491f60))(arg_8h_00, arg_ch);\n            if ((iVar5 == 2) || (iVar5 == 3)) {\n                arg_8h_00[1] = 0x29a;\n            }\n            if ((iVar5 == 0) || (iVar5 == 2)) {\n                if (piVar3[4] != 0) {\n                    return 0;\n                }\n                goto code_r0x0044bfcc;\n            }\n            if (iVar5 == 1) {\n                if (arg_ch == 0x1) {\n                    fcn.0044e362(arg_8h_00);\n                }\n                else {\n                    fcn.0044e2d7(arg_8h_00, 0, 0, 0);\n                    if (arg_ch == 0x3) {\n                        *(arg_8h_00[0x11] + arg_8h_00[0x13] * 2 + -2) = 0;\n                        fcn.00453710(arg_8h_00[0x11], 0, arg_8h_00[0x13] * 2 + -2);\n                    }\n                }\n                fcn.0044b9d8();\n                if (piVar3[4] == 0) goto code_r0x0044bfcc;\n            }\n        }\n        if (arg_ch == 0x4) {\n            if (0 < arg_8h_00[6]) {\n                if (arg_8h_00[6] == 0x2) {\n                    *(arg_8h_00[2] + arg_8h_00[5]) = *(piVar3 + 0xc);\n                    arg_8h_00[5] = arg_8h_00[5] + 1;\n                    *(arg_8h_00[5] + arg_8h_00[2]) = *(piVar3 + 0x31);\n                    arg_8h_00[5] = arg_8h_00[5] + 1;\n                    *(arg_8h_00[5] + arg_8h_00[2]) = *(piVar3 + 0x32);\n                    arg_8h_00[5] = arg_8h_00[5] + 1;\n                    *(arg_8h_00[5] + arg_8h_00[2]) = *(piVar3 + 0x33);\n                    arg_8h_00[5] = arg_8h_00[5] + 1;\n                    *(arg_8h_00[5] + arg_8h_00[2]) = *(piVar3 + 2);\n                    arg_8h_00[5] = arg_8h_00[5] + 1;\n                    *(arg_8h_00[5] + arg_8h_00[2]) = *(piVar3 + 9);\n                    arg_8h_00[5] = arg_8h_00[5] + 1;\n                    *(arg_8h_00[5] + arg_8h_00[2]) = *(piVar3 + 10);\n                    arg_8h_00[5] = arg_8h_00[5] + 1;\n                    *(arg_8h_00[5] + arg_8h_00[2]) = *(piVar3 + 0xb);\n                    arg_8h_00[5] = arg_8h_00[5] + 1;\n                }\n                else {\n                    fcn.0044b9b6();\n                    fcn.0044b9b6();\n                }\n                fcn.0044b9d8();\n                if (0 < arg_8h_00[6]) {\n                    arg_8h_00[6] = -arg_8h_00[6];\n                }\n                return arg_8h_00[5] == NULL;\n            }\n            return 1;\n        }\n    }\n    else {\n        fcn.0044b9d8();\n        if (piVar3[4] != 0) goto code_r0x0044bff1;\ncode_r0x0044bfcc:\n        arg_8h_00[10] = 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 5073
    },
    "0044c241": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0044c241(uint param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *unaff_ESI;\n    uint32_t arg_10h;\n    \n    uVar1 = unaff_ESI[1];\n    arg_10h = uVar1;\n    if (param_2 < uVar1) {\n        arg_10h = param_2;\n    }\n    if (arg_10h == 0) {\n        return 0;\n    }\n    unaff_ESI[1] = uVar1 - arg_10h;\n    if (*(unaff_ESI[7] + 0x18) == 1) {\n        iVar2 = fcn.00438c99(unaff_ESI[0xc], *unaff_ESI, arg_10h);\n    }\n    else {\n        if (*(unaff_ESI[7] + 0x18) != 2) goto code_r0x0044c28c;\n        iVar2 = fcn.00436f02(unaff_ESI[0xc], *unaff_ESI, arg_10h);\n    }\n    unaff_ESI[0xc] = iVar2;\ncode_r0x0044c28c:\n    fcn.00452a10(param_1, *unaff_ESI, arg_10h);\n    *unaff_ESI = *unaff_ESI + arg_10h;\n    unaff_ESI[2] = unaff_ESI[2] + arg_10h;\n    return arg_10h;\n}\n",
        "token_count": 355
    },
    "0044c4f1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044c4f1(void)\n\n{\n    uint32_t uVar1;\n    uint16_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t *unaff_EDI;\n    uint32_t var_4h;\n    \n    uVar1 = unaff_EDI[0xb];\n    while( true ) {\n        iVar4 = (unaff_EDI[0xf] - unaff_EDI[0x1d]) - unaff_EDI[0x1b];\n        if ((uVar1 - 0x106) + unaff_EDI[0xb] <= unaff_EDI[0x1b]) {\n            fcn.00452a10(unaff_EDI[0xe], unaff_EDI[0xe] + uVar1, uVar1);\n            var_4h = unaff_EDI[0x13];\n            unaff_EDI[0x1c] = unaff_EDI[0x1c] - uVar1;\n            unaff_EDI[0x1b] = unaff_EDI[0x1b] - uVar1;\n            unaff_EDI[0x17] = unaff_EDI[0x17] - uVar1;\n            puVar2 = unaff_EDI[0x11] + var_4h * 2;\n            do {\n                puVar2 = puVar2 + -1;\n                var_4h = var_4h + -1;\n                *puVar2 = ~-(*puVar2 < uVar1) & *puVar2 - uVar1;\n            } while (var_4h != 0);\n            puVar2 = unaff_EDI[0x10] + uVar1 * 2;\n            var_4h = uVar1;\n            do {\n                puVar2 = puVar2 + -1;\n                var_4h = var_4h - 1;\n                *puVar2 = ~-(*puVar2 < uVar1) & *puVar2 - uVar1;\n            } while (var_4h != 0);\n            iVar4 = iVar4 + uVar1;\n        }\n        if (*(*unaff_EDI + 4) == 0) break;\n        iVar4 = fcn.0044c241(unaff_EDI[0x1d] + unaff_EDI[0x1b] + unaff_EDI[0xe], iVar4);\n        unaff_EDI[0x1d] = unaff_EDI[0x1d] + iVar4;\n        if (2 < unaff_EDI[0x1d]) {\n            uVar3 = *(unaff_EDI[0x1b] + unaff_EDI[0xe]);\n            unaff_EDI[0x12] = uVar3;\n            unaff_EDI[0x12] =\n                 (uVar3 << (unaff_EDI[0x16] & 0x1f) ^ (unaff_EDI[0x1b] + unaff_EDI[0xe])[1]) & unaff_EDI[0x15];\n        }\n        if (0x105 < unaff_EDI[0x1d]) {\n            return;\n        }\n        if (*(*unaff_EDI + 4) == 0) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 748
    },
    "0044d11b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0044d11b(uint param_1, int32_t param_2)\n\n{\n    uint16_t *puVar1;\n    uint16_t *puVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t *in_EAX;\n    int32_t iVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t *piVar14;\n    uint *puVar15;\n    int16_t *piVar16;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t *var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar4 = in_EAX[1];\n    var_4h = 0;\n    iVar5 = *in_EAX;\n    piVar14 = in_EAX[2];\n    iVar13 = *piVar14;\n    iVar6 = piVar14[1];\n    iVar7 = piVar14[2];\n    uVar8 = piVar14[4];\n    puVar15 = param_2 + 0xb3c;\n    for (iVar10 = 8; iVar10 != 0; iVar10 = iVar10 + -1) {\n        *puVar15 = 0;\n        puVar15 = puVar15 + 1;\n    }\n    *(iVar5 + 2 + *(param_2 + 0xb5c + *(param_2 + 0x1454) * 4) * 4) = 0;\n    iVar10 = *(param_2 + 0x1454) + 1;\n    if (iVar10 < 0x23d) {\n        var_10h = param_2 + 0xb5c + iVar10 * 4;\n        var_1ch = 0x23d - iVar10;\n        iVar10 = iVar10 + var_1ch;\n        do {\n            iVar9 = *var_10h;\n            iVar11 = iVar9 * 4;\n            uVar12 = *(iVar5 + 2 + *(iVar11 + 2 + iVar5) * 4) + 1;\n            if (uVar8 < uVar12) {\n                var_4h = var_4h + 1;\n                uVar12 = uVar8;\n            }\n            *(iVar11 + 2 + iVar5) = uVar12;\n            if (iVar9 <= iVar4) {\n                piVar16 = param_2 + 0xb3c + uVar12 * 2;\n                *piVar16 = *piVar16 + 1;\n                var_ch = 0;\n                if (iVar7 <= iVar9) {\n                    var_ch = *(iVar6 + (iVar9 - iVar7) * 4);\n                }\n                uVar3 = *(iVar11 + iVar5);\n                *(param_2 + 0x16a8) = *(param_2 + 0x16a8) + (var_ch + uVar12) * uVar3;\n                if (iVar13 != 0) {\n                    *(param_2 + 0x16ac) = *(param_2 + 0x16ac) + (*(iVar11 + 2 + iVar13) + var_ch) * uVar3;\n                }\n            }\n            var_10h = var_10h + 1;\n            var_1ch = var_1ch + -1;\n        } while (var_1ch != 0);\n        if (var_4h != 0) {\n            puVar2 = param_2 + 0xb3c + uVar8 * 2;\n            do {\n                iVar13 = uVar8 - 1;\n                for (piVar16 = param_2 + 0xb3c + iVar13 * 2; *piVar16 == 0; piVar16 = piVar16 + -1) {\n                    iVar13 = iVar13 + -1;\n                }\n                piVar16 = param_2 + 0xb3c + iVar13 * 2;\n                *piVar16 = *piVar16 + -1;\n                var_4h = var_4h + -2;\n                piVar16 = param_2 + 0xb3e + iVar13 * 2;\n                *piVar16 = *piVar16 + 2;\n                *puVar2 = *puVar2 - 1;\n            } while (0 < var_4h);\n            for (; uVar8 != 0; uVar8 = uVar8 - 1) {\n                var_10h = *puVar2;\n                if (var_10h != NULL) {\n                    piVar14 = param_2 + 0xb5c + iVar10 * 4;\n                    do {\n                        piVar14 = piVar14 + -1;\n                        iVar10 = iVar10 + -1;\n                        if (*piVar14 <= iVar4) {\n                            puVar1 = iVar5 + *piVar14 * 4;\n                            if (puVar1[1] != uVar8) {\n                                var_4h._0_2_ = uVar8;\n                                *(param_2 + 0x16a8) = *(param_2 + 0x16a8) + (uVar8 - puVar1[1]) * *puVar1;\n                                puVar1[1] = var_4h;\n                            }\n                            var_10h = var_10h - 1;\n                        }\n                    } while (var_10h != NULL);\n                }\n                puVar2 = puVar2 + -1;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 1319
    },
    "0044de16": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044de16(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = 0;\n    piVar2 = param_2 + 0x25;\n    do {\n        if (*piVar2 != 0) break;\n        iVar1 = iVar1 + 1;\n        piVar2 = piVar2 + 1;\n    } while (iVar1 < 9);\n    if (iVar1 == 9) {\n        iVar1 = 0xe;\n        piVar2 = param_2 + 0x33;\n        do {\n            if (*piVar2 != 0) break;\n            iVar1 = iVar1 + 1;\n            piVar2 = piVar2 + 1;\n        } while (iVar1 < 0x20);\n    }\n    *(*param_2 + 0x2c) = iVar1 == 0x20;\n    return;\n}\n",
        "token_count": 218
    },
    "0044de58": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0044de58(uint32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar1 = 0;\n    do {\n        uVar2 = uVar1;\n        uVar3 = param_1 & 1;\n        param_2 = param_2 + -1;\n        uVar1 = (uVar2 | uVar3) * 2;\n        param_1 = param_1 >> 1;\n    } while (0 < param_2);\n    return uVar2 & 0x7fffffff | uVar3;\n}\n",
        "token_count": 152
    },
    "0044df3b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044df3b(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uchar *in_EDX;\n    uint8_t uVar2;\n    \n    iVar1 = fcn.0044dee4();\n    *(iVar1 + 0x16b4) = 8;\n    if (arg_8h != 0) {\n        *(*(iVar1 + 0x14) + *(iVar1 + 8)) = in_ECX;\n        *(iVar1 + 0x14) = *(iVar1 + 0x14) + 1;\n        uVar2 = in_ECX >> 8;\n        *(*(iVar1 + 0x14) + *(iVar1 + 8)) = uVar2;\n        *(iVar1 + 0x14) = *(iVar1 + 0x14) + 1;\n        *(*(iVar1 + 0x14) + *(iVar1 + 8)) = ~in_ECX;\n        *(iVar1 + 0x14) = *(iVar1 + 0x14) + 1;\n        *(*(iVar1 + 0x14) + *(iVar1 + 8)) = ~uVar2;\n        *(iVar1 + 0x14) = *(iVar1 + 0x14) + 1;\n    }\n    for (; in_ECX != 0; in_ECX = in_ECX + -1) {\n        *(*(iVar1 + 0x14) + *(iVar1 + 8)) = *in_EDX;\n        *(iVar1 + 0x14) = *(iVar1 + 0x14) + 1;\n        in_EDX = in_EDX + 1;\n    }\n    return;\n}\n",
        "token_count": 389
    },
    "0044e08e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044e08e(int32_t *arg_8h)\n\n{\n    int16_t *piVar1;\n    int16_t *piVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t unaff_EBX;\n    int32_t iVar8;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = -1;\n    var_ch = arg_8h[2][3];\n    iVar8 = *arg_8h[2];\n    iVar7 = 0;\n    iVar5 = *arg_8h;\n    *(unaff_EBX + 0x1450) = 0;\n    *(unaff_EBX + 0x1454) = 0x23d;\n    if (0 < var_ch) {\n        do {\n            if (*(iVar5 + iVar7 * 4) == 0) {\n                *(iVar5 + 2 + iVar7 * 4) = 0;\n            }\n            else {\n                *(unaff_EBX + 0x1450) = *(unaff_EBX + 0x1450) + 1;\n                *(unaff_EBX + 0xb5c + *(unaff_EBX + 0x1450) * 4) = iVar7;\n                *(iVar7 + 0x1458 + unaff_EBX) = 0;\n                var_8h = iVar7;\n            }\n            iVar7 = iVar7 + 1;\n        } while (iVar7 < var_ch);\n    }\n    while (*(unaff_EBX + 0x1450) < 2) {\n        if (var_8h < 2) {\n            iVar7 = var_8h + 1;\n            var_8h = iVar7;\n        }\n        else {\n            iVar7 = 0;\n        }\n        *(unaff_EBX + 0x1450) = *(unaff_EBX + 0x1450) + 1;\n        *(unaff_EBX + 0xb5c + *(unaff_EBX + 0x1450) * 4) = iVar7;\n        *(iVar7 * 4 + iVar5) = 1;\n        *(unaff_EBX + 0x1458 + iVar7) = 0;\n        *(unaff_EBX + 0x16a8) = *(unaff_EBX + 0x16a8) + -1;\n        if (iVar8 != 0) {\n            *(unaff_EBX + 0x16ac) = *(unaff_EBX + 0x16ac) - *(iVar7 * 4 + 2 + iVar8);\n        }\n    }\n    arg_8h[1] = var_8h;\n    for (iVar8 = *(unaff_EBX + 0x1450) / 2; 0 < iVar8; iVar8 = iVar8 + -1) {\n        fcn.0044d06b(iVar8);\n    }\n    do {\n        uVar6 = *(unaff_EBX + 0xb5c + *(unaff_EBX + 0x1450) * 4);\n        iVar8 = *(unaff_EBX + 0xb60);\n        *(unaff_EBX + 0x1450) = *(unaff_EBX + 0x1450) + -1;\n        *(unaff_EBX + 0xb60) = uVar6;\n        fcn.0044d06b(1);\n        *(unaff_EBX + 0x1454) = *(unaff_EBX + 0x1454) + -1;\n        iVar7 = *(unaff_EBX + 0xb60);\n        *(unaff_EBX + 0xb5c + *(unaff_EBX + 0x1454) * 4) = iVar8;\n        *(unaff_EBX + 0x1454) = *(unaff_EBX + 0x1454) + -1;\n        *(unaff_EBX + 0xb5c + *(unaff_EBX + 0x1454) * 4) = iVar7;\n        piVar1 = iVar5 + iVar7 * 4;\n        piVar2 = iVar5 + iVar8 * 4;\n        *(iVar5 + var_ch * 4) = *piVar1 + *piVar2;\n        uVar3 = *(unaff_EBX + 0x1458 + iVar8);\n        uVar4 = *(unaff_EBX + 0x1458 + iVar7);\n        if (uVar4 <= uVar3) {\n            uVar4 = uVar3;\n        }\n        *(unaff_EBX + 0x1458 + var_ch) = uVar4 + 1;\n        piVar1[1] = var_ch;\n        piVar2[1] = var_ch;\n        *(unaff_EBX + 0xb60) = var_ch;\n        var_ch = var_ch + 1;\n        fcn.0044d06b(1);\n    } while (1 < *(unaff_EBX + 0x1450));\n    *(unaff_EBX + 0x1454) = *(unaff_EBX + 0x1454) + -1;\n    *(unaff_EBX + 0xb5c + *(unaff_EBX + 0x1454) * 4) = *(unaff_EBX + 0xb60);\n    fcn.0044d11b();\n    fcn.0044e017(var_8h);\n    return;\n}\n",
        "token_count": 1267
    },
    "0044e276": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044e276(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    fcn.0044d2d8(in_EAX);\n    fcn.0044d2d8(in_EAX);\n    fcn.0044e08e(in_EAX + 0xb30);\n    iVar1 = 0x12;\n    do {\n        if (*(in_EAX + 0xa7e + *(iVar1 + 0x49204c) * 4) != 0) break;\n        iVar1 = iVar1 + -1;\n    } while (2 < iVar1);\n    *(in_EAX + 0x16a8) = *(in_EAX + 0x16a8) + iVar1 * 3 + 0x11;\n    return;\n}\n",
        "token_count": 181
    },
    "0044e529": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044e529(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    iVar4 = 0;\n    if (arg_8h[0x21] < 1) {\n        uVar2 = arg_10h + 5;\ncode_r0x0044e596:\n        uVar3 = uVar2;\n    }\n    else {\n        if ((arg_10h != 0) && (*(*arg_8h + 0x2c) == 2)) {\n            fcn.0044de16();\n        }\n        fcn.0044e08e(arg_8h + 0x2c6);\n        fcn.0044e08e(arg_8h + 0x2c9);\n        iVar4 = fcn.0044e276();\n        uVar3 = arg_8h[0x5aa] + 10U >> 3;\n        uVar2 = arg_8h[0x5ab] + 10U >> 3;\n        if (uVar2 <= uVar3) goto code_r0x0044e596;\n    }\n    if ((uVar3 < arg_10h + 4U) || (arg_ch == 0)) {\n        if ((arg_8h[0x22] == 4) || (uVar2 == uVar3)) {\n            iVar4 = arg_8h[0x5af];\n            if (iVar4 < 0xe) {\n                *(arg_8h + 0x5ae) = *(arg_8h + 0x5ae) | arg_14h + 2 << (iVar4 & 0x1f);\n                arg_8h[0x5af] = iVar4 + 3;\n            }\n            else {\n                *(arg_8h + 0x5ae) = *(arg_8h + 0x5ae) | arg_14h + 2 << (iVar4 & 0x1f);\n                *(arg_8h[2] + arg_8h[5]) = *(arg_8h + 0x5ae);\n                arg_8h[5] = arg_8h[5] + 1;\n                *(arg_8h[5] + arg_8h[2]) = *(arg_8h + 0x16b9);\n                iVar4 = arg_8h[0x5af];\n                arg_8h[5] = arg_8h[5] + 1;\n                arg_8h[0x5af] = iVar4 + -0xd;\n                *(arg_8h + 0x5ae) = arg_14h + 2 >> (0x10U - iVar4 & 0x1f);\n            }\n            fcn.0044da64(0x492128, 0x4925a8);\n        }\n        else {\n            iVar1 = arg_8h[0x5af];\n            if (iVar1 < 0xe) {\n                *(arg_8h + 0x5ae) = *(arg_8h + 0x5ae) | arg_14h + 4 << (iVar1 & 0x1f);\n                arg_8h[0x5af] = iVar1 + 3;\n            }\n            else {\n                *(arg_8h + 0x5ae) = *(arg_8h + 0x5ae) | arg_14h + 4 << (iVar1 & 0x1f);\n                *(arg_8h[2] + arg_8h[5]) = *(arg_8h + 0x5ae);\n                arg_8h[5] = arg_8h[5] + 1;\n                *(arg_8h[5] + arg_8h[2]) = *(arg_8h + 0x16b9);\n                iVar1 = arg_8h[0x5af];\n                arg_8h[5] = arg_8h[5] + 1;\n                arg_8h[0x5af] = iVar1 + -0xd;\n                *(arg_8h + 0x5ae) = arg_14h + 4 >> (0x10U - iVar1 & 0x1f);\n            }\n            fcn.0044d82e(arg_8h[0x2c7] + 1, arg_8h[0x2ca] + 1, iVar4 + 1);\n            fcn.0044da64(arg_8h + 0x25, arg_8h + 0x262);\n        }\n    }\n    else {\n        fcn.0044e2d7(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    iVar4 = fcn.0044d00d();\n    if (arg_14h == 0) {\n        return;\n    }\n    if (*(iVar4 + 0x16bc) < 9) {\n        if (*(iVar4 + 0x16bc) < 1) goto code_r0x0044df2a;\n        *(*(iVar4 + 8) + *(iVar4 + 0x14)) = *(iVar4 + 0x16b8);\n    }\n    else {\n        *(*(iVar4 + 8) + *(iVar4 + 0x14)) = *(iVar4 + 0x16b8);\n        *(iVar4 + 0x14) = *(iVar4 + 0x14) + 1;\n        *(*(iVar4 + 0x14) + *(iVar4 + 8)) = *(iVar4 + 0x16b9);\n    }\n    *(iVar4 + 0x14) = *(iVar4 + 0x14) + 1;\ncode_r0x0044df2a:\n    *(iVar4 + 0x16b8) = 0;\n    *(iVar4 + 0x16bc) = 0;\n    return;\n}\n",
        "token_count": 1375
    },
    "0044e847": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044e847(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar2 = 0x492d28;\n    if (*0x492d2c != 0) {\n        do {\n            if (*piVar2 == arg_8h) {\n                return piVar2[1];\n            }\n            piVar1 = piVar2 + 3;\n            piVar2 = piVar2 + 2;\n        } while (*piVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 136
    },
    "0044e871": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044e871(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar2 = 0x492ad0;\n    if (*0x492ad4 != 0) {\n        do {\n            if (*piVar2 == arg_8h) {\n                return piVar2[1];\n            }\n            piVar1 = piVar2 + 3;\n            piVar2 = piVar2 + 2;\n        } while (*piVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 135
    },
    "0044e9ca": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0044e9ca(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_8h_00;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0045b302(8);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    if (*(unaff_EBP + 0x10) != 0) {\n        *extraout_ECX = 0x4a21b4;\n        extraout_ECX[2] = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x10) = 1;\n    }\n    arg_ch_00 = *(unaff_EBP + 0xc);\n    arg_8h_00 = *(unaff_EBP + 8);\n    *(extraout_ECX + *(*extraout_ECX + 4)) = vtable.std::basic_ostream_char__struct_std::char_traits_char__.0;\n    *(*(*extraout_ECX + 4) + -4 + extraout_ECX) = *(*extraout_ECX + 4) + -8;\n    fcn.0040d04c(arg_8h_00, arg_ch_00);\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 377
    },
    "0044f41d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044f41d(uint arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t arg_8h_00;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    uVar4 = arg_ch & 4;\n    uVar2 = arg_ch & 0x80;\n    uVar1 = 1;\n    if ((arg_ch & 0x40) != 0) {\n        arg_ch = arg_ch | 1;\n    }\n    if ((arg_ch & 8) != 0) {\n        arg_ch = arg_ch | 2;\n    }\n    iVar3 = 0;\n    do {\n        if (uVar1 == (arg_ch & 0xffffff3b)) break;\n        uVar1 = *(iVar3 * 4 + 0x493b50);\n        iVar3 = iVar3 + 1;\n    } while (uVar1 != 0);\n    if (*(iVar3 * 4 + 0x493b4c) != 0) {\n        if (((uVar2 == 0) || ((arg_ch & 10) == 0)) || (arg_8h_00 = fcn.0044f42f(arg_8h, 0, arg_10h),  arg_8h_00 == 0)) {\n            arg_8h_00 = fcn.0044f42f(arg_8h, iVar3, arg_10h);\n            if (arg_8h_00 == 0) {\n                return 0;\n            }\n            if (uVar4 == 0) {\n                return arg_8h_00;\n            }\n            iVar3 = fcn.00458499(arg_8h_00, 0, 2);\n            if (iVar3 == 0) {\n                return arg_8h_00;\n            }\n        }\n        fcn.004567e2(arg_8h_00);\n    }\n    return 0;\n}\n",
        "token_count": 458
    },
    "0044f426": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044f426(uint arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t arg_8h_00;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    uVar4 = arg_ch & 4;\n    uVar2 = arg_ch & 0x80;\n    uVar1 = 1;\n    if ((arg_ch & 0x40) != 0) {\n        arg_ch = arg_ch | 1;\n    }\n    if ((arg_ch & 8) != 0) {\n        arg_ch = arg_ch | 2;\n    }\n    iVar3 = 0;\n    do {\n        if (uVar1 == (arg_ch & 0xffffff3b)) break;\n        uVar1 = *(iVar3 * 4 + 0x493b50);\n        iVar3 = iVar3 + 1;\n    } while (uVar1 != 0);\n    if (*(iVar3 * 4 + 0x493b4c) != 0) {\n        if (((uVar2 == 0) || ((arg_ch & 10) == 0)) || (arg_8h_00 = fcn.0044f44c(arg_8h, 0, arg_10h),  arg_8h_00 == 0)) {\n            arg_8h_00 = fcn.0044f44c(arg_8h, iVar3, arg_10h);\n            if (arg_8h_00 == 0) {\n                return 0;\n            }\n            if (uVar4 == 0) {\n                return arg_8h_00;\n            }\n            iVar3 = fcn.00458499(arg_8h_00, 0, 2);\n            if (iVar3 == 0) {\n                return arg_8h_00;\n            }\n        }\n        fcn.004567e2(arg_8h_00);\n    }\n    return 0;\n}\n",
        "token_count": 457
    },
    "0045193a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045193a(uint arg_8h, int32_t arg_ch, double *arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t arg_ch_00;\n    \n    arg_ch_00 = arg_ch;\n    if ((arg_ch != 0) && (arg_14h != 0)) {\n        if ((*arg_10h == 0.0) || (arg_10h[1] == 0.0)) {\n            fcn.004517be(arg_8h, arg_ch);\n        }\n        else {\n            fcn.004517a1(arg_18h, arg_ch, arg_8h);\n            fcn.004517be(arg_8h, arg_ch);\n            arg_ch = 1;\n            if (1 < arg_14h) {\n                do {\n                    if (arg_10h[arg_ch] == 0.0) {\n                        return arg_8h;\n                    }\n                    fcn.004517a1(arg_18h + arg_ch_00 * 8, arg_ch_00, arg_18h);\n                    fcn.004517be(arg_18h + arg_ch_00 * 8, arg_ch_00);\n                    fcn.004516d2(arg_8h, arg_ch_00, arg_18h + arg_ch_00 * 8, arg_ch_00);\n                    arg_ch = arg_ch + 1;\n                } while (arg_ch < arg_14h);\n            }\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 346
    },
    "00451c48": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\ndouble * __cdecl fcn.00451c48(double *arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    double dVar1;\n    double *pdVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int16_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint in_stack_00000010;\n    uint16_t uStack00000012;\n    uint var_18h;\n    uint var_10h;\n    double *var_8h;\n    uint32_t var_4h;\n    \n    iVar3 = arg_ch;\n    pdVar2 = arg_8h;\n    _var_10h = _arg_10h;\n    if (arg_ch != 0) {\n        iVar5 = fcn.004529ef(&arg_8h, &var_10h);\n        if (iVar5 < 1) {\n            if (iVar5 < 0) {\n                var_4h = 0x800;\n                iVar8 = 0;\n                if (0 < iVar3) {\n                    while( true ) {\n                        var_8h = pdVar2 + iVar8;\n                        _var_18h = *var_8h;\n                        iVar5 = fcn.004529ef(&arg_ch, &var_18h);\n                        if (0 < iVar5) break;\n                        if (iVar5 == 0) {\n                            pdVar2[iVar8] = _arg_10h;\n                            if (iVar3 <= iVar8 + 1) {\n                                return pdVar2;\n                            }\n                            pdVar2[iVar8 + 1] = 0.0;\n                            return pdVar2;\n                        }\n                        iVar6 = arg_ch - arg_8h;\n                        if ((iVar6 < -0x19) && (iVar7 = iVar8,  _arg_10h != 0.0)) {\n                            do {\n                                iVar6 = iVar7;\n                                iVar7 = iVar6 + 1;\n                                if (iVar3 <= iVar7) break;\n                            } while (pdVar2[iVar7] != 0.0);\n                            if (iVar7 < iVar3 + -1) {\n                                iVar7 = iVar6 + 2;\n                            }\n                            else if (iVar7 == iVar3) {\n                                iVar7 = iVar6;\n                            }\n                            for (; iVar8 < iVar7; iVar7 = iVar7 + -1) {\n                                pdVar2[iVar7] = pdVar2[iVar7 + -1];\n                            }\n                            *var_8h = _arg_10h;\n                            _arg_10h = 0.0;\n                            iVar6 = iVar8;\n                        }\n                        else if ((iVar6 < 0x1a) || (_arg_10h == 0.0)) {\n                            dVar1 = *var_8h;\n                            *var_8h = dVar1 + _arg_10h;\n                            iVar6 = iVar8;\n                            if (dVar1 + _arg_10h == 0.0) {\n                                do {\n                                    iVar7 = iVar6 + 1;\n                                    if (iVar3 <= iVar7) break;\n                                    pdVar2[iVar6] = pdVar2[iVar7];\n                                    iVar6 = iVar7;\n                                } while (pdVar2[iVar7] != 0.0);\n                                pdVar2[iVar3 + -1] = 0.0;\n                                if (*var_8h == 0.0) {\n                                    return pdVar2;\n                                }\n                            }\n                            _arg_10h = *var_8h;\n                            fcn.004529ef(&arg_8h, &arg_10h);\n                            uVar4 = var_4h;\n                            var_4h = var_4h & 0xffff | arg_8h << 0x10;\n                            if (uVar4 - 0x1a < arg_8h) {\n                                fcn.004529e6(&arg_10h, (arg_8h - uVar4) + 0x1a);\n                                fcn.00451c3f(&arg_10h, arg_8h);\n                                dVar1 = *var_8h;\n                                *var_8h = dVar1 - _arg_10h;\n                                iVar6 = iVar8;\n                                if (dVar1 - _arg_10h == 0.0) {\n                                    do {\n                                        iVar7 = iVar6 + 1;\n                                        if (iVar3 <= iVar7) break;\n                                        pdVar2[iVar6] = pdVar2[iVar7];\n                                        iVar6 = iVar7;\n                                    } while (pdVar2[iVar7] != 0.0);\n                                    pdVar2[iVar3 + -1] = 0.0;\n                                }\n                                iVar6 = iVar8 + -1;\n                                if (iVar6 == 0) {\n                                    var_4h = 0x800;\n                                }\n                                else {\n                                    _var_10h = pdVar2[iVar8 + -2];\n                                    fcn.004529ef(&arg_ch, &var_10h);\n                                    var_4h = arg_ch;\n                                }\n                            }\n                            else {\n                                iVar6 = iVar8 + 1;\n                                if (iVar6 == iVar3) {\n                                    return pdVar2;\n                                }\n                                _arg_10h = *var_8h;\n                                fcn.004529ef(&arg_ch, var_8h);\n                                fcn.004529e6(var_8h, 0x1a);\n                                fcn.00451c3f(var_8h, arg_ch);\n                                var_4h = arg_ch;\n                                _arg_10h = _arg_10h - *var_8h;\n                                _var_10h = _arg_10h;\n                                if (_arg_10h == 0.0) {\n                                    _var_10h = *var_8h;\n                                }\n                                fcn.004529ef(&arg_8h, &var_10h);\n                            }\n                        }\n                        else {\n                            iVar6 = iVar8 + 1;\n                            var_4h = arg_ch;\n                        }\n                        iVar8 = iVar6;\n                        if (iVar3 <= iVar6) {\n                            return pdVar2;\n                        }\n                    }\n                }\n            }\n        }\n        else if ((iVar5 == 2) || (iVar5 = fcn.004529dd(pdVar2),  iVar5 < 1)) {\n            *pdVar2 = _arg_10h;\n        }\n        else if ((iVar5 != 2) && (((*(pdVar2 + 6) ^ uStack00000012) & 0x8000) != 0)) {\n            fcn.004524b8(1);\n            *pdVar2 = *0x4b4bd8;\n            if (1 < iVar3) {\n                pdVar2[1] = 0.0;\n            }\n        }\n    }\n    return pdVar2;\n}\n",
        "token_count": 1513
    },
    "00451f6f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00451f6f(double *arg_8h, int32_t arg_ch)\n\n{\n    uint16_t uVar1;\n    double *pdVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    double in_stack_0000000c;\n    uint var_34h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    double adStack32 [3];\n    uint32_t var_4h;\n    \n    var_4h = *0x4b4f00 ^ &stack0xfffffffc;\n    if (0 < arg_ch) {\n        _var_24h = in_stack_0000000c * *arg_8h;\n        uVar1 = fcn.004529dd();\n        if (uVar1 < 0x8000) {\n            if (uVar1 == 2) {\n                fcn.004524b8(1);\n            }\n            *arg_8h = _var_24h;\n            if ((0 < uVar1) && (1 < arg_ch)) {\n                arg_8h[1] = 0.0;\n            }\n            goto code_r0x004520cc;\n        }\n        *arg_8h = 0.0;\n    }\n    iVar4 = 1;\n    var_2ch = 0;\n    if (0 < arg_ch) {\n        do {\n            if (iVar4 < 4) {\n                pdVar2 = arg_8h + var_2ch + iVar4;\n                do {\n                    if ((arg_ch <= var_2ch + iVar4) || (*pdVar2 == 0.0)) {\n                        *(&var_24h + iVar4 * 2) = 0;\n                        iVar4 = 8;\n                        break;\n                    }\n                    iVar4 = iVar4 + 1;\n                    *(&var_2ch + iVar4 * 2) = in_stack_0000000c * *pdVar2;\n                    *pdVar2 = 0.0;\n                    pdVar2 = pdVar2 + 1;\n                } while (iVar4 < 4);\n            }\n            if (_var_24h == 0.0) break;\n            _var_34h = _var_24h;\n            fcn.004529ef(&var_28h, &var_34h);\n            fcn.004529e6(&var_34h, 0x1a);\n            fcn.00451c3f(&var_34h, var_28h);\n            fcn.00451c48(arg_8h, arg_ch, SUB84(_var_34h, 0));\n            fcn.00451c48(arg_8h, arg_ch, SUB84(_var_24h - _var_34h, 0));\n            iVar3 = 1;\n            if (1 < iVar4) {\n                do {\n                    *(&var_2ch + iVar3 * 2) = *(&var_24h + iVar3 * 2);\n                    if (*(&var_24h + iVar3 * 2) == 0.0) break;\n                    iVar3 = iVar3 + 1;\n                } while (iVar3 < iVar4);\n            }\n            var_2ch = var_2ch + 1;\n            iVar4 = iVar4 + -1;\n        } while (var_2ch < arg_ch);\n    }\ncode_r0x004520cc:\n    fcn.004529f8(var_34h);\n    return;\n}\n",
        "token_count": 802
    },
    "004520eb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004520eb(uint arg_8h, int32_t arg_ch, double *arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t arg_ch_00;\n    \n    arg_ch_00 = arg_ch;\n    if ((arg_ch != 0) && (arg_14h != 0)) {\n        if ((*arg_10h == 0.0) || (arg_10h[1] == 0.0)) {\n            fcn.00451f6f(arg_8h, arg_ch);\n        }\n        else {\n            fcn.004517a1(arg_18h, arg_ch, arg_8h);\n            fcn.00451f6f(arg_8h, arg_ch);\n            arg_ch = 1;\n            if (1 < arg_14h) {\n                do {\n                    if (arg_10h[arg_ch] == 0.0) {\n                        return arg_8h;\n                    }\n                    fcn.004517a1(arg_18h + arg_ch_00 * 8, arg_ch_00, arg_18h);\n                    fcn.00451f6f(arg_18h + arg_ch_00 * 8, arg_ch_00);\n                    fcn.00451f2b(arg_8h, arg_ch_00, arg_18h + arg_ch_00 * 8, arg_ch_00);\n                    arg_ch = arg_ch + 1;\n                } while (arg_ch < arg_14h);\n            }\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 352
    },
    "004521e4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\ndouble * __cdecl fcn.004521e4(double *arg_8h, int32_t arg_ch)\n\n{\n    double *pdVar1;\n    int32_t iVar2;\n    int16_t iVar3;\n    double in_stack_0000000c;\n    uint var_8h;\n    \n    iVar2 = arg_ch;\n    _var_8h = in_stack_0000000c;\n    if (0 < arg_ch) {\n        if ((arg_ch == 1) || (iVar3 = fcn.004529ef(&arg_ch, &var_8h),  iVar3 == 0)) {\n            *arg_8h = _var_8h;\n        }\n        else if (iVar3 < 1) {\n            fcn.004529e6(&var_8h, 0x1a);\n            fcn.00451c3f(&var_8h, arg_ch);\n            pdVar1 = arg_8h + 1;\n            *arg_8h = _var_8h;\n            in_stack_0000000c = in_stack_0000000c - _var_8h;\n            *pdVar1 = in_stack_0000000c;\n            if (2 < iVar2) {\n                if (in_stack_0000000c == 0.0) {\n                    arg_8h[2] = 0.0;\n                }\n                else {\n                    fcn.004529ef(&arg_ch, pdVar1);\n                    fcn.004529e6(pdVar1, 0x1a);\n                    fcn.00451c3f(pdVar1, arg_ch);\n                    arg_8h[2] = in_stack_0000000c - *pdVar1;\n                    if ((3 < iVar2) && (in_stack_0000000c - *pdVar1 != 0.0)) {\n                        arg_8h[3] = 0.0;\n                    }\n                }\n            }\n        }\n        else {\n            *arg_8h = _var_8h;\n            arg_8h[1] = 0.0;\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 470
    },
    "00455f3f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00455f3f(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4b9290, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.0045c4f2();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.0045c505(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "004591f6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004591f6(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint *var_38h_2;\n    code *pcStack56;\n    uint32_t uStack52;\n    uint uStack48;\n    uint *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uchar *var_18h_2;\n    int32_t var_14h_2;\n    uint *var_10h;\n    uint var_ch;\n    code *var_8h;\n    uint var_4h;\n    \n    var_18h_2 = &stack0xfffffffc;\n    puStack32 = &stack0xffffffc0;\n    if (var_34h == 0x123) {\n        *var_30h = 0x45929f;\n        var_4h = 1;\n    }\n    else {\n        pcStack56 = fcn.004590f4;\n        uStack52 = *0x4b4f00 ^ &fcn.004591f6::var_38h_2;\n        uStack48 = var_24h;\n        puStack44 = var_30h;\n        uStack40 = var_20h;\n        uStack36 = var_1ch;\n        var_14h_2 = 0;\n        var_38h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.004591f6::var_38h_2;\n        var_4h = 1;\n        var_10h = var_34h;\n        var_ch = var_2ch;\n        iVar1 = fcn.00460e79();\n        var_8h = *(iVar1 + 0x80);\n        (*var_8h)(*var_34h, &fcn.004591f6::var_10h);\n        var_4h = 0;\n        if (var_14h_2 == 0) {\n            *in_FS_OFFSET = var_38h_2;\n        }\n        else {\n            *var_38h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_38h_2;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 699
    },
    "0045b5ff": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045b5ff(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x28);\n    fcn.004593f7(*(unaff_EBP + -0x2c));\n    iVar1 = fcn.00460e79();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x30);\n    iVar1 = fcn.00460e79();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x34);\n    if (((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n         ((unaff_ESI[5] == 0x19930520 || ((unaff_ESI[5] == 0x19930521 || (unaff_ESI[5] == 0x19930522)))))) &&\n        (*(unaff_EBP + -0x38) == 0)) &&\n       ((*(unaff_EBP + -0x1c) != 0 && (iVar1 = fcn.00459447(unaff_ESI[6]),  iVar1 != 0)))) {\n        fcn.0045b3da(unaff_ESI);\n    }\n    return;\n}\n",
        "token_count": 384
    },
    "0045c017": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045c017(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00460e79();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.00460e79();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "0045e792": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0045e887: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0045e88c)\n// WARNING: Removing unreachable block (ram,0x0045e8bb)\n// WARNING: Removing unreachable block (ram,0x0045e892)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0045e792(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    uint uVar6;\n    int32_t unaff_EBP;\n    int32_t *piVar7;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0045e910(0x4ac458, 0x1c);\n    fcn.0045c345(8);\n    *(unaff_EBP + -4) = 0;\n    pcVar5 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if (*0x4b8b04 != 1) {\n        *0x4b8af8 = 1;\n        *0x4b8af4 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x4b98c4);\n            *(unaff_EBP + -0x2c) = piVar2;\n            if (piVar2 != NULL) {\n                piVar3 = (*pcVar5)(*0x4b98c0);\n                *(unaff_EBP + -0x1c) = piVar2;\n                *(unaff_EBP + -0x20) = piVar3;\n                do {\n                    *(unaff_EBP + -0x24) = piVar3;\n                    piVar7 = piVar3;\n                    do {\n                        do {\n                            piVar7 = piVar7 + -1;\n                            *(unaff_EBP + -0x24) = piVar7;\n                            if (piVar7 < piVar2) goto code_r0x0045e85e;\n                            iVar4 = (*_sym.imp.KERNEL32.dll_EncodePointer)(0);\n                        } while (*piVar7 == iVar4);\n                        if (piVar7 < piVar2) goto code_r0x0045e85e;\n                        pcVar5 = (*pcVar5)(*piVar7);\n                        iVar4 = (*_sym.imp.KERNEL32.dll_EncodePointer)(0);\n                        *piVar7 = iVar4;\n                        (*pcVar5)();\n                        pcVar5 = _sym.imp.KERNEL32.dll_DecodePointer;\n                        uVar6 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x4b98c4);\n                        *(unaff_EBP + -0x28) = uVar6;\n                        piVar3 = (*pcVar5)(*0x4b98c0);\n                        piVar1 = *(unaff_EBP + -0x28);\n                    } while ((*(unaff_EBP + -0x1c) == piVar1) && (*(unaff_EBP + -0x20) == piVar3));\n                    *(unaff_EBP + -0x1c) = piVar1;\n                    *(unaff_EBP + -0x2c) = piVar1;\n                    *(unaff_EBP + -0x20) = piVar3;\n                    piVar2 = piVar1;\n                } while( true );\n            }\ncode_r0x0045e85e:\n            fcn.0045e742(0x48c348, 0x48c358);\n        }\n        fcn.0045e742(0x48c35c, 0x48c360);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.0045c4a9(8);\n    }\n    return;\n}\n",
        "token_count": 952
    },
    "00465c2a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00465c2a(uint32_t arg_8h, int16_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint8_t *puVar1;\n    char cVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint8_t uVar5;\n    int16_t iVar6;\n    uint *puVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int16_t *piVar12;\n    int16_t *piVar13;\n    uint32_t uVar14;\n    int16_t *piVar15;\n    bool bVar16;\n    ulong uVar17;\n    uint var_28h;\n    uint var_24h;\n    int16_t *lpMode;\n    int16_t *lpBuffer;\n    uint32_t var_18h;\n    uint32_t lpNumberOfBytesRead;\n    int16_t *var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    uVar14 = 0;\n    lpMode = NULL;\n    var_18h = 0xfffffffe;\n    if (arg_8h == 0xfffffffe) {\n        puVar7 = fcn.0045c4be();\n        *puVar7 = 0;\n        puVar7 = fcn.0045c4f2();\n        *puVar7 = 9;\n        return 0xffffffff;\n    }\n    if ((-1 < arg_8h) && (arg_8h < *0x4b98b8)) {\n        var_ch = arg_8h >> 5;\n        iVar8 = *(var_ch * 4 + 0x4b9168);\n        iVar9 = (arg_8h & 0x1f) * 0x40;\n        uVar5 = *(iVar8 + 4 + iVar9);\n        if ((uVar5 & 1) != 0) {\n            if (arg_10h < 0x80000000) {\n                if ((arg_10h == 0) || ((uVar5 & 2) != 0)) {\n                    return 0;\n                }\n                if (arg_ch != NULL) {\n                    cVar4 = *(iVar8 + 0x24 + iVar9) * '\\x02' >> 1;\n                    if (cVar4 == '\\x01') {\n                        if ((~arg_10h & 1) == 0) goto code_r0x00465cd0;\n                        uVar10 = arg_10h >> 1;\n                        if (uVar10 < 4) {\n                            uVar10 = 4;\n                        }\n                        var_10h = fcn.0045c8c3(uVar10);\n                        if (var_10h == NULL) {\n                            puVar7 = fcn.0045c4f2();\n                            *puVar7 = 0xc;\n                            puVar7 = fcn.0045c4be();\n                            *puVar7 = 8;\n                            return 0xffffffff;\n                        }\n                        uVar17 = fcn.00462e7e(arg_8h, 0, 0, 1);\n                        iVar8 = *(var_ch * 4 + 0x4b9168);\n                        *(iVar8 + 0x28 + iVar9) = uVar17;\n                        *(iVar8 + 0x2c + iVar9) = uVar17 >> 0x20;\n                    }\n                    else {\n                        uVar10 = arg_10h;\n                        if (cVar4 == '\\x02') {\n                            if ((~arg_10h & 1) == 0) goto code_r0x00465cd0;\n                            uVar10 = arg_10h & 0xfffffffe;\n                        }\n                        var_10h = arg_ch;\n                    }\n                    iVar8 = *(var_ch * 4 + 0x4b9168);\n                    uVar11 = uVar10;\n                    lpBuffer = var_10h;\n                    if ((((*(iVar8 + 4 + iVar9) & 0x48) != 0) && (cVar2 = *(iVar8 + 5 + iVar9),  cVar2 != '\\n')) &&\n                       (uVar10 != 0)) {\n                        *var_10h = cVar2;\n                        lpBuffer = var_10h + 1;\n                        uVar14 = 1;\n                        uVar11 = uVar10 - 1;\n                        *(*(var_ch * 4 + 0x4b9168) + 5 + iVar9) = 10;\n                        if (((cVar4 != '\\0') && (cVar2 = *(*(var_ch * 4 + 0x4b9168) + 0x25 + iVar9),  cVar2 != '\\n')) &&\n                           (uVar11 != 0)) {\n                            *lpBuffer = cVar2;\n                            lpBuffer = var_10h + 1;\n                            uVar11 = uVar10 - 2;\n                            uVar14 = 2;\n                            *(*(var_ch * 4 + 0x4b9168) + 0x25 + iVar9) = 10;\n                            if (((cVar4 == '\\x01') &&\n                                (cVar2 = *(*(var_ch * 4 + 0x4b9168) + 0x26 + iVar9),  cVar2 != '\\n')) && (uVar11 != 0))\n                            {\n                                uVar14 = 3;\n                                *lpBuffer = cVar2;\n                                lpBuffer = var_10h + 3;\n                                uVar11 = uVar10 - 3;\n                                *(*(var_ch * 4 + 0x4b9168) + 0x26 + iVar9) = 10;\n                            }\n                        }\n                    }\n                    iVar8 = fcn.0046c470(arg_8h);\n                    if ((((iVar8 == 0) || (iVar8 = *(var_ch * 4 + 0x4b9168),  (*(iVar8 + 4 + iVar9) & 0x80) == 0)) ||\n                        (lpMode = (*_sym.imp.KERNEL32.dll_GetConsoleMode)(*(iVar8 + iVar9), &lpMode),  lpMode == NULL))\n                       || (cVar4 != '\\x02')) {\n                        iVar8 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                                          (*(*(var_ch * 4 + 0x4b9168) + iVar9), lpBuffer, uVar11, &lpNumberOfBytesRead, \n                                           0);\n                        if (((iVar8 != 0) && (-1 < lpNumberOfBytesRead)) && (lpNumberOfBytesRead <= uVar11))\n                        goto code_r0x00465eb7;\n                        iVar8 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                        if (iVar8 != 5) {\n                            if (iVar8 == 0x6d) {\n                                uVar10 = 0;\n                                goto code_r0x0046612c;\n                            }\n                            goto code_r0x00465e62;\n                        }\n                        puVar7 = fcn.0045c4f2();\n                        *puVar7 = 9;\n                        puVar7 = fcn.0045c4be();\n                        *puVar7 = 5;\n                    }\n                    else {\n                        iVar8 = (*_sym.imp.KERNEL32.dll_ReadConsoleW)\n                                          (*(*(var_ch * 4 + 0x4b9168) + iVar9), lpBuffer, uVar11 >> 1, \n                                           &lpNumberOfBytesRead, 0);\n                        if (iVar8 != 0) {\n                            lpNumberOfBytesRead = lpNumberOfBytesRead * 2;\ncode_r0x00465eb7:\n                            uVar14 = uVar14 + lpNumberOfBytesRead;\n                            iVar8 = *(var_ch * 4 + 0x4b9168);\n                            uVar5 = *(iVar8 + 4 + iVar9);\n                            uVar10 = var_18h;\n                            if (-1 < uVar5) goto code_r0x0046612c;\n                            if (cVar4 == '\\x02') {\n                                if (lpMode == NULL) {\n                                    if ((lpNumberOfBytesRead == 0) || (*var_10h != 10)) {\n                                        uVar5 = uVar5 & 0xfb;\n                                    }\n                                    else {\n                                        uVar5 = uVar5 | 4;\n                                    }\n                                    *(iVar8 + 4 + iVar9) = uVar5;\n                                    lpMode = var_10h + uVar14;\n                                    iVar8 = var_ch;\n                                    piVar12 = var_10h;\n                                    piVar13 = var_10h;\n                                    if (var_10h < lpMode) {\n                                        do {\n                                            iVar6 = *piVar13;\n                                            if (iVar6 == 0x1a) {\n                                                iVar8 = *(iVar8 * 4 + 0x4b9168);\n                                                uVar5 = *(iVar8 + 4 + iVar9);\n                                                if ((uVar5 & 0x40) == 0) {\n                                                    *(iVar8 + 4 + iVar9) = uVar5 | 2;\n                                                }\n                                                else {\n                                                    *piVar12 = *piVar13;\n                                                    piVar12 = piVar12 + 1;\n                                                }\n                                                break;\n                                            }\n                                            if (iVar6 == 0xd) {\n                                                if (piVar13 < lpMode + -1) {\n                                                    if (piVar13[1] != 10) {\n                                                        *piVar12 = 0xd;\n                                                        iVar8 = var_ch;\n                                                        goto code_r0x00466241;\n                                                    }\n                                                    piVar13 = piVar13 + 2;\n                                                    *piVar12 = 10;\ncode_r0x00466323:\n                                                    piVar12 = piVar12 + 1;\n                                                    iVar8 = var_ch;\n                                                }\n                                                else {\n                                                    piVar13 = piVar13 + 1;\n                                                    iVar8 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                                                                      (*(*(iVar8 * 4 + 0x4b9168) + iVar9), &var_8h, 2, \n                                                                       &lpNumberOfBytesRead, 0);\n                                                    if (((iVar8 == 0) &&\n                                                        (iVar8 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar8 != 0))\n                                                       || (lpNumberOfBytesRead == 0)) {\n                                                        *piVar12 = 0xd;\n                                                        piVar12 = piVar12 + 1;\n                                                        iVar8 = var_ch;\n                                                    }\n                                                    else {\n                                                        iVar8 = var_ch;\n                                                        if ((*(*(var_ch * 4 + 0x4b9168) + 4 + iVar9) & 0x48) == 0) {\n                                                            if ((piVar12 == var_10h) && (var_8h == 10)) {\n                                                                *piVar12 = 10;\n                                                                piVar12 = piVar12 + 1;\n                                                            }\n                                                            else {\n                                                                fcn.00462e7e(arg_8h, 0xfffffffe, 0xffffffff, 1);\n                                                                iVar8 = var_ch;\n                                                                if (var_8h != 10) {\n                                                                    *piVar12 = 0xd;\n                                                                    goto code_r0x00466323;\n                                                                }\n                                                            }\n                                                        }\n                                                        else if (var_8h == 10) {\n                                                            *piVar12 = 10;\n                                                            piVar12 = piVar12 + 1;\n                                                        }\n                                                        else {\n                                                            *piVar12 = 0xd;\n                                                            *(*(var_ch * 4 + 0x4b9168) + 5 + iVar9) = var_8h;\n                                                            *(*(var_ch * 4 + 0x4b9168) + 0x25 + iVar9) = var_8h._1_1_;\n                                                            piVar12 = piVar12 + 1;\n                                                            *(*(var_ch * 4 + 0x4b9168) + 0x26 + iVar9) = 10;\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                            else {\n                                                *piVar12 = iVar6;\ncode_r0x00466241:\n                                                piVar12 = piVar12 + 1;\n                                                piVar13 = piVar13 + 1;\n                                            }\n                                        } while (piVar13 < lpMode);\n                                    }\n                                    uVar14 = piVar12 - var_10h;\n                                    uVar10 = var_18h;\n                                }\n                                else {\n                                    piVar12 = var_10h;\n                                    piVar13 = var_10h;\n                                    while (piVar12 < var_10h + uVar14 / 2) {\n                                        iVar6 = *piVar12;\n                                        if (iVar6 == 0x1a) {\n                                            puVar1 = *(var_ch * 4 + 0x4b9168) + 4 + iVar9;\n                                            *puVar1 = *puVar1 | 2;\n                                            break;\n                                        }\n                                        if (iVar6 == 0xd) {\n                                            if (piVar12 < var_10h + uVar14 / 2 + -1) {\n                                                piVar12 = piVar12 + 1;\n                                                iVar6 = 10;\n                                                if (*piVar12 != 10) {\n                                                    iVar6 = 0xd;\n                                                }\n                                                *piVar13 = iVar6;\n                                                piVar13 = piVar13 + 1;\n                                            }\n                                        }\n                                        else {\n                                            *piVar13 = iVar6;\n                                            piVar13 = piVar13 + 1;\n                                            piVar12 = piVar12 + 1;\n                                        }\n                                    }\n                                    uVar14 = piVar13 - var_10h & 0xfffffffe;\n                                }\n                                goto code_r0x0046612c;\n                            }\n                            if ((lpNumberOfBytesRead == 0) || (*var_10h != '\\n')) {\n                                uVar5 = uVar5 & 0xfb;\n                            }\n                            else {\n                                uVar5 = uVar5 | 4;\n                            }\n                            *(iVar8 + 4 + iVar9) = uVar5;\n                            lpBuffer = var_10h + uVar14;\n                            lpMode = var_10h;\n                            iVar8 = var_ch;\n                            piVar12 = var_10h;\n                            piVar13 = var_10h;\n                            if (var_10h < lpBuffer) {\n                                do {\n                                    cVar2 = *piVar13;\n                                    if (cVar2 == '\\x1a') {\n                                        iVar8 = *(iVar8 * 4 + 0x4b9168);\n                                        uVar5 = *(iVar8 + 4 + iVar9);\n                                        if ((uVar5 & 0x40) == 0) {\n                                            *(iVar8 + 4 + iVar9) = uVar5 | 2;\n                                        }\n                                        else {\n                                            *piVar12 = *piVar13;\n                                            piVar12 = piVar12 + 1;\n                                        }\n                                        break;\n                                    }\n                                    if (cVar2 == '\\r') {\n                                        if (piVar13 < lpBuffer + -1) {\n                                            piVar15 = piVar13 + 1;\n                                            if (*piVar15 == '\\n') {\n                                                piVar15 = piVar13 + 1;\n                                                *piVar12 = 10;\ncode_r0x00465fe9:\n                                                piVar12 = piVar12 + 1;\n                                            }\n                                            else {\n                                                *piVar12 = 0xd;\n                                                piVar12 = piVar12 + 1;\n                                            }\n                                        }\n                                        else {\n                                            piVar15 = piVar13 + 1;\n                                            iVar8 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                                                              (*(*(iVar8 * 4 + 0x4b9168) + iVar9), &var_1h, 1, \n                                                               &lpNumberOfBytesRead, 0);\n                                            if (((iVar8 == 0) &&\n                                                (iVar8 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar8 != 0)) ||\n                                               (lpNumberOfBytesRead == 0)) {\n                                                *piVar12 = 0xd;\n                                                piVar12 = piVar12 + 1;\n                                                iVar8 = var_ch;\n                                            }\n                                            else {\n                                                iVar8 = var_ch;\n                                                if ((*(*(var_ch * 4 + 0x4b9168) + 4 + iVar9) & 0x48) == 0) {\n                                                    if ((piVar12 == var_10h) && (var_1h == '\\n')) {\n                                                        *piVar12 = 10;\n                                                        piVar12 = piVar12 + 1;\n                                                    }\n                                                    else {\n                                                        fcn.00462e7e(arg_8h, 0xffffffff, 0xffffffff, 1);\n                                                        iVar8 = var_ch;\n                                                        if (var_1h != '\\n') {\n                                                            *piVar12 = 0xd;\n                                                            goto code_r0x00465fe9;\n                                                        }\n                                                    }\n                                                }\n                                                else if (var_1h == '\\n') {\n                                                    *piVar12 = 10;\n                                                    piVar12 = piVar12 + 1;\n                                                }\n                                                else {\n                                                    *piVar12 = 0xd;\n                                                    piVar12 = piVar12 + 1;\n                                                    *(*(var_ch * 4 + 0x4b9168) + 5 + iVar9) = var_1h;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        *piVar12 = cVar2;\n                                        piVar12 = piVar12 + 1;\n                                        piVar15 = piVar13 + 1;\n                                    }\n                                    piVar13 = piVar15;\n                                } while (piVar15 < lpBuffer);\n                            }\n                            uVar14 = piVar12 - var_10h;\n                            uVar10 = var_18h;\n                            if ((cVar4 != '\\x01') || (uVar14 == 0)) goto code_r0x0046612c;\n                            uVar5 = *(piVar12 + -1);\n                            if (uVar5 < '\\0') {\n                                iVar8 = 1;\n                                cVar4 = *(uVar5 + 0x4b5b00);\n                                piVar12 = piVar12 + -1;\n                                while (((cVar4 == '\\0' && (iVar8 < 5)) && (var_10h <= piVar12))) {\n                                    piVar12 = piVar12 + -1;\n                                    iVar8 = iVar8 + 1;\n                                    cVar4 = *(*piVar12 + 0x4b5b00);\n                                }\n                                if (*(*piVar12 + 0x4b5b00) == 0) {\n                                    puVar7 = fcn.0045c4f2();\n                                    *puVar7 = 0x2a;\n                                    goto code_r0x00465e69;\n                                }\n                                if (*(*piVar12 + 0x4b5b00) + 1 == iVar8) {\n                                    piVar12 = piVar12 + iVar8;\n                                }\n                                else {\n                                    iVar3 = *(var_ch * 4 + 0x4b9168);\n                                    if ((*(iVar3 + 4 + iVar9) & 0x48) == 0) {\n                                        fcn.00462e7e(arg_8h, -iVar8, -iVar8 >> 0x1f, 1);\n                                    }\n                                    else {\n                                        piVar13 = piVar12 + 1;\n                                        *(iVar3 + 5 + iVar9) = *piVar12;\n                                        if (1 < iVar8) {\n                                            *(*(var_ch * 4 + 0x4b9168) + 0x25 + iVar9) = *piVar13;\n                                            piVar13 = piVar12 + 1;\n                                        }\n                                        if (iVar8 == 3) {\n                                            *(*(var_ch * 4 + 0x4b9168) + 0x26 + iVar9) = *piVar13;\n                                            piVar13 = piVar13 + 1;\n                                        }\n                                        piVar12 = piVar13 - iVar8;\n                                    }\n                                }\n                            }\n                            uVar10 = piVar12 - var_10h;\n                            uVar14 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                               (0xfde9, 0, var_10h, uVar10, arg_ch, arg_10h >> 1);\n                            if (uVar14 != 0) {\n                                bVar16 = uVar14 != uVar10;\n                                uVar14 = uVar14 * 2;\n                                *(*(var_ch * 4 + 0x4b9168) + 0x30 + iVar9) = bVar16;\n                                uVar10 = var_18h;\n                                goto code_r0x0046612c;\n                            }\n                        }\n                        iVar8 = (*_sym.imp.KERNEL32.dll_GetLastError)();\ncode_r0x00465e62:\n                        fcn.0045c4d1(iVar8);\n                    }\ncode_r0x00465e69:\n                    uVar10 = 0xffffffff;\ncode_r0x0046612c:\n                    if (var_10h != arg_ch) {\n                        fcn.00455f3f(var_10h);\n                    }\n                    if (uVar10 != 0xfffffffe) {\n                        return uVar10;\n                    }\n                    return uVar14;\n                }\ncode_r0x00465cd0:\n                puVar7 = fcn.0045c4be();\n                *puVar7 = 0;\n            }\n            else {\n                puVar7 = fcn.0045c4be();\n                *puVar7 = 0;\n            }\n            puVar7 = fcn.0045c4f2();\n            *puVar7 = 0x16;\n            goto code_r0x004663ac;\n        }\n    }\n    puVar7 = fcn.0045c4be();\n    *puVar7 = 0;\n    puVar7 = fcn.0045c4f2();\n    *puVar7 = 9;\ncode_r0x004663ac:\n    fcn.0045e4f8();\n    return 0xffffffff;\n}\n",
        "token_count": 4902
    },
    "00468cce": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00468cce(void)\n\n{\n    uint unaff_EBX;\n    uint in_stack_fffffd2c;\n    uint in_stack_fffffd30;\n    uint var_2c8h;\n    \n    fcn.00468800();\n    fcn.00468d53(unaff_EBX, in_stack_fffffd2c, in_stack_fffffd30);\n    return;\n}\n",
        "token_count": 87
    },
    "00468d53": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00468d53(uint arg_8h, uint noname_1, uint arg_10h)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    int32_t unaff_EBP;\n    uint16_t in_FPUStatusWord;\n    float10 in_ST0;\n    uint var_2c8h;\n    uint var_a4h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ah;\n    uint var_86h;\n    uint var_7eh;\n    \n    if (*0x4b8664 != 0) {\n        return;\n    }\n    *(unaff_EBP + -0x2d0) = in_ST0;\n    cVar1 = *(unaff_EBP + -0x90);\n    if (cVar1 != '\\0') {\n        if (cVar1 == -1) {\n            uVar2 = *(unaff_EBP + -0x2ca) & 0x7ff0;\n        }\n        else {\n            if (cVar1 != -2) {\n                if (cVar1 == '\\0') {\n                    return;\n                }\n                *(unaff_EBP + -0x8e) = cVar1;\n                goto code_r0x00468e38;\n            }\n            uVar2 = *(unaff_EBP + -0x2ca) & 0x7ff0;\n            if (uVar2 == 0) {\n                *(unaff_EBP + -0x8e) = 4;\n                in_ST0 = fscale(in_ST0, *0x498678);\n                if (ABS(in_ST0) < *0x498668) {\n                    in_ST0 = in_ST0 * *0x498688;\n                }\n                goto code_r0x00468e38;\n            }\n        }\n        if (uVar2 == 0x7ff0) {\n            *(unaff_EBP + -0x8e) = 3;\n            in_ST0 = fscale(in_ST0, *0x498670);\n            if (*0x498660 < ABS(in_ST0)) {\n                in_ST0 = in_ST0 * *0x498680;\n            }\n            goto code_r0x00468e38;\n        }\n    }\n    if ((*(unaff_EBP + -0xa4) & 0x20) != 0) {\n        return;\n    }\n    if ((in_FPUStatusWord & 0x20) == 0) {\n        return;\n    }\n    *(unaff_EBP + -0x8e) = 8;\ncode_r0x00468e38:\n    *(unaff_EBP + -0x8a) = *(unaff_EBP + -0x94) + 1;\n    if ((*(unaff_EBP + -0x2c8) & 1) == 0) {\n        *(unaff_EBP + -0x86) = *(unaff_EBP + 8);\n        *(unaff_EBP + -0x82) = *(unaff_EBP + 0xc);\n        if (*(*(unaff_EBP + -0x94) + 0xd) != '\\x01') {\n            *(unaff_EBP + -0x7e) = *(unaff_EBP + 0x10);\n            *(unaff_EBP + -0x7a) = *(unaff_EBP + 0x14);\n        }\n    }\n    *(unaff_EBP + -0x76) = in_ST0;\n    fcn.0046f4fb(*(*(unaff_EBP + -0x94) + 0xe), unaff_EBP + -0x8e, unaff_EBP + -0xa4);\n    return;\n}\n",
        "token_count": 825
    },
    "00468f29": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.00468f29(double param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint uVar10;\n    bool bVar11;\n    double dVar12;\n    double dVar13;\n    ulong in_XMM1_Qa;\n    double dVar14;\n    uchar auVar15 [16];\n    uint64_t in_XMM2_Qa;\n    int64_t iVar16;\n    uchar auVar17 [16];\n    int64_t iVar18;\n    uint64_t in_XMM3_Qa;\n    uint64_t uVar19;\n    double dVar20;\n    double dVar21;\n    double dVar22;\n    double dVar23;\n    double dVar24;\n    double dVar25;\n    double dVar26;\n    uchar auStack12 [4];\n    \n    dVar12 = param_1 >> 0x2c;\n    uVar1 = param_1 >> 0x30;\n    uVar3 = (SUB82(dVar12, 0) & 0xff) + 1 & 0x1fe;\n    dVar25 = (*0x49bf20 & param_1 | *0x49bf30) * *(uVar3 * 4 + 0x498690);\n    dVar22 = *(uVar3 * 4 + 0x498690);\n    dVar13 = *(uVar3 * 8 + 0x498aa0);\n    dVar24 = *(uVar3 * 8 + 0x498aa8);\n    uVar7 = 0x7fef - uVar1;\n    uVar3 = SUB84(param_1, 0);\n    uVar9 = param_1 >> 0x20;\n    dVar23 = param_1;\n    if (0x7fffffff < (uVar1 - 0x10 | uVar7)) {\n        auVar17 = CONCAT88(in_XMM2_Qa, CONCAT44(param_3, param_2));\n        uVar8 = param_3 & *0x49bf44;\n        uVar19 = in_XMM3_Qa >> 0x20;\n        if (uVar8 < 0x7ff00000) {\n            if ((param_2 | uVar8) == 0) {\n                uVar10 = 0x1a;\n                _auStack12 = *0x49bf30;\n                if ((uVar3 | uVar9 & 0x7fffffff) != 0) {\n                    uVar10 = 0x1d;\n                    if (((uVar9 & 0x7fffffff) < 0x7ff00001) && (((uVar9 & 0x7fffffff) < 0x7ff00000 || (uVar3 == 0)))) {\n                        return *0x49bf30;\n                    }\n                }\n                goto code_r0x00469730;\n            }\n            if (uVar7 < 0) {\n                auVar17 = auVar17 | CONCAT88(in_XMM3_Qa << 0x34, CONCAT44(*0x49bf44, *0x49bf40) << 0x34);\n                in_XMM3_Qa = 0;\n                auVar15 = pmaxsw(ZEXT1216(CONCAT48((in_XMM1_Qa >> 0x20 & uVar19) >> 0x14, (uVar8 >> 0x14) - 0x3f3)), 0x0\n                                );\n                iVar16 = SUB168(auVar17, 0) << SUB168(auVar15, 0);\n                iVar18 = SUB168(auVar17 >> 0x40, 0) << SUB168(auVar15 >> 0x40, 0);\n                auVar17 = CONCAT412(-(iVar18 >> 0x20 == 0), \n                                    CONCAT48(-(iVar18 == 0), CONCAT44(-(iVar16 >> 0x20 == 0), -(iVar16 == 0))));\n                uVar2 = SUB161(auVar17 >> 7, 0) & 1 | (SUB161(auVar17 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar17 >> 0x17, 0) & 1) << 2 | (SUB161(auVar17 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar17 >> 0x27, 0) & 1) << 4 | (SUB161(auVar17 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar17 >> 0x37, 0) & 1) << 6 | (SUB161(auVar17 >> 0x3f, 0) & 1) << 7;\n                uVar8 = 0x7fef - uVar7 & 0x7fff;\n                uVar19 = SUB168(auVar17 >> 0x40, 0);\n                if (0x7fef < uVar8) {\n                    auVar17 = CONCAT412(0xffffffff, \n                                        CONCAT48(0xffffffff, \n                                                 CONCAT44(-((*0x49bf20 & param_1) >> 0x20 == 0), \n                                                          -((*0x49bf20 & param_1) == 0))));\n                    if ((SUB161(auVar17 >> 7, 0) & 1 | (SUB161(auVar17 >> 0xf, 0) & 1) << 1 |\n                         (SUB161(auVar17 >> 0x17, 0) & 1) << 2 | (SUB161(auVar17 >> 0x1f, 0) & 1) << 3 |\n                         (SUB161(auVar17 >> 0x27, 0) & 1) << 4 | (SUB161(auVar17 >> 0x2f, 0) & 1) << 5 |\n                         (SUB161(auVar17 >> 0x37, 0) & 1) << 6 | (SUB161(auVar17 >> 0x3f, 0) & 1) << 7) == 0xff) {\n                        if ((param_1 & 0x8000000000000000) != 0) {\n                            if ((uVar2 != 0xff) ||\n                               (iVar16 = CONCAT44(param_3, param_2) << ((param_3 & *0x49bf44) >> 0x14) - 0x3f4, \n                               iVar18 = uVar19 << (*0x49bf4c >> 0x14), \n                               auVar17 = CONCAT412(-(iVar18 >> 0x20 == 0), \n                                                   CONCAT48(-(iVar18 == 0), \n                                                            CONCAT44(-(iVar16 >> 0x20 == 0), -(iVar16 == 0)))), \n                               (SUB161(auVar17 >> 7, 0) & 1 | (SUB161(auVar17 >> 0xf, 0) & 1) << 1 |\n                                (SUB161(auVar17 >> 0x17, 0) & 1) << 2 | (SUB161(auVar17 >> 0x1f, 0) & 1) << 3 |\n                                (SUB161(auVar17 >> 0x27, 0) & 1) << 4 | (SUB161(auVar17 >> 0x2f, 0) & 1) << 5 |\n                                (SUB161(auVar17 >> 0x37, 0) & 1) << 6 | (SUB161(auVar17 >> 0x3f, 0) & 1) << 7) == 0xff))\n                            {\n                                if ((param_3 & 0x80000000) != 0) {\n                                    return 0;\n                                }\n                                goto code_r0x004696b7;\n                            }\n                            if ((param_3 & 0x80000000) == 0) {\n                                return *0x49bf98;\n                            }\n                            goto code_r0x00469549;\n                        }\n                        if ((param_3 & 0x80000000) != 0) {\n                            return 0;\n                        }\n                        goto code_r0x004696b7;\n                    }\n                    goto code_r0x0046958f;\n                }\n                if (uVar2 == 0xff) {\n                    in_XMM3_Qa = 0;\n                    iVar16 = CONCAT44(param_3, param_2) << ((param_3 & *0x49bf44) >> 0x14) - 0x3f4;\n                    iVar18 = uVar19 << ((SUB164(auVar15 >> 0x60, 0) & *0x49bf4c) >> 0x14);\n                    auVar17 = CONCAT412(-(iVar18 >> 0x20 == 0), \n                                        CONCAT48(-(iVar18 == 0), \n                                                 CONCAT44(-(iVar16 >> 0x20 == SUB164(ZEXT816(*0x49bfa0) >> 0x20, 0)), \n                                                          -(iVar16 == SUB84(*0x49bfa0, 0)))));\n                    in_XMM2_Qa = SUB168(auVar17 >> 0x40, 0);\n                    uVar7 = (SUB161(auVar17 >> 7, 0) & 1 | (SUB161(auVar17 >> 0xf, 0) & 1) << 1 |\n                             (SUB161(auVar17 >> 0x17, 0) & 1) << 2 | (SUB161(auVar17 >> 0x1f, 0) & 1) << 3 |\n                             (SUB161(auVar17 >> 0x27, 0) & 1) << 4 | (SUB161(auVar17 >> 0x2f, 0) & 1) << 5 |\n                             (SUB161(auVar17 >> 0x37, 0) & 1) << 6 | (SUB161(auVar17 >> 0x3f, 0) & 1) << 7) + 0x3ff01 &\n                            0x40000;\n                    if (0xf < uVar8) {\n                        uVar8 = 0xbfe7f;\n                        in_XMM3_Qa = 0;\n                        goto code_r0x00468fa6;\n                    }\n                    goto code_r0x004693c4;\n                }\n                dVar22 = param_1 >> 0x20;\n                in_XMM2_Qa = uVar19 >> 0x20;\n                uVar8 = uVar3 | uVar9 & 0x7fffffff;\n                uVar7 = 0;\n                dVar23 = dVar12;\n                if (uVar8 != 0) {\n                    uVar10 = 0x1c;\n                    _auStack12 = *0x49bfc0;\n                    goto code_r0x00469730;\n                }\ncode_r0x0046944a:\n                if ((uVar8 & 0x7fffffff) == 0) {\n                    if ((param_3 & 0x80000000) == 0) {\n                        if ((uVar8 & uVar7 << 0xd) == 0) {\n                            return 0;\n                        }\ncode_r0x00469549:\n                        return *0x49bfa0;\n                    }\n                    _auStack12 = (uVar8 & uVar7 << 0xd | 0x7ff00000) << 0x20;\n                    uVar10 = 0x1b;\n                    goto code_r0x00469730;\n                }\n            }\n            else {\n                uVar7 = 0;\ncode_r0x004693c4:\n                auVar17 = pinsrw(ZEXT816(0), 0x43f0, 3);\n                dVar23 = SUB168(auVar17, 0) * param_1;\n                uVar8 = uVar9;\n                dVar25 = *0x49bf20;\n                dVar22 = *0x49bf30;\n                if (uVar3 == 0) goto code_r0x0046944a;\n            }\n            dVar12 = (dVar23 & CONCAT44(*0x49bf44, *0x49bf40)) >> 0x2c;\n            uVar8 = (SUB82(dVar12, 0) & 0xff) + 1 & 0x1fe;\n            dVar25 = (dVar25 & dVar23 | dVar22) * *(uVar8 * 4 + 0x498690);\n            dVar22 = *(uVar8 * 4 + 0x498690);\n            dVar13 = *(uVar8 * 8 + 0x498aa0);\n            dVar24 = *(uVar8 * 8 + 0x498aa8);\n            uVar8 = 0x43e7f;\n            goto code_r0x00468fa6;\n        }\n        uVar7 = uVar9;\n        if ((0x7fefffff < (uVar9 & 0x7fffffff)) && ((0x7ff00000 < (uVar9 & 0x7fffffff) || (uVar3 != 0)))) {\ncode_r0x0046958f:\n            _auStack12 = param_1 + param_1;\n            uVar10 = 0x3ee;\n            goto code_r0x00469730;\n        }\n        goto code_r0x00469645;\n    }\n    uVar7 = 0;\n    uVar8 = 0x3fe7f;\ncode_r0x00468fa6:\n    uVar4 = (dVar25 >> 0x26 & 0xff) + 1 & 0x1fe;\n    dVar25 = dVar25 * *(uVar4 * 4 + 0x4992b0);\n    dVar20 = dVar23 & *0x49bf20 | *0x49bf30;\n    dVar14 = *0x49bf78 & dVar20;\n    dVar20 = dVar20 - dVar14;\n    uVar5 = (dVar25 >> 0x1f & 0x1ff) + 1 & 0x3fe;\n    dVar21 = dVar22 * *(uVar4 * 4 + 0x4992b0) * *(uVar5 * 4 + 0x499ed0);\n    dVar25 = dVar25 * *(uVar5 * 4 + 0x499ed0);\n    dVar23 = dVar13 + *(uVar4 * 8 + 0x4996c0) + (dVar12 - uVar8 >> 8) + *(uVar5 * 8 + 0x49a6e0);\n    dVar12 = dVar24 + *(uVar4 * 8 + 0x4996c8) + *(uVar5 * 8 + 0x49a6e8);\n    dVar13 = *0x49bf78 & dVar21;\n    dVar21 = dVar21 - dVar13;\n    dVar26 = *0x49bf80 + dVar25;\n    dVar24 = dVar23 + dVar26;\n    dVar22 = CONCAT44(param_3, param_2);\n    uVar2 = param_3 >> 0x10;\n    dVar23 = dVar23 - dVar24;\n    uVar4 = dVar24 >> 0x30;\n    dVar13 = (((dVar25 - dVar13 * dVar14) - dVar14 * dVar21) - dVar13 * dVar20) - dVar20 * dVar21;\n    dVar14 = dVar26 - dVar13;\n    dVar25 = dVar24 - dVar13;\n    uVar8 = uVar2 & 0x7ff0;\n    if (0x7fef < uVar8) {\n        _auStack12 = CONCAT44(param_3, param_2);\n        auVar17 = CONCAT88(in_XMM2_Qa, _auStack12);\n        in_XMM3_Qa = in_XMM3_Qa >> 0x1f & in_XMM2_Qa;\n        auVar15 = CONCAT412(-(in_XMM3_Qa >> 0x20 == 0), \n                            CONCAT48(-(in_XMM3_Qa == 0), \n                                     CONCAT44(-((*0x49bf20 & _auStack12) >> 0x20 == 0), -((*0x49bf20 & _auStack12) == 0)\n                                             )));\n        if ((SUB161(auVar15 >> 7, 0) & 1 | (SUB161(auVar15 >> 0xf, 0) & 1) << 1 | (SUB161(auVar15 >> 0x17, 0) & 1) << 2\n             | (SUB161(auVar15 >> 0x1f, 0) & 1) << 3 | (SUB161(auVar15 >> 0x27, 0) & 1) << 4 |\n             (SUB161(auVar15 >> 0x2f, 0) & 1) << 5 | (SUB161(auVar15 >> 0x37, 0) & 1) << 6 |\n            (SUB161(auVar15 >> 0x3f, 0) & 1) << 7) == 0xff) {\n            bVar11 = uVar3 == 0;\n            uVar3 = uVar4;\n            if (bVar11) {\n                if (uVar9 != 0x3ff00000) {\n                    uVar3 = uVar9;\n                    if (uVar9 == 0xbff00000) {\n                        return 1;\n                    }\n                    goto code_r0x00469645;\n                }\n            }\n            else {\ncode_r0x00469645:\n                _auStack12 = SUB168(auVar17, 0);\n                uVar19 = in_XMM3_Qa & SUB168(auVar17 >> 0x40, 0);\n                auVar15 = CONCAT412(-(uVar19 >> 0x20 == 0), \n                                    CONCAT48(-(uVar19 == 0), \n                                             CONCAT44(-((*0x49bf20 & _auStack12) >> 0x20 == 0), \n                                                      -((*0x49bf20 & _auStack12) == 0))));\n                if ((SUB161(auVar15 >> 7, 0) & 1 | (SUB161(auVar15 >> 0xf, 0) & 1) << 1 |\n                     (SUB161(auVar15 >> 0x17, 0) & 1) << 2 | (SUB161(auVar15 >> 0x1f, 0) & 1) << 3 |\n                     (SUB161(auVar15 >> 0x27, 0) & 1) << 4 | (SUB161(auVar15 >> 0x2f, 0) & 1) << 5 |\n                     (SUB161(auVar15 >> 0x37, 0) & 1) << 6 | (SUB161(auVar15 >> 0x3f, 0) & 1) << 7) != 0xff)\n                goto code_r0x004696be;\n                if ((uVar3 | uVar7 ^ 0xbff00000) != 0) {\n                    if ((auVar17 & 0x8000000000000000) == 0x0) {\n                        if ((uVar1 & 0x7ff0) < 0x3ff0) {\n                            return 0;\n                        }\n                    }\n                    else if (0x3fef < (uVar1 & 0x7ff0)) {\n                        return 0;\n                    }\ncode_r0x004696b7:\n                    return *0x49bf90;\n                }\n            }\n            uVar10 = 0x1c;\n            _auStack12 = *0x498690;\n        }\n        else {\ncode_r0x004696be:\n            _auStack12 = _auStack12 + _auStack12;\n            uVar10 = 0x3ee;\n        }\n        goto code_r0x00469730;\n    }\n    iVar6 = (uVar8 - 0x3ff0) + (uVar4 & 0x7ff0);\n    if ((0x40a0U - iVar6 | iVar6 - 0x3c70U) < 0x80000000) {\ncode_r0x004690f8:\n        dVar20 = *0x49bf78 & dVar22;\n        dVar21 = *0x49bf78 & dVar25;\n        dVar13 = (dVar23 + dVar26) - (dVar13 - (dVar24 - dVar25));\n        auVar17 = pinsrw(ZEXT816(0), 0x4060, 3);\n        dVar24 = dVar20 * dVar21 * SUB168(auVar17, 0);\n        uVar3 = ROUND(dVar24);\n        dVar22 = dVar20 * (dVar25 - dVar21) + dVar21 * (dVar22 - dVar20) + (dVar25 - dVar21) * (dVar22 - dVar20);\n        if (0 < (0x1ff7f - uVar3 | uVar3 + 0x1e1ff)) {\n            iVar6 = (uVar3 & 0x7f) * 0x10;\n            auVar17 = pinsrw(ZEXT816(0), 0x3f80, 3);\n            uVar3 = ((uVar7 + uVar3 & 0xffffff80) + 0x1ff80 << 0x2d) >> 0x20;\n            dVar25 = *(\"\\aAiFC.\u05bf\" + iVar6 + 8) * (uVar3 << 0x20);\n            dVar22 = (dVar24 - ((dVar24 + *0x49bf10) - *0x49bf10)) * SUB168(auVar17, 0) +\n                     dVar22 + ((*0x49b6f0 * dVar14 + *0x49b700 * dVar14 * dVar14) * dVar14 * dVar14 +\n                               *0x49b6f8 * dVar14 + str._aAiFC.._0_8_ * dVar14 * dVar14 + dVar12 + dVar13) *\n                              CONCAT44(param_3, param_2);\n            return dVar22 * dVar22 * dVar25 * (*0x49bf60 + *0x49bf50 * dVar22) * dVar22 * dVar22 +\n                   *(iVar6 + 0x49b718) * SUB128((ZEXT412(uVar3) << 0x40) >> 0x20, 0) +\n                   (*0x49bf68 + *0x49bf58 * dVar22) * dVar22 * dVar22 * dVar25 + *0x49bf70 * dVar22 * dVar25 + dVar25;\n        }\n        if (uVar3 < 1) {\n            if (uVar3 < -0x3fdff) {\ncode_r0x00469989:\n                uVar10 = 0x19;\n                _auStack12 = *0x49bfb8 * *0x49bfb8 | uVar7 << 0x2d;\n                goto code_r0x00469730;\n            }\n            uVar7 = uVar7 + 0x80;\n            uVar9 = (uVar3 & 0xffffff80) + 0x3fe80;\n            uVar10 = 0;\n        }\n        else {\n            if (0x3ffff < uVar3) goto code_r0x004699ac;\n            uVar7 = uVar7 + 0x3ff00;\n            uVar9 = uVar3 - 0x80 & 0xffffff80;\n            uVar10 = 0x3ff0;\n        }\n        iVar6 = (uVar3 & 0x7f) * 0x10;\n        uVar3 = (-(uVar9 - 0x1ff80) >> 7) + 2;\n        auVar17 = pinsrw(ZEXT816(0), 0x3f80, 3);\n        uVar8 = (uVar9 << 0x2d) >> 0x20;\n        dVar25 = *(\"\\aAiFC.\u05bf\" + iVar6 + 8) * (uVar8 << 0x20);\n        dVar22 = (dVar24 - ((dVar24 + *0x49bf10) - *0x49bf10)) * SUB168(auVar17, 0) +\n                 dVar22 + ((*0x49b6f0 * dVar14 + *0x49b700 * dVar14 * dVar14) * dVar14 * dVar14 +\n                           *0x49b6f8 * dVar14 + str._aAiFC.._0_8_ * dVar14 * dVar14 + dVar12 + dVar13) *\n                          CONCAT44(param_3, param_2);\n        _auStack12 = uVar7 << 0x2d;\n        uVar19 = uVar3 + (uVar3 & 0x20);\n        dVar13 = -1 << uVar19 & dVar25;\n        dVar22 = dVar22 * dVar22 * dVar25 * (*0x49bf60 + *0x49bf50 * dVar22) * dVar22 * dVar22 +\n                 *(iVar6 + 0x49b718) * SUB128((ZEXT412(uVar8) << 0x40) >> 0x20, 0) +\n                 (*0x49bf68 + *0x49bf58 * dVar22) * dVar22 * dVar22 * dVar25 + *0x49bf70 * dVar22 * dVar25;\n        dVar24 = dVar13 + dVar22 & -1 << uVar19;\n        auVar17 = pinsrw(ZEXT816(0), uVar10, 3);\n        dVar22 = dVar22 + (dVar13 - dVar24) + (dVar25 - dVar13);\n        if (uVar9 - 0x1ff80 < 1) {\n            _auStack12 = dVar22 * _auStack12 + dVar24 * _auStack12;\n            _auStack12 = _auStack12 + SUB168(auVar17, 0) * _auStack12;\n            uVar10 = 0x18;\n            if (((_auStack12 >> 0x30 & 0x7ff0) != 0x7ff0) && (uVar10 = 0x19,  (_auStack12 & 0x7ff0000000000000) != 0)) {\n                return _auStack12;\n            }\n        }\n        else {\n            _auStack12 = (dVar22 + dVar24) * _auStack12;\n            _auStack12 = _auStack12 + SUB168(auVar17, 0) * _auStack12;\n            uVar10 = 0x18;\n            if (((_auStack12 >> 0x30 & 0x7ff0) != 0x7ff0) && (uVar10 = 0x19,  (_auStack12 & 0x7ff0000000000000) != 0)) {\n                return _auStack12;\n            }\n        }\n    }\n    else {\n        dVar24 = dVar22 * dVar25;\n        uVar3 = dVar24 >> 0x30 & 0x7ff0;\n        uVar9 = uVar3 - 0x3c70;\n        if ((0x40a0 - uVar3 | uVar9) < 0x80000000) goto code_r0x004690f8;\n        if (0x7fffffff < uVar9) {\n            return (uVar7 | 0x1ff80) << 0x2d;\n        }\n        if (((uVar2 ^ (uVar1 & 0x7ff0) + 0xc010) & 0x8000) != 0) goto code_r0x00469989;\ncode_r0x004699ac:\n        uVar10 = 0x18;\n        if (uVar7 == 0) {\n            _auStack12 = *0x49bfb0 * *0x49bfb0;\n        }\n        else {\n            _auStack12 = *0x49bfa8 * *0x49bfb0;\n        }\n    }\ncode_r0x00469730:\n    fcn.00467fbc(&param_1, &param_2, auStack12, uVar10);\n    return _auStack12;\n}\n",
        "token_count": 6587
    },
    "0046b7ea": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046b7ea(uint arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    int16_t iVar1;\n    \n    if (((*(arg_ch + 0xc) & 0x40) == 0) || (*(arg_ch + 8) != 0)) {\n        iVar1 = fcn.00456fbc(arg_8h, arg_ch);\n        if (iVar1 == -1) {\n            *arg_10h = -1;\n            return;\n        }\n    }\n    *arg_10h = *arg_10h + 1;\n    return;\n}\n",
        "token_count": 142
    },
    "0046e4d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046e4d0(uint32_t Locale, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t lpLCData;\n    \n    iVar1 = fcn.00460e79();\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)(Locale & 0x3ff | 0x400, 0x20000001, &lpLCData, 2);\n    if (iVar2 == 0) {\ncode_r0x0046e504:\n        uVar3 = 0;\n    }\n    else {\n        if ((Locale != lpLCData) && (arg_ch != 0)) {\n            iVar2 = fcn.0046e0de(*(iVar1 + 0x9c));\n            iVar1 = fcn.00453054(*(iVar1 + 0x9c));\n            if (iVar2 == iVar1) goto code_r0x0046e504;\n        }\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 241
    },
    "0046ebc5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.0046ebc5(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0045e910(0x4ac828, 0x14);\n    *(unaff_EBP + -0x1c) = 0;\n    puVar1 = *(unaff_EBP + 0x18);\n    if (((puVar1 == NULL) || (*puVar1 = 0xffffffff,  *(unaff_EBP + 8) == 0)) ||\n       ((*(unaff_EBP + 0x1c) != 0 && ((*(unaff_EBP + 0x14) & 0xfffffe7f) != 0)))) {\n        puVar1 = fcn.0045c4f2();\n        *puVar1 = 0x16;\n        fcn.0045e4f8();\n    }\n    else {\n        *(unaff_EBP + -4) = 0;\n        iVar2 = fcn.0046ec8c(unaff_EBP + -0x1c, puVar1, *(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), \n                             *(unaff_EBP + 0x14), *(unaff_EBP + 0x1c));\n        *(unaff_EBP + -0x20) = iVar2;\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.0046ec60();\n        if (iVar2 != 0) {\n            *puVar1 = 0xffffffff;\n        }\n    }\n    fcn.0045e955();\n    return;\n}\n",
        "token_count": 486
    },
    "0046ec60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046ec60(void)\n\n{\n    uint8_t *puVar1;\n    int32_t unaff_EBP;\n    uint32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        if (unaff_EDI != 0) {\n            puVar1 = *((*unaff_ESI >> 5) * 4 + 0x4b9168) + 4 + (*unaff_ESI & 0x1f) * 0x40;\n            *puVar1 = *puVar1 & 0xfe;\n        }\n        fcn.0046eb5e(*unaff_ESI);\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "0046f1e7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0046f1e7(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint unaff_EBX;\n    uint var_28h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b4f00 ^ &stack0xfffffffc;\n    fcn.0045582e(arg_10h);\n    var_14h = fcn.0047166a(&var_10h, &var_18h, arg_ch, 0, 0, 0, 0, &var_28h);\n    fcn.00470b8a(&var_10h, arg_8h);\n    if (var_1ch != '\\0') {\n        *(var_20h + 0x70) = *(var_20h + 0x70) & 0xfffffffd;\n    }\n    fcn.004529f8(unaff_EBX);\n    return;\n}\n",
        "token_count": 262
    },
    "0046f273": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0046f273(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint unaff_EBX;\n    uint var_28h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b4f00 ^ &stack0xfffffffc;\n    fcn.0045582e(arg_10h);\n    var_14h = fcn.0047166a(&var_10h, &var_18h, arg_ch, 0, 0, 0, 0, &var_28h);\n    fcn.004710fa(&var_10h, arg_8h);\n    if (var_1ch != '\\0') {\n        *(var_20h + 0x70) = *(var_20h + 0x70) & 0xfffffffd;\n    }\n    fcn.004529f8(unaff_EBX);\n    return;\n}\n",
        "token_count": 258
    },
    "00470059": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00470059(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0045e910(0x4ac848, 0x14);\n    *(unaff_EBP + -0x1c) = 0;\n    puVar1 = *(unaff_EBP + 0x18);\n    if (((puVar1 == NULL) || (*puVar1 = 0xffffffff,  *(unaff_EBP + 8) == 0)) ||\n       ((*(unaff_EBP + 0x1c) != 0 && ((*(unaff_EBP + 0x14) & 0xfffffe7f) != 0)))) {\n        puVar1 = fcn.0045c4f2();\n        *puVar1 = 0x16;\n        fcn.0045e4f8();\n    }\n    else {\n        *(unaff_EBP + -4) = 0;\n        iVar2 = fcn.00470120(unaff_EBP + -0x1c, puVar1, *(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), \n                             *(unaff_EBP + 0x14));\n        *(unaff_EBP + -0x20) = iVar2;\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.004700f4();\n        if (iVar2 != 0) {\n            *puVar1 = 0xffffffff;\n        }\n    }\n    fcn.0045e955();\n    return;\n}\n",
        "token_count": 470
    },
    "004700f4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004700f4(void)\n\n{\n    uint8_t *puVar1;\n    int32_t unaff_EBP;\n    uint32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        if (unaff_EDI != 0) {\n            puVar1 = *((*unaff_ESI >> 5) * 4 + 0x4b9168) + 4 + (*unaff_ESI & 0x1f) * 0x40;\n            *puVar1 = *puVar1 & 0xfe;\n        }\n        fcn.0046eb5e(*unaff_ESI);\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "00470b8a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_44h\n\nvoid __cdecl fcn.00470b8a(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint8_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uint *puVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t uStack24;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b4f00 ^ &stack0xfffffffc;\n    uVar1 = arg_8h[5];\n    uVar16 = *(arg_8h + 3);\n    var_10h = uVar16;\n    uVar17 = *(arg_8h + 1);\n    var_ch = uVar17;\n    uVar10 = uVar1 & 0x7fff;\n    iVar11 = uVar10 - 0x3fff;\n    uVar5 = *arg_8h << 0x10;\n    iVar14 = 0;\n    var_8h = uVar5;\n    uVar2 = str.5_v_[1];\n    if (iVar11 == -0x3fff) {\n        iVar15 = 0;\n        iVar11 = 0;\n        do {\n            if ((&var_10h)[iVar11] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                goto code_r0x00470bff;\n            }\n            iVar11 = iVar11 + 1;\n        } while (iVar11 < 3);\n    }\n    else {\n        iVar6 = str.5_v_[0] + L'\\xffffffff';\n        iVar15 = (str.5_v_[0] >> 0x1f & 0x1fU) + str.5_v_[0] >> 5;\n        bVar4 = false;\n        uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n        if (((&var_10h)[iVar15] & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar7 = (&var_10h)[iVar15] & ~(-1 << (uVar8 & 0x1f));\n            iVar12 = iVar15;\n            while (uVar7 == 0) {\n                iVar12 = iVar12 + 1;\n                if (2 < iVar12) goto code_r0x00470cff;\n                uVar7 = (&var_10h)[iVar12];\n            }\n            iVar12 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n            uVar7 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n            bVar4 = false;\n            uVar9 = uVar7 + (&var_10h)[iVar12];\n            bVar3 = false;\n            if ((uVar9 < (&var_10h)[iVar12]) || (uVar9 < uVar7)) {\n                bVar3 = true;\n                bVar4 = true;\n            }\n            iVar12 = iVar12 + -1;\n            (&var_ch)[iVar12] = uVar9;\n            while ((-1 < iVar12 && (bVar3))) {\n                bVar3 = false;\n                uVar7 = (&var_10h)[iVar12] + 1;\n                bVar4 = false;\n                if ((uVar7 < (&var_10h)[iVar12]) || (uVar7 == 0)) {\n                    bVar3 = true;\n                    bVar4 = true;\n                }\n                iVar12 = iVar12 + -1;\n                (&var_ch)[iVar12] = uVar7;\n            }\n        }\ncode_r0x00470cff:\n        (&var_10h)[iVar15] = (&var_10h)[iVar15] & -1 << (uVar8 & 0x1f);\n        iVar15 = iVar15 + 1;\n        if (iVar15 < 3) {\n            puVar13 = &var_10h + iVar15;\n            for (iVar12 = 3 - iVar15; iVar12 != 0; iVar12 = iVar12 + -1) {\n                *puVar13 = 0;\n                puVar13 = puVar13 + 1;\n            }\n        }\n        iVar15 = iVar11;\n        if (bVar4) {\n            iVar15 = uVar10 - 0x3ffe;\n        }\n        uStack24 = uVar5;\n        if (iVar15 < *0x4b5d98 - str.5_v_[0]) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x4b5d98 < iVar15) {\n                if (iVar15 < *0x4b5d94) {\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar15 = str.5_v_[3] + iVar15;\n                    iVar11 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar2 & 0x1f;\n                    var_20h = 0;\n                    iVar14 = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14];\n                        iVar14 = iVar14 + 1;\n                        (&uStack24)[iVar14] = uVar16 >> uVar8 | var_20h;\n                        var_20h = (uVar16 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar11 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar2 & 0x1f;\n                    var_20h = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14];\n                        (&var_10h)[iVar14] = uVar16 >> uVar8 | var_20h;\n                        iVar14 = iVar14 + 1;\n                        var_20h = (uVar16 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar15 = str.5_v_[3] + *0x4b5d94;\n                }\n                goto code_r0x004710b0;\n            }\n            iVar11 = *0x4b5d98 - iVar11;\n            var_10h = uVar16;\n            iVar15 = iVar11 + (iVar11 >> 0x1f & 0x1fU) >> 5;\n            var_ch = uVar17;\n            var_8h = uVar5;\n            uVar8 = iVar11 & 0x1f;\n            var_20h = 0;\n            do {\n                uVar16 = (&var_10h)[iVar14];\n                iVar14 = iVar14 + 1;\n                (&uStack24)[iVar14] = uVar16 >> uVar8 | var_20h;\n                var_20h = (uVar16 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n            } while (iVar14 < 3);\n            puVar13 = &var_8h + -iVar15;\n            iVar11 = 2;\n            do {\n                if (iVar11 < iVar15) {\n                    (&var_10h)[iVar11] = 0;\n                }\n                else {\n                    (&var_10h)[iVar11] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar11 = iVar11 + -1;\n            } while (-1 < iVar11);\n            iVar11 = (str.5_v_[0] >> 0x1f & 0x1fU) + str.5_v_[0] >> 5;\n            uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n            if (((&var_10h)[iVar11] & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar16 = (&var_10h)[iVar11] & ~(-1 << (uVar8 & 0x1f));\n                iVar14 = iVar11;\n                while (uVar16 == 0) {\n                    iVar14 = iVar14 + 1;\n                    if (2 < iVar14) goto code_r0x00470eba;\n                    uVar16 = (&var_10h)[iVar14];\n                }\n                iVar14 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n                uVar16 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n                bVar4 = false;\n                uVar17 = uVar16 + (&var_10h)[iVar14];\n                if ((uVar17 < (&var_10h)[iVar14]) || (uVar17 < uVar16)) {\n                    bVar4 = true;\n                }\n                iVar14 = iVar14 + -1;\n                (&var_ch)[iVar14] = uVar17;\n                while ((-1 < iVar14 && (bVar4))) {\n                    bVar4 = false;\n                    uVar16 = (&var_10h)[iVar14] + 1;\n                    if ((uVar16 < (&var_10h)[iVar14]) || (uVar16 == 0)) {\n                        bVar4 = true;\n                    }\n                    iVar14 = iVar14 + -1;\n                    (&var_ch)[iVar14] = uVar16;\n                }\n            }\ncode_r0x00470eba:\n            (&var_10h)[iVar11] = (&var_10h)[iVar11] & -1 << (uVar8 & 0x1f);\n            iVar11 = iVar11 + 1;\n            if (iVar11 < 3) {\n                puVar13 = &var_10h + iVar11;\n                for (iVar14 = 3 - iVar11; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar13 = 0;\n                    puVar13 = puVar13 + 1;\n                }\n            }\n            iVar14 = str.5_v_[1] + L'\\x01';\n            iVar11 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar14 & 0x1f;\n            var_20h = 0;\n            var_34h = 0;\n            do {\n                uVar16 = (&var_10h)[var_34h];\n                (&var_10h)[var_34h] = uVar16 >> uVar8 | var_20h;\n                var_20h = (uVar16 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_34h = var_34h + 1;\n            } while (var_34h < 3);\n            puVar13 = &var_8h + -iVar11;\n            iVar14 = 2;\n            do {\n                if (iVar14 < iVar11) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\ncode_r0x00470bff:\n        iVar15 = 0;\n    }\ncode_r0x004710b0:\n    uVar16 = iVar15 << (0x1f - uVar2 & 0x1f) | -((uVar1 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = uVar16;\n        *arg_ch = var_ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = uVar16;\n    }\n    fcn.004529f8(uVar1 & 0x8000);\n    return;\n}\n",
        "token_count": 3233
    },
    "004710fa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_44h\n\nvoid __cdecl fcn.004710fa(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint8_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uint *puVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t uStack24;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b4f00 ^ &stack0xfffffffc;\n    uVar1 = arg_8h[5];\n    uVar16 = *(arg_8h + 3);\n    var_10h = uVar16;\n    uVar17 = *(arg_8h + 1);\n    var_ch = uVar17;\n    uVar10 = uVar1 & 0x7fff;\n    iVar11 = uVar10 - 0x3fff;\n    uVar5 = *arg_8h << 0x10;\n    iVar14 = 0;\n    var_8h = uVar5;\n    uVar2 = *0x4b5db8;\n    if (iVar11 == -0x3fff) {\n        iVar15 = 0;\n        iVar11 = 0;\n        do {\n            if ((&var_10h)[iVar11] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                goto code_r0x0047116f;\n            }\n            iVar11 = iVar11 + 1;\n        } while (iVar11 < 3);\n    }\n    else {\n        iVar6 = *0x4b5db4 + -1;\n        iVar15 = (*0x4b5db4 >> 0x1f & 0x1fU) + *0x4b5db4 >> 5;\n        bVar4 = false;\n        uVar8 = 0x1f - (*0x4b5db4 & 0x1f);\n        if (((&var_10h)[iVar15] & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar7 = (&var_10h)[iVar15] & ~(-1 << (uVar8 & 0x1f));\n            iVar12 = iVar15;\n            while (uVar7 == 0) {\n                iVar12 = iVar12 + 1;\n                if (2 < iVar12) goto code_r0x0047126f;\n                uVar7 = (&var_10h)[iVar12];\n            }\n            iVar12 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n            uVar7 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n            bVar4 = false;\n            uVar9 = uVar7 + (&var_10h)[iVar12];\n            bVar3 = false;\n            if ((uVar9 < (&var_10h)[iVar12]) || (uVar9 < uVar7)) {\n                bVar3 = true;\n                bVar4 = true;\n            }\n            iVar12 = iVar12 + -1;\n            (&var_ch)[iVar12] = uVar9;\n            while ((-1 < iVar12 && (bVar3))) {\n                bVar3 = false;\n                uVar7 = (&var_10h)[iVar12] + 1;\n                bVar4 = false;\n                if ((uVar7 < (&var_10h)[iVar12]) || (uVar7 == 0)) {\n                    bVar3 = true;\n                    bVar4 = true;\n                }\n                iVar12 = iVar12 + -1;\n                (&var_ch)[iVar12] = uVar7;\n            }\n        }\ncode_r0x0047126f:\n        (&var_10h)[iVar15] = (&var_10h)[iVar15] & -1 << (uVar8 & 0x1f);\n        iVar15 = iVar15 + 1;\n        if (iVar15 < 3) {\n            puVar13 = &var_10h + iVar15;\n            for (iVar12 = 3 - iVar15; iVar12 != 0; iVar12 = iVar12 + -1) {\n                *puVar13 = 0;\n                puVar13 = puVar13 + 1;\n            }\n        }\n        iVar15 = iVar11;\n        if (bVar4) {\n            iVar15 = uVar10 - 0x3ffe;\n        }\n        uStack24 = uVar5;\n        if (iVar15 < *0x4b5db0 - *0x4b5db4) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x4b5db0 < iVar15) {\n                if (iVar15 < *0x4b5dac) {\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar15 = *0x4b5dc0 + iVar15;\n                    iVar11 = *0x4b5db8 + (*0x4b5db8 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar2 & 0x1f;\n                    var_20h = 0;\n                    iVar14 = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14];\n                        iVar14 = iVar14 + 1;\n                        (&uStack24)[iVar14] = uVar16 >> uVar8 | var_20h;\n                        var_20h = (uVar16 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar11 = *0x4b5db8 + (*0x4b5db8 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar2 & 0x1f;\n                    var_20h = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14];\n                        (&var_10h)[iVar14] = uVar16 >> uVar8 | var_20h;\n                        iVar14 = iVar14 + 1;\n                        var_20h = (uVar16 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar15 = *0x4b5dc0 + *0x4b5dac;\n                }\n                goto code_r0x00471620;\n            }\n            iVar11 = *0x4b5db0 - iVar11;\n            var_10h = uVar16;\n            iVar15 = iVar11 + (iVar11 >> 0x1f & 0x1fU) >> 5;\n            var_ch = uVar17;\n            var_8h = uVar5;\n            uVar8 = iVar11 & 0x1f;\n            var_20h = 0;\n            do {\n                uVar16 = (&var_10h)[iVar14];\n                iVar14 = iVar14 + 1;\n                (&uStack24)[iVar14] = uVar16 >> uVar8 | var_20h;\n                var_20h = (uVar16 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n            } while (iVar14 < 3);\n            puVar13 = &var_8h + -iVar15;\n            iVar11 = 2;\n            do {\n                if (iVar11 < iVar15) {\n                    (&var_10h)[iVar11] = 0;\n                }\n                else {\n                    (&var_10h)[iVar11] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar11 = iVar11 + -1;\n            } while (-1 < iVar11);\n            iVar11 = (*0x4b5db4 >> 0x1f & 0x1fU) + *0x4b5db4 >> 5;\n            uVar8 = 0x1f - (*0x4b5db4 & 0x1f);\n            if (((&var_10h)[iVar11] & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar16 = (&var_10h)[iVar11] & ~(-1 << (uVar8 & 0x1f));\n                iVar14 = iVar11;\n                while (uVar16 == 0) {\n                    iVar14 = iVar14 + 1;\n                    if (2 < iVar14) goto code_r0x0047142a;\n                    uVar16 = (&var_10h)[iVar14];\n                }\n                iVar14 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n                uVar16 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n                bVar4 = false;\n                uVar17 = uVar16 + (&var_10h)[iVar14];\n                if ((uVar17 < (&var_10h)[iVar14]) || (uVar17 < uVar16)) {\n                    bVar4 = true;\n                }\n                iVar14 = iVar14 + -1;\n                (&var_ch)[iVar14] = uVar17;\n                while ((-1 < iVar14 && (bVar4))) {\n                    bVar4 = false;\n                    uVar16 = (&var_10h)[iVar14] + 1;\n                    if ((uVar16 < (&var_10h)[iVar14]) || (uVar16 == 0)) {\n                        bVar4 = true;\n                    }\n                    iVar14 = iVar14 + -1;\n                    (&var_ch)[iVar14] = uVar16;\n                }\n            }\ncode_r0x0047142a:\n            (&var_10h)[iVar11] = (&var_10h)[iVar11] & -1 << (uVar8 & 0x1f);\n            iVar11 = iVar11 + 1;\n            if (iVar11 < 3) {\n                puVar13 = &var_10h + iVar11;\n                for (iVar14 = 3 - iVar11; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar13 = 0;\n                    puVar13 = puVar13 + 1;\n                }\n            }\n            iVar14 = *0x4b5db8 + 1;\n            iVar11 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar14 & 0x1f;\n            var_20h = 0;\n            var_34h = 0;\n            do {\n                uVar16 = (&var_10h)[var_34h];\n                (&var_10h)[var_34h] = uVar16 >> uVar8 | var_20h;\n                var_20h = (uVar16 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_34h = var_34h + 1;\n            } while (var_34h < 3);\n            puVar13 = &var_8h + -iVar11;\n            iVar14 = 2;\n            do {\n                if (iVar14 < iVar11) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\ncode_r0x0047116f:\n        iVar15 = 0;\n    }\ncode_r0x00471620:\n    uVar16 = iVar15 << (0x1f - uVar2 & 0x1f) | -((uVar1 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (*0x4b5dbc == 0x40) {\n        arg_ch[1] = uVar16;\n        *arg_ch = var_ch;\n    }\n    else if (*0x4b5dbc == 0x20) {\n        *arg_ch = uVar16;\n    }\n    fcn.004529f8(uVar1 & 0x8000);\n    return;\n}\n",
        "token_count": 3243
    },
    "00472fd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00472fd0(int32_t param_1, char param_2)\n\n{\n    if (*(param_1 + 0x1e0) == 2) {\n        *(param_1 + 0x11c) = 0x24;\n        return 0;\n    }\n    if (*(param_1 + 0x1e0) == 3) {\n        if (param_2 != '\\0') {\n            *(param_1 + 0x11c) = 0x21;\n            return 0;\n        }\n    }\n    else if (param_2 != '\\0') {\n        if (*(param_1 + 0x1e8) != '\\0') {\n            *(param_1 + 0x11c) = 0x25;\n            return 0;\n        }\n        *(param_1 + 0x1e0) = 3;\n        return 1;\n    }\n    *(param_1 + 0x1e0) = 2;\n    return 1;\n}\n",
        "token_count": 226
    },
    "00473100": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00473100(int32_t param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = fcn.00476cf0(param_1, 1, *(param_1 + 0x90), param_2, param_3, param_4, \n                         in_EAX & 0xffffff00 | *(param_1 + 0x1e4) == '\\0');\n    if ((iVar2 == 0) && (cVar1 = fcn.00473060(param_1),  cVar1 == '\\0')) {\n        return 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 169
    },
    "00473150": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar __cdecl\nfcn.00473150(int32_t noname_0, int16_t **arg_ch, int32_t noname_2, int16_t *noname_3, uint *noname_4, uint noname_5, \n            uint noname_6, uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, \n            uint noname_19, uint noname_20, uint noname_21, uint noname_22, uint arg_64h, uint noname_24, uint noname_25\n            , uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint noname_30, uint noname_31, \n            uint noname_32, uint noname_33, uint noname_34, uint noname_35, uint noname_36, uint noname_37, \n            uint noname_38, uint noname_39, uint noname_40, uint noname_41, uint noname_42, uint noname_43, \n            uint noname_44, uint noname_45, uint noname_46, uint noname_47, uint noname_48, uint noname_49, \n            uint noname_50, uint noname_51, uint noname_52, uint noname_53, uint noname_54, uint noname_55, \n            uint noname_56, uint noname_57, uint noname_58, uint noname_59, uint noname_60, uint noname_61, \n            uint noname_62, uint noname_63, uint noname_64, uint noname_65, uint noname_66, uint noname_67, \n            uint noname_68, uint noname_69, uint noname_70, uint noname_71, uint noname_72, uint noname_73, \n            uint noname_74, uint noname_75, uint noname_76, uint noname_77, uint noname_78, uint noname_79, \n            uint noname_80, uint noname_81, uint noname_82, uint noname_83, uint noname_84, uint noname_85, \n            uint noname_86, uint arg_164h, uint noname_88, uint noname_89, uint noname_90, uint noname_91, uint arg_178h\n            , uint noname_93, uint noname_94, uint noname_95, uint noname_96, uint noname_97, uint noname_98, \n            uint noname_99, uint noname_100, uint noname_101, uint noname_102, uint noname_103, uint noname_104, \n            uint noname_105, uint noname_106, uint noname_107, uint noname_108, uint noname_109, uint noname_110, \n            uint noname_111, uint noname_112, uint noname_113, uint noname_114, uint noname_115, uint arg_1d8h)\n\n{\n    int16_t *piVar1;\n    bool bVar2;\n    bool bVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    bool bVar6;\n    int16_t iVar7;\n    int32_t iVar8;\n    uint var_4h;\n    \n    iVar7 = *noname_3;\n    bVar6 = true;\n    bVar3 = false;\n    if (iVar7 == 0) {\n        if (*arg_ch != NULL) {\n            return '\\x1c';\n        }\n    }\n    else {\n        piVar1 = *arg_ch;\n        if ((((piVar1 != NULL) && (*piVar1 == 0x78)) && (piVar1[1] == 0x6d)) && (piVar1[2] == 0x6c)) {\n            if (((piVar1[3] == 0x6e) && (piVar1[4] == 0x73)) && (piVar1[5] == 0)) {\n                return '\\'';\n            }\n            if (piVar1[3] == 0) {\n                bVar3 = true;\n            }\n        }\n    }\n    bVar2 = true;\n    iVar8 = 0;\n    if (iVar7 == 0) {\ncode_r0x00473231:\n        bVar6 = false;\n    }\n    else {\n        iVar4 = 0;\n        do {\n            if ((bVar6) && ((0x24 < iVar8 || (iVar7 != *(L\"http://www.w3.org/XML/1998/namespace\" + iVar4))))) {\n                bVar6 = false;\n            }\n            if (((!bVar3) && (bVar2)) && ((0x1d < iVar8 || (iVar7 != *(L\"http://www.w3.org/2000/xmlns/\" + iVar4))))) {\n                bVar2 = false;\n            }\n            iVar8 = iVar8 + 1;\n            iVar4 = iVar8 * 2;\n            iVar7 = noname_3[iVar8];\n        } while (iVar7 != 0);\n        if ((!bVar6) || (iVar8 != 0x24)) goto code_r0x00473231;\n        bVar6 = true;\n    }\n    if ((bVar2) && (iVar8 == 0x1d)) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if (bVar3 != bVar6) {\n        return (bVar3 == false) * '\\x02' + '&';\n    }\n    if (bVar2) {\n        return '(';\n    }\n    if (*(noname_0 + 0x1d8) != 0) {\n        iVar8 = iVar8 + 1;\n    }\n    puVar5 = *(noname_0 + 0x178);\n    if (puVar5 == NULL) {\n        puVar5 = (**(noname_0 + 0xc))(0x1c);\n        if (puVar5 != NULL) {\n            iVar4 = (**(noname_0 + 0xc))((iVar8 + 0x18) * 2);\n            puVar5[4] = iVar4;\n            if (iVar4 != 0) {\n                puVar5[6] = iVar8 + 0x18;\n                goto code_r0x004732ee;\n            }\n            (**(noname_0 + 0x14))(puVar5);\n        }\n        return '\\x01';\n    }\n    if (puVar5[6] < iVar8) {\n        iVar4 = (**(noname_0 + 0x10))(puVar5[4], (iVar8 + 0x18) * 2);\n        if (iVar4 == 0) {\n            return '\\x01';\n        }\n        puVar5[4] = iVar4;\n        puVar5[6] = iVar8 + 0x18;\n    }\n    *(noname_0 + 0x178) = puVar5[1];\ncode_r0x004732ee:\n    puVar5[5] = iVar8;\n    fcn.00452a10(puVar5[4], noname_3, iVar8 * 2);\n    if (*(noname_0 + 0x1d8) != 0) {\n        *(iVar8 * 2 + -2 + puVar5[4]) = *(noname_0 + 0x1d8);\n    }\n    *puVar5 = arg_ch;\n    puVar5[3] = noname_2;\n    puVar5[2] = arg_ch[1];\n    if ((*noname_3 == 0) && (arg_ch == *(noname_0 + 0x164) + 0x98)) {\n        arg_ch[1] = NULL;\n    }\n    else {\n        arg_ch[1] = puVar5;\n    }\n    puVar5[1] = *noname_4;\n    *noname_4 = puVar5;\n    if ((noname_2 != 0) && (*(noname_0 + 100) != NULL)) {\n        (**(noname_0 + 100))(*(noname_0 + 4), *arg_ch, -(arg_ch[1] != NULL) & noname_3);\n    }\n    return '\\0';\n}\n",
        "token_count": 1937
    },
    "00473390": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00473390(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t unaff_ESI;\n    uint *puVar4;\n    uint auStack1048 [256];\n    uint uStack24;\n    uint uStack20;\n    code *pcStack16;\n    \n    pcVar3 = *(unaff_ESI + 0x7c);\n    if (pcVar3 != NULL) {\n        puVar4 = auStack1048;\n        for (iVar2 = 0x100; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = 0xffffffff;\n            puVar4 = puVar4 + 1;\n        }\n        uStack20 = 0;\n        uStack24 = 0;\n        pcStack16 = NULL;\n        iVar2 = (*pcVar3)(*(unaff_ESI + 0xf8), arg_8h, auStack1048);\n        if (iVar2 != 0) {\n            uVar1 = fcn.00483780();\n            iVar2 = (**(unaff_ESI + 0xc))(uVar1);\n            *(unaff_ESI + 0xf0) = iVar2;\n            if (iVar2 == 0) {\n                if (pcStack16 != NULL) {\n                    (*pcStack16)(uStack24);\n                }\n                return 1;\n            }\n            pcVar3 = 0x4841c0;\n            if (*(unaff_ESI + 0xec) == '\\0') {\n                pcVar3 = fcn.004839b0;\n            }\n            iVar2 = (*pcVar3)(iVar2, auStack1048, uStack20, uStack24);\n            if (iVar2 != 0) {\n                *(unaff_ESI + 0x90) = iVar2;\n                *(unaff_ESI + 0xf4) = uStack24;\n                *(unaff_ESI + 0xfc) = pcStack16;\n                return 0;\n            }\n        }\n        if (pcStack16 != NULL) {\n            (*pcStack16)(uStack24);\n        }\n    }\n    return 0x12;\n}\n",
        "token_count": 489
    },
    "004734b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.004734b0(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint arg_20h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t unaff_ESI;\n    uint var_4h;\n    int32_t var_8h;\n    uint var_ch;\n    int32_t iStack8;\n    int32_t iStack4;\n    \n    puVar4 = *(unaff_ESI + 0x130);\n    if (puVar4 == NULL) {\n        puVar4 = (**(unaff_ESI + 0xc))(0x18);\n        if (puVar4 == NULL) {\n            return 1;\n        }\n    }\n    else {\n        *(unaff_ESI + 0x130) = puVar4[2];\n    }\n    *(var_8h + 0xc) = 0;\n    *(var_8h + 0x20) = 1;\n    puVar4[2] = *(unaff_ESI + 300);\n    *(unaff_ESI + 300) = puVar4;\n    puVar4[3] = var_8h;\n    uVar1 = *(unaff_ESI + 0x138);\n    *(puVar4 + 5) = noname_1;\n    puVar4[4] = uVar1;\n    *puVar4 = 0;\n    puVar4[1] = 0;\n    iVar2 = *(var_8h + 4);\n    iStack4 = iVar2 + *(var_8h + 8) * 2;\n    if (*(var_8h + 0x21) == '\\0') {\n        iVar3 = fcn.00476cf0();\n    }\n    else {\n        (***(unaff_ESI + 0xe4))(*(unaff_ESI + 0xe4), iVar2, iStack4, &iStack8);\n        iVar3 = fcn.00477910();\n    }\n    if (iVar3 == 0) {\n        if ((iStack4 != iStack8) && (*(unaff_ESI + 0x1e0) == 3)) {\n            *(var_8h + 0xc) = iStack8 - iVar2;\n            *(unaff_ESI + 0x118) = 0x4791d0;\n            return 0;\n        }\n        *(var_8h + 0x20) = 0;\n        *(unaff_ESI + 300) = puVar4[2];\n        puVar4[2] = *(unaff_ESI + 0x130);\n        *(unaff_ESI + 0x130) = puVar4;\n    }\n    return iVar3;\n}\n",
        "token_count": 640
    },
    "004735e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004735e0(void)\n\n{\n    int16_t *in_EAX;\n    int16_t iVar1;\n    int16_t *piVar2;\n    \n    iVar1 = *in_EAX;\n    if (iVar1 != 0) {\n        while (piVar2 = in_EAX,  iVar1 != 0xd) {\n            iVar1 = in_EAX[1];\n            in_EAX = in_EAX + 1;\n            if (iVar1 == 0) {\n                return;\n            }\n        }\n        do {\n            if (*in_EAX == 0xd) {\n                *piVar2 = 10;\n                in_EAX = in_EAX + 1;\n                if (*in_EAX == 10) goto code_r0x00473622;\n            }\n            else {\n                *piVar2 = *in_EAX;\ncode_r0x00473622:\n                in_EAX = in_EAX + 1;\n            }\n            piVar2 = piVar2 + 1;\n        } while (*in_EAX != 0);\n        *piVar2 = 0;\n    }\n    return;\n}\n",
        "token_count": 247
    },
    "00473640": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00473640(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t in_EAX;\n    int32_t unaff_EBX;\n    uint32_t *puVar2;\n    int32_t unaff_ESI;\n    uint32_t *puStack8;\n    \n    if ((*(unaff_EBX + 0x49) != '\\0') && ((param_1 & 1) == 0)) {\n        (**(unaff_ESI + 0x50))(*(unaff_ESI + 4), param_1, in_EAX - param_1 >> 1);\n        return;\n    }\n    if (unaff_EBX == *(unaff_ESI + 0x90)) {\n        puStack8 = unaff_ESI + 0x124;\n        puVar2 = unaff_ESI + 0x120;\n    }\n    else {\n        puVar2 = *(unaff_ESI + 300);\n        puStack8 = puVar2 + 1;\n    }\n    do {\n        iVar1 = *(unaff_ESI + 0x2c);\n        (**(unaff_EBX + 0x40))();\n        *puStack8 = param_1;\n        (**(unaff_ESI + 0x50))(*(unaff_ESI + 4), *(unaff_ESI + 0x2c), iVar1 - *(unaff_ESI + 0x2c) >> 1);\n        *puVar2 = param_1;\n    } while (param_1 != in_EAX);\n    return;\n}\n",
        "token_count": 347
    },
    "004736f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004736f0(uint param_1, char param_2, int32_t param_3, char param_4, int32_t param_5)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    \n    if ((param_5 != 0) || (param_2 != '\\0')) {\n        iVar1 = 0;\n        if (0 < *(unaff_ESI + 0xc)) {\n            piVar3 = *(unaff_ESI + 0x14);\n            do {\n                if (param_3 == *piVar3) {\n                    return 1;\n                }\n                iVar1 = iVar1 + 1;\n                piVar3 = piVar3 + 3;\n            } while (iVar1 < *(unaff_ESI + 0xc));\n        }\n        if (((param_2 != '\\0') && (*(unaff_ESI + 8) == 0)) && (*(param_3 + 9) == '\\0')) {\n            *(unaff_ESI + 8) = param_3;\n        }\n    }\n    iVar1 = *(unaff_ESI + 0x10);\n    if (*(unaff_ESI + 0xc) == iVar1) {\n        if (iVar1 == 0) {\n            *(unaff_ESI + 0x10) = 8;\n            iVar1 = (**(unaff_EBX + 0xc))(0x60);\n            *(unaff_ESI + 0x14) = iVar1;\n            if (iVar1 != 0) goto code_r0x00473784;\n        }\n        else {\n            iVar2 = (**(unaff_EBX + 0x10))(*(unaff_ESI + 0x14), iVar1 * 0x18);\n            if (iVar2 != 0) {\n                *(unaff_ESI + 0x10) = iVar1 * 2;\n                *(unaff_ESI + 0x14) = iVar2;\n                goto code_r0x00473784;\n            }\n        }\n        return 0;\n    }\ncode_r0x00473784:\n    piVar3 = *(unaff_ESI + 0x14) + *(unaff_ESI + 0xc) * 0xc;\n    piVar3[2] = param_5;\n    *piVar3 = param_3;\n    *(piVar3 + 1) = param_4;\n    if (param_4 == '\\0') {\n        *(param_3 + 8) = 1;\n    }\n    *(unaff_ESI + 0xc) = *(unaff_ESI + 0xc) + 1;\n    return 1;\n}\n",
        "token_count": 614
    },
    "004737c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004737c0(void)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int16_t *piVar3;\n    int16_t *unaff_EDI;\n    \n    piVar2 = unaff_EDI;\n    piVar3 = unaff_EDI;\n    if (*unaff_EDI != 0) {\n        do {\n            iVar1 = *piVar3;\n            if (((iVar1 == 10) || (iVar1 == 0xd)) || (iVar1 == 0x20)) {\n                if ((piVar2 != unaff_EDI) && (piVar2[-1] != 0x20)) {\n                    *piVar2 = 0x20;\n                    goto code_r0x004737fa;\n                }\n            }\n            else {\n                *piVar2 = iVar1;\ncode_r0x004737fa:\n                piVar2 = piVar2 + 1;\n            }\n            piVar3 = piVar3 + 1;\n        } while (*piVar3 != 0);\n        if ((piVar2 != unaff_EDI) && (piVar2[-1] == 0x20)) {\n            piVar2[-1] = 0;\n            return;\n        }\n    }\n    *piVar2 = 0;\n    return;\n}\n",
        "token_count": 288
    },
    "00473880": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00473880(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    uint8_t uVar10;\n    uint8_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t *unaff_EDI;\n    uint32_t uStack20;\n    \n    iVar3 = unaff_EDI[2];\n    if (iVar3 == 0) {\n        if (param_2 == 0) {\n            return 0;\n        }\n        *(unaff_EDI + 1) = 6;\n        unaff_EDI[2] = 0x40;\n        iVar3 = (**unaff_EDI[4])(0x100);\n        *unaff_EDI = iVar3;\n        if (iVar3 == 0) {\n            unaff_EDI[2] = 0;\n            return 0;\n        }\n        fcn.00453710(iVar3, 0, 0x100);\n        uVar4 = fcn.00473850();\n        uVar4 = uVar4 & unaff_EDI[2] - 1U;\n    }\n    else {\n        uVar5 = fcn.00473850();\n        uVar12 = iVar3 - 1;\n        uVar4 = uVar12 & uVar5;\n        iVar3 = *unaff_EDI;\n        uVar11 = 0;\n        iVar13 = *(iVar3 + uVar4 * 4);\n        while (iVar13 != 0) {\n            cVar2 = fcn.00473820();\n            if (cVar2 != '\\0') {\n                return *(iVar3 + uVar4 * 4);\n            }\n            if (uVar11 == 0) {\n                uVar11 = (~uVar12 & uVar5) >> (*(unaff_EDI + 1) - 1U & 0x1f) & uVar12 >> 2 | 1;\n            }\n            uVar6 = uVar11;\n            if (uVar4 < uVar6) {\n                iVar13 = unaff_EDI[2] - uVar6;\n            }\n            else {\n                iVar13 = -uVar6;\n            }\n            uVar4 = uVar4 + iVar13;\n            iVar13 = *(*unaff_EDI + uVar4 * 4);\n        }\n        if (param_2 == 0) {\n            return 0;\n        }\n        uVar11 = *(unaff_EDI + 1);\n        if (unaff_EDI[3] >> (uVar11 - 1 & 0x1f) != 0) {\n            iVar13 = 1 << (uVar11 + 1 & 0x1f);\n            uVar12 = iVar13 - 1;\n            iVar3 = (**unaff_EDI[4])(iVar13 * 4);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            fcn.00453710(iVar3, 0, iVar13 * 4);\n            uStack20 = 0;\n            if (unaff_EDI[2] != 0) {\n                do {\n                    if (*(*unaff_EDI + uStack20 * 4) != 0) {\n                        uVar8 = *(*unaff_EDI + uStack20 * 4);\n                        uVar6 = fcn.00473850();\n                        uVar4 = uVar6 & uVar12;\n                        uVar10 = 0;\n                        iVar7 = *(iVar3 + uVar4 * 4);\n                        while (iVar7 != 0) {\n                            if (uVar10 == 0) {\n                                uVar10 = (~uVar12 & uVar6) >> (uVar11 & 0x1f) & uVar12 >> 2 | 1;\n                            }\n                            uVar9 = uVar10;\n                            if (uVar4 < uVar9) {\n                                iVar7 = iVar13 - uVar9;\n                            }\n                            else {\n                                iVar7 = -uVar9;\n                            }\n                            uVar4 = uVar4 + iVar7;\n                            iVar7 = *(iVar3 + uVar4 * 4);\n                        }\n                        *(iVar3 + uVar4 * 4) = uVar8;\n                    }\n                    uStack20 = uStack20 + 1;\n                } while (uStack20 < unaff_EDI[2]);\n            }\n            (**(unaff_EDI[4] + 8))(*unaff_EDI);\n            unaff_EDI[2] = iVar13;\n            *(unaff_EDI + 1) = uVar11 + 1;\n            uVar4 = uVar12 & uVar5;\n            *unaff_EDI = iVar3;\n            uVar10 = 0;\n            iVar3 = *(iVar3 + uVar4 * 4);\n            while (iVar3 != 0) {\n                if (uVar10 == 0) {\n                    uVar10 = (~uVar12 & uVar5) >> (uVar11 & 0x1f) & uVar12 >> 2 | 1;\n                }\n                uVar6 = uVar10;\n                if (uVar4 < uVar6) {\n                    iVar3 = iVar13 - uVar6;\n                }\n                else {\n                    iVar3 = -uVar6;\n                }\n                uVar4 = uVar4 + iVar3;\n                iVar3 = *(*unaff_EDI + uVar4 * 4);\n            }\n        }\n    }\n    uVar8 = (**unaff_EDI[4])(param_2);\n    *(*unaff_EDI + uVar4 * 4) = uVar8;\n    piVar1 = *unaff_EDI + uVar4 * 4;\n    if (*piVar1 == 0) {\n        return 0;\n    }\n    fcn.00453710(*piVar1, 0, param_2);\n    **(*unaff_EDI + uVar4 * 4) = param_1;\n    unaff_EDI[3] = unaff_EDI[3] + 1;\n    return *(*unaff_EDI + uVar4 * 4);\n}\n",
        "token_count": 1410
    },
    "00473be0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00473be0(uint *param_1)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    \n    puVar1 = *param_1;\n    if (param_1[1] == 0) {\n        param_1[1] = puVar1;\n    }\n    else {\n        while (puVar1 != NULL) {\n            puVar2 = *puVar1;\n            *puVar1 = param_1[1];\n            param_1[1] = puVar1;\n            puVar1 = puVar2;\n        }\n    }\n    *param_1 = 0;\n    param_1[4] = 0;\n    param_1[3] = 0;\n    param_1[2] = 0;\n    return;\n}\n",
        "token_count": 177
    },
    "00474070": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00474070(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 1;\n    if (*(param_1 + 0x1e0) == 2) {\n        *(param_1 + 0x11c) = 0x24;\n        return 0;\n    }\n    if (*(param_1 + 0x1e0) != 3) {\n        *(param_1 + 0x1c) = *(param_1 + 0x1c) + param_2;\n        *(param_1 + 0x24) = *(param_1 + 0x24) + param_2;\n        puVar1 = param_1 + 0x18;\n        *(param_1 + 0x128) = *(param_1 + 0x18);\n        *(param_1 + 0x1e0) = 1;\n        *(param_1 + 0x28) = *(param_1 + 0x1c);\n        *(param_1 + 0x1e4) = param_3;\n        iVar2 = (**(param_1 + 0x118))(param_1, *(param_1 + 0x18), *(param_1 + 0x1c), puVar1);\n        *(param_1 + 0x11c) = iVar2;\n        if (iVar2 != 0) {\n            *(param_1 + 0x124) = *(param_1 + 0x120);\n            *(param_1 + 0x118) = fcn.00473050;\n            return 0;\n        }\n        iVar2 = *(param_1 + 0x1e0);\n        if (-1 < iVar2) {\n            if (iVar2 < 2) {\n                if (param_3 != 0) {\n                    *(param_1 + 0x1e0) = 2;\n                    return 1;\n                }\n            }\n            else if (iVar2 == 3) {\n                uVar3 = 2;\n            }\n        }\n        (**(*(param_1 + 0x90) + 0x34))(*(param_1 + 0x90), *(param_1 + 0x128), *puVar1, param_1 + 0x198);\n        *(param_1 + 0x128) = *puVar1;\n        return uVar3;\n    }\n    *(param_1 + 0x11c) = 0x21;\n    return 0;\n}\n",
        "token_count": 586
    },
    "00474480": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint8_t __cdecl\nfcn.00474480(int32_t noname_0, int32_t *noname_1, uint noname_2, int32_t *noname_3, uint noname_4, uint noname_5, \n            uint noname_6, uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint arg_50h, uint noname_19\n            , uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint noname_30, uint noname_31, \n            uint noname_32, uint noname_33, uint arg_90h, uint noname_35, uint noname_36, uint noname_37, uint noname_38\n            , uint noname_39, uint noname_40, uint noname_41, uint noname_42, uint noname_43, uint noname_44, \n            uint noname_45, uint noname_46, uint noname_47, uint noname_48, uint noname_49, uint noname_50, \n            uint noname_51, uint noname_52, uint noname_53, uint noname_54, uint noname_55, uint noname_56, \n            uint noname_57, uint noname_58, uint noname_59, uint noname_60, uint noname_61, uint noname_62, \n            uint noname_63, uint noname_64, uint noname_65, uint noname_66, uint noname_67, uint noname_68, \n            uint noname_69, uint arg_120h, uint arg_124h, uint noname_72, uint arg_12ch, uint noname_74, uint noname_75\n            , uint noname_76, uint noname_77, uint noname_78, uint noname_79, uint noname_80, uint noname_81, \n            uint noname_82, uint noname_83, uint noname_84, uint noname_85, uint noname_86, uint noname_87, \n            uint noname_88, uint noname_89, uint noname_90, uint noname_91, uint noname_92, uint noname_93, \n            uint noname_94, uint noname_95, uint noname_96, uint noname_97, uint noname_98, uint noname_99, \n            uint noname_100, uint noname_101, uint noname_102, uint noname_103, uint noname_104, uint noname_105, \n            uint noname_106, uint noname_107, uint noname_108, uint noname_109, uint noname_110, uint noname_111, \n            uint noname_112, uint noname_113, uint noname_114, uint noname_115, uint noname_116, uint noname_117, \n            uint arg_1e0h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t *piStack4;\n    \n    iVar1 = *noname_1;\n    if (in_EAX == *(noname_0 + 0x90)) {\n        piVar3 = noname_0 + 0x120;\n        piStack4 = noname_0 + 0x124;\n        *piVar3 = iVar1;\n    }\n    else {\n        piVar3 = *(noname_0 + 300);\n        piStack4 = piVar3 + 1;\n    }\n    *piVar3 = iVar1;\n    *noname_1 = 0;\n    uVar2 = (**(in_EAX + 0xc))();\n    *piStack4 = noname_0;\n    // switch table (47 cases) at 0x47459c\n    switch(uVar2) {\n    case 0:\n        *piVar3 = noname_0;\n        return 4;\n    case 0x2a:\n        if (*(noname_0 + 0x50) != 0) {\n            fcn.00473640(iVar1);\n        }\n        *noname_1 = noname_0;\n        *noname_3 = noname_0;\n        return (*(noname_0 + 0x1e0) != 2) - 1U & 0x23;\n    case 0xfffffffc:\n    case 0xffffffff:\n        break;\n    default:\n        *piVar3 = noname_0;\n        return 0x17;\n    case 0xfffffffe:\n        if (noname_4 != '\\0') {\n            *noname_3 = iVar1;\n            return 0;\n        }\n        return 6;\n    }\n    if (noname_4 != '\\0') {\n        *noname_3 = iVar1;\n        return 0;\n    }\n    return 2;\n}\n",
        "token_count": 1213
    },
    "00474780": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00474780(void)\n\n{\n    int16_t iVar1;\n    bool bVar2;\n    char cVar3;\n    int16_t **ppiVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int16_t *piVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t unaff_EDI;\n    \n    iVar5 = *(unaff_EDI + 0x164);\n    bVar2 = false;\n    if (*(iVar5 + 0x9c) != 0) {\n        if ((*(unaff_EDI + 0x1ac) == *(unaff_EDI + 0x1a8)) && (cVar3 = fcn.00473c60(),  cVar3 == '\\0')) {\n            return 0;\n        }\n        **(unaff_EDI + 0x1ac) = 0x3d;\n        *(unaff_EDI + 0x1ac) = *(unaff_EDI + 0x1ac) + 2;\n        iVar9 = *(unaff_EDI + 0x1ac);\n        iVar8 = *(*(iVar5 + 0x9c) + 0x14);\n        if (*(unaff_EDI + 0x1d8) != 0) {\n            iVar8 = iVar8 + -1;\n        }\n        iVar6 = 0;\n        if (0 < iVar8) {\n            do {\n                if ((iVar9 == *(unaff_EDI + 0x1a8)) && (cVar3 = fcn.00473c60(),  cVar3 == '\\0')) {\n                    return 0;\n                }\n                **(unaff_EDI + 0x1ac) = *(*(*(iVar5 + 0x9c) + 0x10) + iVar6 * 2);\n                *(unaff_EDI + 0x1ac) = *(unaff_EDI + 0x1ac) + 2;\n                iVar9 = *(unaff_EDI + 0x1ac);\n                iVar6 = iVar6 + 1;\n            } while (iVar6 < iVar8);\n        }\n        bVar2 = true;\n    }\n    fcn.00473b90();\n    ppiVar4 = fcn.00473ba0();\n    while (ppiVar4 != NULL) {\n        if (ppiVar4[1] != NULL) {\n            if (bVar2) {\n                if ((*(unaff_EDI + 0x1ac) == *(unaff_EDI + 0x1a8)) && (cVar3 = fcn.00473c60(),  cVar3 == '\\0')) {\n                    return 0;\n                }\n                **(unaff_EDI + 0x1ac) = 0xc;\n                *(unaff_EDI + 0x1ac) = *(unaff_EDI + 0x1ac) + 2;\n            }\n            piVar7 = *ppiVar4;\n            iVar1 = *piVar7;\n            while (iVar1 != 0) {\n                if ((*(unaff_EDI + 0x1ac) == *(unaff_EDI + 0x1a8)) && (cVar3 = fcn.00473c60(),  cVar3 == '\\0')) {\n                    return 0;\n                }\n                **(unaff_EDI + 0x1ac) = *piVar7;\n                *(unaff_EDI + 0x1ac) = *(unaff_EDI + 0x1ac) + 2;\n                piVar7 = piVar7 + 1;\n                iVar1 = *piVar7;\n            }\n            if ((*(unaff_EDI + 0x1ac) == *(unaff_EDI + 0x1a8)) && (cVar3 = fcn.00473c60(),  cVar3 == '\\0')) {\n                return 0;\n            }\n            **(unaff_EDI + 0x1ac) = 0x3d;\n            *(unaff_EDI + 0x1ac) = *(unaff_EDI + 0x1ac) + 2;\n            iVar5 = *(unaff_EDI + 0x1ac);\n            iVar9 = *(ppiVar4[1] + 10);\n            if (*(unaff_EDI + 0x1d8) != 0) {\n                iVar9 = iVar9 + -1;\n            }\n            iVar8 = 0;\n            if (0 < iVar9) {\n                do {\n                    if ((iVar5 == *(unaff_EDI + 0x1a8)) && (cVar3 = fcn.00473c60(),  cVar3 == '\\0')) {\n                        return 0;\n                    }\n                    **(unaff_EDI + 0x1ac) = *(*(ppiVar4[1] + 8) + iVar8 * 2);\n                    *(unaff_EDI + 0x1ac) = *(unaff_EDI + 0x1ac) + 2;\n                    iVar5 = *(unaff_EDI + 0x1ac);\n                    iVar8 = iVar8 + 1;\n                } while (iVar8 < iVar9);\n            }\n            bVar2 = true;\n        }\n        ppiVar4 = fcn.00473ba0();\n    }\n    fcn.00473b90();\n    ppiVar4 = fcn.00473ba0();\n    while (ppiVar4 != NULL) {\n        if (*(ppiVar4 + 8) != '\\0') {\n            if (bVar2) {\n                if ((*(unaff_EDI + 0x1ac) == *(unaff_EDI + 0x1a8)) && (cVar3 = fcn.00473c60(),  cVar3 == '\\0')) {\n                    return 0;\n                }\n                **(unaff_EDI + 0x1ac) = 0xc;\n                *(unaff_EDI + 0x1ac) = *(unaff_EDI + 0x1ac) + 2;\n            }\n            piVar7 = *ppiVar4;\n            iVar1 = *piVar7;\n            while (iVar1 != 0) {\n                if ((*(unaff_EDI + 0x1ac) == *(unaff_EDI + 0x1a8)) && (cVar3 = fcn.00473c60(),  cVar3 == '\\0')) {\n                    return 0;\n                }\n                **(unaff_EDI + 0x1ac) = *piVar7;\n                *(unaff_EDI + 0x1ac) = *(unaff_EDI + 0x1ac) + 2;\n                piVar7 = piVar7 + 1;\n                iVar1 = *piVar7;\n            }\n            bVar2 = true;\n        }\n        ppiVar4 = fcn.00473ba0();\n    }\n    if ((*(unaff_EDI + 0x1ac) == *(unaff_EDI + 0x1a8)) && (cVar3 = fcn.00473c60(),  cVar3 == '\\0')) {\n        return 0;\n    }\n    **(unaff_EDI + 0x1ac) = 0;\n    *(unaff_EDI + 0x1ac) = *(unaff_EDI + 0x1ac) + 2;\n    return *(unaff_EDI + 0x1b0);\n}\n",
        "token_count": 1656
    },
    "00474b70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00474b70(char param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    uint var_bp_8h;\n    \n    fcn.00473b90();\n    iVar1 = fcn.00473ba0();\n    while (iVar1 != 0) {\n        if (*(iVar1 + 0x10) != 0) {\n            (**(param_2 + 8))(*(iVar1 + 0x14));\n        }\n        iVar1 = fcn.00473ba0();\n    }\n    fcn.00473b30();\n    fcn.00473b30();\n    fcn.00473b30();\n    fcn.00473b30();\n    fcn.00473b30();\n    fcn.00473c20();\n    fcn.00473c20();\n    if (var_bp_8h != '\\0') {\n        (**(param_2 + 8))(*(unaff_EBX + 0xb8));\n        (**(param_2 + 8))(*(unaff_EBX + 0xa4));\n    }\n    (**(param_2 + 8))();\n    return;\n}\n",
        "token_count": 264
    },
    "00474c20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00474c20(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t unaff_EBX;\n    int32_t unaff_EDI;\n    \n    if ((*(in_EAX + 0xc) != 0) || (cVar1 = fcn.00473c60(),  cVar1 != '\\0')) {\n        (**(unaff_EBX + 0x40))();\n        while( true ) {\n            if (param_1 == unaff_EDI) {\n                return *(in_EAX + 0x10);\n            }\n            cVar1 = fcn.00473c60();\n            if (cVar1 == '\\0') break;\n            (**(unaff_EBX + 0x40))();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 185
    },
    "00474cc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00474cc0(int32_t param_1)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    int16_t *in_EAX;\n    \n    iVar1 = *in_EAX;\n    while( true ) {\n        if (iVar1 == 0) {\n            return *(param_1 + 0x10);\n        }\n        if ((*(param_1 + 0xc) == *(param_1 + 8)) && (cVar2 = fcn.00473c60(),  cVar2 == '\\0')) break;\n        **(param_1 + 0xc) = *in_EAX;\n        *(param_1 + 0xc) = *(param_1 + 0xc) + 2;\n        in_EAX = in_EAX + 1;\n        iVar1 = *in_EAX;\n    }\n    return 0;\n}\n",
        "token_count": 196
    },
    "00474dc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00474dc0(int32_t param_1)\n\n{\n    uint32_t extraout_EDX;\n    uint *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    if (param_1 == 0) {\n        return;\n    }\n    puVar1 = *(param_1 + 0x16c);\n    do {\n        puVar2 = puVar1;\n        if (puVar1 == NULL) {\n            puVar2 = *(param_1 + 0x170);\n            if (puVar2 == NULL) {\n                iVar3 = *(param_1 + 300);\n                do {\n                    iVar4 = iVar3;\n                    if (iVar3 == 0) {\n                        iVar4 = *(param_1 + 0x130);\n                        if (iVar4 == 0) {\n                            fcn.00472e00();\n                            fcn.00472e00();\n                            fcn.00473c20();\n                            fcn.00473c20();\n                            if ((*(param_1 + 0x1e8) == '\\0') && (*(param_1 + 0x164) != 0)) {\n                                fcn.00474b70(extraout_EDX & 0xffffff00 | *(param_1 + 0x1dc) == 0, param_1 + 0xc);\n                            }\n                            (**(param_1 + 0x14))(*(param_1 + 0x188));\n                            (**(param_1 + 0x14))(*(param_1 + 0x1d0));\n                            (**(param_1 + 0x14))(*(param_1 + 8));\n                            (**(param_1 + 0x14))(*(param_1 + 0x2c));\n                            (**(param_1 + 0x14))(*(param_1 + 0x18c));\n                            (**(param_1 + 0x14))(*(param_1 + 0xf0));\n                            if (*(param_1 + 0xfc) != NULL) {\n                                (**(param_1 + 0xfc))(*(param_1 + 0xf4));\n                            }\n                            (**(param_1 + 0x14))(param_1);\n                            return;\n                        }\n                        *(param_1 + 0x130) = 0;\n                    }\n                    iVar3 = *(iVar4 + 8);\n                    (**(param_1 + 0x14))(iVar4);\n                } while( true );\n            }\n            *(param_1 + 0x170) = 0;\n        }\n        puVar1 = *puVar2;\n        (**(param_1 + 0x14))(puVar2[9]);\n        fcn.00472e00();\n        (**(param_1 + 0x14))(puVar2);\n    } while( true );\n}\n",
        "token_count": 625
    },
    "00474f00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00474f00(int32_t param_1, uint param_2, int32_t param_3, int32_t param_4)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if (*(param_1 + 0x1e0) == 2) {\n        *(param_1 + 0x11c) = 0x24;\n        return 0;\n    }\n    if (*(param_1 + 0x1e0) == 3) {\n        *(param_1 + 0x11c) = 0x21;\n        return 0;\n    }\n    *(param_1 + 0x1e0) = 1;\n    if (param_3 == 0) {\n        *(param_1 + 0x1e4) = param_4;\n        if (param_4 != 0) {\n            puVar1 = param_1 + 0x18;\n            *(param_1 + 0x128) = *(param_1 + 0x18);\n            *(param_1 + 0x28) = *(param_1 + 0x1c);\n            iVar2 = (**(param_1 + 0x118))(param_1, *(param_1 + 0x18), *(param_1 + 0x1c), puVar1);\n            *(param_1 + 0x11c) = iVar2;\n            if (iVar2 != 0) {\n                *(param_1 + 0x124) = *(param_1 + 0x120);\n                *(param_1 + 0x118) = fcn.00473050;\n                return 0;\n            }\n            iVar2 = *(param_1 + 0x1e0);\n            if (-1 < iVar2) {\n                if (iVar2 < 2) {\n                    *(param_1 + 0x1e0) = 2;\n                }\n                else if (iVar2 == 3) {\n                    (**(*(param_1 + 0x90) + 0x34))(*(param_1 + 0x90), *(param_1 + 0x128), *puVar1, param_1 + 0x198);\n                    *(param_1 + 0x128) = *puVar1;\n                    return 2;\n                }\n            }\n        }\n        return 1;\n    }\n    iVar2 = fcn.00472e80(param_1, param_3);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    fcn.00452a10(iVar2, param_2, param_3);\n    uVar3 = fcn.00474070(param_1, param_3, param_4);\n    return uVar3;\n}\n",
        "token_count": 617
    },
    "00475110": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004752db)\n// WARNING: Removing unreachable block (ram,0x004752df)\n// WARNING: Removing unreachable block (ram,0x00475312)\n// WARNING: Removing unreachable block (ram,0x0047532d)\n// WARNING: Removing unreachable block (ram,0x00475337)\n// WARNING: Removing unreachable block (ram,0x004751d2)\n// WARNING: Removing unreachable block (ram,0x0047520e)\n// WARNING: Removing unreachable block (ram,0x004751a4)\n// WARNING: Removing unreachable block (ram,0x004751b8)\n// WARNING: Removing unreachable block (ram,0x00475222)\n// WARNING: Removing unreachable block (ram,0x00475201)\n// WARNING: Removing unreachable block (ram,0x00475289)\n// WARNING: Removing unreachable block (ram,0x00475297)\n// WARNING: Removing unreachable block (ram,0x004752ae)\n// WARNING: Removing unreachable block (ram,0x004752be)\n\nchar __fastcall fcn.00475110(int32_t param_1, int32_t param_2, uint param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    pcVar1 = 0x484180;\n    if (*(param_2 + 0xec) == '\\0') {\n        pcVar1 = 0x483fb0;\n    }\n    iVar2 = (*pcVar1)(param_1, *(param_2 + 0x90), param_3);\n    if (iVar2 != 0) {\n        if (*(param_2 + 0x8c) == 0) {\n            if (*(param_2 + 0x50) != 0) {\n                fcn.00473640(param_3);\n            }\n        }\n        else {\n            (**(param_2 + 0x8c))(*(param_2 + 4), 0, 0, 0xffffffff);\n        }\n        return '\\0';\n    }\n    return (param_1 != 0) + '\\x1e';\n}\n",
        "token_count": 463
    },
    "00475350": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00475350(int32_t param_1, int32_t param_2, uint param_3, int32_t param_4, uint param_5, int32_t param_6)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char cVar4;\n    int16_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    bool bVar8;\n    ushort auStack4 [2];\n    \n    iVar7 = param_4;\n    iVar2 = param_2;\n    iVar1 = *(param_1 + 0x164);\n    iVar6 = (**(param_2 + 0x10))(param_2, param_4, param_5, &param_2);\n    iVar3 = param_6;\n    while (iVar6 + 4U < 0x2c) {\n    // switch table (44 cases) at 0x475708\n        switch(*(*(iVar6 + 0x475730) * 4 + 0x475708)) {\n        case 0x47539f:\n            iVar6 = (**(iVar2 + 0x2c))(iVar2, iVar7);\n            if (iVar6 < 0) {\n                if (iVar2 == *(param_1 + 0x90)) {\n                    *(param_1 + 0x120) = iVar7;\n                }\n                return 0xe;\n            }\n            if (((param_3 != '\\0') || (iVar6 != 0x20)) ||\n               (((*(iVar3 + 0xc) - *(iVar3 + 0x10) & 0xfffffffeU) != 0 && (*(*(iVar3 + 0xc) + -2) != 0x20)))) {\n                iVar7 = fcn.00483720(iVar6, auStack4);\n                if (iVar7 == 0) {\n                    if (iVar2 == *(param_1 + 0x90)) {\n                        *(param_1 + 0x120) = param_4;\n                    }\n                    return 0xe;\n                }\n                iVar6 = 0;\n                if (0 < iVar7) {\n                    do {\n                        if ((*(iVar3 + 0xc) == *(iVar3 + 8)) && (cVar4 = fcn.00473c60(),  cVar4 == '\\0')) {\n                            return 1;\n                        }\n                        **(iVar3 + 0xc) = auStack4[iVar6];\n                        *(iVar3 + 0xc) = *(iVar3 + 0xc) + 2;\n                        iVar6 = iVar6 + 1;\n                    } while (iVar6 < iVar7);\n                }\n            }\n            break;\n        case 0x475448:\n            goto code_r0x00475448;\n        case 0x475463:\n            iVar7 = fcn.00474c20(iVar7);\n            if (iVar7 == 0) {\n                return 1;\n            }\n            break;\n        case 0x475483:\n            param_2 = *(iVar2 + 0x44) + iVar7;\n        case 0x47548c:\n            if ((param_3 != '\\0') ||\n               (((*(iVar3 + 0xc) - *(iVar3 + 0x10) & 0xfffffffeU) != 0 && (*(*(iVar3 + 0xc) + -2) != 0x20)))) {\n                if ((*(iVar3 + 0xc) == *(iVar3 + 8)) && (cVar4 = fcn.00473c60(),  cVar4 == '\\0')) {\n                    return 1;\n                }\n                **(iVar3 + 0xc) = 0x20;\n                *(iVar3 + 0xc) = *(iVar3 + 0xc) + 2;\n            }\n            break;\n        case 0x4754d4:\n            iVar5 = (**(iVar2 + 0x30))(iVar2, *(iVar2 + 0x44) + iVar7, param_2 - *(iVar2 + 0x44));\n            if (iVar5 == 0) {\n                iVar7 = fcn.00474d10();\n                if (iVar7 == 0) {\n                    return 1;\n                }\n                iVar7 = fcn.00473880(iVar7, 0);\n                *(param_1 + 0x1c4) = *(param_1 + 0x1c8);\n                if (iVar3 == iVar1 + 0x50) {\n                    if (*(param_1 + 0x110) != 0) {\n                        if (*(iVar1 + 0x82) == '\\0') {\n                            bVar8 = *(iVar1 + 0x81) == '\\0';\n                        }\n                        else {\n                            bVar8 = *(param_1 + 300) == 0;\n                        }\n                        if (bVar8) goto code_r0x00475600;\n                    }\ncode_r0x00475594:\n                    if (iVar7 == 0) break;\n                }\n                else {\n                    if ((*(iVar1 + 0x81) != '\\0') && (*(iVar1 + 0x82) == '\\0')) goto code_r0x00475594;\ncode_r0x00475600:\n                    if (iVar7 == 0) {\n                        return 0xb;\n                    }\n                    if (*(iVar7 + 0x22) == '\\0') {\n                        return 0x18;\n                    }\n                }\n                if (*(iVar7 + 0x20) != '\\0') {\n                    if (iVar2 == *(param_1 + 0x90)) {\n                        *(param_1 + 0x120) = param_4;\n                    }\n                    return 0xc;\n                }\n                if (*(iVar7 + 0x1c) != 0) {\n                    if (iVar2 == *(param_1 + 0x90)) {\n                        *(param_1 + 0x120) = param_4;\n                    }\n                    return 0xf;\n                }\n                iVar6 = *(iVar7 + 4);\n                if (iVar6 == 0) {\n                    if (iVar2 == *(param_1 + 0x90)) {\n                        *(param_1 + 0x120) = param_4;\n                    }\n                    return 0x10;\n                }\n                *(iVar7 + 0x20) = 1;\n                iVar6 = fcn.00475350(param_1, *(param_1 + 0xe4), param_3, iVar6, iVar6 + *(iVar7 + 8) * 2, iVar3);\n                *(iVar7 + 0x20) = 0;\n                if (iVar6 != 0) {\n                    return iVar6;\n                }\n            }\n            else {\n                if ((*(iVar3 + 0xc) == *(iVar3 + 8)) && (cVar4 = fcn.00473c60(),  cVar4 == '\\0')) {\n                    return 1;\n                }\n                **(iVar3 + 0xc) = iVar5;\n                *(iVar3 + 0xc) = *(iVar3 + 0xc) + 2;\n            }\n            break;\n        case 0x47561b:\n            return 0;\n        case 0x475625:\n            if (iVar2 == *(param_1 + 0x90)) {\n                *(param_1 + 0x120) = param_2;\n            }\n            return 4;\n        case 0x475644:\n            if (iVar2 == *(param_1 + 0x90)) {\n                *(param_1 + 0x120) = iVar7;\n            }\n            return 4;\n        }\n        param_4 = param_2;\n        iVar6 = (**(iVar2 + 0x10))(iVar2, param_2, param_5, &param_2);\n        iVar7 = param_4;\n    }\ncode_r0x00475448:\n    if (iVar2 == *(param_1 + 0x90)) {\n        *(param_1 + 0x120) = iVar7;\n    }\n    return 0x17;\n}\n",
        "token_count": 1788
    },
    "00475760": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00475760(int32_t noname_0, int32_t noname_1, int32_t noname_2, uint noname_3, uint noname_4, uint noname_5, \n            uint noname_6, uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, \n            uint noname_19, uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, \n            uint noname_25, uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint noname_30, \n            uint noname_31, uint noname_32, uint noname_33, uint arg_90h, uint noname_35, uint noname_36, uint noname_37\n            , uint noname_38, uint noname_39, uint noname_40, uint noname_41, uint noname_42, uint noname_43, \n            uint noname_44, uint noname_45, uint noname_46, uint noname_47, uint noname_48, uint noname_49, \n            uint noname_50, uint noname_51, uint noname_52, uint noname_53, uint noname_54, uint noname_55, \n            uint noname_56, uint noname_57, uint noname_58, uint noname_59, uint noname_60, uint noname_61, \n            uint noname_62, uint noname_63, uint noname_64, uint noname_65, uint noname_66, uint arg_114h, \n            uint noname_68, uint noname_69, uint arg_120h, uint noname_71, uint noname_72, uint noname_73, \n            uint noname_74, uint noname_75, uint noname_76, uint noname_77, uint noname_78, uint noname_79, \n            uint noname_80, uint noname_81, uint noname_82, uint noname_83, uint noname_84, uint noname_85, \n            uint noname_86, uint arg_164h)\n\n{\n    int32_t iVar1;\n    int32_t noname_0_00;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    int32_t in_stack_ffffffec;\n    int32_t iVar5;\n    int32_t noname_9_00;\n    int32_t in_stack_fffffff4;\n    uint in_stack_fffffff8;\n    uint noname_12_00;\n    \n    noname_0_00 = noname_0;\n    noname_12_00 = *(noname_0 + 0x114);\n    iVar1 = *(noname_0 + 0x164);\n    *(noname_0 + 0x114) = 1;\n    noname_0 = 0;\n    iVar5 = iVar1;\n    if ((*(iVar1 + 0x68) == 0) && (cVar2 = fcn.00473c60(),  cVar2 == '\\0')) {\n        return 1;\n    }\n    iVar3 = (**(noname_1 + 0x14))(noname_1, noname_2, noname_3, &stack0xffffffec);\n    while (iVar3 + 4U < 0x21) {\n        switch(*(*(iVar3 + 0x475b88) * 4 + 0x475b60)) {\n        case 0x4757ee:\n            if ((*(noname_0_00 + 0x1e8) == '\\0') && (noname_1 == *(noname_0_00 + 0x90))) {\n                *(noname_0_00 + 0x120) = noname_2;\n                *(noname_0_00 + 0x114) = noname_12_00;\n                return 10;\n            }\n            iVar3 = fcn.00474d10();\n            if (iVar3 == 0) goto code_r0x00475965;\n            noname_9_00 = iVar5;\n            iVar3 = fcn.00473880(iVar3, 0);\n            *(noname_0_00 + 0x1ac) = *(noname_0_00 + 0x1b0);\n            if (iVar3 == 0) {\n                *(iVar5 + 0x80) = *(iVar5 + 0x82);\n                *(noname_0_00 + 0x114) = noname_12_00;\n                return noname_0;\n            }\n            if (*(iVar3 + 0x20) != '\\0') {\n                if (noname_1 == *(noname_0_00 + 0x90)) {\n                    *(noname_0_00 + 0x120) = noname_2;\n                }\n                *(noname_0_00 + 0x114) = noname_12_00;\n                return 0xc;\n            }\n            if (*(iVar3 + 0x10) == 0) {\n                *(iVar3 + 0x20) = 1;\n                noname_0 = fcn.00475760(noname_0_00, *(noname_0_00 + 0xe4), *(iVar3 + 4), \n                                        *(iVar3 + 4) + *(iVar3 + 8) * 2, unaff_EDI, unaff_EBX, unaff_ESI, unaff_EBP, \n                                        in_stack_ffffffec, noname_9_00, in_stack_fffffff4, in_stack_fffffff8, \n                                        noname_12_00, unaff_retaddr, noname_0, noname_1, noname_2, noname_3, noname_4, \n                                        noname_5, noname_6, noname_7, noname_8, noname_9, noname_10, noname_11, \n                                        noname_12, noname_13, noname_14, noname_15, noname_16, noname_17, noname_18, \n                                        noname_19, noname_20, noname_21, noname_22, noname_23, noname_24, noname_25, \n                                        noname_26, noname_27, noname_28, noname_29, noname_30, noname_31, noname_32, \n                                        noname_33, arg_90h, noname_35, noname_36, noname_37, noname_38, noname_39, \n                                        noname_40, noname_41, noname_42, noname_43, noname_44, noname_45, noname_46, \n                                        noname_47, noname_48, noname_49, noname_50, noname_51, noname_52, noname_53, \n                                        noname_54, noname_55, noname_56, noname_57, noname_58, noname_59, noname_60, \n                                        noname_61, noname_62, noname_63, noname_64, noname_65, noname_66, arg_114h, \n                                        noname_68, noname_69, arg_120h, noname_71, noname_72, noname_73);\n                *(iVar3 + 0x20) = 0;\n                if (noname_0 != 0) goto code_r0x004758fa;\n            }\n            else if (*(noname_0_00 + 0x70) == 0) {\n                *(iVar5 + 0x80) = *(iVar5 + 0x82);\n            }\n            else {\n                *(iVar5 + 0x83) = 0;\n                *(iVar3 + 0x20) = 1;\n                iVar4 = (**(noname_0_00 + 0x70))\n                                  (*(noname_0_00 + 0x74), 0, *(iVar3 + 0x14), *(iVar3 + 0x10), *(iVar3 + 0x18));\n                *(iVar3 + 0x20) = 0;\n                if (iVar4 == 0) {\n                    *(noname_0_00 + 0x114) = noname_12_00;\n                    return 0x15;\n                }\n                if (*(iVar5 + 0x83) == '\\0') {\n                    *(iVar5 + 0x80) = *(iVar5 + 0x82);\n                }\n            }\n            break;\n        case 0x4758e4:\n            goto code_r0x004758e4;\n        case 0x47594e:\n            iVar3 = fcn.00474c20(noname_2);\n            noname_9_00 = iVar5;\n            if (iVar3 == 0) goto code_r0x00475965;\n            break;\n        case 0x475983:\n            in_stack_ffffffec = *(noname_1 + 0x44) + noname_2;\n        case 0x47598c:\n            if ((*(iVar1 + 0x70) == *(iVar1 + 0x74)) && (cVar2 = fcn.00473c60(),  cVar2 == '\\0')) {\ncode_r0x00475965:\n                *(noname_0_00 + 0x114) = noname_12_00;\n                return 1;\n            }\n            **(iVar1 + 0x74) = 10;\n            *(iVar1 + 0x74) = *(iVar1 + 0x74) + 2;\n            noname_9_00 = iVar5;\n            break;\n        case 0x4759b2:\n            iVar3 = (**(noname_1 + 0x2c))(noname_1, noname_2);\n            if ((iVar3 < 0) || (iVar3 = fcn.00483720(iVar3, &stack0xfffffff8),  iVar3 == 0)) {\n                if (noname_1 == *(noname_0_00 + 0x90)) {\n                    *(noname_0_00 + 0x120) = noname_2;\n                }\n                *(noname_0_00 + 0x114) = noname_12_00;\n                return 0xe;\n            }\n            iVar4 = 0;\n            noname_9_00 = iVar5;\n            in_stack_fffffff4 = iVar3;\n            if (0 < iVar3) {\n                do {\n                    if ((*(iVar1 + 0x70) == *(iVar1 + 0x74)) &&\n                       (iVar3 = in_stack_fffffff4,  cVar2 = fcn.00473c60(),  in_stack_fffffff4 = iVar3,  cVar2 == '\\0'))\n                    goto code_r0x00475965;\n                    **(iVar1 + 0x74) = *(&stack0xfffffff8 + iVar4 * 2);\n                    *(iVar1 + 0x74) = *(iVar1 + 0x74) + 2;\n                    iVar4 = iVar4 + 1;\n                    noname_9_00 = iVar5;\n                } while (iVar4 < iVar3);\n            }\n            break;\n        case 0x475ab8:\n            *(noname_0_00 + 0x114) = noname_12_00;\n            return 0;\n        case 0x475b02:\n            if (noname_1 == *(noname_0_00 + 0x90)) {\n                *(noname_0_00 + 0x120) = noname_2;\n            }\n            *(noname_0_00 + 0x114) = noname_12_00;\n            return 4;\n        case 0x475b2e:\n            if (noname_1 == *(noname_0_00 + 0x90)) {\n                *(noname_0_00 + 0x120) = in_stack_ffffffec;\n            }\n            *(noname_0_00 + 0x114) = noname_12_00;\n            return 4;\n        }\n        iVar5 = in_stack_ffffffec;\n        iVar3 = (**(noname_1 + 0x14))(noname_1, in_stack_ffffffec, noname_3, &stack0xffffffec);\n        noname_2 = in_stack_ffffffec;\n        in_stack_ffffffec = iVar5;\n        iVar5 = noname_9_00;\n    }\ncode_r0x004758e4:\n    if (noname_1 == *(noname_0_00 + 0x90)) {\n        *(noname_0_00 + 0x120) = noname_2;\n    }\n    noname_0 = 0x17;\ncode_r0x004758fa:\n    *(noname_0_00 + 0x114) = noname_12_00;\n    return noname_0;\n}\n",
        "token_count": 3050
    },
    "00475bb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00475bb0(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*(param_2 + 0x40) == 0) {\n        if (*(param_2 + 0x50) != 0) {\n            fcn.00473640(param_3);\n        }\n        return 1;\n    }\n    param_3 = param_3 + *(param_1 + 0x44) * 2;\n    iVar1 = (**(param_1 + 0x20))(param_1, param_3);\n    iVar2 = fcn.00474d10();\n    if (iVar2 != 0) {\n        *(param_2 + 0x1b0) = *(param_2 + 0x1ac);\n        (**(param_1 + 0x24))(param_1, iVar1 + param_3);\n        iVar1 = fcn.00474d10();\n        if (iVar1 != 0) {\n            fcn.004735e0();\n            (**(param_2 + 0x40))(*(param_2 + 4), iVar2, iVar1);\n            fcn.00473be0();\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 299
    },
    "00475c80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00475c80(uint param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    \n    if (*(param_3 + 0x44) == 0) {\n        if (*(param_3 + 0x50) != 0) {\n            fcn.00473640(param_2);\n        }\n        return 1;\n    }\n    iVar1 = fcn.00474d10();\n    if (iVar1 == 0) {\n        return 0;\n    }\n    fcn.004735e0();\n    (**(param_3 + 0x44))(*(param_3 + 4), iVar1);\n    fcn.00473be0();\n    return 1;\n}\n",
        "token_count": 167
    },
    "00475d00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint16_t ** fcn.00475d00(int32_t param_1)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int16_t **ppiVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int16_t iVar7;\n    int16_t *piVar8;\n    \n    iVar1 = *(param_1 + 0x164);\n    if ((*(iVar1 + 0x5c) == *(iVar1 + 0x58)) && (cVar2 = fcn.00473c60(),  cVar2 == '\\0')) {\n        return NULL;\n    }\n    **(iVar1 + 0x5c) = 0;\n    *(iVar1 + 0x5c) = *(iVar1 + 0x5c) + 2;\n    iVar3 = fcn.00474d10();\n    if (iVar3 != 0) {\n        piVar8 = iVar3 + 2;\n        ppiVar4 = fcn.00473880(piVar8, 0xc);\n        if (ppiVar4 != NULL) {\n            if (*ppiVar4 != piVar8) {\n                *(iVar1 + 0x5c) = *(iVar1 + 0x60);\n                return ppiVar4;\n            }\n            *(iVar1 + 0x60) = *(iVar1 + 0x5c);\n            if (*(param_1 + 0xec) != '\\0') {\n                iVar7 = *piVar8;\n                if ((((iVar7 == 0x78) && (*(iVar3 + 4) == 0x6d)) && (*(iVar3 + 6) == 0x6c)) &&\n                   ((*(iVar3 + 8) == 0x6e && (*(iVar3 + 10) == 0x73)))) {\n                    if (*(iVar3 + 0xc) == 0) {\n                        ppiVar4[1] = iVar1 + 0x98;\n                        *(ppiVar4 + 9) = 1;\n                        return ppiVar4;\n                    }\n                    if (*(iVar3 + 0xc) == 0x3a) {\n                        piVar8 = fcn.00473880(iVar3 + 0xe, 8);\n                        ppiVar4[1] = piVar8;\n                        *(ppiVar4 + 9) = 1;\n                        return ppiVar4;\n                    }\n                }\n                iVar5 = 0;\n                if (iVar7 != 0) {\n                    while (iVar7 != 0x3a) {\n                        iVar7 = *(iVar3 + 4 + iVar5 * 2);\n                        iVar5 = iVar5 + 1;\n                        if (iVar7 == 0) {\n                            return ppiVar4;\n                        }\n                    }\n                    iVar3 = 0;\n                    if (0 < iVar5) {\n                        do {\n                            if ((*(iVar1 + 0x5c) == *(iVar1 + 0x58)) && (cVar2 = fcn.00473c60(),  cVar2 == '\\0')) {\n                                return NULL;\n                            }\n                            **(iVar1 + 0x5c) = piVar8[iVar3];\n                            *(iVar1 + 0x5c) = *(iVar1 + 0x5c) + 2;\n                            iVar3 = iVar3 + 1;\n                        } while (iVar3 < iVar5);\n                    }\n                    if ((*(iVar1 + 0x5c) == *(iVar1 + 0x58)) && (cVar2 = fcn.00473c60(),  cVar2 == '\\0')) {\n                        return NULL;\n                    }\n                    **(iVar1 + 0x5c) = 0;\n                    *(iVar1 + 0x5c) = *(iVar1 + 0x5c) + 2;\n                    piVar6 = fcn.00473880(*(iVar1 + 0x60), 8);\n                    ppiVar4[1] = piVar6;\n                    if (*piVar6 == *(iVar1 + 0x60)) {\n                        *(iVar1 + 0x60) = *(iVar1 + 0x5c);\n                        return ppiVar4;\n                    }\n                    *(iVar1 + 0x5c) = *(iVar1 + 0x60);\n                }\n            }\n            return ppiVar4;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 978
    },
    "00475ee0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00475ee0(int16_t *noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, \n            uint noname_19, uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, \n            uint noname_25, uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint noname_30, \n            uint noname_31, uint noname_32, uint noname_33, uint noname_34, uint noname_35, uint noname_36, \n            uint noname_37, uint noname_38, uint noname_39, uint noname_40, uint noname_41, uint noname_42, \n            uint noname_43, uint noname_44, uint noname_45, uint noname_46, uint noname_47, uint noname_48, \n            uint noname_49, uint noname_50, uint noname_51, uint noname_52, uint noname_53, uint noname_54, \n            uint noname_55, uint noname_56, uint noname_57, uint noname_58, uint noname_59, uint noname_60, \n            uint noname_61, uint noname_62, uint noname_63, uint noname_64, uint noname_65, uint noname_66, \n            uint noname_67, uint noname_68, uint noname_69, uint noname_70, uint noname_71, uint noname_72, \n            uint noname_73, uint noname_74, uint noname_75, uint noname_76, uint noname_77, uint noname_78, \n            uint noname_79, uint noname_80, uint noname_81, uint noname_82, uint noname_83, uint noname_84, \n            uint noname_85, uint noname_86, uint arg_164h, uint noname_88, uint noname_89, uint noname_90, uint arg_174h\n            , uint noname_92, uint noname_93, uint noname_94, uint noname_95, uint noname_96, uint noname_97, \n            uint noname_98, uint noname_99, uint noname_100, uint noname_101, uint arg_1a0h, uint noname_103, \n            uint arg_1a8h, uint arg_1ach, uint arg_1b0h)\n\n{\n    int16_t iVar1;\n    int32_t noname_0_00;\n    char cVar2;\n    int16_t *in_EAX;\n    int32_t iVar3;\n    uint unaff_EBX;\n    int32_t *arg_ch;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int16_t *piVar4;\n    uint unaff_retaddr;\n    int32_t noname_9_00;\n    \n    noname_0_00 = noname_0;\n    iVar1 = *in_EAX;\n    noname_9_00 = *(noname_0 + 0x164);\n    piVar4 = in_EAX;\n    noname_0 = in_EAX;\n    do {\n        if (iVar1 == 0) {\n            return 1;\n        }\n        iVar1 = *in_EAX;\n        if ((iVar1 == 0xc) || (iVar1 == 0)) {\n            if ((*(noname_0_00 + 0x1ac) == *(noname_0_00 + 0x1a8)) && (cVar2 = fcn.00473c60(),  cVar2 == '\\0')) {\n                return 0;\n            }\n            **(noname_0_00 + 0x1ac) = 0;\n            *(noname_0_00 + 0x1ac) = *(noname_0_00 + 0x1ac) + 2;\n            iVar3 = fcn.00473880(*(noname_0_00 + 0x1b0), 0);\n            if (iVar3 != 0) {\n                *(iVar3 + 0x20) = 1;\n            }\n            if (*in_EAX != 0) {\n                in_EAX = in_EAX + 1;\n                noname_0 = in_EAX;\n            }\n            *(noname_0_00 + 0x1ac) = *(noname_0_00 + 0x1b0);\n            piVar4 = in_EAX;\n        }\n        else if (iVar1 == 0x3d) {\n            if ((*(noname_0_00 + 0x1ac) - *(noname_0_00 + 0x1b0) & 0xfffffffeU) == 0) {\n                arg_ch = noname_9_00 + 0x98;\n            }\n            else {\n                if ((*(noname_0_00 + 0x1ac) == *(noname_0_00 + 0x1a8)) && (cVar2 = fcn.00473c60(),  cVar2 == '\\0')) {\n                    return 0;\n                }\n                **(noname_0_00 + 0x1ac) = 0;\n                *(noname_0_00 + 0x1ac) = *(noname_0_00 + 0x1ac) + 2;\n                arg_ch = fcn.00473880(*(noname_0_00 + 0x1b0), 8);\n                if (arg_ch == NULL) {\n                    return 0;\n                }\n                if (*arg_ch == *(noname_0_00 + 0x1b0)) {\n                    iVar3 = fcn.00474c80();\n                    *arg_ch = iVar3;\n                    if (iVar3 == 0) {\n                        return 0;\n                    }\n                }\n                *(noname_0_00 + 0x1ac) = *(noname_0_00 + 0x1b0);\n            }\n            iVar1 = noname_0[1];\n            in_EAX = noname_0;\n            while ((in_EAX = in_EAX + 1,  iVar1 != 0xc && (iVar1 != 0))) {\n                if ((*(noname_0_00 + 0x1ac) == *(noname_0_00 + 0x1a8)) && (cVar2 = fcn.00473c60(),  cVar2 == '\\0')) {\n                    return 0;\n                }\n                **(noname_0_00 + 0x1ac) = *in_EAX;\n                *(noname_0_00 + 0x1ac) = *(noname_0_00 + 0x1ac) + 2;\n                iVar1 = in_EAX[1];\n            }\n            if ((*(noname_0_00 + 0x1ac) == *(noname_0_00 + 0x1a8)) && (cVar2 = fcn.00473c60(),  cVar2 == '\\0')) {\n                return 0;\n            }\n            **(noname_0_00 + 0x1ac) = 0;\n            *(noname_0_00 + 0x1ac) = *(noname_0_00 + 0x1ac) + 2;\n            iVar3 = fcn.00473150(noname_0_00, arg_ch, 0, *(noname_0_00 + 0x1b0), noname_0_00 + 0x174, unaff_EDI, \n                                 unaff_ESI, unaff_EBP, unaff_EBX, noname_9_00, unaff_retaddr, noname_0, noname_1, \n                                 noname_2, noname_3, noname_4, noname_5, noname_6, noname_7, noname_8, noname_9, \n                                 noname_10, noname_11, noname_12, noname_13, noname_14, noname_15, noname_16, noname_17\n                                 , noname_18, noname_19, noname_20, noname_21, noname_22, noname_23, noname_24, \n                                 noname_25, noname_26, noname_27, noname_28, noname_29, noname_30, noname_31, noname_32\n                                 , noname_33, noname_34, noname_35, noname_36, noname_37, noname_38, noname_39, \n                                 noname_40, noname_41, noname_42, noname_43, noname_44, noname_45, noname_46, noname_47\n                                 , noname_48, noname_49, noname_50, noname_51, noname_52, noname_53, noname_54, \n                                 noname_55, noname_56, noname_57, noname_58, noname_59, noname_60, noname_61, noname_62\n                                 , noname_63, noname_64, noname_65, noname_66, noname_67, noname_68, noname_69, \n                                 noname_70, noname_71, noname_72, noname_73, noname_74, noname_75, noname_76, noname_77\n                                 , noname_78, noname_79, noname_80, noname_81, noname_82, noname_83, noname_84, \n                                 noname_85, noname_86, arg_164h, noname_88, noname_89, noname_90, arg_174h, noname_92, \n                                 noname_93, noname_94, noname_95, noname_96, noname_97, noname_98, noname_99, noname_100\n                                 , noname_101, arg_1a0h, noname_103, arg_1a8h, arg_1ach);\n            if (iVar3 != 0) {\n                return 0;\n            }\n            *(noname_0_00 + 0x1ac) = *(noname_0_00 + 0x1b0);\n            piVar4 = in_EAX;\n            noname_0 = in_EAX;\n            if (*in_EAX != 0) {\n                in_EAX = in_EAX + 1;\n                piVar4 = in_EAX;\n                noname_0 = in_EAX;\n            }\n        }\n        else {\n            if ((*(noname_0_00 + 0x1ac) == *(noname_0_00 + 0x1a8)) && (cVar2 = fcn.00473c60(),  cVar2 == '\\0')) {\n                return 0;\n            }\n            **(noname_0_00 + 0x1ac) = *in_EAX;\n            *(noname_0_00 + 0x1ac) = *(noname_0_00 + 0x1ac) + 2;\n            in_EAX = in_EAX + 1;\n            noname_0 = in_EAX;\n        }\n        iVar1 = *piVar4;\n    } while( true );\n}\n",
        "token_count": 2712
    },
    "004763d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.004763d0(int32_t noname_0, int32_t noname_1, uint noname_2, int16_t **noname_3, int32_t *noname_4, uint noname_5, \n            uint noname_6, uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, \n            uint noname_19, uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, \n            uint noname_25, uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint noname_30, \n            uint noname_31, uint noname_32, uint noname_33, uint arg_90h, uint noname_35, uint noname_36, uint noname_37\n            , uint noname_38, uint noname_39, uint noname_40, uint noname_41, uint noname_42, uint noname_43, \n            uint noname_44, uint noname_45, uint noname_46, uint noname_47, uint noname_48, uint noname_49, \n            uint noname_50, uint noname_51, uint noname_52, uint noname_53, uint noname_54, uint noname_55, \n            uint noname_56, uint arg_ech, uint noname_58, uint noname_59, uint noname_60, uint noname_61, uint noname_62\n            , uint noname_63, uint noname_64, uint noname_65, uint noname_66, uint noname_67, uint noname_68, \n            uint noname_69, uint arg_120h, uint noname_71, uint noname_72, uint noname_73, uint noname_74, \n            uint noname_75, uint noname_76, uint noname_77, uint noname_78, uint noname_79, uint noname_80, \n            uint noname_81, uint noname_82, uint noname_83, uint noname_84, uint noname_85, uint noname_86, \n            uint arg_164h, uint noname_88, uint arg_16ch, uint noname_90, uint noname_91, uint noname_92, uint arg_17ch\n            , uint arg_180h, uint arg_184h, uint arg_188h, uint arg_18ch, uint arg_190h, uint arg_194h, uint noname_100\n            , uint noname_101, uint arg_1a0h, uint noname_103, uint arg_1a8h, uint arg_1ach, uint arg_1b0h, \n            uint noname_107, uint noname_108, uint noname_109, uint noname_110, uint noname_111, uint noname_112, \n            uint noname_113, uint noname_114, uint noname_115, uint arg_1d8h)\n\n{\n    uint16_t uVar1;\n    int32_t *noname_3_00;\n    uint uVar2;\n    uint *puVar3;\n    uint8_t uVar4;\n    int32_t noname_0_00;\n    char cVar5;\n    uint16_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t *piVar12;\n    int32_t **ppiVar13;\n    uint32_t uVar14;\n    uint8_t uVar15;\n    int16_t *piVar16;\n    int32_t iVar17;\n    int16_t iVar18;\n    int16_t *piVar19;\n    uint unaff_EBX;\n    uint16_t *puVar20;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    int32_t iVar21;\n    uint *puVar22;\n    uint unaff_EDI;\n    int32_t iVar23;\n    uint32_t uVar24;\n    int16_t *piVar25;\n    uint unaff_retaddr;\n    int32_t iVar26;\n    int32_t iVar27;\n    int32_t iVar28;\n    uint32_t uVar29;\n    int16_t *piVar30;\n    int32_t **in_stack_fffffff4;\n    uint in_stack_fffffffc;\n    \n    noname_0_00 = noname_0;\n    iVar17 = *(noname_0 + 0x164);\n    iVar21 = 0;\n    iVar26 = 0;\n    iVar27 = 0;\n    iVar7 = fcn.00473880(*noname_3, 0);\n    if (iVar7 == 0) {\n        iVar7 = fcn.00474c80();\n        if (iVar7 == 0) {\n            return 1;\n        }\n        iVar7 = fcn.00473880(iVar7, 0x18);\n        if (iVar7 == 0) {\n            return 1;\n        }\n        if ((*(noname_0 + 0xec) != '\\0') && (iVar8 = fcn.004746b0(iVar7),  iVar8 == 0)) {\n            return 1;\n        }\n    }\n    iVar8 = *(iVar7 + 0xc);\n    iVar9 = (**(noname_1 + 0x28))(noname_1, noname_2, *(noname_0 + 0x17c), *(noname_0 + 0x188));\n    iVar28 = *(noname_0 + 0x17c);\n    iVar23 = iVar9;\n    if (iVar28 < iVar9 + iVar8) {\n        iVar10 = iVar9 + iVar8 + 0x10;\n        *(noname_0 + 0x17c) = iVar10;\n        iVar10 = (**(noname_0 + 0x10))(*(noname_0 + 0x188), iVar10 * 0x10);\n        if (iVar10 == 0) {\n            return 1;\n        }\n        *(noname_0 + 0x188) = iVar10;\n        if (iVar28 < iVar9) {\n            (**(noname_1 + 0x28))(noname_1, noname_2, iVar9, iVar10);\n        }\n    }\n    iVar28 = *(noname_0 + 0x188);\n    noname_0 = 0;\n    if (0 < iVar9) {\n        iVar9 = 0;\n        iVar21 = 0;\n        do {\n            iVar26 = *(iVar9 + *(noname_0_00 + 0x188));\n            iVar10 = iVar9;\n            iVar11 = (**(noname_1 + 0x20))(noname_1, *(iVar9 + *(noname_0_00 + 0x188)));\n            piVar12 = fcn.00475d00(noname_0_00, noname_1, iVar26, iVar11 + iVar26);\n            if (piVar12 == NULL) {\n                return 1;\n            }\n            if (*(*piVar12 + -2) != 0) {\n                if (noname_1 == *(noname_0_00 + 0x90)) {\n                    *(noname_0_00 + 0x120) = *(noname_0 * 0x10 + *(noname_0_00 + 0x188));\n                }\n                return 8;\n            }\n            *(*piVar12 + -2) = 1;\n            *(iVar28 + iVar21 * 4) = *piVar12;\n            iVar21 = iVar21 + 1;\n            if (*(iVar9 + 0xc + *(noname_0_00 + 0x188)) == '\\0') {\n                if ((*(piVar12 + 2) != '\\0') && (iVar26 = 0,  0 < iVar8)) {\n                    in_stack_fffffff4 = *(iVar7 + 0x14);\n                    ppiVar13 = in_stack_fffffff4;\n                    do {\n                        if (piVar12 == *ppiVar13) break;\n                        iVar26 = iVar26 + 1;\n                        ppiVar13 = ppiVar13 + 3;\n                    } while (iVar26 < iVar8);\n                }\n                iVar26 = iVar21;\n                iVar9 = fcn.00476360(noname_0_00, noname_1, noname_0_00 + 0x1a0);\n                if (iVar9 != 0) {\n                    return iVar9;\n                }\n                *(iVar28 + iVar21 * 4) = *(noname_0_00 + 0x1b0);\n                *(noname_0_00 + 0x1b0) = *(noname_0_00 + 0x1ac);\n            }\n            else {\n                iVar26 = fcn.00474d10();\n                *(iVar28 + iVar21 * 4) = iVar26;\n                if (iVar26 == 0) {\n                    return 1;\n                }\n                *(noname_0_00 + 0x1b0) = *(noname_0_00 + 0x1ac);\n                iVar26 = iVar21;\n            }\n            if (piVar12[1] == 0) {\n                iVar21 = iVar21 + 1;\n            }\n            else if (*(piVar12 + 9) == '\\0') {\n                iVar21 = iVar21 + 1;\n                iVar27 = iVar27 + 1;\n                *(*piVar12 + -2) = 2;\n            }\n            else {\n                iVar26 = fcn.00473150(noname_0_00, piVar12[1], piVar12, *(iVar28 + iVar21 * 4), noname_4, unaff_EDI, \n                                      unaff_ESI, unaff_EBP, unaff_EBX, iVar26, iVar27, iVar28, iVar7, iVar8, iVar10, \n                                      iVar23, in_stack_fffffff4, iVar17, in_stack_fffffffc, unaff_retaddr, noname_0, \n                                      noname_1, noname_2, noname_3, noname_4, noname_5, noname_6, noname_7, noname_8, \n                                      noname_9, noname_10, noname_11, noname_12, noname_13, noname_14, noname_15, \n                                      noname_16, noname_17, noname_18, noname_19, noname_20, noname_21, noname_22, \n                                      noname_23, noname_24, noname_25, noname_26, noname_27, noname_28, noname_29, \n                                      noname_30, noname_31, noname_32, noname_33, arg_90h, noname_35, noname_36, \n                                      noname_37, noname_38, noname_39, noname_40, noname_41, noname_42, noname_43, \n                                      noname_44, noname_45, noname_46, noname_47, noname_48, noname_49, noname_50, \n                                      noname_51, noname_52, noname_53, noname_54, noname_55, noname_56, arg_ech, \n                                      noname_58, noname_59, noname_60, noname_61, noname_62, noname_63, noname_64, \n                                      noname_65, noname_66, noname_67, noname_68, noname_69, arg_120h, noname_71, \n                                      noname_72, noname_73, noname_74, noname_75, noname_76, noname_77, noname_78, \n                                      noname_79, noname_80, noname_81, noname_82, noname_83, noname_84, noname_85, \n                                      noname_86, arg_164h, noname_88, arg_16ch, noname_90, noname_91, noname_92, \n                                      arg_17ch, arg_180h, arg_184h, arg_188h);\n                if (iVar26 != 0) {\n                    return iVar26;\n                }\n                iVar21 = iVar21 + -1;\n            }\n            iVar9 = iVar10 + 0x10;\n            noname_0 = noname_0 + 1;\n            iVar26 = iVar21;\n        } while (noname_0 < iVar23);\n    }\n    *(noname_0_00 + 0x180) = iVar21;\n    piVar12 = *(iVar7 + 8);\n    if ((piVar12 == NULL) || (*(*piVar12 + -2) == 0)) {\n        *(noname_0_00 + 0x184) = 0xffffffff;\n    }\n    else {\n        iVar9 = 0;\n        if (0 < iVar21) {\n            do {\n                if (*(iVar28 + iVar9 * 4) == *piVar12) {\n                    *(noname_0_00 + 0x184) = iVar9;\n                    break;\n                }\n                iVar9 = iVar9 + 2;\n            } while (iVar9 < iVar21);\n        }\n    }\n    noname_0 = 0;\n    iVar9 = iVar26;\n    iVar10 = iVar28;\n    if (0 < iVar8) {\n        iVar11 = 0;\n        do {\n            ppiVar13 = *(iVar7 + 0x14) + iVar11;\n            piVar12 = *ppiVar13;\n            iVar9 = *piVar12;\n            if ((*(iVar9 + -2) == 0) && (noname_3_00 = ppiVar13[2],  noname_3_00 != NULL)) {\n                if (piVar12[1] == 0) {\n                    *(iVar9 + -2) = 1;\n                }\n                else {\n                    if (*(piVar12 + 9) != '\\0') {\n                        iVar9 = fcn.00473150(noname_0_00, piVar12[1], piVar12, noname_3_00, noname_4, unaff_EDI, \n                                             unaff_ESI, unaff_EBP, unaff_EBX, iVar26, iVar27, iVar10, iVar7, iVar8, \n                                             iVar11, iVar23, noname_3_00, iVar17, in_stack_fffffffc, unaff_retaddr, \n                                             noname_0, noname_1, noname_2, noname_3, noname_4, noname_5, noname_6, \n                                             noname_7, noname_8, noname_9, noname_10, noname_11, noname_12, noname_13, \n                                             noname_14, noname_15, noname_16, noname_17, noname_18, noname_19, noname_20\n                                             , noname_21, noname_22, noname_23, noname_24, noname_25, noname_26, \n                                             noname_27, noname_28, noname_29, noname_30, noname_31, noname_32, noname_33\n                                             , arg_90h, noname_35, noname_36, noname_37, noname_38, noname_39, noname_40\n                                             , noname_41, noname_42, noname_43, noname_44, noname_45, noname_46, \n                                             noname_47, noname_48, noname_49, noname_50, noname_51, noname_52, noname_53\n                                             , noname_54, noname_55, noname_56, arg_ech, noname_58, noname_59, noname_60\n                                             , noname_61, noname_62, noname_63, noname_64, noname_65, noname_66, \n                                             noname_67, noname_68, noname_69, arg_120h, noname_71, noname_72, noname_73\n                                             , noname_74, noname_75, noname_76, noname_77, noname_78, noname_79, \n                                             noname_80, noname_81, noname_82, noname_83, noname_84, noname_85, noname_86\n                                             , arg_164h, noname_88, arg_16ch, noname_90, noname_91, noname_92, arg_17ch\n                                             , arg_180h, arg_184h, arg_188h);\n                        if (iVar9 != 0) {\n                            return iVar9;\n                        }\n                        goto code_r0x00476783;\n                    }\n                    iVar27 = iVar27 + 1;\n                    *(iVar9 + -2) = 2;\n                }\n                *(iVar28 + iVar21 * 4) = **ppiVar13;\n                *(iVar28 + (iVar21 + 1) * 4) = ppiVar13[2];\n                iVar21 = iVar21 + 2;\n            }\ncode_r0x00476783:\n            iVar11 = iVar11 + 0xc;\n            noname_0 = noname_0 + 1;\n            iVar9 = iVar21;\n        } while (noname_0 < iVar8);\n    }\n    iVar26 = 0;\n    *(iVar28 + iVar21 * 4) = 0;\n    noname_0 = 0;\n    if (iVar27 == 0) {\njoined_r0x00476b22:\n        for (; iVar26 < iVar21; iVar26 = iVar26 + 2) {\n            *(*(iVar28 + iVar26 * 4) + -2) = 0;\n        }\n        goto code_r0x00476b34;\n    }\n    uVar15 = *(noname_0_00 + 0x194);\n    iVar26 = *(noname_0_00 + 400);\n    iVar8 = 1 << (uVar15 & 0x1f);\n    if (iVar27 * 2 >> (uVar15 & 0x1f) == 0) {\n        iVar28 = iVar8;\n        if (iVar26 == 0) goto code_r0x00476839;\n    }\n    else {\n        do {\n            uVar4 = uVar15 & 0x1f;\n            uVar15 = uVar15 + 1;\n        } while (iVar27 >> uVar4 != 0);\n        *(noname_0_00 + 0x194) = uVar15;\n        if (uVar15 < 3) {\n            *(noname_0_00 + 0x194) = 3;\n        }\n        iVar8 = 1 << (*(noname_0_00 + 0x194) & 0x1f);\n        iVar28 = iVar8;\n        iVar26 = (**(noname_0_00 + 0x10))(*(noname_0_00 + 0x18c), iVar8 * 0xc);\n        if (iVar26 == 0) {\n            return 1;\n        }\n        *(noname_0_00 + 0x18c) = iVar26;\ncode_r0x00476839:\n        iVar26 = -1;\n        if (iVar8 != 0) {\n            iVar23 = iVar8 * 0xc;\n            do {\n                iVar8 = iVar8 + -1;\n                iVar23 = iVar23 + -0xc;\n                *(iVar23 + *(noname_0_00 + 0x18c)) = 0xffffffff;\n            } while (iVar8 != 0);\n        }\n    }\n    iVar26 = iVar26 + -1;\n    *(noname_0_00 + 400) = iVar26;\n    if (0 < iVar21) {\n        do {\n            puVar20 = *(iVar10 + noname_0 * 4);\n            if (puVar20[-1] == 2) {\n                uVar29 = 0;\n                puVar20[-1] = 0;\n                iVar21 = fcn.00473880(puVar20, 0);\n                puVar22 = *(*(iVar21 + 4) + 4);\n                if (puVar22 == NULL) {\n                    return 0x1b;\n                }\n                iVar8 = 0;\n                iVar21 = iVar9;\n                if (0 < puVar22[5]) {\n                    do {\n                        uVar6 = *(puVar22[4] + iVar8 * 2);\n                        if ((*(noname_0_00 + 0x1ac) == *(noname_0_00 + 0x1a8)) &&\n                           (cVar5 = fcn.00473c60(),  cVar5 == '\\0')) {\n                            return 1;\n                        }\n                        **(noname_0_00 + 0x1ac) = uVar6;\n                        *(noname_0_00 + 0x1ac) = *(noname_0_00 + 0x1ac) + 2;\n                        uVar29 = uVar29 * 0xf4243 ^ uVar6;\n                        iVar8 = iVar8 + 1;\n                    } while (iVar8 < puVar22[5]);\n                }\n                do {\n                    uVar6 = *puVar20;\n                    puVar20 = puVar20 + 1;\n                } while (uVar6 != 0x3a);\n                do {\n                    uVar6 = *puVar20;\n                    if ((*(noname_0_00 + 0x1ac) == *(noname_0_00 + 0x1a8)) && (cVar5 = fcn.00473c60(),  cVar5 == '\\0'))\n                    {\n                        return 1;\n                    }\n                    **(noname_0_00 + 0x1ac) = *puVar20;\n                    *(noname_0_00 + 0x1ac) = *(noname_0_00 + 0x1ac) + 2;\n                    uVar1 = *puVar20;\n                    uVar29 = uVar29 * 0xf4243 ^ uVar6;\n                    puVar20 = puVar20 + 1;\n                } while (uVar1 != 0);\n                uVar24 = iVar28 - 1U & uVar29;\n                iVar23 = uVar24 * 0xc;\n                uVar15 = 0;\n                iVar8 = *(iVar23 + *(noname_0_00 + 0x18c));\n                while (iVar8 == iVar26) {\n                    if (uVar29 == *(iVar23 + 4 + *(noname_0_00 + 0x18c))) {\n                        piVar25 = *(noname_0_00 + 0x1b0);\n                        piVar19 = *(iVar23 + 8 + *(noname_0_00 + 0x18c));\n                        iVar18 = *piVar25;\n                        if (iVar18 == *piVar19) {\n                            iVar8 = piVar19 - piVar25;\n                            do {\n                                if (iVar18 == 0) {\n                                    return 8;\n                                }\n                                iVar18 = piVar25[1];\n                                piVar25 = piVar25 + 1;\n                            } while (iVar18 == *(iVar8 + piVar25));\n                        }\n                        if (*piVar25 == 0) {\n                            return 8;\n                        }\n                    }\n                    if (uVar15 == 0) {\n                        uVar15 = (~(iVar28 - 1U) & uVar29) >> (*(noname_0_00 + 0x194) - 1U & 0x1f) & iVar28 - 1U >> 2 |\n                                 1;\n                    }\n                    uVar14 = uVar15;\n                    if (uVar24 < uVar14) {\n                        iVar8 = iVar28 - uVar14;\n                    }\n                    else {\n                        iVar8 = -uVar14;\n                    }\n                    uVar24 = uVar24 + iVar8;\n                    iVar23 = uVar24 * 0xc;\n                    iVar8 = *(iVar23 + *(noname_0_00 + 0x18c));\n                }\n                if (*(noname_0_00 + 0xed) != '\\0') {\n                    *(*(noname_0_00 + 0x1ac) + -2) = *(noname_0_00 + 0x1d8);\n                    piVar25 = **puVar22;\n                    do {\n                        if ((*(noname_0_00 + 0x1ac) == *(noname_0_00 + 0x1a8)) &&\n                           (cVar5 = fcn.00473c60(),  cVar5 == '\\0')) {\n                            return 1;\n                        }\n                        **(noname_0_00 + 0x1ac) = *piVar25;\n                        *(noname_0_00 + 0x1ac) = *(noname_0_00 + 0x1ac) + 2;\n                        iVar18 = *piVar25;\n                        piVar25 = piVar25 + 1;\n                    } while (iVar18 != 0);\n                }\n                uVar2 = *(noname_0_00 + 0x1b0);\n                *(noname_0_00 + 0x1b0) = *(noname_0_00 + 0x1ac);\n                *(iVar10 + noname_0 * 4) = uVar2;\n                iVar8 = uVar24 * 0xc;\n                iVar27 = iVar27 + -1;\n                *(iVar8 + *(noname_0_00 + 0x18c)) = iVar26;\n                *(iVar8 + 4 + *(noname_0_00 + 0x18c)) = uVar29;\n                *(iVar8 + 8 + *(noname_0_00 + 0x18c)) = uVar2;\n                iVar9 = iVar21;\n                if (iVar27 == 0) {\n                    iVar26 = noname_0 + 2;\n                    iVar28 = iVar10;\n                    goto joined_r0x00476b22;\n                }\n            }\n            else {\n                puVar20[-1] = 0;\n            }\n            noname_0 = noname_0 + 2;\n        } while (noname_0 < iVar21);\n    }\ncode_r0x00476b34:\n    piVar25 = NULL;\n    for (iVar27 = *noname_4; iVar27 != 0; iVar27 = *(iVar27 + 4)) {\n        *(**(iVar27 + 0xc) + -2) = 0;\n    }\n    if (*(noname_0_00 + 0xec) != '\\0') {\n        if (*(iVar7 + 4) == 0) {\n            puVar22 = *(iVar17 + 0x9c);\n            if (puVar22 == NULL) {\n                return 0;\n            }\n            piVar19 = *noname_3;\n        }\n        else {\n            puVar22 = *(*(iVar7 + 4) + 4);\n            if (puVar22 == NULL) {\n                return 0x1b;\n            }\n            piVar19 = *noname_3;\n            do {\n                iVar18 = *piVar19;\n                piVar19 = piVar19 + 1;\n            } while (iVar18 != 0x3a);\n        }\n        piVar30 = NULL;\n        if ((*(noname_0_00 + 0xed) != '\\0') && (**puVar22 != NULL)) {\n            piVar16 = **puVar22;\n            do {\n                iVar18 = *piVar16;\n                piVar25 = piVar25 + 1;\n                piVar16 = piVar16 + 1;\n                piVar30 = piVar25;\n            } while (iVar18 != 0);\n        }\n        noname_3[1] = piVar19;\n        noname_3[4] = puVar22[5];\n        noname_3[2] = **puVar22;\n        noname_3[5] = piVar30;\n        iVar17 = 0;\n        do {\n            piVar25 = piVar19 + iVar17;\n            iVar17 = iVar17 + 1;\n        } while (*piVar25 != 0);\n        iVar27 = piVar30 + iVar17 + puVar22[5];\n        if (puVar22[6] < iVar27) {\n            iVar27 = iVar27 + 0x18;\n            iVar21 = (**(noname_0_00 + 0xc))(iVar27 * 2);\n            if (iVar21 == 0) {\n                return 1;\n            }\n            puVar22[6] = iVar27;\n            fcn.00452a10(iVar21, puVar22[4], puVar22[5] * 2);\n            for (puVar3 = *(noname_0_00 + 0x16c); puVar3 != NULL; puVar3 = *puVar3) {\n                if (puVar3[3] == puVar22[4]) {\n                    puVar3[3] = iVar21;\n                }\n            }\n            (**(noname_0_00 + 0x14))(puVar22[4]);\n            puVar22[4] = iVar21;\n        }\n        iVar17 = iVar17 * 2;\n        iVar27 = puVar22[4] + puVar22[5] * 2;\n        fcn.00452a10(iVar27, piVar19, iVar17);\n        if (piVar30 != NULL) {\n            *(iVar27 + -2 + iVar17) = *(noname_0_00 + 0x1d8);\n            fcn.00452a10(iVar27 + iVar17, **puVar22, piVar30 * 2);\n        }\n        *noname_3 = puVar22[4];\n    }\n    return 0;\n}\n",
        "token_count": 6822
    },
    "00476cf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00476cf0(uint *param_1, int32_t param_2, int32_t *param_3, int32_t *param_4, int32_t *param_5, \n                    int32_t **param_6, uint param_7, uint param_8, uint param_9, uint param_10, uint param_11, \n                    uint param_12, uint param_13, uint param_14, uint param_15, uint param_16, uint param_17, \n                    uint param_18, uint param_19, uint param_20, uint param_21, uint param_22, uint param_23, \n                    uint param_24, uint param_25, uint param_26, uint param_27, uint param_28, uint param_29, \n                    uint param_30, uint param_31, uint param_32, uint param_33, uint param_34, uint param_35, \n                    uint param_36, uint param_37, uint param_38, uint param_39, uint param_40, uint param_41, \n                    uint param_42, uint param_43, uint param_44, uint param_45, uint param_46, uint param_47, \n                    uint param_48, uint param_49, uint param_50, uint param_51, uint param_52, uint param_53, \n                    uint param_54, uint param_55, uint param_56, uint param_57, uint param_58, uint param_59, \n                    uint param_60, uint param_61, uint param_62, uint param_63, uint param_64, uint param_65, \n                    uint param_66, uint param_67, uint param_68, uint param_69, uint param_70, uint param_71, \n                    uint param_72, uint param_73, uint param_74, uint param_75, uint param_76, uint param_77, \n                    uint param_78, uint param_79, uint param_80, uint param_81, uint param_82, uint param_83, \n                    uint param_84, uint param_85, uint param_86, uint param_87, uint param_88, uint param_89, \n                    uint param_90, uint param_91, uint param_92)\n\n{\n    uint *noname_3;\n    int16_t iVar1;\n    code *pcVar2;\n    uint *noname_0;\n    int32_t noname_1;\n    char cVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    uint *noname_12;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int16_t *piVar9;\n    uint uVar10;\n    int32_t *piVar11;\n    int16_t *piVar12;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    int32_t **ppiVar13;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    unkbyte3 Var14;\n    char cVar15;\n    int32_t **arg_20h;\n    ushort *in_stack_ffffffc8;\n    int32_t *piVar16;\n    int32_t **noname_13;\n    uint32_t in_stack_ffffffd8;\n    int32_t in_stack_ffffffdc;\n    int32_t *in_stack_ffffffe0;\n    uint in_stack_ffffffe4;\n    int32_t in_stack_ffffffe8;\n    uint in_stack_ffffffec;\n    uint in_stack_fffffff0;\n    uint in_stack_fffffff4;\n    uint in_stack_fffffff8;\n    uint in_stack_fffffffc;\n    \n    noname_1 = param_3;\n    noname_0 = param_1;\n    iVar6 = param_1[0x59];\n    if (param_3 == param_1[0x24]) {\n        arg_20h = param_1 + 0x48;\n        ppiVar13 = param_1 + 0x49;\n    }\n    else {\n        arg_20h = param_1[0x4b];\n        ppiVar13 = arg_20h + 1;\n    }\n    *arg_20h = param_4;\n    do {\n        piVar16 = param_5;\n        param_3 = param_4;\n        noname_13 = ppiVar13;\n        iVar4 = (**(noname_1 + 4))(noname_1, param_4, param_5, &stack0x0000000c);\n        *ppiVar13 = param_3;\n        if (0x12 < iVar4 + 5U) {\n            iVar4 = noname_0[0x14];\njoined_r0x004775de:\n            iVar8 = iVar6;\n            if (iVar4 != 0) {\n                fcn.00473640(param_4);\n                iVar8 = iVar6;\n            }\n            goto code_r0x004775ef;\n        }\n    // switch table (19 cases) at 0x477874\n        switch(iVar4) {\n        case 0:\n            *arg_20h = param_3;\n            return 4;\n        default:\n            puVar5 = noname_0[0x5c];\n            if (puVar5 == NULL) {\n                puVar5 = (*noname_0[3])(0x30);\n                if (puVar5 == NULL) {\n                    return 1;\n                }\n                iVar4 = (*noname_0[3])(0x20);\n                puVar5[9] = iVar4;\n                if (iVar4 == 0) {\n                    (*noname_0[5])(puVar5);\n                    return 1;\n                }\n                puVar5[10] = iVar4 + 0x20;\n                iVar8 = iVar6;\n            }\n            else {\n                noname_0[0x5c] = *puVar5;\n                iVar8 = iVar6;\n            }\n            puVar5[0xb] = 0;\n            in_stack_ffffffe0 = puVar5 + 0xb;\n            *puVar5 = noname_0[0x5b];\n            noname_0[0x5b] = puVar5;\n            puVar5[4] = 0;\n            puVar5[5] = 0;\n            iVar6 = *(noname_1 + 0x44) + param_4;\n            puVar5[1] = iVar6;\n            uVar10 = (**(noname_1 + 0x20))(noname_1, iVar6);\n            puVar5[2] = uVar10;\n            noname_0[0x4e] = noname_0[0x4e] + 1;\n            param_1 = puVar5[1];\n            noname_12 = puVar5[2] + param_1;\n            in_stack_ffffffc8 = puVar5[9];\n            (**(noname_1 + 0x40))(noname_1, &stack0x00000004, noname_12, &stack0xffffffc8, puVar5[10] + -2);\n            iVar6 = in_stack_ffffffc8 - puVar5[9] >> 1;\n            if (param_1 != noname_12) {\n                do {\n                    in_stack_ffffffdc = (puVar5[10] - puVar5[9]) * 2;\n                    iVar4 = (*noname_0[4])(puVar5[9], in_stack_ffffffdc);\n                    if (iVar4 == 0) {\n                        return 1;\n                    }\n                    puVar5[9] = iVar4;\n                    puVar5[10] = iVar4 + in_stack_ffffffdc;\n                    in_stack_ffffffc8 = iVar4 + iVar6 * 2;\n                    (**(noname_1 + 0x40))(noname_1, &stack0x00000004, noname_12, &stack0xffffffc8, puVar5[10] + -2);\n                    iVar6 = in_stack_ffffffc8 - puVar5[9] >> 1;\n                } while (param_1 != noname_12);\n            }\n            puVar5[6] = iVar6;\n            noname_3 = puVar5 + 3;\n            *noname_3 = puVar5[9];\n            *in_stack_ffffffc8 = 0;\n            iVar6 = fcn.004763d0(noname_0, noname_1, param_4, noname_3, in_stack_ffffffe0, unaff_EDI, unaff_ESI, \n                                 unaff_EBP, unaff_EBX, arg_20h, in_stack_ffffffc8, iVar8, noname_12, noname_13, \n                                 in_stack_ffffffd8, in_stack_ffffffdc, in_stack_ffffffe0, in_stack_ffffffe4, \n                                 in_stack_ffffffe8, in_stack_ffffffec, in_stack_fffffff0, in_stack_fffffff4, \n                                 in_stack_fffffff8, in_stack_fffffffc, unaff_retaddr, param_1, param_2, param_3, param_4\n                                 , param_5, param_6, param_7, param_8, param_9, param_10, param_11, param_12, param_13, \n                                 param_14, param_15, param_16, param_17, param_18, param_19, param_20, param_21, \n                                 param_22, param_23, param_24, param_25, param_26, param_27, param_28, param_29, \n                                 param_30, param_31, param_32, param_33, param_34, param_35, param_36, param_37, \n                                 param_38, param_39, param_40, param_41, param_42, param_43, param_44, param_45, \n                                 param_46, param_47, param_48, param_49, param_50, param_51, param_52, param_53, \n                                 param_54, param_55, param_56, param_57, param_58, param_59, param_60, param_61, \n                                 param_62, param_63, param_64, param_65, param_66, param_67, param_68, param_69, \n                                 param_70, param_71, param_72, param_73, param_74, param_75, param_76, param_77, \n                                 param_78, param_79, param_80, param_81, param_82, param_83, param_84, param_85, \n                                 param_86, param_87, param_88, param_89, param_90, param_91, param_92);\n            if (iVar6 != 0) {\n                return iVar6;\n            }\n            if (noname_0[0xd] == NULL) {\n                if (noname_0[0x14] != 0) {\n                    fcn.00473640(param_4);\n                }\n                fcn.00473be0();\n            }\n            else {\n                (*noname_0[0xd])(noname_0[1], *noname_3, noname_0[0x62]);\n                fcn.00473be0();\n            }\n            break;\n        case 3:\n        case 4:\n            piVar16 = NULL;\n            param_1 = CONCAT31(Var14, 1);\n            (**(noname_1 + 0x20))(noname_1, *(noname_1 + 0x44) + param_4);\n            iVar4 = fcn.00474d10();\n            if (iVar4 == 0) {\n                return 1;\n            }\n            noname_0[0x6c] = noname_0[0x6b];\n            iVar8 = fcn.004763d0(noname_0, noname_1, param_4, &stack0xffffffe8, &stack0xffffffd0, unaff_EDI, unaff_ESI, \n                                 unaff_EBP, unaff_EBX, arg_20h, in_stack_ffffffc8, iVar6, piVar16, noname_13, \n                                 in_stack_ffffffd8, in_stack_ffffffdc, in_stack_ffffffe0, in_stack_ffffffe4, iVar4, \n                                 in_stack_ffffffec, in_stack_fffffff0, in_stack_fffffff4, in_stack_fffffff8, \n                                 in_stack_fffffffc, unaff_retaddr, param_1, param_2, param_3, param_4, param_5, param_6\n                                 , param_7, param_8, param_9, param_10, param_11, param_12, param_13, param_14, param_15\n                                 , param_16, param_17, param_18, param_19, param_20, param_21, param_22, param_23, \n                                 param_24, param_25, param_26, param_27, param_28, param_29, param_30, param_31, \n                                 param_32, param_33, param_34, param_35, param_36, param_37, param_38, param_39, \n                                 param_40, param_41, param_42, param_43, param_44, param_45, param_46, param_47, \n                                 param_48, param_49, param_50, param_51, param_52, param_53, param_54, param_55, \n                                 param_56, param_57, param_58, param_59, param_60, param_61, param_62, param_63, \n                                 param_64, param_65, param_66, param_67, param_68, param_69, param_70, param_71, \n                                 param_72, param_73, param_74, param_75, param_76, param_77, param_78, param_79, \n                                 param_80, param_81, param_82, param_83, param_84, param_85, param_86, param_87, \n                                 param_88, param_89, param_90, param_91, param_92);\n            if (iVar8 != 0) {\n                return iVar8;\n            }\n            noname_0[0x6c] = noname_0[0x6b];\n            in_stack_ffffffe8 = iVar4;\n            if (noname_0[0xd] == NULL) {\n            }\n            else {\n                (*noname_0[0xd])(noname_0[1], iVar4, noname_0[0x62]);\n                cVar3 = '\\0';\n            }\n            if (noname_0[0xe] == 0) {\n                if ((cVar3 != '\\0') && (noname_0[0x14] != 0)) {\n                    fcn.00473640(param_4);\n                }\n            }\n            else {\n                if (noname_0[0xd] != 0) {\n                    *arg_20h = *noname_13;\n                }\n                (*noname_0[0xe])(noname_0[1], iVar4);\n            }\n            fcn.00473be0();\n            iVar8 = iVar6;\n            while (piVar16 != NULL) {\n                if (noname_0[0x1a] != NULL) {\n                    (*noname_0[0x1a])(noname_0[1], **piVar16);\n                }\n                piVar11 = piVar16[1];\n                piVar16[1] = noname_0[0x5e];\n                noname_0[0x5e] = piVar16;\n                *(*piVar16 + 4) = piVar16[2];\n                piVar16 = piVar11;\n            }\n            iVar4 = noname_0[0x4e];\n            goto joined_r0x004773f5;\n        case 5:\n            if (noname_0[0x4e] == param_2) {\n                return 0xd;\n            }\n            puVar5 = noname_0[0x5b];\n            noname_0[0x5b] = *puVar5;\n            *puVar5 = noname_0[0x5c];\n            noname_0[0x5c] = puVar5;\n            piVar16 = param_4 + *(noname_1 + 0x44) * 2;\n            param_1 = puVar5;\n            in_stack_ffffffe0 = piVar16;\n            uVar7 = (**(noname_1 + 0x20))(noname_1, piVar16);\n            if (uVar7 != puVar5[2]) goto code_r0x00477780;\n            piVar11 = puVar5[1];\n            for (; 3 < uVar7; uVar7 = uVar7 - 4) {\n                if (*piVar11 != *piVar16) goto code_r0x00477289;\n                piVar16 = piVar16 + 1;\n                piVar11 = piVar11 + 1;\n            }\n            if (uVar7 == 0) {\ncode_r0x004772ee:\n                iVar8 = 0;\n            }\n            else {\ncode_r0x00477289:\n                iVar4 = *piVar11 - *piVar16;\n                puVar5 = param_1;\n                if (iVar4 == 0) {\n                    if (uVar7 == 1) goto code_r0x004772ee;\n                    iVar4 = *(piVar11 + 1) - *(piVar16 + 1);\n                    if (iVar4 == 0) {\n                        if (uVar7 == 2) goto code_r0x004772ee;\n                        iVar4 = *(piVar11 + 2) - *(piVar16 + 2);\n                        if (iVar4 == 0) {\n                            if ((uVar7 == 3) || (iVar4 = *(piVar11 + 3) - *(piVar16 + 3),  iVar4 == 0))\n                            goto code_r0x004772ee;\n                        }\n                    }\n                }\n                iVar8 = 1;\n                if (iVar4 < 1) {\n                    iVar8 = -1;\n                }\n            }\n            piVar16 = in_stack_ffffffe0;\n            if (iVar8 != 0) {\ncode_r0x00477780:\n                *arg_20h = piVar16;\n                return 7;\n            }\n            noname_0[0x4e] = noname_0[0x4e] + -1;\n            if (noname_0[0xe] == 0) {\n                if (noname_0[0x14] != 0) {\n                    fcn.00473640(param_4);\n                }\n            }\n            else {\n                piVar12 = puVar5[4];\n                if ((*(noname_0 + 0x3b) != '\\0') && (piVar12 != NULL)) {\n                    piVar9 = puVar5[3] + puVar5[7] * 2;\n                    iVar1 = *piVar12;\n                    while (iVar1 != 0) {\n                        piVar12 = piVar12 + 1;\n                        *piVar9 = iVar1;\n                        piVar9 = piVar9 + 1;\n                        iVar1 = *piVar12;\n                    }\n                    piVar12 = puVar5[5];\n                    if ((*(noname_0 + 0xed) != '\\0') && (piVar12 != NULL)) {\n                        *piVar9 = *(noname_0 + 0x76);\n                        iVar1 = *piVar12;\n                        while (piVar9 = piVar9 + 1,  iVar1 != 0) {\n                            piVar12 = piVar12 + 1;\n                            *piVar9 = iVar1;\n                            iVar1 = *piVar12;\n                        }\n                    }\n                    *piVar9 = 0;\n                }\n                (*noname_0[0xe])(noname_0[1], puVar5[3]);\n            }\n            iVar4 = puVar5[0xb];\n            while (iVar4 != 0) {\n                piVar16 = puVar5[0xb];\n                if (noname_0[0x1a] != NULL) {\n                    (*noname_0[0x1a])(noname_0[1], **piVar16);\n                }\n                puVar5[0xb] = *(puVar5[0xb] + 4);\n                piVar16[1] = noname_0[0x5e];\n                noname_0[0x5e] = piVar16;\n                *(*piVar16 + 4) = piVar16[2];\n                iVar4 = puVar5[0xb];\n            }\n            iVar4 = noname_0[0x4e];\n            iVar8 = iVar6;\njoined_r0x004773f5:\n            if (iVar4 == 0) {\n                iVar6 = fcn.00476160(noname_0, param_3, param_5, param_6);\n                return iVar6;\n            }\n            break;\n        case 6:\n            pcVar2 = noname_0[0xf];\n            if (pcVar2 == NULL) {\ncode_r0x00477466:\n                iVar4 = noname_0[0x14];\n                goto joined_r0x004775de;\n            }\n            if ((*(noname_1 + 0x49) == '\\0') || ((param_4 & 1) != 0)) {\n                param_1 = noname_0[0xb];\n                (**(noname_1 + 0x40))(noname_1, &stack0x00000010, param_3, &stack0x00000004, noname_0[0xc]);\n                *ppiVar13 = param_4;\n                (*pcVar2)(noname_0[1], noname_0[0xb], param_1 - noname_0[0xb] >> 1);\n                iVar8 = iVar6;\n                if (param_4 != param_3) {\n                    do {\n                        *arg_20h = param_4;\n                        param_1 = noname_0[0xb];\n                        (**(noname_1 + 0x40))(noname_1, &stack0x00000010, param_3, &stack0x00000004, noname_0[0xc]);\n                        *ppiVar13 = param_4;\n                        (*pcVar2)(noname_0[1], noname_0[0xb], param_1 - noname_0[0xb] >> 1);\n                    } while (param_4 != param_3);\n                }\n            }\n            else {\n                (*pcVar2)(noname_0[1], param_4, param_3 - param_4 >> 1);\n                iVar8 = iVar6;\n            }\n            break;\n        case 7:\n            if (noname_0[0xf] == NULL) goto code_r0x00477466;\n            param_1 = 0xa;\n            (*noname_0[0xf])(noname_0[1], &stack0x00000004, 1);\n            iVar8 = iVar6;\n            break;\n        case 8:\n            if (noname_0[0x12] == NULL) {\n                if (noname_0[0x14] != 0) {\n                    fcn.00473640(param_4);\n                }\n            }\n            else {\n                (*noname_0[0x12])(noname_0[1]);\n            }\n            iVar4 = fcn.00474170(&stack0x0000000c, piVar16, param_6, param_7);\n            if (iVar4 != 0) {\n                return iVar4;\n            }\n            iVar8 = iVar6;\n            if (param_3 == NULL) {\n                noname_0[0x46] = 0x475030;\n                return 0;\n            }\n            break;\n        case 9:\n            in_stack_ffffffd8 =\n                 (**(noname_1 + 0x30))(noname_1, *(noname_1 + 0x44) + param_4, param_3 - *(noname_1 + 0x44));\n            in_stack_ffffffd8 = in_stack_ffffffd8 & 0xffff;\n            if (in_stack_ffffffd8 == 0) {\n                param_1 = fcn.00474d10();\n                if (param_1 == NULL) {\n                    return 1;\n                }\n                iVar8 = iVar6;\n                puVar5 = fcn.00473880(param_1, 0);\n                *(iVar6 + 0x5c) = *(iVar6 + 0x60);\n                if ((*(iVar6 + 0x81) == '\\0') || (*(iVar6 + 0x82) != '\\0')) {\n                    if (puVar5 == NULL) {\n                        return 0xb;\n                    }\n                    if (*(puVar5 + 0x22) == '\\0') {\n                        return 0x18;\n                    }\n                }\n                else if (puVar5 == NULL) {\n                    if (noname_0[0x1e] == NULL) goto code_r0x00476db2;\n                    (*noname_0[0x1e])(noname_0[1], param_1, 0);\n                    break;\n                }\n                if (*(puVar5 + 8) != '\\0') {\n                    return 0xc;\n                }\n                if (puVar5[7] != 0) {\n                    return 0xf;\n                }\n                if (puVar5[1] == 0) {\n                    if (noname_0[0x1c] == 0) goto code_r0x00476efa;\n                    *(puVar5 + 8) = 1;\n                    iVar6 = fcn.00474780();\n                    *(puVar5 + 8) = 0;\n                    if (iVar6 == 0) {\n                        return 1;\n                    }\n                    iVar6 = (*noname_0[0x1c])(noname_0[0x1d], iVar6, puVar5[5], puVar5[4], puVar5[6]);\n                    if (iVar6 == 0) {\n                        return 0x15;\n                    }\n                    noname_0[0x6b] = noname_0[0x6c];\n                }\n                else if (*(noname_0 + 0x4d) == '\\0') {\n                    if (noname_0[0x1e] == NULL) goto code_r0x00476db2;\n                    (*noname_0[0x1e])(noname_0[1], *puVar5, 0);\n                }\n                else {\n                    iVar6 = fcn.004734b0(puVar5, 0, unaff_EDI, unaff_ESI, unaff_EBP, unaff_EBX, arg_20h);\n                    if (iVar6 != 0) {\n                        return iVar6;\n                    }\n                }\n            }\n            else {\n                iVar8 = iVar6;\n                if (noname_0[0xf] == NULL) {\ncode_r0x00476db2:\n                    iVar4 = noname_0[0x14];\n                    iVar6 = iVar8;\n                    goto joined_r0x004775de;\n                }\n                (*noname_0[0xf])(noname_0[1], &stack0xffffffd8, 1);\n                iVar8 = iVar6;\n            }\n            break;\n        case 10:\n            iVar4 = (**(noname_1 + 0x2c))(noname_1, param_4);\n            if (iVar4 < 0) {\n                return 0xe;\n            }\n            iVar8 = iVar6;\n            if (noname_0[0xf] == 0) {\ncode_r0x00476efa:\n                iVar4 = noname_0[0x14];\n                iVar6 = iVar8;\n                goto joined_r0x004775de;\n            }\n            uVar10 = fcn.00483720(iVar4, &stack0xffffffe4);\n            (*noname_0[0xf])(noname_0[1], &stack0xffffffe4, uVar10);\n            iVar8 = iVar6;\n            break;\n        case 0xb:\n            iVar4 = fcn.00475bb0(param_4, param_3);\n            iVar8 = iVar6;\n            goto joined_r0x004775d2;\n        case 0xc:\n            return 0x11;\n        case 0xd:\n            iVar4 = fcn.00475c80(noname_0);\n            iVar8 = iVar6;\njoined_r0x004775d2:\n            if (iVar4 == 0) {\n                return 1;\n            }\n            break;\n        case -5:\n            if (cVar15 == '\\0') {\n                if (noname_0[0xf] == NULL) {\n                    if (noname_0[0x14] != 0) {\n                        fcn.00473640(param_4);\n                    }\n                }\n                else if ((*(noname_1 + 0x49) == '\\0') || ((param_4 & 1) != 0)) {\n                    param_1 = noname_0[0xb];\n                    (**(noname_1 + 0x40))(noname_1, &stack0x00000010, piVar16, &stack0x00000004, noname_0[0xc]);\n                    (*noname_0[0xf])(noname_0[1], noname_0[0xb], param_1 - noname_0[0xb] >> 1);\n                }\n                else {\n                    (*noname_0[0xf])(noname_0[1], param_4, piVar16 - param_4 >> 1);\n                }\n                if (param_2 == 0) {\n                    *arg_20h = piVar16;\n                    return 3;\n                }\n                if (noname_0[0x4e] != param_2) {\n                    *arg_20h = piVar16;\n                    return 0xd;\n                }\n                goto code_r0x00477682;\n            }\n            goto code_r0x00477625;\n        case -4:\n            if (cVar15 != '\\0') {\n                *param_6 = param_4;\n                return 0;\n            }\n            if (param_2 < 1) {\n                return 3;\n            }\n            if (noname_0[0x4e] != param_2) {\n                return 0xd;\n            }\n            goto code_r0x00477625;\n        case -3:\n            if (cVar15 == '\\0') {\n                *ppiVar13 = piVar16;\n                if (noname_0[0xf] == NULL) {\n                    if (noname_0[0x14] != 0) {\n                        fcn.00473640(param_4);\n                    }\n                }\n                else {\n                    param_1 = 0xa;\n                    (*noname_0[0xf])(noname_0[1], &stack0x00000004, 1);\n                }\n                if (param_2 == 0) {\n                    return 3;\n                }\n                if (noname_0[0x4e] != param_2) {\n                    return 0xd;\n                }\ncode_r0x00477682:\n                *param_6 = piVar16;\n                return 0;\n            }\n            goto code_r0x00477625;\n        case -2:\n            if (cVar15 != '\\0') {\n                *param_6 = param_4;\n                return 0;\n            }\n            return 6;\n        case -1:\n            if (cVar15 == '\\0') {\n                return 5;\n            }\n            goto code_r0x00477625;\n        }\ncode_r0x004775ef:\n        param_4 = param_3;\n        *arg_20h = param_3;\n        if (noname_0[0x78] == 2) {\n            return 0x23;\n        }\n        iVar6 = iVar8;\n        ppiVar13 = noname_13;\n    } while (noname_0[0x78] != 3);\ncode_r0x00477625:\n    *param_6 = param_4;\n    return 0;\n}\n",
        "token_count": 7277
    },
    "004778c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.004778c0(int32_t param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = fcn.00476cf0(param_1, 0, *(param_1 + 0x90), param_2, param_3, param_4, \n                         in_EAX & 0xffffff00 | *(param_1 + 0x1e4) == '\\0');\n    if ((iVar2 == 0) && (cVar1 = fcn.00473060(param_1),  cVar1 == '\\0')) {\n        return 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 170
    },
    "00479170": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00479170(int32_t param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint32_t extraout_ECX;\n    \n    uVar2 = param_3;\n    uVar1 = param_2;\n    uVar3 = (***(param_1 + 0x90))(*(param_1 + 0x90), param_2, param_3, &param_2);\n    fcn.00477910(param_1, *(param_1 + 0x90), uVar1, uVar2, uVar3, param_2, param_4, \n                 extraout_ECX & 0xffffff00 | *(param_1 + 0x1e4) == '\\0');\n    return;\n}\n",
        "token_count": 189
    },
    "004796f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.004796f0(uint param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7, \n                    uint param_8, uint param_9, uint param_10, uint param_11, uint param_12, uint param_13, \n                    uint param_14, uint param_15, uint param_16, uint param_17, uint param_18, uint param_19, \n                    uint param_20, uint param_21, uint param_22, uint param_23, uint param_24, uint param_25, \n                    uint param_26, uint param_27, uint param_28, uint param_29, uint param_30, uint param_31, \n                    uint param_32, uint param_33, uint param_34, uint param_35, uint param_36, uint param_37, \n                    uint param_38, uint param_39, uint param_40, uint param_41, uint param_42, uint param_43, \n                    uint param_44, uint param_45, uint param_46, uint param_47, uint param_48, uint param_49, \n                    uint param_50, uint param_51, uint param_52, uint param_53, uint param_54, uint param_55, \n                    uint param_56, uint param_57, uint param_58, uint param_59, uint param_60, uint param_61, \n                    uint param_62, uint param_63, uint param_64, uint param_65, uint param_66, uint param_67, \n                    uint param_68, uint param_69, uint param_70, uint param_71, uint param_72, uint param_73, \n                    uint param_74, uint param_75, uint param_76, uint param_77, uint param_78, uint param_79, \n                    uint param_80, uint param_81, uint param_82, uint param_83, uint param_84, uint param_85, \n                    uint param_86, uint param_87, uint param_88, uint param_89, uint param_90, uint param_91, \n                    uint param_92, uint param_93, uint param_94, uint param_95, uint param_96, uint param_97, \n                    uint param_98, uint param_99, uint param_100, uint param_101, uint param_102, uint param_103, \n                    uint param_104)\n\n{\n    char cVar1;\n    int32_t noname_0;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    \n    noname_0 = fcn.00479500(param_1, param_3, 0);\n    if ((noname_0 != 0) && (*(noname_0 + 0xec) != '\\0')) {\n        cVar1 = fcn.00475ee0(noname_0, unaff_ESI, unaff_retaddr, param_1, param_2, param_3, param_4, param_5, param_6, \n                             param_7, param_8, param_9, param_10, param_11, param_12, param_13, param_14, param_15, \n                             param_16, param_17, param_18, param_19, param_20, param_21, param_22, param_23, param_24, \n                             param_25, param_26, param_27, param_28, param_29, param_30, param_31, param_32, param_33, \n                             param_34, param_35, param_36, param_37, param_38, param_39, param_40, param_41, param_42, \n                             param_43, param_44, param_45, param_46, param_47, param_48, param_49, param_50, param_51, \n                             param_52, param_53, param_54, param_55, param_56, param_57, param_58, param_59, param_60, \n                             param_61, param_62, param_63, param_64, param_65, param_66, param_67, param_68, param_69, \n                             param_70, param_71, param_72, param_73, param_74, param_75, param_76, param_77, param_78, \n                             param_79, param_80, param_81, param_82, param_83, param_84, param_85, param_86, param_87, \n                             param_88, param_89, param_90, param_91, param_92, param_93, param_94, param_95, param_96, \n                             param_97, param_98, param_99, param_100, param_101, param_102, param_103, param_104);\n        if (cVar1 == '\\0') {\n            fcn.00474dc0(noname_0);\n            return 0;\n        }\n    }\n    return noname_0;\n}\n",
        "token_count": 1152
    },
    "0047a480": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0047a480(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint8_t *in_EAX;\n    uint8_t *unaff_ESI;\n    uint8_t **unaff_EDI;\n    \n    if (in_EAX != unaff_ESI) {\n        if (1 < *(*in_EAX + 0x4c + param_2) - 0x18U) {\ncode_r0x0047a4ca:\n            *unaff_EDI = in_EAX;\n            return 0;\n        }\n        for (in_EAX = in_EAX + 1; in_EAX != unaff_ESI; in_EAX = in_EAX + 1) {\n            cVar1 = *(*in_EAX + 0x4c + param_2);\n            if (cVar1 == '\\x12') {\n                *unaff_EDI = in_EAX + 1;\n                return 10;\n            }\n            if (1 < cVar1 - 0x18U) goto code_r0x0047a4ca;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 254
    },
    "0047a750": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0047a750(uint8_t *param_1, uint8_t *param_2, uint8_t **param_3)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t *puVar3;\n    uint8_t **ppuVar4;\n    int32_t in_EAX;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    bool bVar9;\n    \n    puVar3 = param_2;\n    bVar9 = param_1 == param_2;\n    param_2 = NULL;\n    puVar7 = param_1;\n    if (bVar9) {\n        return -1;\n    }\ncode_r0x0047a784:\n    ppuVar4 = param_3;\n    puVar6 = puVar7;\n    // switch table (25 cases) at 0x47ab74\n    switch(*(*puVar7 + 0x4c + in_EAX)) {\n    case 5:\n        if (puVar3 - puVar7 < 2) {\n            return -2;\n        }\n        iVar5 = (**(in_EAX + 0x14c))();\n        if (iVar5 == 0) goto code_r0x0047a907;\n        puVar7 = puVar7 + 2;\n        break;\n    case 6:\n        if (puVar3 - puVar7 < 3) {\n            return -2;\n        }\n        iVar5 = (**(in_EAX + 0x150))();\n        if (iVar5 == 0) goto code_r0x0047a907;\n        puVar7 = puVar7 + 3;\n        break;\n    case 7:\n        if (puVar3 - puVar7 < 4) {\n            return -2;\n        }\n        iVar5 = (**(in_EAX + 0x154))();\njoined_r0x0047a8d1:\n        if (iVar5 == 0) {\n            *ppuVar4 = puVar6;\n            return 0;\n        }\ncode_r0x0047aae2:\n        puVar7 = puVar6 + 4;\n        break;\n    default:\ncode_r0x0047a907:\n        *ppuVar4 = puVar6;\n        return 0;\n    case 9:\n    case 10:\n    case 0x15:\n        while( true ) {\n            puVar7 = puVar7 + 1;\n            if (puVar7 == puVar3) {\n                return -1;\n            }\n            uVar1 = *(*puVar7 + 0x4c + in_EAX);\n            if (uVar1 == 0xe) break;\n            puVar6 = puVar7;\n            if ((uVar1 < 9) || ((10 < uVar1 && (uVar1 != 0x15)))) goto code_r0x0047a907;\n        }\n    case 0xe:\n        param_1 = puVar7;\n        param_2 = NULL;\n        while( true ) {\n            param_1 = param_1 + 1;\n            if (param_1 == puVar3) {\n                return -1;\n            }\n            uVar1 = *(*param_1 + 0x4c + in_EAX);\n            if ((uVar1 == 0xc) || (uVar1 == 0xd)) break;\n            if ((uVar1 < 9) || ((10 < uVar1 && (uVar1 != 0x15)))) {\n                *param_3 = param_1;\n                return 0;\n            }\n        }\ncode_r0x0047a959:\n        param_1 = param_1 + 1;\n        do {\n            puVar6 = param_1;\n            if (param_1 == puVar3) {\n                return -1;\n            }\n            uVar2 = *(*param_1 + 0x4c + in_EAX);\n            if (uVar2 == uVar1) {\n                puVar6 = param_1 + 1;\n                if (puVar6 == puVar3) {\n                    return -1;\n                }\n                puVar8 = puVar6;\n    // switch table (13 cases) at 0x47ac0c\n                switch(*(*puVar6 + 0x4c + in_EAX)) {\n                case 9:\n                case 10:\n                case 0x15:\n                    goto code_r0x0047aa50;\n                case 0xb:\n                    goto code_r0x0047ab22;\n                default:\n                    goto code_r0x0047ab4f;\n                case 0x11:\n                    goto code_r0x0047aaff;\n                }\n            }\n    // switch table (9 cases) at 0x47abe8\n            switch(uVar2) {\n            case 0:\n            case 1:\n            case 8:\n                goto code_r0x0047ab35;\n            case 2:\n                goto code_r0x0047ab42;\n            case 3:\n                iVar5 = fcn.0047a540(puVar3, &param_1);\n                if (iVar5 < 1) {\n                    if (iVar5 == 0) {\n                        *param_3 = param_1;\n                        return 0;\n                    }\n                    return iVar5;\n                }\n                break;\n            default:\n                goto code_r0x0047a959;\n            case 5:\n                if (puVar3 - param_1 < 2) {\n                    return -2;\n                }\n                iVar5 = (**(in_EAX + 0x164))();\n                if (iVar5 != 0) goto code_r0x0047ab35;\n                param_1 = puVar6 + 2;\n                break;\n            case 6:\n                if (puVar3 - param_1 < 3) {\n                    return -2;\n                }\n                iVar5 = (**(in_EAX + 0x168))();\n                if (iVar5 != 0) goto code_r0x0047ab42;\n                param_1 = puVar6 + 3;\n                break;\n            case 7:\n                if (puVar3 - param_1 < 4) {\n                    return -2;\n                }\n                iVar5 = (**(in_EAX + 0x16c))();\n                if (iVar5 != 0) goto code_r0x0047ab4f;\n                param_1 = puVar6 + 4;\n            }\n        } while( true );\n    case 0x16:\n    case 0x18:\n    case 0x19:\n    case 0x1a:\n    case 0x1b:\ncode_r0x0047aa7d:\n        puVar7 = puVar6 + 1;\n        break;\n    case 0x17:\n        if (param_2 != NULL) goto code_r0x0047a907;\n        puVar6 = puVar7 + 1;\n        param_2 = 0x1;\n        if (puVar6 == puVar3) {\n            return -1;\n        }\n    // switch table (25 cases) at 0x47abb4\n        switch(*(*puVar6 + 0x4c + in_EAX)) {\n        case 5:\n            if (puVar3 - puVar6 < 2) {\n                return -2;\n            }\n            iVar5 = (**(in_EAX + 0x158))();\n            if (iVar5 == 0) goto code_r0x0047a907;\n            puVar7 = puVar7 + 3;\n            break;\n        case 6:\n            if (puVar3 - puVar6 < 3) {\n                return -2;\n            }\n            iVar5 = (**(in_EAX + 0x15c))();\n            if (iVar5 == 0) goto code_r0x0047a907;\n            puVar7 = puVar7 + 4;\n            break;\n        case 7:\n            if (puVar3 - puVar6 < 4) {\n                return -2;\n            }\n            iVar5 = (**(in_EAX + 0x160))();\n            goto joined_r0x0047a8d1;\n        default:\n            goto code_r0x0047a907;\n        case 0x16:\n        case 0x18:\n            goto code_r0x0047aa7d;\n        }\n    }\n    goto code_r0x0047aae5;\n    do {\n        puVar8 = puVar6;\n    // switch table (25 cases) at 0x47ac2c\n        switch(*(*puVar6 + 0x4c + in_EAX)) {\n        case 5:\n            goto code_r0x0047aa82;\n        case 6:\n            if (puVar3 - puVar6 < 3) {\n                return -2;\n            }\n            iVar5 = (**(in_EAX + 0x15c))();\n            if (iVar5 == 0) goto code_r0x0047ab4f;\n            puVar7 = puVar7 + 4;\n            goto code_r0x0047aae5;\n        case 7:\n            if (puVar3 - puVar6 < 4) {\n                return -2;\n            }\n            iVar5 = (**(in_EAX + 0x160))();\n            if (iVar5 != 0) goto code_r0x0047aae2;\n            goto code_r0x0047ab35;\n        default:\n            goto code_r0x0047ab42;\n        case 9:\n        case 10:\n        case 0x15:\ncode_r0x0047aa50:\n            puVar7 = puVar6;\n            puVar6 = puVar7 + 1;\n            if (puVar6 == puVar3) {\n                return -1;\n            }\n            break;\n        case 0xb:\n            goto code_r0x0047ab22;\n        case 0x11:\n            goto code_r0x0047aaff;\n        case 0x16:\n        case 0x18:\n            goto code_r0x0047aa7d;\n        case 0x1d:\n            goto code_r0x0047ab35;\n        }\n    } while( true );\ncode_r0x0047aa82:\n    if (puVar3 - puVar6 < 2) {\n        return -2;\n    }\n    iVar5 = (**(in_EAX + 0x158))();\n    if (iVar5 == 0) {\ncode_r0x0047ab42:\n        *param_3 = puVar6;\n        return 0;\n    }\n    puVar7 = puVar7 + 3;\ncode_r0x0047aae5:\n    if (puVar7 == puVar3) {\n        return -1;\n    }\n    goto code_r0x0047a784;\ncode_r0x0047ab22:\n    *param_3 = puVar6 + 1;\n    return 1;\ncode_r0x0047ab35:\n    *param_3 = puVar6;\n    return 0;\ncode_r0x0047aaff:\n    puVar6 = puVar8 + 1;\n    if (puVar6 == puVar3) {\n        return -1;\n    }\n    if (*puVar6 == 0x3e) {\n        *param_3 = puVar8 + 2;\n        return 3;\n    }\ncode_r0x0047ab4f:\n    *param_3 = puVar6;\n    return 0;\n}\n",
        "token_count": 2558
    },
    "0047ac70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0047ac70(uint8_t *param_1, int32_t param_2, uint8_t **param_3)\n\n{\n    char cVar1;\n    bool bVar2;\n    uint8_t *in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    \n    if (param_1 == in_EAX) {\n        return 0xffffffff;\n    }\n    // switch table (25 cases) at 0x47b030\n    switch(*(*param_1 + 0x4c + param_2)) {\n    case 5:\n        if (in_EAX - param_1 < 2) {\n            return 0xfffffffe;\n        }\n        iVar4 = (**(param_2 + 0x158))(param_2, param_1);\n        if (iVar4 == 0) goto code_r0x0047b024;\n        param_1 = param_1 + 2;\n        break;\n    case 6:\n        if (in_EAX - param_1 < 3) {\n            return 0xfffffffe;\n        }\n        iVar4 = (**(param_2 + 0x15c))(param_2, param_1);\n        if (iVar4 == 0) goto code_r0x0047b024;\n        param_1 = param_1 + 3;\n        break;\n    case 7:\n        if (in_EAX - param_1 < 4) {\n            return 0xfffffffe;\n        }\n        iVar4 = (**(param_2 + 0x160))(param_2, param_1);\n        if (iVar4 == 0) goto code_r0x0047b024;\n        param_1 = param_1 + 4;\n        break;\n    case 0xf:\n        uVar3 = fcn.00479c60();\n        return uVar3;\n    case 0x10:\n        param_1 = param_1 + 1;\n        if (param_1 == in_EAX) {\n            return 0xffffffff;\n        }\n        cVar1 = *(*param_1 + 0x4c + param_2);\n        if (cVar1 == '\\x14') {\n            uVar3 = fcn.00479fa0();\n            return uVar3;\n        }\n        if (cVar1 == '\\x1b') {\n            uVar3 = fcn.00479990();\n            return uVar3;\n        }\n    default:\ncode_r0x0047b024:\n        *param_3 = param_1;\n        return 0;\n    case 0x11:\n        uVar3 = fcn.0047a210();\n        return uVar3;\n    case 0x16:\n    case 0x18:\n        param_1 = param_1 + 1;\n    }\n    bVar2 = false;\n    if (param_1 == in_EAX) {\n        return 0xffffffff;\n    }\n    iVar4 = in_EAX - param_1;\n    do {\n        iVar5 = iVar4;\n        puVar6 = param_1;\n        puVar7 = param_1;\n    // switch table (25 cases) at 0x47b070\n        switch(*(*param_1 + 0x4c + param_2)) {\n        case 5:\n            if (iVar4 < 2) {\n                return 0xfffffffe;\n            }\n            iVar5 = (**(param_2 + 0x14c))(param_2, param_1);\n            if (iVar5 == 0) goto code_r0x0047ae98;\n            param_1 = param_1 + 2;\n            iVar4 = iVar4 + -2;\n            break;\n        case 6:\n            if (iVar4 < 3) {\n                return 0xfffffffe;\n            }\n            iVar5 = (**(param_2 + 0x150))(param_2, param_1);\n            if (iVar5 == 0) goto code_r0x0047aea6;\n            param_1 = param_1 + 3;\n            iVar4 = iVar4 + -3;\n            break;\n        case 7:\n            if (iVar4 < 4) {\n                return 0xfffffffe;\n            }\n            iVar4 = (**(param_2 + 0x154))(param_2, param_1);\n            if (iVar4 == 0) goto code_r0x0047adce;\ncode_r0x0047ae81:\n            param_1 = puVar6 + 4;\n            iVar4 = iVar5 + -4;\n            break;\n        default:\n            goto code_r0x0047adce;\n        case 9:\n        case 10:\n        case 0x15:\n            puVar6 = param_1 + 1;\n            if (puVar6 == in_EAX) {\n                return 0xffffffff;\n            }\n            goto code_r0x0047aec0;\n        case 0xb:\n            goto code_r0x0047af7d;\n        case 0x11:\n            goto code_r0x0047af91;\n        case 0x16:\n        case 0x18:\n        case 0x19:\n        case 0x1a:\n        case 0x1b:\ncode_r0x0047ae1b:\n            param_1 = puVar6 + 1;\n            iVar4 = iVar5 + -1;\n            break;\n        case 0x17:\n            if (bVar2) goto code_r0x0047ae98;\n            puVar6 = param_1 + 1;\n            iVar5 = iVar4 + -1;\n            bVar2 = true;\n            if (puVar6 == in_EAX) {\n                return 0xffffffff;\n            }\n    // switch table (25 cases) at 0x47b0b4\n            switch(*(*puVar6 + 0x4c + param_2)) {\n            case 5:\n                if (iVar5 < 2) {\n                    return 0xfffffffe;\n                }\n                iVar5 = (**(param_2 + 0x158))(param_2, puVar6);\n                if (iVar5 == 0) goto code_r0x0047adce;\n                param_1 = param_1 + 3;\n                iVar4 = iVar4 + -3;\n                break;\n            case 6:\n                if (iVar5 < 3) {\n                    return 0xfffffffe;\n                }\n                iVar5 = (**(param_2 + 0x15c))(param_2, puVar6);\n                puVar7 = puVar6;\n                if (iVar5 == 0) goto code_r0x0047ae98;\n                param_1 = param_1 + 4;\n                iVar4 = iVar4 + -4;\n                break;\n            case 7:\n                if (iVar5 < 4) {\n                    return 0xfffffffe;\n                }\n                iVar4 = (**(param_2 + 0x160))(param_2, puVar6);\n                if (iVar4 != 0) goto code_r0x0047ae81;\n                goto code_r0x0047aea6;\n            default:\n                goto code_r0x0047adce;\n            case 0x16:\n            case 0x18:\n                goto code_r0x0047ae1b;\n            case 0x1d:\n                goto code_r0x0047aea6;\n            }\n        }\n        if (param_1 == in_EAX) {\n            return 0xffffffff;\n        }\n    } while( true );\ncode_r0x0047aede:\n    puVar6 = puVar6 + 1;\n    if (puVar6 == in_EAX) {\n        return 0xffffffff;\n    }\ncode_r0x0047aec0:\n    // switch table (25 cases) at 0x47b0e8\n    switch(*(*puVar6 + 0x4c + param_2)) {\n    case 5:\n        if (in_EAX - puVar6 < 2) {\n            return 0xfffffffe;\n        }\n        iVar4 = (**(param_2 + 0x158))(param_2, puVar6);\n        if (iVar4 == 0) goto code_r0x0047adce;\n        puVar6 = puVar6 + 2;\n        break;\n    case 6:\n        if (in_EAX - puVar6 < 3) {\n            return 0xfffffffe;\n        }\n        iVar4 = (**(param_2 + 0x15c))(param_2, puVar6);\n        if (iVar4 == 0) goto code_r0x0047adce;\n        puVar6 = puVar6 + 3;\n        break;\n    case 7:\n        if (in_EAX - puVar6 < 4) {\n            return 0xfffffffe;\n        }\n        iVar4 = (**(param_2 + 0x160))(param_2, puVar6);\n        if (iVar4 == 0) goto code_r0x0047adce;\n        puVar6 = puVar6 + 4;\n        break;\n    default:\ncode_r0x0047aea6:\n        *param_3 = puVar6;\n        return 0;\n    case 9:\n    case 10:\n    case 0x15:\n        goto code_r0x0047aede;\n    case 0xb:\ncode_r0x0047af7d:\n        *param_3 = puVar6 + 1;\n        return 2;\n    case 0x11:\ncode_r0x0047af91:\n        puVar7 = puVar6 + 1;\n        if (puVar7 == in_EAX) {\n            return 0xffffffff;\n        }\n        if (*puVar7 == 0x3e) {\n            *param_3 = puVar6 + 2;\n            return 4;\n        }\ncode_r0x0047ae98:\n        *param_3 = puVar7;\n        return 0;\n    case 0x16:\n    case 0x18:\n        puVar6 = puVar6 + 1;\n        break;\n    case 0x1d:\ncode_r0x0047adce:\n        *param_3 = puVar6;\n        return 0;\n    }\n    uVar3 = fcn.0047a750(puVar6);\n    return uVar3;\n}\n",
        "token_count": 2303
    },
    "0047d2f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0047d2f0(uint param_1, uint8_t *param_2, uint8_t **param_3)\n\n{\n    uint8_t *puVar1;\n    int32_t unaff_EBX;\n    int32_t iVar2;\n    uint8_t *unaff_EDI;\n    ulong uVar3;\n    \n    if (param_2 != unaff_EDI) {\n        if ((param_2[1] != 0) || (*param_2 != 0x2d)) {\ncode_r0x0047d3b7:\n            *param_3 = param_2;\n            return 0;\n        }\n        puVar1 = param_2 + 2;\n        if (puVar1 != unaff_EDI) {\n            iVar2 = unaff_EDI - puVar1;\n            do {\n                if (puVar1[1] == 0) {\n                    uVar3 = CONCAT44(puVar1, *(*puVar1 + 0x4c + unaff_EBX));\n                }\n                else {\n                    uVar3 = fcn.0047cd30();\n                }\n                param_2 = uVar3 >> 0x20;\n    // switch table (28 cases) at 0x47d3c0\n                switch(uVar3) {\n                case 0:\n                case 1:\n                case 8:\n                    goto code_r0x0047d3b7;\n                case 5:\n                    if (iVar2 < 2) {\n                        return 0xfffffffe;\n                    }\n                default:\n                    puVar1 = param_2 + 2;\n                    iVar2 = iVar2 + -2;\n                    break;\n                case 6:\n                    if (iVar2 < 3) {\n                        return 0xfffffffe;\n                    }\n                    puVar1 = param_2 + 3;\n                    iVar2 = iVar2 + -3;\n                    break;\n                case 7:\n                    if (iVar2 < 4) {\n                        return 0xfffffffe;\n                    }\n                    puVar1 = param_2 + 4;\n                    iVar2 = iVar2 + -4;\n                    break;\n                case 0x1b:\n                    puVar1 = param_2 + 2;\n                    iVar2 = iVar2 + -2;\n                    if (puVar1 == unaff_EDI) {\n                        return 0xffffffff;\n                    }\n                    if ((param_2[3] == 0) && (*puVar1 == 0x2d)) {\n                        puVar1 = param_2 + 4;\n                        if (puVar1 == unaff_EDI) {\n                            return 0xffffffff;\n                        }\n                        if ((param_2[5] == 0) && (*puVar1 == 0x3e)) {\n                            *param_3 = param_2 + 6;\n                            return 0xd;\n                        }\n                        *param_3 = puVar1;\n                        return 0;\n                    }\n                }\n                if (puVar1 == unaff_EDI) {\n                    return 0xffffffff;\n                }\n            } while( true );\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 678
    },
    "0047d550": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0047d550(int32_t param_1)\n\n{\n    bool bVar1;\n    char *in_EAX;\n    uint *unaff_ESI;\n    \n    bVar1 = false;\n    *unaff_ESI = 0xb;\n    if ((param_1 - in_EAX == 6) && (in_EAX[1] == '\\0')) {\n        if (*in_EAX == 'X') {\n            bVar1 = true;\n        }\n        else if (*in_EAX != 'x') {\n            return 1;\n        }\n        if (in_EAX[3] == '\\0') {\n            if (in_EAX[2] == 'M') {\n                bVar1 = true;\n            }\n            else if (in_EAX[2] != 'm') {\n                return 1;\n            }\n            if (in_EAX[5] == '\\0') {\n                if (in_EAX[4] == 'L') {\n                    return 0;\n                }\n                if (in_EAX[4] == 'l') {\n                    if (bVar1) {\n                        return 0;\n                    }\n                    *unaff_ESI = 0xc;\n                }\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 273
    },
    "0047d5d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint8_t * __thiscall fcn.0047d5d0(uint8_t *param_1, int32_t param_2, uint8_t **param_3)\n\n{\n    uint8_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    \n    if (param_1 == in_EAX) {\n        return 0xffffffff;\n    }\n    uVar2 = *param_1;\n    if (param_1[1] == 0) {\n        uVar5 = *(uVar2 + 0x4c + param_2);\n    }\n    else {\n        uVar5 = fcn.0047cd30();\n        uVar2 = extraout_ECX;\n    }\n    puVar3 = param_1;\n    // switch table (25 cases) at 0x47d850\n    switch(uVar5) {\n    case 5:\n        if (in_EAX - param_1 < 2) {\n            return 0xfffffffe;\n        }\n        break;\n    case 6:\n        if (in_EAX - param_1 < 3) {\n            return 0xfffffffe;\n        }\ncode_r0x0047d6cd:\n        *param_3 = puVar3;\n        return NULL;\n    case 7:\n        puVar4 = param_1;\n        if (in_EAX - param_1 < 4) {\n            return 0xfffffffe;\n        }\ncode_r0x0047d6e6:\n        *param_3 = puVar4;\n        return NULL;\n    case 0x16:\n    case 0x18:\ncode_r0x0047d64f:\n        puVar3 = param_1 + 2;\n        if (puVar3 == in_EAX) {\n            return 0xffffffff;\n        }\n        do {\n            uVar2 = *puVar3;\n            if (puVar3[1] == 0) {\n                uVar5 = *(uVar2 + 0x4c + param_2);\n            }\n            else {\n                uVar5 = fcn.0047cd30();\n                uVar2 = extraout_ECX_00;\n            }\n            puVar4 = puVar3;\n    // switch table (25 cases) at 0x47d884\n            switch(uVar5) {\n            case 5:\n                if (in_EAX - puVar3 < 2) {\n                    return 0xfffffffe;\n                }\n                goto code_r0x0047d6cd;\n            case 6:\n                if (in_EAX - puVar3 < 3) {\n                    return 0xfffffffe;\n                }\n                goto code_r0x0047d6e6;\n            case 7:\n                if (in_EAX - puVar3 < 4) {\n                    return 0xfffffffe;\n                }\n                goto code_r0x0047d83f;\n            default:\n                goto code_r0x0047d6e6;\n            case 9:\n            case 10:\n            case 0x15:\n                iVar1 = fcn.0047d550();\n                if (iVar1 == 0) goto code_r0x0047d6cd;\n                puVar3 = puVar3 + 2;\n                if (puVar3 == in_EAX) {\n                    return 0xffffffff;\n                }\n                iVar1 = in_EAX - puVar3;\n                goto code_r0x0047d726;\n            case 0xf:\n                iVar1 = fcn.0047d550();\n                if (iVar1 == 0) goto code_r0x0047d83f;\n                puVar4 = puVar3 + 2;\n                if (puVar4 == in_EAX) {\n                    return 0xffffffff;\n                }\n                if ((puVar3[3] == 0) && (*puVar4 == 0x3e)) {\n                    *param_3 = puVar3 + 4;\n                    return param_1;\n                }\n                goto code_r0x0047d6e6;\n            case 0x1d:\n                if ((*((((uVar2 & 0xff) >> 5) + *((uVar5 >> 0x20 & 0xff) + 0x49e9b8) * 8) * 4 + 0x49e3b8) &\n                    1 << (uVar2 & 0x1f)) == 0) goto code_r0x0047d83f;\n            case 0x16:\n            case 0x18:\n            case 0x19:\n            case 0x1a:\n            case 0x1b:\n                puVar3 = puVar3 + 2;\n                if (puVar3 == in_EAX) {\n                    return 0xffffffff;\n                }\n            }\n        } while( true );\n    case 0x1d:\n        if ((*((((uVar2 & 0xff) >> 5) + *((uVar5 >> 0x20 & 0xff) + 0x49e8b8) * 8) * 4 + 0x49e3b8) & 1 << (uVar2 & 0x1f))\n            != 0) goto code_r0x0047d64f;\n    }\ncode_r0x0047d83f:\n    *param_3 = puVar3;\n    return NULL;\ncode_r0x0047d726:\n    if (puVar3[1] == 0) {\n        iVar6 = CONCAT44(iVar1, *(*puVar3 + 0x4c + param_2));\n    }\n    else {\n        iVar6 = fcn.0047cd30();\n    }\n    iVar1 = iVar6 >> 0x20;\n    // switch table (16 cases) at 0x47d8c0\n    switch(iVar6) {\n    case 0:\n    case 1:\n    case 8:\n        goto code_r0x0047d6cd;\n    case 5:\n        if (iVar6 < 0x200000000) {\n            return 0xfffffffe;\n        }\n    default:\n        puVar4 = puVar3 + 2;\n        iVar1 = iVar1 + -2;\n        break;\n    case 6:\n        if (iVar6 < 0x300000000) {\n            return 0xfffffffe;\n        }\n        puVar4 = puVar3 + 3;\n        iVar1 = iVar1 + -3;\n        break;\n    case 7:\n        if (iVar6 < 0x400000000) {\n            return 0xfffffffe;\n        }\n        puVar4 = puVar3 + 4;\n        iVar1 = iVar1 + -4;\n        break;\n    case 0xf:\n        puVar4 = puVar3 + 2;\n        iVar1 = iVar1 + -2;\n        if (puVar4 == in_EAX) {\n            return 0xffffffff;\n        }\n        if ((puVar3[3] == 0) && (*puVar4 == 0x3e)) {\n            *param_3 = puVar3 + 4;\n            return param_1;\n        }\n    }\n    puVar3 = puVar4;\n    if (puVar4 == in_EAX) {\n        return 0xffffffff;\n    }\n    goto code_r0x0047d726;\n}\n",
        "token_count": 1662
    },
    "0047d8f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0047d8f0(char *param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char **unaff_ESI;\n    \n    if (in_EAX - param_1 < 0xc) {\n        return 0xffffffff;\n    }\n    iVar1 = 0;\n    while ((param_1[1] == '\\0' && (*param_1 == *(iVar1 + 0x49f640)))) {\n        iVar1 = iVar1 + 1;\n        param_1 = param_1 + 2;\n        if (5 < iVar1) {\n            *unaff_ESI = param_1;\n            return 8;\n        }\n    }\n    *unaff_ESI = param_1;\n    return 0;\n}\n",
        "token_count": 174
    },
    "0047dd30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0047dd30(uint param_1, uint8_t *param_2)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *unaff_EBX;\n    uint8_t *unaff_ESI;\n    int32_t unaff_EDI;\n    ulong uVar4;\n    \n    if (param_2 != unaff_ESI) {\n        if (param_2[1] == 0) {\n            uVar3 = *(*param_2 + 0x4c + unaff_EDI);\n        }\n        else {\n            uVar4 = fcn.0047cd30();\n            param_2 = uVar4 >> 0x20;\n            uVar3 = uVar4;\n        }\n        uVar4 = CONCAT44(param_2, uVar3);\n        while( true ) {\n            iVar2 = uVar4 >> 0x20;\n            if (1 < uVar4 - 0x18U) {\n                *unaff_EBX = iVar2;\n                return 0;\n            }\n            puVar1 = iVar2 + 2;\n            if (puVar1 == unaff_ESI) break;\n            if (puVar1[1] == 0) {\n                uVar4 = CONCAT44(puVar1, *(*puVar1 + 0x4c + unaff_EDI));\n            }\n            else {\n                uVar4 = fcn.0047cd30();\n            }\n            if (uVar4 == 0x12) {\n                *unaff_EBX = (uVar4 >> 0x20) + 2;\n                return 10;\n            }\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 382
    },
    "0047dff0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0047dff0(uint8_t *param_1, uint8_t *param_2, uint8_t **param_3)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    uint8_t **ppuVar8;\n    uint8_t *puVar9;\n    ulong uVar10;\n    \n    puVar2 = param_2;\n    puVar9 = NULL;\n    puVar6 = param_1;\n    if (param_1 != param_2) {\n        do {\n            uVar1 = puVar6[1];\n            uVar5 = *puVar6;\n            if (uVar1 == 0) {\n                uVar10 = CONCAT44(puVar6, *(uVar5 + 0x4c + in_EAX));\n            }\n            else {\n                uVar10 = fcn.0047cd30();\n                uVar5 = extraout_ECX;\n            }\n            puVar6 = uVar10 >> 0x20;\n    // switch table (25 cases) at 0x47e3d4\n            switch(uVar10) {\n            case 5:\n                if (puVar2 - puVar6 < 2) {\n                    return -2;\n                }\n            default:\ncode_r0x0047e2eb:\n                *param_3 = puVar6;\n                return 0;\n            case 6:\n                if (puVar2 - puVar6 < 3) {\n                    return -2;\n                }\ncode_r0x0047e068:\n                *param_3 = puVar6;\n                return 0;\n            case 7:\n                if (puVar2 - puVar6 < 4) {\n                    return -2;\n                }\n                goto code_r0x0047e2eb;\n            case 9:\n            case 10:\n            case 0x15:\n                while( true ) {\n                    puVar9 = puVar6 + 2;\n                    if (puVar9 == puVar2) {\n                        return -1;\n                    }\n                    if (puVar6[3] == 0) {\n                        uVar10 = CONCAT44(puVar9, *(*puVar9 + 0x4c + in_EAX));\n                    }\n                    else {\n                        uVar10 = fcn.0047cd30();\n                    }\n                    puVar6 = uVar10 >> 0x20;\n                    iVar3 = uVar10;\n                    if (iVar3 == 0xe) break;\n                    if ((iVar3 < 9) || ((10 < iVar3 && (iVar3 != 0x15)))) goto code_r0x0047e127;\n                }\n            case 0xe:\n                param_2 = NULL;\n                do {\n                    puVar9 = puVar6 + 2;\n                    if (puVar9 == puVar2) {\n                        return -1;\n                    }\n                    if (puVar6[3] == 0) {\n                        uVar10 = CONCAT44(puVar9, *(*puVar9 + 0x4c + in_EAX));\n                    }\n                    else {\n                        uVar10 = fcn.0047cd30();\n                    }\n                    puVar6 = uVar10 >> 0x20;\n                    iVar3 = uVar10;\n                    ppuVar8 = param_3;\n                    if ((iVar3 == 0xc) || (iVar3 == 0xd)) {\ncode_r0x0047e193:\n                        param_1 = puVar6 + 2;\n                        do {\n                            if (param_1 == puVar2) {\n                                return -1;\n                            }\n                            if (param_1[1] == 0) {\n                                uVar10 = CONCAT44(param_1, *(*param_1 + 0x4c + in_EAX));\n                            }\n                            else {\n                                uVar10 = fcn.0047cd30();\n                            }\n                            puVar6 = uVar10 >> 0x20;\n                            if (uVar10 == iVar3) {\n                                puVar9 = puVar6 + 2;\n                                if (puVar9 == puVar2) {\n                                    return -1;\n                                }\n                                if (puVar6[3] == 0) {\n                                    uVar10 = CONCAT44(puVar9, *(*puVar9 + 0x4c + in_EAX));\n                                }\n                                else {\n                                    uVar10 = fcn.0047cd30();\n                                }\n                                puVar6 = uVar10 >> 0x20;\n                                puVar7 = puVar6;\n    // switch table (13 cases) at 0x47e46c\n                                switch(uVar10) {\n                                case 9:\n                                case 10:\n                                case 0x15:\n                                    goto code_r0x0047e267;\n                                case 0xb:\n                                    goto code_r0x0047e3af;\n                                default:\n                                    goto code_r0x0047e35f;\n                                case 0x11:\n                                    goto code_r0x0047e38a;\n                                }\n                            }\n    // switch table (9 cases) at 0x47e448\n                            switch(uVar10) {\n                            case 0:\n                            case 1:\n                            case 2:\n                            case 8:\n                                goto code_r0x0047e35f;\n                            case 3:\n                                iVar4 = fcn.0047de30(&param_1);\n                                ppuVar8 = param_3;\n                                if (iVar4 < 1) {\n                                    if (iVar4 == 0) {\n                                        *param_3 = param_1;\n                                        return 0;\n                                    }\n                                    return iVar4;\n                                }\n                                break;\n                            default:\n                                goto code_r0x0047e193;\n                            case 5:\n                                if (puVar2 - puVar6 < 2) {\n                                    return -2;\n                                }\n                                goto code_r0x0047e193;\n                            case 6:\n                                if (puVar2 - puVar6 < 3) {\n                                    return -2;\n                                }\n                                param_1 = puVar6 + 3;\n                                break;\n                            case 7:\n                                if (puVar2 - puVar6 < 4) {\n                                    return -2;\n                                }\n                                param_1 = puVar6 + 4;\n                            }\n                        } while( true );\n                    }\n                    if (iVar3 < 9) goto code_r0x0047e2eb;\n                    if ((10 < iVar3) && (iVar3 != 0x15)) {\n                        *param_3 = puVar6;\n                        return 0;\n                    }\n                } while( true );\n            case 0x16:\n            case 0x18:\n            case 0x19:\n            case 0x1a:\n            case 0x1b:\n                break;\n            case 0x17:\n                if (puVar9 != NULL) {\ncode_r0x0047e127:\n                    *param_3 = puVar6;\n                    return 0;\n                }\n                puVar9 = puVar6 + 2;\n                if (puVar9 == puVar2) {\n                    return -1;\n                }\n                uVar1 = puVar6[3];\n                uVar5 = *puVar9;\n                if (uVar1 == 0) {\n                    uVar10 = CONCAT44(puVar9, *(uVar5 + 0x4c + in_EAX));\n                }\n                else {\n                    uVar10 = fcn.0047cd30();\n                    uVar5 = extraout_ECX_00;\n                }\n                puVar6 = uVar10 >> 0x20;\n                puVar9 = 0x1;\n    // switch table (25 cases) at 0x47e414\n                switch(uVar10) {\n                case 5:\n                    if (puVar2 - puVar6 < 2) {\n                        return -2;\n                    }\n                    goto code_r0x0047e068;\n                case 6:\n                    if (puVar2 - puVar6 < 3) {\n                        return -2;\n                    }\n                    goto code_r0x0047e2eb;\n                case 7:\n                    if (3 < puVar2 - puVar6) {\n                        *param_3 = puVar6;\n                        return 0;\n                    }\n                    return -2;\n                default:\n                    goto code_r0x0047e2eb;\n                case 0x16:\n                case 0x18:\n                    break;\n                case 0x1d:\n                    if ((*((((uVar5 & 0xff) >> 5) + *(uVar1 + 0x49e8b8) * 8) * 4 + 0x49e3b8) & 1 << (uVar5 & 0x1f)) == 0\n                       ) goto code_r0x0047e2eb;\n                }\n                break;\n            case 0x1d:\n                if ((*((((uVar5 & 0xff) >> 5) + *(uVar1 + 0x49e9b8) * 8) * 4 + 0x49e3b8) & 1 << (uVar5 & 0x1f)) == 0)\n                goto code_r0x0047e068;\n            }\ncode_r0x0047e2d1:\n            puVar6 = puVar6 + 2;\n        } while (puVar6 != puVar2);\n    }\n    return -1;\n    do {\n        puVar6 = uVar10 >> 0x20;\n        puVar7 = puVar6;\n        puVar9 = param_2;\n    // switch table (25 cases) at 0x47e48c\n        switch(uVar10) {\n        case 5:\n            if (puVar2 - puVar6 < 2) {\n                return -2;\n            }\n            goto code_r0x0047e35f;\n        case 6:\n            if (puVar2 - puVar6 < 3) {\n                return -2;\n            }\n            goto code_r0x0047e35f;\n        case 7:\n            if (puVar2 - puVar6 < 4) {\n                return -2;\n            }\n        default:\n            goto code_r0x0047e35f;\n        case 9:\n        case 10:\n        case 0x15:\ncode_r0x0047e267:\n            puVar9 = puVar6 + 2;\n            if (puVar9 == puVar2) {\n                return -1;\n            }\n            if (puVar6[3] == 0) {\n                uVar10 = CONCAT44(puVar9, *(*puVar9 + 0x4c + in_EAX));\n            }\n            else {\n                uVar10 = fcn.0047cd30();\n            }\n            break;\n        case 0xb:\n            goto code_r0x0047e3af;\n        case 0x11:\n            goto code_r0x0047e38a;\n        case 0x16:\n        case 0x18:\n            goto code_r0x0047e2d1;\n        case 0x1d:\n            if ((*(((*puVar6 >> 5) + *(puVar6[1] + 0x49e8b8) * 8) * 4 + 0x49e3b8) & 1 << (*puVar6 & 0x1f)) == 0)\n            goto code_r0x0047e35f;\n            goto code_r0x0047e2d1;\n        }\n    } while( true );\ncode_r0x0047e38a:\n    puVar6 = puVar7 + 2;\n    if (puVar6 == puVar2) {\n        return -1;\n    }\n    if ((puVar7[3] == 0) && (*puVar6 == 0x3e)) {\n        *ppuVar8 = puVar7 + 4;\n        return 3;\n    }\n    goto code_r0x0047e35f;\ncode_r0x0047e3af:\n    *ppuVar8 = puVar6 + 2;\n    return 1;\ncode_r0x0047e35f:\n    *ppuVar8 = puVar6;\n    return 0;\n}\n",
        "token_count": 2747
    },
    "0047e4d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0047e4d0(uint param_1, uint8_t *param_2, int32_t param_3, uint8_t **param_4)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    uint8_t *in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    uint32_t uVar6;\n    uint32_t extraout_ECX_01;\n    uint8_t *puVar7;\n    ulong uVar8;\n    \n    if (param_2 == in_EAX) {\n        return 0xffffffff;\n    }\n    uVar6 = *param_2;\n    uVar1 = param_2[1];\n    if (uVar1 == 0) {\n        uVar3 = *(uVar6 + 0x4c + param_3);\n    }\n    else {\n        uVar8 = fcn.0047cd30();\n        param_2 = uVar8 >> 0x20;\n        uVar3 = uVar8;\n        uVar6 = extraout_ECX;\n    }\n    // switch table (25 cases) at 0x47e7d4\n    switch(uVar3) {\n    case 5:\ncode_r0x0047e63e:\n        if (in_EAX - param_2 < 2) {\n            return 0xfffffffe;\n        }\n        break;\n    case 6:\ncode_r0x0047e653:\n        if (in_EAX - param_2 < 3) {\n            return 0xfffffffe;\n        }\n        break;\n    case 7:\ncode_r0x0047e668:\n        if (in_EAX - param_2 < 4) {\n            return 0xfffffffe;\n        }\n        break;\n    case 0xf:\n        uVar5 = fcn.0047d5d0(param_3, param_4);\n        return uVar5;\n    case 0x10:\n        puVar7 = param_2 + 2;\n        if (puVar7 == in_EAX) {\n            return 0xffffffff;\n        }\n        if (param_2[3] == 0) {\n            uVar8 = CONCAT44(puVar7, *(*puVar7 + 0x4c + param_3));\n        }\n        else {\n            uVar8 = fcn.0047cd30();\n        }\n        param_2 = uVar8 >> 0x20;\n        if (uVar8 == 0x14) {\n            uVar5 = fcn.0047d8f0();\n            return uVar5;\n        }\n        if (uVar8 == 0x1b) {\n            uVar5 = fcn.0047d2f0(param_4);\n            return uVar5;\n        }\n        break;\n    case 0x11:\n        uVar5 = fcn.0047db20(param_4);\n        return uVar5;\n    case 0x16:\n    case 0x18:\ncode_r0x0047e549:\n        param_2 = param_2 + 2;\n        bVar2 = false;\n        if (param_2 == in_EAX) {\n            return 0xffffffff;\n        }\n        do {\n            uVar1 = param_2[1];\n            uVar6 = *param_2;\n            if (uVar1 == 0) {\n                uVar8 = CONCAT44(param_2, *(uVar6 + 0x4c + param_3));\n            }\n            else {\n                uVar8 = fcn.0047cd30();\n                uVar6 = extraout_ECX_00;\n            }\n            param_2 = uVar8 >> 0x20;\n            puVar7 = param_2;\n    // switch table (25 cases) at 0x47e814\n            switch(uVar8) {\n            case 5:\n                goto code_r0x0047e63e;\n            case 6:\n                goto code_r0x0047e653;\n            case 7:\n                goto code_r0x0047e668;\n            default:\n                goto code_r0x0047e7c8;\n            case 9:\n            case 10:\n            case 0x15:\n                param_2 = param_2 + 2;\n                if (param_2 == in_EAX) {\n                    return 0xffffffff;\n                }\n                goto code_r0x0047e690;\n            case 0xb:\n                goto code_r0x0047e714;\n            case 0x11:\n                goto code_r0x0047e723;\n            case 0x17:\n                if (!bVar2) {\n                    puVar7 = param_2 + 2;\n                    bVar2 = true;\n                    if (puVar7 == in_EAX) {\n                        return 0xffffffff;\n                    }\n                    uVar1 = param_2[3];\n                    uVar6 = *puVar7;\n                    if (uVar1 == 0) {\n                        uVar8 = CONCAT44(puVar7, *(uVar6 + 0x4c + param_3));\n                    }\n                    else {\n                        uVar8 = fcn.0047cd30();\n                        uVar6 = extraout_ECX_01;\n                    }\n                    param_2 = uVar8 >> 0x20;\n    // switch table (25 cases) at 0x47e858\n                    switch(uVar8) {\n                    case 5:\n                        goto code_r0x0047e63e;\n                    case 6:\n                        goto code_r0x0047e653;\n                    case 7:\n                        goto code_r0x0047e668;\n                    default:\n                        break;\n                    case 0x16:\n                    case 0x18:\n                        goto code_r0x0047e62b;\n                    case 0x1d:\n                        uVar6 = uVar6 & 0xff;\n                        iVar4 = (uVar6 >> 5) + *(uVar1 + 0x49e8b8) * 8;\n                        goto code_r0x0047e619;\n                    }\n                }\n                goto code_r0x0047e7c8;\n            case 0x1d:\n                uVar6 = uVar6 & 0xff;\n                iVar4 = (uVar6 >> 5) + *(uVar1 + 0x49e9b8) * 8;\ncode_r0x0047e619:\n                if ((*(iVar4 * 4 + 0x49e3b8) & 1 << (uVar6 & 0x1f)) == 0) goto code_r0x0047e7c8;\n            case 0x16:\n            case 0x18:\n            case 0x19:\n            case 0x1a:\n            case 0x1b:\ncode_r0x0047e62b:\n                param_2 = param_2 + 2;\n                if (param_2 == in_EAX) {\n                    return 0xffffffff;\n                }\n            }\n        } while( true );\n    case 0x1d:\n        if ((*((((uVar6 & 0xff) >> 5) + *(uVar1 + 0x49e8b8) * 8) * 4 + 0x49e3b8) & 1 << (uVar6 & 0x1f)) != 0)\n        goto code_r0x0047e549;\n    }\n    goto code_r0x0047e7c8;\ncode_r0x0047e6c2:\n    param_2 = param_2 + 2;\n    if (param_2 == in_EAX) {\n        return 0xffffffff;\n    }\n    goto code_r0x0047e690;\ncode_r0x0047e714:\n    *param_4 = param_2 + 2;\n    return 2;\ncode_r0x0047e690:\n    if (param_2[1] == 0) {\n        uVar8 = CONCAT44(param_2, *(*param_2 + 0x4c + param_3));\n    }\n    else {\n        uVar8 = fcn.0047cd30();\n    }\n    param_2 = uVar8 >> 0x20;\n    puVar7 = param_2;\n    // switch table (25 cases) at 0x47e88c\n    switch(uVar8) {\n    case 5:\n        goto code_r0x0047e63e;\n    case 6:\n        goto code_r0x0047e653;\n    case 7:\n        goto code_r0x0047e668;\n    default:\n        goto code_r0x0047e7c8;\n    case 9:\n    case 10:\n    case 0x15:\n        goto code_r0x0047e6c2;\n    case 0xb:\n        goto code_r0x0047e714;\n    case 0x11:\n        goto code_r0x0047e723;\n    case 0x16:\n    case 0x18:\n        break;\n    case 0x1d:\n        if ((*(((*param_2 >> 5) + *(param_2[1] + 0x49e8b8) * 8) * 4 + 0x49e3b8) & 1 << (*param_2 & 0x1f)) == 0)\n        goto code_r0x0047e7c8;\n    }\n    uVar5 = fcn.0047dff0(param_2 + 2);\n    return uVar5;\ncode_r0x0047e723:\n    param_2 = puVar7 + 2;\n    if (param_2 == in_EAX) {\n        return 0xffffffff;\n    }\n    if ((puVar7[3] == 0) && (*param_2 == 0x3e)) {\n        *param_4 = puVar7 + 4;\n        return 4;\n    }\ncode_r0x0047e7c8:\n    *param_4 = param_2;\n    return 0;\n}\n",
        "token_count": 2246
    },
    "004801d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004801d0(uint param_1, char *param_2, int32_t param_3, char **param_4)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    char *unaff_EDI;\n    ulong uVar4;\n    \n    if (param_2 != unaff_EDI) {\n        if ((*param_2 != '\\0') || (param_2[1] != '-')) {\n            *param_4 = param_2;\n            return 0;\n        }\n        param_2 = param_2 + 2;\n        if (param_2 != unaff_EDI) {\n            iVar3 = unaff_EDI - param_2;\n            do {\n                if (*param_2 == '\\0') {\n                    uVar4 = CONCAT44(param_2, *(param_2[1] + 0x4c + param_3));\n                }\n                else {\n                    uVar4 = fcn.0047cd30();\n                }\n                pcVar1 = uVar4 >> 0x20;\n    // switch table (28 cases) at 0x4802b4\n                switch(uVar4) {\n                case 0:\n                case 1:\n                case 8:\n                    *param_4 = pcVar1;\n                    return 0;\n                case 5:\n                    if (iVar3 < 2) {\n                        return 0xfffffffe;\n                    }\n                default:\n                    param_2 = pcVar1 + 2;\n                    iVar3 = iVar3 + -2;\n                    break;\n                case 6:\n                    if (iVar3 < 3) {\n                        return 0xfffffffe;\n                    }\n                    param_2 = pcVar1 + 3;\n                    iVar3 = iVar3 + -3;\n                    break;\n                case 7:\n                    if (iVar3 < 4) {\n                        return 0xfffffffe;\n                    }\n                    param_2 = pcVar1 + 4;\n                    iVar3 = iVar3 + -4;\n                    break;\n                case 0x1b:\n                    param_2 = pcVar1 + 2;\n                    iVar3 = iVar3 + -2;\n                    if (param_2 == unaff_EDI) {\n                        return 0xffffffff;\n                    }\n                    if ((*param_2 == '\\0') && (pcVar1[3] == '-')) {\n                        pcVar2 = pcVar1 + 4;\n                        if (pcVar2 == unaff_EDI) {\n                            return 0xffffffff;\n                        }\n                        if ((*pcVar2 == '\\0') && (pcVar1[5] == '>')) {\n                            *param_4 = pcVar1 + 6;\n                            return 0xd;\n                        }\n                        *param_4 = pcVar2;\n                        return 0;\n                    }\n                }\n                if (param_2 == unaff_EDI) {\n                    return 0xffffffff;\n                }\n            } while( true );\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 649
    },
    "00480440": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00480440(int32_t param_1)\n\n{\n    bool bVar1;\n    char *in_EAX;\n    uint *unaff_ESI;\n    \n    bVar1 = false;\n    *unaff_ESI = 0xb;\n    if ((param_1 - in_EAX == 6) && (*in_EAX == '\\0')) {\n        if (in_EAX[1] == 'X') {\n            bVar1 = true;\n        }\n        else if (in_EAX[1] != 'x') {\n            return 1;\n        }\n        if (in_EAX[2] == '\\0') {\n            if (in_EAX[3] == 'M') {\n                bVar1 = true;\n            }\n            else if (in_EAX[3] != 'm') {\n                return 1;\n            }\n            if (in_EAX[4] == '\\0') {\n                if (in_EAX[5] == 'L') {\n                    return 0;\n                }\n                if (in_EAX[5] == 'l') {\n                    if (bVar1) {\n                        return 0;\n                    }\n                    *unaff_ESI = 0xc;\n                }\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 275
    },
    "004804c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar * fcn.004804c0(int32_t param_1, char *param_2, char **param_3)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    char *pcVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    \n    if (in_EAX == param_2) {\n        return 0xffffffff;\n    }\n    if (*in_EAX == '\\0') {\n        uVar3 = *(in_EAX[1] + 0x4c + param_1);\n    }\n    else {\n        uVar3 = fcn.0047cd30();\n    }\n    // switch table (25 cases) at 0x480738\n    switch(uVar3) {\n    case 5:\n        if (param_2 - in_EAX < 2) {\n            return 0xfffffffe;\n        }\n        break;\n    case 6:\n        if (param_2 - in_EAX < 3) {\n            return 0xfffffffe;\n        }\ncode_r0x004805c0:\n        *param_3 = in_EAX;\n        return NULL;\n    case 7:\n        pcVar2 = in_EAX;\n        if (param_2 - in_EAX < 4) {\n            return 0xfffffffe;\n        }\ncode_r0x004805d8:\n        *param_3 = pcVar2;\n        return NULL;\n    case 0x16:\n    case 0x18:\ncode_r0x00480541:\n        in_EAX = in_EAX + 2;\n        if (in_EAX == param_2) {\n            return 0xffffffff;\n        }\n        do {\n            if (*in_EAX == '\\0') {\n                uVar3 = *(in_EAX[1] + 0x4c + param_1);\n            }\n            else {\n                uVar3 = fcn.0047cd30();\n            }\n            pcVar2 = in_EAX;\n    // switch table (25 cases) at 0x48076c\n            switch(uVar3) {\n            case 5:\n                if (param_2 - in_EAX < 2) {\n                    return 0xfffffffe;\n                }\n                goto code_r0x004805c0;\n            case 6:\n                if (param_2 - in_EAX < 3) {\n                    return 0xfffffffe;\n                }\n                goto code_r0x004805d8;\n            case 7:\n                if (param_2 - in_EAX < 4) {\n                    return 0xfffffffe;\n                }\n                goto code_r0x0048072b;\n            default:\n                goto code_r0x004805d8;\n            case 9:\n            case 10:\n            case 0x15:\n                iVar1 = fcn.00480440();\n                if (iVar1 == 0) goto code_r0x004805c0;\n                in_EAX = in_EAX + 2;\n                if (in_EAX == param_2) {\n                    return 0xffffffff;\n                }\n                iVar1 = param_2 - in_EAX;\n                goto code_r0x00480618;\n            case 0xf:\n                iVar1 = fcn.00480440();\n                if (iVar1 == 0) goto code_r0x0048072b;\n                pcVar2 = in_EAX + 2;\n                if (pcVar2 == param_2) {\n                    return 0xffffffff;\n                }\n                if ((*pcVar2 == '\\0') && (in_EAX[3] == '>')) {\n                    *param_3 = in_EAX + 4;\n                    return param_2;\n                }\n                goto code_r0x004805d8;\n            case 0x1d:\n                if ((*(((in_EAX[1] >> 5) + *((uVar3 >> 0x20 & 0xff) + 0x49e9b8) * 8) * 4 + 0x49e3b8) &\n                    1 << (in_EAX[1] & 0x1fU)) == 0) goto code_r0x0048072b;\n            case 0x16:\n            case 0x18:\n            case 0x19:\n            case 0x1a:\n            case 0x1b:\n                in_EAX = in_EAX + 2;\n                if (in_EAX == param_2) {\n                    return 0xffffffff;\n                }\n            }\n        } while( true );\n    case 0x1d:\n        if ((*(((in_EAX[1] >> 5) + *((uVar3 >> 0x20 & 0xff) + 0x49e8b8) * 8) * 4 + 0x49e3b8) & 1 << (in_EAX[1] & 0x1fU))\n            != 0) goto code_r0x00480541;\n    }\ncode_r0x0048072b:\n    *param_3 = in_EAX;\n    return NULL;\ncode_r0x00480618:\n    if (*in_EAX == '\\0') {\n        iVar4 = CONCAT44(iVar1, *(in_EAX[1] + 0x4c + param_1));\n    }\n    else {\n        iVar4 = fcn.0047cd30();\n    }\n    iVar1 = iVar4 >> 0x20;\n    // switch table (16 cases) at 0x4807a8\n    switch(iVar4) {\n    case 0:\n    case 1:\n    case 8:\n        goto code_r0x004805c0;\n    case 5:\n        if (iVar4 < 0x200000000) {\n            return 0xfffffffe;\n        }\n    default:\n        pcVar2 = in_EAX + 2;\n        iVar1 = iVar1 + -2;\n        break;\n    case 6:\n        if (iVar4 < 0x300000000) {\n            return 0xfffffffe;\n        }\n        pcVar2 = in_EAX + 3;\n        iVar1 = iVar1 + -3;\n        break;\n    case 7:\n        if (iVar4 < 0x400000000) {\n            return 0xfffffffe;\n        }\n        pcVar2 = in_EAX + 4;\n        iVar1 = iVar1 + -4;\n        break;\n    case 0xf:\n        pcVar2 = in_EAX + 2;\n        iVar1 = iVar1 + -2;\n        if (pcVar2 == param_2) {\n            return 0xffffffff;\n        }\n        if ((*pcVar2 == '\\0') && (in_EAX[3] == '>')) {\n            *param_3 = in_EAX + 4;\n            return param_2;\n        }\n    }\n    in_EAX = pcVar2;\n    if (pcVar2 == param_2) {\n        return 0xffffffff;\n    }\n    goto code_r0x00480618;\n}\n",
        "token_count": 1528
    },
    "004807d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004807d0(char *param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char **unaff_ESI;\n    \n    if (in_EAX - param_1 < 0xc) {\n        return 0xffffffff;\n    }\n    iVar1 = 0;\n    while ((*param_1 == '\\0' && (param_1[1] == \"CDATA[\"[iVar1]))) {\n        iVar1 = iVar1 + 1;\n        param_1 = param_1 + 2;\n        if (5 < iVar1) {\n            *unaff_ESI = param_1;\n            return 8;\n        }\n    }\n    *unaff_ESI = param_1;\n    return 0;\n}\n",
        "token_count": 168
    },
    "00480c10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00480c10(uint param_1, char *param_2)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *unaff_EBX;\n    char *unaff_ESI;\n    int32_t unaff_EDI;\n    ulong uVar4;\n    \n    if (param_2 != unaff_ESI) {\n        if (*param_2 == '\\0') {\n            uVar3 = *(param_2[1] + 0x4c + unaff_EDI);\n        }\n        else {\n            uVar4 = fcn.0047cd30();\n            param_2 = uVar4 >> 0x20;\n            uVar3 = uVar4;\n        }\n        uVar4 = CONCAT44(param_2, uVar3);\n        while( true ) {\n            iVar2 = uVar4 >> 0x20;\n            if (1 < uVar4 - 0x18U) {\n                *unaff_EBX = iVar2;\n                return 0;\n            }\n            pcVar1 = iVar2 + 2;\n            if (pcVar1 == unaff_ESI) break;\n            if (*pcVar1 == '\\0') {\n                uVar4 = CONCAT44(pcVar1, *(pcVar1[1] + 0x4c + unaff_EDI));\n            }\n            else {\n                uVar4 = fcn.0047cd30();\n            }\n            if (uVar4 == 0x12) {\n                *unaff_EBX = (uVar4 >> 0x20) + 2;\n                return 10;\n            }\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 375
    },
    "00480ee0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00480ee0(int32_t param_1, uint8_t *param_2, uint8_t *param_3, uint8_t **param_4)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    ulong uVar6;\n    \n    bVar2 = false;\n    if (param_2 != param_3) {\n        do {\n            uVar1 = *param_2;\n            if (uVar1 == 0) {\n                uVar6 = CONCAT44(param_2, *(param_2[1] + 0x4c + param_1));\n            }\n            else {\n                uVar6 = fcn.0047cd30();\n            }\n            param_2 = uVar6 >> 0x20;\n    // switch table (25 cases) at 0x4812e0\n            switch(uVar6) {\n            case 5:\n                if (param_3 - param_2 < 2) {\n                    return -2;\n                }\n            default:\ncode_r0x004811f6:\n                *param_4 = param_2;\n                return 0;\n            case 6:\n                if (param_3 - param_2 < 3) {\n                    return -2;\n                }\ncode_r0x00480f62:\n                *param_4 = param_2;\n                return 0;\n            case 7:\n                if (param_3 - param_2 < 4) {\n                    return -2;\n                }\n                goto code_r0x004811f6;\n            case 9:\n            case 10:\n            case 0x15:\n                while( true ) {\n                    puVar5 = param_2 + 2;\n                    if (puVar5 == param_3) {\n                        return -1;\n                    }\n                    if (*puVar5 == 0) {\n                        uVar6 = CONCAT44(puVar5, *(param_2[3] + 0x4c + param_1));\n                    }\n                    else {\n                        uVar6 = fcn.0047cd30();\n                    }\n                    param_2 = uVar6 >> 0x20;\n                    iVar3 = uVar6;\n                    if (iVar3 == 0xe) break;\n                    if ((iVar3 < 9) || ((10 < iVar3 && (iVar3 != 0x15)))) goto code_r0x00481028;\n                }\n            case 0xe:\n                bVar2 = false;\n                do {\n                    puVar5 = param_2 + 2;\n                    if (puVar5 == param_3) {\n                        return -1;\n                    }\n                    if (*puVar5 == 0) {\n                        uVar6 = CONCAT44(puVar5, *(param_2[3] + 0x4c + param_1));\n                    }\n                    else {\n                        uVar6 = fcn.0047cd30();\n                    }\n                    param_2 = uVar6 >> 0x20;\n                    iVar3 = uVar6;\n                    if ((iVar3 == 0xc) || (iVar3 == 0xd)) {\ncode_r0x00481094:\n                        puVar5 = param_2 + 2;\n                        do {\n                            if (puVar5 == param_3) {\n                                return -1;\n                            }\n                            if (*puVar5 == 0) {\n                                uVar6 = CONCAT44(puVar5, *(puVar5[1] + 0x4c + param_1));\n                            }\n                            else {\n                                uVar6 = fcn.0047cd30();\n                            }\n                            param_2 = uVar6 >> 0x20;\n                            if (uVar6 == iVar3) {\n                                puVar5 = param_2 + 2;\n                                if (puVar5 == param_3) {\n                                    return -1;\n                                }\n                                if (*puVar5 == 0) {\n                                    uVar6 = CONCAT44(puVar5, *(param_2[3] + 0x4c + param_1));\n                                }\n                                else {\n                                    uVar6 = fcn.0047cd30();\n                                }\n                                param_2 = uVar6 >> 0x20;\n                                puVar5 = param_2;\n    // switch table (13 cases) at 0x481378\n                                switch(uVar6) {\n                                case 9:\n                                case 10:\n                                case 0x15:\n                                    goto code_r0x00481171;\n                                case 0xb:\n                                    goto code_r0x004812ba;\n                                default:\n                                    goto code_r0x0048126a;\n                                case 0x11:\n                                    goto code_r0x00481295;\n                                }\n                            }\n    // switch table (9 cases) at 0x481354\n                            switch(uVar6) {\n                            case 0:\n                            case 1:\n                            case 2:\n                            case 8:\n                                goto code_r0x0048126a;\n                            case 3:\n                                iVar4 = fcn.00480d20(param_1);\n                                if (iVar4 < 1) {\n                                    if (iVar4 == 0) {\n                                        *param_4 = puVar5;\n                                        return 0;\n                                    }\n                                    return iVar4;\n                                }\n                                break;\n                            default:\n                                goto code_r0x00481094;\n                            case 5:\n                                if (param_3 - param_2 < 2) {\n                                    return -2;\n                                }\n                                goto code_r0x00481094;\n                            case 6:\n                                if (param_3 - param_2 < 3) {\n                                    return -2;\n                                }\n                                puVar5 = param_2 + 3;\n                                break;\n                            case 7:\n                                if (param_3 - param_2 < 4) {\n                                    return -2;\n                                }\n                                puVar5 = param_2 + 4;\n                            }\n                        } while( true );\n                    }\n                    if (iVar3 < 9) goto code_r0x004811f6;\n                    if ((10 < iVar3) && (iVar3 != 0x15)) {\n                        *param_4 = param_2;\n                        return 0;\n                    }\n                } while( true );\n            case 0x16:\n            case 0x18:\n            case 0x19:\n            case 0x1a:\n            case 0x1b:\n                break;\n            case 0x17:\n                if (bVar2) {\ncode_r0x00481028:\n                    *param_4 = param_2;\n                    return 0;\n                }\n                puVar5 = param_2 + 2;\n                bVar2 = true;\n                if (puVar5 == param_3) {\n                    return -1;\n                }\n                uVar1 = *puVar5;\n                if (uVar1 == 0) {\n                    uVar6 = CONCAT44(puVar5, *(param_2[3] + 0x4c + param_1));\n                }\n                else {\n                    uVar6 = fcn.0047cd30();\n                }\n                param_2 = uVar6 >> 0x20;\n    // switch table (25 cases) at 0x481320\n                switch(uVar6) {\n                case 5:\n                    if (param_3 - param_2 < 2) {\n                        return -2;\n                    }\n                    goto code_r0x00480f62;\n                case 6:\n                    if (param_3 - param_2 < 3) {\n                        return -2;\n                    }\n                    goto code_r0x004811f6;\n                case 7:\n                    if (3 < param_3 - param_2) {\n                        *param_4 = param_2;\n                        return 0;\n                    }\n                    return -2;\n                default:\n                    goto code_r0x004811f6;\n                case 0x16:\n                case 0x18:\n                    break;\n                case 0x1d:\n                    if ((*(((param_2[1] >> 5) + *(uVar1 + 0x49e8b8) * 8) * 4 + 0x49e3b8) & 1 << (param_2[1] & 0x1f)) ==\n                        0) goto code_r0x004811f6;\n                }\n                break;\n            case 0x1d:\n                if ((*(((param_2[1] >> 5) + *(uVar1 + 0x49e9b8) * 8) * 4 + 0x49e3b8) & 1 << (param_2[1] & 0x1f)) == 0)\n                goto code_r0x00480f62;\n            }\ncode_r0x004811dc:\n            param_2 = param_2 + 2;\n        } while (param_2 != param_3);\n    }\n    return -1;\n    do {\n        param_2 = uVar6 >> 0x20;\n        puVar5 = param_2;\n    // switch table (25 cases) at 0x481398\n        switch(uVar6) {\n        case 5:\n            if (param_3 - param_2 < 2) {\n                return -2;\n            }\n            goto code_r0x0048126a;\n        case 6:\n            if (param_3 - param_2 < 3) {\n                return -2;\n            }\n            goto code_r0x0048126a;\n        case 7:\n            if (param_3 - param_2 < 4) {\n                return -2;\n            }\n        default:\n            goto code_r0x0048126a;\n        case 9:\n        case 10:\n        case 0x15:\ncode_r0x00481171:\n            puVar5 = param_2 + 2;\n            if (puVar5 == param_3) {\n                return -1;\n            }\n            if (*puVar5 == 0) {\n                uVar6 = CONCAT44(puVar5, *(param_2[3] + 0x4c + param_1));\n            }\n            else {\n                uVar6 = fcn.0047cd30();\n            }\n            break;\n        case 0xb:\n            goto code_r0x004812ba;\n        case 0x11:\n            goto code_r0x00481295;\n        case 0x16:\n        case 0x18:\n            goto code_r0x004811dc;\n        case 0x1d:\n            if ((*(((param_2[1] >> 5) + *(*param_2 + 0x49e8b8) * 8) * 4 + 0x49e3b8) & 1 << (param_2[1] & 0x1f)) == 0)\n            goto code_r0x0048126a;\n            goto code_r0x004811dc;\n        }\n    } while( true );\ncode_r0x00481295:\n    param_2 = puVar5 + 2;\n    if (param_2 == param_3) {\n        return -1;\n    }\n    if ((*param_2 == 0) && (puVar5[3] == 0x3e)) {\n        *param_4 = puVar5 + 4;\n        return 3;\n    }\n    goto code_r0x0048126a;\ncode_r0x004812ba:\n    *param_4 = param_2 + 2;\n    return 1;\ncode_r0x0048126a:\n    *param_4 = param_2;\n    return 0;\n}\n",
        "token_count": 2547
    },
    "004813e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004813e0(uint8_t *param_1, uint8_t *param_2, int32_t param_3)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    uint8_t **in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint8_t *puVar7;\n    ulong uVar8;\n    \n    if (param_2 == param_1) {\n        return 0xffffffff;\n    }\n    uVar1 = *param_2;\n    if (uVar1 == 0) {\n        uVar3 = *(param_2[1] + 0x4c + param_3);\n    }\n    else {\n        uVar8 = fcn.0047cd30();\n        param_2 = uVar8 >> 0x20;\n        uVar3 = uVar8;\n    }\n    // switch table (25 cases) at 0x4816dc\n    switch(uVar3) {\n    case 5:\ncode_r0x0048154a:\n        if (param_1 - param_2 < 2) {\n            return 0xfffffffe;\n        }\n        break;\n    case 6:\ncode_r0x0048155f:\n        if (param_1 - param_2 < 3) {\n            return 0xfffffffe;\n        }\n        break;\n    case 7:\ncode_r0x00481574:\n        if (param_1 - param_2 < 4) {\n            return 0xfffffffe;\n        }\n        break;\n    case 0xf:\n        uVar5 = fcn.004804c0(param_3, param_1);\n        return uVar5;\n    case 0x10:\n        puVar7 = param_2 + 2;\n        if (puVar7 == param_1) {\n            return 0xffffffff;\n        }\n        if (*puVar7 == 0) {\n            uVar8 = CONCAT44(puVar7, *(param_2[3] + 0x4c + param_3));\n        }\n        else {\n            uVar8 = fcn.0047cd30();\n        }\n        param_2 = uVar8 >> 0x20;\n        if (uVar8 == 0x14) {\n            uVar5 = fcn.004807d0();\n            return uVar5;\n        }\n        if (uVar8 == 0x1b) {\n            uVar5 = fcn.004801d0(param_3);\n            return uVar5;\n        }\n        break;\n    case 0x11:\n        uVar5 = fcn.00480a00();\n        return uVar5;\n    case 0x16:\n    case 0x18:\ncode_r0x00481459:\n        param_2 = param_2 + 2;\n        bVar2 = false;\n        if (param_2 == param_1) {\n            return 0xffffffff;\n        }\n        do {\n            uVar1 = *param_2;\n            if (uVar1 == 0) {\n                uVar8 = CONCAT44(param_2, *(param_2[1] + 0x4c + param_3));\n            }\n            else {\n                uVar8 = fcn.0047cd30();\n            }\n            param_2 = uVar8 >> 0x20;\n            puVar7 = param_2;\n    // switch table (25 cases) at 0x48171c\n            switch(uVar8) {\n            case 5:\n                goto code_r0x0048154a;\n            case 6:\n                goto code_r0x0048155f;\n            case 7:\n                goto code_r0x00481574;\n            default:\n                goto code_r0x004816d2;\n            case 9:\n            case 10:\n            case 0x15:\n                param_2 = param_2 + 2;\n                if (param_2 == param_1) {\n                    return 0xffffffff;\n                }\n                goto code_r0x00481594;\n            case 0xb:\n                goto code_r0x0048161f;\n            case 0x11:\n                goto code_r0x0048162e;\n            case 0x17:\n                if (!bVar2) {\n                    puVar7 = param_2 + 2;\n                    bVar2 = true;\n                    if (puVar7 == param_1) {\n                        return 0xffffffff;\n                    }\n                    uVar1 = *puVar7;\n                    if (uVar1 == 0) {\n                        uVar8 = CONCAT44(puVar7, *(param_2[3] + 0x4c + param_3));\n                    }\n                    else {\n                        uVar8 = fcn.0047cd30();\n                    }\n                    param_2 = uVar8 >> 0x20;\n    // switch table (25 cases) at 0x481760\n                    switch(uVar8) {\n                    case 5:\n                        goto code_r0x0048154a;\n                    case 6:\n                        goto code_r0x0048155f;\n                    case 7:\n                        goto code_r0x00481574;\n                    default:\n                        break;\n                    case 0x16:\n                    case 0x18:\n                        goto code_r0x00481537;\n                    case 0x1d:\n                        uVar6 = param_2[1];\n                        iVar4 = (uVar6 >> 5) + *(uVar1 + 0x49e8b8) * 8;\n                        goto code_r0x00481525;\n                    }\n                }\n                goto code_r0x004816d2;\n            case 0x1d:\n                uVar6 = param_2[1];\n                iVar4 = (uVar6 >> 5) + *(uVar1 + 0x49e9b8) * 8;\ncode_r0x00481525:\n                if ((*(iVar4 * 4 + 0x49e3b8) & 1 << (uVar6 & 0x1f)) == 0) goto code_r0x004816d2;\n            case 0x16:\n            case 0x18:\n            case 0x19:\n            case 0x1a:\n            case 0x1b:\ncode_r0x00481537:\n                param_2 = param_2 + 2;\n                if (param_2 == param_1) {\n                    return 0xffffffff;\n                }\n            }\n        } while( true );\n    case 0x1d:\n        if ((*(((param_2[1] >> 5) + *(uVar1 + 0x49e8b8) * 8) * 4 + 0x49e3b8) & 1 << (param_2[1] & 0x1f)) != 0)\n        goto code_r0x00481459;\n    }\n    goto code_r0x004816d2;\ncode_r0x004815cb:\n    param_2 = param_2 + 2;\n    if (param_2 == param_1) {\n        return 0xffffffff;\n    }\n    goto code_r0x00481594;\ncode_r0x0048161f:\n    *in_EAX = param_2 + 2;\n    return 2;\ncode_r0x00481594:\n    if (*param_2 == 0) {\n        uVar8 = CONCAT44(param_2, *(param_2[1] + 0x4c + param_3));\n    }\n    else {\n        uVar8 = fcn.0047cd30();\n    }\n    param_2 = uVar8 >> 0x20;\n    puVar7 = param_2;\n    // switch table (25 cases) at 0x481794\n    switch(uVar8) {\n    case 5:\n        goto code_r0x0048154a;\n    case 6:\n        goto code_r0x0048155f;\n    case 7:\n        goto code_r0x00481574;\n    default:\n        goto code_r0x004816d2;\n    case 9:\n    case 10:\n    case 0x15:\n        goto code_r0x004815cb;\n    case 0xb:\n        goto code_r0x0048161f;\n    case 0x11:\n        goto code_r0x0048162e;\n    case 0x16:\n    case 0x18:\n        break;\n    case 0x1d:\n        if ((*(((param_2[1] >> 5) + *(*param_2 + 0x49e8b8) * 8) * 4 + 0x49e3b8) & 1 << (param_2[1] & 0x1f)) == 0)\n        goto code_r0x004816d2;\n    }\n    uVar5 = fcn.00480ee0(param_3, param_2 + 2, param_1);\n    return uVar5;\ncode_r0x0048162e:\n    param_2 = puVar7 + 2;\n    if (param_2 == param_1) {\n        return 0xffffffff;\n    }\n    if ((*param_2 == 0) && (puVar7[3] == 0x3e)) {\n        *in_EAX = puVar7 + 4;\n        return 4;\n    }\ncode_r0x004816d2:\n    *in_EAX = param_2;\n    return 0;\n}\n",
        "token_count": 2104
    },
    "00483380": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004833e5)\n// WARNING: Removing unreachable block (ram,0x00483413)\n// WARNING: Removing unreachable block (ram,0x0048341b)\n// WARNING: Removing unreachable block (ram,0x00483421)\n// WARNING: Removing unreachable block (ram,0x00483429)\n// WARNING: Removing unreachable block (ram,0x0048342c)\n// WARNING: Removing unreachable block (ram,0x0048344c)\n// WARNING: Removing unreachable block (ram,0x00483460)\n// WARNING: Removing unreachable block (ram,0x00483468)\n// WARNING: Removing unreachable block (ram,0x004833fd)\n// WARNING: Removing unreachable block (ram,0x00483403)\n// WARNING: Removing unreachable block (ram,0x0048347f)\n// WARNING: Removing unreachable block (ram,0x0048349b)\n// WARNING: Removing unreachable block (ram,0x004834b0)\n// WARNING: Removing unreachable block (ram,0x004834b5)\n// WARNING: Removing unreachable block (ram,0x004834bd)\n// WARNING: Removing unreachable block (ram,0x004834c5)\n// WARNING: Removing unreachable block (ram,0x004834c7)\n// WARNING: Removing unreachable block (ram,0x004834d2)\n// WARNING: Removing unreachable block (ram,0x004834e7)\n// WARNING: Removing unreachable block (ram,0x0048350d)\n// WARNING: Removing unreachable block (ram,0x00483515)\n// WARNING: Removing unreachable block (ram,0x00483530)\n// WARNING: Removing unreachable block (ram,0x00483548)\n// WARNING: Removing unreachable block (ram,0x0048354f)\n// WARNING: Removing unreachable block (ram,0x00483580)\n// WARNING: Removing unreachable block (ram,0x004835f0)\n// WARNING: Removing unreachable block (ram,0x00483599)\n// WARNING: Removing unreachable block (ram,0x004835a1)\n// WARNING: Removing unreachable block (ram,0x00483570)\n// WARNING: Removing unreachable block (ram,0x00483578)\n// WARNING: Removing unreachable block (ram,0x004835a7)\n// WARNING: Removing unreachable block (ram,0x004835bc)\n// WARNING: Removing unreachable block (ram,0x004835c0)\n// WARNING: Removing unreachable block (ram,0x004835d8)\n// WARNING: Removing unreachable block (ram,0x004835e0)\n// WARNING: Removing unreachable block (ram,0x00483472)\n// WARNING: Removing unreachable block (ram,0x00483520)\n\nuint fcn.00483380(uint param_1, uint param_2, int32_t param_3, int32_t param_4, int32_t *param_5, uint param_6, \n                 uint param_7, uint param_8, uint param_9, uint param_10)\n\n{\n    int32_t in_EAX;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0;\n    uStack8 = 0;\n    param_3 = *(in_EAX + 0x44) * 5 + param_3;\n    fcn.004831e0(param_4 + *(in_EAX + 0x44) * -2, &uStack8, &uStack4, &param_3);\n    *param_5 = param_3;\n    return 0;\n}\n",
        "token_count": 775
    },
    "00483c10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00483c10(uint param_1, int32_t param_2, int32_t param_3, int32_t param_4, uint8_t **param_5)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint16_t uVar5;\n    uint8_t *in_EAX;\n    uint uVar6;\n    uint32_t uVar7;\n    uint8_t *unaff_EDI;\n    \n    if (in_EAX == unaff_EDI) {\n        return 0xfffffffc;\n    }\n    piVar3 = *(param_4 + 0x4c);\n    if (in_EAX + 1 == unaff_EDI) {\n        if (2 < *(param_4 + 0x49) - 3U) {\n            uVar7 = *in_EAX;\n            if (uVar7 < 0xf0) {\n                if (uVar7 != 0xef) {\n                    if (uVar7 == 0) {\n                        return 0xffffffff;\n                    }\n                    if (uVar7 == 0x3c) {\n                        return 0xffffffff;\n                    }\n                    goto code_r0x00483ddd;\n                }\n            }\n            else if (1 < uVar7 - 0xfe) goto code_r0x00483ddd;\n            if ((*(param_4 + 0x49) == '\\0') && (param_2 == 1)) goto code_r0x00483ddd;\n        }\n        return 0xffffffff;\n    }\n    uVar1 = in_EAX[1];\n    uVar5 = CONCAT11(*in_EAX, uVar1);\n    if (uVar5 < 0xff00) {\n        if (uVar5 == 0xfeff) {\n            if ((*(param_4 + 0x49) != '\\0') || (param_2 != 1)) {\n                *param_5 = in_EAX + 2;\n                *piVar3 = *(param_3 + 0x10);\n                return 0xe;\n            }\n            goto code_r0x00483ddd;\n        }\n        if (uVar5 == 0x3c00) {\n            if (((*(param_4 + 0x49) != '\\x04') && (*(param_4 + 0x49) != '\\x03')) || (param_2 != 1)) {\n                iVar4 = *(param_3 + 0x14);\n                *piVar3 = iVar4;\n                uVar6 = (**(iVar4 + param_2 * 4))(iVar4);\n                return uVar6;\n            }\n            goto code_r0x00483ddd;\n        }\n        if (uVar5 == 0xefbb) {\n            if ((param_2 != 1) ||\n               (((cVar2 = *(param_4 + 0x49),  cVar2 != '\\0' && (cVar2 != '\\x04')) &&\n                ((cVar2 != '\\x05' && (cVar2 != '\\x03')))))) {\n                if (in_EAX + 2 == unaff_EDI) {\n                    return 0xffffffff;\n                }\n                if (in_EAX[2] == 0xbf) {\n                    *param_5 = in_EAX + 3;\n                    *piVar3 = *(param_3 + 8);\n                    return 0xe;\n                }\n            }\n            goto code_r0x00483ddd;\n        }\n    }\n    else if (uVar5 == 0xfffe) {\n        if ((*(param_4 + 0x49) != '\\0') || (param_2 != 1)) {\n            *param_5 = in_EAX + 2;\n            *piVar3 = *(param_3 + 0x14);\n            return 0xe;\n        }\n        goto code_r0x00483ddd;\n    }\n    if (*in_EAX == 0) {\n        if ((param_2 != 1) || (*(param_4 + 0x49) != '\\x05')) {\n            iVar4 = *(param_3 + 0x10);\n            *piVar3 = iVar4;\n            uVar6 = (**(iVar4 + param_2 * 4))(iVar4);\n            return uVar6;\n        }\n    }\n    else if ((uVar1 == 0) && (param_2 != 1)) {\n        iVar4 = *(param_3 + 0x14);\n        *piVar3 = iVar4;\n        uVar6 = (**(iVar4 + param_2 * 4))(iVar4);\n        return uVar6;\n    }\ncode_r0x00483ddd:\n    iVar4 = *(param_3 + *(param_4 + 0x49) * 4);\n    *piVar3 = iVar4;\n    uVar6 = (**(iVar4 + param_2 * 4))(iVar4);\n    return uVar6;\n}\n",
        "token_count": 1093
    },
    "004844a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004844a0(int32_t param_1)\n\n{\n    code **in_EAX;\n    \n    if ((in_EAX[4] == NULL) && (param_1 == 0x1c)) {\n        return 0x3b;\n    }\n    *in_EAX = fcn.00448980;\n    return 0xffffffff;\n}\n",
        "token_count": 80
    },
    "0041537b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041537b(int32_t *param_1)\n\n{\n    if (*param_1 != 0) {\n        fcn.00452a07(*param_1);\n        *param_1 = 0;\n        param_1[1] = 0;\n        param_1[2] = 0;\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "0040e06a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e06a(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    fcn.0044ed2d(param_1);\n    if (param_1[0xb] != 0) {\n        fcn.00455f3f(param_1[0xb]);\n    }\n    param_1[0xb] = 0;\n    if (param_1[9] != 0) {\n        fcn.00455f3f(param_1[9]);\n    }\n    param_1[9] = 0;\n    if (param_1[7] != 0) {\n        fcn.00455f3f(param_1[7]);\n    }\n    param_1[7] = 0;\n    if (param_1[5] != 0) {\n        fcn.00455f3f(param_1[5]);\n    }\n    param_1[5] = 0;\n    if (param_1[3] != 0) {\n        fcn.00455f3f(param_1[3]);\n    }\n    param_1[3] = 0;\n    if (param_1[1] != 0) {\n        fcn.00455f3f(param_1[1]);\n    }\n    param_1[1] = 0;\n    iVar1 = *param_1;\n    if (iVar1 == 0) {\n        fcn.0045c4a9(0xc);\n        return;\n    }\n    if (iVar1 < 4) {\n        fcn.00450194(iVar1 * 0x18 + 0x4b8508);\n    }\n    return;\n}\n",
        "token_count": 375
    },
    "0041d4e9": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0041d4e9(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint noname_30, uint noname_31, \n            uint noname_32, uint noname_33, uint noname_34, uint arg_ch, uint noname_36, uint noname_37, uint noname_38\n            , uint noname_39, uint noname_40, uint arg_24h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    int32_t *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    int32_t iStackY20540;\n    uint uStackY20536;\n    int16_t iStackY20532;\n    uint uStackY208;\n    uint uStackY204;\n    uint *arg_8h;\n    uint in_stack_ffffff44;\n    uint in_stack_ffffff48;\n    uint in_stack_ffffff4c;\n    uint in_stack_ffffff50;\n    uint in_stack_ffffff54;\n    char16_t *pcVar3;\n    uint uVar4;\n    uint uVar5;\n    char *pcVar6;\n    char *pcVar7;\n    uint arg_8h_00;\n    int32_t iStack16;\n    uint uStack12;\n    uint var_4h_2;\n    \n    var_4h_2 = 0xffffffff;\n    uStack12 = 0x489b2c;\n    iStack16 = *in_FS_OFFSET;\n    fcn.00459c50();\n    *in_FS_OFFSET = &stack0xfffffff0;\n    var_4h_2 = 1;\n    if (extraout_ECX + 0x40 != &stack0x00000020) {\n        fcn.00402450(&stack0x00000020, 0, 0xffffffff);\n    }\n    uVar1 = fcn.00453054(L\"Software\\\\Microsoft\\\\Windows\\\\Windows Error Reporting\\\\LocalDumps\\\\\");\n    fcn.00402667(L\"Software\\\\Microsoft\\\\Windows\\\\Windows Error Reporting\\\\LocalDumps\\\\\", uVar1);\n    fcn.004019b5(extraout_ECX + 0x40, 0, 0xffffffff);\n    arg_8h_00 = 0x80000002;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)();\n    pcVar7 = \"EnableWer()\";\n    pcVar6 = \"%s m_bKeyOpenExisting=%d\";\n    uVar5 = 0x800040;\n    uVar4 = 0xdf;\n    pcVar3 = L\"WrpPlugin.cpp\";\n    *(extraout_ECX + 0x18) = iStackY20540 == 2;\n    uVar1 = fcn.0042c180();\n    fcn.0042c3c0(uVar1, pcVar3, uVar4, uVar5, pcVar6, pcVar7);\n    if (iVar2 == 0) {\n        iStackY20532 = 0;\n        uVar1 = 0;\n        fcn.00453710();\n        iVar2 = fcn.0041daad(uStackY20536, uVar1, &stack0xffffafcc);\n        uVar1 = extraout_ECX_00;\n        if (iVar2 != 0) {\n            if (iStackY20532 == 0) {\n                uVar1 = 0;\n            }\n            else {\n                uVar1 = fcn.00453054(&stack0xffffafcc);\n            }\n            fcn.00402667(&stack0xffffafcc, uVar1);\n            pcVar7 = \"EnableWer()\";\n            pcVar6 = \"%s m_wsOldDumpFolder=%S\";\n            uVar5 = 0x800040;\n            uVar4 = 0xe6;\n            pcVar3 = L\"WrpPlugin.cpp\";\n            uVar1 = fcn.0042c180();\n            fcn.0042c3c0(uVar1, pcVar3, uVar4, uVar5, pcVar6, pcVar7);\n            *(extraout_ECX + 0x34) = 1;\n            uVar1 = extraout_ECX_01;\n        }\n        iVar2 = fcn.0041db67(uStackY20536, uVar1, extraout_ECX + 0x38);\n        if (iVar2 == 0) {\n            pcVar7 = \"EnableWer()\";\n            pcVar6 = \"%s m_dwOldDumpType=%lu\";\n            uVar5 = 0x800040;\n            uVar4 = 0xeb;\n            pcVar3 = L\"WrpPlugin.cpp\";\n            uVar1 = fcn.0042c180();\n            fcn.0042c3c0(uVar1, pcVar3, uVar4, uVar5, pcVar6, pcVar7);\n            *(extraout_ECX + 0x3c) = 1;\n        }\n        uVar1 = 0x41d6c3;\n        fcn.004084c5(&stack0x00000020);\n        arg_8h = &fcn.0041d4e9::var_ch_2;\n        var_4h_2._0_1_ = 2;\n        fcn.004084c5(arg_8h);\n        var_4h_2 = CONCAT31(var_4h_2._1_3_, 1);\n        uStackY204 = 0x41d6e7;\n        fcn.0041d936(uStackY20536, var_8h, arg_8h, in_stack_ffffff44, in_stack_ffffff48, in_stack_ffffff4c, \n                     in_stack_ffffff50, in_stack_ffffff54, uVar1);\n        uStackY208 = 0x41d6f3;\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n        if (iVar2 == 0) {\n            pcVar6 = \"%s Success closing key.\";\n            uVar4 = 0x800040;\n            uVar1 = 0xf2;\n        }\n        else {\n            pcVar6 = \"%s Error closing key.\";\n            uVar4 = 0x800002;\n            uVar1 = 0xf4;\n        }\n    }\n    else {\n        pcVar6 = \"%s Error opening key.\";\n        uVar4 = 0x800002;\n        uVar1 = 0xf7;\n    }\n    pcVar7 = \"EnableWer()\";\n    pcVar3 = L\"WrpPlugin.cpp\";\n    uVar5 = fcn.0042c180();\n    fcn.0042c3c0(uVar5, pcVar3, uVar1, uVar4, pcVar6, pcVar7);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    *in_FS_OFFSET = iStack16;\n    fcn.004529f8(arg_8h_00);\n    return;\n}\n",
        "token_count": 1783
    },
    "0041daad": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041daad(uint arg_8h, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint arg_14h;\n    uint *arg_8h_00;\n    uint lpcbData;\n    int32_t lpType;\n    uint lpData;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b4f00 ^ &stack0xfffffffc;\n    lpType = 0;\n    fcn.00453710(&lpData, 0, 0x402);\n    fcn.00453710(&lpData, 0, 0x402);\n    arg_8h_00 = &lpType;\n    lpcbData = 0x400;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(arg_8h, 0x4a520c, 0, arg_8h_00, &lpData, &lpcbData);\n    if ((iVar1 == 0) && (lpType == 2)) {\n        arg_14h = fcn.00453054(&lpData);\n        fcn.00457920(arg_10h, 0x400, &lpData, arg_14h);\n    }\n    fcn.004529f8(arg_8h_00);\n    return;\n}\n",
        "token_count": 302
    },
    "004234c0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004234c0(int64_t *param_1, uint32_t param_2)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    uint32_t uVar3;\n    int64_t *piVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    bool bVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    int64_t iVar11;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar3 = 0;\n    if ((param_2 == 0) || (param_2 < 4)) {\n        var_1ch = 0;\n        var_20h = 0;\n        iVar5 = var_1ch;\n        uVar6 = var_20h;\n    }\n    else {\n        iVar10 = 0;\n        iVar11 = 0;\n        iVar8 = 0;\n        iVar9 = 0;\n        piVar4 = param_1;\n        do {\n            uVar3 = uVar3 + 4;\n            iVar10 = iVar10 + *piVar4;\n            iVar11 = iVar11 + piVar4[1];\n            piVar1 = piVar4 + 2;\n            piVar2 = piVar4 + 3;\n            piVar4 = piVar4 + 4;\n            iVar8 = iVar8 + *piVar1;\n            iVar9 = iVar9 + *piVar2;\n        } while (uVar3 < param_2 - (param_2 & 3));\n        iVar8 = iVar8 + iVar10 + iVar9 + iVar11;\n        iVar5 = iVar8 >> 0x20;\n        uVar6 = iVar8;\n    }\n    if (param_2 <= uVar3) {\n        return CONCAT44(iVar5, uVar6);\n    }\n    var_20h = 0;\n    var_1ch = 0;\n    var_10h = 0;\n    var_ch = 0;\n    if (param_2 - uVar3 < 2) {\n        var_14h = 0;\n        var_10h = 0;\n    }\n    else {\n        do {\n            bVar7 = CARRY4(var_10h, *(param_1 + uVar3));\n            var_10h = var_10h + *(param_1 + uVar3);\n            var_ch = var_ch + *(param_1 + uVar3 * 8 + 4) + bVar7;\n            bVar7 = CARRY4(var_20h, *(param_1 + uVar3 + 1));\n            var_20h = var_20h + *(param_1 + uVar3 + 1);\n            var_1ch = var_1ch + *(param_1 + uVar3 * 8 + 0xc) + bVar7;\n            uVar3 = uVar3 + 2;\n            var_14h = var_ch;\n        } while (uVar3 < param_2 - 1);\n    }\n    if (uVar3 < param_2) {\n        bVar7 = CARRY4(uVar6, *(param_1 + uVar3));\n        uVar6 = uVar6 + *(param_1 + uVar3);\n        iVar5 = iVar5 + *(param_1 + uVar3 * 8 + 4) + bVar7;\n    }\n    return CONCAT44(iVar5 + var_1ch + var_14h + CARRY4(var_20h, var_10h) + CARRY4(uVar6, var_20h + var_10h), \n                    uVar6 + var_20h + var_10h);\n}\n",
        "token_count": 875
    },
    "00429790": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid __cdecl fcn.00429790(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint32_t var_28h;\n    uint var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48b088;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_10h = uVar1;\n    if (*(in_ECX + 0x44) == 2) {\n        var_14h = 7;\n        var_18h = 0;\n        var_28h = var_28h & 0xffff0000;\n        fcn.00402667(arg_8h, arg_ch);\n        var_4h = 0;\n        (****(in_ECX + 0x48))(in_ECX + 0x1c, &var_28h, 0, arg_8h, arg_ch, uVar1);\n        if (7 < var_14h) {\n            fcn.00452a07(var_28h);\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(var_28h);\n    return;\n}\n",
        "token_count": 362
    },
    "00432200": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpFileName\n\nvoid fcn.00432200(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t *in_FS_OFFSET;\n    uint *lpFileName;\n    uint var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x48b088;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_14h = 7;\n    var_18h = 0;\n    lpFileName = lpFileName & 0xffff0000;\n    var_4h = 0;\n    iVar1 = fcn.00432120(var_10h);\n    if (iVar1 != 0) {\n        puVar2 = &lpFileName;\n        if (7 < var_14h) {\n            puVar2 = lpFileName;\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_DeleteFileW)(puVar2);\n        if (iVar1 == 0) {\n            (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n    }\n    if (7 < var_14h) {\n        fcn.00452a07(lpFileName);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(lpFileName);\n    return;\n}\n",
        "token_count": 341
    },
    "00444e60": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00444e60(int32_t param_1, uint param_2, int32_t param_3)\n\n{\n    if (param_3 - 1U < 3) {\n        fcn.0043c6b0(param_1 + 0x34 + param_3 * 4);\n        return param_2;\n    }\n    fcn.0043c980(0x4a23ad, 0xffffffff);\n    return param_2;\n}\n",
        "token_count": 108
    },
    "00444eb0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00444eb0(int32_t param_1, uint param_2, int32_t param_3)\n\n{\n    if (param_3 - 1U < 3) {\n        fcn.0043c6b0(param_1 + 0x44 + param_3 * 4);\n        return param_2;\n    }\n    fcn.0043c980(0x4a23ad, 0xffffffff);\n    return param_2;\n}\n",
        "token_count": 108
    },
    "004453f0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.004453f0(uint *param_1, uint param_2, uint param_3, uint param_4, uchar *param_5, int32_t *param_6)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    \n    *param_6 = 0;\n    *param_5 = 0;\n    puVar1 = (*_sym.imp.WS2_32.dll_gethostbyname)(param_1);\n    if (puVar1 == NULL) {\n        uVar3 = (*_sym.imp.WS2_32.dll_WSAGetLastError)();\n    // switch table (4 cases) at 0x4454c8\n        switch(uVar3) {\n        default:\n            return 0x2af9;\n        case 0x2afa:\n            return 0x2afa;\n        case 0x2afb:\n            return 0x2afb;\n        }\n    }\n    if ((*(puVar1 + 2) == 2) && (*(puVar1 + 10) == 4)) {\n        piVar4 = puVar1[3];\n        iVar2 = *piVar4;\n        while (iVar2 != 0) {\n            iVar2 = fcn.00445380();\n            *param_6 = iVar2;\n            if (iVar2 == 0) {\n                return 8;\n            }\n            piVar4 = piVar4 + 1;\n            param_6 = iVar2 + 0x1c;\n            puVar1 = param_1;\n            iVar2 = *piVar4;\n        }\n    }\n    fcn.00459e39(param_4, 0x401, *puVar1, 0x400);\n    return 0;\n}\n",
        "token_count": 395
    },
    "00479990": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00479990(uint8_t *param_1, uint8_t **param_2)\n\n{\n    uint8_t *in_EAX;\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    \n    if (in_EAX != param_1) {\n        if (*in_EAX != 0x2d) {\ncode_r0x004799a6:\n            *param_2 = in_EAX;\n            return 0;\n        }\n        in_EAX = in_EAX + 1;\n        if (in_EAX != param_1) {\n            iVar3 = param_1 - in_EAX;\n            do {\n    // switch table (28 cases) at 0x479aa4\n                switch(*(*in_EAX + 0x4c + unaff_EBX)) {\n                case 0:\n                case 1:\n                case 8:\n                    goto code_r0x004799a6;\n                default:\n                    puVar2 = in_EAX + 1;\n                    iVar3 = iVar3 + -1;\n                    break;\n                case 5:\n                    if (iVar3 < 2) {\n                        return 0xfffffffe;\n                    }\n                    iVar1 = (**(unaff_EBX + 0x164))();\n                    if (iVar1 != 0) goto code_r0x004799a6;\n                    puVar2 = in_EAX + 2;\n                    iVar3 = iVar3 + -2;\n                    break;\n                case 6:\n                    if (iVar3 < 3) {\n                        return 0xfffffffe;\n                    }\n                    iVar1 = (**(unaff_EBX + 0x168))();\n                    puVar2 = in_EAX;\n                    if (iVar1 != 0) {\ncode_r0x00479a89:\n                        *param_2 = puVar2;\n                        return 0;\n                    }\n                    puVar2 = in_EAX + 3;\n                    iVar3 = iVar3 + -3;\n                    break;\n                case 7:\n                    if (iVar3 < 4) {\n                        return 0xfffffffe;\n                    }\n                    iVar1 = (**(unaff_EBX + 0x16c))();\n                    if (iVar1 != 0) {\n                        *param_2 = in_EAX;\n                        return 0;\n                    }\n                    puVar2 = in_EAX + 4;\n                    iVar3 = iVar3 + -4;\n                    break;\n                case 0x1b:\n                    puVar2 = in_EAX + 1;\n                    iVar3 = iVar3 + -1;\n                    if (puVar2 == param_1) {\n                        return 0xffffffff;\n                    }\n                    if (*puVar2 == 0x2d) {\n                        puVar2 = in_EAX + 2;\n                        if (puVar2 == param_1) {\n                            return 0xffffffff;\n                        }\n                        if (*puVar2 == 0x3e) {\n                            *param_2 = in_EAX + 3;\n                            return 0xd;\n                        }\n                        goto code_r0x00479a89;\n                    }\n                }\n                in_EAX = puVar2;\n            } while (puVar2 != param_1);\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 716
    },
    "00479c60": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint8_t * fcn.00479c60(uint8_t *param_1, uint8_t **param_2)\n\n{\n    uint8_t *in_EAX;\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    \n    if (in_EAX == param_1) {\n        return 0xffffffff;\n    }\n    // switch table (25 cases) at 0x479f00\n    switch(*(*in_EAX + 0x4c + unaff_EBX)) {\n    case 5:\n        if (param_1 - in_EAX < 2) {\n            return 0xfffffffe;\n        }\n        iVar2 = (**(unaff_EBX + 0x158))();\n        if (iVar2 == 0) goto code_r0x00479c94;\n        puVar3 = in_EAX + 2;\n        break;\n    case 6:\n        if (param_1 - in_EAX < 3) {\n            return 0xfffffffe;\n        }\n        iVar2 = (**(unaff_EBX + 0x15c))();\n        if (iVar2 == 0) goto code_r0x00479c94;\n        puVar3 = in_EAX + 3;\n        break;\n    case 7:\n        if (param_1 - in_EAX < 4) {\n            return 0xfffffffe;\n        }\n        iVar2 = (**(unaff_EBX + 0x160))();\n        if (iVar2 == 0) goto code_r0x00479c94;\n        puVar3 = in_EAX + 4;\n        break;\n    default:\ncode_r0x00479c94:\n        *param_2 = in_EAX;\n        return NULL;\n    case 0x16:\n    case 0x18:\n        puVar3 = in_EAX + 1;\n    }\n    if (puVar3 != param_1) {\n        iVar2 = param_1 - puVar3;\n        do {\n            puVar4 = puVar3;\n    // switch table (25 cases) at 0x479f34\n            switch(*(*puVar3 + 0x4c + unaff_EBX)) {\n            case 5:\n                if (iVar2 < 2) {\n                    return 0xfffffffe;\n                }\n                iVar1 = (**(unaff_EBX + 0x14c))();\n                if (iVar1 == 0) goto code_r0x00479ea7;\n                puVar3 = puVar3 + 2;\n                iVar2 = iVar2 + -2;\n                break;\n            case 6:\n                if (iVar2 < 3) {\n                    return 0xfffffffe;\n                }\n                iVar1 = (**(unaff_EBX + 0x150))();\n                if (iVar1 == 0) goto code_r0x00479ef3;\n                puVar3 = puVar3 + 3;\n                iVar2 = iVar2 + -3;\n                break;\n            case 7:\n                if (iVar2 < 4) {\n                    return 0xfffffffe;\n                }\n                iVar1 = (**(unaff_EBX + 0x154))();\n                if (iVar1 == 0) goto code_r0x00479ec6;\n                puVar3 = puVar3 + 4;\n                iVar2 = iVar2 + -4;\n                break;\n            default:\n                goto code_r0x00479ef3;\n            case 9:\n            case 10:\n            case 0x15:\n                iVar2 = fcn.00479c00();\n                if (iVar2 == 0) goto code_r0x00479ea7;\n                puVar4 = puVar3 + 1;\n                if (puVar4 == param_1) {\n                    return 0xffffffff;\n                }\n                iVar2 = param_1 - puVar4;\n                goto code_r0x00479de0;\n            case 0xf:\n                iVar2 = fcn.00479c00();\n                if (iVar2 == 0) goto code_r0x00479ec6;\n                puVar4 = puVar3 + 1;\n                if (puVar4 == param_1) {\n                    return 0xffffffff;\n                }\n                if (*puVar4 == 0x3e) {\n                    *param_2 = puVar3 + 2;\n                    return in_EAX;\n                }\n                goto code_r0x00479ef3;\n            case 0x16:\n            case 0x18:\n            case 0x19:\n            case 0x1a:\n            case 0x1b:\n                puVar3 = puVar3 + 1;\n                iVar2 = iVar2 + -1;\n                break;\n            case 0x1d:\n                goto code_r0x00479ec6;\n            }\n        } while (puVar3 != param_1);\n    }\n    return 0xffffffff;\ncode_r0x00479de0:\n    // switch table (16 cases) at 0x479f70\n    switch(*(*puVar4 + 0x4c + unaff_EBX)) {\n    case 0:\n    case 1:\n    case 8:\ncode_r0x00479ea7:\n        *param_2 = puVar4;\n        return NULL;\n    default:\n        puVar3 = puVar4 + 1;\n        iVar2 = iVar2 + -1;\n        break;\n    case 5:\n        if (iVar2 < 2) {\n            return 0xfffffffe;\n        }\n        iVar1 = (**(unaff_EBX + 0x164))();\n        if (iVar1 != 0) goto code_r0x00479ea7;\n        puVar3 = puVar4 + 2;\n        iVar2 = iVar2 + -2;\n        break;\n    case 6:\n        if (iVar2 < 3) {\n            return 0xfffffffe;\n        }\n        iVar1 = (**(unaff_EBX + 0x168))();\n        if (iVar1 != 0) {\ncode_r0x00479ef3:\n            *param_2 = puVar4;\n            return NULL;\n        }\n        puVar3 = puVar4 + 3;\n        iVar2 = iVar2 + -3;\n        break;\n    case 7:\n        if (iVar2 < 4) {\n            return 0xfffffffe;\n        }\n        iVar1 = (**(unaff_EBX + 0x16c))();\n        if (iVar1 != 0) {\ncode_r0x00479ec6:\n            *param_2 = puVar4;\n            return NULL;\n        }\n        puVar3 = puVar4 + 4;\n        iVar2 = iVar2 + -4;\n        break;\n    case 0xf:\n        puVar3 = puVar4 + 1;\n        iVar2 = iVar2 + -1;\n        if (puVar3 == param_1) {\n            return 0xffffffff;\n        }\n        if (*puVar3 == 0x3e) {\n            *param_2 = puVar4 + 2;\n            return in_EAX;\n        }\n    }\n    puVar4 = puVar3;\n    if (puVar3 == param_1) {\n        return 0xffffffff;\n    }\n    goto code_r0x00479de0;\n}\n",
        "token_count": 1619
    },
    "0047a210": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.0047a210(uint8_t *param_1, uint8_t **param_2)\n\n{\n    uint8_t *in_EAX;\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    \n    if (in_EAX == param_1) {\n        return 0xffffffff;\n    }\n    // switch table (25 cases) at 0x47a3f4\n    switch(*(*in_EAX + 0x4c + unaff_EBX)) {\n    case 5:\n        if (param_1 - in_EAX < 2) {\n            return 0xfffffffe;\n        }\n        iVar3 = (**(unaff_EBX + 0x158))();\n        if (iVar3 == 0) goto code_r0x0047a244;\n        puVar2 = in_EAX + 2;\n        break;\n    case 6:\n        if (param_1 - in_EAX < 3) {\n            return 0xfffffffe;\n        }\n        iVar3 = (**(unaff_EBX + 0x15c))();\n        if (iVar3 == 0) goto code_r0x0047a244;\n        puVar2 = in_EAX + 3;\n        break;\n    case 7:\n        if (param_1 - in_EAX < 4) {\n            return 0xfffffffe;\n        }\n        iVar3 = (**(unaff_EBX + 0x160))();\n        if (iVar3 == 0) goto code_r0x0047a244;\n        puVar2 = in_EAX + 4;\n        break;\n    default:\n        *param_2 = in_EAX;\n        return 0;\n    case 0x16:\n    case 0x18:\n        puVar2 = in_EAX + 1;\n        break;\n    case 0x1d:\ncode_r0x0047a244:\n        *param_2 = in_EAX;\n        return 0;\n    }\n    if (puVar2 != param_1) {\n        iVar3 = param_1 - puVar2;\n        do {\n    // switch table (25 cases) at 0x47a428\n            switch(*(*puVar2 + 0x4c + unaff_EBX)) {\n            case 5:\n                if (iVar3 < 2) {\n                    return 0xfffffffe;\n                }\n                iVar1 = (**(unaff_EBX + 0x14c))();\n                if (iVar1 == 0) goto code_r0x0047a3be;\n                puVar2 = puVar2 + 2;\n                iVar3 = iVar3 + -2;\n                break;\n            case 6:\n                if (iVar3 < 3) {\n                    return 0xfffffffe;\n                }\n                iVar1 = (**(unaff_EBX + 0x150))();\n                if (iVar1 == 0) {\n                    *param_2 = puVar2;\n                    return 0;\n                }\n                puVar2 = puVar2 + 3;\n                iVar3 = iVar3 + -3;\n                break;\n            case 7:\n                if (iVar3 < 4) {\n                    return 0xfffffffe;\n                }\n                iVar1 = (**(unaff_EBX + 0x154))();\n                if (iVar1 == 0) goto code_r0x0047a3dc;\n                puVar2 = puVar2 + 4;\n                iVar3 = iVar3 + -4;\n                break;\n            default:\ncode_r0x0047a3dc:\n                *param_2 = puVar2;\n                return 0;\n            case 9:\n            case 10:\n            case 0x15:\n                puVar2 = puVar2 + 1;\n                if (puVar2 == param_1) {\n                    return 0xffffffff;\n                }\n                do {\n    // switch table (13 cases) at 0x47a464\n                    switch(*(*puVar2 + 0x4c + unaff_EBX)) {\n                    case 9:\n                    case 10:\n                    case 0x15:\n                        puVar2 = puVar2 + 1;\n                        if (puVar2 == param_1) {\n                            return 0xffffffff;\n                        }\n                        break;\n                    case 0xb:\n                        *param_2 = puVar2 + 1;\n                        return 5;\n                    default:\ncode_r0x0047a3be:\n                        *param_2 = puVar2;\n                        return 0;\n                    }\n                } while( true );\n            case 0xb:\n                *param_2 = puVar2 + 1;\n                return 5;\n            case 0x16:\n            case 0x17:\n            case 0x18:\n            case 0x19:\n            case 0x1a:\n            case 0x1b:\n                puVar2 = puVar2 + 1;\n                iVar3 = iVar3 + -1;\n            }\n        } while (puVar2 != param_1);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 1118
    },
    "0047a540": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.0047a540(uint8_t *param_1, uint8_t **param_2)\n\n{\n    uint8_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EBX;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    \n    if (in_EAX == param_1) {\n        return 0xffffffff;\n    }\n    // switch table (25 cases) at 0x47a6d8\n    switch(*(*in_EAX + 0x4c + unaff_EBX)) {\n    case 5:\n        if (param_1 - in_EAX < 2) {\n            return 0xfffffffe;\n        }\n        iVar4 = (**(unaff_EBX + 0x158))();\n        if (iVar4 == 0) goto code_r0x0047a570;\n        puVar3 = in_EAX + 2;\n        break;\n    case 6:\n        if (param_1 - in_EAX < 3) {\n            return 0xfffffffe;\n        }\n        iVar4 = (**(unaff_EBX + 0x15c))();\n        if (iVar4 == 0) goto code_r0x0047a570;\n        puVar3 = in_EAX + 3;\n        break;\n    case 7:\n        if (param_1 - in_EAX < 4) {\n            return 0xfffffffe;\n        }\n        iVar4 = (**(unaff_EBX + 0x160))();\n        if (iVar4 == 0) goto code_r0x0047a570;\n        puVar3 = in_EAX + 4;\n        break;\n    default:\ncode_r0x0047a570:\n        *param_2 = in_EAX;\n        return 0;\n    case 0x13:\n        uVar2 = fcn.0047a4d0(param_1);\n        return uVar2;\n    case 0x16:\n    case 0x18:\n        puVar3 = in_EAX + 1;\n    }\n    if (puVar3 != param_1) {\n        iVar4 = param_1 - puVar3;\n        do {\n    // switch table (25 cases) at 0x47a710\n            switch(*(*puVar3 + 0x4c + unaff_EBX)) {\n            case 5:\n                if (iVar4 < 2) {\n                    return 0xfffffffe;\n                }\n                iVar1 = (**(unaff_EBX + 0x14c))();\n                if (iVar1 == 0) {\n                    *param_2 = puVar3;\n                    return 0;\n                }\n                puVar3 = puVar3 + 2;\n                iVar4 = iVar4 + -2;\n                break;\n            case 6:\n                if (iVar4 < 3) {\n                    return 0xfffffffe;\n                }\n                iVar1 = (**(unaff_EBX + 0x150))();\n                if (iVar1 == 0) goto code_r0x0047a6b4;\n                puVar3 = puVar3 + 3;\n                iVar4 = iVar4 + -3;\n                break;\n            case 7:\n                if (iVar4 < 4) {\n                    return 0xfffffffe;\n                }\n                iVar1 = (**(unaff_EBX + 0x154))();\n                if (iVar1 == 0) goto code_r0x0047a696;\n                puVar3 = puVar3 + 4;\n                iVar4 = iVar4 + -4;\n                break;\n            default:\ncode_r0x0047a6b4:\n                *param_2 = puVar3;\n                return 0;\n            case 0x12:\n                *param_2 = puVar3 + 1;\n                return 9;\n            case 0x16:\n            case 0x18:\n            case 0x19:\n            case 0x1a:\n            case 0x1b:\n                puVar3 = puVar3 + 1;\n                iVar4 = iVar4 + -1;\n                break;\n            case 0x1d:\ncode_r0x0047a696:\n                *param_2 = puVar3;\n                return 0;\n            }\n        } while (puVar3 != param_1);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 959
    },
    "0047b400": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.0047b400(uint8_t *param_1, uint8_t **param_2)\n\n{\n    uint8_t *in_EAX;\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    \n    if (in_EAX == param_1) {\n        return 0xffffffea;\n    }\n    // switch table (26 cases) at 0x47b5ac\n    switch(*(*in_EAX + 0x4c + unaff_EBX)) {\n    case 5:\n        if (param_1 - in_EAX < 2) {\n            return 0xfffffffe;\n        }\n        iVar3 = (**(unaff_EBX + 0x158))();\n        if (iVar3 == 0) goto code_r0x0047b436;\n        puVar2 = in_EAX + 2;\n        break;\n    case 6:\n        if (param_1 - in_EAX < 3) {\n            return 0xfffffffe;\n        }\n        iVar3 = (**(unaff_EBX + 0x15c))();\n        if (iVar3 == 0) goto code_r0x0047b436;\n        puVar2 = in_EAX + 3;\n        break;\n    case 7:\n        if (param_1 - in_EAX < 4) {\n            return 0xfffffffe;\n        }\n        iVar3 = (**(unaff_EBX + 0x160))();\n        if (iVar3 == 0) goto code_r0x0047b436;\n        puVar2 = in_EAX + 4;\n        break;\n    default:\n        *param_2 = in_EAX;\n        return 0;\n    case 9:\n    case 10:\n    case 0x15:\n    case 0x1e:\n        *param_2 = in_EAX;\n        return 0x16;\n    case 0x16:\n    case 0x18:\n        puVar2 = in_EAX + 1;\n        break;\n    case 0x1d:\ncode_r0x0047b436:\n        *param_2 = in_EAX;\n        return 0;\n    }\n    if (puVar2 != param_1) {\n        iVar3 = param_1 - puVar2;\n        do {\n    // switch table (25 cases) at 0x47b5e4\n            switch(*(*puVar2 + 0x4c + unaff_EBX)) {\n            case 5:\n                if (iVar3 < 2) {\n                    return 0xfffffffe;\n                }\n                iVar1 = (**(unaff_EBX + 0x14c))();\n                if (iVar1 == 0) {\n                    *param_2 = puVar2;\n                    return 0;\n                }\n                puVar2 = puVar2 + 2;\n                iVar3 = iVar3 + -2;\n                break;\n            case 6:\n                if (iVar3 < 3) {\n                    return 0xfffffffe;\n                }\n                iVar1 = (**(unaff_EBX + 0x150))();\n                if (iVar1 == 0) goto code_r0x0047b584;\n                puVar2 = puVar2 + 3;\n                iVar3 = iVar3 + -3;\n                break;\n            case 7:\n                if (iVar3 < 4) {\n                    return 0xfffffffe;\n                }\n                iVar1 = (**(unaff_EBX + 0x154))();\n                if (iVar1 == 0) goto code_r0x0047b566;\n                puVar2 = puVar2 + 4;\n                iVar3 = iVar3 + -4;\n                break;\n            default:\ncode_r0x0047b584:\n                *param_2 = puVar2;\n                return 0;\n            case 0x12:\n                *param_2 = puVar2 + 1;\n                return 0x1c;\n            case 0x16:\n            case 0x18:\n            case 0x19:\n            case 0x1a:\n            case 0x1b:\n                puVar2 = puVar2 + 1;\n                iVar3 = iVar3 + -1;\n                break;\n            case 0x1d:\ncode_r0x0047b566:\n                *param_2 = puVar2;\n                return 0;\n            }\n        } while (puVar2 != param_1);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 991
    },
    "0047b620": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.0047b620(uint8_t *param_1, uint8_t **param_2)\n\n{\n    uint8_t *in_EAX;\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    \n    if (in_EAX == param_1) {\n        return 0xffffffff;\n    }\n    // switch table (25 cases) at 0x47b7a0\n    switch(*(*in_EAX + 0x4c + unaff_EBX)) {\n    case 5:\n        if (param_1 - in_EAX < 2) {\n            return 0xfffffffe;\n        }\n        iVar3 = (**(unaff_EBX + 0x158))();\n        if (iVar3 == 0) goto code_r0x0047b650;\n        puVar2 = in_EAX + 2;\n        break;\n    case 6:\n        if (param_1 - in_EAX < 3) {\n            return 0xfffffffe;\n        }\n        iVar3 = (**(unaff_EBX + 0x15c))();\n        if (iVar3 == 0) goto code_r0x0047b650;\n        puVar2 = in_EAX + 3;\n        break;\n    case 7:\n        if (param_1 - in_EAX < 4) {\n            return 0xfffffffe;\n        }\n        iVar3 = (**(unaff_EBX + 0x160))();\n        if (iVar3 == 0) goto code_r0x0047b650;\n        puVar2 = in_EAX + 4;\n        break;\n    default:\ncode_r0x0047b650:\n        *param_2 = in_EAX;\n        return 0;\n    case 0x16:\n    case 0x18:\n        puVar2 = in_EAX + 1;\n    }\n    if (puVar2 != param_1) {\n        iVar3 = param_1 - puVar2;\n        do {\n    // switch table (32 cases) at 0x47b7d4\n            switch(*(*puVar2 + 0x4c + unaff_EBX)) {\n            case 5:\n                if (iVar3 < 2) {\n                    return 0xfffffffe;\n                }\n                iVar1 = (**(unaff_EBX + 0x14c))();\n                if (iVar1 == 0) {\n                    *param_2 = puVar2;\n                    return 0;\n                }\n                puVar2 = puVar2 + 2;\n                iVar3 = iVar3 + -2;\n                break;\n            case 6:\n                if (iVar3 < 3) {\n                    return 0xfffffffe;\n                }\n                iVar1 = (**(unaff_EBX + 0x150))();\n                if (iVar1 == 0) goto code_r0x0047b793;\n                puVar2 = puVar2 + 3;\n                iVar3 = iVar3 + -3;\n                break;\n            case 7:\n                if (iVar3 < 4) {\n                    return 0xfffffffe;\n                }\n                iVar1 = (**(unaff_EBX + 0x154))();\n                if (iVar1 == 0) goto code_r0x0047b778;\n                puVar2 = puVar2 + 4;\n                iVar3 = iVar3 + -4;\n                break;\n            default:\ncode_r0x0047b793:\n                *param_2 = puVar2;\n                return 0;\n            case 9:\n            case 10:\n            case 0xb:\n            case 0x15:\n            case 0x1e:\n            case 0x20:\n            case 0x24:\n                *param_2 = puVar2;\n                return 0x14;\n            case 0x16:\n            case 0x18:\n            case 0x19:\n            case 0x1a:\n            case 0x1b:\n                puVar2 = puVar2 + 1;\n                iVar3 = iVar3 + -1;\n                break;\n            case 0x1d:\ncode_r0x0047b778:\n                *param_2 = puVar2;\n                return 0;\n            }\n        } while (puVar2 != param_1);\n    }\n    return 0xffffffec;\n}\n",
        "token_count": 958
    },
    "0047b810": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0047b810(uint32_t param_1, uint8_t *param_2, uint8_t **param_3)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t unaff_EBX;\n    int32_t iVar3;\n    \n    if (in_EAX != param_2) {\n        iVar3 = param_2 - in_EAX;\n        do {\n            uVar1 = *(*in_EAX + 0x4c + unaff_EBX);\n    // switch table (14 cases) at 0x47b92c\n            switch(uVar1) {\n            case 0:\n            case 1:\n            case 8:\ncode_r0x0047b8d9:\n                *param_3 = in_EAX;\n                return 0;\n            default:\n                in_EAX = in_EAX + 1;\n                iVar3 = iVar3 + -1;\n                break;\n            case 5:\n                if (iVar3 < 2) {\n                    return 0xfffffffe;\n                }\n                iVar2 = (**(unaff_EBX + 0x164))();\n                if (iVar2 != 0) goto code_r0x0047b8d9;\n                in_EAX = in_EAX + 2;\n                iVar3 = iVar3 + -2;\n                break;\n            case 6:\n                if (iVar3 < 3) {\n                    return 0xfffffffe;\n                }\n                iVar2 = (**(unaff_EBX + 0x168))();\n                if (iVar2 != 0) {\n                    *param_3 = in_EAX;\n                    return 0;\n                }\n                in_EAX = in_EAX + 3;\n                iVar3 = iVar3 + -3;\n                break;\n            case 7:\n                if (iVar3 < 4) {\n                    return 0xfffffffe;\n                }\n                iVar2 = (**(unaff_EBX + 0x16c))();\n                if (iVar2 != 0) {\n                    *param_3 = in_EAX;\n                    return 0;\n                }\n                in_EAX = in_EAX + 4;\n                iVar3 = iVar3 + -4;\n                break;\n            case 0xc:\n            case 0xd:\n                in_EAX = in_EAX + 1;\n                iVar3 = iVar3 + -1;\n                if (uVar1 == param_1) {\n                    if (in_EAX != param_2) {\n                        *param_3 = in_EAX;\n    // switch table (22 cases) at 0x47b954\n                        switch(*(*in_EAX + 0x4c + unaff_EBX)) {\n                        case 9:\n                        case 10:\n                        case 0xb:\n                        case 0x14:\n                        case 0x15:\n                        case 0x1e:\n                            return 0x1b;\n                        default:\n                            return 0;\n                        }\n                    }\n                    return 0xffffffe5;\n                }\n            }\n        } while (in_EAX != param_2);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 684
    },
    "0047db20": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0047db20(uint param_1, uint8_t *param_2, uint8_t **param_3)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    int32_t unaff_EDI;\n    ulong uVar4;\n    \n    if (param_2 == in_EAX) {\n        return 0xffffffff;\n    }\n    uVar3 = *param_2;\n    uVar1 = param_2[1];\n    if (uVar1 == 0) {\n        uVar2 = *(uVar3 + 0x4c + unaff_EDI);\n    }\n    else {\n        uVar4 = fcn.0047cd30();\n        param_2 = uVar4 >> 0x20;\n        uVar2 = uVar4;\n        uVar3 = extraout_ECX;\n    }\n    // switch table (25 cases) at 0x47dc9c\n    switch(uVar2) {\n    case 5:\ncode_r0x0047dc0e:\n        if (in_EAX - param_2 < 2) {\n            return 0xfffffffe;\n        }\n        break;\n    case 6:\ncode_r0x0047dc1e:\n        if (in_EAX - param_2 < 3) {\n            return 0xfffffffe;\n        }\n        break;\n    case 7:\ncode_r0x0047dc80:\n        if (in_EAX - param_2 < 4) {\n            return 0xfffffffe;\n        }\n        break;\n    case 0x16:\n    case 0x18:\njoined_r0x0047db98:\n        param_2 = param_2 + 2;\n        if (param_2 == in_EAX) {\n            return 0xffffffff;\n        }\n        uVar1 = param_2[1];\n        uVar3 = *param_2;\n        if (uVar1 == 0) {\n            uVar4 = CONCAT44(param_2, *(uVar3 + 0x4c + unaff_EDI));\n        }\n        else {\n            uVar4 = fcn.0047cd30();\n            uVar3 = extraout_ECX_00;\n        }\n        param_2 = uVar4 >> 0x20;\n    // switch table (25 cases) at 0x47dcd0\n        switch(uVar4) {\n        case 5:\n            goto code_r0x0047dc0e;\n        case 6:\n            goto code_r0x0047dc1e;\n        case 7:\n            goto code_r0x0047dc80;\n        default:\n            break;\n        case 9:\n        case 10:\n        case 0x15:\n            param_2 = param_2 + 2;\n            if (param_2 == in_EAX) {\n                return 0xffffffff;\n            }\n            goto code_r0x0047dc35;\n        case 0xb:\n            goto code_r0x0047dc71;\n        case 0x16:\n        case 0x17:\n        case 0x18:\n        case 0x19:\n        case 0x1a:\n        case 0x1b:\n            goto joined_r0x0047db98;\n        case 0x1d:\n            if ((*((((uVar3 & 0xff) >> 5) + *(uVar1 + 0x49e9b8) * 8) * 4 + 0x49e3b8) & 1 << (uVar3 & 0x1f)) == 0) break;\n            goto joined_r0x0047db98;\n        }\n    case 0x1d:\n        if ((*((((uVar3 & 0xff) >> 5) + *(uVar1 + 0x49e8b8) * 8) * 4 + 0x49e3b8) & 1 << (uVar3 & 0x1f)) != 0)\n        goto joined_r0x0047db98;\n    }\ncode_r0x0047dc90:\n    *param_3 = param_2;\n    return 0;\ncode_r0x0047dc35:\n    if (param_2[1] == 0) {\n        uVar4 = CONCAT44(param_2, *(*param_2 + 0x4c + unaff_EDI));\n    }\n    else {\n        uVar4 = fcn.0047cd30();\n    }\n    param_2 = uVar4 >> 0x20;\n    // switch table (13 cases) at 0x47dd0c\n    switch(uVar4) {\n    case 9:\n    case 10:\n    case 0x15:\n        param_2 = param_2 + 2;\n        if (param_2 == in_EAX) {\n            return 0xffffffff;\n        }\n        break;\n    case 0xb:\n        goto code_r0x0047dc71;\n    default:\n        goto code_r0x0047dc90;\n    }\n    goto code_r0x0047dc35;\ncode_r0x0047dc71:\n    *param_3 = param_2 + 2;\n    return 5;\n}\n",
        "token_count": 1183
    },
    "0047de30": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0047de30(uint param_1, uint8_t *param_2, uint8_t **param_3)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    uint32_t uVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    int32_t unaff_EDI;\n    ulong uVar5;\n    \n    if (param_2 == in_EAX) {\n        return 0xffffffff;\n    }\n    uVar4 = *param_2;\n    uVar1 = param_2[1];\n    if (uVar1 == 0) {\n        uVar2 = *(uVar4 + 0x4c + unaff_EDI);\n    }\n    else {\n        uVar5 = fcn.0047cd30();\n        param_2 = uVar5 >> 0x20;\n        uVar2 = uVar5;\n        uVar4 = extraout_ECX;\n    }\n    // switch table (25 cases) at 0x47df78\n    switch(uVar2) {\n    case 5:\ncode_r0x0047df1a:\n        if (in_EAX - param_2 < 2) {\n            return 0xfffffffe;\n        }\n        break;\n    case 6:\ncode_r0x0047df2a:\n        if (in_EAX - param_2 < 3) {\n            return 0xfffffffe;\n        }\n        break;\n    case 7:\ncode_r0x0047df3a:\n        if (in_EAX - param_2 < 4) {\n            return 0xfffffffe;\n        }\n        break;\n    case 0x13:\n        uVar3 = fcn.0047dda0();\n        return uVar3;\n    case 0x16:\n    case 0x18:\njoined_r0x0047dea8:\n        param_2 = param_2 + 2;\n        if (param_2 == in_EAX) {\n            return 0xffffffff;\n        }\n        uVar1 = param_2[1];\n        uVar4 = *param_2;\n        if (uVar1 == 0) {\n            uVar5 = CONCAT44(param_2, *(uVar4 + 0x4c + unaff_EDI));\n        }\n        else {\n            uVar5 = fcn.0047cd30();\n            uVar4 = extraout_ECX_00;\n        }\n        param_2 = uVar5 >> 0x20;\n    // switch table (25 cases) at 0x47dfb0\n        switch(uVar5) {\n        case 5:\n            goto code_r0x0047df1a;\n        case 6:\n            goto code_r0x0047df2a;\n        case 7:\n            goto code_r0x0047df3a;\n        default:\n            break;\n        case 0x12:\n            *param_3 = param_2 + 2;\n            return 9;\n        case 0x16:\n        case 0x18:\n        case 0x19:\n        case 0x1a:\n        case 0x1b:\n            goto joined_r0x0047dea8;\n        case 0x1d:\n            if ((*((((uVar4 & 0xff) >> 5) + *(uVar1 + 0x49e9b8) * 8) * 4 + 0x49e3b8) & 1 << (uVar4 & 0x1f)) == 0) break;\n            goto joined_r0x0047dea8;\n        }\n    case 0x1d:\n        if ((*((((uVar4 & 0xff) >> 5) + *(uVar1 + 0x49e8b8) * 8) * 4 + 0x49e3b8) & 1 << (uVar4 & 0x1f)) != 0)\n        goto joined_r0x0047dea8;\n    }\n    *param_3 = param_2;\n    return 0;\n}\n",
        "token_count": 917
    },
    "0047eb30": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0047eb30(uint param_1, uint8_t *param_2, uint8_t **param_3)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    int32_t unaff_EDI;\n    ulong uVar4;\n    \n    if (param_2 == in_EAX) {\n        return 0xffffffea;\n    }\n    uVar3 = *param_2;\n    uVar1 = param_2[1];\n    if (uVar1 == 0) {\n        uVar2 = *(uVar3 + 0x4c + unaff_EDI);\n    }\n    else {\n        uVar4 = fcn.0047cd30();\n        param_2 = uVar4 >> 0x20;\n        uVar2 = uVar4;\n        uVar3 = extraout_ECX;\n    }\n    // switch table (26 cases) at 0x47ec70\n    switch(uVar2) {\n    case 5:\ncode_r0x0047ec1a:\n        if (in_EAX - param_2 < 2) {\n            return 0xfffffffe;\n        }\n        break;\n    case 6:\ncode_r0x0047ec2a:\n        if (in_EAX - param_2 < 3) {\n            return 0xfffffffe;\n        }\n        break;\n    case 7:\ncode_r0x0047ec3a:\n        if (in_EAX - param_2 < 4) {\n            return 0xfffffffe;\n        }\n        break;\n    case 9:\n    case 10:\n    case 0x15:\n    case 0x1e:\n        *param_3 = param_2;\n        return 0x16;\n    case 0x16:\n    case 0x18:\njoined_r0x0047ebaa:\n        param_2 = param_2 + 2;\n        if (param_2 == in_EAX) {\n            return 0xffffffff;\n        }\n        uVar1 = param_2[1];\n        uVar3 = *param_2;\n        if (uVar1 == 0) {\n            uVar4 = CONCAT44(param_2, *(uVar3 + 0x4c + unaff_EDI));\n        }\n        else {\n            uVar4 = fcn.0047cd30();\n            uVar3 = extraout_ECX_00;\n        }\n        param_2 = uVar4 >> 0x20;\n    // switch table (25 cases) at 0x47eca8\n        switch(uVar4) {\n        case 5:\n            goto code_r0x0047ec1a;\n        case 6:\n            goto code_r0x0047ec2a;\n        case 7:\n            goto code_r0x0047ec3a;\n        default:\n            break;\n        case 0x12:\n            *param_3 = param_2 + 2;\n            return 0x1c;\n        case 0x16:\n        case 0x18:\n        case 0x19:\n        case 0x1a:\n        case 0x1b:\n            goto joined_r0x0047ebaa;\n        case 0x1d:\n            if ((*((((uVar3 & 0xff) >> 5) + *(uVar1 + 0x49e9b8) * 8) * 4 + 0x49e3b8) & 1 << (uVar3 & 0x1f)) == 0) break;\n            goto joined_r0x0047ebaa;\n        }\n    case 0x1d:\n        if ((*((((uVar3 & 0xff) >> 5) + *(uVar1 + 0x49e8b8) * 8) * 4 + 0x49e3b8) & 1 << (uVar3 & 0x1f)) != 0)\n        goto joined_r0x0047ebaa;\n    }\n    *param_3 = param_2;\n    return 0;\n}\n",
        "token_count": 930
    },
    "0047ece0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0047ece0(uint param_1, uint8_t *param_2, uint8_t **param_3)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    int32_t unaff_EDI;\n    ulong uVar4;\n    \n    if (param_2 == in_EAX) {\n        return 0xffffffff;\n    }\n    uVar3 = *param_2;\n    uVar1 = param_2[1];\n    if (uVar1 == 0) {\n        uVar2 = *(uVar3 + 0x4c + unaff_EDI);\n    }\n    else {\n        uVar4 = fcn.0047cd30();\n        param_2 = uVar4 >> 0x20;\n        uVar2 = uVar4;\n        uVar3 = extraout_ECX;\n    }\n    // switch table (25 cases) at 0x47ee14\n    switch(uVar2) {\n    case 5:\ncode_r0x0047edcc:\n        if (in_EAX - param_2 < 2) {\n            return 0xfffffffe;\n        }\n        break;\n    case 6:\ncode_r0x0047eddc:\n        if (in_EAX - param_2 < 3) {\n            return 0xfffffffe;\n        }\n        break;\n    case 7:\ncode_r0x0047edf8:\n        if (in_EAX - param_2 < 4) {\n            return 0xfffffffe;\n        }\n        break;\n    case 0x16:\n    case 0x18:\njoined_r0x0047ed58:\n        param_2 = param_2 + 2;\n        if (param_2 == in_EAX) {\n            return 0xffffffec;\n        }\n        uVar1 = param_2[1];\n        uVar3 = *param_2;\n        if (uVar1 == 0) {\n            uVar4 = CONCAT44(param_2, *(uVar3 + 0x4c + unaff_EDI));\n        }\n        else {\n            uVar4 = fcn.0047cd30();\n            uVar3 = extraout_ECX_00;\n        }\n        param_2 = uVar4 >> 0x20;\n    // switch table (32 cases) at 0x47ee48\n        switch(uVar4) {\n        case 5:\n            goto code_r0x0047edcc;\n        case 6:\n            goto code_r0x0047eddc;\n        case 7:\n            goto code_r0x0047edf8;\n        default:\n            break;\n        case 9:\n        case 10:\n        case 0xb:\n        case 0x15:\n        case 0x1e:\n        case 0x20:\n        case 0x24:\n            *param_3 = param_2;\n            return 0x14;\n        case 0x16:\n        case 0x18:\n        case 0x19:\n        case 0x1a:\n        case 0x1b:\n            goto joined_r0x0047ed58;\n        case 0x1d:\n            if ((*((((uVar3 & 0xff) >> 5) + *(uVar1 + 0x49e9b8) * 8) * 4 + 0x49e3b8) & 1 << (uVar3 & 0x1f)) == 0) break;\n            goto joined_r0x0047ed58;\n        }\n    case 0x1d:\n        if ((*((((uVar3 & 0xff) >> 5) + *(uVar1 + 0x49e8b8) * 8) * 4 + 0x49e3b8) & 1 << (uVar3 & 0x1f)) != 0)\n        goto joined_r0x0047ed58;\n    }\n    *param_3 = param_2;\n    return 0;\n}\n",
        "token_count": 918
    },
    "0047ee90": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0047ee90(uint param_1, uint8_t *param_2, int32_t param_3, uint8_t **param_4)\n\n{\n    uint32_t uVar1;\n    uint8_t *puVar2;\n    int32_t unaff_EBX;\n    int32_t iVar3;\n    uint8_t *unaff_EDI;\n    ulong uVar4;\n    \n    if (param_2 != unaff_EDI) {\n        iVar3 = unaff_EDI - param_2;\n        do {\n            if (param_2[1] == 0) {\n                uVar4 = CONCAT44(param_2, *(*param_2 + 0x4c + param_3));\n            }\n            else {\n                uVar4 = fcn.0047cd30();\n            }\n            puVar2 = uVar4 >> 0x20;\n    // switch table (14 cases) at 0x47ef60\n            switch(uVar4) {\n            case 0:\n            case 1:\n            case 8:\n                *param_4 = puVar2;\n                return 0;\n            case 5:\n                if (iVar3 < 2) {\n                    return 0xfffffffe;\n                }\n            default:\n                param_2 = puVar2 + 2;\n                iVar3 = iVar3 + -2;\n                break;\n            case 6:\n                if (iVar3 < 3) {\n                    return 0xfffffffe;\n                }\n                param_2 = puVar2 + 3;\n                iVar3 = iVar3 + -3;\n                break;\n            case 7:\n                if (iVar3 < 4) {\n                    return 0xfffffffe;\n                }\n                param_2 = puVar2 + 4;\n                iVar3 = iVar3 + -4;\n                break;\n            case 0xc:\n            case 0xd:\n                param_2 = puVar2 + 2;\n                iVar3 = iVar3 + -2;\n                if (uVar4 == unaff_EBX) {\n                    if (param_2 != unaff_EDI) {\n                        *param_4 = param_2;\n                        if (puVar2[3] == 0) {\n                            uVar1 = *(*param_2 + 0x4c + param_3);\n                        }\n                        else {\n                            uVar1 = fcn.0047cd30();\n                        }\n    // switch table (22 cases) at 0x47ef88\n                        switch(uVar1) {\n                        case 9:\n                        case 10:\n                        case 0xb:\n                        case 0x14:\n                        case 0x15:\n                        case 0x1e:\n                            return 0x1b;\n                        default:\n                            return 0;\n                        }\n                    }\n                    return 0xffffffe5;\n                }\n            }\n        } while (param_2 != unaff_EDI);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 635
    },
    "00480a00": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00480a00(uint param_1, uint8_t *param_2, uint8_t **param_3)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    uint32_t uVar2;\n    int32_t unaff_EDI;\n    ulong uVar3;\n    \n    if (param_2 == in_EAX) {\n        return 0xffffffff;\n    }\n    uVar1 = *param_2;\n    if (uVar1 == 0) {\n        uVar2 = *(param_2[1] + 0x4c + unaff_EDI);\n    }\n    else {\n        uVar3 = fcn.0047cd30();\n        param_2 = uVar3 >> 0x20;\n        uVar2 = uVar3;\n    }\n    // switch table (25 cases) at 0x480b7c\n    switch(uVar2) {\n    case 5:\ncode_r0x00480af0:\n        if (in_EAX - param_2 < 2) {\n            return 0xfffffffe;\n        }\n        break;\n    case 6:\ncode_r0x00480b00:\n        if (in_EAX - param_2 < 3) {\n            return 0xfffffffe;\n        }\n        break;\n    case 7:\ncode_r0x00480b63:\n        if (in_EAX - param_2 < 4) {\n            return 0xfffffffe;\n        }\n        break;\n    case 0x16:\n    case 0x18:\njoined_r0x00480a7a:\n        param_2 = param_2 + 2;\n        if (param_2 == in_EAX) {\n            return 0xffffffff;\n        }\n        uVar1 = *param_2;\n        if (uVar1 == 0) {\n            uVar3 = CONCAT44(param_2, *(param_2[1] + 0x4c + unaff_EDI));\n        }\n        else {\n            uVar3 = fcn.0047cd30();\n        }\n        param_2 = uVar3 >> 0x20;\n    // switch table (25 cases) at 0x480bb0\n        switch(uVar3) {\n        case 5:\n            goto code_r0x00480af0;\n        case 6:\n            goto code_r0x00480b00;\n        case 7:\n            goto code_r0x00480b63;\n        default:\n            break;\n        case 9:\n        case 10:\n        case 0x15:\n            param_2 = param_2 + 2;\n            if (param_2 == in_EAX) {\n                return 0xffffffff;\n            }\n            goto code_r0x00480b17;\n        case 0xb:\n            goto code_r0x00480b54;\n        case 0x16:\n        case 0x17:\n        case 0x18:\n        case 0x19:\n        case 0x1a:\n        case 0x1b:\n            goto joined_r0x00480a7a;\n        case 0x1d:\n            if ((*(((param_2[1] >> 5) + *(uVar1 + 0x49e9b8) * 8) * 4 + 0x49e3b8) & 1 << (param_2[1] & 0x1f)) == 0)\n            break;\n            goto joined_r0x00480a7a;\n        }\n    case 0x1d:\n        if ((*(((param_2[1] >> 5) + *(uVar1 + 0x49e8b8) * 8) * 4 + 0x49e3b8) & 1 << (param_2[1] & 0x1f)) != 0)\n        goto joined_r0x00480a7a;\n    }\ncode_r0x00480b73:\n    *param_3 = param_2;\n    return 0;\ncode_r0x00480b17:\n    if (*param_2 == 0) {\n        uVar3 = CONCAT44(param_2, *(param_2[1] + 0x4c + unaff_EDI));\n    }\n    else {\n        uVar3 = fcn.0047cd30();\n    }\n    param_2 = uVar3 >> 0x20;\n    // switch table (13 cases) at 0x480bec\n    switch(uVar3) {\n    case 9:\n    case 10:\n    case 0x15:\n        param_2 = param_2 + 2;\n        if (param_2 == in_EAX) {\n            return 0xffffffff;\n        }\n        break;\n    case 0xb:\n        goto code_r0x00480b54;\n    default:\n        goto code_r0x00480b73;\n    }\n    goto code_r0x00480b17;\ncode_r0x00480b54:\n    *param_3 = param_2 + 2;\n    return 5;\n}\n",
        "token_count": 1117
    },
    "00480d20": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00480d20(uint param_1, uint8_t *param_2, int32_t param_3)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    uint32_t uVar2;\n    uint uVar3;\n    uint8_t **unaff_EDI;\n    ulong uVar4;\n    \n    if (param_2 == in_EAX) {\n        return 0xffffffff;\n    }\n    uVar1 = *param_2;\n    if (uVar1 == 0) {\n        uVar2 = *(param_2[1] + 0x4c + param_3);\n    }\n    else {\n        uVar4 = fcn.0047cd30();\n        param_2 = uVar4 >> 0x20;\n        uVar2 = uVar4;\n    }\n    // switch table (25 cases) at 0x480e68\n    switch(uVar2) {\n    case 5:\ncode_r0x00480e0c:\n        if (in_EAX - param_2 < 2) {\n            return 0xfffffffe;\n        }\n        break;\n    case 6:\ncode_r0x00480e1c:\n        if (in_EAX - param_2 < 3) {\n            return 0xfffffffe;\n        }\n        break;\n    case 7:\ncode_r0x00480e2c:\n        if (in_EAX - param_2 < 4) {\n            return 0xfffffffe;\n        }\n        break;\n    case 0x13:\n        uVar3 = fcn.00480c90(param_3);\n        return uVar3;\n    case 0x16:\n    case 0x18:\njoined_r0x00480d9a:\n        param_2 = param_2 + 2;\n        if (param_2 == in_EAX) {\n            return 0xffffffff;\n        }\n        uVar1 = *param_2;\n        if (uVar1 == 0) {\n            uVar4 = CONCAT44(param_2, *(param_2[1] + 0x4c + param_3));\n        }\n        else {\n            uVar4 = fcn.0047cd30();\n        }\n        param_2 = uVar4 >> 0x20;\n    // switch table (25 cases) at 0x480ea0\n        switch(uVar4) {\n        case 5:\n            goto code_r0x00480e0c;\n        case 6:\n            goto code_r0x00480e1c;\n        case 7:\n            goto code_r0x00480e2c;\n        default:\n            break;\n        case 0x12:\n            *unaff_EDI = param_2 + 2;\n            return 9;\n        case 0x16:\n        case 0x18:\n        case 0x19:\n        case 0x1a:\n        case 0x1b:\n            goto joined_r0x00480d9a;\n        case 0x1d:\n            if ((*(((param_2[1] >> 5) + *(uVar1 + 0x49e9b8) * 8) * 4 + 0x49e3b8) & 1 << (param_2[1] & 0x1f)) == 0)\n            break;\n            goto joined_r0x00480d9a;\n        }\n    case 0x1d:\n        if ((*(((param_2[1] >> 5) + *(uVar1 + 0x49e8b8) * 8) * 4 + 0x49e3b8) & 1 << (param_2[1] & 0x1f)) != 0)\n        goto joined_r0x00480d9a;\n    }\n    *unaff_EDI = param_2;\n    return 0;\n}\n",
        "token_count": 860
    },
    "00481a40": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00481a40(uint param_1, uint8_t *param_2, int32_t param_3)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    uint32_t uVar2;\n    uint8_t **unaff_EDI;\n    ulong uVar3;\n    \n    if (param_2 == in_EAX) {\n        return 0xffffffea;\n    }\n    uVar1 = *param_2;\n    if (uVar1 == 0) {\n        uVar2 = *(param_2[1] + 0x4c + param_3);\n    }\n    else {\n        uVar3 = fcn.0047cd30();\n        param_2 = uVar3 >> 0x20;\n        uVar2 = uVar3;\n    }\n    // switch table (26 cases) at 0x481b80\n    switch(uVar2) {\n    case 5:\ncode_r0x00481b2c:\n        if (in_EAX - param_2 < 2) {\n            return 0xfffffffe;\n        }\n        break;\n    case 6:\ncode_r0x00481b3c:\n        if (in_EAX - param_2 < 3) {\n            return 0xfffffffe;\n        }\n        break;\n    case 7:\ncode_r0x00481b4c:\n        if (in_EAX - param_2 < 4) {\n            return 0xfffffffe;\n        }\n        break;\n    case 9:\n    case 10:\n    case 0x15:\n    case 0x1e:\n        *unaff_EDI = param_2;\n        return 0x16;\n    case 0x16:\n    case 0x18:\njoined_r0x00481abc:\n        param_2 = param_2 + 2;\n        if (param_2 == in_EAX) {\n            return 0xffffffff;\n        }\n        uVar1 = *param_2;\n        if (uVar1 == 0) {\n            uVar3 = CONCAT44(param_2, *(param_2[1] + 0x4c + param_3));\n        }\n        else {\n            uVar3 = fcn.0047cd30();\n        }\n        param_2 = uVar3 >> 0x20;\n    // switch table (25 cases) at 0x481bb8\n        switch(uVar3) {\n        case 5:\n            goto code_r0x00481b2c;\n        case 6:\n            goto code_r0x00481b3c;\n        case 7:\n            goto code_r0x00481b4c;\n        default:\n            break;\n        case 0x12:\n            *unaff_EDI = param_2 + 2;\n            return 0x1c;\n        case 0x16:\n        case 0x18:\n        case 0x19:\n        case 0x1a:\n        case 0x1b:\n            goto joined_r0x00481abc;\n        case 0x1d:\n            if ((*(((param_2[1] >> 5) + *(uVar1 + 0x49e9b8) * 8) * 4 + 0x49e3b8) & 1 << (param_2[1] & 0x1f)) == 0)\n            break;\n            goto joined_r0x00481abc;\n        }\n    case 0x1d:\n        if ((*(((param_2[1] >> 5) + *(uVar1 + 0x49e8b8) * 8) * 4 + 0x49e3b8) & 1 << (param_2[1] & 0x1f)) != 0)\n        goto joined_r0x00481abc;\n    }\n    *unaff_EDI = param_2;\n    return 0;\n}\n",
        "token_count": 864
    },
    "00481bf0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00481bf0(uint param_1, uint8_t *param_2, int32_t param_3)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    uint32_t uVar2;\n    uint8_t **unaff_EDI;\n    ulong uVar3;\n    \n    if (param_2 == in_EAX) {\n        return 0xffffffff;\n    }\n    uVar1 = *param_2;\n    if (uVar1 == 0) {\n        uVar2 = *(param_2[1] + 0x4c + param_3);\n    }\n    else {\n        uVar3 = fcn.0047cd30();\n        param_2 = uVar3 >> 0x20;\n        uVar2 = uVar3;\n    }\n    // switch table (25 cases) at 0x481d24\n    switch(uVar2) {\n    case 5:\ncode_r0x00481cde:\n        if (in_EAX - param_2 < 2) {\n            return 0xfffffffe;\n        }\n        break;\n    case 6:\ncode_r0x00481cee:\n        if (in_EAX - param_2 < 3) {\n            return 0xfffffffe;\n        }\n        break;\n    case 7:\ncode_r0x00481d09:\n        if (in_EAX - param_2 < 4) {\n            return 0xfffffffe;\n        }\n        break;\n    case 0x16:\n    case 0x18:\njoined_r0x00481c6a:\n        param_2 = param_2 + 2;\n        if (param_2 == in_EAX) {\n            return 0xffffffec;\n        }\n        uVar1 = *param_2;\n        if (uVar1 == 0) {\n            uVar3 = CONCAT44(param_2, *(param_2[1] + 0x4c + param_3));\n        }\n        else {\n            uVar3 = fcn.0047cd30();\n        }\n        param_2 = uVar3 >> 0x20;\n    // switch table (32 cases) at 0x481d58\n        switch(uVar3) {\n        case 5:\n            goto code_r0x00481cde;\n        case 6:\n            goto code_r0x00481cee;\n        case 7:\n            goto code_r0x00481d09;\n        default:\n            break;\n        case 9:\n        case 10:\n        case 0xb:\n        case 0x15:\n        case 0x1e:\n        case 0x20:\n        case 0x24:\n            *unaff_EDI = param_2;\n            return 0x14;\n        case 0x16:\n        case 0x18:\n        case 0x19:\n        case 0x1a:\n        case 0x1b:\n            goto joined_r0x00481c6a;\n        case 0x1d:\n            if ((*(((param_2[1] >> 5) + *(uVar1 + 0x49e9b8) * 8) * 4 + 0x49e3b8) & 1 << (param_2[1] & 0x1f)) == 0)\n            break;\n            goto joined_r0x00481c6a;\n        }\n    case 0x1d:\n        if ((*(((param_2[1] >> 5) + *(uVar1 + 0x49e8b8) * 8) * 4 + 0x49e3b8) & 1 << (param_2[1] & 0x1f)) != 0)\n        goto joined_r0x00481c6a;\n    }\n    *unaff_EDI = param_2;\n    return 0;\n}\n",
        "token_count": 855
    },
    "00481da0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00481da0(uint param_1, char *param_2, int32_t param_3, char **param_4)\n\n{\n    uint32_t uVar1;\n    char *pcVar2;\n    int32_t unaff_EBX;\n    int32_t iVar3;\n    char *unaff_EDI;\n    ulong uVar4;\n    \n    if (param_2 != unaff_EDI) {\n        iVar3 = unaff_EDI - param_2;\n        do {\n            if (*param_2 == '\\0') {\n                uVar4 = CONCAT44(param_2, *(param_2[1] + 0x4c + param_3));\n            }\n            else {\n                uVar4 = fcn.0047cd30();\n            }\n            pcVar2 = uVar4 >> 0x20;\n    // switch table (14 cases) at 0x481e74\n            switch(uVar4) {\n            case 0:\n            case 1:\n            case 8:\n                *param_4 = pcVar2;\n                return 0;\n            case 5:\n                if (iVar3 < 2) {\n                    return 0xfffffffe;\n                }\n            default:\n                param_2 = pcVar2 + 2;\n                iVar3 = iVar3 + -2;\n                break;\n            case 6:\n                if (iVar3 < 3) {\n                    return 0xfffffffe;\n                }\n                param_2 = pcVar2 + 3;\n                iVar3 = iVar3 + -3;\n                break;\n            case 7:\n                if (iVar3 < 4) {\n                    return 0xfffffffe;\n                }\n                param_2 = pcVar2 + 4;\n                iVar3 = iVar3 + -4;\n                break;\n            case 0xc:\n            case 0xd:\n                param_2 = pcVar2 + 2;\n                iVar3 = iVar3 + -2;\n                if (uVar4 == unaff_EBX) {\n                    if (param_2 != unaff_EDI) {\n                        *param_4 = param_2;\n                        if (*param_2 == '\\0') {\n                            uVar1 = *(pcVar2[3] + 0x4c + param_3);\n                        }\n                        else {\n                            uVar1 = fcn.0047cd30();\n                        }\n    // switch table (22 cases) at 0x481e9c\n                        switch(uVar1) {\n                        case 9:\n                        case 10:\n                        case 0xb:\n                        case 0x14:\n                        case 0x15:\n                        case 0x1e:\n                            return 0x1b;\n                        default:\n                            return 0;\n                        }\n                    }\n                    return 0xffffffe5;\n                }\n            }\n        } while (param_2 != unaff_EDI);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 628
    },
    "00423990": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00423990(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    var_8h = 0;\n    var_4h = 0;\n    uVar1 = fcn.004235d0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, &var_ch);\n    iVar2 = 0;\n    do {\n        (**(arg_1ch + 4))(arg_1ch, (&var_ch)[iVar2]);\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 3);\n    return uVar1;\n}\n",
        "token_count": 209
    },
    "0044c467": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nchar * fcn.0044c467(void)\n\n{\n    int32_t in_EAX;\n    char *pcVar1;\n    char *pcVar2;\n    char *pcVar4;\n    int32_t unaff_EDI;\n    char *pcVar3;\n    \n    pcVar1 = *(in_EAX + 0x6c) + *(in_EAX + 0x38);\n    pcVar4 = *(in_EAX + 0x38) + unaff_EDI;\n    if ((*pcVar4 == *pcVar1) && (pcVar4[1] == pcVar1[1])) {\n        pcVar4 = pcVar4 + 2;\n        pcVar3 = pcVar1 + 2;\n        while (((((pcVar2 = pcVar3 + 1,  *pcVar2 == pcVar4[1] && (pcVar2 = pcVar3 + 2,  *pcVar2 == pcVar4[2])) &&\n                 (pcVar2 = pcVar3 + 3,  *pcVar2 == pcVar4[3])) &&\n                ((pcVar2 = pcVar3 + 4,  *pcVar2 == pcVar4[4] && (pcVar2 = pcVar3 + 5,  *pcVar2 == pcVar4[5])))) &&\n               ((pcVar2 = pcVar3 + 6,  *pcVar2 == pcVar4[6] && (pcVar2 = pcVar3 + 7,  *pcVar2 == pcVar4[7]))))) {\n            pcVar2 = pcVar3 + 8;\n            pcVar4 = pcVar4 + 8;\n            if ((*pcVar2 != *pcVar4) || (pcVar3 = pcVar2,  pcVar1 + 0x102 <= pcVar2)) break;\n        }\n        pcVar2 = pcVar2 + (0x102 - (pcVar1 + 0x102));\n        if (2 < pcVar2) {\n            *(in_EAX + 0x70) = unaff_EDI;\n            if (pcVar2 <= *(in_EAX + 0x74)) {\n                return pcVar2;\n            }\n            return *(in_EAX + 0x74);\n        }\n    }\n    return 0x2;\n}\n",
        "token_count": 507
    },
    "00464ff8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00464ff8(int32_t **arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    \n    piVar1 = *arg_8h;\n    if (((*piVar1 == -0x1f928c9d) && (piVar1[4] == 3)) &&\n       ((iVar2 = piVar1[5],  iVar2 == 0x19930520 ||\n        (((iVar2 == 0x19930521 || (iVar2 == 0x19930522)) || (iVar2 == 0x1994000)))))) {\n        fcn.00467f64();\n        pcVar3 = swi(3);\n        uVar4 = (*pcVar3)();\n        return uVar4;\n    }\n    return 0;\n}\n",
        "token_count": 195
    },
    "00479c00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00479c00(char *param_1)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    uint *unaff_ESI;\n    \n    bVar1 = false;\n    *unaff_ESI = 0xb;\n    if (in_EAX - param_1 == 3) {\n        if (*param_1 == 'X') {\n            bVar1 = true;\n        }\n        else if (*param_1 != 'x') {\n            return 1;\n        }\n        if (param_1[1] == 'M') {\n            bVar1 = true;\n        }\n        else if (param_1[1] != 'm') {\n            return 1;\n        }\n        if (param_1[2] == 'L') {\n            return 0;\n        }\n        if (param_1[2] == 'l') {\n            if (bVar1) {\n                return 0;\n            }\n            *unaff_ESI = 0xc;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 229
    },
    "0040250f": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040250f(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t arg_10h;\n    uint arg_8h_00;\n    uint *extraout_ECX;\n    uint32_t uVar2;\n    uint *puVar3;\n    int32_t unaff_EBP;\n    uint32_t uVar4;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0045b36b(0xc);\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    uVar4 = *(unaff_EBP + 8) | 7;\n    if (uVar4 < 0x7fffffff) {\n        *(unaff_EBP + -0x14) = 3;\n        uVar1 = extraout_ECX[5];\n        uVar2 = uVar1 >> 1;\n        if ((uVar4 / *(unaff_EBP + -0x14) < uVar2) && (uVar4 = 0x7ffffffe,  uVar1 <= 0x7ffffffe - uVar2)) {\n            uVar4 = uVar2 + uVar1;\n        }\n    }\n    else {\n        uVar4 = *(unaff_EBP + 8);\n    }\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = fcn.004024e3(uVar4 + 1);\n    arg_10h = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x14) = arg_8h_00;\n    if (arg_10h != 0) {\n        puVar3 = extraout_ECX;\n        if (7 < extraout_ECX[5]) {\n            puVar3 = *extraout_ECX;\n        }\n        fcn.0040272f(arg_8h_00, puVar3, arg_10h);\n    }\n    fcn.00402754(1, 0);\n    if (extraout_ECX != NULL) {\n        *extraout_ECX = *(unaff_EBP + -0x14);\n    }\n    extraout_ECX[5] = uVar4;\n    extraout_ECX[4] = arg_10h;\n    puVar3 = extraout_ECX;\n    if (7 < uVar4) {\n        puVar3 = *extraout_ECX;\n    }\n    *(puVar3 + arg_10h * 2) = 0;\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 601
    },
    "00415397": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00415397(uint32_t arg_8h)\n\n{\n    int32_t *in_ECX;\n    uint32_t uVar1;\n    \n    uVar1 = in_ECX[2] - *in_ECX >> 1;\n    if (0x7fffffff - (uVar1 >> 1) < uVar1) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = uVar1 + (uVar1 >> 1);\n    }\n    if (uVar1 < arg_8h) {\n        uVar1 = arg_8h;\n    }\n    return uVar1;\n}\n",
        "token_count": 145
    },
    "00420770": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00420770(int32_t *param_1, uint32_t *param_2)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (param_1[1] != 0) {\n        iVar3 = param_1[1] + -1;\n        uVar2 = CONCAT11(**param_1, 0x80);\n        puVar1 = *param_1 + 1;\n        param_1[1] = iVar3;\n        *param_1 = puVar1;\n        *param_2 = 0;\n        param_2[1] = 0;\n        var_4h = 0;\n        while( true ) {\n            if ((uVar2 & uVar2 >> 8) == 0) {\n                uVar4 = fcn.00485dd0();\n                uVar2 = *param_2;\n                *param_2 = *param_2 + uVar4;\n                param_2[1] = param_2[1] + (uVar4 >> 0x20) + CARRY4(uVar2, uVar4);\n                return 0;\n            }\n            if (iVar3 == 0) break;\n            puVar1 = puVar1 + 1;\n            *param_1 = puVar1;\n            iVar3 = iVar3 + -1;\n            param_1[1] = iVar3;\n            uVar4 = fcn.00485dd0();\n            *param_2 = *param_2 | uVar4;\n            param_2[1] = param_2[1] | uVar4 >> 0x20;\n            var_4h = var_4h + 8;\n            uVar2 = uVar2 & 0xffffff00 | uVar2 >> 1;\n            if (0x3f < var_4h) {\n                return 0;\n            }\n        }\n    }\n    return 0x10;\n}\n",
        "token_count": 473
    },
    "004209a0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004209a0(int32_t *arg_8h, code **arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t **in_ECX;\n    uint32_t in_EDX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar4 = 0;\n    if (in_EDX == 0) {\n        *arg_8h = 0;\n    }\n    else {\n        iVar2 = (**arg_ch)(arg_ch);\n        *arg_8h = iVar2;\n        if (iVar2 == 0) {\n            return 2;\n        }\n    }\n    uVar3 = 0;\n    if (in_EDX != 0) {\n        do {\n            if (uVar4 == '\\0') {\n                if (in_ECX[1] == NULL) {\n                    return 0x10;\n                }\n                in_ECX[1] = in_ECX[1] + -1;\n                uVar1 = **in_ECX;\n                *in_ECX = *in_ECX + 1;\n                uVar4 = CONCAT31(uVar1, 0x80);\n            }\n            *(uVar3 + *arg_8h) = (uVar4 >> 8 & uVar4) != 0;\n            uVar3 = uVar3 + 1;\n            uVar4 = uVar4 & 0xffffff00 | uVar4 >> 1;\n        } while (uVar3 < in_EDX);\n    }\n    return 0;\n}\n",
        "token_count": 346
    },
    "00422d00": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.00422d00(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    \n    uVar1 = 0;\n    do {\n        uVar4 = ~((uVar1 & 1) - 1) & 0xedb88320 ^ uVar1 >> 1;\n        uVar4 = ~((uVar4 & 1) - 1) & 0xedb88320 ^ uVar4 >> 1;\n        uVar4 = ~((uVar4 & 1) - 1) & 0xedb88320 ^ uVar4 >> 1;\n        uVar4 = ~((uVar4 & 1) - 1) & 0xedb88320 ^ uVar4 >> 1;\n        uVar4 = ~((uVar4 & 1) - 1) & 0xedb88320 ^ uVar4 >> 1;\n        uVar4 = ~((uVar4 & 1) - 1) & 0xedb88320 ^ uVar4 >> 1;\n        uVar4 = ~((uVar4 & 1) - 1) & 0xedb88320 ^ uVar4 >> 1;\n        *(uVar1 * 4 + 0x4ba960) = ~((uVar4 & 1) - 1) & 0xedb88320 ^ uVar4 >> 1;\n        uVar1 = uVar1 + 1;\n    } while (uVar1 < 0x100);\n    while (uVar1 < 0x800) {\n        uVar4 = *(uVar1 * 4 + 0x4ba560);\n        uVar1 = uVar1 + 1;\n        *(uVar1 * 4 + 0x4ba95c) = uVar4 >> 8 ^ *((uVar4 & 0xff) * 4 + 0x4ba960);\n    }\n    *0x4b96e4 = fcn.004239f0;\n    iVar2 = fcn.00423aa0();\n    if (iVar2 == 0) {\n        return;\n    }\n    uVar4 = var_10h >> 8 & 0xff00f;\n    uVar5 = var_10h >> 4 & 0xf00f;\n    piVar3 = 0x4b7900;\n    uVar1 = 0;\n    iVar2 = 0;\n    do {\n        if (((piVar3[-2] == var_1ch) && (piVar3[-1] == var_18h)) && (*piVar3 == var_14h)) goto code_r0x00422e46;\n        uVar1 = uVar1 + 0xc;\n        iVar2 = iVar2 + 1;\n        piVar3 = piVar3 + 3;\n    } while (uVar1 < 0x24);\n    iVar2 = -1;\ncode_r0x00422e46:\n    if (iVar2 == 0) {\n        if (uVar4 < 6) {\n            return;\n        }\n        if (uVar4 != 6) goto code_r0x00422e8e;\n        bVar6 = uVar5 == 0x100c;\n    }\n    else {\n        if (iVar2 != 1) {\n            if (iVar2 != 2) {\n                return;\n            }\n            if (uVar4 < 6) {\n                return;\n            }\n            if (uVar4 == 6) {\n                if (uVar5 < 0xf) {\n                    return;\n                }\n                *0x4b96e4 = fcn.00423a90;\n                return;\n            }\n            goto code_r0x00422e8e;\n        }\n        if (uVar4 < 5) {\n            return;\n        }\n        if (uVar4 != 5) goto code_r0x00422e8e;\n        if (uVar5 < 6) {\n            return;\n        }\n        bVar6 = uVar5 == 10;\n    }\n    if (bVar6) {\n        return;\n    }\ncode_r0x00422e8e:\n    *0x4b96e4 = fcn.00423a90;\n    return;\n}\n",
        "token_count": 1019
    },
    "00423b60": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00423b60(uint arg_8h)\n\n{\n    uint uVar1;\n    uint8_t in_DL;\n    uint var_6h;\n    \n    if (in_DL < 0x29) {\n        uVar1 = fcn.00425b20(5, arg_8h);\n        return uVar1;\n    }\n    return 4;\n}\n",
        "token_count": 85
    },
    "00447a60": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.00447a60(char *param_1, uint param_2)\n\n{\n    uint arg_8h;\n    \n    arg_8h = CONCAT13(param_1[3] >> 3 | param_1[2] << 5, \n                      CONCAT12(param_1[2] >> 2 | param_1[1] << 6, CONCAT11(param_1[1] >> 1 | *param_1 << 7, *param_1)));\n    fcn.004491f0(&stack0xfffffff4);\n    fcn.00449360(&stack0xfffffff4, param_2);\n    fcn.004529f8(arg_8h);\n    return;\n}\n",
        "token_count": 156
    },
    "0044abf7": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0044abf7(uint param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = param_2[5];\n    if (uVar1 < 0x7bd) {\n        if (0x50 < uVar1) {\n            uVar1 = uVar1 - 0x50;\n        }\n    }\n    else {\n        uVar1 = uVar1 - 0x7bc;\n    }\n    return (param_2[2] * 0x40 + param_2[1]) * 0x20 + (*param_2 >> 1) |\n           ((uVar1 * 0x10 + 1 + param_2[4]) * 0x20 + param_2[3]) * 0x10000;\n}\n",
        "token_count": 188
    },
    "00402aa7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402aa7(uint32_t arg_8h)\n\n{\n    uint32_t *in_ECX;\n    \n    if ((((~(*in_ECX >> 0x1f) & 1) != 0) || (*(in_ECX + 2) != arg_8h >> 0x10)) &&\n       (*in_ECX <= arg_8h && arg_8h != *in_ECX)) {\n        *in_ECX = arg_8h;\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "004055e4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004055e4(uint32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t *in_ECX;\n    uint unaff_EDI;\n    char16_t *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    char *pcVar5;\n    \n    if ((~(arg_8h >> 0x1f) & 1) == 0) {\n        pcVar5 = \"Err is not successful\";\n        uVar4 = 0x800002;\n        uVar3 = 0x35a;\n        pcVar2 = L\"SupportWrapper.cpp\";\n        uVar1 = fcn.0042c180();\n        fcn.0042c3c0(uVar1, pcVar2, uVar3, uVar4, pcVar5, unaff_EDI);\n    }\n    else if (in_ECX[1] != 0) {\n        pcVar5 = \"Reboot required\";\n        uVar4 = 0x800008;\n        uVar3 = 0x360;\n        pcVar2 = L\"SupportWrapper.cpp\";\n        uVar1 = fcn.0042c180();\n        fcn.0042c3c0(uVar1, pcVar2, uVar3, uVar4, pcVar5, unaff_EDI);\n        if (*in_ECX == 0) {\n            if ((in_ECX[8] == 0) && (in_ECX[9] != 0)) {\n                (*_sym.imp.USER32.dll_MessageBoxW)\n                          (0, L\"Please restart your system to complete operations!\", L\"Warning\", 0);\n            }\n        }\n        else {\n            pcVar5 = \"Automatically reboot\";\n            uVar4 = 0x800008;\n            uVar3 = 0x364;\n            pcVar2 = L\"SupportWrapper.cpp\";\n            uVar1 = fcn.0042c180();\n            fcn.0042c3c0(uVar1, pcVar2, uVar3, uVar4, pcVar5, unaff_EDI);\n            fcn.0040f9b3();\n        }\n    }\n    return;\n}\n",
        "token_count": 481
    },
    "00406264": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00406264(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t extraout_ECX;\n    uint32_t uVar2;\n    int32_t unaff_EBP;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_44h;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_18h;\n    uint var_4h;\n    \n    fcn.0045b335(0x58);\n    *(unaff_EBP + -0x60) = 0;\n    if (*(extraout_ECX + 0x84) == 0) {\n        *(unaff_EBP + -0x18) = 7;\n        *(unaff_EBP + -0x1c) = 0;\n        *(unaff_EBP + -0x2c) = 0;\n        fcn.00402667(0x4a00e0, 0);\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -100) = unaff_EBP + -0x2c;\n        uVar2 = 1;\n    }\n    else {\n        uVar1 = fcn.0040c178(extraout_ECX + 0x74);\n        *(unaff_EBP + -100) = uVar1;\n        *(unaff_EBP + -4) = 1;\n        uVar2 = 2;\n    }\n    *(unaff_EBP + -0x60) = uVar2;\n    fcn.0040f661();\n    *(unaff_EBP + -4) = 2;\n    fcn.0040c12e(*(unaff_EBP + -100));\n    fcn.00402754(1, 0);\n    if ((uVar2 & 2) != 0) {\n        uVar2 = uVar2 & 0xfffffffd;\n        fcn.00402754(1, 0);\n    }\n    if ((uVar2 & 1) != 0) {\n        fcn.00402754(1, 0);\n    }\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 540
    },
    "00407267": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00407267(void)\n\n{\n    uint arg_ch;\n    ushort *extraout_ECX;\n    uint32_t extraout_EDX;\n    int32_t unaff_EBP;\n    uint arg_8h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0045b302(8);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    *(extraout_ECX + 10) = 7;\n    *(extraout_ECX + 8) = 0;\n    *extraout_ECX = 0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = 1;\n    if ((~(extraout_EDX >> 0x1f) & 1) == 0) {\n        arg_8h = 0x4a15b8;\n        if (extraout_EDX != 0x80040501) {\n            arg_8h = 0x4a15bc;\n        }\n    }\n    else if (extraout_EDX == 1) {\n        arg_8h = 0x4a15b4;\n    }\n    else {\n        arg_8h = 0x4a15b8;\n    }\n    arg_ch = fcn.00453054(arg_8h);\n    fcn.00402667(arg_8h, arg_ch);\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 369
    },
    "00409a58": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409a58(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x3c) & 1) != 0) {\n        fcn.00452a07(**(param_1 + 0xc));\n    }\n    **(param_1 + 0xc) = 0;\n    **(param_1 + 0x1c) = 0;\n    **(param_1 + 0x2c) = 0;\n    **(param_1 + 0x10) = 0;\n    **(param_1 + 0x20) = 0;\n    **(param_1 + 0x30) = 0;\n    *(param_1 + 0x3c) = *(param_1 + 0x3c) & 0xfffffffe;\n    *(param_1 + 0x38) = 0;\n    return;\n}\n",
        "token_count": 208
    },
    "0040abd6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040abd6(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if ((arg_8h & 1) == 0) {\n        uVar1 = 4;\n    }\n    if ((arg_8h & 2) == 0) {\n        uVar1 = uVar1 | 2;\n    }\n    if ((arg_8h & 8) != 0) {\n        uVar1 = uVar1 | 8;\n    }\n    if ((arg_8h & 4) != 0) {\n        uVar1 = uVar1 | 0x10;\n    }\n    return uVar1;\n}\n",
        "token_count": 164
    },
    "0040ca91": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040ca91(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    code **ppcVar2;\n    uint arg_8h_00;\n    int32_t unaff_EBP;\n    bool bVar3;\n    uint var_44h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0045b302(0x38);\n    piVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar2 = fcn.0045306d(8);\n        *(unaff_EBP + 8) = ppcVar2;\n        *(unaff_EBP + -4) = 0;\n        bVar3 = ppcVar2 == NULL;\n        if (bVar3) {\n            ppcVar2 = NULL;\n        }\n        else {\n            arg_8h_00 = fcn.0040e03e();\n            fcn.0040dfb4(arg_8h_00);\n            ppcVar2[1] = NULL;\n            *ppcVar2 = \n            vtable.std::num_get_wchar_t__class_std::istreambuf_iterator_wchar_t__struct_std::char_traits_wchar_t___.0;\n        }\n        *piVar1 = ppcVar2;\n        if (!bVar3) {\n            fcn.0040e06a();\n        }\n    }\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 377
    },
    "00409602": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\ncode ** __cdecl fcn.00409602(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    fcn.00408733();\n    *in_ECX = vtable.std::ios_base.0;\n    fcn.0044e8ed(in_ECX);\n    if ((arg_8h & 1) != 0) {\n        fcn.00452a07(in_ECX + -8);\n    }\n    return in_ECX + -8;\n}\n",
        "token_count": 107
    },
    "00409689": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\ncode ** __cdecl fcn.00409689(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    fcn.00408e52();\n    *in_ECX = vtable.std::ios_base.0;\n    fcn.0044e8ed(in_ECX);\n    if ((arg_8h & 1) != 0) {\n        fcn.00452a07(in_ECX + -8);\n    }\n    return in_ECX + -8;\n}\n",
        "token_count": 108
    },
    "004095e0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004095e0(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.004057d4();\n    if ((arg_8h & 1) != 0) {\n        fcn.00452a07(in_ECX + -0x68);\n    }\n    return in_ECX + -0x68;\n}\n",
        "token_count": 87
    },
    "00409655": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\ncode ** __cdecl fcn.00409655(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    fcn.00408e23();\n    *in_ECX = vtable.std::ios_base.0;\n    fcn.0044e8ed(in_ECX);\n    if ((arg_8h & 1) != 0) {\n        fcn.00452a07(in_ECX + -0x1e);\n    }\n    return in_ECX + -0x1e;\n}\n",
        "token_count": 114
    },
    "0040d444": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040d444(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    code **ppcVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    bool bVar4;\n    uint var_44h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0045b302(0x38);\n    *(unaff_EBP + -0x10) = 0;\n    piVar1 = *(unaff_EBP + 8);\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar2 = fcn.0045306d(0x18);\n        *(unaff_EBP + 8) = ppcVar2;\n        *(unaff_EBP + -4) = 0;\n        bVar4 = ppcVar2 == NULL;\n        if (bVar4) {\n            ppcVar2 = NULL;\n        }\n        else {\n            uVar3 = fcn.0040e03e();\n            uVar3 = fcn.0040dfb4(uVar3);\n            ppcVar2[1] = NULL;\n            *(unaff_EBP + -0x10) = 1;\n            *(unaff_EBP + -4) = 2;\n            *ppcVar2 = vtable.std::numpunct_wchar_t_.0;\n            fcn.0040d350(uVar3, 1);\n        }\n        *piVar1 = ppcVar2;\n        if (!bVar4) {\n            fcn.0040e06a();\n        }\n    }\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 398
    },
    "0040d8bf": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040d8bf(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.0040d8e1();\n    if ((arg_8h & 1) != 0) {\n        fcn.00452a07(in_ECX + -8);\n    }\n    return in_ECX + -8;\n}\n",
        "token_count": 86
    },
    "0040d91d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\ncode ** __cdecl fcn.0040d91d(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *(*(in_ECX[-6] + 4) + -0x18 + in_ECX) = vtable.std::basic_istream_char__struct_std::char_traits_char__.0;\n    *(*(in_ECX[-6] + 4) + -0x1c + in_ECX) = *(in_ECX[-6] + 4) + -0x18;\n    *in_ECX = vtable.std::ios_base.0;\n    fcn.0044e8ed(in_ECX);\n    if ((arg_8h & 1) != 0) {\n        fcn.00452a07(in_ECX + -6);\n    }\n    return in_ECX + -6;\n}\n",
        "token_count": 185
    },
    "0040dbeb": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040dbeb(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.0040dc0d();\n    if ((arg_8h & 1) != 0) {\n        fcn.00452a07(in_ECX + -8);\n    }\n    return in_ECX + -8;\n}\n",
        "token_count": 84
    },
    "0040dc41": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\ncode ** __cdecl fcn.0040dc41(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *(*(in_ECX[-6] + 4) + -0x18 + in_ECX) = vtable.std::basic_istream_wchar_t__struct_std::char_traits_wchar_t__.0;\n    *(*(in_ECX[-6] + 4) + -0x1c + in_ECX) = *(in_ECX[-6] + 4) + -0x18;\n    *in_ECX = vtable.std::ios_base.0;\n    fcn.0044e8ed(in_ECX);\n    if ((arg_8h & 1) != 0) {\n        fcn.00452a07(in_ECX + -6);\n    }\n    return in_ECX + -6;\n}\n",
        "token_count": 188
    },
    "0040e0e7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040e0e7(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    code **ppcVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    bool bVar4;\n    uint var_44h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0045b302(0x38);\n    piVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar2 = fcn.0045306d(0x44);\n        *(unaff_EBP + 8) = ppcVar2;\n        *(unaff_EBP + -4) = 0;\n        bVar4 = ppcVar2 == NULL;\n        if (bVar4) {\n            ppcVar2 = NULL;\n        }\n        else {\n            uVar3 = fcn.0040e03e();\n            uVar3 = fcn.0040dfb4(uVar3);\n            ppcVar2[1] = NULL;\n            *ppcVar2 = vtable.std::ctype_wchar_t_.0;\n            fcn.0040df7b(uVar3);\n        }\n        *piVar1 = ppcVar2;\n        if (!bVar4) {\n            fcn.0040e06a();\n        }\n    }\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 366
    },
    "0040fc45": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040fc45(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.0040f999();\n    if ((arg_8h & 1) != 0) {\n        fcn.00452a07(in_ECX + -0x60);\n    }\n    return in_ECX + -0x60;\n}\n",
        "token_count": 87
    },
    "00411f03": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411f03(code **param_1)\n\n{\n    code *pcVar1;\n    uint unaff_ESI;\n    \n    *param_1 = vtable.std::basic_stringbuf_char__struct_std::char_traits_char___class_std::allocator_char__.0;\n    if ((*(param_1 + 0xf) & 1) != 0) {\n        fcn.00452a07(*param_1[3]);\n    }\n    *param_1[3] = 0;\n    *param_1[7] = 0;\n    *param_1[0xb] = 0;\n    *param_1[4] = 0;\n    *param_1[8] = 0;\n    *param_1[0xc] = 0;\n    param_1[0xf] = param_1[0xf] & 0xfffffffe;\n    param_1[0xe] = NULL;\n    pcVar1 = param_1[0xd];\n    *param_1 = vtable.std::basic_streambuf_char__struct_std::char_traits_char__.0;\n    if (pcVar1 != NULL) {\n        fcn.0040e226(unaff_ESI);\n        fcn.00452a07(pcVar1);\n    }\n    return;\n}\n",
        "token_count": 285
    },
    "00413959": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00413959(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    ushort *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0045b302(0x18);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    *(extraout_ECX + 10) = 7;\n    *(extraout_ECX + 8) = 0;\n    *extraout_ECX = 0;\n    *(unaff_EBP + -4) = 0;\n    iVar1 = fcn.0045306d(0x18);\n    *(unaff_EBP + -0x18) = iVar1;\n    *(unaff_EBP + -4) = 1;\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        *(unaff_EBP + -0x24) = 0;\n        uVar2 = fcn.0044ec0d(1);\n        *(unaff_EBP + -0x1c) = uVar2;\n        *(unaff_EBP + -4) = 2;\n        *(unaff_EBP + -0x10) = 1;\n        uVar2 = fcn.00413e56(unaff_EBP + -0x24);\n    }\n    *(extraout_ECX + 0xc) = uVar2;\n    if (iVar1 != 0) {\n        fcn.0040e226();\n    }\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 424
    },
    "00413f55": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00413f55(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    code **ppcVar2;\n    uint arg_8h_00;\n    int32_t unaff_EBP;\n    bool bVar3;\n    uint var_44h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0045b302(0x38);\n    piVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar2 = fcn.0045306d(8);\n        *(unaff_EBP + 8) = ppcVar2;\n        *(unaff_EBP + -4) = 0;\n        bVar3 = ppcVar2 == NULL;\n        if (bVar3) {\n            ppcVar2 = NULL;\n        }\n        else {\n            arg_8h_00 = fcn.0040e03e();\n            fcn.0040dfb4(arg_8h_00);\n            ppcVar2[1] = NULL;\n            *ppcVar2 = vtable.std::num_put_char__class_std::ostreambuf_iterator_char__struct_std::char_traits_char___.0;\n        }\n        *piVar1 = ppcVar2;\n        if (!bVar3) {\n            fcn.0040e06a();\n        }\n    }\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 369
    },
    "00414b42": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414b42(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 0;\n    iVar2 = param_1 + -0xc;\n    if (param_1 == 0) {\n        iVar2 = 0;\n    }\n    puVar1 = *(iVar2 + 4) + 0x34;\n    *puVar1 = *puVar1 & 0xfffffffe;\n    iVar2 = param_1 + -0xc;\n    if (param_1 == 0) {\n        iVar2 = 0;\n    }\n    puVar1 = *(iVar2 + 4) + 0x34;\n    *puVar1 = *puVar1 & 1;\n    iVar2 = param_1 + -0xc;\n    if (param_1 == 0) {\n        iVar2 = 0;\n    }\n    iVar4 = *(iVar2 + 4) + 0x34;\n    if (*(iVar2 + 4) == 0) {\n        iVar4 = 0;\n    }\n    iVar2 = param_1 + -0xc;\n    if (param_1 == 0) {\n        iVar2 = 0;\n    }\n    *(*(iVar2 + 4) + 0x38) = iVar4;\n    iVar2 = param_1 + -0xc;\n    if (param_1 == 0) {\n        iVar2 = 0;\n    }\n    if (*(iVar2 + 4) == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = *(iVar2 + 4) + 0x34;\n    }\n    if (param_1 != 0) {\n        iVar3 = param_1 + -0xc;\n    }\n    *(*(iVar3 + 4) + 0x3c) = iVar2;\n    return;\n}\n",
        "token_count": 436
    },
    "004160a4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004160a4(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0045b302(0x14);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    fcn.004084c5(*(unaff_EBP + 8));\n    *(unaff_EBP + -4) = 0;\n    iVar1 = fcn.0045306d(0x18);\n    *(unaff_EBP + 8) = iVar1;\n    *(unaff_EBP + -4) = 1;\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        *(unaff_EBP + -0x20) = 0;\n        uVar2 = fcn.0044ec0d(1);\n        *(unaff_EBP + -0x18) = uVar2;\n        *(unaff_EBP + -4) = 2;\n        *(unaff_EBP + -0x10) = 1;\n        uVar2 = fcn.00413e56(unaff_EBP + -0x20);\n    }\n    *(extraout_ECX + 0x18) = uVar2;\n    if (iVar1 != 0) {\n        fcn.0040e226();\n    }\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 402
    },
    "00416649": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00416649(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uchar *puVar2;\n    int16_t iVar3;\n    uint arg_ch_00;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint var_c0h;\n    uint var_b4h;\n    uint var_60h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0045b302(0xb4);\n    *(unaff_EBP + -0x14) = 0;\n    fcn.0041695b(*(unaff_EBP + 0xc));\n    *(unaff_EBP + -4) = 0;\n    fcn.00413dc0(unaff_EBP + 0xc, arg_ch_00);\n    fcn.0040e226();\n    fcn.004169c2(unaff_EBP + -0x10);\n    iVar4 = *(unaff_EBP + -0xc0);\n    if ((*(unaff_EBP + -0xb4 + *(iVar4 + 4)) & 1) == 0) {\n        fcn.00419147(unaff_EBP + -0xc0);\n        iVar4 = *(unaff_EBP + -0xc0);\n    }\n    uVar1 = *(unaff_EBP + -0xb4 + *(iVar4 + 4));\n    if (((uVar1 & 6) == 0) && ((uVar1 >> 2 & 1) == 0)) {\n        iVar3 = fcn.00416789();\n        if (iVar3 == -1) {\n            puVar2 = *(unaff_EBP + 8);\n            *puVar2 = 0;\n            if (puVar2 + 4 != NULL) {\n                *(puVar2 + 4) = *(unaff_EBP + -0x10);\n            }\n            *puVar2 = 1;\n            goto code_r0x0041670f;\n        }\n    }\n    **(unaff_EBP + 8) = 0;\ncode_r0x0041670f:\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040fc02();\n    *(unaff_EBP + -0x60) = vtable.std::ios_base.0;\n    fcn.0044e8ed(unaff_EBP + -0x60);\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 592
    },
    "00417388": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417388(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    fcn.00402754(1, 0);\n    *in_ECX = vtable.boost::any::placeholder.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00452a07();\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "00417597": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417597(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t in_ECX;\n    uint32_t uVar8;\n    int32_t *piVar9;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = fcn.0041662d();\n    if (iVar3 == 0) {\n        fcn.00414b42();\n    }\n    else {\n        if (arg_8h == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = arg_8h + -0xc;\n        }\n        if (in_ECX == 0) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = in_ECX + -0xc;\n        }\n        *(*(iVar4 + 4) + 0x34) = *(*(iVar4 + 4) + 0x34) & 0xfffffffe | *(*(iVar3 + 4) + 0x34) & 1;\n        arg_8h_00 = fcn.0041662d();\n        iVar3 = fcn.00417747(arg_8h_00);\n        if (iVar3 == 0) {\n            uVar5 = 0;\n        }\n        else {\n            uVar5 = iVar3 + 0x34;\n        }\n        if (in_ECX == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = in_ECX + -0xc;\n        }\n        *(*(iVar3 + 4) + 0x34) = *(*(iVar3 + 4) + 0x34) & 1 | uVar5;\n        if (arg_8h == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = arg_8h + -0xc;\n        }\n        iVar3 = *(*(iVar3 + 4) + 0x38);\n        if (iVar3 == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = iVar3 + -0x34;\n        }\n        iVar3 = fcn.00417747(iVar3);\n        if (iVar3 == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = iVar3 + 0x34;\n        }\n        if (in_ECX == 0) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = in_ECX + -0xc;\n        }\n        *(*(iVar4 + 4) + 0x38) = iVar3;\n        if (arg_8h == 0) {\n            arg_8h = 0;\n        }\n        else {\n            arg_8h = arg_8h + -0xc;\n        }\n        iVar3 = *(*(arg_8h + 4) + 0x3c);\n        if (iVar3 == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = iVar3 + -0x34;\n        }\n        iVar3 = fcn.00417747(iVar3);\n        if (iVar3 == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = iVar3 + 0x34;\n        }\n        if (in_ECX == 0) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = in_ECX + -0xc;\n        }\n        *(*(iVar4 + 4) + 0x3c) = iVar3;\n        piVar9 = *(arg_ch + 0x10);\n        piVar2 = piVar9 + *(arg_ch + 0x14) * 2;\n        for (; piVar9 != piVar2; piVar9 = piVar9 + 2) {\n            iVar3 = *piVar9;\n            iVar4 = piVar9[1];\n            puVar1 = iVar4 + 0x34;\n            uVar5 = *(iVar3 + 0x34) & 1;\n            *puVar1 = *puVar1 & 0xfffffffe | uVar5;\n            uVar6 = *(iVar3 + 0x34) & 0xfffffffe;\n            if (uVar6 == 0) {\n                *puVar1 = uVar5;\n            }\n            else {\n                iVar7 = fcn.00417747(uVar6 - 0x34);\n                if (iVar7 == 0) {\n                    uVar8 = 0;\n                }\n                else {\n                    uVar8 = iVar7 + 0x34;\n                }\n                *puVar1 = uVar5 | uVar8;\n                if (*(uVar6 + 4) == iVar3 + 0x34) {\n                    *(iVar7 + 0x38) = puVar1;\n                }\n                else if (*(uVar6 + 8) == iVar3 + 0x34) {\n                    *(iVar7 + 0x3c) = puVar1;\n                }\n            }\n            if (*(iVar3 + 0x38) == 0) {\n                *(iVar4 + 0x38) = 0;\n            }\n            if (*(iVar3 + 0x3c) == 0) {\n                *(iVar4 + 0x3c) = 0;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 1250
    },
    "0041863a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041863a(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *in_ECX;\n    int32_t in_EDX;\n    \n    if (in_EDX == 0) {\n        arg_8h[1] = in_ECX;\n        if (arg_8h != arg_ch) {\n            if (arg_8h == arg_ch[1]) {\n                arg_ch[1] = in_ECX;\n            }\n            goto code_r0x0041866f;\n        }\n        *arg_ch = *arg_ch & 1 | in_ECX;\n    }\n    else {\n        arg_8h[2] = in_ECX;\n        if (arg_8h != arg_ch[2]) goto code_r0x0041866f;\n    }\n    arg_ch[2] = in_ECX;\ncode_r0x0041866f:\n    *in_ECX = *in_ECX & 1 | arg_8h;\n    in_ECX[1] = 0;\n    in_ECX[2] = 0;\n    fcn.004186b4(arg_ch);\n    return;\n}\n",
        "token_count": 257
    },
    "004186b4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004186b4(uint32_t *arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    uint32_t *in_ECX;\n    uint32_t uVar3;\n    \n    *in_ECX = *in_ECX & 0xfffffffe;\n    if (in_ECX != (*arg_8h & 0xfffffffe)) {\n        do {\n            puVar2 = *in_ECX & 0xfffffffe;\n            if ((*puVar2 & 1) != 0) break;\n            uVar3 = *puVar2 & 0xfffffffe;\n            puVar1 = *(uVar3 + 4);\n            if ((*in_ECX & 0xfffffffe) == puVar1) {\n                puVar1 = *(uVar3 + 8);\n                if ((puVar1 == NULL) || ((*puVar1 & 1) != 0)) {\n                    if (in_ECX == puVar2[2]) {\n                        fcn.004187ad(arg_8h);\n                        in_ECX = puVar2;\n                    }\n                    *(*in_ECX & 0xfffffffe) = *(*in_ECX & 0xfffffffe) | 1;\n                    puVar2 = *(*in_ECX & 0xfffffffe) & 0xfffffffe;\n                    *puVar2 = *puVar2 & 0xfffffffe;\n                    fcn.00418811(arg_8h);\n                }\n                else {\n                    *puVar2 = *puVar2 | 1;\n                    *puVar1 = *puVar1 | 1;\ncode_r0x00418746:\n                    puVar2 = *(*in_ECX & 0xfffffffe) & 0xfffffffe;\n                    *puVar2 = *puVar2 & 0xfffffffe;\n                    in_ECX = *(*in_ECX & 0xfffffffe) & 0xfffffffe;\n                }\n            }\n            else {\n                if ((puVar1 != NULL) && ((*puVar1 & 1) == 0)) {\n                    *puVar2 = *puVar2 | 1;\n                    *puVar1 = *puVar1 | 1;\n                    goto code_r0x00418746;\n                }\n                if (in_ECX == puVar2[1]) {\n                    fcn.00418811(arg_8h);\n                    in_ECX = puVar2;\n                }\n                *(*in_ECX & 0xfffffffe) = *(*in_ECX & 0xfffffffe) | 1;\n                puVar2 = *(*in_ECX & 0xfffffffe) & 0xfffffffe;\n                *puVar2 = *puVar2 & 0xfffffffe;\n                fcn.004187ad(arg_8h);\n            }\n        } while (in_ECX != (*arg_8h & 0xfffffffe));\n    }\n    *(*arg_8h & 0xfffffffe) = *(*arg_8h & 0xfffffffe) | 1;\n    return;\n}\n",
        "token_count": 656
    },
    "004187ad": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004187ad(uint32_t *arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    uint32_t *in_ECX;\n    \n    puVar1 = in_ECX[2];\n    in_ECX[2] = puVar1[1];\n    puVar2 = puVar1[1];\n    if (puVar2 != NULL) {\n        *puVar2 = *puVar2 & 1 | in_ECX;\n    }\n    *puVar1 = (*puVar1 ^ *in_ECX) & 1 ^ *in_ECX;\n    if (in_ECX == (*arg_8h & 0xfffffffe)) {\n        *arg_8h = *arg_8h & 1 | puVar1;\n    }\n    else {\n        uVar3 = *in_ECX & 0xfffffffe;\n        if (in_ECX == *(uVar3 + 4)) {\n            *(uVar3 + 4) = puVar1;\n        }\n        else {\n            *(uVar3 + 8) = puVar1;\n        }\n    }\n    puVar1[1] = in_ECX;\n    *in_ECX = *in_ECX & 1 | puVar1;\n    return;\n}\n",
        "token_count": 293
    },
    "00418811": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418811(uint32_t *arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    uint32_t *in_ECX;\n    \n    puVar1 = in_ECX[1];\n    in_ECX[1] = puVar1[2];\n    puVar2 = puVar1[2];\n    if (puVar2 != NULL) {\n        *puVar2 = *puVar2 & 1 | in_ECX;\n    }\n    *puVar1 = (*puVar1 ^ *in_ECX) & 1 ^ *in_ECX;\n    if (in_ECX == (*arg_8h & 0xfffffffe)) {\n        *arg_8h = *arg_8h & 1 | puVar1;\n    }\n    else {\n        uVar3 = *in_ECX & 0xfffffffe;\n        if (in_ECX == *(uVar3 + 8)) {\n            *(uVar3 + 8) = puVar1;\n        }\n        else {\n            *(uVar3 + 4) = puVar1;\n        }\n    }\n    puVar1[2] = in_ECX;\n    *in_ECX = *in_ECX & 1 | puVar1;\n    return;\n}\n",
        "token_count": 293
    },
    "004124f1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\ncode ** __cdecl fcn.004124f1(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    fcn.00411eba();\n    *in_ECX = vtable.std::ios_base.0;\n    fcn.0044e8ed(in_ECX);\n    if ((arg_8h & 1) != 0) {\n        fcn.00452a07(in_ECX + -0x1a);\n    }\n    return in_ECX + -0x1a;\n}\n",
        "token_count": 114
    },
    "00414834": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\ncode ** __cdecl fcn.00414834(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    fcn.004140b6();\n    *in_ECX = vtable.std::ios_base.0;\n    fcn.0044e8ed(in_ECX);\n    if ((arg_8h & 1) != 0) {\n        fcn.00452a07(in_ECX + -0x1c);\n    }\n    return in_ECX + -0x1c;\n}\n",
        "token_count": 114
    },
    "0041931a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041931a(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_44h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0045b302(0x38);\n    piVar1 = *(unaff_EBP + 8);\n    iVar4 = 0;\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        iVar2 = fcn.0045306d(0x34);\n        *(unaff_EBP + 8) = iVar2;\n        *(unaff_EBP + -4) = 0;\n        if (iVar2 != 0) {\n            uVar3 = fcn.0040e03e();\n            uVar3 = fcn.0040dfb4(uVar3);\n            iVar4 = fcn.004192e6(uVar3, 0);\n        }\n        *piVar1 = iVar4;\n        if (iVar2 != 0) {\n            fcn.0040e06a();\n        }\n    }\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 320
    },
    "0041983b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041983b(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    code **ppcVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    bool bVar4;\n    uint var_44h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0045b302(0x38);\n    *(unaff_EBP + -0x10) = 0;\n    piVar1 = *(unaff_EBP + 8);\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar2 = fcn.0045306d(0x18);\n        *(unaff_EBP + 8) = ppcVar2;\n        *(unaff_EBP + -4) = 0;\n        bVar4 = ppcVar2 == NULL;\n        if (bVar4) {\n            ppcVar2 = NULL;\n        }\n        else {\n            uVar3 = fcn.0040e03e();\n            uVar3 = fcn.0040dfb4(uVar3);\n            ppcVar2[1] = NULL;\n            *(unaff_EBP + -0x10) = 1;\n            *(unaff_EBP + -4) = 2;\n            *ppcVar2 = vtable.std::numpunct_char_.0;\n            fcn.00419779(uVar3, 1);\n        }\n        *piVar1 = ppcVar2;\n        if (!bVar4) {\n            fcn.0040e06a();\n        }\n    }\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 395
    },
    "0041d05b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0041d05b(void)\n\n{\n    uint arg_ch;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0045b302(0xc);\n    if ((*0x4b97f4 & 1) == 0) {\n        *0x4b97f4 = *0x4b97f4 | 1;\n        *(unaff_EBP + -4) = 0;\n        fcn.0041d0cb();\n        fcn.00453ab0(0x48ba02);\n        *(unaff_EBP + -4) = 0xffffffff;\n    }\n    fcn.0041ec44(unaff_EBP + -0x18, arg_ch);\n    *(unaff_EBP + -4) = 0xffffffff;\n    if (*(unaff_EBP + -0x18) == 0) {\n        if (*(unaff_EBP + -0x14) != 0) {\n            fcn.0040cd13();\n        }\n    }\n    else if (*(unaff_EBP + -0x14) != 0) {\n        fcn.0040cd13();\n    }\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 304
    },
    "00426300": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00426300(uint param_1, uint param_2)\n\n{\n    uint32_t arg_8h;\n    code **ppcVar1;\n    uint *puVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_15ch;\n    int32_t iStack340;\n    int32_t var_14ch;\n    int32_t iStack324;\n    int32_t var_13ch;\n    code *var_134h;\n    uint *var_128h;\n    uint *var_124h;\n    uint *var_118h;\n    uint *var_114h;\n    uint *var_108h;\n    uint *var_104h;\n    int32_t **var_100h;\n    uint var_fch;\n    uint32_t var_f8h;\n    code *var_e4h;\n    uint var_98h;\n    uint var_94h;\n    uint32_t var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48a2cb;\n    var_ch = *in_FS_OFFSET;\n    arg_8h = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_98h = 0;\n    var_14h = arg_8h;\n    fcn.00426b50();\n    var_4h = 0;\n    var_94h._0_2_ = 0;\n    fcn.00453710(&var_94h + 2, 0, 0x7e);\n    fcn.00455a3f(param_2, &var_94h, 0x40, 0x10);\n    *(&var_fch + *(var_13ch + 4)) = 0x30;\n    ppcVar1 = fcn.004500dc(&var_15ch, 8, 0);\n    (**ppcVar1)(&var_13ch + *(var_13ch + 4), ppcVar1[2], ppcVar1[3]);\n    fcn.0040c525();\n    fcn.00426db0(param_1);\n    var_4h = 0xffffffff;\n    *(&var_14ch + *(var_14ch + 4)) =\n         vtable.std::basic_stringstream_wchar_t__struct_std::char_traits_wchar_t___class_std::allocator_wchar_t__.0;\n    *(&iStack340 + *(var_14ch + 4)) = *(var_14ch + 4) + -0x68;\n    var_134h = vtable.std::basic_stringbuf_wchar_t__struct_std::char_traits_wchar_t___class_std::allocator_wchar_t__.0;\n    if ((var_f8h & 1) != 0) {\n        fcn.00452a07(*var_128h);\n    }\n    *var_128h = 0;\n    *var_118h = 0;\n    *var_108h = 0;\n    *var_124h = 0;\n    *var_114h = 0;\n    *var_104h = 0;\n    var_f8h = var_f8h & 0xfffffffe;\n    var_fch = 0;\n    var_134h = vtable.std::basic_streambuf_wchar_t__struct_std::char_traits_wchar_t__.0;\n    if (var_100h != NULL) {\n        if (*var_100h != NULL) {\n            puVar2 = (**(**var_100h + 8))();\n            if (puVar2 != NULL) {\n                (***puVar2)(1);\n            }\n        }\n        fcn.00452a07(var_100h);\n    }\n    *(&var_14ch + *(var_14ch + 4)) = vtable.std::basic_iostream_wchar_t__struct_std::char_traits_wchar_t__.0;\n    *(&iStack340 + *(var_14ch + 4)) = *(var_14ch + 4) + -0x20;\n    *(&var_13ch + *(var_13ch + 4)) = vtable.std::basic_ostream_wchar_t__struct_std::char_traits_wchar_t__.0;\n    *(&iStack324 + *(var_13ch + 4)) = *(var_13ch + 4) + -8;\n    *(&var_14ch + *(var_14ch + 4)) = vtable.std::basic_istream_wchar_t__struct_std::char_traits_wchar_t__.0;\n    *(&iStack340 + *(var_14ch + 4)) = *(var_14ch + 4) + -0x18;\n    var_e4h = vtable.std::ios_base.0;\n    fcn.0044e8ed(&var_e4h);\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(arg_8h);\n    return;\n}\n",
        "token_count": 1127
    },
    "00427240": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427240(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    if (7 < *(in_ECX + 0x18)) {\n        fcn.00452a07(*(in_ECX + 4));\n    }\n    *(in_ECX + 0x18) = 7;\n    *(in_ECX + 0x14) = 0;\n    *(in_ECX + 4) = 0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00452a07();\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "00428680": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00428680(int16_t *param_1)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint unaff_ESI;\n    int32_t *in_FS_OFFSET;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48a5a9;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    bVar1 = false;\n    var_2ch = 0;\n    iVar2 = fcn.004283e0(&var_2ch);\n    if ((iVar2 == 0) && (iVar2 = fcn.00427bf0(&var_2ch),  iVar2 == 0)) {\n        if (param_1 != NULL) {\n            var_14h = 7;\n            var_28h = var_28h & 0xffff0000;\n            var_18h = iVar2;\n            if (*param_1 != 0) {\n                iVar2 = fcn.00453054(param_1);\n            }\n            fcn.00402667(param_1, iVar2);\n            var_4h = 0;\n            bVar1 = true;\n            fcn.00427fb0(&var_2ch);\n        }\n        if ((bVar1) && (7 < var_14h)) {\n            fcn.00452a07(var_28h);\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(unaff_ESI);\n    return;\n}\n",
        "token_count": 429
    },
    "00429ec0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00429ec0(int16_t *arg_8h, uint arg_ch)\n\n{\n    bool bVar1;\n    uint uVar2;\n    code **ppcVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint extraout_ECX_02;\n    uint extraout_ECX_03;\n    uint extraout_ECX_04;\n    code *pcVar5;\n    int32_t *in_FS_OFFSET;\n    uint uVar6;\n    char16_t *pcVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    char *pcVar11;\n    int16_t *arg_1ch;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48a454;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &fcn.00429ec0::var_ch;\n    pcVar11 = \"GenerateReport() szFilename=%S\";\n    uVar9 = 0x2000010;\n    uVar8 = 0x24;\n    pcVar7 = L\"c:\\\\ci-jenkins\\\\workspace\\\\irobot\\\\irobot_1.62\\\\irobot_1.62\\\\src\\\\common\\\\XmlReport.h\";\n    bVar1 = false;\n    arg_1ch = arg_8h;\n    uVar2 = fcn.0042c180();\n    fcn.0042c3c0(uVar2, pcVar7, uVar8, uVar9, pcVar11, arg_1ch);\n    uVar8 = 5000;\n    pcVar11 = \"GenerateReport() __HC_XML_STR_BUFFER_SIZE_CEILING__ = %d\";\n    uVar10 = 0x2000008;\n    uVar9 = 0x29;\n    pcVar7 = L\"c:\\\\ci-jenkins\\\\workspace\\\\irobot\\\\irobot_1.62\\\\irobot_1.62\\\\src\\\\common\\\\XmlReport.h\";\n    uVar2 = fcn.0042c180(extraout_ECX);\n    fcn.0042c3c0(uVar2, pcVar7, uVar9, uVar10, pcVar11, uVar8);\n    ppcVar3 = fcn.0045306d(0x20);\n    var_4h = 0;\n    if (ppcVar3 == NULL) {\n        ppcVar3 = NULL;\n    }\n    else {\n        uVar8 = 0;\n        var_14h = 7;\n        var_18h = 0;\n        var_28h = var_28h & 0xffff0000;\n        if (*arg_8h != 0) {\n            uVar8 = fcn.00453054(arg_8h);\n        }\n        fcn.00402667(arg_8h, uVar8);\n        var_4h = CONCAT31(var_4h._1_3_, 1);\n        bVar1 = true;\n        *ppcVar3 = vtable.XOrEncryptBufferConsumer.0;\n        ppcVar3[6] = 0x7;\n        ppcVar3[5] = NULL;\n        *(ppcVar3 + 1) = 0;\n        fcn.00402450(&fcn.00429ec0::var_28h, 0, 0xffffffff);\n        ppcVar3[7] = 0xffffffff;\n    }\n    var_4h = 0xffffffff;\n    *(in_ECX + 0x38) = ppcVar3;\n    if (bVar1) {\n        if (7 < var_14h) {\n            fcn.00452a07(var_28h);\n        }\n        var_14h = 7;\n        var_18h = 0;\n        var_28h = var_28h & 0xffff0000;\n    }\n    if (*(in_ECX + 0x38) == NULL) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        pcVar11 = \"GenerateReport() invalid m_pBufWriter, Error=%lu\";\n        uVar6 = 0x2000002;\n        uVar10 = 0x31;\n        pcVar7 = L\"c:\\\\ci-jenkins\\\\workspace\\\\irobot\\\\irobot_1.62\\\\irobot_1.62\\\\src\\\\common\\\\XmlReport.h\";\n        uVar9 = fcn.0042c180(extraout_ECX_00);\n        fcn.0042c3c0(uVar9, pcVar7, uVar10, uVar6, pcVar11, uVar2);\n    }\n    else {\n        *(in_ECX + 0x34) = in_ECX;\n        iVar4 = (****(in_ECX + 0x38))();\n        pcVar5 = _sym.imp.KERNEL32.dll_GetLastError;\n        if (iVar4 == 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            pcVar11 = \"GenerateReport() m_pBufWriter->PreWrite() failed, Error=%lu\";\n            uVar6 = 0x2000002;\n            uVar10 = 0x38;\n            pcVar7 = L\"c:\\\\ci-jenkins\\\\workspace\\\\irobot\\\\irobot_1.62\\\\irobot_1.62\\\\src\\\\common\\\\XmlReport.h\";\n            uVar9 = fcn.0042c180(extraout_ECX_01);\n            fcn.0042c3c0(uVar9, pcVar7, uVar10, uVar6, pcVar11, uVar2);\n        }\n        else {\n            iVar4 = fcn.00429970(arg_8h, arg_ch);\n            pcVar5 = _sym.imp.KERNEL32.dll_GetLastError;\n            if (iVar4 == 0) {\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                pcVar11 = \"GenerateReport() DoGenerateReport() failed, Error=%lu\";\n                uVar6 = 0x2000002;\n                uVar10 = 0x3d;\n                pcVar7 = L\"c:\\\\ci-jenkins\\\\workspace\\\\irobot\\\\irobot_1.62\\\\irobot_1.62\\\\src\\\\common\\\\XmlReport.h\";\n                uVar9 = fcn.0042c180(extraout_ECX_02);\n                fcn.0042c3c0(uVar9, pcVar7, uVar10, uVar6, pcVar11, uVar2);\n            }\n            else {\n                iVar4 = fcn.0042a180();\n                pcVar5 = _sym.imp.KERNEL32.dll_GetLastError;\n                if (iVar4 == 0) {\n                    uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                    pcVar11 = \"GenerateReport() DoOutputToFile() failed, Error=%lu\";\n                    uVar6 = 0x2000002;\n                    uVar10 = 0x43;\n                    pcVar7 = L\"c:\\\\ci-jenkins\\\\workspace\\\\irobot\\\\irobot_1.62\\\\irobot_1.62\\\\src\\\\common\\\\XmlReport.h\";\n                    uVar9 = fcn.0042c180(extraout_ECX_03);\n                    fcn.0042c3c0(uVar9, pcVar7, uVar10, uVar6, pcVar11, uVar2);\n                }\n                (**(**(in_ECX + 0x38) + 8))();\n            }\n        }\n        iVar4 = *(in_ECX + 0x38);\n        if (iVar4 == 0) {\n            iVar4 = 0x42a109;\n            uVar2 = (*pcVar5)();\n            pcVar11 = \"GenerateReport() invalid m_pBufWriter, Error=%lu\";\n            uVar6 = 0x2000002;\n            uVar10 = 0x52;\n            pcVar7 = L\"c:\\\\ci-jenkins\\\\workspace\\\\irobot\\\\irobot_1.62\\\\irobot_1.62\\\\src\\\\common\\\\XmlReport.h\";\n            uVar9 = fcn.0042c180(extraout_ECX_04);\n            fcn.0042c3c0(uVar9, pcVar7, uVar10, uVar6, pcVar11, uVar2);\n        }\n        else {\n            fcn.0042a380();\n        }\n        pcVar11 = \"GenerateReport()\";\n        uVar10 = 0x2000020;\n        uVar9 = 0x56;\n        pcVar7 = L\"c:\\\\ci-jenkins\\\\workspace\\\\irobot\\\\irobot_1.62\\\\irobot_1.62\\\\src\\\\common\\\\XmlReport.h\";\n        *(in_ECX + 0x38) = 0;\n        *(in_ECX + 0x34) = 0;\n        uVar2 = fcn.0042c180();\n        fcn.0042c3c0(uVar2, pcVar7, uVar9, uVar10, pcVar11, iVar4);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(uVar8);\n    return;\n}\n",
        "token_count": 2142
    },
    "0042e6c0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042e6c0(uint param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x48ac4e;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if ((*0x4b9844 & 1) == 0) {\n        *0x4b9844 = *0x4b9844 | 1;\n        var_4h = 0;\n        fcn.00433430(uVar1);\n        fcn.00453ab0(0x48bab0);\n    }\n    var_4h = 0xffffffff;\n    fcn.00433880(param_1);\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 218
    },
    "004336b0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004336b0(void)\n\n{\n    bool bVar1;\n    uint *arg_10h;\n    int32_t iVar2;\n    uint uVar3;\n    uint extraout_ECX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uchar var_59h;\n    uint32_t var_58h;\n    uint var_48h;\n    uint32_t var_44h;\n    uint32_t var_40h;\n    uint var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48b1b9;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_60h = 0;\n    arg_10h = fcn.0042aae0(var_10h);\n    var_4h = 0;\n    iVar2 = fcn.004339a0(extraout_ECX);\n    if (iVar2 == 0) goto code_r0x00433840;\n    var_2ch = 7;\n    var_30h = 0;\n    var_40h = var_40h & 0xffff0000;\n    var_4h._0_1_ = 1;\n    var_44h = 7;\n    var_48h = 0;\n    var_58h = var_58h & 0xffff0000;\n    uVar3 = fcn.00453054(L\"NoFileWriting\");\n    fcn.00402667(L\"NoFileWriting\", uVar3);\n    var_4h = CONCAT31(var_4h._1_3_, 2);\n    bVar1 = false;\n    var_60h = 1;\n    iVar2 = (**0x4a6310)(&var_58h, &var_40h);\n    if (iVar2 == 0) {\ncode_r0x004337cc:\n        var_59h = 0;\n    }\n    else {\n        var_14h = 7;\n        var_18h = 0;\n        var_28h = var_28h & 0xffff0000;\n        uVar3 = fcn.00453054(0x4a08e4);\n        fcn.00402667(0x4a08e4, uVar3);\n        bVar1 = true;\n        iVar2 = fcn.0042e3d0();\n        var_59h = 1;\n        if (iVar2 == 0) goto code_r0x004337cc;\n    }\n    if (bVar1) {\n        if (7 < var_14h) {\n            fcn.00452a07(var_28h);\n        }\n        var_14h = 7;\n        var_18h = 0;\n        var_28h = var_28h & 0xffff0000;\n    }\n    if (7 < var_44h) {\n        fcn.00452a07(var_58h);\n    }\n    if (7 < var_2ch) {\n        fcn.00452a07(var_40h);\n    }\n    var_2ch = 7;\n    var_30h = 0;\n    var_40h = var_40h & 0xffff0000;\ncode_r0x00433840:\n    var_4h = 0xffffffff;\n    arg_8h = arg_10h;\n    fcn.00429d10(&var_60h, *arg_10h, arg_10h);\n    fcn.00452a07(arg_10h);\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(arg_8h);\n    return;\n}\n",
        "token_count": 946
    },
    "0045117f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045117f(double *arg_8h, int32_t arg_ch)\n\n{\n    uint16_t *puVar1;\n    double dVar2;\n    uint16_t uVar3;\n    uint8_t uVar4;\n    uint16_t uVar5;\n    uint16_t uVar6;\n    uint16_t uVar7;\n    uint32_t uVar8;\n    uint8_t uVar9;\n    uint16_t uVar10;\n    uint32_t uVar11;\n    uint16_t uVar12;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar6 = *(arg_8h + 6) >> 4 & 0x7ff;\n    if (uVar6 == 0x7ff) {\n        if (((((*(arg_8h + 6) & 0xf) != 0) || (*(arg_8h + 4) != 0)) || (*(arg_8h + 2) != 0)) || (*arg_8h != 0)) {\n            return 2;\n        }\n    }\n    else {\n        if ((uVar6 == 0) && (uVar6 = fcn.0045267c(arg_8h),  0 < uVar6)) {\n            return 0;\n        }\n        if ((arg_ch < 1) || (arg_ch < 0x7ff - uVar6)) {\n            if (-uVar6 < arg_ch) {\n                *(arg_8h + 6) = (uVar6 + arg_ch) * 0x10 | *(arg_8h + 6) & 0x800f;\n                return 0xffffffff;\n            }\n            uVar7 = *(arg_8h + 6) & 0xf | 0x10;\n            uVar10 = *(arg_8h + 6) & 0x8000;\n            uVar11 = arg_ch + -1 + uVar6;\n            *(arg_8h + 6) = uVar7;\n            if (uVar11 + 0x35 < 0x35) {\n                uVar6 = 0;\n                if (uVar11 < -0xf) {\n                    uVar8 = (-uVar11 - 0x10U >> 4) + 1;\n                    uVar11 = uVar8 * 0x10 + uVar11;\n                    uVar6 = 0;\n                    uVar5 = *(arg_8h + 4);\n                    uVar3 = *(arg_8h + 2);\n                    do {\n                        uVar12 = uVar5;\n                        uVar5 = uVar7;\n                        uVar6 = uVar6 != 0 | *arg_8h;\n                        *arg_8h = uVar3;\n                        uVar8 = uVar8 - 1;\n                        uVar7 = 0;\n                        uVar3 = uVar12;\n                    } while (uVar8 != 0);\n                    *(arg_8h + 6) = 0;\n                    *(arg_8h + 4) = uVar5;\n                    *(arg_8h + 2) = uVar12;\n                }\n                uVar11 = -(uVar11 & 0xffff) & 0xffff;\n                if (uVar11 != 0) {\n                    uVar4 = uVar11;\n                    uVar9 = 0x10 - uVar4;\n                    uVar6 = *arg_8h << (uVar9 & 0x1f) | uVar6 != 0;\n                    *arg_8h = *arg_8h >> (uVar4 & 0x1f) | *(arg_8h + 2) << (uVar9 & 0x1f);\n                    *(arg_8h + 2) = *(arg_8h + 2) >> (uVar4 & 0x1f) | *(arg_8h + 4) << (uVar9 & 0x1f);\n                    *(arg_8h + 4) = *(arg_8h + 4) >> (uVar4 & 0x1f) | *(arg_8h + 6) << (uVar9 & 0x1f);\n                    *(arg_8h + 6) = *(arg_8h + 6) >> (uVar4 & 0x1f);\n                }\n                *(arg_8h + 6) = *(arg_8h + 6) | uVar10;\n                if (((0x8000 < uVar6) || ((uVar6 == 0x8000 && ((*arg_8h & 1) != 0)))) &&\n                   (*arg_8h = *arg_8h + 1,  *arg_8h == 0)) {\n                    puVar1 = arg_8h + 2;\n                    *puVar1 = *puVar1 + 1;\n                    if (*puVar1 == 0) {\n                        puVar1 = arg_8h + 4;\n                        *puVar1 = *puVar1 + 1;\n                        if (*puVar1 == 0) {\n                            *(arg_8h + 6) = *(arg_8h + 6) + 1;\n                            return 0xffffffff;\n                        }\n                    }\n                }\n                if (*(arg_8h + 6) != uVar10) {\n                    return 0xffffffff;\n                }\n                if (*(arg_8h + 4) != 0) {\n                    return 0xffffffff;\n                }\n                if (*(arg_8h + 2) != 0) {\n                    return 0xffffffff;\n                }\n                if (*arg_8h != 0) {\n                    return 0xffffffff;\n                }\n            }\n            else {\n                *(arg_8h + 6) = uVar10;\n                *(arg_8h + 2) = 0;\n                *arg_8h = 0;\n            }\n            return 0;\n        }\n        dVar2 = *0x4b4b38;\n        if ((*(arg_8h + 6) & 0x8000) != 0) {\n            dVar2 = -*0x4b4b38;\n        }\n        *arg_8h = dVar2;\n    }\n    return 1;\n}\n",
        "token_count": 1412
    },
    "004522d0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_70h\n\nvoid __cdecl fcn.004522d0(double *arg_8h, uint32_t arg_ch, uint32_t *arg_10h)\n\n{\n    uint *puVar1;\n    float10 fVar2;\n    uint var_70h;\n    uint var_68h;\n    uint var_64h;\n    uint var_34h;\n    uint var_1ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b4f00 ^ &stack0xfffffffc;\n    if ((arg_ch == 0) || (*arg_8h == 0.0)) {\n        fcn.00451716(arg_8h, 3);\n    }\n    else {\n        if (arg_ch < 1) {\n            arg_ch = -arg_ch;\n            fcn.004517a1(&var_1ch, 3, 0x493cf8);\n        }\n        else {\n            fcn.004521e4(&var_1ch, 3);\n        }\n        while( true ) {\n            if ((arg_ch & 1) != 0) {\n                fcn.004520eb(arg_8h, 3, &var_1ch, 3, &var_64h);\n            }\n            arg_ch = arg_ch >> 1;\n            if (arg_ch == 0) break;\n            fcn.004517a1(&var_34h, 3, &var_1ch);\n            fcn.004520eb(&var_1ch, 3, &var_34h, 3, &var_64h);\n        }\n        fVar2 = fcn.00451716(arg_8h, 3);\n        if (((0 == fVar2) || (*0x4b4bc8 == fVar2)) || (-*0x4b4bc8 == fVar2)) {\n            puVar1 = fcn.0045c4f2();\n            *puVar1 = 0x22;\n            if (arg_10h != NULL) {\n                *arg_10h = *arg_10h | 1;\n            }\n        }\n    }\n    fcn.004529f8(arg_10h);\n    return;\n}\n",
        "token_count": 501
    },
    "00462057": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00462057(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t arg_8h_00;\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0045e910(0x4ac5e0, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar1 = fcn.0045c4be();\n        *puVar1 = 0;\n        puVar1 = fcn.0045c4f2();\n        *puVar1 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x4b98b8)) {\n            iVar3 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*((arg_8h_00 >> 5) * 4 + 0x4b9168) + 4 + iVar3) & 1) != 0) {\n                fcn.0046e7be(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*((arg_8h_00 >> 5) * 4 + 0x4b9168) + 4 + iVar3) & 1) == 0) {\n                    puVar1 = fcn.0045c4f2();\n                    *puVar1 = 9;\n                    puVar1 = fcn.0045c4be();\n                    *puVar1 = 0;\n                    uVar2 = 0xffffffff;\n                }\n                else {\n                    uVar2 = fcn.00462139(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                }\n                *(unaff_EBP + -0x1c) = uVar2;\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00462110();\n                goto code_r0x00462133;\n            }\n        }\n        puVar1 = fcn.0045c4be();\n        *puVar1 = 0;\n        puVar1 = fcn.0045c4f2();\n        *puVar1 = 9;\n        fcn.0045e4f8();\n    }\ncode_r0x00462133:\n    fcn.0045e955();\n    return;\n}\n",
        "token_count": 616
    },
    "00462f1f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00462f1f(uint arg_8h)\n\n{\n    uint32_t arg_8h_00;\n    uint *puVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0045e910(0x4ac640, 0x14);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar1 = fcn.0045c4f2();\n        *puVar1 = 9;\n        goto code_r0x00462fff;\n    }\n    if ((-1 < arg_8h_00) && (arg_8h_00 < *0x4b98b8)) {\n        *(unaff_EBP + -0x20) = arg_8h_00 >> 5;\n        iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n        if ((*(iVar4 + 4 + *((arg_8h_00 >> 5) * 4 + 0x4b9168)) & 1) != 0) {\n            fcn.0046e7be(arg_8h_00);\n            iVar5 = 0;\n            *(unaff_EBP + -4) = 0;\n            if ((*(iVar4 + 4 + *(*(unaff_EBP + -0x20) * 4 + 0x4b9168)) & 1) == 0) {\ncode_r0x00462fbd:\n                puVar1 = fcn.0045c4f2();\n                *puVar1 = 9;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n            }\n            else {\n                uVar2 = fcn.0046ea75(arg_8h_00);\n                iVar4 = (*_sym.imp.KERNEL32.dll_FlushFileBuffers)(uVar2);\n                if (iVar4 == 0) {\n                    iVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                }\n                *(unaff_EBP + -0x1c) = iVar5;\n                if (iVar5 != 0) {\n                    piVar3 = fcn.0045c4be();\n                    *piVar3 = iVar5;\n                    goto code_r0x00462fbd;\n                }\n            }\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.00462fe4();\n            goto code_r0x00462fff;\n        }\n    }\n    puVar1 = fcn.0045c4f2();\n    *puVar1 = 9;\n    fcn.0045e4f8();\ncode_r0x00462fff:\n    fcn.0045e955();\n    return;\n}\n",
        "token_count": 686
    },
    "00463005": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00463005(uint arg_8h)\n\n{\n    uint32_t arg_8h_00;\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0045e910(0x4ac660, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar1 = fcn.0045c4be();\n        *puVar1 = 0;\n        puVar1 = fcn.0045c4f2();\n        *puVar1 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x4b98b8)) {\n            iVar3 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*((arg_8h_00 >> 5) * 4 + 0x4b9168) + 4 + iVar3) & 1) != 0) {\n                fcn.0046e7be(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*((arg_8h_00 >> 5) * 4 + 0x4b9168) + 4 + iVar3) & 1) == 0) {\n                    puVar1 = fcn.0045c4f2();\n                    *puVar1 = 9;\n                    uVar2 = 0xffffffff;\n                }\n                else {\n                    uVar2 = fcn.004630cf(arg_8h_00);\n                }\n                *(unaff_EBP + -0x1c) = uVar2;\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.004630a6();\n                goto code_r0x004630c9;\n            }\n        }\n        puVar1 = fcn.0045c4be();\n        *puVar1 = 0;\n        puVar1 = fcn.0045c4f2();\n        *puVar1 = 9;\n        fcn.0045e4f8();\n    }\ncode_r0x004630c9:\n    fcn.0045e955();\n    return;\n}\n",
        "token_count": 563
    },
    "00465b22": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00465b22(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t arg_8h_00;\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0045e910(0x4ac6c0, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar1 = fcn.0045c4be();\n        *puVar1 = 0;\n        puVar1 = fcn.0045c4f2();\n        *puVar1 = 9;\n        goto code_r0x00465c24;\n    }\n    if ((arg_8h_00 < 0) || (*0x4b98b8 <= arg_8h_00)) {\ncode_r0x00465c09:\n        puVar1 = fcn.0045c4be();\n        *puVar1 = 0;\n        puVar1 = fcn.0045c4f2();\n        *puVar1 = 9;\n    }\n    else {\n        iVar3 = (arg_8h_00 & 0x1f) * 0x40;\n        if ((*(*((arg_8h_00 >> 5) * 4 + 0x4b9168) + 4 + iVar3) & 1) == 0) goto code_r0x00465c09;\n        if (*(unaff_EBP + 0x10) < 0x80000000) {\n            fcn.0046e7be(arg_8h_00);\n            *(unaff_EBP + -4) = 0;\n            if ((*(*((arg_8h_00 >> 5) * 4 + 0x4b9168) + 4 + iVar3) & 1) == 0) {\n                puVar1 = fcn.0045c4f2();\n                *puVar1 = 9;\n                puVar1 = fcn.0045c4be();\n                *puVar1 = 0;\n                uVar2 = 0xffffffff;\n            }\n            else {\n                uVar2 = fcn.00465c2a(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n            }\n            *(unaff_EBP + -0x1c) = uVar2;\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.00465c01();\n            goto code_r0x00465c24;\n        }\n        puVar1 = fcn.0045c4be();\n        *puVar1 = 0;\n        puVar1 = fcn.0045c4f2();\n        *puVar1 = 0x16;\n    }\n    fcn.0045e4f8();\ncode_r0x00465c24:\n    fcn.0045e955();\n    return;\n}\n",
        "token_count": 721
    },
    "004663b9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004663b9(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t arg_8h_00;\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0045e910(0x4ac6e0, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar1 = fcn.0045c4be();\n        *puVar1 = 0;\n        puVar1 = fcn.0045c4f2();\n        *puVar1 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x4b98b8)) {\n            iVar3 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*((arg_8h_00 >> 5) * 4 + 0x4b9168) + 4 + iVar3) & 1) != 0) {\n                fcn.0046e7be(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*((arg_8h_00 >> 5) * 4 + 0x4b9168) + 4 + iVar3) & 1) == 0) {\n                    puVar1 = fcn.0045c4f2();\n                    *puVar1 = 9;\n                    puVar1 = fcn.0045c4be();\n                    *puVar1 = 0;\n                    uVar2 = 0xffffffff;\n                }\n                else {\n                    uVar2 = fcn.0046649b(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                }\n                *(unaff_EBP + -0x1c) = uVar2;\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00466472();\n                goto code_r0x00466495;\n            }\n        }\n        puVar1 = fcn.0045c4be();\n        *puVar1 = 0;\n        puVar1 = fcn.0045c4f2();\n        *puVar1 = 9;\n        fcn.0045e4f8();\n    }\ncode_r0x00466495:\n    fcn.0045e955();\n    return;\n}\n",
        "token_count": 618
    },
    "0046c17e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0046c17e(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    code *pcVar5;\n    code *pcVar6;\n    int32_t iVar7;\n    uint arg_8h_00;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    code *var_18h;\n    code *var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    pcVar6 = _sym.imp.KERNEL32.dll_EncodePointer;\n    var_4h = *0x4b4f00 ^ &stack0xfffffffc;\n    var_1ch = arg_8h;\n    iVar7 = 0;\n    arg_8h_00 = 0;\n    var_20h = arg_ch;\n    pcVar1 = (*_sym.imp.KERNEL32.dll_EncodePointer)();\n    var_18h = pcVar1;\n    var_14h = fcn.0045cf32();\n    if (*0x4b9584 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(L\"USER32.DLL\", 0, 0x800);\n        if (((iVar2 == 0) &&\n            ((iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar2 != 0x57 ||\n             (iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(L\"USER32.DLL\"),  iVar2 == 0)))) ||\n           (iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x49c07c),  iVar3 == 0)) goto code_r0x0046c351;\n        *0x4b9584 = (*pcVar6)(iVar3);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetActiveWindow\");\n        *0x4b9588 = (*pcVar6)(uVar4);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetLastActivePopup\");\n        *0x4b958c = (*pcVar6)(uVar4);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetUserObjectInformationW\");\n        *0x4b9594 = (*pcVar6)(uVar4);\n        pcVar1 = var_18h;\n        if (*0x4b9594 != NULL) {\n            uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetProcessWindowStation\");\n            *0x4b9590 = (*pcVar6)(uVar4);\n            pcVar1 = var_18h;\n        }\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    if (iVar2 == 0) {\n        if (var_14h != NULL) {\n            (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x4b9584);\n            goto code_r0x0046c351;\n        }\n    }\n    else {\n        if (var_1ch != 0) {\n            (*_sym.imp.KERNEL32.dll_OutputDebugStringW)(var_1ch);\n        }\n        if (var_14h != NULL) goto code_r0x0046c351;\n    }\n    pcVar6 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if ((*0x4b9590 == pcVar1) || (*0x4b9594 == pcVar1)) {\ncode_r0x0046c307:\n        if ((((*0x4b9588 != pcVar1) && (pcVar5 = (*pcVar6)(*0x4b9588),  pcVar5 != NULL)) &&\n            (iVar7 = (*pcVar5)(),  iVar7 != 0)) &&\n           ((*0x4b958c != pcVar1 && (pcVar1 = (*pcVar6)(*0x4b958c),  pcVar1 != NULL)))) {\n            iVar7 = (*pcVar1)(iVar7);\n        }\n    }\n    else {\n        var_14h = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x4b9590);\n        var_18h = (*pcVar6)(*0x4b9594);\n        if (((var_14h == NULL) || (var_18h == NULL)) ||\n           (((iVar2 = (*var_14h)(),  iVar2 != 0 && (iVar2 = (*var_18h)(iVar2, 1, &var_10h, 0xc, &var_24h),  iVar2 != 0))\n            && ((var_8h & 1) != 0)))) goto code_r0x0046c307;\n        arg_10h = arg_10h | 0x200000;\n    }\n    pcVar6 = (*pcVar6)(*0x4b9584);\n    if (pcVar6 != NULL) {\n        (*pcVar6)(iVar7, var_1ch, var_20h, arg_10h);\n    }\ncode_r0x0046c351:\n    fcn.004529f8(arg_8h_00);\n    return;\n}\n",
        "token_count": 1209
    },
    "004239f0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498",
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004239f0(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t in_ECX;\n    uint32_t uVar1;\n    uint32_t *in_EDX;\n    uint32_t uVar2;\n    \n    uVar2 = arg_8h;\n    if (arg_8h != 0) {\n        do {\n            uVar2 = arg_8h;\n            if ((in_EDX & 3) == 0) break;\n            in_ECX = in_ECX >> 8 ^ *(arg_ch + ((*in_EDX ^ in_ECX) & 0xff) * 4);\n            in_EDX = in_EDX + 1;\n            arg_8h = arg_8h - 1;\n            uVar2 = arg_8h;\n        } while (arg_8h != 0);\n    }\n    if (3 < uVar2) {\n        arg_8h = uVar2 >> 2;\n        do {\n            uVar1 = in_ECX ^ *in_EDX;\n            uVar2 = uVar2 - 4;\n            in_EDX = in_EDX + 1;\n            in_ECX = *(arg_ch + 0x800 + (uVar1 >> 8 & 0xff) * 4) ^ *(arg_ch + 0x400 + (uVar1 >> 0x10 & 0xff) * 4) ^\n                     *(arg_ch + 0xc00 + (uVar1 & 0xff) * 4) ^ *(arg_ch + (uVar1 >> 0x18) * 4);\n            arg_8h = arg_8h - 1;\n        } while (arg_8h != 0);\n    }\n    for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n        in_ECX = in_ECX >> 8 ^ *(arg_ch + ((*in_EDX ^ in_ECX) & 0xff) * 4);\n        in_EDX = in_EDX + 1;\n    }\n    return in_ECX;\n}\n",
        "token_count": 467
    },
    "004241b0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_224h\n\nvoid __cdecl\nfcn.004241b0(uchar *arg_8h, uint32_t arg_ch, uchar *arg_10h, uint32_t arg_14h, uint8_t *arg_18h, int32_t arg_1ch, \n            int32_t arg_20h, int32_t arg_24h)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    uint8_t *puVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uchar *puVar6;\n    int32_t in_EDX;\n    uint *puVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint var_224h;\n    uint var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint32_t var_214h;\n    int32_t var_210h;\n    uint var_208h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b4f00 ^ &stack0xfffffffc;\n    puVar7 = &var_208h;\n    for (iVar4 = 0x81; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar7 = 0x4000400;\n        puVar7 = puVar7 + 1;\n    }\n    puVar3 = arg_18h + arg_1ch;\n    iVar9 = 0;\n    uVar5 = 0;\n    uVar10 = 0;\n    var_210h = 0;\n    var_214h = 0xffffffff;\n    iVar4 = 0;\n    do {\n        if (arg_18h == puVar3) goto code_r0x00424470;\n        uVar1 = *arg_18h;\n        arg_18h = arg_18h + 1;\n        iVar4 = iVar4 + 1;\n        uVar10 = uVar10 << 8 | uVar1;\n    } while (iVar4 < 5);\n    if (arg_24h == 0) {\n        fcn.004529f8(in_EDX);\n        return;\n    }\n    while( true ) {\n        iVar4 = iVar9;\n        uVar8 = in_EDX - var_210h;\n        if (arg_24h - iVar9 < in_EDX - var_210h) {\n            uVar8 = arg_24h - iVar9;\n        }\n        while( true ) {\n            if (uVar8 == 0) goto code_r0x004242be;\n            iVar9 = iVar4 + 1;\n            uVar1 = *(in_ECX + var_210h);\n            *(arg_20h + -1 + iVar9) = uVar1;\n            if (((uVar1 & 0xfe) == 0xe8) || ((uVar5 == '\\x0f' && ((uVar1 & 0xf0) == 0x80)))) break;\n            var_210h = var_210h + 1;\n            uVar5 = uVar1;\n            iVar4 = iVar9;\n            uVar8 = uVar8 - 1;\n        }\n        if (iVar9 == arg_24h) break;\n        var_210h = var_210h + 1;\n        uVar1 = *(in_ECX + -1 + var_210h);\n        if (uVar1 == 0xe8) {\n            puVar7 = &var_208h + uVar5 * 2;\n        }\n        else {\n            puVar7 = &var_8h;\n            if (uVar1 != 0xe9) {\n                puVar7 = &var_8h + 2;\n            }\n        }\n        uVar2 = *puVar7;\n        uVar5 = (var_214h >> 0xb) * uVar2;\n        if (uVar10 < uVar5) {\n            *puVar7 = (0x800 - uVar2 >> 5) + uVar2;\n            var_214h = uVar5;\n            if (uVar5 < 0x1000000) {\n                if (arg_18h == puVar3) goto code_r0x00424470;\n                var_214h = uVar5 * 0x100;\n                uVar10 = uVar10 << 8 | *arg_18h;\n                arg_18h = arg_18h + 1;\n            }\n            uVar5 = uVar1;\n        }\n        else {\n            var_214h = var_214h - uVar5;\n            uVar10 = uVar10 - uVar5;\n            *puVar7 = uVar2 - (uVar2 >> 5);\n            if (var_214h < 0x1000000) {\n                if (arg_18h == puVar3) {\ncode_r0x00424470:\n                    fcn.004529f8(in_EDX);\n                    return;\n                }\n                var_214h = var_214h * 0x100;\n                uVar10 = uVar10 * 0x100 | *arg_18h;\n                arg_18h = arg_18h + 1;\n            }\n            if (uVar1 == 0xe8) {\n                if (arg_ch < 4) goto code_r0x00424470;\n                arg_ch = arg_ch - 4;\n                puVar6 = arg_8h;\n                arg_8h = arg_8h + 4;\n            }\n            else {\n                if (arg_14h < 4) goto code_r0x00424470;\n                arg_14h = arg_14h - 4;\n                puVar6 = arg_10h;\n                arg_10h = arg_10h + 4;\n            }\n            uVar8 = (CONCAT31(CONCAT21(CONCAT11(*puVar6, puVar6[1]), puVar6[2]), puVar6[3]) - iVar9) - 4;\n            *(arg_20h + iVar9) = uVar8;\n            if (iVar4 + 2 == arg_24h) break;\n            *(arg_20h + iVar4 + 2) = uVar8 >> 8;\n            if (iVar4 + 3 == arg_24h) break;\n            *(arg_20h + iVar4 + 3) = uVar8 >> 0x10;\n            if (iVar4 + 4 == arg_24h) break;\n            uVar5 = uVar8 >> 0x18;\n            *(arg_20h + iVar4 + 4) = uVar8 >> 0x18;\n            iVar9 = iVar4 + 5;\n        }\n    }\ncode_r0x004242be:\n    fcn.004529f8(in_EDX);\n    return;\n}\n",
        "token_count": 1548
    },
    "00425c10": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00425c10(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    if (param_2 < 4) {\n        return 0;\n    }\n    uVar1 = 0;\n    do {\n        if (*(uVar1 + 3 + param_1) == -0x15) {\n            uVar2 = (CONCAT21(CONCAT11(*(uVar1 + 2 + param_1), *(uVar1 + 1 + param_1)), *(uVar1 + param_1)) * 4 - uVar1)\n                    - 8 >> 2;\n            *(uVar1 + 2 + param_1) = uVar2 >> 0x10;\n            *(uVar1 + 1 + param_1) = uVar2 >> 8;\n            *(uVar1 + param_1) = uVar2;\n        }\n        uVar1 = uVar1 + 4;\n    } while (uVar1 <= param_2 - 4);\n    return uVar1;\n}\n",
        "token_count": 251
    },
    "0042fc20": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0042fc20(uint32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uchar var_8h;\n    uchar var_7h;\n    uchar var_6h;\n    uchar var_5h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b4f00 ^ &stack0xfffffffc;\n    uVar3 = *param_1;\n    iVar1 = param_1[1] << 3;\n    var_ch._3_1_ = uVar3 >> 0x1d | iVar1;\n    var_ch._0_1_ = iVar1 >> 0x18;\n    var_ch._1_1_ = iVar1 >> 0x10;\n    iVar2 = uVar3 * 8;\n    var_ch._2_1_ = iVar1 >> 8;\n    var_8h = iVar2 >> 0x18;\n    var_7h = iVar2 >> 0x10;\n    var_6h = iVar2 >> 8;\n    var_5h = iVar2;\n    iVar2 = 0x38;\n    if (0x37 < (uVar3 & 0x3f)) {\n        iVar2 = 0x78;\n    }\n    iVar2 = iVar2 - (uVar3 & 0x3f);\n    if (iVar2 != 0) {\n        fcn.0042fb70(iVar2);\n    }\n    uVar7 = 8;\n    uVar4 = *param_1 & 0x3f;\n    uVar3 = *param_1 + 8;\n    uVar5 = -uVar4 + 0x40;\n    puVar6 = &var_ch;\n    *param_1 = uVar3;\n    if (uVar3 < 8) {\n        param_1[1] = param_1[1] + 1;\n    }\n    if ((uVar4 != 0) && (uVar5 < 9)) {\n        fcn.00452a10(param_1 + uVar4 + 0x30, &var_ch, uVar5);\n        fcn.0042fdf0();\n        uVar7 = 8 - uVar5;\n        puVar6 = &stack0x00000030 + -uVar4;\n        var_14h = 0;\n        if (0x3f < uVar7) {\n            var_10h = uVar7 >> 6;\n            do {\n                fcn.0042fdf0();\n                uVar7 = uVar7 - 0x40;\n                puVar6 = puVar6 + 0x10;\n                var_10h = var_10h - 1;\n            } while (var_10h != 0);\n        }\n        uVar4 = 0;\n        if (uVar7 == 0) goto code_r0x0042fd3b;\n    }\n    fcn.00452a10(param_1 + uVar4 + 0x30, puVar6, uVar7);\ncode_r0x0042fd3b:\n    uVar3 = param_1[2];\n    *(param_1 + 7) = uVar3 >> 0x18;\n    *(param_1 + 0x1d) = uVar3 >> 0x10;\n    *(param_1 + 0x1f) = *(param_1 + 2);\n    *(param_1 + 0x1e) = uVar3 >> 8;\n    uVar3 = param_1[3];\n    *(param_1 + 8) = uVar3 >> 0x18;\n    *(param_1 + 0x21) = uVar3 >> 0x10;\n    *(param_1 + 0x23) = *(param_1 + 3);\n    *(param_1 + 0x22) = uVar3 >> 8;\n    uVar3 = param_1[4];\n    *(param_1 + 9) = uVar3 >> 0x18;\n    *(param_1 + 0x25) = uVar3 >> 0x10;\n    *(param_1 + 0x27) = *(param_1 + 4);\n    *(param_1 + 0x26) = uVar3 >> 8;\n    uVar3 = param_1[5];\n    *(param_1 + 10) = uVar3 >> 0x18;\n    *(param_1 + 0x29) = uVar3 >> 0x10;\n    *(param_1 + 0x2a) = uVar3 >> 8;\n    uVar3 = param_1[6];\n    *(param_1 + 0x2b) = *(param_1 + 5);\n    *(param_1 + 0xb) = uVar3 >> 0x18;\n    *(param_1 + 0x2d) = uVar3 >> 0x10;\n    *(param_1 + 0x2e) = uVar3 >> 8;\n    *(param_1 + 0x2f) = *(param_1 + 6);\n    fcn.004529f8(var_14h);\n    return;\n}\n",
        "token_count": 1254
    },
    "00435ffc": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00435ffc(int32_t *param_1, uint32_t param_2)\n\n{\n    param_1[3] = param_2 >> 0x10 & 0x1f;\n    param_1[5] = (param_2 >> 0x19) + 0x7bc;\n    param_1[2] = param_2 >> 0xb & 0x1f;\n    param_1[4] = (param_2 >> 0x15 & 0xf) - 1;\n    param_1[1] = param_2 >> 5 & 0x3f;\n    *param_1 = (param_2 & 0x1f) * 2;\n    return;\n}\n",
        "token_count": 168
    },
    "00438c99": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00438c99(uint32_t arg_8h, uint8_t *arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    int32_t iVar16;\n    int32_t iVar17;\n    int32_t iVar18;\n    uint32_t uVar19;\n    \n    uVar19 = arg_8h >> 0x10;\n    uVar3 = arg_8h & 0xffff;\n    if (arg_10h == 1) {\n        uVar3 = uVar3 + *arg_ch;\n        if (0xfff0 < uVar3) {\n            uVar3 = uVar3 - 0xfff1;\n        }\n        uVar19 = uVar19 + uVar3;\n        if (0xfff0 < uVar19) {\n            uVar19 = uVar19 - 0xfff1;\n        }\n    }\n    else {\n        if (arg_ch == NULL) {\n            return 1;\n        }\n        if (arg_10h < 0x10) {\n            for (; arg_10h != 0; arg_10h = arg_10h - 1) {\n                uVar3 = uVar3 + *arg_ch;\n                arg_ch = arg_ch + 1;\n                uVar19 = uVar19 + uVar3;\n            }\n            if (0xfff0 < uVar3) {\n                uVar3 = uVar3 - 0xfff1;\n            }\n            uVar19 = uVar19 % 0xfff1;\n        }\n        else {\n            if (0x15af < arg_10h) {\n                arg_8h = arg_10h / 0x15b0;\n                do {\n                    arg_10h = arg_10h - 0x15b0;\n                    iVar1 = 0x15b;\n                    do {\n                        iVar4 = uVar3 + *arg_ch;\n                        iVar5 = iVar4 + arg_ch[1];\n                        iVar6 = iVar5 + arg_ch[2];\n                        iVar7 = iVar6 + arg_ch[3];\n                        iVar8 = iVar7 + arg_ch[4];\n                        iVar9 = iVar8 + arg_ch[5];\n                        iVar10 = iVar9 + arg_ch[6];\n                        iVar11 = iVar10 + arg_ch[7];\n                        iVar12 = iVar11 + arg_ch[8];\n                        iVar13 = iVar12 + arg_ch[9];\n                        iVar14 = iVar13 + arg_ch[10];\n                        iVar15 = iVar14 + arg_ch[0xb];\n                        iVar16 = iVar15 + arg_ch[0xc];\n                        iVar17 = iVar16 + arg_ch[0xd];\n                        iVar18 = iVar17 + arg_ch[0xe];\n                        uVar3 = iVar18 + arg_ch[0xf];\n                        uVar19 = uVar19 + iVar4 + iVar5 + iVar6 + iVar7 + iVar8 + iVar9 + iVar10 + iVar11 + iVar12 +\n                                 iVar13 + iVar14 + iVar15 + iVar16 + iVar17 + iVar18 + uVar3;\n                        arg_ch = arg_ch + 0x10;\n                        iVar1 = iVar1 + -1;\n                    } while (iVar1 != 0);\n                    uVar3 = uVar3 % 0xfff1;\n                    uVar19 = uVar19 % 0xfff1;\n                    arg_8h = arg_8h - 1;\n                } while (arg_8h != 0);\n            }\n            if (arg_10h != 0) {\n                if (0xf < arg_10h) {\n                    uVar2 = arg_10h >> 4;\n                    do {\n                        iVar1 = uVar3 + *arg_ch;\n                        iVar4 = iVar1 + arg_ch[1];\n                        iVar5 = iVar4 + arg_ch[2];\n                        iVar6 = iVar5 + arg_ch[3];\n                        iVar7 = iVar6 + arg_ch[4];\n                        iVar8 = iVar7 + arg_ch[5];\n                        iVar9 = iVar8 + arg_ch[6];\n                        iVar10 = iVar9 + arg_ch[7];\n                        iVar11 = iVar10 + arg_ch[8];\n                        iVar12 = iVar11 + arg_ch[9];\n                        iVar13 = iVar12 + arg_ch[10];\n                        iVar14 = iVar13 + arg_ch[0xb];\n                        iVar15 = iVar14 + arg_ch[0xc];\n                        iVar16 = iVar15 + arg_ch[0xd];\n                        iVar17 = iVar16 + arg_ch[0xe];\n                        uVar3 = iVar17 + arg_ch[0xf];\n                        arg_10h = arg_10h - 0x10;\n                        uVar19 = uVar19 + iVar1 + iVar4 + iVar5 + iVar6 + iVar7 + iVar8 + iVar9 + iVar10 + iVar11 +\n                                 iVar12 + iVar13 + iVar14 + iVar15 + iVar16 + iVar17 + uVar3;\n                        arg_ch = arg_ch + 0x10;\n                        uVar2 = uVar2 - 1;\n                    } while (uVar2 != 0);\n                }\n                for (; arg_10h != 0; arg_10h = arg_10h - 1) {\n                    uVar3 = uVar3 + *arg_ch;\n                    arg_ch = arg_ch + 1;\n                    uVar19 = uVar19 + uVar3;\n                }\n                uVar3 = uVar3 % 0xfff1;\n                uVar19 = uVar19 % 0xfff1;\n            }\n        }\n    }\n    return uVar19 << 0x10 | uVar3;\n}\n",
        "token_count": 1316
    },
    "0043d620": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint fcn.0043d620(int32_t param_1, int32_t param_2, uchar *param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    uVar1 = 0xb704ce;\n    if ((param_1 != 0) && (param_3 != NULL)) {\n        iVar2 = 0;\n        if (0 < param_2) {\n            do {\n                uVar1 = uVar1 ^ *(iVar2 + param_1) << 0x10;\n                iVar3 = 8;\n                do {\n                    uVar1 = uVar1 * 2;\n                    if ((uVar1 & 0x800000) != 0) {\n                        uVar1 = uVar1 ^ 0x864cfb;\n                    }\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n                iVar2 = iVar2 + 1;\n            } while (iVar2 < param_2);\n        }\n        uVar1 = uVar1 & 0x7fffff;\n        *param_3 = uVar1;\n        param_3[2] = uVar1 >> 0x10;\n        param_3[1] = uVar1 >> 8;\n        return 0;\n    }\n    return 0xe0010001;\n}\n",
        "token_count": 302
    },
    "0043eba0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0043eba0(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uStack4;\n    \n    iVar1 = fcn.00448980();\n    if (iVar1 != 0) {\n        uStack4 = CONCAT13(param_1, CONCAT12(param_1 >> 8, CONCAT11(param_1 >> 0x10, param_1 >> 0x18)));\n        param_1 = uStack4;\n    }\n    return param_1;\n}\n",
        "token_count": 118
    },
    "0043f3a0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.0043f3a0(int32_t *param_1, uint32_t *param_2, uint32_t *param_3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uchar uStack26;\n    uchar uStack25;\n    uchar uStack22;\n    uchar uStack21;\n    uchar uStack18;\n    uchar uStack17;\n    \n    iVar1 = *param_1;\n    uVar5 = param_2[2] ^ param_1[iVar1 * 4 + 0x1b];\n    uVar4 = *param_2 ^ param_1[iVar1 * 4 + 0x19];\n    uVar2 = param_2[1] ^ param_1[iVar1 * 4 + 0x1a];\n    uVar8 = param_2[3] ^ param_1[(iVar1 + 7) * 4];\n    uVar6 = param_1[(uVar5 >> 0x18) + 0x88b] ^ param_1[(uVar8 >> 0x10 & 0xff) + 0x78b] ^\n            param_1[(uVar4 >> 8 & 0xff) + 0x68b] ^ param_1[(uVar2 & 0xff) + 0x58b] ^ param_1[iVar1 * 4 + 0x56];\n    uVar3 = param_1[(uVar2 >> 0x18) + 0x88b] ^ param_1[(uVar5 >> 0x10 & 0xff) + 0x78b] ^\n            param_1[(uVar8 >> 8 & 0xff) + 0x68b] ^ param_1[(uVar4 & 0xff) + 0x58b] ^ param_1[iVar1 * 4 + 0x55];\n    uVar7 = param_1[(uVar8 >> 0x18) + 0x88b] ^ param_1[(uVar4 >> 0x10 & 0xff) + 0x78b] ^\n            param_1[(uVar2 >> 8 & 0xff) + 0x68b] ^ param_1[(uVar5 & 0xff) + 0x58b] ^ param_1[iVar1 * 4 + 0x57];\n    uVar2 = param_1[(uVar4 >> 0x18) + 0x88b] ^ param_1[(uVar2 >> 0x10 & 0xff) + 0x78b] ^\n            param_1[(uVar5 >> 8 & 0xff) + 0x68b] ^ param_1[(uVar8 & 0xff) + 0x58b] ^ param_1[iVar1 * 4 + 0x58];\n    uVar4 = param_1[(uVar6 >> 0x18) + 0x88b] ^ param_1[(uVar7 >> 0x10 & 0xff) + 0x78b] ^\n            param_1[(uVar2 >> 8 & 0xff) + 0x68b] ^ param_1[(uVar3 & 0xff) + 0x58b] ^ param_1[iVar1 * 4 + 0x51];\n    uVar5 = param_1[(uVar7 >> 0x18) + 0x88b] ^ param_1[(uVar2 >> 0x10 & 0xff) + 0x78b] ^\n            param_1[(uVar3 >> 8 & 0xff) + 0x68b] ^ param_1[(uVar6 & 0xff) + 0x58b] ^ param_1[iVar1 * 4 + 0x52];\n    uVar8 = param_1[(uVar2 >> 0x18) + 0x88b] ^ param_1[(uVar3 >> 0x10 & 0xff) + 0x78b] ^\n            param_1[(uVar6 >> 8 & 0xff) + 0x68b] ^ param_1[(uVar7 & 0xff) + 0x58b] ^ param_1[iVar1 * 4 + 0x53];\n    uVar3 = param_1[(uVar3 >> 0x18) + 0x88b] ^ param_1[(uVar6 >> 0x10 & 0xff) + 0x78b] ^\n            param_1[(uVar7 >> 8 & 0xff) + 0x68b] ^ param_1[(uVar2 & 0xff) + 0x58b] ^ param_1[iVar1 * 4 + 0x54];\n    uVar2 = param_1[(uVar5 >> 0x18) + 0x88b] ^ param_1[(uVar8 >> 0x10 & 0xff) + 0x78b] ^\n            param_1[(uVar3 >> 8 & 0xff) + 0x68b] ^ param_1[(uVar4 & 0xff) + 0x58b] ^ param_1[iVar1 * 4 + 0x4d];\n    uVar6 = param_1[(uVar8 >> 0x18) + 0x88b] ^ param_1[(uVar3 >> 0x10 & 0xff) + 0x78b] ^\n            param_1[(uVar4 >> 8 & 0xff) + 0x68b] ^ param_1[(uVar5 & 0xff) + 0x58b] ^ param_1[iVar1 * 4 + 0x4e];\n    uVar7 = param_1[(uVar3 >> 0x18) + 0x88b] ^ param_1[(uVar4 >> 0x10 & 0xff) + 0x78b] ^\n            param_1[(uVar5 >> 8 & 0xff) + 0x68b] ^ param_1[(uVar8 & 0xff) + 0x58b] ^ param_1[iVar1 * 4 + 0x4f];\n    uVar3 = param_1[(uVar4 >> 0x18) + 0x88b] ^ param_1[(uVar5 >> 0x10 & 0xff) + 0x78b] ^\n            param_1[(uVar8 >> 8 & 0xff) + 0x68b] ^ param_1[(uVar3 & 0xff) + 0x58b] ^ param_1[iVar1 * 4 + 0x50];\n    uVar4 = param_1[(uVar6 >> 0x18) + 0x88b] ^ param_1[(uVar7 >> 0x10 & 0xff) + 0x78b] ^\n            param_1[(uVar3 >> 8 & 0xff) + 0x68b] ^ param_1[(uVar2 & 0xff) + 0x58b] ^ param_1[iVar1 * 4 + 0x49];\n    uVar5 = param_1[(uVar7 >> 0x18) + 0x88b] ^ param_1[(uVar3 >> 0x10 & 0xff) + 0x78b] ^\n            param_1[(uVar2 >> 8 & 0xff) + 0x68b] ^ param_1[(uVar6 & 0xff) + 0x58b] ^ param_1[iVar1 * 4 + 0x4a];\n    uVar8 = param_1[(uVar3 >> 0x18) + 0x88b] ^ param_1[(uVar2 >> 0x10 & 0xff) + 0x78b] ^\n            param_1[(uVar6 >> 8 & 0xff) + 0x68b] ^ param_1[(uVar7 & 0xff) + 0x58b] ^ param_1[iVar1 * 4 + 0x4b];\n    uVar3 = param_1[(uVar2 >> 0x18) + 0x88b] ^ param_1[(uVar6 >> 0x10 & 0xff) + 0x78b] ^\n            param_1[(uVar7 >> 8 & 0xff) + 0x68b] ^ param_1[(uVar3 & 0xff) + 0x58b] ^ param_1[iVar1 * 4 + 0x4c];\n    uVar2 = param_1[(uVar5 >> 0x18) + 0x88b] ^ param_1[(uVar8 >> 0x10 & 0xff) + 0x78b] ^\n            param_1[(uVar3 >> 8 & 0xff) + 0x68b] ^ param_1[(uVar4 & 0xff) + 0x58b] ^ param_1[iVar1 * 4 + 0x45];\n    uVar6 = param_1[(uVar8 >> 0x18) + 0x88b] ^ param_1[(uVar3 >> 0x10 & 0xff) + 0x78b] ^\n            param_1[(uVar4 >> 8 & 0xff) + 0x68b] ^ param_1[(uVar5 & 0xff) + 0x58b] ^ param_1[iVar1 * 4 + 0x46];\n    uVar7 = param_1[(uVar3 >> 0x18) + 0x88b] ^ param_1[(uVar4 >> 0x10 & 0xff) + 0x78b] ^\n            param_1[(uVar5 >> 8 & 0xff) + 0x68b] ^ param_1[(uVar8 & 0xff) + 0x58b] ^ param_1[iVar1 * 4 + 0x47];\n    uVar3 = param_1[(uVar4 >> 0x18) + 0x88b] ^ param_1[(uVar5 >> 0x10 & 0xff) + 0x78b] ^\n            param_1[(uVar8 >> 8 & 0xff) + 0x68b] ^ param_1[(uVar3 & 0xff) + 0x58b] ^ param_1[iVar1 * 4 + 0x48];\n    uVar4 = param_1[(uVar6 >> 0x18) + 0x88b] ^ param_1[(uVar7 >> 0x10 & 0xff) + 0x78b] ^\n            param_1[(uVar3 >> 8 & 0xff) + 0x68b] ^ param_1[(uVar2 & 0xff) + 0x58b] ^ param_1[iVar1 * 4 + 0x41];\n    uVar5 = param_1[(uVar7 >> 0x18) + 0x88b] ^ param_1[(uVar3 >> 0x10 & 0xff) + 0x78b] ^\n            param_1[(uVar2 >> 8 & 0xff) + 0x68b] ^ param_1[(uVar6 & 0xff) + 0x58b] ^ param_1[iVar1 * 4 + 0x42];\n    uVar8 = param_1[(uVar3 >> 0x18) + 0x88b] ^ param_1[(uVar2 >> 0x10 & 0xff) + 0x78b] ^\n            param_1[(uVar6 >> 8 & 0xff) + 0x68b] ^ param_1[(uVar7 & 0xff) + 0x58b] ^ param_1[iVar1 * 4 + 0x43];\n    uVar3 = param_1[(uVar2 >> 0x18) + 0x88b] ^ param_1[(uVar6 >> 0x10 & 0xff) + 0x78b] ^\n            param_1[(uVar7 >> 8 & 0xff) + 0x68b] ^ param_1[(uVar3 & 0xff) + 0x58b] ^ param_1[iVar1 * 4 + 0x44];\n    uVar2 = param_1[(uVar5 >> 0x18) + 0x88b] ^ param_1[(uVar8 >> 0x10 & 0xff) + 0x78b] ^\n            param_1[(uVar3 >> 8 & 0xff) + 0x68b] ^ param_1[(uVar4 & 0xff) + 0x58b] ^ param_1[iVar1 * 4 + 0x3d];\n    uVar6 = param_1[(uVar8 >> 0x18) + 0x88b] ^ param_1[(uVar3 >> 0x10 & 0xff) + 0x78b] ^\n            param_1[(uVar4 >> 8 & 0xff) + 0x68b] ^ param_1[(uVar5 & 0xff) + 0x58b] ^ param_1[iVar1 * 4 + 0x3e];\n    uVar7 = param_1[(uVar3 >> 0x18) + 0x88b] ^ param_1[(uVar4 >> 0x10 & 0xff) + 0x78b] ^\n            param_1[(uVar5 >> 8 & 0xff) + 0x68b] ^ param_1[(uVar8 & 0xff) + 0x58b] ^ param_1[iVar1 * 4 + 0x3f];\n    uVar3 = param_1[(uVar4 >> 0x18) + 0x88b] ^ param_1[(uVar5 >> 0x10 & 0xff) + 0x78b] ^\n            param_1[(uVar8 >> 8 & 0xff) + 0x68b] ^ param_1[(uVar3 & 0xff) + 0x58b] ^ param_1[iVar1 * 4 + 0x40];\n    uVar4 = param_1[(uVar6 >> 0x18) + 0x88b] ^ param_1[(uVar7 >> 0x10 & 0xff) + 0x78b] ^\n            param_1[(uVar3 >> 8 & 0xff) + 0x68b] ^ param_1[(uVar2 & 0xff) + 0x58b] ^ param_1[iVar1 * 4 + 0x39];\n    uVar5 = param_1[(uVar7 >> 0x18) + 0x88b] ^ param_1[(uVar3 >> 0x10 & 0xff) + 0x78b] ^\n            param_1[(uVar2 >> 8 & 0xff) + 0x68b] ^ param_1[(uVar6 & 0xff) + 0x58b] ^ param_1[iVar1 * 4 + 0x3a];\n    uVar8 = param_1[(uVar3 >> 0x18) + 0x88b] ^ param_1[(uVar2 >> 0x10 & 0xff) + 0x78b] ^\n            param_1[(uVar6 >> 8 & 0xff) + 0x68b] ^ param_1[(uVar7 & 0xff) + 0x58b] ^ param_1[iVar1 * 4 + 0x3b];\n    uVar3 = param_1[(uVar2 >> 0x18) + 0x88b] ^ param_1[(uVar6 >> 0x10 & 0xff) + 0x78b] ^\n            param_1[(uVar7 >> 8 & 0xff) + 0x68b] ^ param_1[(uVar3 & 0xff) + 0x58b] ^ param_1[iVar1 * 4 + 0x3c];\n    uVar6 = param_1[(uVar8 >> 0x18) + 0x88b] ^ param_1[(uVar3 >> 0x10 & 0xff) + 0x78b] ^\n            param_1[(uVar4 >> 8 & 0xff) + 0x68b] ^ param_1[(uVar5 & 0xff) + 0x58b] ^ param_1[iVar1 * 4 + 0x36];\n    uVar7 = param_1[(uVar3 >> 0x18) + 0x88b] ^ param_1[(uVar4 >> 0x10 & 0xff) + 0x78b] ^\n            param_1[(uVar5 >> 8 & 0xff) + 0x68b] ^ param_1[(uVar8 & 0xff) + 0x58b] ^ param_1[iVar1 * 4 + 0x37];\n    uVar2 = param_1[(uVar5 >> 0x18) + 0x88b] ^ param_1[(uVar8 >> 0x10 & 0xff) + 0x78b] ^\n            param_1[(uVar3 >> 8 & 0xff) + 0x68b] ^ param_1[(uVar4 & 0xff) + 0x58b] ^ param_1[iVar1 * 4 + 0x35];\n    uVar4 = param_1[(uVar4 >> 0x18) + 0x88b] ^ param_1[(uVar5 >> 0x10 & 0xff) + 0x78b] ^\n            param_1[(uVar8 >> 8 & 0xff) + 0x68b] ^ param_1[(uVar3 & 0xff) + 0x58b] ^ param_1[iVar1 * 4 + 0x38];\n    uVar5 = *((uVar4 >> 0x10 & 0xff) + 0x504 + param_1) << 0x10 ^ *((uVar7 >> 0x18) + 0x504 + param_1) << 0x18 ^\n            *((uVar2 >> 8 & 0xff) + 0x504 + param_1) << 8 ^ *((uVar6 & 0xff) + 0x504 + param_1) ^\n            param_1[iVar1 * 4 + 0x32];\n    uVar8 = *((uVar4 >> 0x18) + 0x504 + param_1) << 0x18 ^ *((uVar6 >> 8 & 0xff) + 0x504 + param_1) << 8 ^\n            *((uVar2 >> 0x10 & 0xff) + 0x504 + param_1) << 0x10 ^ *((uVar7 & 0xff) + 0x504 + param_1) ^\n            param_1[iVar1 * 4 + 0x33];\n    uStack25 = uVar5 >> 0x18;\n    uVar3 = *((uVar7 >> 8 & 0xff) + 0x504 + param_1) << 8 ^ *((uVar6 >> 0x10 & 0xff) + 0x504 + param_1) << 0x10 ^\n            *((uVar2 >> 0x18) + 0x504 + param_1) << 0x18 ^ *((uVar4 & 0xff) + 0x504 + param_1) ^\n            param_1[iVar1 * 4 + 0x34];\n    *param_3 = *((uVar4 >> 8 & 0xff) + 0x504 + param_1) << 8 ^ *((uVar7 >> 0x10 & 0xff) + 0x504 + param_1) << 0x10 ^\n               *((uVar6 >> 0x18) + 0x504 + param_1) << 0x18 ^ *((uVar2 & 0xff) + 0x504 + param_1) ^\n               param_1[iVar1 * 4 + 0x31];\n    *(param_3 + 1) = uVar5;\n    *(param_3 + 5) = uVar5 >> 8;\n    uStack26 = uVar5 >> 0x10;\n    *(param_3 + 6) = uStack26;\n    *(param_3 + 7) = uStack25;\n    uStack21 = uVar8 >> 0x18;\n    *(param_3 + 2) = uVar8;\n    *(param_3 + 9) = uVar8 >> 8;\n    uStack22 = uVar8 >> 0x10;\n    *(param_3 + 10) = uStack22;\n    *(param_3 + 0xb) = uStack21;\n    uStack18 = uVar3 >> 0x10;\n    uStack17 = uVar3 >> 0x18;\n    *(param_3 + 3) = uVar3;\n    *(param_3 + 0xd) = uVar3 >> 8;\n    *(param_3 + 0xe) = uStack18;\n    *(param_3 + 0xf) = uStack17;\n    return;\n}\n",
        "token_count": 4947
    },
    "00440ae0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.00440ae0(int32_t *param_1, uchar *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint in_stack_ffffffb4;\n    uint arg_8h;\n    uchar auStack72 [68];\n    uint32_t uStack4;\n    \n    uStack4 = *0x4b4f00 ^ &stack0xffffffb4;\n    uVar2 = -*param_1 - 9U & 0x3f;\n    arg_8h = CONCAT31(in_stack_ffffffb4 >> 8, 0x80);\n    fcn.00453710(&stack0xffffffb5, 0, 0x47);\n    iVar1 = param_1[1] * 8;\n    auStack72[uVar2 - 3] = iVar1;\n    auStack72[uVar2] = iVar1 >> 0x18;\n    auStack72[uVar2 - 2] = iVar1 >> 8;\n    auStack72[uVar2 - 1] = iVar1 >> 0x10;\n    fcn.00440a80(param_1, &stack0xffffffb4, uVar2 + 9);\n    *param_2 = *(param_1 + 2);\n    param_2[1] = *(param_1 + 9);\n    param_2[2] = *(param_1 + 10);\n    param_2[3] = *(param_1 + 0xb);\n    param_2[4] = *(param_1 + 3);\n    param_2[5] = *(param_1 + 0xd);\n    param_2[6] = *(param_1 + 0xe);\n    param_2[7] = *(param_1 + 0xf);\n    param_2[8] = *(param_1 + 4);\n    param_2[9] = *(param_1 + 0x11);\n    param_2[10] = *(param_1 + 0x12);\n    param_2[0xb] = *(param_1 + 0x13);\n    param_2[0xc] = *(param_1 + 5);\n    param_2[0xd] = *(param_1 + 0x15);\n    param_2[0xe] = *(param_1 + 0x16);\n    param_2[0xf] = *(param_1 + 0x17);\n    fcn.004529f8(arg_8h);\n    return;\n}\n",
        "token_count": 560
    },
    "004432f0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.004432f0(uint32_t *param_1, uint32_t *param_2, uint32_t *param_3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    \n    uVar4 = param_1[1] >> 4 | *(param_1 + 1) << 0x1c;\n    uVar3 = (*param_1 ^ uVar4) & 0xf0f0f0f;\n    uVar2 = *param_1 ^ uVar3;\n    uVar3 = uVar3 ^ uVar4;\n    uVar3 = uVar3 >> 0xc | uVar3 << 0x14;\n    uVar4 = (uVar2 ^ uVar3) & 0xffff0000;\n    uVar2 = uVar2 ^ uVar4;\n    uVar4 = uVar4 ^ uVar3;\n    uVar4 = uVar4 >> 0x12 | uVar4 << 0xe;\n    uVar3 = (uVar2 ^ uVar4) & 0x33333333;\n    uVar2 = uVar2 ^ uVar3;\n    uVar3 = uVar3 ^ uVar4;\n    uVar3 = uVar3 >> 0x16 | uVar3 << 10;\n    uVar4 = (uVar2 ^ uVar3) & 0xff00ff00;\n    uVar2 = uVar2 ^ uVar4;\n    uVar4 = uVar4 ^ uVar3;\n    uVar4 = uVar4 >> 9 | uVar4 << 0x17;\n    uVar5 = (uVar2 ^ uVar4) & 0x55555555;\n    uVar2 = uVar5 ^ uVar2;\n    uVar3 = uVar2 << 1;\n    uVar2 = uVar3 | uVar2 < 0;\n    uVar6 = (param_3[0x1e] ^ uVar2) & 0x3f3f3f3f;\n    uVar3 = (uVar3 >> 4 | uVar2 << 0x1c) ^ param_3[0x1f];\n    uVar5 = uVar5 ^ uVar4;\n    uVar4 = uVar3 & 0x3f3f3f3f;\n    uVar5 = (uVar5 << 2 | uVar5 >> 0x1e) ^\n            (*((uVar6 >> 0x18) * 4 + 0x48fb50) | *((uVar6 >> 0x10 & 0xff) * 4 + 0x48f950) |\n             *((uVar4 >> 0x18) * 4 + 0x48fc50) | *((uVar6 >> 8 & 0xff) * 4 + 0x48f750) |\n             *((uVar4 >> 0x10 & 0xff) * 4 + 0x48fa50) | *((uVar4 >> 8 & 0xff) * 4 + 0x48f850) |\n             *((uVar3 & 0x3f) * 4 + 0x48f650) | *(((param_3[0x1e] ^ uVar2) & 0x3f) * 4 + 0x48f550));\n    uVar6 = (param_3[0x1c] ^ uVar5) & 0x3f3f3f3f;\n    uVar3 = (uVar5 >> 4 | uVar5 << 0x1c) ^ param_3[0x1d];\n    uVar4 = uVar3 & 0x3f3f3f3f;\n    uVar2 = uVar2 ^ (*((uVar6 >> 0x18) * 4 + 0x48fb50) | *((uVar6 >> 0x10 & 0xff) * 4 + 0x48f950) |\n                     *((uVar4 >> 0x18) * 4 + 0x48fc50) | *((uVar6 >> 8 & 0xff) * 4 + 0x48f750) |\n                     *((uVar4 >> 0x10 & 0xff) * 4 + 0x48fa50) | *((uVar4 >> 8 & 0xff) * 4 + 0x48f850) |\n                     *((uVar3 & 0x3f) * 4 + 0x48f650) | *(((param_3[0x1c] ^ uVar5) & 0x3f) * 4 + 0x48f550));\n    uVar6 = (param_3[0x1a] ^ uVar2) & 0x3f3f3f3f;\n    uVar3 = (uVar2 >> 4 | uVar2 << 0x1c) ^ param_3[0x1b];\n    uVar4 = uVar3 & 0x3f3f3f3f;\n    uVar5 = uVar5 ^ (*((uVar6 >> 0x18) * 4 + 0x48fb50) | *((uVar6 >> 0x10 & 0xff) * 4 + 0x48f950) |\n                     *((uVar4 >> 0x18) * 4 + 0x48fc50) | *((uVar6 >> 8 & 0xff) * 4 + 0x48f750) |\n                     *((uVar4 >> 0x10 & 0xff) * 4 + 0x48fa50) | *((uVar4 >> 8 & 0xff) * 4 + 0x48f850) |\n                     *((uVar3 & 0x3f) * 4 + 0x48f650) | *(((param_3[0x1a] ^ uVar2) & 0x3f) * 4 + 0x48f550));\n    uVar3 = (uVar5 >> 4 | uVar5 << 0x1c) ^ param_3[0x19];\n    uVar6 = (param_3[0x18] ^ uVar5) & 0x3f3f3f3f;\n    uVar4 = uVar3 & 0x3f3f3f3f;\n    uVar2 = uVar2 ^ (*((uVar6 >> 0x18) * 4 + 0x48fb50) | *((uVar6 >> 0x10 & 0xff) * 4 + 0x48f950) |\n                     *((uVar4 >> 0x18) * 4 + 0x48fc50) | *((uVar6 >> 8 & 0xff) * 4 + 0x48f750) |\n                     *((uVar4 >> 0x10 & 0xff) * 4 + 0x48fa50) | *((uVar4 >> 8 & 0xff) * 4 + 0x48f850) |\n                     *((uVar3 & 0x3f) * 4 + 0x48f650) | *(((param_3[0x18] ^ uVar5) & 0x3f) * 4 + 0x48f550));\n    uVar6 = (param_3[0x16] ^ uVar2) & 0x3f3f3f3f;\n    uVar3 = (uVar2 >> 4 | uVar2 << 0x1c) ^ param_3[0x17];\n    uVar4 = uVar3 & 0x3f3f3f3f;\n    uVar5 = uVar5 ^ (*((uVar6 >> 0x18) * 4 + 0x48fb50) | *((uVar6 >> 0x10 & 0xff) * 4 + 0x48f950) |\n                     *((uVar4 >> 0x18) * 4 + 0x48fc50) | *((uVar6 >> 8 & 0xff) * 4 + 0x48f750) |\n                     *((uVar4 >> 0x10 & 0xff) * 4 + 0x48fa50) | *((uVar4 >> 8 & 0xff) * 4 + 0x48f850) |\n                     *((uVar3 & 0x3f) * 4 + 0x48f650) | *(((param_3[0x16] ^ uVar2) & 0x3f) * 4 + 0x48f550));\n    uVar6 = (param_3[0x14] ^ uVar5) & 0x3f3f3f3f;\n    uVar3 = (uVar5 >> 4 | uVar5 << 0x1c) ^ param_3[0x15];\n    uVar4 = uVar3 & 0x3f3f3f3f;\n    uVar2 = uVar2 ^ (*((uVar6 >> 0x18) * 4 + 0x48fb50) | *((uVar6 >> 0x10 & 0xff) * 4 + 0x48f950) |\n                     *((uVar4 >> 0x18) * 4 + 0x48fc50) | *((uVar6 >> 8 & 0xff) * 4 + 0x48f750) |\n                     *((uVar4 >> 0x10 & 0xff) * 4 + 0x48fa50) | *((uVar4 >> 8 & 0xff) * 4 + 0x48f850) |\n                     *((uVar3 & 0x3f) * 4 + 0x48f650) | *(((param_3[0x14] ^ uVar5) & 0x3f) * 4 + 0x48f550));\n    uVar6 = (param_3[0x12] ^ uVar2) & 0x3f3f3f3f;\n    uVar3 = (uVar2 >> 4 | uVar2 << 0x1c) ^ param_3[0x13];\n    uVar4 = uVar3 & 0x3f3f3f3f;\n    uVar5 = uVar5 ^ (*((uVar6 >> 0x18) * 4 + 0x48fb50) | *((uVar6 >> 0x10 & 0xff) * 4 + 0x48f950) |\n                     *((uVar4 >> 0x18) * 4 + 0x48fc50) | *((uVar6 >> 8 & 0xff) * 4 + 0x48f750) |\n                     *((uVar4 >> 0x10 & 0xff) * 4 + 0x48fa50) | *((uVar4 >> 8 & 0xff) * 4 + 0x48f850) |\n                     *((uVar3 & 0x3f) * 4 + 0x48f650) | *(((param_3[0x12] ^ uVar2) & 0x3f) * 4 + 0x48f550));\n    uVar6 = (param_3[0x10] ^ uVar5) & 0x3f3f3f3f;\n    uVar3 = (uVar5 >> 4 | uVar5 << 0x1c) ^ param_3[0x11];\n    uVar4 = uVar3 & 0x3f3f3f3f;\n    uVar2 = uVar2 ^ (*((uVar6 >> 0x18) * 4 + 0x48fb50) | *((uVar6 >> 0x10 & 0xff) * 4 + 0x48f950) |\n                     *((uVar4 >> 0x18) * 4 + 0x48fc50) | *((uVar6 >> 8 & 0xff) * 4 + 0x48f750) |\n                     *((uVar4 >> 0x10 & 0xff) * 4 + 0x48fa50) | *((uVar4 >> 8 & 0xff) * 4 + 0x48f850) |\n                     *((uVar3 & 0x3f) * 4 + 0x48f650) | *(((param_3[0x10] ^ uVar5) & 0x3f) * 4 + 0x48f550));\n    uVar3 = (uVar2 >> 4 | uVar2 << 0x1c) ^ param_3[0xf];\n    uVar6 = (param_3[0xe] ^ uVar2) & 0x3f3f3f3f;\n    uVar4 = uVar3 & 0x3f3f3f3f;\n    uVar5 = uVar5 ^ (*((uVar6 >> 0x18) * 4 + 0x48fb50) | *((uVar6 >> 0x10 & 0xff) * 4 + 0x48f950) |\n                     *((uVar4 >> 0x18) * 4 + 0x48fc50) | *((uVar6 >> 8 & 0xff) * 4 + 0x48f750) |\n                     *((uVar4 >> 0x10 & 0xff) * 4 + 0x48fa50) | *((uVar4 >> 8 & 0xff) * 4 + 0x48f850) |\n                     *((uVar3 & 0x3f) * 4 + 0x48f650) | *(((param_3[0xe] ^ uVar2) & 0x3f) * 4 + 0x48f550));\n    uVar6 = (param_3[0xc] ^ uVar5) & 0x3f3f3f3f;\n    uVar3 = (uVar5 >> 4 | uVar5 << 0x1c) ^ param_3[0xd];\n    uVar4 = uVar3 & 0x3f3f3f3f;\n    uVar2 = uVar2 ^ (*((uVar6 >> 0x18) * 4 + 0x48fb50) | *((uVar6 >> 0x10 & 0xff) * 4 + 0x48f950) |\n                     *((uVar4 >> 0x18) * 4 + 0x48fc50) | *((uVar6 >> 8 & 0xff) * 4 + 0x48f750) |\n                     *((uVar4 >> 0x10 & 0xff) * 4 + 0x48fa50) | *((uVar4 >> 8 & 0xff) * 4 + 0x48f850) |\n                     *((uVar3 & 0x3f) * 4 + 0x48f650) | *(((param_3[0xc] ^ uVar5) & 0x3f) * 4 + 0x48f550));\n    uVar6 = (param_3[10] ^ uVar2) & 0x3f3f3f3f;\n    uVar3 = (uVar2 >> 4 | uVar2 << 0x1c) ^ param_3[0xb];\n    uVar4 = uVar3 & 0x3f3f3f3f;\n    uVar5 = uVar5 ^ (*((uVar6 >> 0x18) * 4 + 0x48fb50) | *((uVar6 >> 0x10 & 0xff) * 4 + 0x48f950) |\n                     *((uVar4 >> 0x18) * 4 + 0x48fc50) | *((uVar6 >> 8 & 0xff) * 4 + 0x48f750) |\n                     *((uVar4 >> 0x10 & 0xff) * 4 + 0x48fa50) | *((uVar4 >> 8 & 0xff) * 4 + 0x48f850) |\n                     *((uVar3 & 0x3f) * 4 + 0x48f650) | *(((param_3[10] ^ uVar2) & 0x3f) * 4 + 0x48f550));\n    uVar6 = (param_3[8] ^ uVar5) & 0x3f3f3f3f;\n    uVar3 = (uVar5 >> 4 | uVar5 << 0x1c) ^ param_3[9];\n    uVar4 = uVar3 & 0x3f3f3f3f;\n    uVar2 = uVar2 ^ (*((uVar6 >> 0x18) * 4 + 0x48fb50) | *((uVar6 >> 0x10 & 0xff) * 4 + 0x48f950) |\n                     *((uVar4 >> 0x18) * 4 + 0x48fc50) | *((uVar6 >> 8 & 0xff) * 4 + 0x48f750) |\n                     *((uVar4 >> 0x10 & 0xff) * 4 + 0x48fa50) | *((uVar4 >> 8 & 0xff) * 4 + 0x48f850) |\n                     *((uVar3 & 0x3f) * 4 + 0x48f650) | *(((param_3[8] ^ uVar5) & 0x3f) * 4 + 0x48f550));\n    uVar6 = (param_3[6] ^ uVar2) & 0x3f3f3f3f;\n    uVar3 = (uVar2 >> 4 | uVar2 << 0x1c) ^ param_3[7];\n    uVar4 = uVar3 & 0x3f3f3f3f;\n    uVar5 = uVar5 ^ (*((uVar6 >> 0x18) * 4 + 0x48fb50) | *((uVar6 >> 0x10 & 0xff) * 4 + 0x48f950) |\n                     *((uVar4 >> 0x18) * 4 + 0x48fc50) | *((uVar6 >> 8 & 0xff) * 4 + 0x48f750) |\n                     *((uVar4 >> 0x10 & 0xff) * 4 + 0x48fa50) | *((uVar4 >> 8 & 0xff) * 4 + 0x48f850) |\n                     *((uVar3 & 0x3f) * 4 + 0x48f650) | *(((param_3[6] ^ uVar2) & 0x3f) * 4 + 0x48f550));\n    uVar6 = (param_3[4] ^ uVar5) & 0x3f3f3f3f;\n    uVar3 = (uVar5 >> 4 | uVar5 << 0x1c) ^ param_3[5];\n    uVar4 = uVar3 & 0x3f3f3f3f;\n    uVar2 = uVar2 ^ (*((uVar6 >> 0x18) * 4 + 0x48fb50) | *((uVar6 >> 0x10 & 0xff) * 4 + 0x48f950) |\n                     *((uVar4 >> 0x18) * 4 + 0x48fc50) | *((uVar6 >> 8 & 0xff) * 4 + 0x48f750) |\n                     *((uVar4 >> 0x10 & 0xff) * 4 + 0x48fa50) | *((uVar4 >> 8 & 0xff) * 4 + 0x48f850) |\n                     *((uVar3 & 0x3f) * 4 + 0x48f650) | *(((param_3[4] ^ uVar5) & 0x3f) * 4 + 0x48f550));\n    uVar6 = (param_3[2] ^ uVar2) & 0x3f3f3f3f;\n    uVar3 = (uVar2 >> 4 | uVar2 << 0x1c) ^ param_3[3];\n    uVar4 = uVar3 & 0x3f3f3f3f;\n    uVar5 = uVar5 ^ (*((uVar6 >> 0x18) * 4 + 0x48fb50) | *((uVar6 >> 0x10 & 0xff) * 4 + 0x48f950) |\n                     *((uVar4 >> 0x18) * 4 + 0x48fc50) | *((uVar6 >> 8 & 0xff) * 4 + 0x48f750) |\n                     *((uVar4 >> 0x10 & 0xff) * 4 + 0x48fa50) | *((uVar4 >> 8 & 0xff) * 4 + 0x48f850) |\n                     *((uVar3 & 0x3f) * 4 + 0x48f650) | *(((param_3[2] ^ uVar2) & 0x3f) * 4 + 0x48f550));\n    uVar3 = (uVar5 >> 4 | uVar5 << 0x1c) ^ param_3[1];\n    uVar4 = uVar3 & 0x3f3f3f3f;\n    uVar7 = (*param_3 ^ uVar5) & 0x3f3f3f3f;\n    uVar6 = uVar5 >> 1 | ((uVar5 & 1) != 0) << 0x1f;\n    uVar2 = (*((uVar7 >> 0x18) * 4 + 0x48fb50) | *((uVar7 >> 0x10 & 0xff) * 4 + 0x48f950) |\n             *((uVar4 >> 0x18) * 4 + 0x48fc50) | *((uVar7 >> 8 & 0xff) * 4 + 0x48f750) |\n             *((uVar4 >> 0x10 & 0xff) * 4 + 0x48fa50) | *((uVar4 >> 8 & 0xff) * 4 + 0x48f850) |\n             *((uVar3 & 0x3f) * 4 + 0x48f650) | *(((*param_3 ^ uVar5) & 0x3f) * 4 + 0x48f550)) ^ uVar2;\n    uVar2 = uVar2 >> 2 | uVar2 << 0x1e;\n    uVar3 = (uVar2 ^ uVar6) & 0x55555555;\n    uVar6 = uVar6 ^ uVar3;\n    uVar3 = uVar3 ^ uVar2;\n    uVar3 = uVar3 << 9 | uVar3 >> 0x17;\n    uVar2 = (uVar3 ^ uVar6) & 0xff00ff00;\n    uVar6 = uVar6 ^ uVar2;\n    uVar2 = uVar2 ^ uVar3;\n    uVar2 = uVar2 << 0x16 | uVar2 >> 10;\n    uVar3 = (uVar2 ^ uVar6) & 0x33333333;\n    uVar6 = uVar6 ^ uVar3;\n    uVar3 = uVar3 ^ uVar2;\n    uVar3 = uVar3 << 0x12 | uVar3 >> 0xe;\n    uVar2 = (uVar3 ^ uVar6) & 0xffff0000;\n    uVar6 = uVar6 ^ uVar2;\n    uVar2 = uVar2 ^ uVar3;\n    uVar3 = uVar2 << 0xc;\n    uVar4 = uVar3 | uVar2 >> 0x14;\n    uVar2 = (uVar4 ^ uVar6) & 0xf0f0f0f;\n    iVar1 = (uVar2 ^ uVar4) << 4;\n    *param_2 = uVar6 ^ uVar2;\n    param_3._2_1_ = iVar1 >> 0x10;\n    *(param_2 + 1) = iVar1 | uVar3 >> 0x1c;\n    param_3._3_1_ = iVar1 >> 0x18;\n    *(param_2 + 5) = iVar1 >> 8;\n    *(param_2 + 6) = param_3._2_1_;\n    *(param_2 + 7) = param_3._3_1_;\n    return;\n}\n",
        "token_count": 5718
    },
    "004499a0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.004499a0(uint *param_1, uchar *param_2, uint param_3, uint param_4)\n\n{\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = *param_1;\n    uStack4 = param_1[1];\n    fcn.0044a0b0(&uStack8, param_3, param_4);\n    *param_2 = uStack8;\n    param_2[1] = uStack8 >> 8;\n    param_2[2] = uStack8 >> 0x10;\n    param_2[3] = uStack8 >> 0x18;\n    param_2[4] = uStack4;\n    param_2[5] = uStack4 >> 8;\n    param_2[6] = uStack4 >> 0x10;\n    param_2[7] = uStack4 >> 0x18;\n    return;\n}\n",
        "token_count": 213
    },
    "0040374c": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.0040374c(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0045b302(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CReadListenerClient.0;\n    fcn.00402707(0x4a00e0);\n    extraout_ECX[8] = NULL;\n    extraout_ECX[9] = NULL;\n    *(extraout_ECX + 7) = 0x20;\n    *(unaff_EBP + -4) = 0;\n    fcn.00402707(0x4a00e0);\n    *(unaff_EBP + -4) = 1;\n    fcn.00402707(0x4a00e0);\n    *(unaff_EBP + -4) = 2;\n    fcn.00402707(0x4a00e0);\n    extraout_ECX[0x21] = 0x7;\n    extraout_ECX[0x20] = NULL;\n    *(extraout_ECX + 0x1c) = 0;\n    extraout_ECX[0x27] = 0x7;\n    extraout_ECX[0x26] = NULL;\n    *(extraout_ECX + 0x22) = 0;\n    extraout_ECX[0x2d] = 0x7;\n    extraout_ECX[0x2c] = NULL;\n    *(extraout_ECX + 0x28) = 0;\n    *(unaff_EBP + -4) = 6;\n    fcn.00402707(0x4a00e0);\n    *(unaff_EBP + -4) = 7;\n    fcn.00402707(0x4a00e0);\n    *(unaff_EBP + -4) = 8;\n    fcn.00402707(0x4a00e0);\n    *(unaff_EBP + -4) = 9;\n    fcn.00402707(0x4a00e0);\n    *(unaff_EBP + -4) = 10;\n    fcn.00402707(0x4a00e0);\n    *(unaff_EBP + -4) = 0xb;\n    extraout_ECX[0x4c] = NULL;\n    fcn.00402707(0x4a00e0);\n    *(unaff_EBP + -4) = 0xc;\n    fcn.00402707(0x4a00e0);\n    *(unaff_EBP + -4) = 0xd;\n    fcn.00402707(0x4a00e0);\n    extraout_ECX[0x5f] = NULL;\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 689
    },
    "0040405a": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0040405a(void)\n\n{\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    return;\n}\n",
        "token_count": 211
    },
    "004151f7": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004151f7(code **param_1)\n\n{\n    uint unaff_ESI;\n    \n    *param_1 = \n    vtable.boost::exception_detail::error_info_injector_class_boost::property_tree::xml_parser::xml_parser_error_.0;\n    param_1[0x10] =\n         vtable.boost::exception_detail::error_info_injector_class_boost::property_tree::xml_parser::xml_parser_error_.1.0\n    ;\n    fcn.0040fde8();\n    *param_1 = vtable.boost::property_tree::file_parser_error.0;\n    fcn.0040230f(unaff_ESI);\n    fcn.0040230f();\n    *param_1 = vtable.boost::property_tree::ptree_error.0;\n    *param_1 = vtable.std::exception.0;\n    if (*(param_1 + 2) != '\\0') {\n        fcn.00455f3f(param_1[1]);\n    }\n    param_1[1] = NULL;\n    *(param_1 + 2) = 0;\n    return;\n}\n",
        "token_count": 246
    },
    "00415de8": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00415de8(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t arg_8h_01;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0045b302(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    arg_8h_00 = *(unaff_EBP + 8);\n    fcn.00415e4f(arg_8h_00);\n    *extraout_ECX = vtable.boost::property_tree::xml_parser::xml_parser_error.0;\n    arg_8h_01 = 0;\n    *(unaff_EBP + -4) = 0;\n    if (arg_8h_00 != 0) {\n        arg_8h_01 = arg_8h_00 + 0x40;\n    }\n    fcn.00413d55(arg_8h_01);\n    *extraout_ECX =\n         vtable.boost::exception_detail::error_info_injector_class_boost::property_tree::xml_parser::xml_parser_error_.0\n    ;\n    extraout_ECX[0x10] =\n         vtable.boost::exception_detail::error_info_injector_class_boost::property_tree::xml_parser::xml_parser_error_.1.0\n    ;\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 344
    },
    "00416023": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00416023(uint arg_8h)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0045b302(8);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    extraout_ECX[0x15] = 0x4a4370;\n    extraout_ECX[0x17] = vtable.boost::exception_detail::clone_base.0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = 1;\n    fcn.00415de8(*(unaff_EBP + 8));\n    *(unaff_EBP + -4) = 1;\n    *extraout_ECX =\n         vtable.boost::exception_detail::clone_impl_struct_boost::exception_detail::error_info_injector_class_boost::property_tree::xml_parser::xml_parser_error__.2.0\n    ;\n    extraout_ECX[0x10] =\n         vtable.boost::exception_detail::clone_impl_struct_boost::exception_detail::error_info_injector_class_boost::property_tree::xml_parser::xml_parser_error__.1.0\n    ;\n    *(*(extraout_ECX[0x15] + 4) + 0x54 + extraout_ECX) =\n         vtable.boost::exception_detail::clone_impl_struct_boost::exception_detail::error_info_injector_class_boost::property_tree::xml_parser::xml_parser_error__.0\n    ;\n    *(*(extraout_ECX[0x15] + 4) + 0x50 + extraout_ECX) = *(extraout_ECX[0x15] + 4) + -8;\n    fcn.0040fe2e();\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 455
    },
    "00416236": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00416236(void)\n\n{\n    code **extraout_ECX;\n    uint arg_8h;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0045b302(8);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    extraout_ECX[0x15] = 0x4a4370;\n    extraout_ECX[0x17] = vtable.boost::exception_detail::clone_base.0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = 2;\n    fcn.00415de8(arg_8h);\n    *(unaff_EBP + -4) = 1;\n    *extraout_ECX =\n         vtable.boost::exception_detail::clone_impl_struct_boost::exception_detail::error_info_injector_class_boost::property_tree::xml_parser::xml_parser_error__.2.0\n    ;\n    extraout_ECX[0x10] =\n         vtable.boost::exception_detail::clone_impl_struct_boost::exception_detail::error_info_injector_class_boost::property_tree::xml_parser::xml_parser_error__.1.0\n    ;\n    *(*(extraout_ECX[0x15] + 4) + 0x54 + extraout_ECX) =\n         vtable.boost::exception_detail::clone_impl_struct_boost::exception_detail::error_info_injector_class_boost::property_tree::xml_parser::xml_parser_error__.0\n    ;\n    *(*(extraout_ECX[0x15] + 4) + 0x50 + extraout_ECX) = *(extraout_ECX[0x15] + 4) + -8;\n    fcn.0040fe2e();\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 452
    },
    "00416888": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416888(int32_t *arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint32_t in_ECX;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    int32_t **ppiVar5;\n    int32_t **ppiVar6;\n    int32_t iVar7;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    ppiVar6 = NULL;\n    iVar7 = in_ECX - 0xc;\n    if (in_ECX == 0) {\n        iVar7 = 0;\n    }\n    var_8h = in_ECX & 0xffffff00;\n    var_4h = 0;\n    iVar2 = fcn.004183bd(arg_10h, &var_4h, var_8h);\n    if (iVar2 == var_4h) {\n        iVar3 = iVar7;\n        if (iVar7 == -0xc) {\n            iVar3 = 0;\n        }\n        if (*(iVar3 + 4) == 0) {\n            ppiVar5 = NULL;\n        }\n        else {\n            ppiVar5 = *(iVar3 + 4) + 0x40;\n        }\n        ppiVar4 = var_4h + 0x40;\n        if (var_4h == 0) {\n            ppiVar4 = NULL;\n        }\n        *ppiVar4 = *ppiVar5;\n        ppiVar4[1] = ppiVar5;\n        *ppiVar5 = ppiVar4;\n        arg_10h._3_1_ = 1;\n        (*ppiVar4)[1] = ppiVar4;\n        *(iVar7 + 0x14) = *(iVar7 + 0x14) + 1;\n        if (in_ECX == 0) {\n            iVar7 = 0;\n        }\n        else {\n            iVar7 = in_ECX - 0xc;\n        }\n        uVar1 = 1;\n        if (arg_ch != *(iVar7 + 4)) {\n            ppiVar5 = iVar2 + 0x40;\n            if (iVar2 == 0) {\n                ppiVar5 = NULL;\n            }\n            if (arg_ch != 0) {\n                ppiVar6 = arg_ch + 0x40;\n            }\n            (*ppiVar5)[1] = ppiVar5[1];\n            *ppiVar5[1] = *ppiVar5;\n            *ppiVar5 = *ppiVar6;\n            ppiVar5[1] = ppiVar6;\n            *ppiVar6 = ppiVar5;\n            (*ppiVar5)[1] = ppiVar5;\n            uVar1 = arg_10h._3_1_;\n        }\n    }\n    else {\n        arg_10h._3_1_ = 0;\n        uVar1 = arg_10h._3_1_;\n    }\n    arg_10h._3_1_ = uVar1;\n    *arg_8h = iVar2;\n    *(arg_8h + 1) = arg_10h._3_1_;\n    return;\n}\n",
        "token_count": 715
    },
    "004170ed": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004170ed(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t arg_8h_00;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t extraout_ECX;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t unaff_EBP;\n    uint var_44h;\n    uint var_40h;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0045b302(0x38);\n    *(unaff_EBP + -0x20) = extraout_ECX;\n    iVar3 = fcn.0045306d(0x48);\n    iVar5 = extraout_ECX;\n    if (iVar3 != 0) goto code_r0x0041710f;\n    while( true ) {\n        iVar3 = fcn.0044e7ba();\ncode_r0x0041710f:\n        *(iVar5 + 4) = iVar3;\n        iVar7 = *(unaff_EBP + 8);\n        iVar8 = 0;\n        *(unaff_EBP + -4) = 0;\n        iVar3 = iVar7 + 0xc;\n        if (iVar7 == 0) {\n            iVar3 = 0;\n        }\n        piVar1 = *(iVar3 + 4);\n        *(unaff_EBP + -0x14) = iVar5 + 0xc;\n        *(iVar5 + 0x10) = piVar1;\n        (**(*piVar1 + 4))();\n        *(unaff_EBP + -4) = 1;\n        iVar3 = iVar7 + 0xc;\n        *(iVar5 + 0x14) = 0;\n        uVar4 = *(iVar7 + 4);\n        iVar5 = *(iVar5 + 4);\n        *(unaff_EBP + -0x1c) = uVar4;\n        *(unaff_EBP + 8) = iVar3;\n        if (iVar3 == 0) {\n            iVar7 = 0;\n        }\n        uVar2 = *(iVar7 + 0x14);\n        *(unaff_EBP + -0x18) = uVar2;\n        *(unaff_EBP + -0x40) = uVar2;\n        *(unaff_EBP + -0x38) = uVar2;\n        if (uVar2 == 0) break;\n        if (uVar2 < 0x20000000) {\n            iVar7 = fcn.0045306d(uVar2 << 3);\n            *(unaff_EBP + -0x10) = iVar7;\n            if (iVar7 != 0) {\n                iVar3 = *(unaff_EBP + 8);\n                uVar4 = *(unaff_EBP + -0x1c);\ncode_r0x0041718d:\n                *(unaff_EBP + -0x34) = iVar7;\n                *(unaff_EBP + -0x30) = 0;\n                *(unaff_EBP + -0x2c) = uVar4;\n                *(unaff_EBP + -0x28) = iVar5;\n                *(unaff_EBP + -0x24) = 0;\n                *(unaff_EBP + -4) = 2;\n                iVar5 = iVar3 + -0xc;\n                if (iVar3 == 0) {\n                    iVar5 = 0;\n                }\n                iVar5 = *(*(iVar5 + 4) + 0x44);\n                if (iVar5 == 0) {\n                    iVar5 = 0;\n                }\n                else {\n                    iVar5 = iVar5 + -0x40;\n                }\n                iVar7 = iVar3 + -0xc;\n                if (iVar3 == 0) {\n                    iVar7 = 0;\n                }\n                iVar7 = *(iVar7 + 4);\n                if (iVar5 != iVar7) {\n                    do {\n                        fcn.00417500(iVar5);\n                        if (iVar5 == 0) {\n                            iVar5 = 0;\n                        }\n                        else {\n                            iVar5 = iVar5 + 0x40;\n                        }\n                        if (*(iVar5 + 4) == 0) {\n                            iVar5 = 0;\n                        }\n                        else {\n                            iVar5 = *(iVar5 + 4) + -0x40;\n                        }\n                    } while (iVar5 != iVar7);\n                    iVar3 = *(unaff_EBP + 8);\n                    *(unaff_EBP + -0x10) = *(unaff_EBP + -0x34);\n                    *(unaff_EBP + -0x18) = *(unaff_EBP + -0x38);\n                }\n                iVar5 = iVar3 + -0xc;\n                if (iVar3 == 0) {\n                    iVar5 = 0;\n                }\n                iVar5 = *(iVar5 + 4);\n                if (*(unaff_EBP + -0x14) == 0) {\n                    iVar3 = 0;\n                }\n                else {\n                    iVar3 = *(unaff_EBP + -0x14) + -0xc;\n                }\n                iVar3 = *(iVar3 + 4);\n                *(unaff_EBP + -0x1c) = iVar3;\n                do {\n                    if (*(iVar5 + 0x44) == 0) {\n                        iVar5 = 0;\n                    }\n                    else {\n                        iVar5 = *(iVar5 + 0x44) + -0x40;\n                    }\n                    iVar6 = fcn.00417747(iVar5);\n                    iVar7 = iVar6 + 0x40;\n                    if (iVar6 == 0) {\n                        iVar7 = 0;\n                    }\n                    *(iVar3 + 0x44) = iVar7;\n                    *(iVar6 + 0x40) = iVar3 + 0x40;\n                    arg_8h_00 = *(unaff_EBP + 8);\n                    iVar7 = arg_8h_00 + -0xc;\n                    if (arg_8h_00 == 0) {\n                        iVar7 = 0;\n                    }\n                    iVar3 = iVar6;\n                } while (iVar5 != *(iVar7 + 4));\n                fcn.00417597(arg_8h_00, unaff_EBP + -0x44);\n                if (*(unaff_EBP + 8) != 0) {\n                    iVar8 = *(unaff_EBP + 8) + -0xc;\n                }\n                *(*(unaff_EBP + -0x20) + 0x14) = *(iVar8 + 0x14);\n                if (*(unaff_EBP + -0x18) != 0) {\n                    fcn.00452a07(*(unaff_EBP + -0x10));\n                }\n                fcn.0045b2d0();\n                return;\n            }\n        }\n    }\n    iVar7 = 0;\n    *(unaff_EBP + -0x10) = 0;\n    goto code_r0x0041718d;\n}\n",
        "token_count": 1669
    },
    "00429970": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429970(uint noname_0, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    int32_t *in_FS_OFFSET;\n    uchar *arg_8h;\n    uchar *arg_ch_00;\n    uint uVar3;\n    uchar *puStack136;\n    char16_t *pcVar4;\n    uint32_t uStack116;\n    uint32_t uStack104;\n    uint uStack100;\n    uint uStack96;\n    ushort uStack92;\n    uint32_t uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uchar auStack60 [8];\n    ushort uStack52;\n    uint32_t uStack48;\n    int32_t iStack44;\n    uint uStack36;\n    uint uStack32;\n    uint32_t uStack28;\n    int32_t iStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0xffffffff;\n    uStack16 = 0x48a3d8;\n    iStack20 = *in_FS_OFFSET;\n    uStack28 = *0x4b4f00 ^ &stack0xffffff98;\n    uStack116 = *0x4b4f00 ^ &stack0xffffff90;\n    *in_FS_OFFSET = &stack0xffffffec;\n    uStack32 = 7;\n    uStack36 = 0;\n    uStack52 = 0;\n    uVar1 = fcn.00453054(L\"KeyValueRepository\");\n    pcVar4 = L\"KeyValueRepository\";\n    fcn.00402667(L\"KeyValueRepository\", uVar1);\n    iStack20 = 0;\n    puStack136 = 0x4299f6;\n    uVar1 = extraout_ECX;\n    fcn.00431110(&stack0xffffffc4);\n    if (7 < uStack48) {\n        puStack136 = uStack68;\n        fcn.00452a07();\n    }\n    uStack72 = 7;\n    uStack76 = 0;\n    uStack92 = 0;\n    uStack96 = 7;\n    uStack100 = 0;\n    uStack116 = uStack116 & 0xffff0000;\n    puStack136 = &stack0xffffff8c;\n    uStack28 = 2;\n    iVar2 = (**(*arg_ch + 8))(&stack0xffffffa4);\n    uVar3 = extraout_ECX_00;\n    while (iVar2 != 0) {\n        arg_ch_00 = &stack0xffffff84;\n        arg_8h = &stack0xffffff9c;\n        fcn.00431440(arg_8h, arg_ch_00);\n        iVar2 = (**(*arg_ch + 0xc))(&stack0xffffff90, &stack0xffffff78, arg_8h, arg_ch_00, uVar3);\n        uVar3 = extraout_ECX_01;\n    }\n    fcn.00431380();\n    if (7 < uStack104) {\n        fcn.00452a07(pcVar4);\n    }\n    uStack104 = 7;\n    if (7 < uStack80) {\n        fcn.00452a07(uStack100);\n    }\n    *in_FS_OFFSET = iStack44;\n    fcn.004529f8(uVar1);\n    return;\n}\n",
        "token_count": 767
    },
    "0042c780": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042c780(code **param_1)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    code **var_4h;\n    \n    *param_1 = vtable.CCmdLineParser.0;\n    var_4h = param_1;\n    fcn.0042a8f0(*(param_1[0x10] + 4));\n    *(param_1[0x10] + 4) = param_1[0x10];\n    *param_1[0x10] = param_1[0x10];\n    *(param_1[0x10] + 8) = param_1[0x10];\n    param_1[0x11] = NULL;\n    fcn.00429d10(&var_4h, *param_1[0x10], param_1[0x10]);\n    fcn.00452a07(param_1[0x10]);\n    puVar2 = param_1[0xd];\n    if (puVar2 != NULL) {\n        puVar1 = param_1[0xe];\n        for (; puVar2 != puVar1; puVar2 = puVar2 + 6) {\n            if (7 < puVar2[5]) {\n                fcn.00452a07(*puVar2);\n            }\n            puVar2[5] = 7;\n            puVar2[4] = 0;\n            *puVar2 = 0;\n        }\n        fcn.00452a07(param_1[0xd]);\n        param_1[0xd] = NULL;\n        param_1[0xe] = NULL;\n        param_1[0xf] = NULL;\n    }\n    if (0x7 < param_1[0xc]) {\n        fcn.00452a07(param_1[7]);\n    }\n    param_1[0xc] = 0x7;\n    param_1[0xb] = NULL;\n    *(param_1 + 7) = 0;\n    if (0x7 < param_1[6]) {\n        fcn.00452a07(param_1[1]);\n    }\n    param_1[6] = 0x7;\n    param_1[5] = NULL;\n    *(param_1 + 1) = 0;\n    return;\n}\n",
        "token_count": 519
    },
    "0042d0c0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d0c0(int16_t *arg_8h)\n\n{\n    uint arg_ch;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    \n    var_8h = *0x4b4f00 ^ &stack0xfffffffc;\n    arg_ch = 0;\n    var_ch = 7;\n    var_10h = 0;\n    var_20h = var_20h & 0xffff0000;\n    if (*arg_8h != 0) {\n        arg_ch = fcn.00453054(arg_8h);\n    }\n    fcn.00402667(arg_8h, arg_ch);\n    fcn.00429160(&var_24h, &var_20h);\n    if (7 < var_ch) {\n        fcn.00452a07(var_20h);\n    }\n    fcn.004529f8(arg_ch);\n    return;\n}\n",
        "token_count": 231
    },
    "0042d150": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d150(int16_t *arg_8h, int32_t arg_ch)\n\n{\n    uint arg_ch_00;\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_ch_01;\n    int32_t var_2ch;\n    uint32_t var_28h;\n    uint var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48aa58;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    arg_ch_00 = 0;\n    var_14h = 7;\n    var_18h = 0;\n    var_28h = var_28h & 0xffff0000;\n    if (*arg_8h != 0) {\n        arg_ch_00 = fcn.00453054(arg_8h);\n    }\n    fcn.00402667(arg_8h, arg_ch_00);\n    arg_ch_01 = &var_28h;\n    var_4h = 0;\n    fcn.00429160(&var_2ch, arg_ch_01);\n    if ((var_2ch != *(in_ECX + 0x40)) && (arg_ch != var_2ch + 0x28)) {\n        fcn.00402450(var_2ch + 0x28, 0, 0xffffffff);\n    }\n    if (7 < var_14h) {\n        fcn.00452a07(var_28h);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(arg_ch_01);\n    return;\n}\n",
        "token_count": 428
    },
    "00432c20": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00432c20(void)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    uint *puVar7;\n    uint uVar8;\n    int32_t iVar9;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint unaff_EBX;\n    uint unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    int64_t iVar10;\n    uint uVar11;\n    char16_t *pcVar12;\n    uint uVar13;\n    char *pcVar14;\n    uint uVar15;\n    uint32_t uStack188;\n    uint uStack184;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    ulong uStack128;\n    ulong uStack120;\n    uint uStack112;\n    int32_t *piStack32;\n    uint32_t uStack28;\n    uint uStack24;\n    int32_t *piStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0xffffffff;\n    uStack16 = 0x48b156;\n    piStack20 = *in_FS_OFFSET;\n    uStack28 = *0x4b4f00 ^ &uStack188;\n    uVar5 = *0x4b4f00 ^ &stack0xffffff38;\n    *in_FS_OFFSET = &piStack20;\n    uVar15 = 0x288;\n    uStack184 = 0x288;\n    uVar6 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, 0x288, uVar5);\n    pcVar2 = _sym.imp.KERNEL32.dll_HeapAlloc;\n    puVar7 = (*_sym.imp.KERNEL32.dll_HeapAlloc)();\n    pcVar4 = _sym.imp.IPHLPAPI.DLL_GetAdaptersInfo;\n    if (puVar7 == NULL) {\n        uVar15 = 0x102;\ncode_r0x00432c97:\n        pcVar14 = \"GETGUID:Error allocating memory needed to call GetAdaptersinfo\";\n        uVar11 = 0x2000002;\n        pcVar12 = L\"GetGUIDInternal.cpp\";\n        uVar8 = fcn.0042c180();\n        fcn.0042c3c0(uVar8, pcVar12, uVar15, uVar11, pcVar14, uVar6);\n    }\n    else {\n        iVar9 = (*_sym.imp.IPHLPAPI.DLL_GetAdaptersInfo)(puVar7, &stack0xffffff3c);\n        pcVar3 = _sym.imp.KERNEL32.dll_GetProcessHeap;\n        if (iVar9 == 0x6f) {\n            uVar8 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, puVar7);\n            (*_sym.imp.KERNEL32.dll_HeapFree)(uVar8);\n            uVar15 = (*pcVar3)(0, uVar15);\n            puVar7 = (*pcVar2)(uVar15);\n            if (puVar7 == NULL) {\n                uVar15 = 0x10b;\n                goto code_r0x00432c97;\n            }\n        }\n        iVar9 = (*pcVar4)(puVar7, &stack0xffffff3c);\n        if (iVar9 == 0) {\n            fcn.00432650();\n            uStack24 = 0;\n            fcn.00432650();\n            uStack24 = CONCAT31(uStack24._1_3_, 1);\n            for (puVar1 = puVar7; puVar1 != NULL; puVar1 = *puVar1) {\n                uVar15 = puVar1[0x65];\n                pcVar14 = \"GETGUID:seed %012llX\";\n                uVar13 = 0x2000040;\n                uVar11 = 0x11a;\n                pcVar12 = L\"GetGUIDInternal.cpp\";\n                uVar8 = fcn.0042c180();\n                fcn.0042c3c0(uVar8, pcVar12, uVar11, uVar13, pcVar14, uVar15);\n                uVar15 = puVar1[0x65];\n                if (puVar1[0x65] == -0x3fa9b000) {\n                    pcVar14 = \"GETGUID:Dispose; virtual interface(addr=%012llX)\";\n                    uVar13 = 0x2000040;\n                    uVar11 = 0x11e;\n                    pcVar12 = L\"GetGUIDInternal.cpp\";\n                    uVar8 = fcn.0042c180();\n                    fcn.0042c3c0(uVar8, pcVar12, uVar11, uVar13, pcVar14, uVar15);\n                }\n                else {\n                    iVar9 = fcn.004327f0(puVar1[0x68], uVar15);\n                    if (iVar9 == 0) {\n                        uVar15 = puVar1[0x68];\n                        pcVar14 = \"GETGUID:non-supported type(%u)\";\n                        uVar13 = 0x2000040;\n                        uVar11 = 0x129;\n                        pcVar12 = L\"GetGUIDInternal.cpp\";\n                        uVar8 = fcn.0042c180(extraout_ECX_00);\n                        fcn.0042c3c0(uVar8, pcVar12, uVar11, uVar13, pcVar14, uVar15);\n                    }\n                }\n            }\n            iVar10 = fcn.00432870();\n            if ((iVar10 == 0) && (iVar10 = fcn.00432870(),  iVar10 == 0)) {\n                pcVar14 = \"GETGUID:no usable candidates\";\n                uVar11 = 0x2000004;\n                uVar8 = 0x134;\n                pcVar12 = L\"GetGUIDInternal.cpp\";\n                uVar15 = fcn.0042c180();\n                fcn.0042c3c0(uVar15, pcVar12, uVar8, uVar11, pcVar14, uVar6);\n            }\n            else {\n                uStack184 = iVar10 >> 0x20;\n                uStack188 = iVar10 ^ 0xffffffff;\n                uStack156 = 0;\n                uStack152 = 0;\n                uStack148 = 0x67452301;\n                uStack144 = 0xefcdab89;\n                uStack140 = 0x98badcfe;\n                uStack136 = 0x10325476;\n                uStack132 = 0xc3d2e1f0;\n                uStack128 = 0;\n                uStack120 = 0;\n                uStack112 = 0;\n                fcn.0042fb70(8);\n                fcn.0042fc20();\n                fcn.00455bdd(unaff_EBX, 0x25, \"%.8X-%.4X-%.4X-%.4X-%.4X%.8X\", uStack128);\n                pcVar14 = \"GETGUID:GUID is %s\";\n                uVar8 = 0x2000008;\n                uVar15 = 0x14b;\n                pcVar12 = L\"GetGUIDInternal.cpp\";\n                uVar6 = fcn.0042c180(extraout_ECX_01);\n                fcn.0042c3c0(uVar6, pcVar12, uVar15, uVar8, pcVar14, unaff_EBX);\n            }\n            fcn.00432760();\n            fcn.00432760();\n        }\n        else {\n            pcVar14 = \"GETGUID:GetAdaptersInfo failed with error: %lu\";\n            uVar8 = 0x2000002;\n            uVar15 = 0x14f;\n            pcVar12 = L\"GetGUIDInternal.cpp\";\n            uVar6 = fcn.0042c180(extraout_ECX);\n            fcn.0042c3c0(uVar6, pcVar12, uVar15, uVar8, pcVar14, iVar9);\n        }\n        if (puVar7 != NULL) {\n            uVar6 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, puVar7);\n            (*_sym.imp.KERNEL32.dll_HeapFree)(uVar6);\n        }\n    }\n    *in_FS_OFFSET = piStack32;\n    fcn.004529f8(unaff_EDI);\n    return;\n}\n",
        "token_count": 1913
    },
    "0043b350": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0043b350(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t in_stack_ffffffec;\n    \n    fcn.0043dec0(param_1, 0x40, &stack0xffffffec);\n    uVar3 = 0x10;\n    piVar1 = &stack0xffffffec;\n    piVar2 = param_1 + 0x40;\n    do {\n        if (*piVar2 != *piVar1) break;\n        uVar3 = uVar3 - 4;\n        piVar1 = piVar1 + 1;\n        piVar2 = piVar2 + 1;\n    } while (3 < uVar3);\n    fcn.004529f8(in_stack_ffffffec);\n    return;\n}\n",
        "token_count": 193
    },
    "0043b5c0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint fcn.0043b5c0(uchar *param_1, uchar *param_2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    \n    *param_2 = *param_1;\n    param_2[1] = param_1[4];\n    puVar2 = param_1 + 8;\n    puVar3 = param_2 + 2;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = *puVar2;\n    *(puVar3 + 2) = *(puVar2 + 2);\n    puVar2 = param_1 + 0x28;\n    puVar3 = param_2 + 0x21;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = *puVar2;\n    *(puVar3 + 2) = *(puVar2 + 2);\n    fcn.0043bc60(param_2 + 2, 0x3e);\n    fcn.0043dec0(param_2, 0x40, param_2 + 0x40);\n    return 0;\n}\n",
        "token_count": 359
    },
    "00440db0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00440db0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_00001014;\n    uint uVar3;\n    \n    fcn.00459c50();\n    *in_FS_OFFSET = &stack0x00001040;\n    fcn.0043bff0();\n    fcn.0043c300();\n    fcn.0043bff0();\n    fcn.0043c300();\n    fcn.0043bff0();\n    fcn.0043c300();\n    iVar1 = (**(extraout_ECX + 0x20))();\n    if (iVar1 == 0) {\n        iVar1 = (**(extraout_ECX + 0x1c))();\n        uVar3 = *0x8;\n        if (iVar1 != 0) {\n            fcn.0043c980();\n            goto code_r0x00440fd9;\n        }\n        *(extraout_ECX + 0x48) = *0x8;\n        iVar1 = fcn.00456a6c(uVar3);\n        if (iVar1 != 0) {\n            (**(extraout_ECX + 0x24))();\n            iVar2 = (**(extraout_ECX + 0x28))();\n            if ((iVar2 < 0) ||\n               (((iVar2 == 0x90313 || (iVar2 == 0x90314)) &&\n                ((*(extraout_ECX + 0x2c) == NULL || (iVar2 = (**(extraout_ECX + 0x2c))(),  iVar2 < 0)))))) {\n                fcn.00455f3f(iVar1);\n            }\n            else {\n                fcn.00453710();\n                fcn.00443ee0();\n                fcn.00455f3f(iVar1);\n            }\n        }\n    }\n    fcn.0043c980();\ncode_r0x00440fd9:\n    uVar3 = 1;\n    fcn.0043c360();\n    fcn.0043c360();\n    fcn.0043c360();\n    *in_FS_OFFSET = in_stack_00001014;\n    fcn.004529f8(uVar3);\n    return;\n}\n",
        "token_count": 513
    },
    "00441050": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00441050(void)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    int32_t *in_FS_OFFSET;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uchar *in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint *in_stack_00000024;\n    uint in_stack_00000028;\n    int32_t in_stack_0000202c;\n    uint arg_8h_00;\n    \n    fcn.00459c50();\n    *in_FS_OFFSET = &stack0x00002034;\n    arg_8h = fcn.00456a6c(*(extraout_ECX + 0x48));\n    if (arg_8h == 0) {\n        fcn.0043c980();\n        goto code_r0x004411f4;\n    }\n    in_stack_0000001c = 0;\n    in_stack_00000024 = &stack0x00000010;\n    in_stack_00000020 = 1;\n    fcn.0043c300();\n    fcn.0043bff0();\n    in_stack_00000010 = fcn.00443fa0();\n    in_stack_00000018 = &stack0x00001030;\n    in_stack_00000014 = 2;\n    iVar1 = (**(extraout_ECX + 0x28))();\n    if (iVar1 < 0) {\ncode_r0x004411d5:\n        fcn.00455f3f(arg_8h);\n    }\n    else {\n        if ((iVar1 == 0x90313) || (iVar1 == 0x90314)) {\n            if (*(extraout_ECX + 0x2c) != NULL) {\n                iVar1 = (**(extraout_ECX + 0x2c))();\n                if (-1 < iVar1) goto code_r0x004411a2;\n            }\n            goto code_r0x004411d5;\n        }\ncode_r0x004411a2:\n        fcn.00453710();\n        fcn.00443ee0();\n        fcn.00455f3f(arg_8h);\n    }\n    fcn.0043c980();\ncode_r0x004411f4:\n    arg_8h_00 = 1;\n    fcn.0043c360();\n    *in_FS_OFFSET = in_stack_0000202c;\n    fcn.004529f8(arg_8h_00);\n    return;\n}\n",
        "token_count": 576
    },
    "00435ef5": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00435ef5(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t unaff_ESI;\n    int32_t iVar7;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_10h = 0;\n    var_4h = 0xffff;\n    iVar1 = (**(unaff_ESI + 0x10))(*(unaff_ESI + 0x1c), arg_8h, 0, 2);\n    if (iVar1 == 0) {\n        uVar2 = (**(unaff_ESI + 0xc))(*(unaff_ESI + 0x1c), arg_8h);\n        if (uVar2 < 0xffff) {\n            var_4h = uVar2;\n        }\n        iVar1 = fcn.00456a6c(0x404);\n        if (iVar1 != 0) {\n            var_8h = 4;\n            if (4 < var_4h) {\n                do {\n                    uVar3 = var_8h + 0x400;\n                    var_8h = var_4h;\n                    if (uVar3 <= var_4h) {\n                        var_8h = uVar3;\n                    }\n                    iVar7 = uVar2 - var_8h;\n                    uVar3 = 0x404;\n                    if (uVar2 - iVar7 < 0x405) {\n                        uVar3 = uVar2 - iVar7;\n                    }\n                    iVar4 = (**(unaff_ESI + 0x10))(*(unaff_ESI + 0x1c), arg_8h, iVar7, 0);\n                    if ((iVar4 != 0) ||\n                       (uVar5 = (**(unaff_ESI + 4))(*(unaff_ESI + 0x1c), arg_8h, iVar1, uVar3),  uVar5 != uVar3)) break;\n                    iVar4 = uVar3 - 3;\n                    do {\n                        iVar6 = iVar4;\n                        if (iVar6 < 1) goto code_r0x00435fe0;\n                        iVar4 = iVar6 + -1;\n                    } while ((((*(iVar4 + iVar1) != 'P') || (*(iVar6 + iVar1) != 'K')) ||\n                             (*(iVar6 + 1 + iVar1) != '\\x05')) || (*(iVar6 + 2 + iVar1) != '\\x06'));\n                    var_10h = iVar4 + iVar7;\n                    if (var_10h != 0) break;\ncode_r0x00435fe0:\n                } while (var_8h < var_4h);\n            }\n            fcn.00455f3f(iVar1);\n            iVar1 = var_10h;\n        }\n    }\n    else {\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 704
    },
    "00479fa0": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00479fa0(char *param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char **unaff_ESI;\n    \n    if (in_EAX - param_1 < 6) {\n        return 0xffffffff;\n    }\n    iVar1 = 0;\n    do {\n        if (*param_1 != *(iVar1 + 0x49eab8)) {\n            *unaff_ESI = param_1;\n            return 0;\n        }\n        iVar1 = iVar1 + 1;\n        param_1 = param_1 + 1;\n    } while (iVar1 < 6);\n    *unaff_ESI = param_1;\n    return 8;\n}\n",
        "token_count": 162
    },
    "00483bd0": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nint32_t fcn.00483bd0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    \n    if (unaff_EDI == 0) {\n        return 6;\n    }\n    iVar2 = 0;\n    do {\n        iVar1 = fcn.00483100();\n        if (iVar1 != 0) {\n            return iVar2;\n        }\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 6);\n    return -1;\n}\n",
        "token_count": 121
    },
    "00417365": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00417365(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint var_30h;\n    \n    fcn.00416fc3(param_1 + -0x2c, 1);\n    fcn.0045b275(&var_30h, 0x4ac9fc);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 96
    },
    "004224f0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004224f0(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_2ch = 0;\n    var_28h = 0;\n    var_24h = 0;\n    var_20h = 0;\n    var_1ch = 0;\n    var_18h = 0;\n    var_14h = 0;\n    var_10h = 0;\n    uVar1 = fcn.004223e0(arg_8h, arg_ch, arg_10h, &var_2ch, &var_4h, &var_8h, &var_ch, arg_14h);\n    fcn.004203d0();\n    (**(arg_14h + 4))(arg_14h, var_4h);\n    (**(arg_14h + 4))(arg_14h, var_8h);\n    (**(arg_14h + 4))(arg_14h, var_ch);\n    return uVar1;\n}\n",
        "token_count": 344
    },
    "0043d1d0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043d1d0(uint *param_1)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *unaff_EDI;\n    uint32_t in_stack_ffffffd0;\n    uint32_t arg_8h;\n    uchar uStack44;\n    uchar uStack43;\n    ushort uStack42;\n    uint uStack40;\n    uchar uStack36;\n    uchar uStack35;\n    uint8_t uStack34;\n    uint8_t uStack33;\n    uint uStack32;\n    uchar uStack28;\n    uchar uStack27;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    ushort uStack8;\n    uint32_t uStack4;\n    \n    uStack4 = *0x4b4f00 ^ &stack0xffffffd0;\n    uStack44 = 0;\n    uStack43 = 0;\n    uStack42 = 0;\n    uStack40 = 0;\n    uStack36 = 0;\n    uStack35 = 0;\n    uStack34 = 0;\n    uStack33 = 0;\n    uStack32 = 0;\n    uStack28 = 0;\n    uStack27 = 0;\n    arg_8h = (in_stack_ffffffd0 >> 8 & 0xffff00) << 8;\n    if (param_1 == NULL) {\ncode_r0x0043d204:\n        fcn.004529f8(arg_8h);\n        return;\n    }\n    puVar2 = param_1;\n    do {\n        cVar1 = *puVar2;\n        puVar2 = puVar2 + 1;\n    } while (cVar1 != '\\0');\n    if (puVar2 - (param_1 + 1) == 0x12) {\n        uStack20 = param_1[1];\n        uStack24 = *param_1;\n        uStack16 = param_1[2];\n        uStack12 = param_1[3];\n        uStack8 = *(param_1 + 4);\n        uStack44 = uStack24;\n        uStack43 = uStack24 >> 8;\n        iVar3 = fcn.0043d710(&uStack24 + 2, 0x10, &uStack42);\n        if (iVar3 == -0x1ffeffff) goto code_r0x0043d204;\n        fcn.0043d5b0(&uStack44, 10, &stack0xffffffd0);\n        iVar3 = (arg_8h & 0xff) - uStack34;\n        if ((iVar3 == 0) && (iVar3 = (arg_8h >> 8 & 0xff) - uStack33,  iVar3 == 0)) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = 1;\n            if (iVar3 < 1) {\n                iVar4 = -1;\n            }\n        }\n        if (iVar4 == 0) {\n            if (unaff_EDI != NULL) {\n                *unaff_EDI = CONCAT22(uStack42, CONCAT11(uStack43, uStack44));\n                unaff_EDI[1] = uStack40;\n                unaff_EDI[2] = CONCAT13(uStack33, CONCAT12(uStack34, CONCAT11(uStack35, uStack36)));\n                unaff_EDI[3] = uStack32;\n                *(unaff_EDI + 4) = CONCAT11(uStack27, uStack28);\n            }\n            fcn.004529f8(arg_8h);\n            return;\n        }\n    }\n    fcn.004529f8(arg_8h);\n    return;\n}\n",
        "token_count": 838
    },
    "0043e9b0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nint32_t fcn.0043e9b0(char param_1)\n\n{\n    if (param_1 - 0x30U < 10) {\n        return param_1 + -0x30;\n    }\n    if (param_1 + 0xbfU < 6) {\n        return param_1 + -0x37;\n    }\n    if (param_1 + 0x9fU < 6) {\n        return param_1 + -0x57;\n    }\n    return 0;\n}\n",
        "token_count": 115
    },
    "0040cc0d": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040cc0d(char *arg_8h, int32_t arg_ch)\n\n{\n    char *arg_8h_00;\n    char cVar1;\n    uint uVar2;\n    char *pcVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint var_4h;\n    \n    pcVar5 = arg_8h + arg_ch;\n    pcVar4 = NULL;\n    pcVar3 = arg_8h;\n    arg_8h_00 = arg_8h;\n    if (arg_8h != pcVar5) {\n        do {\n            if (*pcVar3 == '\\n') break;\n            pcVar3 = pcVar3 + 1;\n        } while (pcVar3 != pcVar5);\n    }\n    do {\n        if (pcVar5 == pcVar3) {\n            if ((arg_8h_00 < pcVar5) &&\n               (cVar1 = fcn.0040387f(arg_8h + pcVar4, \n                                     pcVar5 + (-(arg_8h[pcVar5 + pcVar4 + (-1 - arg_8h_00)] == '\\r') - arg_8h_00)), \n               cVar1 == '\\0')) {\ncode_r0x0040ccb6:\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = 1;\n            }\n            return uVar2;\n        }\n        cVar1 = fcn.0040387f(arg_8h_00, pcVar3 + (-(arg_8h[pcVar3 + pcVar4 + (-1 - arg_8h_00)] == '\\r') - arg_8h_00));\n        if (cVar1 == '\\0') goto code_r0x0040ccb6;\n        pcVar4 = pcVar3 + pcVar4 + (1 - arg_8h_00);\n        arg_8h_00 = arg_8h + pcVar4;\n        for (pcVar3 = arg_8h_00; (pcVar3 != pcVar5 && (*pcVar3 != '\\n')); pcVar3 = pcVar3 + 1) {\n        }\n    } while( true );\n}\n",
        "token_count": 491
    },
    "0043ea40": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint fcn.0043ea40(uint param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t *unaff_ESI;\n    int32_t **in_FS_OFFSET;\n    uint32_t uStack40;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x486201;\n    piStack12 = *in_FS_OFFSET;\n    uStack40 = *0x4b4f00 ^ &stack0xffffffdc;\n    *in_FS_OFFSET = &piStack12;\n    iVar6 = 0;\n    iVar2 = fcn.0043c300();\n    if (iVar2 == 0) {\n        fcn.0043c980(0x4a23ad, 0xffffffff);\n    }\n    else {\n        iVar2 = fcn.0043c300();\n        iVar2 = fcn.0045306d(iVar2 + 1);\n        iVar3 = fcn.0043c300();\n        fcn.00453710(iVar2, 0, iVar3 + 1);\n        uVar4 = fcn.0043c300(0);\n        fcn.0043c290(iVar2, uVar4);\n        do {\n            cVar1 = *(iVar2 + iVar6);\n            if ((((cVar1 != ' ') && (cVar1 != '\\t')) && (cVar1 != '\\r')) && (cVar1 != '\\n')) break;\n            iVar6 = iVar6 + 1;\n            iVar3 = fcn.0043c300();\n        } while (iVar6 < iVar3);\n        iVar3 = fcn.0043c300();\n        if (iVar6 < iVar3) {\n            iVar3 = fcn.0043c300();\n            do {\n                do {\n                    cVar1 = *(iVar3 + -1 + iVar2);\n                    iVar3 = iVar3 + -1;\n                } while (cVar1 == ' ');\n            } while (((cVar1 == '\\t') || (cVar1 == '\\r')) || (cVar1 == '\\n'));\n            iVar5 = fcn.0043c300();\n            if (iVar6 < iVar5) {\n                fcn.0043c980(iVar6 + iVar2, (iVar3 - iVar6) + 1);\n                fcn.00452a07(iVar2);\n                param_1 = 0;\n                fcn.0043c6b0(&uStack40);\n                uStack40 = 1;\n                fcn.0043c360();\n                goto code_r0x0043eb89;\n            }\n        }\n        fcn.00452a07(iVar2);\n        param_1 = uStack8;\n        fcn.0043c980(0x4a23ad, 0xffffffff);\n    }\ncode_r0x0043eb89:\n    *in_FS_OFFSET = unaff_ESI;\n    return param_1;\n}\n",
        "token_count": 686
    },
    "004471a0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nint32_t fcn.004471a0(char *param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    for (pcVar2 = param_1; (((cVar1 = *pcVar2,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\r')) || (cVar1 == '\\n'))\n        ; pcVar2 = pcVar2 + 1) {\n    }\n    return pcVar2 - param_1;\n}\n",
        "token_count": 114
    },
    "00447370": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00447370(uint8_t *param_1)\n\n{\n    char *in_EAX;\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    \n    iVar3 = 4;\n    do {\n        if ((*param_1 & 0xf0) < 0xa0) {\n            cVar2 = '0';\n        }\n        else {\n            cVar2 = 'W';\n        }\n        *in_EAX = (*param_1 >> 4) + cVar2;\n        uVar1 = *param_1 & 0xf;\n        if ((*param_1 & 0xf) < 10) {\n            cVar2 = uVar1 + 0x30;\n        }\n        else {\n            cVar2 = uVar1 + 0x57;\n        }\n        in_EAX[1] = cVar2;\n        if ((param_1[1] & 0xf0) < 0xa0) {\n            cVar2 = '0';\n        }\n        else {\n            cVar2 = 'W';\n        }\n        in_EAX[2] = (param_1[1] >> 4) + cVar2;\n        uVar1 = param_1[1] & 0xf;\n        if ((param_1[1] & 0xf) < 10) {\n            cVar2 = uVar1 + 0x30;\n        }\n        else {\n            cVar2 = uVar1 + 0x57;\n        }\n        in_EAX[3] = cVar2;\n        if ((param_1[2] & 0xf0) < 0xa0) {\n            cVar2 = '0';\n        }\n        else {\n            cVar2 = 'W';\n        }\n        in_EAX[4] = (param_1[2] >> 4) + cVar2;\n        uVar1 = param_1[2] & 0xf;\n        if ((param_1[2] & 0xf) < 10) {\n            cVar2 = uVar1 + 0x30;\n        }\n        else {\n            cVar2 = uVar1 + 0x57;\n        }\n        in_EAX[5] = cVar2;\n        if ((param_1[3] & 0xf0) < 0xa0) {\n            cVar2 = '0';\n        }\n        else {\n            cVar2 = 'W';\n        }\n        in_EAX[6] = (param_1[3] >> 4) + cVar2;\n        uVar1 = param_1[3] & 0xf;\n        if ((param_1[3] & 0xf) < 10) {\n            cVar2 = uVar1 + 0x30;\n        }\n        else {\n            cVar2 = uVar1 + 0x57;\n        }\n        in_EAX[7] = cVar2;\n        in_EAX = in_EAX + 8;\n        param_1 = param_1 + 4;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    *in_EAX = '\\0';\n    return;\n}\n",
        "token_count": 706
    },
    "0044d2d8": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044d2d8(int32_t arg_8h)\n\n{\n    int16_t *piVar1;\n    uint16_t uVar2;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iStack28;\n    uint32_t var_8h;\n    uint16_t *var_4h;\n    \n    var_8h = 0xffffffff;\n    uVar2 = *(in_EAX + 2);\n    iVar5 = 7;\n    iVar6 = 0;\n    iStack28 = 4;\n    if (uVar2 == 0) {\n        iVar5 = 0x8a;\n        iStack28 = 3;\n    }\n    *(in_EAX + 6 + in_ECX * 4) = 0xffff;\n    if (-1 < in_ECX) {\n        var_4h = in_EAX + 6;\n        iVar7 = in_ECX + 1;\n        uVar3 = uVar2;\n        do {\n            uVar4 = *var_4h;\n            iVar6 = iVar6 + 1;\n            if ((iVar5 <= iVar6) || (uVar3 != uVar4)) {\n                if (iVar6 < iStack28) {\n                    piVar1 = arg_8h + 0xa7c + uVar3 * 4;\n                    *piVar1 = *piVar1 + iVar6;\n                }\n                else if (uVar3 == 0) {\n                    if (iVar6 < 0xb) {\n                        *(arg_8h + 0xac0) = *(arg_8h + 0xac0) + 1;\n                    }\n                    else {\n                        *(arg_8h + 0xac4) = *(arg_8h + 0xac4) + 1;\n                    }\n                }\n                else {\n                    if (uVar3 != var_8h) {\n                        piVar1 = arg_8h + 0xa7c + uVar3 * 4;\n                        *piVar1 = *piVar1 + 1;\n                    }\n                    *(arg_8h + 0xabc) = *(arg_8h + 0xabc) + 1;\n                }\n                iVar6 = 0;\n                var_8h = uVar3;\n                if (uVar4 == 0) {\n                    iVar5 = 0x8a;\n                }\n                else {\n                    if (uVar3 != uVar4) {\n                        iVar5 = 7;\n                        iStack28 = 4;\n                        goto code_r0x0044d388;\n                    }\n                    iStack28 = 6;\n                    iVar5 = iStack28;\n                }\n                iStack28 = 3;\n            }\ncode_r0x0044d388:\n            var_4h = var_4h + 2;\n            iVar7 = iVar7 + -1;\n            uVar3 = uVar4;\n        } while (iVar7 != 0);\n    }\n    return;\n}\n",
        "token_count": 696
    },
    "0044d394": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044d394(int32_t param_1, int32_t param_2)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iStack44;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint16_t *var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_14h = 0xffffffff;\n    iVar7 = 7;\n    iStack44 = 4;\n    if (*(param_1 + 2) == 0) {\n        iVar7 = 0x8a;\n        iStack44 = 3;\n    }\n    if (-1 < param_2) {\n        var_ch = param_1 + 6;\n        var_18h = param_2 + 1;\n        iVar6 = 0;\n        var_8h = *(param_1 + 2);\n        do {\n            uVar3 = *var_ch;\n            iVar5 = iVar6 + 1;\n            if ((iVar7 <= iVar5) || (var_8h != uVar3)) {\n                if (iVar5 < iStack44) {\n                    do {\n                        uVar8 = *(in_EAX + 0xa7e + var_8h * 4);\n                        uVar2 = *(in_EAX + 0x16bc);\n                        if (0x10 - uVar8 < *(in_EAX + 0x16bc)) {\n                            uVar4 = *(in_EAX + 0xa7c + var_8h * 4);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) | uVar4 << (uVar2 & 0x1f);\n                            *(*(in_EAX + 8) + *(in_EAX + 0x14)) = *(in_EAX + 0x16b8);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 0x14) + *(in_EAX + 8)) = *(in_EAX + 0x16b9);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            iVar7 = *(in_EAX + 0x16bc) + -0x10;\n                            *(in_EAX + 0x16b8) = uVar4 >> (0x10U - *(in_EAX + 0x16bc) & 0x1f);\n                        }\n                        else {\n                            iVar7 = *(in_EAX + 0x16bc);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) | *(in_EAX + 0xa7c + var_8h * 4) << (uVar2 & 0x1f);\n                        }\n                        iVar5 = iVar5 + -1;\n                        *(in_EAX + 0x16bc) = iVar7 + uVar8;\n                    } while (iVar5 != 0);\n                }\n                else {\n                    if (var_8h == 0) {\n                        iVar7 = *(in_EAX + 0x16bc);\n                        uVar2 = iVar7;\n                        if (iVar5 < 0xb) {\n                            uVar4 = *(in_EAX + 0xac2);\n                            if (0x10 - uVar4 < iVar7) {\n                                uVar1 = *(in_EAX + 0xac0);\n                                *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) | uVar1 << (uVar2 & 0x1f);\n                                *(*(in_EAX + 8) + *(in_EAX + 0x14)) = *(in_EAX + 0x16b8);\n                                *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                                *(*(in_EAX + 0x14) + *(in_EAX + 8)) = *(in_EAX + 0x16b9);\n                                *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                                iVar7 = *(in_EAX + 0x16bc) + -0x10;\n                                *(in_EAX + 0x16b8) = uVar1 >> (0x10U - *(in_EAX + 0x16bc) & 0x1f);\n                            }\n                            else {\n                                *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) | *(in_EAX + 0xac0) << (uVar2 & 0x1f);\n                            }\n                            iVar7 = iVar7 + uVar4;\n                            iVar6 = iVar6 + -2;\n                            *(in_EAX + 0x16bc) = iVar7;\n                            if (iVar7 < 0xe) {\n                                *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) | iVar6 << (iVar7 & 0x1f);\n                                iVar7 = iVar7 + 3;\ncode_r0x0044d7f3:\n                                *(in_EAX + 0x16bc) = iVar7;\n                                goto code_r0x0044d7f9;\n                            }\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) | iVar6 << (iVar7 & 0x1f);\n                            *(*(in_EAX + 8) + *(in_EAX + 0x14)) = *(in_EAX + 0x16b8);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 0x14) + *(in_EAX + 8)) = *(in_EAX + 0x16b9);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            uVar4 = iVar6 >> (0x10U - *(in_EAX + 0x16bc) & 0x1f);\n                            iVar7 = *(in_EAX + 0x16bc) + -0xd;\n                        }\n                        else {\n                            uVar4 = *(in_EAX + 0xac6);\n                            if (0x10 - uVar4 < iVar7) {\n                                uVar1 = *(in_EAX + 0xac4);\n                                *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) | uVar1 << (uVar2 & 0x1f);\n                                *(*(in_EAX + 8) + *(in_EAX + 0x14)) = *(in_EAX + 0x16b8);\n                                *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                                *(*(in_EAX + 0x14) + *(in_EAX + 8)) = *(in_EAX + 0x16b9);\n                                *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                                iVar7 = *(in_EAX + 0x16bc) + -0x10;\n                                *(in_EAX + 0x16b8) = uVar1 >> (0x10U - *(in_EAX + 0x16bc) & 0x1f);\n                            }\n                            else {\n                                *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) | *(in_EAX + 0xac4) << (uVar2 & 0x1f);\n                            }\n                            iVar7 = iVar7 + uVar4;\n                            iVar6 = iVar6 + -10;\n                            *(in_EAX + 0x16bc) = iVar7;\n                            if (iVar7 < 10) {\n                                *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) | iVar6 << (iVar7 & 0x1f);\n                                iVar7 = iVar7 + 7;\n                                goto code_r0x0044d7f3;\n                            }\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) | iVar6 << (iVar7 & 0x1f);\n                            *(*(in_EAX + 8) + *(in_EAX + 0x14)) = *(in_EAX + 0x16b8);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 0x14) + *(in_EAX + 8)) = *(in_EAX + 0x16b9);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            uVar4 = iVar6 >> (0x10U - *(in_EAX + 0x16bc) & 0x1f);\n                            iVar7 = *(in_EAX + 0x16bc) + -9;\n                        }\n                    }\n                    else {\n                        if (var_8h != var_14h) {\n                            uVar8 = *(in_EAX + 0xa7e + var_8h * 4);\n                            uVar2 = *(in_EAX + 0x16bc);\n                            if (0x10 - uVar8 < *(in_EAX + 0x16bc)) {\n                                uVar4 = *(in_EAX + 0xa7c + var_8h * 4);\n                                *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) | uVar4 << (uVar2 & 0x1f);\n                                *(*(in_EAX + 8) + *(in_EAX + 0x14)) = *(in_EAX + 0x16b8);\n                                *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                                *(*(in_EAX + 0x14) + *(in_EAX + 8)) = *(in_EAX + 0x16b9);\n                                *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                                iVar7 = *(in_EAX + 0x16bc) + -0x10;\n                                *(in_EAX + 0x16b8) = uVar4 >> (0x10U - *(in_EAX + 0x16bc) & 0x1f);\n                            }\n                            else {\n                                iVar7 = *(in_EAX + 0x16bc);\n                                *(in_EAX + 0x16b8) =\n                                     *(in_EAX + 0x16b8) | *(in_EAX + 0xa7c + var_8h * 4) << (uVar2 & 0x1f);\n                            }\n                            *(in_EAX + 0x16bc) = iVar7 + uVar8;\n                            iVar5 = iVar6;\n                        }\n                        uVar4 = *(in_EAX + 0xabe);\n                        iVar7 = *(in_EAX + 0x16bc);\n                        if (0x10 - uVar4 < iVar7) {\n                            uVar1 = *(in_EAX + 0xabc);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) | uVar1 << (iVar7 & 0x1f);\n                            *(*(in_EAX + 8) + *(in_EAX + 0x14)) = *(in_EAX + 0x16b8);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 0x14) + *(in_EAX + 8)) = *(in_EAX + 0x16b9);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            iVar7 = *(in_EAX + 0x16bc) + -0x10;\n                            *(in_EAX + 0x16b8) = uVar1 >> (0x10U - *(in_EAX + 0x16bc) & 0x1f);\n                        }\n                        else {\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) | *(in_EAX + 0xabc) << (iVar7 & 0x1f);\n                        }\n                        iVar7 = iVar7 + uVar4;\n                        iVar5 = iVar5 + -3;\n                        *(in_EAX + 0x16bc) = iVar7;\n                        if (iVar7 < 0xf) {\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) | iVar5 << (iVar7 & 0x1f);\n                            iVar7 = iVar7 + 2;\n                            goto code_r0x0044d7f3;\n                        }\n                        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) | iVar5 << (iVar7 & 0x1f);\n                        *(*(in_EAX + 8) + *(in_EAX + 0x14)) = *(in_EAX + 0x16b8);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 0x14) + *(in_EAX + 8)) = *(in_EAX + 0x16b9);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        uVar4 = iVar5 >> (0x10U - *(in_EAX + 0x16bc) & 0x1f);\n                        iVar7 = *(in_EAX + 0x16bc) + -0xe;\n                    }\n                    *(in_EAX + 0x16b8) = uVar4;\n                    *(in_EAX + 0x16bc) = iVar7;\n                }\ncode_r0x0044d7f9:\n                iVar5 = 0;\n                var_14h = var_8h;\n                if (uVar3 == 0) {\n                    iVar7 = 0x8a;\n                }\n                else {\n                    if (var_8h != uVar3) {\n                        iVar7 = 7;\n                        iStack44 = 4;\n                        goto code_r0x0044d81c;\n                    }\n                    iStack44 = 6;\n                    iVar7 = iStack44;\n                }\n                iStack44 = 3;\n            }\ncode_r0x0044d81c:\n            var_ch = var_ch + 2;\n            var_18h = var_18h + -1;\n            iVar6 = iVar5;\n            var_8h = uVar3;\n        } while (var_18h != 0);\n    }\n    return;\n}\n",
        "token_count": 3479
    },
    "0041375d": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid fcn.0041375d(void)\n\n{\n    uchar *extraout_ECX;\n    uint16_t *extraout_EDX;\n    int32_t unaff_EBP;\n    uint16_t *puVar1;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    fcn.0045b302(8);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    *(extraout_ECX + 0x14) = 0xf;\n    *(extraout_ECX + 0x10) = 0;\n    *extraout_ECX = 0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = 1;\n    for (puVar1 = extraout_EDX; *puVar1 != 0; puVar1 = puVar1 + 1) {\n        if (*puVar1 < 0x80) {\n            var_4h = *puVar1;\n        }\n        else {\n            var_4h = 0x2a;\n        }\n        fcn.0040180b(1, var_4h);\n    }\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 298
    },
    "00416755": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00416755(uint16_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    if (param_1 < 0x80) {\n        uVar1 = param_1;\n    }\n    else {\n        uVar1 = 0x7a;\n    }\n    return uVar1 & 0xffffff00 | *(uVar1 + 0x4a4238);\n}\n",
        "token_count": 94
    },
    "00417e50": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00417e50(uint16_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    if (param_1 < 0x80) {\n        uVar1 = param_1;\n    }\n    else {\n        uVar1 = 0x7a;\n    }\n    return uVar1 & 0xffffff00 | *(uVar1 + 0x4a3ff8);\n}\n",
        "token_count": 96
    },
    "0041868a": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0041868a(uint16_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    if (param_1 < 0x80) {\n        uVar1 = param_1;\n    }\n    else {\n        uVar1 = 0x7a;\n    }\n    return uVar1 & 0xffffff00 | *(uVar1 + 0x4a3df8);\n}\n",
        "token_count": 96
    },
    "0041869f": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0041869f(uint16_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    if (param_1 < 0x80) {\n        uVar1 = param_1;\n    }\n    else {\n        uVar1 = 0x7a;\n    }\n    return uVar1 & 0xffffff00 | *(uVar1 + 0x4a3cf8);\n}\n",
        "token_count": 96
    },
    "00418f41": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00418f41(uint16_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    if (param_1 < 0x80) {\n        uVar1 = param_1;\n    }\n    else {\n        uVar1 = 0x7a;\n    }\n    return uVar1 & 0xffffff00 | *(uVar1 + 0x4a39f8);\n}\n",
        "token_count": 96
    },
    "0042c020": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042c020(uint32_t param_1)\n\n{\n    param_1 = param_1 & 0xfff;\n    if (param_1 < 0x41) {\n    // switch table (32 cases) at 0x42c094\n        switch(param_1) {\n        case 1:\n            return 0x21;\n        case 2:\n            return 0x2a;\n        case 3:\n        case 5:\n        case 6:\n        case 7:\n        case 9:\n        case 10:\n        case 0xb:\n        case 0xc:\n        case 0xd:\n        case 0xe:\n        case 0xf:\n        case 0x11:\n        case 0x12:\n        case 0x13:\n        case 0x14:\n        case 0x15:\n        case 0x16:\n        case 0x17:\n        case 0x18:\n        case 0x19:\n        case 0x1a:\n        case 0x1b:\n        case 0x1c:\n        case 0x1d:\n        case 0x1e:\n        case 0x1f:\n            goto code_r0x0042c089;\n        case 4:\n            return 0x57;\n        case 8:\n            return 0x2d;\n        case 0x10:\n            return 0x49;\n        case 0x20:\n            return 0x4f;\n        default:\n            return 0x2e;\n        }\n    }\n    if (param_1 < 0x201) {\n        if (param_1 == 0x200) {\n            return 0x33;\n        }\n        if (param_1 == 0x80) {\n            return 0x31;\n        }\n        if (param_1 == 0x100) {\n            return 0x32;\n        }\n    }\n    else {\n        if (param_1 == 0x400) {\n            return 0x34;\n        }\n        if (param_1 == 0x800) {\n            return 0x35;\n        }\n    }\ncode_r0x0042c089:\n    return 0x20;\n}\n",
        "token_count": 491
    },
    "004745e0": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004745e0(int32_t param_1)\n\n{\n    uint16_t uVar1;\n    uchar *puVar2;\n    uint16_t *puVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    uint32_t in_stack_ffffff7c;\n    \n    puVar3 = *(param_1 + 0xe8);\n    if (puVar3 == NULL) {\n        puVar2 = NULL;\n    }\n    else {\n        iVar4 = 0;\n        uVar1 = *puVar3;\n        while (uVar1 != 0) {\n            if ((iVar4 == 0x7f) || ((*puVar3 & 0xff80) != 0)) {\n                in_stack_ffffff7c = in_stack_ffffff7c & 0xffffff00;\n                break;\n            }\n            (&stack0xffffff7c)[iVar4] = *puVar3;\n            puVar3 = puVar3 + 1;\n            iVar4 = iVar4 + 1;\n            uVar1 = *puVar3;\n        }\n        (&stack0xffffff7c)[iVar4] = 0;\n        puVar2 = &stack0xffffff7c;\n    }\n    pcVar5 = 0x484060;\n    if (*(param_1 + 0xec) == '\\0') {\n        pcVar5 = fcn.00483e90;\n    }\n    iVar4 = (*pcVar5)(param_1 + 0x94, param_1 + 0x90, puVar2);\n    if (iVar4 != 0) {\n        fcn.004529f8(in_stack_ffffff7c);\n        return;\n    }\n    fcn.00473390(*(param_1 + 0xe8));\n    fcn.004529f8(in_stack_ffffff7c);\n    return;\n}\n",
        "token_count": 406
    },
    "00483660": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuint fcn.00483660(int32_t param_1, uint8_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    \n    if (-1 < param_1) {\n        uVar1 = param_1;\n        if (param_1 < 0x80) {\n            *param_2 = uVar1;\n            return 1;\n        }\n        uVar2 = param_1 >> 6;\n        if (param_1 < 0x800) {\n            param_2[1] = uVar1 & 0x3f | 0x80;\n            *param_2 = uVar2 | 0xc0;\n            return 2;\n        }\n        uVar3 = param_1 >> 0xc;\n        if (param_1 < 0x10000) {\n            *param_2 = uVar3 | 0xe0;\n            param_2[2] = uVar1 & 0x3f | 0x80;\n            param_2[1] = uVar2 & 0x3f | 0x80;\n            return 3;\n        }\n        if (param_1 < 0x110000) {\n            *param_2 = param_1 >> 0x12 | 0xf0;\n            param_2[1] = uVar3 & 0x3f | 0x80;\n            param_2[3] = uVar1 & 0x3f | 0x80;\n            param_2[2] = uVar2 & 0x3f | 0x80;\n            return 4;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 381
    },
    "0040f7d4": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040f7d4(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    uint arg_8h_01;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_EDX;\n    int32_t unaff_EBP;\n    uint arg_8h_02;\n    uint var_ech;\n    uint var_dch;\n    uint var_a4h;\n    uint var_8ch;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_18h;\n    uint arg_8h_03;\n    int32_t iVar3;\n    uint var_4h;\n    \n    fcn.0045b335(0xe0);\n    *(unaff_EBP + -0x30) = extraout_EDX;\n    *(unaff_EBP + -0x44) = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x40) = 0;\n    *(unaff_EBP + -0x3c) = 0;\n    *(unaff_EBP + -0x38) = 0;\n    *(unaff_EBP + -0x34) = 0;\n    *(unaff_EBP + -4) = 0;\n    iVar1 = fcn.004340f0(arg_8h_01);\n    if (iVar1 != 0) {\n        iVar1 = *(unaff_EBP + -0x40);\n        *(unaff_EBP + -0x34) = iVar1;\n        if (iVar1 != *(unaff_EBP + -0x3c)) {\n            *(unaff_EBP + -0x18) = 7;\n            *(unaff_EBP + -0x1c) = 0;\n            *(unaff_EBP + -0x2c) = 0;\n            *(unaff_EBP + -4) = 1;\n            iVar3 = *(unaff_EBP + -0x30);\n            do {\n                if (iVar3 != iVar1 + 0x18) {\n                    fcn.00402450(iVar1 + 0x18, 0, 0xffffffff);\n                }\n                if (unaff_EBP + -0x2c != iVar1) {\n                    fcn.00402450(iVar1, 0, 0xffffffff);\n                }\n                iVar1 = iVar1 + 0x30;\n                *(unaff_EBP + -0x34) = iVar1;\n            } while (iVar1 != *(unaff_EBP + -0x3c));\n            fcn.0040fb9e();\n            *(unaff_EBP + -4) = 2;\n            uVar2 = 0;\n            if (*(unaff_EBP + *(*(unaff_EBP + -0xec) + 4) + -0xb4) == 0) {\n                uVar2 = 4;\n            }\n            fcn.0040e96e(uVar2, 0);\n            fcn.00409a58();\n            iVar1 = unaff_EBP + -0x2c;\n            if (7 < *(unaff_EBP + -0x18)) {\n                iVar1 = *(unaff_EBP + -0x2c);\n            }\n            *(unaff_EBP + -0xa4) = 0;\n            uVar2 = extraout_ECX;\n            if (*(unaff_EBP + -0x1c) != 0) {\n                fcn.0040ab3c(iVar1, *(unaff_EBP + -0x1c));\n                uVar2 = extraout_ECX_00;\n            }\n            arg_8h_00 = *(unaff_EBP + -0x44);\n            iVar1 = arg_8h_00 + 6;\n            iVar3 = arg_8h_00 + 2;\n            arg_8h_02 = uVar2;\n            arg_8h_03 = uVar2;\n            fcn.0040fa75(arg_8h_00);\n            fcn.0040fcc6();\n            fcn.0040fa75(arg_8h_03);\n            fcn.0040fcc6();\n            fcn.0040fa75(iVar3);\n            fcn.0040fa75(uVar2);\n            fcn.0040fcc6();\n            fcn.0040fa75(iVar1);\n            fcn.0040fcc6();\n            fcn.0040fa75(arg_8h_02);\n            *(arg_8h_00 + 0xe) = 999;\n            *(unaff_EBP + -4) = 1;\n            fcn.0040fc02();\n            *(unaff_EBP + -0x8c) = vtable.std::ios_base.0;\n            fcn.0044e8ed(unaff_EBP + -0x8c);\n            fcn.00402754(1, 0);\n        }\n    }\n    fcn.0040fb78();\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 1187
    },
    "0040fc99": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fc99(int32_t arg_8h, int32_t arg_ch)\n\n{\n    for (; arg_8h != arg_ch; arg_8h = arg_8h + 0x30) {\n        fcn.00402754(1, 0);\n        fcn.00402754(1, 0);\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "00416dec": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416dec(int16_t **arg_8h)\n\n{\n    int16_t *piVar1;\n    int16_t *piVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    code *var_14h;\n    char *var_8h;\n    int16_t *var_4h;\n    \n    piVar1 = *arg_8h;\n    while( true ) {\n        var_4h = *arg_8h;\n        if (((*var_4h == 0x5d) && (var_4h[1] == 0x5d)) && (var_4h[2] == 0x3e)) break;\n        if (*var_4h == 0) {\n            fcn.00453bd4();\n            var_14h = vtable.boost::property_tree::detail::rapidxml::parse_error.0;\n            var_8h = \"unexpected end of data\";\n            fcn.0045b275(&var_14h, 0x4aca34);\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\n        *arg_8h = var_4h + 1;\n    }\n    iVar4 = fcn.00417299(3);\n    piVar2 = *arg_8h;\n    *(iVar4 + 4) = piVar1;\n    *(iVar4 + 0xc) = piVar2 - piVar1 >> 1;\n    **arg_8h = 0;\n    *arg_8h = *arg_8h + 3;\n    return;\n}\n",
        "token_count": 361
    },
    "0042fb70": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042fb70(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t *in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar2;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_8h = *in_ECX & 0x3f;\n    uVar1 = *in_ECX + arg_8h;\n    uVar2 = 0x40 - var_8h;\n    *in_ECX = uVar1;\n    if (uVar1 < arg_8h) {\n        in_ECX[1] = in_ECX[1] + 1;\n    }\n    if ((var_8h != 0) && (uVar2 <= arg_8h)) {\n        fcn.00452a10(in_ECX + var_8h + 0x30);\n        fcn.0042fdf0();\n        arg_8h = arg_8h - uVar2;\n        in_EDX = in_EDX + uVar2;\n        var_8h = 0;\n    }\n    if (0x3f < arg_8h) {\n        uVar1 = arg_8h >> 6;\n        do {\n            fcn.0042fdf0();\n            arg_8h = arg_8h - 0x40;\n            in_EDX = in_EDX + 0x40;\n            uVar1 = uVar1 - 1;\n        } while (uVar1 != 0);\n    }\n    if (arg_8h != 0) {\n        fcn.00452a10(in_ECX + var_8h + 0x30, in_EDX, arg_8h);\n    }\n    return;\n}\n",
        "token_count": 396
    },
    "00434550": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434550(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *in_ECX;\n    \n    uVar1 = in_ECX[1];\n    if ((arg_8h < uVar1) && (uVar2 = *in_ECX,  uVar2 <= arg_8h)) {\n        if (uVar1 == in_ECX[2]) {\n            fcn.00434990(uVar1);\n        }\n        fcn.00434d20(in_ECX[1], ((arg_8h - uVar2) / 0x30) * 0x30 + *in_ECX);\n        in_ECX[1] = in_ECX[1] + 0x30;\n        return;\n    }\n    if (uVar1 == in_ECX[2]) {\n        fcn.00434990(uVar1);\n    }\n    fcn.00434d20(in_ECX[1], arg_8h);\n    in_ECX[1] = in_ECX[1] + 0x30;\n    return;\n}\n",
        "token_count": 253
    },
    "00434bc0": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00434bc0(int32_t *param_1, uint32_t param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    uint *puVar5;\n    int32_t *in_FS_OFFSET;\n    uint32_t var_8h;\n    uint var_10h;\n    uint var_ch;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48b480;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    iVar3 = 0;\n    if ((var_8h != 0) && ((0x5555555 < var_8h || (iVar3 = fcn.0045306d(var_8h * 0x30),  iVar3 == 0)))) {\n        fcn.0044e7ba();\n    }\n    var_4h = 0;\n    fcn.004350a0(iVar3);\n    puVar1 = param_1[1];\n    puVar5 = *param_1;\n    iVar2 = puVar1 - puVar5;\n    if (puVar5 != NULL) {\n        if (puVar5 != puVar1) {\n            puVar4 = puVar5 + 0xb;\n            do {\n                if (7 < *puVar4) {\n                    fcn.00452a07(puVar4[-5]);\n                }\n                *puVar4 = 7;\n                puVar4[-1] = 0;\n                *(puVar4 + -5) = 0;\n                if (7 < puVar4[-6]) {\n                    fcn.00452a07(*puVar5);\n                }\n                puVar4[-6] = 7;\n                puVar4[-7] = 0;\n                *puVar5 = 0;\n                puVar5 = puVar5 + 0xc;\n                puVar4 = puVar4 + 0xc;\n            } while (puVar5 != puVar1);\n        }\n        fcn.00452a07(*param_1);\n    }\n    param_1[2] = var_8h * 0x30 + iVar3;\n    param_1[1] = (iVar2 / 0x30) * 0x30 + iVar3;\n    *param_1 = iVar3;\n    *in_FS_OFFSET = var_ch_2;\n    return;\n}\n",
        "token_count": 593
    },
    "004350a0": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nushort * __fastcall fcn.004350a0(int32_t param_1, int32_t param_2, ushort *param_3)\n\n{\n    int32_t *in_FS_OFFSET;\n    ushort *var_8h;\n    uint var_10h;\n    uint var_ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x48b319;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    var_4h._1_3_ = 0;\n    for (; param_1 != param_2; param_1 = param_1 + 0x30) {\n        var_4h._0_1_ = 1;\n        if (var_8h != NULL) {\n            *(var_8h + 10) = 7;\n            *(var_8h + 8) = 0;\n            *var_8h = 0;\n            fcn.00402450(param_1, 0, 0xffffffff);\n            var_4h._0_1_ = 2;\n            *(var_8h + 0x16) = 7;\n            *(var_8h + 0x14) = 0;\n            var_8h[0xc] = 0;\n            fcn.00402450(param_1 + 0x18, 0, 0xffffffff);\n        }\n        var_8h = var_8h + 0x18;\n    }\n    *in_FS_OFFSET = var_ch_2;\n    return var_8h;\n}\n",
        "token_count": 385
    },
    "00416d2d": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00416d2d(int16_t **arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    code *var_14h;\n    char *var_8h;\n    int16_t *var_4h;\n    \n    while( true ) {\n        var_4h = *arg_8h;\n        if ((*var_4h == 0x3f) && (var_4h[1] == 0x3e)) break;\n        if (*var_4h == 0) {\n            fcn.00453bd4();\n            var_14h = vtable.boost::property_tree::detail::rapidxml::parse_error.0;\n            var_8h = \"unexpected end of data\";\n            fcn.0045b275(&var_14h, 0x4aca34);\n            pcVar1 = swi(3);\n            uVar2 = (*pcVar1)();\n            return uVar2;\n        }\n        *arg_8h = var_4h + 1;\n    }\n    *arg_8h = *arg_8h + 2;\n    return 0;\n}\n",
        "token_count": 257
    },
    "00458570": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint32_t * fcn.00458570(uint32_t *param_1, uint32_t *param_2, uint32_t param_3)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    uint32_t *puVar6;\n    \n    if (param_3 != 0) {\n        uVar4 = param_1 & 3;\n        puVar5 = param_1;\n        while (uVar4 != 0) {\n            uVar1 = *puVar5;\n            puVar5 = puVar5 + 1;\n            if (uVar1 == 0) goto code_r0x004585cd;\n            uVar4 = puVar5 & 3;\n        }\n        do {\n            do {\n                puVar6 = puVar5;\n                puVar5 = puVar6 + 1;\n            } while (((*puVar6 ^ 0xffffffff ^ *puVar6 + 0x7efefeff) & 0x81010100) == 0);\n            uVar4 = *puVar6;\n            if (uVar4 == '\\0') goto code_r0x004585df;\n            if (uVar4 >> 8 == '\\0') {\n                puVar6 = puVar6 + 1;\n                goto code_r0x004585df;\n            }\n            if ((uVar4 & 0xff0000) == 0) {\n                puVar6 = puVar6 + 2;\n                goto code_r0x004585df;\n            }\n        } while ((uVar4 & 0xff000000) != 0);\ncode_r0x004585cd:\n        puVar6 = puVar5 + -1;\ncode_r0x004585df:\n        if ((param_2 & 3) == 0) {\n            uVar3 = param_3 >> 2;\n        }\n        else {\n            do {\n                uVar1 = *param_2;\n                uVar4 = uVar1;\n                param_2 = param_2 + 1;\n                if (uVar1 == 0) goto code_r0x0045863a;\n                *puVar6 = uVar1;\n                puVar6 = puVar6 + 1;\n                param_3 = param_3 - 1;\n                if (param_3 == 0) goto code_r0x00458630;\n            } while ((param_2 & 3) != 0);\n            uVar3 = param_3 >> 2;\n        }\n        for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n            uVar2 = *param_2;\n            uVar4 = *param_2;\n            param_2 = param_2 + 1;\n            if (((uVar2 ^ 0xffffffff ^ uVar2 + 0x7efefeff) & 0x81010100) != 0) {\n                if (uVar4 == '\\0') {\ncode_r0x0045863a:\n                    *puVar6 = uVar4;\n                    return param_1;\n                }\n                if (uVar4 >> 8 == '\\0') {\n                    *puVar6 = uVar4;\n                    return param_1;\n                }\n                if ((uVar4 & 0xff0000) == 0) {\n                    *puVar6 = uVar4;\n                    *(puVar6 + 2) = 0;\n                    return param_1;\n                }\n                if ((uVar4 & 0xff000000) == 0) {\n                    *puVar6 = uVar4;\n                    return param_1;\n                }\n            }\n            *puVar6 = uVar4;\n            puVar6 = puVar6 + 1;\n        }\n        for (param_3 = param_3 & 3; param_3 != 0; param_3 = param_3 - 1) {\n            uVar1 = *param_2;\n            param_2 = param_2 + 1;\n            *puVar6 = uVar1;\n            puVar6 = puVar6 + 1;\n            if (uVar1 == 0) {\n                return param_1;\n            }\n        }\ncode_r0x00458630:\n        *puVar6 = param_3;\n    }\n    return param_1;\n}\n",
        "token_count": 968
    },
    "004489b0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004489b0(int32_t param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    ushort *puVar1;\n    int32_t iVar2;\n    \n    if (param_1 != 0) {\n        iVar2 = (param_1 - 1U >> 2) + 1;\n        puVar1 = in_EAX + 2;\n        do {\n            iVar2 = iVar2 + -1;\n            *param_2 = CONCAT31(CONCAT21(*puVar1, *(puVar1 + -1)), *(puVar1 + -1));\n            puVar1 = puVar1 + 2;\n            param_2 = param_2 + 1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "00449a90": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00449a90(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uchar *puVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    \n    if (param_2 != 0) {\n        puVar2 = param_1 + 1;\n        puVar1 = in_EAX + 2;\n        iVar3 = (param_2 - 1U >> 2) + 1;\n        do {\n            puVar2[-1] = puVar1[-2];\n            *puVar2 = puVar1[-1];\n            puVar2[1] = *puVar1;\n            puVar2[2] = puVar1[1];\n            puVar1 = puVar1 + 4;\n            puVar2 = puVar2 + 4;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 217
    },
    "0044c322": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nchar * __cdecl fcn.0044c322(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    char *pcVar2;\n    int32_t in_ECX;\n    char *pcVar3;\n    char *pcVar4;\n    char *pcVar6;\n    uint var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    char var_2h;\n    uint var_1h;\n    char *pcVar5;\n    \n    var_8h = *(in_ECX + 0x7c);\n    uVar1 = *(in_ECX + 0x6c);\n    pcVar3 = *(in_ECX + 0x38) + uVar1;\n    pcVar2 = *(in_ECX + 0x78);\n    if (*(in_ECX + 0x2c) - 0x106U < uVar1) {\n        var_10h = (uVar1 - *(in_ECX + 0x2c)) + 0x106;\n    }\n    else {\n        var_10h = 0;\n    }\n    var_1h._0_1_ = pcVar3[pcVar2 + -1];\n    var_2h = pcVar3[pcVar2];\n    if (*(in_ECX + 0x8c) <= pcVar2) {\n        var_8h = var_8h >> 2;\n    }\n    var_ch = *(in_ECX + 0x90);\n    if (*(in_ECX + 0x74) < *(in_ECX + 0x90)) {\n        var_ch = *(in_ECX + 0x74);\n    }\n    do {\n        pcVar6 = *(in_ECX + 0x38) + arg_8h;\n        if ((((pcVar6[pcVar2] == var_2h) && (pcVar6[pcVar2 + -1] == var_1h)) && (*pcVar6 == *pcVar3)) &&\n           (pcVar6[1] == pcVar3[1])) {\n            pcVar6 = pcVar6 + 2;\n            pcVar5 = pcVar3 + 2;\n            while (((((pcVar4 = pcVar5 + 1,  *pcVar4 == pcVar6[1] && (pcVar4 = pcVar5 + 2,  *pcVar4 == pcVar6[2])) &&\n                     ((pcVar4 = pcVar5 + 3,  *pcVar4 == pcVar6[3] &&\n                      ((pcVar4 = pcVar5 + 4,  *pcVar4 == pcVar6[4] && (pcVar4 = pcVar5 + 5,  *pcVar4 == pcVar6[5]))))))\n                    && (pcVar4 = pcVar5 + 6,  *pcVar4 == pcVar6[6])) && (pcVar4 = pcVar5 + 7,  *pcVar4 == pcVar6[7]))) {\n                pcVar4 = pcVar5 + 8;\n                pcVar6 = pcVar6 + 8;\n                if ((*pcVar4 != *pcVar6) || (pcVar5 = pcVar4,  pcVar3 + 0x102 <= pcVar4)) break;\n            }\n            pcVar4 = pcVar4 + (0x102 - (pcVar3 + 0x102));\n            if (pcVar2 < pcVar4) {\n                *(in_ECX + 0x70) = arg_8h;\n                if (var_ch <= pcVar4) {\ncode_r0x0044c459:\n                    pcVar2 = *(in_ECX + 0x74);\n                    if (pcVar4 <= *(in_ECX + 0x74)) {\n                        pcVar2 = pcVar4;\n                    }\n                    return pcVar2;\n                }\n                var_1h._0_1_ = (pcVar3 + pcVar4)[-1];\n                var_2h = pcVar3[pcVar4];\n                pcVar2 = pcVar4;\n            }\n        }\n        pcVar4 = pcVar2;\n        arg_8h = *(*(in_ECX + 0x40) + (*(in_ECX + 0x34) & arg_8h) * 2);\n        if ((arg_8h <= var_10h) || (var_8h = var_8h - 1,  pcVar2 = pcVar4,  var_8h == 0)) goto code_r0x0044c459;\n    } while( true );\n}\n",
        "token_count": 1049
    },
    "00418875": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418875(uint16_t **param_1, uint32_t param_2)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    uint16_t *puVar3;\n    code *var_14h;\n    char *var_8h;\n    uint16_t *var_4h;\n    \n    if (param_2 < 0x80) {\n        puVar3 = *param_1;\n        *puVar3 = param_2 & 0xff;\n        puVar3 = puVar3 + 1;\n    }\n    else {\n        uVar2 = param_2;\n        if (param_2 < 0x800) {\n            puVar3 = *param_1;\n            puVar3[1] = uVar2 & 0x3f | 0x80;\n            *puVar3 = param_2 >> 6 | 0xc0;\n            puVar3 = puVar3 + 2;\n        }\n        else if (param_2 < 0x10000) {\n            puVar3 = *param_1;\n            puVar3[2] = uVar2 & 0x3f | 0x80;\n            puVar3[1] = param_2 >> 6 & 0x3f | 0x80;\n            *puVar3 = param_2 >> 0xc | 0xe0;\n            puVar3 = puVar3 + 3;\n        }\n        else {\n            if (0x10ffff < param_2) {\n                var_4h = *param_1;\n                fcn.00453bd4();\n                var_14h = vtable.boost::property_tree::detail::rapidxml::parse_error.0;\n                var_8h = \"invalid numeric character entity\";\n                fcn.0045b275(&var_14h, 0x4aca34);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            puVar3 = *param_1;\n            puVar3[3] = uVar2 & 0x3f | 0x80;\n            puVar3[2] = param_2 >> 6 & 0x3f | 0x80;\n            puVar3[1] = param_2 >> 0xc & 0x3f | 0x80;\n            *puVar3 = param_2 >> 0x12 | 0xf0;\n            puVar3 = puVar3 + 4;\n        }\n    }\n    *param_1 = puVar3;\n    return;\n}\n",
        "token_count": 575
    },
    "00443ee0": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.00443ee0(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uchar *puVar6;\n    \n    iVar4 = 0;\n    if (0 < param_3) {\n        puVar6 = param_2 + 2;\n        do {\n            iVar1 = iVar4 + 1;\n            uVar2 = *(param_1 + -1 + iVar1);\n            uVar3 = uVar2 << 8;\n            if (param_3 > iVar1) {\n                uVar3 = CONCAT11(uVar2, *(iVar4 + 1 + param_1));\n            }\n            uVar3 = uVar3 << 8;\n            if (iVar4 + 2 < param_3) {\n                uVar5 = *(iVar4 + 2 + param_1);\n                uVar3 = uVar3 | uVar5;\n                uVar5 = uVar5 & 0x3f;\n            }\n            else {\n                uVar5 = 0x40;\n            }\n            puVar6[1] = *(uVar5 + 0x490560);\n            if (param_3 <= iVar1) {\n                uVar5 = 0x40;\n            }\n            else {\n                uVar5 = uVar3 >> 6 & 0x3f;\n            }\n            *puVar6 = *(uVar5 + 0x490560);\n            puVar6[-1] = *((uVar3 >> 0xc & 0x3f) + 0x490560);\n            puVar6[-2] = *((uVar3 >> 0x12) + 0x490560);\n            iVar4 = iVar4 + 3;\n            puVar6 = puVar6 + 4;\n        } while (iVar4 < param_3);\n    }\n    return;\n}\n",
        "token_count": 445
    },
    "004490c0": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.004490c0(int32_t param_1, int32_t param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    \n    uVar5 = *(param_1 + 0x10) + param_3 * 8;\n    uVar1 = *(param_1 + 0x10) >> 3 & 0x3f;\n    *(param_1 + 0x10) = uVar5;\n    if (uVar5 < param_3 * 8) {\n        *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + (param_3 >> 0x1d);\n    uVar5 = -uVar1 + 0x40;\n    if (param_3 < uVar5) {\n        uVar5 = 0;\n    }\n    else {\n        fcn.00449ad0();\n        fcn.00448a10();\n        for (uVar1 = -uVar1 + 0x7f; uVar1 < param_3; uVar1 = uVar1 + 0x40) {\n            fcn.00448a10();\n            uVar5 = uVar5 + 0x40;\n        }\n        uVar1 = 0;\n    }\n    puVar2 = uVar1 + 0x18 + param_1;\n    iVar4 = param_3 - uVar5;\n    if (iVar4 != 0) {\n        iVar3 = (param_2 + uVar5) - puVar2;\n        do {\n            *puVar2 = puVar2[iVar3];\n            puVar2 = puVar2 + 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    return;\n}\n",
        "token_count": 454
    },
    "00449160": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.00449160(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint in_stack_fffffff4;\n    \n    fcn.00449a90();\n    uVar1 = *(param_2 + 0x10) >> 3 & 0x3f;\n    iVar2 = 0x38;\n    if (0x37 < uVar1) {\n        iVar2 = 0x78;\n    }\n    fcn.004490c0(param_2, 0x490cb8, iVar2 - uVar1);\n    fcn.004490c0(param_2, &stack0xfffffff4, 8);\n    fcn.00449a90();\n    fcn.004489f0(0);\n    fcn.004529f8(in_stack_fffffff4);\n    return;\n}\n",
        "token_count": 197
    },
    "00449f80": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.00449f80(int32_t param_1, int32_t param_2, uint32_t param_3)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    \n    uVar5 = *(param_1 + 0x10) + param_3 * 8;\n    uVar2 = *(param_1 + 0x10) >> 3 & 0x3f;\n    *(param_1 + 0x10) = uVar5;\n    if (uVar5 < param_3 * 8) {\n        *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + (param_3 >> 0x1d);\n    uVar5 = -uVar2 + 0x40;\n    if (param_3 < uVar5) {\n        uVar5 = 0;\n    }\n    else {\n        fcn.00449ad0();\n        fcn.00449af0(param_1);\n        for (uVar2 = -uVar2 + 0x7f; uVar2 < param_3; uVar2 = uVar2 + 0x40) {\n            fcn.00449af0(param_1);\n            uVar5 = uVar5 + 0x40;\n        }\n        uVar2 = 0;\n    }\n    iVar4 = param_3 - uVar5;\n    puVar1 = uVar2 + 0x18 + param_1;\n    if (iVar4 != 0) {\n        iVar3 = (param_2 + uVar5) - puVar1;\n        do {\n            *puVar1 = puVar1[iVar3];\n            puVar1 = puVar1 + 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    return;\n}\n",
        "token_count": 460
    },
    "0044a020": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.0044a020(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint in_stack_fffffff4;\n    \n    fcn.00449a90();\n    uVar1 = *(param_2 + 0x10) >> 3 & 0x3f;\n    iVar2 = 0x38;\n    if (0x37 < uVar1) {\n        iVar2 = 0x78;\n    }\n    fcn.00449f80(param_2, 0x491678, iVar2 - uVar1);\n    fcn.00449f80(param_2, &stack0xfffffff4, 8);\n    fcn.00449a90();\n    fcn.004489f0(0);\n    fcn.004529f8(in_stack_fffffff4);\n    return;\n}\n",
        "token_count": 197
    },
    "0044e362": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nvoid fcn.0044e362(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = *(param_1 + 0x16bc);\n    *(param_1 + 0x16b8) = *(param_1 + 0x16b8) | 2 << (iVar1 & 0x1f);\n    if (iVar1 < 0xe) {\n        *(param_1 + 0x16bc) = iVar1 + 3;\n    }\n    else {\n        *(*(param_1 + 8) + *(param_1 + 0x14)) = *(param_1 + 0x16b8);\n        *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n        *(*(param_1 + 0x14) + *(param_1 + 8)) = *(param_1 + 0x16b9);\n        iVar1 = *(param_1 + 0x16bc);\n        *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n        *(param_1 + 0x16bc) = iVar1 + -0xd;\n        *(param_1 + 0x16b8) = 2 >> (0x10U - iVar1 & 0x1f);\n    }\n    iVar1 = *(param_1 + 0x16bc);\n    *(param_1 + 0x16b8) = *(param_1 + 0x16b8) | 0 << (iVar1 & 0x1f);\n    if (iVar1 < 10) {\n        *(param_1 + 0x16bc) = iVar1 + 7;\n    }\n    else {\n        *(*(param_1 + 8) + *(param_1 + 0x14)) = *(param_1 + 0x16b8);\n        *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n        *(*(param_1 + 0x14) + *(param_1 + 8)) = *(param_1 + 0x16b9);\n        iVar1 = *(param_1 + 0x16bc);\n        *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n        *(param_1 + 0x16bc) = iVar1 + -9;\n        *(param_1 + 0x16b8) = 0 >> (0x10U - iVar1 & 0x1f);\n    }\n    iVar2 = fcn.0044de77();\n    iVar1 = *(iVar2 + 0x16bc);\n    if ((*(iVar2 + 0x16b4) - iVar1) + 0xb < 9) {\n        *(iVar2 + 0x16b8) = *(iVar2 + 0x16b8) | 2 << (iVar1 & 0x1f);\n        if (iVar1 < 0xe) {\n            *(iVar2 + 0x16bc) = iVar1 + 3;\n        }\n        else {\n            *(*(iVar2 + 8) + *(iVar2 + 0x14)) = *(iVar2 + 0x16b8);\n            *(iVar2 + 0x14) = *(iVar2 + 0x14) + 1;\n            *(*(iVar2 + 0x14) + *(iVar2 + 8)) = *(iVar2 + 0x16b9);\n            iVar1 = *(iVar2 + 0x16bc);\n            *(iVar2 + 0x14) = *(iVar2 + 0x14) + 1;\n            *(iVar2 + 0x16bc) = iVar1 + -0xd;\n            *(iVar2 + 0x16b8) = 2 >> (0x10U - iVar1 & 0x1f);\n        }\n        iVar1 = *(iVar2 + 0x16bc);\n        *(iVar2 + 0x16b8) = *(iVar2 + 0x16b8) | 0 << (iVar1 & 0x1f);\n        if (iVar1 < 10) {\n            *(iVar2 + 0x16bc) = iVar1 + 7;\n        }\n        else {\n            *(*(iVar2 + 8) + *(iVar2 + 0x14)) = *(iVar2 + 0x16b8);\n            *(iVar2 + 0x14) = *(iVar2 + 0x14) + 1;\n            *(*(iVar2 + 0x14) + *(iVar2 + 8)) = *(iVar2 + 0x16b9);\n            iVar1 = *(iVar2 + 0x16bc);\n            *(iVar2 + 0x14) = *(iVar2 + 0x14) + 1;\n            *(iVar2 + 0x16bc) = iVar1 + -9;\n            *(iVar2 + 0x16b8) = 0 >> (0x10U - iVar1 & 0x1f);\n        }\n        iVar2 = fcn.0044de77();\n    }\n    *(iVar2 + 0x16b4) = 7;\n    return;\n}\n",
        "token_count": 1183
    },
    "00425b20": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00425b20(uint32_t arg_8h, code **arg_ch)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint64_t *in_ECX;\n    uint8_t *in_EDX;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (4 < arg_8h) {\n        uVar7 = *(in_EDX + 1);\n        if (uVar7 < 0x1000) {\n            uVar7 = 0x1000;\n        }\n        uVar1 = *in_EDX;\n        if (uVar1 < 0xe1) {\n            uVar4 = uVar1 / 9;\n            uVar2 = uVar1 % 9;\n            uVar3 = uVar4 % 5;\n            iVar6 = (0x300 << uVar2 + uVar3) + 0x736;\n            if ((*(in_ECX + 2) == 0) || (iVar6 != *(in_ECX + 0x54))) {\n                (*arg_ch[1])(arg_ch, *(in_ECX + 2));\n                *(in_ECX + 2) = 0;\n                iVar5 = (**arg_ch)(arg_ch, iVar6 * 2);\n                *(in_ECX + 2) = iVar5;\n                *(in_ECX + 0x54) = iVar6;\n                if (iVar5 == 0) {\n                    return 2;\n                }\n            }\n            *in_ECX = uVar2 | uVar3 << 0x20;\n            in_ECX[1] = CONCAT44(uVar7, uVar4 / 5);\n            return 0;\n        }\n    }\n    return 4;\n}\n",
        "token_count": 438
    },
    "0042bfd0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042bfd0(int32_t arg_8h, uint noname_1, uint noname_2, uint arg_14h)\n\n{\n    ulong uVar1;\n    \n    if (arg_8h == 4) {\n        *0x4b965c = 1;\n        uVar1 = (*_sym.imp.ADVAPI32.dll_GetTraceLoggerHandle)(arg_14h);\n        *0x4b9660 = uVar1;\n        *0x4b9664 = uVar1 >> 0x20;\n        return 0;\n    }\n    if (arg_8h == 5) {\n        *0x4b965c = 0;\n    }\n    return 0;\n}\n",
        "token_count": 163
    },
    "00446c10": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00446c10(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    \n    if (*(param_1 + 0x2c) == 4) {\n        if ((*param_2 == '\\0') || (*param_2 == '\\x04')) {\n            cVar1 = param_2[1];\n            if (cVar1 == 'Z') {\n                return 1;\n            }\n            if (cVar1 == '\\\\') {\n                *(param_1 + 0xc) = 0xffffffcb;\n                return 0;\n            }\n            if (cVar1 == ']') {\n                *(param_1 + 0xc) = 0xffffffca;\n                return 0;\n            }\n        }\n    }\n    else {\n        if (*(param_1 + 0x2c) != 5) {\n            *(param_1 + 0xc) = 0xfffffffe;\n            return 0;\n        }\n        if (*param_2 == '\\x05') {\n    // switch table (9 cases) at 0x446cec\n            switch(param_2[1]) {\n            case '\\0':\n                return 1;\n            case '\\x02':\n                *(param_1 + 0xc) = 0xffffffc9;\n                return 0;\n            case '\\x03':\n                *(param_1 + 0xc) = 0xffffffc8;\n                return 0;\n            case '\\x04':\n                *(param_1 + 0xc) = 0xffffffc7;\n                return 0;\n            case '\\x05':\n                *(param_1 + 0xc) = 0xffffffc6;\n                return 0;\n            case '\\x06':\n                *(param_1 + 0xc) = 0xffffffc5;\n                return 0;\n            case '\\a':\n                *(param_1 + 0xc) = 0xffffffc4;\n                return 0;\n            case '\\b':\n                *(param_1 + 0xc) = 0xffffffc3;\n                return 0;\n            }\n        }\n    }\n    *(param_1 + 0xc) = 0xffffffcd;\n    return 0;\n}\n",
        "token_count": 483
    },
    "00436f77": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint fcn.00436f77(int32_t param_1, uint32_t param_2, char *param_3, int32_t param_4)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (((param_3 == NULL) || (*param_3 != '1')) || (param_4 != 0x38)) {\n        return 0xfffffffa;\n    }\n    if (param_1 != 0) {\n        *(param_1 + 0x18) = 0;\n        if (*(param_1 + 0x20) == 0) {\n            *(param_1 + 0x20) = 0x4384ce;\n            *(param_1 + 0x28) = 0;\n        }\n        if (*(param_1 + 0x24) == 0) {\n            *(param_1 + 0x24) = 0x4384df;\n        }\n        iVar1 = (**(param_1 + 0x20))(*(param_1 + 0x28), 1, 0x2530);\n        if (iVar1 == 0) {\n            return 0xfffffffc;\n        }\n        *(param_1 + 0x1c) = iVar1;\n        if (param_2 < 0) {\n            *(iVar1 + 8) = 0;\n            param_2 = -param_2;\n        }\n        else {\n            *(iVar1 + 8) = (param_2 >> 4) + 1;\n            if (param_2 < 0x30) {\n                param_2 = param_2 & 0xf;\n            }\n        }\n        if (param_2 - 8 < 8) {\n            *(iVar1 + 0x24) = param_2;\n            *(iVar1 + 0x34) = 0;\n            uVar2 = fcn.00436f1c(param_1);\n            return uVar2;\n        }\n        (**(param_1 + 0x24))(*(param_1 + 0x28), iVar1);\n        *(param_1 + 0x1c) = 0;\n    }\n    return 0xfffffffe;\n}\n",
        "token_count": 484
    },
    "00447b20": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.00447b20(int32_t param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t arg_8h;\n    uchar auStack132 [128];\n    uint32_t uStack4;\n    \n    uStack4 = *0x4b4f00 ^ auStack132;\n    arg_8h = param_1;\n    fcn.00447a60();\n    fcn.004499a0(param_2, param_3, &stack0xffffff74, 1);\n    fcn.00447a60(param_1 + 7, &stack0xffffff74);\n    fcn.004499a0(param_2, param_3 + 8, &stack0xffffff6c, 1);\n    fcn.00447a60(param_1 + 0xe, &stack0xffffff6c);\n    fcn.004499a0(param_2, param_3 + 0x10, &stack0xffffff64, 1);\n    fcn.004529f8(arg_8h);\n    return;\n}\n",
        "token_count": 237
    },
    "00479ae0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00479ae0(int32_t param_1, uint8_t *param_2)\n\n{\n    uint8_t *in_EAX;\n    uint uVar1;\n    uint8_t **unaff_ESI;\n    \n    if (in_EAX == param_2) {\n        return 0xffffffff;\n    }\n    // switch table (8 cases) at 0x479b90\n    switch(*(*in_EAX + 0x4c + param_1)) {\n    case 0x14:\n        *unaff_ESI = in_EAX + 1;\n        return 0x21;\n    default:\ncode_r0x00479b88:\n        *unaff_ESI = in_EAX;\n        return 0;\n    case 0x16:\n    case 0x18:\n        in_EAX = in_EAX + 1;\n        if (in_EAX == param_2) {\n            return 0xffffffff;\n        }\n        break;\n    case 0x1b:\n        uVar1 = fcn.00479990(param_2);\n        return uVar1;\n    }\ncode_r0x00479b30:\n    // switch table (22 cases) at 0x479bb0\n    switch(*(*in_EAX + 0x4c + param_1)) {\n    case 0x16:\n    case 0x18:\n        goto code_r0x00479b4e;\n    case 0x1e:\n        if (in_EAX + 1 == param_2) {\n            return 0xffffffff;\n        }\n    // switch table (22 cases) at 0x479bd8\n        switch(*(in_EAX[1] + 0x4c + param_1)) {\n        case 9:\n        case 10:\n        case 0x15:\n        case 0x1e:\n            goto code_r0x00479b88;\n        }\n    case 9:\n    case 10:\n    case 0x15:\n        *unaff_ESI = in_EAX;\n        return 0x10;\n    }\n    goto code_r0x00479b88;\ncode_r0x00479b4e:\n    in_EAX = in_EAX + 1;\n    if (in_EAX == param_2) {\n        return 0xffffffff;\n    }\n    goto code_r0x00479b30;\n}\n",
        "token_count": 522
    },
    "0047d400": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0047d400(int32_t param_1, uint8_t *param_2)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    uint uVar2;\n    uint8_t **unaff_ESI;\n    ulong uVar3;\n    uint64_t uVar4;\n    \n    if (param_2 == in_EAX) {\n        return 0xffffffff;\n    }\n    if (param_2[1] == 0) {\n        uVar1 = *(*param_2 + 0x4c + param_1);\n    }\n    else {\n        uVar3 = fcn.0047cd30();\n        param_2 = uVar3 >> 0x20;\n        uVar1 = uVar3;\n    }\n    // switch table (8 cases) at 0x47d4e8\n    switch(uVar1) {\n    case 0x14:\n        *unaff_ESI = param_2 + 2;\n        return 0x21;\n    default:\ncode_r0x0047d4de:\n        *unaff_ESI = param_2;\n        return 0;\n    case 0x16:\n    case 0x18:\n        param_2 = param_2 + 2;\n        if (param_2 == in_EAX) {\n            return 0xffffffff;\n        }\n        break;\n    case 0x1b:\n        uVar2 = fcn.0047d2f0();\n        return uVar2;\n    }\ncode_r0x0047d460:\n    if (param_2[1] == 0) {\n        uVar4 = CONCAT44(param_2, *(*param_2 + 0x4c + param_1));\n    }\n    else {\n        uVar4 = fcn.0047cd30();\n    }\n    param_2 = uVar4 >> 0x20;\n    // switch table (22 cases) at 0x47d508\n    switch(uVar4) {\n    case 9:\n    case 10:\n    case 0x15:\n        break;\n    default:\n        goto code_r0x0047d4de;\n    case 0x16:\n    case 0x18:\n        goto code_r0x0047d48e;\n    case 0x1e:\n        if (param_2 + 2 == in_EAX) {\n            return 0xffffffff;\n        }\n        if (param_2[3] == 0) {\n            uVar4 = uVar4 & 0xffffffff00000000 | *(param_2[2] + 0x4c + param_1);\n        }\n        else {\n            uVar4 = fcn.0047cd30();\n        }\n        param_2 = uVar4 >> 0x20;\n    // switch table (22 cases) at 0x47d530\n        switch(uVar4) {\n        case 9:\n        case 10:\n        case 0x15:\n        case 0x1e:\n            goto code_r0x0047d4de;\n        }\n    }\n    *unaff_ESI = param_2;\n    return 0x10;\ncode_r0x0047d48e:\n    param_2 = param_2 + 2;\n    if (param_2 == in_EAX) {\n        return 0xffffffff;\n    }\n    goto code_r0x0047d460;\n}\n",
        "token_count": 750
    },
    "004802f0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004802f0(uint param_1, char *param_2)\n\n{\n    char *in_EAX;\n    uint32_t uVar1;\n    uint uVar2;\n    char **unaff_EBX;\n    int32_t unaff_ESI;\n    ulong uVar3;\n    uint64_t uVar4;\n    \n    if (param_2 == in_EAX) {\n        return 0xffffffff;\n    }\n    if (*param_2 == '\\0') {\n        uVar1 = *(param_2[1] + 0x4c + unaff_ESI);\n    }\n    else {\n        uVar3 = fcn.0047cd30();\n        param_2 = uVar3 >> 0x20;\n        uVar1 = uVar3;\n    }\n    // switch table (8 cases) at 0x4803d4\n    switch(uVar1) {\n    case 0x14:\n        *unaff_EBX = param_2 + 2;\n        return 0x21;\n    default:\ncode_r0x004803ce:\n        *unaff_EBX = param_2;\n        return 0;\n    case 0x16:\n    case 0x18:\n        param_2 = param_2 + 2;\n        if (param_2 == in_EAX) {\n            return 0xffffffff;\n        }\n        break;\n    case 0x1b:\n        uVar2 = fcn.004801d0();\n        return uVar2;\n    }\ncode_r0x00480350:\n    if (*param_2 == '\\0') {\n        uVar4 = CONCAT44(param_2, *(param_2[1] + 0x4c + unaff_ESI));\n    }\n    else {\n        uVar4 = fcn.0047cd30();\n    }\n    param_2 = uVar4 >> 0x20;\n    // switch table (22 cases) at 0x4803f4\n    switch(uVar4) {\n    case 9:\n    case 10:\n    case 0x15:\n        break;\n    default:\n        goto code_r0x004803ce;\n    case 0x16:\n    case 0x18:\n        goto code_r0x0048037f;\n    case 0x1e:\n        if (param_2 + 2 == in_EAX) {\n            return 0xffffffff;\n        }\n        if (param_2[2] == '\\0') {\n            uVar4 = uVar4 & 0xffffffff00000000 | *(param_2[3] + 0x4c + unaff_ESI);\n        }\n        else {\n            uVar4 = fcn.0047cd30();\n        }\n        param_2 = uVar4 >> 0x20;\n    // switch table (22 cases) at 0x48041c\n        switch(uVar4) {\n        case 9:\n        case 10:\n        case 0x15:\n        case 0x1e:\n            goto code_r0x004803ce;\n        }\n    }\n    *unaff_EBX = param_2;\n    return 0x10;\ncode_r0x0048037f:\n    param_2 = param_2 + 2;\n    if (param_2 == in_EAX) {\n        return 0xffffffff;\n    }\n    goto code_r0x00480350;\n}\n",
        "token_count": 742
    },
    "0043b420": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0043b420(uint *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint in_stack_ffffff8c;\n    uint8_t auStack112 [29];\n    int32_t aiStack83 [11];\n    uchar auStack36 [2];\n    uint8_t auStack34 [3];\n    uint uStack31;\n    uint uStack27;\n    uint uStack23;\n    uint uStack19;\n    uint uStack15;\n    uint uStack11;\n    ushort uStack7;\n    uint32_t uStack4;\n    \n    uStack4 = *0x4b4f00 ^ &stack0xffffff8c;\n    stack0xffffffdd = 0;\n    uStack31 = 0;\n    uStack27 = 0;\n    uStack23 = 0;\n    uStack19 = 0;\n    uStack15 = 0;\n    uStack11 = 0;\n    uStack7 = 0;\n    auStack36[0] = 0;\n    puVar6 = &stack0xffffff8c;\n    for (iVar3 = 0x14; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = *param_1;\n        param_1 = param_1 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    fcn.0043bc60(&stack0xffffff8e, 0x3e);\n    uVar5 = 0x1f;\n    piVar1 = auStack36;\n    piVar4 = &stack0xffffff8e;\n    do {\n        if (*piVar4 != *piVar1) goto code_r0x0043b49b;\n        uVar5 = uVar5 - 4;\n        piVar1 = piVar1 + 1;\n        piVar4 = piVar4 + 1;\n    } while (3 < uVar5);\n    if (uVar5 == 0) {\ncode_r0x0043b4f8:\n        iVar2 = 0;\n    }\n    else {\ncode_r0x0043b49b:\n        iVar3 = *piVar4 - *piVar1;\n        if (iVar3 == 0) {\n            if (uVar5 == 1) goto code_r0x0043b4f8;\n            iVar3 = *(piVar4 + 1) - *(piVar1 + 1);\n            if (iVar3 == 0) {\n                if (uVar5 == 2) goto code_r0x0043b4f8;\n                iVar3 = *(piVar4 + 2) - *(piVar1 + 2);\n                if (iVar3 == 0) {\n                    if ((uVar5 == 3) || (iVar3 = *(piVar4 + 3) - *(piVar1 + 3),  iVar3 == 0)) goto code_r0x0043b4f8;\n                }\n            }\n        }\n        iVar2 = 1;\n        if (iVar3 < 1) {\n            iVar2 = -1;\n        }\n    }\n    if (iVar2 != 0) {\n        fcn.004529f8(in_stack_ffffff8c);\n        return;\n    }\n    uVar5 = 0x1f;\n    piVar1 = auStack36;\n    piVar4 = aiStack83;\n    do {\n        if (*piVar4 != *piVar1) break;\n        uVar5 = uVar5 - 4;\n        piVar1 = piVar1 + 1;\n        piVar4 = piVar4 + 1;\n    } while (3 < uVar5);\n    fcn.004529f8(in_stack_ffffff8c);\n    return;\n}\n",
        "token_count": 859
    },
    "004492a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint fcn.004492a0(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    \n    piVar6 = 0x4915f8;\n    do {\n        uVar1 = 8;\n        piVar3 = param_1;\n        piVar4 = piVar6;\n        do {\n            if (*piVar4 != *piVar3) goto code_r0x004492d8;\n            uVar1 = uVar1 - 4;\n            piVar3 = piVar3 + 1;\n            piVar4 = piVar4 + 1;\n        } while (3 < uVar1);\n        if (uVar1 == 0) {\ncode_r0x00449335:\n            iVar2 = 0;\n        }\n        else {\ncode_r0x004492d8:\n            iVar5 = *piVar4 - *piVar3;\n            if (iVar5 == 0) {\n                if (uVar1 == 1) goto code_r0x00449335;\n                iVar5 = *(piVar4 + 1) - *(piVar3 + 1);\n                if (iVar5 == 0) {\n                    if (uVar1 == 2) goto code_r0x00449335;\n                    iVar5 = *(piVar4 + 2) - *(piVar3 + 2);\n                    if (iVar5 == 0) {\n                        if ((uVar1 == 3) || (iVar5 = *(piVar4 + 3) - *(piVar3 + 3),  iVar5 == 0)) goto code_r0x00449335;\n                    }\n                }\n            }\n            iVar2 = 1;\n            if (iVar5 < 1) {\n                iVar2 = -1;\n            }\n        }\n        if (iVar2 == 0) {\n            return 1;\n        }\n        piVar6 = piVar6 + 2;\n        if (0x491677 < piVar6) {\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 483
    },
    "00435e81": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00435e81(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint unaff_EDI;\n    int32_t var_4h;\n    \n    iVar2 = fcn.00435e06(unaff_EDI, &var_4h);\n    iVar1 = var_4h;\n    if (iVar2 == 0) {\n        iVar2 = fcn.00435e06(unaff_EDI, &var_4h);\n    }\n    iVar3 = var_4h * 0x100;\n    if (iVar2 == 0) {\n        iVar2 = fcn.00435e06(unaff_EDI, &var_4h);\n    }\n    iVar4 = var_4h * 0x10000;\n    if ((iVar2 == 0) && (iVar2 = fcn.00435e06(unaff_EDI, &var_4h),  iVar2 == 0)) {\n        *arg_8h = var_4h * 0x1000000 + iVar1 + iVar3 + iVar4;\n        return;\n    }\n    *arg_8h = 0;\n    return;\n}\n",
        "token_count": 281
    },
    "0042fdf0": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042fdf0(int32_t param_1, uchar *param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    uint32_t uVar21;\n    uint32_t uVar22;\n    uint32_t uVar23;\n    uint32_t uVar24;\n    uint32_t uVar25;\n    uint32_t uVar26;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar17 = CONCAT31(CONCAT21(CONCAT11(*param_2, param_2[1]), param_2[2]), param_2[3]);\n    uVar20 = CONCAT31(CONCAT21(CONCAT11(param_2[4], param_2[5]), param_2[6]), param_2[7]);\n    uVar2 = CONCAT31(CONCAT21(CONCAT11(param_2[8], param_2[9]), param_2[10]), param_2[0xb]);\n    uVar3 = CONCAT31(CONCAT21(CONCAT11(param_2[0xc], param_2[0xd]), param_2[0xe]), param_2[0xf]);\n    uVar4 = CONCAT31(CONCAT21(CONCAT11(param_2[0x10], param_2[0x11]), param_2[0x12]), param_2[0x13]);\n    uVar5 = CONCAT31(CONCAT21(CONCAT11(param_2[0x14], param_2[0x15]), param_2[0x16]), param_2[0x17]);\n    uVar6 = CONCAT31(CONCAT21(CONCAT11(param_2[0x18], param_2[0x19]), param_2[0x1a]), param_2[0x1b]);\n    uVar7 = CONCAT31(CONCAT21(CONCAT11(param_2[0x1c], param_2[0x1d]), param_2[0x1e]), param_2[0x1f]);\n    uVar8 = CONCAT31(CONCAT21(CONCAT11(param_2[0x20], param_2[0x21]), param_2[0x22]), param_2[0x23]);\n    uVar9 = CONCAT31(CONCAT21(CONCAT11(param_2[0x24], param_2[0x25]), param_2[0x26]), param_2[0x27]);\n    uVar10 = CONCAT31(CONCAT21(CONCAT11(param_2[0x28], param_2[0x29]), param_2[0x2a]), param_2[0x2b]);\n    uVar11 = CONCAT31(CONCAT21(CONCAT11(param_2[0x2c], param_2[0x2d]), param_2[0x2e]), param_2[0x2f]);\n    uVar12 = CONCAT31(CONCAT21(CONCAT11(param_2[0x30], param_2[0x31]), param_2[0x32]), param_2[0x33]);\n    uVar13 = CONCAT31(CONCAT21(CONCAT11(param_2[0x34], param_2[0x35]), param_2[0x36]), param_2[0x37]);\n    uVar14 = CONCAT31(CONCAT21(CONCAT11(param_2[0x38], param_2[0x39]), param_2[0x3a]), param_2[0x3b]);\n    uVar15 = CONCAT31(CONCAT21(CONCAT11(param_2[0x3c], param_2[0x3d]), param_2[0x3e]), param_2[0x3f]);\n    uVar1 = *(param_1 + 0xc);\n    uVar18 = uVar17 + 0x5a827999 +\n             ((*(param_1 + 0x14) ^ *(param_1 + 0x10)) & uVar1 ^ *(param_1 + 0x14)) +\n             (*(param_1 + 8) << 5 | *(param_1 + 8) >> 0x1b) + *(param_1 + 0x18);\n    uVar16 = uVar1 >> 2 | uVar1 << 0x1e;\n    uVar22 = uVar20 + (uVar18 * 0x20 | uVar18 >> 0x1b) +\n             ((*(param_1 + 0x10) ^ uVar16) & *(param_1 + 8) ^ *(param_1 + 0x10)) + *(param_1 + 0x14) + 0x5a827999;\n    uVar21 = *(param_1 + 8) >> 2 | *(param_1 + 8) << 0x1e;\n    uVar19 = *(param_1 + 0x10) + 0x5a827999 +\n             ((uVar16 ^ uVar21) & uVar18 ^ uVar16) + (uVar22 * 0x20 | uVar22 >> 0x1b) + uVar2;\n    uVar1 = uVar18 >> 2 | uVar18 * 0x40000000;\n    uVar16 = uVar16 + 0x5a827999 + ((uVar1 ^ uVar21) & uVar22 ^ uVar21) + (uVar19 * 0x20 | uVar19 >> 0x1b) + uVar3;\n    uVar23 = uVar22 >> 2 | uVar22 * 0x40000000;\n    uVar22 = uVar19 >> 2 | uVar19 * 0x40000000;\n    uVar19 = uVar21 + 0x5a827999 + ((uVar1 ^ uVar23) & uVar19 ^ uVar1) + (uVar16 * 0x20 | uVar16 >> 0x1b) + uVar4;\n    uVar18 = uVar16 >> 2 | uVar16 * 0x40000000;\n    uVar1 = uVar1 + 0x5a827999 + ((uVar23 ^ uVar22) & uVar16 ^ uVar23) + (uVar19 * 0x20 | uVar19 >> 0x1b) + uVar5;\n    uVar21 = uVar19 >> 2 | uVar19 * 0x40000000;\n    uVar16 = (uVar1 * 0x20 | uVar1 >> 0x1b) + uVar6 + ((uVar22 ^ uVar18) & uVar19 ^ uVar22) + uVar23 + 0x5a827999;\n    uVar23 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar1 = (uVar16 * 0x20 | uVar16 >> 0x1b) + uVar7 + ((uVar18 ^ uVar21) & uVar1 ^ uVar18) + uVar22 + 0x5a827999;\n    uVar19 = uVar16 >> 2 | uVar16 * 0x40000000;\n    uVar16 = (uVar1 * 0x20 | uVar1 >> 0x1b) + uVar8 + ((uVar23 ^ uVar21) & uVar16 ^ uVar21) + uVar18 + 0x5a827999;\n    uVar18 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar1 = (uVar16 * 0x20 | uVar16 >> 0x1b) + uVar9 + ((uVar23 ^ uVar19) & uVar1 ^ uVar23) + uVar21 + 0x5a827999;\n    uVar21 = uVar16 >> 2 | uVar16 * 0x40000000;\n    uVar16 = (uVar1 * 0x20 | uVar1 >> 0x1b) + uVar10 + ((uVar19 ^ uVar18) & uVar16 ^ uVar19) + uVar23 + 0x5a827999;\n    uVar23 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar1 = (uVar16 * 0x20 | uVar16 >> 0x1b) + uVar11 + ((uVar18 ^ uVar21) & uVar1 ^ uVar18) + uVar19 + 0x5a827999;\n    uVar22 = uVar16 >> 2 | uVar16 * 0x40000000;\n    uVar16 = (uVar1 * 0x20 | uVar1 >> 0x1b) + uVar12 + ((uVar21 ^ uVar23) & uVar16 ^ uVar21) + uVar18 + 0x5a827999;\n    uVar19 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar1 = (uVar16 * 0x20 | uVar16 >> 0x1b) + uVar13 + ((uVar22 ^ uVar23) & uVar1 ^ uVar23) + uVar21 + 0x5a827999;\n    uVar21 = uVar16 >> 2 | uVar16 * 0x40000000;\n    uVar18 = (uVar1 * 0x20 | uVar1 >> 0x1b) + uVar14 + ((uVar22 ^ uVar19) & uVar16 ^ uVar22) + uVar23 + 0x5a827999;\n    uVar23 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar1 = ((uVar19 ^ uVar21) & uVar1 ^ uVar19) + (uVar18 * 0x20 | uVar18 >> 0x1b) + uVar15 + uVar22 + 0x5a827999;\n    uVar17 = uVar13 ^ uVar8 ^ uVar2 ^ uVar17;\n    uVar16 = uVar17 << 1 | uVar17 < 0;\n    uVar22 = uVar18 >> 2 | uVar18 * 0x40000000;\n    uVar19 = uVar19 + 0x5a827999 + ((uVar21 ^ uVar23) & uVar18 ^ uVar21) + (uVar1 * 0x20 | uVar1 >> 0x1b) + uVar16;\n    uVar20 = uVar14 ^ uVar9 ^ uVar3 ^ uVar20;\n    uVar18 = uVar20 << 1 | uVar20 < 0;\n    uVar21 = uVar21 + 0x5a827999 + ((uVar23 ^ uVar22) & uVar1 ^ uVar23) + (uVar19 * 0x20 | uVar19 >> 0x1b) + uVar18;\n    uVar2 = uVar15 ^ uVar10 ^ uVar4 ^ uVar2;\n    uVar17 = uVar2 << 1 | uVar2 < 0;\n    uVar1 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar2 = uVar19 >> 2 | uVar19 * 0x40000000;\n    uVar24 = uVar23 + 0x5a827999 + ((uVar1 ^ uVar22) & uVar19 ^ uVar22) + (uVar21 * 0x20 | uVar21 >> 0x1b) + uVar17;\n    uVar20 = uVar11 ^ uVar5 ^ uVar3 ^ uVar16;\n    uVar20 = uVar20 << 1 | uVar20 < 0;\n    uVar23 = uVar21 >> 2 | uVar21 * 0x40000000;\n    uVar19 = ((uVar2 ^ uVar1) & uVar21 ^ uVar1) + (uVar24 * 0x20 | uVar24 >> 0x1b) + uVar20 + uVar22 + 0x5a827999;\n    uVar3 = uVar12 ^ uVar6 ^ uVar4 ^ uVar18;\n    uVar22 = uVar3 << 1 | uVar3 < 0;\n    uVar25 = uVar24 >> 2 | uVar24 * 0x40000000;\n    uVar3 = uVar13 ^ uVar7 ^ uVar5 ^ uVar17;\n    uVar3 = uVar3 << 1 | uVar3 < 0;\n    uVar4 = (uVar23 ^ uVar2 ^ uVar24) + (uVar19 * 0x20 | uVar19 >> 0x1b) + uVar22 + uVar1 + 0x6ed9eba1;\n    uVar5 = (uVar25 ^ uVar23 ^ uVar19) + (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar3 + uVar2 + 0x6ed9eba1;\n    uVar2 = uVar19 >> 2 | uVar19 * 0x40000000;\n    uVar1 = uVar14 ^ uVar8 ^ uVar6 ^ uVar20;\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    uVar21 = uVar4 >> 2 | uVar4 * 0x40000000;\n    uVar6 = uVar23 + 0x6ed9eba1 + (uVar4 ^ uVar25 ^ uVar2) + (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar1;\n    uVar4 = uVar15 ^ uVar9 ^ uVar7 ^ uVar22;\n    uVar4 = uVar4 << 1 | uVar4 < 0;\n    uVar23 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar7 = uVar25 + 0x6ed9eba1 + (uVar21 ^ uVar5 ^ uVar2) + (uVar6 * 0x20 | uVar6 >> 0x1b) + uVar4;\n    uVar5 = uVar10 ^ uVar8 ^ uVar3 ^ uVar16;\n    uVar5 = uVar5 << 1 | uVar5 < 0;\n    uVar19 = uVar6 >> 2 | uVar6 * 0x40000000;\n    uVar8 = (uVar7 * 0x20 | uVar7 >> 0x1b) + uVar5 + (uVar21 ^ uVar23 ^ uVar6) + uVar2 + 0x6ed9eba1;\n    uVar6 = uVar11 ^ uVar9 ^ uVar1 ^ uVar18;\n    uVar6 = uVar6 << 1 | uVar6 < 0;\n    uVar2 = uVar7 >> 2 | uVar7 * 0x40000000;\n    uVar9 = (uVar8 * 0x20 | uVar8 >> 0x1b) + uVar6 + (uVar23 ^ uVar19 ^ uVar7) + uVar21 + 0x6ed9eba1;\n    uVar7 = uVar12 ^ uVar10 ^ uVar4 ^ uVar17;\n    uVar7 = uVar7 << 1 | uVar7 < 0;\n    uVar21 = uVar8 >> 2 | uVar8 * 0x40000000;\n    uVar10 = (uVar9 * 0x20 | uVar9 >> 0x1b) + uVar7 + (uVar19 ^ uVar2 ^ uVar8) + uVar23 + 0x6ed9eba1;\n    uVar8 = uVar13 ^ uVar11 ^ uVar5 ^ uVar20;\n    uVar8 = uVar8 << 1 | uVar8 < 0;\n    uVar23 = uVar9 >> 2 | uVar9 * 0x40000000;\n    uVar11 = (uVar10 * 0x20 | uVar10 >> 0x1b) + uVar8 + (uVar9 ^ uVar2 ^ uVar21) + uVar19 + 0x6ed9eba1;\n    uVar9 = uVar14 ^ uVar12 ^ uVar6 ^ uVar22;\n    uVar9 = uVar9 << 1 | uVar9 < 0;\n    uVar19 = uVar10 >> 2 | uVar10 * 0x40000000;\n    uVar12 = (uVar11 * 0x20 | uVar11 >> 0x1b) + uVar9 + (uVar23 ^ uVar10 ^ uVar21) + uVar2 + 0x6ed9eba1;\n    uVar10 = uVar15 ^ uVar13 ^ uVar7 ^ uVar3;\n    uVar10 = uVar10 << 1 | uVar10 < 0;\n    uVar2 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar13 = (uVar12 * 0x20 | uVar12 >> 0x1b) + uVar10 + (uVar23 ^ uVar19 ^ uVar11) + uVar21 + 0x6ed9eba1;\n    uVar11 = uVar14 ^ uVar8 ^ uVar1 ^ uVar16;\n    uVar11 = uVar11 << 1 | uVar11 < 0;\n    uVar21 = uVar12 >> 2 | uVar12 * 0x40000000;\n    uVar14 = (uVar13 * 0x20 | uVar13 >> 0x1b) + uVar11 + (uVar19 ^ uVar2 ^ uVar12) + uVar23 + 0x6ed9eba1;\n    uVar12 = uVar15 ^ uVar9 ^ uVar4 ^ uVar18;\n    uVar12 = uVar12 << 1 | uVar12 < 0;\n    uVar23 = uVar13 >> 2 | uVar13 * 0x40000000;\n    uVar13 = (uVar14 * 0x20 | uVar14 >> 0x1b) + uVar12 + (uVar2 ^ uVar21 ^ uVar13) + uVar19 + 0x6ed9eba1;\n    uVar16 = uVar10 ^ uVar5 ^ uVar17 ^ uVar16;\n    uVar16 = uVar16 << 1 | uVar16 < 0;\n    uVar15 = uVar14 >> 2 | uVar14 * 0x40000000;\n    uVar14 = (uVar13 * 0x20 | uVar13 >> 0x1b) + uVar16 + (uVar14 ^ uVar21 ^ uVar23) + uVar2 + 0x6ed9eba1;\n    uVar18 = uVar11 ^ uVar6 ^ uVar20 ^ uVar18;\n    uVar18 = uVar18 << 1 | uVar18 < 0;\n    uVar2 = uVar13 >> 2 | uVar13 * 0x40000000;\n    uVar13 = (uVar14 * 0x20 | uVar14 >> 0x1b) + uVar18 + (uVar15 ^ uVar13 ^ uVar23) + uVar21 + 0x6ed9eba1;\n    uVar17 = uVar12 ^ uVar7 ^ uVar22 ^ uVar17;\n    uVar17 = uVar17 << 1 | uVar17 < 0;\n    uVar21 = uVar14 >> 2 | uVar14 * 0x40000000;\n    uVar14 = (uVar13 * 0x20 | uVar13 >> 0x1b) + uVar17 + (uVar15 ^ uVar2 ^ uVar14) + uVar23 + 0x6ed9eba1;\n    uVar20 = uVar8 ^ uVar3 ^ uVar20 ^ uVar16;\n    uVar20 = uVar20 << 1 | uVar20 < 0;\n    uVar23 = uVar13 >> 2 | uVar13 * 0x40000000;\n    uVar13 = (uVar2 ^ uVar21 ^ uVar13) + (uVar14 * 0x20 | uVar14 >> 0x1b) + uVar20 + uVar15 + 0x6ed9eba1;\n    uVar15 = uVar9 ^ uVar1 ^ uVar22 ^ uVar18;\n    uVar15 = uVar15 << 1 | uVar15 < 0;\n    uVar19 = uVar14 >> 2 | uVar14 * 0x40000000;\n    uVar14 = (uVar13 * 0x20 | uVar13 >> 0x1b) + uVar15 + (uVar21 ^ uVar23 ^ uVar14) + uVar2 + 0x6ed9eba1;\n    uVar3 = uVar10 ^ uVar4 ^ uVar3 ^ uVar17;\n    uVar3 = uVar3 << 1 | uVar3 < 0;\n    uVar2 = uVar13 >> 2 | uVar13 * 0x40000000;\n    uVar13 = (uVar14 * 0x20 | uVar14 >> 0x1b) + uVar3 + (uVar13 ^ uVar23 ^ uVar19) + uVar21 + 0x6ed9eba1;\n    uVar1 = uVar11 ^ uVar5 ^ uVar1 ^ uVar20;\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    uVar21 = uVar14 >> 2 | uVar14 * 0x40000000;\n    uVar14 = (uVar13 * 0x20 | uVar13 >> 0x1b) + uVar1 + (uVar2 ^ uVar14 ^ uVar19) + uVar23 + 0x6ed9eba1;\n    uVar4 = uVar12 ^ uVar6 ^ uVar4 ^ uVar15;\n    uVar4 = uVar4 << 1 | uVar4 < 0;\n    uVar23 = uVar13 >> 2 | uVar13 * 0x40000000;\n    uVar5 = uVar7 ^ uVar5 ^ uVar3 ^ uVar16;\n    uVar19 = (uVar2 ^ uVar21 ^ uVar13) + (uVar14 * 0x20 | uVar14 >> 0x1b) + uVar4 + uVar19 + 0x6ed9eba1;\n    uVar13 = uVar5 << 1 | uVar5 < 0;\n    uVar22 = uVar14 >> 2 | uVar14 * 0x40000000;\n    uVar5 = (uVar19 * 0x20 | uVar19 >> 0x1b) + 0x8f1bbcdc +\n            ((uVar23 | uVar14) & uVar21 | uVar23 & uVar14) + uVar13 + uVar2;\n    uVar6 = uVar8 ^ uVar6 ^ uVar1 ^ uVar18;\n    uVar14 = uVar6 << 1 | uVar6 < 0;\n    uVar6 = (uVar5 * 0x20 | uVar5 >> 0x1b) + 0x8f1bbcdc +\n            ((uVar22 | uVar19) & uVar23 | uVar22 & uVar19) + uVar14 + uVar21;\n    uVar21 = uVar19 >> 2 | uVar19 * 0x40000000;\n    uVar7 = uVar9 ^ uVar7 ^ uVar4 ^ uVar17;\n    uVar2 = uVar7 << 1 | uVar7 < 0;\n    uVar24 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar7 = uVar10 ^ uVar8 ^ uVar13 ^ uVar20;\n    uVar5 = (uVar5 & uVar21 | (uVar5 | uVar21) & uVar22) + uVar2 + uVar23 + 0x8f1bbcdc + (uVar6 * 0x20 | uVar6 >> 0x1b);\n    uVar19 = uVar7 << 1 | uVar7 < 0;\n    uVar7 = (uVar5 * 0x20 | uVar5 >> 0x1b) + 0x8f1bbcdc + ((uVar24 | uVar6) & uVar21 | uVar24 & uVar6) + uVar19 + uVar22\n    ;\n    uVar8 = uVar6 >> 2 | uVar6 * 0x40000000;\n    uVar6 = uVar11 ^ uVar9 ^ uVar14 ^ uVar15;\n    uVar22 = uVar6 << 1 | uVar6 < 0;\n    uVar9 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar5 = (uVar7 * 0x20 | uVar7 >> 0x1b) + 0x8f1bbcdc + ((uVar8 | uVar5) & uVar24 | uVar8 & uVar5) + uVar22 + uVar21;\n    uVar6 = uVar12 ^ uVar10 ^ uVar2 ^ uVar3;\n    uVar21 = uVar6 << 1 | uVar6 < 0;\n    uVar6 = (uVar5 * 0x20 | uVar5 >> 0x1b) + 0x8f1bbcdc + ((uVar9 | uVar7) & uVar8 | uVar9 & uVar7) + uVar21 + uVar24;\n    uVar23 = uVar7 >> 2 | uVar7 * 0x40000000;\n    uVar7 = uVar11 ^ uVar19 ^ uVar1 ^ uVar16;\n    uVar11 = uVar7 << 1 | uVar7 < 0;\n    uVar7 = (uVar6 * 0x20 | uVar6 >> 0x1b) + 0x8f1bbcdc + ((uVar23 | uVar5) & uVar9 | uVar23 & uVar5) + uVar11 + uVar8;\n    uVar10 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar5 = uVar12 ^ uVar22 ^ uVar4 ^ uVar18;\n    uVar12 = uVar5 << 1 | uVar5 < 0;\n    uVar16 = uVar21 ^ uVar13 ^ uVar17 ^ uVar16;\n    uVar5 = (uVar6 & uVar10 | (uVar6 | uVar10) & uVar23) + uVar12 + uVar9 + 0x8f1bbcdc + (uVar7 * 0x20 | uVar7 >> 0x1b);\n    uVar8 = uVar16 << 1 | uVar16 < 0;\n    uVar16 = uVar6 >> 2 | uVar6 * 0x40000000;\n    uVar6 = (uVar5 * 0x20 | uVar5 >> 0x1b) + 0x8f1bbcdc + ((uVar16 | uVar7) & uVar10 | uVar16 & uVar7) + uVar8 + uVar23;\n    uVar24 = uVar7 >> 2 | uVar7 * 0x40000000;\n    uVar18 = uVar11 ^ uVar14 ^ uVar20 ^ uVar18;\n    uVar9 = uVar18 << 1 | uVar18 < 0;\n    uVar7 = (uVar6 * 0x20 | uVar6 >> 0x1b) + 0x8f1bbcdc + ((uVar24 | uVar5) & uVar16 | uVar24 & uVar5) + uVar9 + uVar10;\n    uVar23 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar17 = uVar12 ^ uVar2 ^ uVar15 ^ uVar17;\n    uVar10 = uVar17 << 1 | uVar17 < 0;\n    uVar5 = (uVar7 * 0x20 | uVar7 >> 0x1b) + 0x8f1bbcdc + ((uVar23 | uVar6) & uVar24 | uVar23 & uVar6) + uVar10 + uVar16\n    ;\n    uVar17 = uVar6 >> 2 | uVar6 * 0x40000000;\n    uVar20 = uVar19 ^ uVar3 ^ uVar20 ^ uVar8;\n    uVar16 = uVar20 << 1 | uVar20 < 0;\n    uVar20 = (uVar5 * 0x20 | uVar5 >> 0x1b) + 0x8f1bbcdc +\n             ((uVar17 | uVar7) & uVar23 | uVar17 & uVar7) + uVar16 + uVar24;\n    uVar24 = uVar7 >> 2 | uVar7 * 0x40000000;\n    uVar6 = uVar22 ^ uVar1 ^ uVar15 ^ uVar9;\n    uVar18 = uVar6 << 1 | uVar6 < 0;\n    uVar3 = uVar21 ^ uVar4 ^ uVar3 ^ uVar10;\n    uVar15 = uVar3 << 1 | uVar3 < 0;\n    uVar3 = (uVar5 & uVar24 | (uVar5 | uVar24) & uVar17) + uVar18 + uVar23 + 0x8f1bbcdc +\n            (uVar20 * 0x20 | uVar20 >> 0x1b);\n    uVar6 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar5 = (uVar3 * 0x20 | uVar3 >> 0x1b) + 0x8f1bbcdc + ((uVar6 | uVar20) & uVar24 | uVar6 & uVar20) + uVar15 + uVar17\n    ;\n    uVar7 = uVar20 >> 2 | uVar20 * 0x40000000;\n    uVar1 = uVar11 ^ uVar13 ^ uVar1 ^ uVar16;\n    uVar23 = uVar1 << 1 | uVar1 < 0;\n    uVar1 = (uVar5 * 0x20 | uVar5 >> 0x1b) + 0x8f1bbcdc + ((uVar7 | uVar3) & uVar6 | uVar7 & uVar3) + uVar23 + uVar24;\n    uVar17 = uVar3 >> 2 | uVar3 * 0x40000000;\n    uVar20 = uVar12 ^ uVar14 ^ uVar4 ^ uVar18;\n    uVar24 = uVar20 << 1 | uVar20 < 0;\n    uVar20 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar4 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0x8f1bbcdc + ((uVar17 | uVar5) & uVar7 | uVar17 & uVar5) + uVar24 + uVar6;\n    uVar3 = uVar2 ^ uVar13 ^ uVar15 ^ uVar8;\n    uVar25 = uVar3 << 1 | uVar3 < 0;\n    uVar3 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar6 = (uVar4 * 0x20 | uVar4 >> 0x1b) + 0x8f1bbcdc + ((uVar20 | uVar1) & uVar17 | uVar20 & uVar1) + uVar25 + uVar7;\n    uVar1 = uVar19 ^ uVar14 ^ uVar23 ^ uVar9;\n    uVar14 = uVar1 << 1 | uVar1 < 0;\n    uVar7 = uVar4 >> 2 | uVar4 * 0x40000000;\n    uVar1 = uVar22 ^ uVar2 ^ uVar24 ^ uVar10;\n    uVar17 = (uVar6 * 0x20 | uVar6 >> 0x1b) + 0x8f1bbcdc + ((uVar4 | uVar3) & uVar20 | uVar4 & uVar3) + uVar14 + uVar17;\n    uVar4 = uVar1 << 1 | uVar1 < 0;\n    uVar2 = uVar6 >> 2 | uVar6 * 0x40000000;\n    uVar1 = uVar21 ^ uVar19 ^ uVar25 ^ uVar16;\n    uVar5 = uVar1 << 1 | uVar1 < 0;\n    uVar20 = (uVar17 * 0x20 | uVar17 >> 0x1b) + 0x8f1bbcdc + ((uVar7 | uVar6) & uVar3 | uVar7 & uVar6) + uVar4 + uVar20;\n    uVar19 = uVar17 >> 2 | uVar17 * 0x40000000;\n    uVar1 = uVar11 ^ uVar22 ^ uVar14 ^ uVar18;\n    uVar6 = (uVar20 * 0x20 | uVar20 >> 0x1b) + ((uVar2 | uVar17) & uVar7 | uVar2 & uVar17) + 0x8f1bbcdc + uVar5 + uVar3;\n    uVar3 = uVar1 << 1 | uVar1 < 0;\n    uVar17 = uVar20 >> 2 | uVar20 * 0x40000000;\n    uVar7 = (uVar6 * 0x20 | uVar6 >> 0x1b) + 0xca62c1d6 + (uVar2 ^ uVar19 ^ uVar20) + uVar3 + uVar7;\n    uVar1 = uVar12 ^ uVar21 ^ uVar4 ^ uVar15;\n    uVar20 = uVar1 << 1 | uVar1 < 0;\n    uVar13 = uVar6 >> 2 | uVar6 * 0x40000000;\n    uVar2 = (uVar7 * 0x20 | uVar7 >> 0x1b) + 0xca62c1d6 + (uVar19 ^ uVar17 ^ uVar6) + uVar20 + uVar2;\n    uVar1 = uVar11 ^ uVar5 ^ uVar23 ^ uVar8;\n    uVar6 = uVar1 << 1 | uVar1 < 0;\n    uVar22 = uVar7 >> 2 | uVar7 * 0x40000000;\n    uVar11 = (uVar2 * 0x20 | uVar2 >> 0x1b) + 0xca62c1d6 + (uVar7 ^ uVar17 ^ uVar13) + uVar6 + uVar19;\n    uVar1 = uVar12 ^ uVar3 ^ uVar24 ^ uVar9;\n    uVar7 = uVar1 << 1 | uVar1 < 0;\n    uVar26 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar1 = (uVar11 * 0x20 | uVar11 >> 0x1b) + (uVar22 ^ uVar2 ^ uVar13) + 0xca62c1d6 + uVar7 + uVar17;\n    uVar8 = uVar20 ^ uVar25 ^ uVar10 ^ uVar8;\n    uVar17 = uVar8 << 1 | uVar8 < 0;\n    uVar19 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar11 = (uVar1 * 0x20 | uVar1 >> 0x1b) + (uVar22 ^ uVar26 ^ uVar11) + uVar17 + uVar13 + 0xca62c1d6;\n    uVar9 = uVar6 ^ uVar14 ^ uVar16 ^ uVar9;\n    uVar13 = uVar9 << 1 | uVar9 < 0;\n    uVar2 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar12 = (uVar11 * 0x20 | uVar11 >> 0x1b) + (uVar26 ^ uVar19 ^ uVar1) + uVar13 + uVar22 + 0xca62c1d6;\n    uVar10 = uVar7 ^ uVar4 ^ uVar18 ^ uVar10;\n    uVar8 = uVar10 << 1 | uVar10 < 0;\n    uVar21 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar11 = (uVar12 * 0x20 | uVar12 >> 0x1b) + (uVar19 ^ uVar2 ^ uVar11) + uVar8 + uVar26 + 0xca62c1d6;\n    uVar1 = uVar5 ^ uVar15 ^ uVar16 ^ uVar17;\n    uVar9 = uVar1 << 1 | uVar1 < 0;\n    uVar26 = uVar12 >> 2 | uVar12 * 0x40000000;\n    uVar16 = (uVar11 * 0x20 | uVar11 >> 0x1b) + 0xca62c1d6 + (uVar12 ^ uVar2 ^ uVar21) + uVar9 + uVar19;\n    uVar1 = uVar3 ^ uVar23 ^ uVar18 ^ uVar13;\n    uVar10 = uVar1 << 1 | uVar1 < 0;\n    uVar22 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar12 = (uVar16 * 0x20 | uVar16 >> 0x1b) + (uVar26 ^ uVar11 ^ uVar21) + uVar10 + uVar2 + 0xca62c1d6;\n    uVar1 = uVar20 ^ uVar24 ^ uVar15 ^ uVar8;\n    uVar11 = uVar1 << 1 | uVar1 < 0;\n    uVar1 = (uVar26 ^ uVar22 ^ uVar16) + uVar11 + uVar21 + 0xca62c1d6 + (uVar12 * 0x20 | uVar12 >> 0x1b);\n    uVar19 = uVar16 >> 2 | uVar16 * 0x40000000;\n    uVar16 = uVar6 ^ uVar25 ^ uVar23 ^ uVar9;\n    uVar15 = uVar16 << 1 | uVar16 < 0;\n    uVar21 = uVar12 >> 2 | uVar12 * 0x40000000;\n    uVar12 = (uVar22 ^ uVar19 ^ uVar12) + uVar15 + uVar26 + 0xca62c1d6 + (uVar1 * 0x20 | uVar1 >> 0x1b);\n    uVar16 = uVar7 ^ uVar14 ^ uVar24 ^ uVar10;\n    uVar2 = uVar16 << 1 | uVar16 < 0;\n    uVar23 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar18 = uVar4 ^ uVar25 ^ uVar11 ^ uVar17;\n    uVar16 = (uVar19 ^ uVar21 ^ uVar1) + uVar2 + uVar22 + 0xca62c1d6 + (uVar12 * 0x20 | uVar12 >> 0x1b);\n    uVar22 = uVar18 << 1 | uVar18 < 0;\n    uVar18 = uVar12 >> 2 | uVar12 * 0x40000000;\n    uVar1 = uVar16 >> 2 | uVar16 * 0x40000000;\n    uVar14 = uVar5 ^ uVar14 ^ uVar15 ^ uVar13;\n    uVar19 = (uVar23 ^ uVar12 ^ uVar21) + uVar22 + uVar19 + 0xca62c1d6 + (uVar16 * 0x20 | uVar16 >> 0x1b);\n    uVar14 = uVar14 << 1 | uVar14 < 0;\n    uVar12 = (uVar18 ^ uVar16 ^ uVar23) + uVar14 + uVar21 + 0xca62c1d6 + (uVar19 * 0x20 | uVar19 >> 0x1b);\n    uVar8 = uVar3 ^ uVar4 ^ uVar2 ^ uVar8;\n    uVar8 = uVar8 << 1 | uVar8 < 0;\n    uVar21 = uVar19 >> 2 | uVar19 * 0x40000000;\n    uVar4 = (uVar18 ^ uVar1 ^ uVar19) + uVar8 + 0xca62c1d6 + uVar23 + (uVar12 * 0x20 | uVar12 >> 0x1b);\n    uVar9 = uVar20 ^ uVar5 ^ uVar22 ^ uVar9;\n    uVar16 = uVar12 >> 2 | uVar12 * 0x40000000;\n    uVar9 = uVar9 << 1 | uVar9 < 0;\n    uVar11 = uVar7 ^ uVar20 ^ uVar8 ^ uVar11;\n    uVar5 = (uVar4 * 0x20 | uVar4 >> 0x1b) + (uVar1 ^ uVar21 ^ uVar12) + 0xca62c1d6 + uVar9 + uVar18;\n    uVar20 = uVar4 >> 2 | uVar4 * 0x40000000;\n    uVar10 = uVar6 ^ uVar3 ^ uVar14 ^ uVar10;\n    uVar8 = uVar10 << 1 | uVar10 < 0;\n    uVar3 = (uVar5 * 0x20 | uVar5 >> 0x1b) + (uVar21 ^ uVar16 ^ uVar4) + 0xca62c1d6 + uVar8 + uVar1;\n    uVar4 = (uVar11 << 1 | uVar11 < 0) + (uVar3 * 0x20 | uVar3 >> 0x1b) + -0x359d3e2a +\n            (uVar5 ^ uVar16 ^ uVar20) + uVar21;\n    uVar1 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar17 = uVar6 ^ uVar9 ^ uVar15 ^ uVar17;\n    uVar5 = uVar3 >> 2 | uVar3 * 0x40000000;\n    uVar3 = (uVar17 << 1 | uVar17 < 0) + (uVar4 * 0x20 | uVar4 >> 0x1b) + -0x359d3e2a +\n            (uVar1 ^ uVar3 ^ uVar20) + uVar16;\n    uVar13 = uVar7 ^ uVar8 ^ uVar2 ^ uVar13;\n    *(param_1 + 0x14) = *(param_1 + 0x14) + uVar5;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + uVar3;\n    *(param_1 + 0x10) = *(param_1 + 0x10) + (uVar4 >> 2 | uVar4 * 0x40000000);\n    *(param_1 + 0x18) = *(param_1 + 0x18) + uVar1;\n    *(param_1 + 8) =\n         (uVar1 ^ uVar5 ^ uVar4) + uVar20 + (uVar13 << 1 | uVar13 < 0) + (uVar3 * 0x20 | uVar3 >> 0x1b) + -0x359d3e2a +\n         *(param_1 + 8);\n    return;\n}\n",
        "token_count": 10511
    },
    "00435e3f": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00435e3f(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *unaff_EBX;\n    int32_t var_4h;\n    \n    iVar2 = fcn.00435e06(arg_8h, &var_4h);\n    iVar1 = var_4h;\n    if ((iVar2 == 0) && (iVar2 = fcn.00435e06(arg_8h, &var_4h),  iVar2 == 0)) {\n        *unaff_EBX = var_4h * 0x100 + iVar1;\n        return;\n    }\n    *unaff_EBX = 0;\n    return;\n}\n",
        "token_count": 163
    },
    "0043add0": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043add0(uint32_t param_1, uint param_2)\n\n{\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    int32_t iStack4;\n    \n    iStack4 = (param_1 >> 8 & 0xff0000) << 8;\n    fcn.0043d620(param_2, param_1, &iStack4);\n    fcn.0043be10();\n    *(unaff_EDI + -1 + unaff_ESI) = 0;\n    return;\n}\n",
        "token_count": 127
    },
    "0043eda0": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0043eda0(int32_t param_1)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    uint32_t uVar6;\n    uint8_t *puVar7;\n    uint32_t *puVar8;\n    int32_t iVar9;\n    uint32_t uStack20;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    int32_t iStack4;\n    \n    uStack16 = 0;\n    uVar1 = 1;\n    do {\n        *(param_1 + 0x204 + uStack16) = uVar1;\n        *(uVar1 + 0x304 + param_1) = uStack16;\n        uVar1 = uVar1 ^ -((uVar1 & 0x80) != 0) & 0x1bU ^ uVar1 * '\\x02';\n        uStack16 = uStack16 + 1;\n    } while (uStack16 < 0x100);\n    *(param_1 + 0x305) = 0;\n    uVar6 = 1;\n    puVar8 = param_1 + 0x604;\n    iVar9 = 10;\n    do {\n        *puVar8 = uVar6;\n        puVar8 = puVar8 + 1;\n        uVar6 = uVar6 * '\\x02' ^ -((uVar6 & 0x80) != 0) & 0x1bU;\n        iVar9 = iVar9 + -1;\n    } while (iVar9 != 0);\n    uVar6 = 0;\n    do {\n        if (uVar6 == 0) {\n            uStack20 = uStack20 & 0xffffff00;\n            uStack20._0_1_ = 0;\n        }\n        else {\n            uStack20._0_1_ = *((param_1 - *(uVar6 + 0x304 + param_1)) + 0x303);\n            uStack20 = uStack20 & 0xffffff00 | uStack20;\n        }\n        uVar1 = (uStack20 << 2 | uStack20 >> 6) ^ (uStack20 << 1 | uStack20 < '\\0');\n        uVar1 = (uVar1 << 2 | uVar1 >> 6) ^ uVar1 ^ uStack20 ^ 99;\n        *(param_1 + 0x404 + uVar6) = uVar1;\n        *(uVar1 + 0x504 + param_1) = uVar6;\n        uVar6 = uVar6 + 1;\n    } while (uVar6 < 0x100);\n    puVar7 = param_1 + 0x504;\n    iStack4 = 0x100;\n    puVar8 = param_1 + 0xa2c;\n    do {\n        uVar1 = puVar7[-0x100];\n        uVar6 = uStack20 & 0xffffff00;\n        uStack20 = uVar6 | uVar1;\n        if (uVar1 == 0) {\n            uVar2 = 0;\n            uVar3 = 0;\n        }\n        else {\n            uVar2 = fcn.0043ed70(uStack20);\n            uVar2 = uVar2 & 0xff;\n            uVar3 = fcn.0043ed70(uStack20);\n            uVar3 = uVar3 & 0xff;\n            param_1 = extraout_ECX;\n        }\n        uVar3 = (uVar3 << 8 | uVar1) << 8 | uVar1;\n        uVar4 = uVar3 << 8;\n        uVar5 = uVar4 | uVar2;\n        *puVar8 = uVar5 << 8 | uVar4 >> 0x18;\n        puVar8[-0x100] = uVar5;\n        puVar8[0x100] = uVar5 << 0x10 | uVar4 >> 0x10;\n        puVar8[0x200] = uVar2 << 0x18 | uVar3;\n        uStack20 = uVar6 | *puVar7;\n        if (*puVar7 == 0) {\n            uStack8 = 0;\n            uStack12 = 0;\n            uVar6 = 0;\n            uVar2 = 0;\n        }\n        else {\n            uStack8 = fcn.0043ed70(uStack20);\n            uStack8 = uStack8 & 0xff;\n            uStack12 = fcn.0043ed70(uStack20);\n            uStack12 = uStack12 & 0xff;\n            uVar6 = fcn.0043ed70(uStack20);\n            uVar6 = uVar6 & 0xff;\n            uVar2 = fcn.0043ed70(uStack20);\n            uVar2 = uVar2 & 0xff;\n            param_1 = extraout_ECX_00;\n        }\n        uStack12 = (uVar2 << 8 | uVar6) << 8 | uStack12;\n        uVar6 = uStack12 << 8;\n        uVar2 = uVar6 | uStack8;\n        puVar8[0x400] = uVar2 << 8 | uVar6 >> 0x18;\n        puVar8[0x300] = uVar2;\n        puVar8[0x600] = uStack8 << 0x18 | uStack12;\n        puVar7 = puVar7 + 1;\n        iStack4 = iStack4 + -1;\n        puVar8[0x500] = uVar2 << 0x10 | uVar6 >> 0x10;\n        puVar8 = puVar8 + 1;\n    } while (iStack4 != 0);\n    *(param_1 + 0x262c) = 1;\n    return;\n}\n",
        "token_count": 1376
    },
    "0044d82e": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044d82e(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = *(in_EAX + 0x16bc);\n    if (iVar3 < 0xc) {\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) | arg_8h + -0x101 << (iVar3 & 0x1f);\n        *(in_EAX + 0x16bc) = iVar3 + 5;\n    }\n    else {\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) | arg_8h + -0x101 << (iVar3 & 0x1f);\n        *(*(in_EAX + 0x14) + *(in_EAX + 8)) = *(in_EAX + 0x16b8);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 0x14) + *(in_EAX + 8)) = *(in_EAX + 0x16b9);\n        iVar3 = *(in_EAX + 0x16bc);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(in_EAX + 0x16bc) = iVar3 + -0xb;\n        *(in_EAX + 0x16b8) = arg_8h + -0x101 >> (0x10U - iVar3 & 0x1f);\n    }\n    iVar3 = *(in_EAX + 0x16bc);\n    if (iVar3 < 0xc) {\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) | arg_ch + -1 << (iVar3 & 0x1f);\n        *(in_EAX + 0x16bc) = iVar3 + 5;\n    }\n    else {\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) | arg_ch + -1 << (iVar3 & 0x1f);\n        *(*(in_EAX + 0x14) + *(in_EAX + 8)) = *(in_EAX + 0x16b8);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 0x14) + *(in_EAX + 8)) = *(in_EAX + 0x16b9);\n        iVar3 = *(in_EAX + 0x16bc);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(in_EAX + 0x16bc) = iVar3 + -0xb;\n        *(in_EAX + 0x16b8) = arg_ch + -1 >> (0x10U - iVar3 & 0x1f);\n    }\n    iVar3 = *(in_EAX + 0x16bc);\n    if (iVar3 < 0xd) {\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) | arg_10h + -4 << (iVar3 & 0x1f);\n        *(in_EAX + 0x16bc) = iVar3 + 4;\n    }\n    else {\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) | arg_10h + -4 << (iVar3 & 0x1f);\n        *(*(in_EAX + 0x14) + *(in_EAX + 8)) = *(in_EAX + 0x16b8);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 0x14) + *(in_EAX + 8)) = *(in_EAX + 0x16b9);\n        iVar3 = *(in_EAX + 0x16bc);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(in_EAX + 0x16bc) = iVar3 + -0xc;\n        *(in_EAX + 0x16b8) = arg_10h + -4 >> (0x10U - iVar3 & 0x1f);\n    }\n    iVar3 = 0;\n    if (0 < arg_10h) {\n        do {\n            iVar2 = *(in_EAX + 0x16bc);\n            if (iVar2 < 0xe) {\n                *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) | *(in_EAX + 0xa7e + *(iVar3 + 0x49204c) * 4) << (iVar2 & 0x1f);\n                *(in_EAX + 0x16bc) = iVar2 + 3;\n            }\n            else {\n                uVar1 = *(in_EAX + 0xa7e + *(iVar3 + 0x49204c) * 4);\n                *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) | uVar1 << (iVar2 & 0x1f);\n                *(*(in_EAX + 0x14) + *(in_EAX + 8)) = *(in_EAX + 0x16b8);\n                *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                *(*(in_EAX + 0x14) + *(in_EAX + 8)) = *(in_EAX + 0x16b9);\n                iVar2 = *(in_EAX + 0x16bc);\n                *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                *(in_EAX + 0x16bc) = iVar2 + -0xd;\n                *(in_EAX + 0x16b8) = uVar1 >> (0x10U - iVar2 & 0x1f);\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < arg_10h);\n    }\n    fcn.0044d394();\n    fcn.0044d394();\n    return;\n}\n",
        "token_count": 1518
    },
    "00432760": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00432760(int32_t *param_1)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    int32_t **ppiVar4;\n    \n    if (*param_1 != param_1[1]) {\n        do {\n            ppiVar1 = *(param_1[1] + -4);\n            if (ppiVar1 != NULL) {\n                piVar2 = *ppiVar1;\n                ppiVar4 = *piVar2;\n                *piVar2 = piVar2;\n                (*ppiVar1)[1] = *ppiVar1;\n                ppiVar1[1] = NULL;\n                if (ppiVar4 != *ppiVar1) {\n                    do {\n                        ppiVar3 = *ppiVar4;\n                        fcn.00452a07(ppiVar4);\n                        ppiVar4 = ppiVar3;\n                    } while (ppiVar3 != *ppiVar1);\n                }\n                fcn.00452a07(*ppiVar1);\n                fcn.00452a07(ppiVar1);\n            }\n            if (*param_1 != param_1[1]) {\n                param_1[1] = param_1[1] + -4;\n            }\n        } while (*param_1 != param_1[1]);\n    }\n    if (*param_1 != 0) {\n        fcn.00452a07(*param_1);\n        *param_1 = 0;\n        param_1[1] = 0;\n        param_1[2] = 0;\n    }\n    return;\n}\n",
        "token_count": 359
    },
    "00433dd0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433dd0(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    \n    iVar4 = 0;\n    if (arg_8h != 0) {\n        if (arg_8h < 0x40000000) {\n            iVar4 = fcn.0045306d(arg_8h * 4);\n            if (iVar4 != 0) goto code_r0x00433dff;\n        }\n        fcn.0044e7ba();\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\ncode_r0x00433dff:\n    fcn.004530c0(iVar4, *in_ECX, in_ECX[1] - *in_ECX & 0xfffffffc);\n    iVar1 = *in_ECX;\n    iVar2 = in_ECX[1];\n    if (iVar1 != 0) {\n        fcn.00452a07(iVar1);\n    }\n    in_ECX[2] = iVar4 + arg_8h * 4;\n    *in_ECX = iVar4;\n    in_ECX[1] = iVar4 + (iVar2 - iVar1 >> 2) * 4;\n    return;\n}\n",
        "token_count": 305
    },
    "0044da64": {
        "rules": [
            "encrypt data using HC-128/f6b71aea27f34766a10ff27131cf0227"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044da64(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint16_t *puVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    uint16_t uVar4;\n    int32_t in_EAX;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar5 = 0;\n    if (*(in_EAX + 0x16a0) != 0) {\n        do {\n            uVar12 = *(*(in_EAX + 0x16a4) + uVar5 * 2);\n            uVar11 = *(uVar5 + *(in_EAX + 0x1698));\n            uVar5 = uVar5 + 1;\n            if (uVar12 == 0) {\n                iVar6 = *(in_EAX + 0x16bc);\n                puVar1 = arg_8h + uVar11 * 4;\n                uVar11 = puVar1[1];\n                if (0x10 - uVar11 < iVar6) {\n                    uVar3 = *puVar1;\n                    *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) | uVar3 << (iVar6 & 0x1f);\n                    *(*(in_EAX + 8) + *(in_EAX + 0x14)) = *(in_EAX + 0x16b8);\n                    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                    *(*(in_EAX + 0x14) + *(in_EAX + 8)) = *(in_EAX + 0x16b9);\n                    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                    iVar6 = *(in_EAX + 0x16bc) + -0x10 + uVar11;\n                    *(in_EAX + 0x16b8) = uVar3 >> (0x10U - *(in_EAX + 0x16bc) & 0x1f);\n                }\n                else {\n                    *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) | *puVar1 << (iVar6 & 0x1f);\n                    iVar6 = iVar6 + uVar11;\n                }\ncode_r0x0044dd64:\n                *(in_EAX + 0x16bc) = iVar6;\n            }\n            else {\n                uVar10 = *(uVar11 + 0x492820);\n                iVar7 = uVar10 * 4;\n                uVar8 = *(iVar7 + 0x406 + arg_8h);\n                iVar9 = *(in_EAX + 0x16bc);\n                if (0x10 - uVar8 < iVar9) {\n                    uVar3 = *(arg_8h + 0x404 + uVar10 * 4);\n                    *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) | uVar3 << (iVar9 & 0x1f);\n                    *(*(in_EAX + 8) + *(in_EAX + 0x14)) = *(in_EAX + 0x16b8);\n                    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                    *(*(in_EAX + 0x14) + *(in_EAX + 8)) = *(in_EAX + 0x16b9);\n                    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                    iVar9 = *(in_EAX + 0x16bc) + -0x10;\n                    *(in_EAX + 0x16b8) = uVar3 >> (0x10U - *(in_EAX + 0x16bc) & 0x1f);\n                }\n                else {\n                    *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) | *(arg_8h + 0x404 + uVar10 * 4) << (iVar9 & 0x1f);\n                }\n                *(in_EAX + 0x16bc) = iVar9 + uVar8;\n                iVar9 = *(iVar7 + 0x491fd8);\n                if (iVar9 != 0) {\n                    iVar6 = uVar11 - *(iVar7 + 0x492920);\n                    iVar7 = *(in_EAX + 0x16bc);\n                    if (0x10 - iVar9 < iVar7) {\n                        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) | iVar6 << (iVar7 & 0x1f);\n                        *(*(in_EAX + 8) + *(in_EAX + 0x14)) = *(in_EAX + 0x16b8);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 0x14) + *(in_EAX + 8)) = *(in_EAX + 0x16b9);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        iVar7 = *(in_EAX + 0x16bc) + -0x10;\n                        *(in_EAX + 0x16b8) = iVar6 >> (0x10U - *(in_EAX + 0x16bc) & 0x1f);\n                    }\n                    else {\n                        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) | iVar6 << (iVar7 & 0x1f);\n                    }\n                    *(in_EAX + 0x16bc) = iVar7 + iVar9;\n                }\n                uVar11 = uVar12 - 1;\n                if (uVar11 < 0x100) {\n                    uVar2 = *(uVar12 + 0x49261f);\n                }\n                else {\n                    uVar2 = *((uVar11 >> 7) + 0x492720);\n                }\n                iVar7 = uVar2 * 4;\n                puVar1 = iVar7 + arg_ch;\n                uVar3 = puVar1[1];\n                iVar9 = *(in_EAX + 0x16bc);\n                if (0x10 - uVar3 < iVar9) {\n                    uVar4 = *puVar1;\n                    *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) | uVar4 << (iVar9 & 0x1f);\n                    *(*(in_EAX + 8) + *(in_EAX + 0x14)) = *(in_EAX + 0x16b8);\n                    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                    *(*(in_EAX + 0x14) + *(in_EAX + 8)) = *(in_EAX + 0x16b9);\n                    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                    iVar9 = *(in_EAX + 0x16bc) + -0x10;\n                    *(in_EAX + 0x16b8) = uVar4 >> (0x10U - *(in_EAX + 0x16bc) & 0x1f);\n                }\n                else {\n                    *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) | *puVar1 << (iVar9 & 0x1f);\n                }\n                iVar9 = iVar9 + uVar3;\n                *(in_EAX + 0x16bc) = iVar9;\n                iVar6 = *(iVar7 + 0x492060);\n                if (iVar6 != 0) {\n                    iVar7 = uVar11 - *(iVar7 + 0x492998);\n                    if (0x10 - iVar6 < iVar9) {\n                        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) | iVar7 << (iVar9 & 0x1f);\n                        *(*(in_EAX + 8) + *(in_EAX + 0x14)) = *(in_EAX + 0x16b8);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 0x14) + *(in_EAX + 8)) = *(in_EAX + 0x16b9);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        iVar6 = *(in_EAX + 0x16bc) + -0x10 + iVar6;\n                        *(in_EAX + 0x16b8) = iVar7 >> (0x10U - *(in_EAX + 0x16bc) & 0x1f);\n                    }\n                    else {\n                        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) | iVar7 << (iVar9 & 0x1f);\n                        iVar6 = iVar9 + iVar6;\n                    }\n                    goto code_r0x0044dd64;\n                }\n            }\n        } while (uVar5 < *(in_EAX + 0x16a0));\n    }\n    uVar3 = *(arg_8h + 0x402);\n    iVar9 = *(in_EAX + 0x16bc);\n    if (0x10 - uVar3 < iVar9) {\n        uVar4 = *(arg_8h + 0x400);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) | uVar4 << (iVar9 & 0x1f);\n        *(*(in_EAX + 8) + *(in_EAX + 0x14)) = *(in_EAX + 0x16b8);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 0x14) + *(in_EAX + 8)) = *(in_EAX + 0x16b9);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        iVar9 = *(in_EAX + 0x16bc) + -0x10;\n        *(in_EAX + 0x16b8) = uVar4 >> (0x10U - *(in_EAX + 0x16bc) & 0x1f);\n    }\n    else {\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) | *(arg_8h + 0x400) << (iVar9 & 0x1f);\n    }\n    *(in_EAX + 0x16bc) = iVar9 + uVar3;\n    *(in_EAX + 0x16b4) = *(arg_8h + 0x402);\n    return;\n}\n",
        "token_count": 2617
    },
    "0043aaf0": {
        "rules": [
            "check HTTP status code/09dd97b2e76544bcbbe79d95da398605"
        ],
        "decompiled_code": "\nuint fcn.0043aaf0(char *param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    if (param_1 != NULL) {\n        pcVar2 = param_1;\n        do {\n            cVar1 = *pcVar2;\n            pcVar2 = pcVar2 + 1;\n        } while (cVar1 != '\\0');\n        if (pcVar2 - (param_1 + 1) < 0xc9) {\n            fcn.004586b0(0x4b4000, param_1, 200);\n            *0x4b40c8 = 0;\n            return 0;\n        }\n    }\n    return 0xe0010040;\n}\n",
        "token_count": 163
    },
    "0043d5b0": {
        "rules": [
            "decompress data using LZO/83f2e70ad753438b83eb63e4275895e9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0043d5b0(int32_t param_1, int32_t param_2, uchar *param_3)\n\n{\n    ushort uVar1;\n    int32_t iVar3;\n    char cVar4;\n    uint var_1h;\n    uint32_t uVar2;\n    \n    uVar2 = 0xffff;\n    uVar1 = 0xffff;\n    if ((param_1 != 0) && (param_3 != NULL)) {\n        iVar3 = 0;\n        if (0 < param_2) {\n            do {\n                uVar2 = uVar2 ^ *(iVar3 + param_1) << 8;\n                cVar4 = '\\b';\n                do {\n                    if ((uVar2 & 0x8000) == 0) {\n                        uVar2 = uVar2 * 2;\n                    }\n                    else {\n                        uVar2 = (uVar2 * 2 ^ 0x1021) & 0xffff;\n                    }\n                    uVar1 = uVar2;\n                    cVar4 = cVar4 + -1;\n                } while (cVar4 != '\\0');\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < param_2);\n        }\n        *param_3 = uVar1;\n        param_3[1] = uVar1 >> 8;\n        return 0;\n    }\n    return 0xe0010001;\n}\n",
        "token_count": 314
    },
    "00448a10": {
        "rules": [
            "encrypt data using Sosemanuk/d9cb91cf002a4780a153bbbb736437ff"
        ],
        "decompiled_code": "\nvoid fcn.00448a10(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t *unaff_EDI;\n    int32_t iStack64;\n    int32_t iStack60;\n    int32_t iStack56;\n    int32_t iStack52;\n    int32_t iStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    int32_t iStack12;\n    int32_t iStack8;\n    int32_t iStack4;\n    \n    uVar4 = unaff_EDI[2];\n    uVar2 = unaff_EDI[3];\n    uVar5 = unaff_EDI[1];\n    fcn.004489b0();\n    uVar1 = (~uVar5 & uVar2 | uVar4 & uVar5) + *unaff_EDI + -0x28955b88 + iStack64;\n    uVar1 = (uVar1 * 0x80 | uVar1 >> 0x19) + uVar5;\n    uVar2 = (~uVar1 & uVar4 | uVar5 & uVar1) + iStack60 + -0x173848aa + uVar2;\n    uVar2 = (uVar2 * 0x1000 | uVar2 >> 0x14) + uVar1;\n    uVar4 = (~uVar2 & uVar5 | uVar2 & uVar1) + iStack56 + 0x242070db + uVar4;\n    uVar4 = (uVar4 >> 0xf | uVar4 * 0x20000) + uVar2;\n    uVar5 = (~uVar4 & uVar1 | uVar2 & uVar4) + iStack52 + -0x3e423112 + uVar5;\n    uVar5 = (uVar5 >> 10 | uVar5 * 0x400000) + uVar4;\n    uVar1 = (~uVar5 & uVar2 | uVar4 & uVar5) + iStack48 + -0xa83f051 + uVar1;\n    uVar1 = (uVar1 * 0x80 | uVar1 >> 0x19) + uVar5;\n    uVar2 = (~uVar1 & uVar4 | uVar5 & uVar1) + iStack44 + 0x4787c62a + uVar2;\n    uVar2 = (uVar2 * 0x1000 | uVar2 >> 0x14) + uVar1;\n    uVar4 = (~uVar2 & uVar5 | uVar2 & uVar1) + iStack40 + -0x57cfb9ed + uVar4;\n    uVar4 = (uVar4 >> 0xf | uVar4 * 0x20000) + uVar2;\n    uVar5 = (~uVar4 & uVar1 | uVar2 & uVar4) + iStack36 + -0x2b96aff + uVar5;\n    uVar5 = (uVar5 >> 10 | uVar5 * 0x400000) + uVar4;\n    uVar1 = (~uVar5 & uVar2 | uVar4 & uVar5) + iStack32 + 0x698098d8 + uVar1;\n    uVar1 = (uVar1 * 0x80 | uVar1 >> 0x19) + uVar5;\n    uVar2 = (~uVar1 & uVar4 | uVar5 & uVar1) + iStack28 + -0x74bb0851 + uVar2;\n    uVar2 = (uVar2 * 0x1000 | uVar2 >> 0x14) + uVar1;\n    uVar4 = (~uVar2 & uVar5 | uVar2 & uVar1) + iStack24 + -0xa44f + uVar4;\n    uVar4 = (uVar4 >> 0xf | uVar4 * 0x20000) + uVar2;\n    uVar5 = (~uVar4 & uVar1 | uVar2 & uVar4) + iStack20 + -0x76a32842 + uVar5;\n    uVar5 = (uVar5 >> 10 | uVar5 * 0x400000) + uVar4;\n    uVar1 = (~uVar5 & uVar2 | uVar4 & uVar5) + iStack16 + 0x6b901122 + uVar1;\n    uVar1 = (uVar1 * 0x80 | uVar1 >> 0x19) + uVar5;\n    uVar2 = (~uVar1 & uVar4 | uVar5 & uVar1) + iStack12 + -0x2678e6d + uVar2;\n    uVar2 = (uVar2 * 0x1000 | uVar2 >> 0x14) + uVar1;\n    uVar4 = (~uVar2 & uVar5 | uVar2 & uVar1) + iStack8 + -0x5986bc72 + uVar4;\n    uVar4 = (uVar4 >> 0xf | uVar4 * 0x20000) + uVar2;\n    uVar5 = (~uVar4 & uVar1 | uVar2 & uVar4) + iStack4 + 0x49b40821 + uVar5;\n    uVar5 = (uVar5 >> 10 | uVar5 * 0x400000) + uVar4;\n    uVar1 = (~uVar2 & uVar4 | uVar2 & uVar5) + iStack60 + -0x9e1da9e + uVar1;\n    uVar1 = (uVar1 * 0x20 | uVar1 >> 0x1b) + uVar5;\n    uVar2 = (~uVar4 & uVar5 | uVar4 & uVar1) + iStack40 + -0x3fbf4cc0 + uVar2;\n    uVar2 = (uVar2 * 0x200 | uVar2 >> 0x17) + uVar1;\n    uVar4 = (~uVar5 & uVar1 | uVar2 & uVar5) + iStack20 + 0x265e5a51 + uVar4;\n    uVar4 = (uVar4 * 0x4000 | uVar4 >> 0x12) + uVar2;\n    uVar5 = (~uVar1 & uVar2 | uVar4 & uVar1) + iStack64 + -0x16493856 + uVar5;\n    uVar5 = (uVar5 >> 0xc | uVar5 * 0x100000) + uVar4;\n    uVar1 = (~uVar2 & uVar4 | uVar2 & uVar5) + iStack44 + -0x29d0efa3 + uVar1;\n    uVar1 = (uVar1 * 0x20 | uVar1 >> 0x1b) + uVar5;\n    uVar2 = (~uVar4 & uVar5 | uVar4 & uVar1) + iStack24 + 0x2441453 + uVar2;\n    uVar2 = (uVar2 * 0x200 | uVar2 >> 0x17) + uVar1;\n    uVar4 = (~uVar5 & uVar1 | uVar2 & uVar5) + iStack4 + -0x275e197f + uVar4;\n    uVar4 = (uVar4 * 0x4000 | uVar4 >> 0x12) + uVar2;\n    uVar5 = (~uVar1 & uVar2 | uVar4 & uVar1) + iStack48 + -0x182c0438 + uVar5;\n    uVar5 = (uVar5 >> 0xc | uVar5 * 0x100000) + uVar4;\n    uVar1 = (~uVar2 & uVar4 | uVar2 & uVar5) + iStack28 + 0x21e1cde6 + uVar1;\n    uVar1 = (uVar1 * 0x20 | uVar1 >> 0x1b) + uVar5;\n    uVar2 = (~uVar4 & uVar5 | uVar4 & uVar1) + iStack8 + -0x3cc8f82a + uVar2;\n    uVar2 = (uVar2 * 0x200 | uVar2 >> 0x17) + uVar1;\n    uVar4 = (~uVar5 & uVar1 | uVar2 & uVar5) + iStack52 + -0xb2af279 + uVar4;\n    uVar4 = (uVar4 * 0x4000 | uVar4 >> 0x12) + uVar2;\n    uVar5 = (~uVar1 & uVar2 | uVar4 & uVar1) + iStack32 + 0x455a14ed + uVar5;\n    uVar5 = (uVar5 >> 0xc | uVar5 * 0x100000) + uVar4;\n    uVar1 = (~uVar2 & uVar4 | uVar2 & uVar5) + iStack12 + -0x561c16fb + uVar1;\n    uVar1 = (uVar1 * 0x20 | uVar1 >> 0x1b) + uVar5;\n    uVar2 = (~uVar4 & uVar5 | uVar4 & uVar1) + iStack56 + -0x3105c08 + uVar2;\n    uVar2 = (uVar2 * 0x200 | uVar2 >> 0x17) + uVar1;\n    uVar4 = (~uVar5 & uVar1 | uVar2 & uVar5) + iStack36 + 0x676f02d9 + uVar4;\n    uVar4 = (uVar4 * 0x4000 | uVar4 >> 0x12) + uVar2;\n    uVar5 = (~uVar1 & uVar2 | uVar4 & uVar1) + iStack16 + -0x72d5b376 + uVar5;\n    uVar5 = (uVar5 >> 0xc | uVar5 * 0x100000) + uVar4;\n    uVar1 = (uVar2 ^ uVar4 ^ uVar5) + iStack44 + -0x5c6be + uVar1;\n    uVar1 = (uVar1 * 0x10 | uVar1 >> 0x1c) + uVar5;\n    uVar2 = (uVar4 ^ uVar5 ^ uVar1) + iStack32 + -0x788e097f + uVar2;\n    uVar2 = (uVar2 * 0x800 | uVar2 >> 0x15) + uVar1;\n    uVar4 = (uVar2 ^ uVar5 ^ uVar1) + iStack20 + 0x6d9d6122 + uVar4;\n    uVar4 = (uVar4 * 0x10000 | uVar4 >> 0x10) + uVar2;\n    uVar5 = (uVar2 ^ uVar4 ^ uVar1) + iStack8 + -0x21ac7f4 + uVar5;\n    uVar3 = (uVar5 >> 9 | uVar5 * 0x800000) + uVar4;\n    uVar1 = uVar1 + 0xa4beea44 + (uVar2 ^ uVar4 ^ uVar3) + iStack60;\n    uVar5 = (uVar1 * 0x10 | uVar1 >> 0x1c) + uVar3;\n    uVar2 = (uVar4 ^ uVar3 ^ uVar5) + iStack48 + 0x4bdecfa9 + uVar2;\n    uVar2 = (uVar2 * 0x800 | uVar2 >> 0x15) + uVar5;\n    uVar4 = (uVar2 ^ uVar3 ^ uVar5) + iStack36 + -0x944b4a0 + uVar4;\n    uVar4 = (uVar4 * 0x10000 | uVar4 >> 0x10) + uVar2;\n    uVar1 = uVar3 + 0xbebfbc70 + (uVar2 ^ uVar4 ^ uVar5) + iStack24;\n    uVar1 = (uVar1 >> 9 | uVar1 * 0x800000) + uVar4;\n    uVar5 = (uVar2 ^ uVar4 ^ uVar1) + iStack12 + 0x289b7ec6 + uVar5;\n    uVar5 = (uVar5 * 0x10 | uVar5 >> 0x1c) + uVar1;\n    uVar2 = (uVar4 ^ uVar1 ^ uVar5) + iStack64 + -0x155ed806 + uVar2;\n    uVar2 = (uVar2 * 0x800 | uVar2 >> 0x15) + uVar5;\n    uVar4 = (uVar2 ^ uVar1 ^ uVar5) + iStack52 + -0x2b10cf7b + uVar4;\n    uVar4 = (uVar4 * 0x10000 | uVar4 >> 0x10) + uVar2;\n    uVar1 = uVar1 + 0x4881d05 + (uVar2 ^ uVar4 ^ uVar5) + iStack40;\n    uVar1 = (uVar1 >> 9 | uVar1 * 0x800000) + uVar4;\n    uVar5 = (uVar2 ^ uVar4 ^ uVar1) + iStack28 + -0x262b2fc7 + uVar5;\n    uVar5 = (uVar5 * 0x10 | uVar5 >> 0x1c) + uVar1;\n    uVar2 = (uVar4 ^ uVar1 ^ uVar5) + iStack16 + -0x1924661b + uVar2;\n    uVar2 = (uVar2 * 0x800 | uVar2 >> 0x15) + uVar5;\n    uVar4 = (uVar2 ^ uVar1 ^ uVar5) + iStack4 + 0x1fa27cf8 + uVar4;\n    uVar4 = (uVar4 * 0x10000 | uVar4 >> 0x10) + uVar2;\n    uVar1 = (uVar2 ^ uVar4 ^ uVar5) + iStack56 + -0x3b53a99b + uVar1;\n    uVar1 = (uVar1 >> 9 | uVar1 * 0x800000) + uVar4;\n    uVar5 = ((~uVar2 | uVar1) ^ uVar4) + iStack64 + -0xbd6ddbc + uVar5;\n    uVar5 = (uVar5 * 0x40 | uVar5 >> 0x1a) + uVar1;\n    uVar2 = ((~uVar4 | uVar5) ^ uVar1) + iStack36 + 0x432aff97 + uVar2;\n    uVar2 = (uVar2 * 0x400 | uVar2 >> 0x16) + uVar5;\n    uVar4 = ((~uVar1 | uVar2) ^ uVar5) + iStack8 + -0x546bdc59 + uVar4;\n    uVar4 = (uVar4 * 0x8000 | uVar4 >> 0x11) + uVar2;\n    uVar1 = ((~uVar5 | uVar4) ^ uVar2) + iStack44 + -0x36c5fc7 + uVar1;\n    uVar1 = (uVar1 >> 0xb | uVar1 * 0x200000) + uVar4;\n    uVar5 = ((~uVar2 | uVar1) ^ uVar4) + iStack16 + 0x655b59c3 + uVar5;\n    uVar5 = (uVar5 * 0x40 | uVar5 >> 0x1a) + uVar1;\n    uVar2 = ((~uVar4 | uVar5) ^ uVar1) + iStack52 + -0x70f3336e + uVar2;\n    uVar2 = (uVar2 * 0x400 | uVar2 >> 0x16) + uVar5;\n    uVar4 = ((~uVar1 | uVar2) ^ uVar5) + iStack24 + -0x100b83 + uVar4;\n    uVar4 = (uVar4 * 0x8000 | uVar4 >> 0x11) + uVar2;\n    uVar1 = ((~uVar5 | uVar4) ^ uVar2) + iStack60 + -0x7a7ba22f + uVar1;\n    uVar1 = (uVar1 >> 0xb | uVar1 * 0x200000) + uVar4;\n    uVar5 = ((~uVar2 | uVar1) ^ uVar4) + iStack32 + 0x6fa87e4f + uVar5;\n    uVar5 = (uVar5 * 0x40 | uVar5 >> 0x1a) + uVar1;\n    uVar2 = ((~uVar4 | uVar5) ^ uVar1) + iStack4 + -0x1d31920 + uVar2;\n    uVar2 = (uVar2 * 0x400 | uVar2 >> 0x16) + uVar5;\n    uVar4 = ((~uVar1 | uVar2) ^ uVar5) + iStack40 + -0x5cfebcec + uVar4;\n    uVar4 = (uVar4 * 0x8000 | uVar4 >> 0x11) + uVar2;\n    uVar1 = ((~uVar5 | uVar4) ^ uVar2) + iStack12 + 0x4e0811a1 + uVar1;\n    uVar1 = (uVar1 >> 0xb | uVar1 * 0x200000) + uVar4;\n    uVar5 = ((~uVar2 | uVar1) ^ uVar4) + iStack48 + -0x8ac817e + uVar5;\n    uVar5 = (uVar5 * 0x40 | uVar5 >> 0x1a) + uVar1;\n    uVar2 = ((~uVar4 | uVar5) ^ uVar1) + iStack20 + -0x42c50dcb + uVar2;\n    uVar2 = (uVar2 * 0x400 | uVar2 >> 0x16) + uVar5;\n    uVar4 = ((~uVar1 | uVar2) ^ uVar5) + iStack56 + 0x2ad7d2bb + uVar4;\n    uVar4 = (uVar4 * 0x8000 | uVar4 >> 0x11) + uVar2;\n    *unaff_EDI = *unaff_EDI + uVar5;\n    uVar1 = ((~uVar5 | uVar4) ^ uVar2) + iStack28 + -0x14792c6f + uVar1;\n    unaff_EDI[1] = (uVar1 >> 0xb | uVar1 * 0x200000) + unaff_EDI[1] + uVar4;\n    unaff_EDI[2] = unaff_EDI[2] + uVar4;\n    unaff_EDI[3] = unaff_EDI[3] + uVar2;\n    return;\n}\n",
        "token_count": 4616
    },
    "00449af0": {
        "rules": [
            "encrypt data using Sosemanuk/d9cb91cf002a4780a153bbbb736437ff"
        ],
        "decompiled_code": "\nvoid fcn.00449af0(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint var_4h;\n    int32_t *var_8h;\n    uint var_ch;\n    int32_t iStack64;\n    int32_t iStack60;\n    int32_t iStack56;\n    int32_t iStack52;\n    int32_t iStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    int32_t iStack12;\n    int32_t iStack8;\n    int32_t iStack4;\n    \n    uVar2 = var_8h[3];\n    uVar3 = var_8h[2];\n    uVar4 = var_8h[1];\n    fcn.004489b0();\n    uVar1 = (~uVar4 & uVar2 | uVar3 & uVar4) + *var_8h + iStack64;\n    uVar1 = uVar1 * 8 | uVar1 >> 0x1d;\n    uVar2 = (~uVar1 & uVar3 | uVar4 & uVar1) + iStack60 + uVar2;\n    uVar2 = uVar2 * 0x80 | uVar2 >> 0x19;\n    uVar3 = (~uVar2 & uVar4 | uVar2 & uVar1) + iStack56 + uVar3;\n    uVar3 = uVar3 * 0x800 | uVar3 >> 0x15;\n    uVar4 = (~uVar3 & uVar1 | uVar2 & uVar3) + iStack52 + uVar4;\n    uVar4 = uVar4 >> 0xd | uVar4 * 0x80000;\n    uVar1 = (~uVar4 & uVar2 | uVar3 & uVar4) + iStack48 + uVar1;\n    uVar5 = uVar1 * 8 | uVar1 >> 0x1d;\n    uVar2 = (~uVar5 & uVar3 | uVar4 & uVar5) + iStack44 + uVar2;\n    uVar2 = uVar2 * 0x80 | uVar2 >> 0x19;\n    uVar3 = (~uVar2 & uVar4 | uVar2 & uVar5) + iStack40 + uVar3;\n    uVar3 = uVar3 * 0x800 | uVar3 >> 0x15;\n    uVar4 = (~uVar3 & uVar5 | uVar2 & uVar3) + iStack36 + uVar4;\n    uVar1 = uVar4 >> 0xd | uVar4 * 0x80000;\n    uVar5 = (~uVar1 & uVar2 | uVar3 & uVar1) + iStack32 + uVar5;\n    uVar5 = uVar5 * 8 | uVar5 >> 0x1d;\n    uVar2 = (~uVar5 & uVar3 | uVar1 & uVar5) + iStack28 + uVar2;\n    uVar6 = uVar2 * 0x80 | uVar2 >> 0x19;\n    uVar3 = (~uVar6 & uVar1 | uVar6 & uVar5) + iStack24 + uVar3;\n    uVar4 = uVar3 * 0x800 | uVar3 >> 0x15;\n    uVar1 = (~uVar4 & uVar5 | uVar6 & uVar4) + iStack20 + uVar1;\n    uVar1 = uVar1 >> 0xd | uVar1 * 0x80000;\n    uVar5 = (~uVar1 & uVar6 | uVar4 & uVar1) + iStack16 + uVar5;\n    uVar2 = uVar5 * 8 | uVar5 >> 0x1d;\n    uVar6 = (~uVar2 & uVar4 | uVar1 & uVar2) + iStack12 + uVar6;\n    uVar3 = uVar6 * 0x80 | uVar6 >> 0x19;\n    uVar4 = (~uVar3 & uVar1 | uVar3 & uVar2) + iStack8 + uVar4;\n    uVar4 = uVar4 * 0x800 | uVar4 >> 0x15;\n    uVar1 = (~uVar4 & uVar2 | uVar3 & uVar4) + iStack4 + uVar1;\n    uVar1 = uVar1 >> 0xd | uVar1 * 0x80000;\n    uVar2 = ((uVar4 | uVar1) & uVar3 | uVar4 & uVar1) + iStack64 + 0x5a827999 + uVar2;\n    uVar2 = uVar2 * 8 | uVar2 >> 0x1d;\n    uVar3 = ((uVar1 | uVar2) & uVar4 | uVar1 & uVar2) + iStack48 + 0x5a827999 + uVar3;\n    uVar3 = uVar3 * 0x20 | uVar3 >> 0x1b;\n    uVar4 = ((uVar1 | uVar2) & uVar3 | uVar1 & uVar2) + iStack32 + 0x5a827999 + uVar4;\n    uVar4 = uVar4 * 0x200 | uVar4 >> 0x17;\n    uVar1 = ((uVar4 | uVar2) & uVar3 | uVar4 & uVar2) + iStack16 + 0x5a827999 + uVar1;\n    uVar1 = uVar1 * 0x2000 | uVar1 >> 0x13;\n    uVar2 = ((uVar4 | uVar1) & uVar3 | uVar4 & uVar1) + iStack60 + 0x5a827999 + uVar2;\n    uVar2 = uVar2 * 8 | uVar2 >> 0x1d;\n    uVar3 = ((uVar1 | uVar2) & uVar4 | uVar1 & uVar2) + iStack44 + 0x5a827999 + uVar3;\n    uVar3 = uVar3 * 0x20 | uVar3 >> 0x1b;\n    uVar4 = ((uVar1 | uVar2) & uVar3 | uVar1 & uVar2) + iStack28 + 0x5a827999 + uVar4;\n    uVar4 = uVar4 * 0x200 | uVar4 >> 0x17;\n    uVar1 = ((uVar4 | uVar2) & uVar3 | uVar4 & uVar2) + iStack12 + 0x5a827999 + uVar1;\n    uVar1 = uVar1 * 0x2000 | uVar1 >> 0x13;\n    uVar2 = ((uVar4 | uVar1) & uVar3 | uVar4 & uVar1) + iStack56 + 0x5a827999 + uVar2;\n    uVar2 = uVar2 * 8 | uVar2 >> 0x1d;\n    uVar3 = ((uVar1 | uVar2) & uVar4 | uVar1 & uVar2) + iStack40 + 0x5a827999 + uVar3;\n    uVar3 = uVar3 * 0x20 | uVar3 >> 0x1b;\n    uVar4 = ((uVar1 | uVar2) & uVar3 | uVar1 & uVar2) + iStack24 + 0x5a827999 + uVar4;\n    uVar4 = uVar4 * 0x200 | uVar4 >> 0x17;\n    uVar1 = ((uVar4 | uVar2) & uVar3 | uVar4 & uVar2) + iStack8 + 0x5a827999 + uVar1;\n    uVar1 = uVar1 * 0x2000 | uVar1 >> 0x13;\n    uVar2 = ((uVar4 | uVar1) & uVar3 | uVar4 & uVar1) + iStack52 + 0x5a827999 + uVar2;\n    uVar2 = uVar2 * 8 | uVar2 >> 0x1d;\n    uVar3 = ((uVar1 | uVar2) & uVar4 | uVar1 & uVar2) + iStack36 + 0x5a827999 + uVar3;\n    uVar3 = uVar3 * 0x20 | uVar3 >> 0x1b;\n    uVar4 = ((uVar1 | uVar2) & uVar3 | uVar1 & uVar2) + iStack20 + 0x5a827999 + uVar4;\n    uVar4 = uVar4 * 0x200 | uVar4 >> 0x17;\n    uVar1 = ((uVar4 | uVar2) & uVar3 | uVar4 & uVar2) + iStack4 + 0x5a827999 + uVar1;\n    uVar1 = uVar1 * 0x2000 | uVar1 >> 0x13;\n    uVar2 = (uVar3 ^ uVar4 ^ uVar1) + iStack64 + 0x6ed9eba1 + uVar2;\n    uVar2 = uVar2 * 8 | uVar2 >> 0x1d;\n    uVar3 = (uVar4 ^ uVar1 ^ uVar2) + iStack32 + 0x6ed9eba1 + uVar3;\n    uVar3 = uVar3 * 0x200 | uVar3 >> 0x17;\n    uVar4 = (uVar3 ^ uVar1 ^ uVar2) + iStack48 + 0x6ed9eba1 + uVar4;\n    uVar4 = uVar4 * 0x800 | uVar4 >> 0x15;\n    uVar1 = (uVar3 ^ uVar4 ^ uVar2) + iStack16 + 0x6ed9eba1 + uVar1;\n    uVar1 = uVar1 * 0x8000 | uVar1 >> 0x11;\n    uVar2 = (uVar3 ^ uVar4 ^ uVar1) + iStack56 + 0x6ed9eba1 + uVar2;\n    uVar2 = uVar2 * 8 | uVar2 >> 0x1d;\n    uVar3 = (uVar4 ^ uVar1 ^ uVar2) + iStack24 + 0x6ed9eba1 + uVar3;\n    uVar3 = uVar3 * 0x200 | uVar3 >> 0x17;\n    uVar4 = (uVar3 ^ uVar1 ^ uVar2) + iStack40 + 0x6ed9eba1 + uVar4;\n    uVar4 = uVar4 * 0x800 | uVar4 >> 0x15;\n    uVar1 = (uVar3 ^ uVar4 ^ uVar2) + iStack8 + 0x6ed9eba1 + uVar1;\n    uVar1 = uVar1 * 0x8000 | uVar1 >> 0x11;\n    uVar2 = (uVar3 ^ uVar4 ^ uVar1) + iStack60 + 0x6ed9eba1 + uVar2;\n    uVar2 = uVar2 * 8 | uVar2 >> 0x1d;\n    uVar3 = (uVar4 ^ uVar1 ^ uVar2) + iStack28 + 0x6ed9eba1 + uVar3;\n    uVar3 = uVar3 * 0x200 | uVar3 >> 0x17;\n    uVar4 = (uVar3 ^ uVar1 ^ uVar2) + iStack44 + 0x6ed9eba1 + uVar4;\n    uVar4 = uVar4 * 0x800 | uVar4 >> 0x15;\n    uVar1 = (uVar3 ^ uVar4 ^ uVar2) + iStack12 + 0x6ed9eba1 + uVar1;\n    uVar1 = uVar1 * 0x8000 | uVar1 >> 0x11;\n    uVar2 = (uVar3 ^ uVar4 ^ uVar1) + iStack52 + 0x6ed9eba1 + uVar2;\n    uVar2 = uVar2 * 8 | uVar2 >> 0x1d;\n    uVar3 = (uVar4 ^ uVar1 ^ uVar2) + iStack20 + 0x6ed9eba1 + uVar3;\n    uVar3 = uVar3 * 0x200 | uVar3 >> 0x17;\n    uVar4 = (uVar3 ^ uVar1 ^ uVar2) + iStack36 + 0x6ed9eba1 + uVar4;\n    *var_8h = *var_8h + uVar2;\n    uVar4 = uVar4 * 0x800 | uVar4 >> 0x15;\n    uVar1 = (uVar3 ^ uVar4 ^ uVar2) + iStack4 + 0x6ed9eba1 + uVar1;\n    var_8h[2] = var_8h[2] + uVar4;\n    var_8h[1] = (uVar1 * 0x8000 | uVar1 >> 0x11) + var_8h[1];\n    var_8h[3] = var_8h[3] + uVar3;\n    return;\n}\n",
        "token_count": 3220
    },
    "0044a8fd": {
        "rules": [
            "generate random numbers using the Delphi LCG/d1e3669b265a4cefae2dee380548f202"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0044a8fd(uint32_t *param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t unaff_EDI;\n    \n    uVar1 = *(unaff_EDI + ((*param_1 ^ param_2) & 0xff) * 4) ^ *param_1 >> 8;\n    *param_1 = uVar1;\n    uVar1 = ((uVar1 & 0xff) + param_1[1]) * 0x8088405 + 1;\n    param_1[1] = uVar1;\n    param_1[2] = param_1[2] >> 8 ^ *(unaff_EDI + ((uVar1 >> 0x18 ^ param_1[2]) & 0xff) * 4);\n    return param_2;\n}\n",
        "token_count": 197
    },
    "0040102f": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nushort * __fastcall fcn.0040102f(ushort *param_1)\n\n{\n    *(param_1 + 10) = 7;\n    *(param_1 + 8) = 0;\n    *param_1 = 0;\n    param_1[0xc] = 0;\n    *(param_1 + 0xd) = 0;\n    fcn.00453710(param_1 + 0x1b, 0, 0x50);\n    fcn.00453710(param_1 + 0x6b, 0, 0x17);\n    fcn.004537a0(param_1 + 0x6b, 3, 0x4a00e4);\n    fcn.004537a0(param_1 + 0x37, 3, 0x4a00e8);\n    fcn.004537a0(param_1 + 0x71, 3, 0x4a00ec);\n    fcn.004537a0(param_1 + 0x3a, 2, 0x4a00f0);\n    fcn.004537a0(param_1 + 0x3b, 0xc, \"00.000.0000\");\n    return param_1;\n}\n",
        "token_count": 285
    },
    "004028f4": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.004028f4(uint *param_1)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    uVar1 = fcn.0040bfe8();\n    param_1[3] = uVar1;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    param_1[8] = 0;\n    param_1[10] = 0;\n    param_1[9] = 1;\n    param_1[0xf] = 0;\n    param_1[0x10] = 7;\n    *(param_1 + 0xb) = 0;\n    param_1[0x15] = 0;\n    param_1[0x16] = 7;\n    *(param_1 + 0x11) = 0;\n    param_1[0x1b] = 0;\n    param_1[0x1c] = 7;\n    *(param_1 + 0x17) = 0;\n    param_1[0x21] = 0;\n    param_1[0x22] = 7;\n    *(param_1 + 0x1d) = 0;\n    param_1[0x27] = 0;\n    param_1[0x28] = 7;\n    *(param_1 + 0x23) = 0;\n    param_1[0x2d] = 0;\n    param_1[0x2e] = 7;\n    *(param_1 + 0x29) = 0;\n    param_1[0x33] = 0;\n    param_1[0x34] = 7;\n    *(param_1 + 0x2f) = 0;\n    param_1[0x39] = 0;\n    param_1[0x3a] = 7;\n    *(param_1 + 0x35) = 0;\n    param_1[0x3b] = 0;\n    param_1[0x40] = 0;\n    param_1[0x41] = 7;\n    *(param_1 + 0x3c) = 0;\n    param_1[0x46] = 0;\n    param_1[0x47] = 7;\n    *(param_1 + 0x42) = 0;\n    param_1[0x4c] = 0;\n    param_1[0x4d] = 7;\n    *(param_1 + 0x48) = 0;\n    param_1[0x52] = 0;\n    param_1[0x53] = 7;\n    *(param_1 + 0x4e) = 0;\n    return param_1;\n}\n",
        "token_count": 693
    },
    "004102f1": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.004102f1(code **param_1)\n\n{\n    *param_1 = vtable.ATTK::ConfigPlugin.0;\n    param_1[5] = NULL;\n    param_1[6] = 0x7;\n    *(param_1 + 1) = 0;\n    param_1[7] = NULL;\n    param_1[8] = NULL;\n    param_1[0xd] = NULL;\n    param_1[0xe] = 0x7;\n    *(param_1 + 9) = 0;\n    param_1[0x13] = NULL;\n    param_1[0x14] = 0x7;\n    *(param_1 + 0xf) = 0;\n    param_1[0x19] = NULL;\n    param_1[0x1a] = 0x7;\n    *(param_1 + 0x15) = 0;\n    param_1[0x1f] = NULL;\n    param_1[0x20] = 0x7;\n    *(param_1 + 0x1b) = 0;\n    param_1[0x25] = NULL;\n    param_1[0x26] = 0x7;\n    *(param_1 + 0x21) = 0;\n    param_1[0x2b] = NULL;\n    param_1[0x2c] = 0x7;\n    *(param_1 + 0x27) = 0;\n    param_1[0x31] = NULL;\n    param_1[0x32] = 0x7;\n    *(param_1 + 0x2d) = 0;\n    param_1[0x37] = NULL;\n    param_1[0x38] = 0x7;\n    *(param_1 + 0x33) = 0;\n    param_1[0x3d] = NULL;\n    param_1[0x3e] = 0x7;\n    *(param_1 + 0x39) = 0;\n    param_1[0x43] = NULL;\n    param_1[0x44] = 0x7;\n    *(param_1 + 0x3f) = 0;\n    param_1[0x45] = NULL;\n    param_1[0x46] = NULL;\n    param_1[0x47] = NULL;\n    param_1[0x48] = vtable.ATTK::PathList.0;\n    param_1[0x49] = NULL;\n    param_1[0x4a] = NULL;\n    param_1[0x4b] = NULL;\n    param_1[0x4c] = NULL;\n    param_1[0x4d] = vtable.ATTK::PathList.0;\n    param_1[0x4e] = NULL;\n    param_1[0x4f] = NULL;\n    param_1[0x50] = NULL;\n    param_1[0x51] = NULL;\n    return param_1;\n}\n",
        "token_count": 703
    },
    "00413b2c": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413b2c(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint *in_ECX;\n    \n    fcn.00402707(arg_8h);\n    *(in_ECX + 6) = 0x2e;\n    puVar1 = in_ECX;\n    if (7 < in_ECX[5]) {\n        puVar1 = *in_ECX;\n    }\n    in_ECX[7] = puVar1;\n    return;\n}\n",
        "token_count": 111
    },
    "00413b57": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413b57(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint *in_ECX;\n    \n    fcn.004084c5(arg_8h);\n    *(in_ECX + 6) = 0x2e;\n    puVar1 = in_ECX;\n    if (7 < in_ECX[5]) {\n        puVar1 = *in_ECX;\n    }\n    in_ECX[7] = puVar1;\n    return;\n}\n",
        "token_count": 111
    },
    "00414c3f": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414c3f(uint *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *in_ECX;\n    uint *puVar2;\n    \n    fcn.004084c5(arg_8h);\n    *(in_ECX + 6) = *(arg_8h + 6);\n    puVar2 = in_ECX;\n    if (7 < in_ECX[5]) {\n        puVar2 = *in_ECX;\n    }\n    in_ECX[7] = puVar2;\n    piVar1 = arg_8h + 7;\n    if (7 < arg_8h[5]) {\n        arg_8h = *arg_8h;\n    }\n    in_ECX[7] = puVar2 + (*piVar1 - arg_8h >> 1) * 2;\n    return;\n}\n",
        "token_count": 194
    },
    "00416c0b": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.00416c0b(code **param_1, uint param_2)\n\n{\n    uint var_4h;\n    \n    fcn.00417077(param_2);\n    param_1[4] = vtable.boost::exception.0;\n    param_1[5] = NULL;\n    param_1[8] = 0xffffffff;\n    param_1[6] = NULL;\n    param_1[7] = NULL;\n    *param_1 = vtable.boost::exception_detail::error_info_injector_class_boost::property_tree::ptree_bad_path_.0;\n    param_1[4] = vtable.boost::exception_detail::error_info_injector_class_boost::property_tree::ptree_bad_path_.1.0;\n    return param_1;\n}\n",
        "token_count": 175
    },
    "00417299": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00417299(uint arg_8h)\n\n{\n    uint *puVar1;\n    \n    puVar1 = fcn.004173b4(0x30);\n    if (puVar1 == NULL) {\n        puVar1 = NULL;\n    }\n    else {\n        *puVar1 = 0;\n        puVar1[1] = 0;\n        puVar1[4] = 0;\n        puVar1[5] = arg_8h;\n        puVar1[6] = 0;\n        puVar1[8] = 0;\n    }\n    return puVar1;\n}\n",
        "token_count": 140
    },
    "00420480": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420480(uint *param_1)\n\n{\n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    param_1[0xc] = 0;\n    param_1[0xd] = 0;\n    param_1[0xe] = 0;\n    param_1[0xf] = 0;\n    param_1[0x10] = 0;\n    param_1[0x11] = 0;\n    param_1[0x12] = 0;\n    return;\n}\n",
        "token_count": 194
    },
    "00422c20": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00422c20(int32_t arg_8h, int32_t *arg_ch, uint32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    uVar1 = *(arg_8h + 0x18) - *(arg_8h + 0x14);\n    if ((uVar1 == 0) && (*arg_10h != 0)) {\n        *(arg_8h + 0x14) = 0;\n        if (0x4000 < *arg_10h) {\n            *arg_10h = 0x4000;\n        }\n        uVar2 = (***(arg_8h + 0x10))(*(arg_8h + 0x10), arg_8h + 0x1c, arg_10h);\n        uVar1 = *arg_10h;\n        *(arg_8h + 0x18) = uVar1;\n    }\n    if (uVar1 < *arg_10h) {\n        *arg_10h = uVar1;\n    }\n    *arg_ch = arg_8h + 0x1c + *(arg_8h + 0x14);\n    return uVar2;\n}\n",
        "token_count": 289
    },
    "00422c90": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00422c90(int32_t arg_8h, uint arg_ch, uint32_t *arg_10h)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    \n    uVar2 = *(arg_8h + 0x18) - *(arg_8h + 0x14);\n    if (uVar2 == 0) {\n    // WARNING: Could not recover jumptable at 0x00422cad. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar1 = (***(arg_8h + 0x10))();\n        return uVar1;\n    }\n    if (*arg_10h <= uVar2 && uVar2 != *arg_10h) {\n        uVar2 = *arg_10h;\n    }\n    fcn.00452a10(arg_ch, arg_8h + 0x1c + *(arg_8h + 0x14), uVar2);\n    *(arg_8h + 0x14) = *(arg_8h + 0x14) + uVar2;\n    *arg_10h = uVar2;\n    return 0;\n}\n",
        "token_count": 265
    },
    "00422ce0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422ce0(int32_t arg_8h)\n\n{\n    *(arg_8h + 0x18) = 0;\n    *(arg_8h + 0x14) = 0;\n    // WARNING: Could not recover jumptable at 0x00422cfe. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(*(arg_8h + 0x10) + 4))();\n    return;\n}\n",
        "token_count": 108
    },
    "004293f0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004293f0(uint *param_1)\n\n{\n    if (7 < param_1[0xb]) {\n        fcn.00452a07(param_1[6]);\n    }\n    param_1[0xb] = 7;\n    param_1[10] = 0;\n    *(param_1 + 6) = 0;\n    if (7 < param_1[5]) {\n        fcn.00452a07(*param_1);\n    }\n    param_1[5] = 7;\n    param_1[4] = 0;\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 145
    },
    "004294a0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004294a0(int32_t param_1)\n\n{\n    fcn.00429c80();\n    fcn.00452a07(*(param_1 + 0x34));\n    *(param_1 + 0x34) = 0;\n    if (7 < *(param_1 + 0x30)) {\n        fcn.00452a07(*(param_1 + 0x1c));\n    }\n    *(param_1 + 0x30) = 7;\n    *(param_1 + 0x2c) = 0;\n    *(param_1 + 0x1c) = 0;\n    if (7 < *(param_1 + 0x18)) {\n        fcn.00452a07(*(param_1 + 4));\n    }\n    *(param_1 + 0x18) = 7;\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 4) = 0;\n    return;\n}\n",
        "token_count": 226
    },
    "00429b80": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "PEB access",
            "access PEB ldr_data",
            "get kernel32 base address"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.00429b80(code **param_1)\n\n{\n    code **ppcVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x48aff6;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *param_1 = vtable.XmlReader_class_XOrEncryptBufferProvider_.0;\n    param_1[6] = 0x7;\n    param_1[5] = NULL;\n    *(param_1 + 1) = 0;\n    param_1[0xc] = 0x7;\n    param_1[0xb] = NULL;\n    *(param_1 + 7) = 0;\n    ppcVar1 = param_1 + 0xd;\n    var_4h = 1;\n    *ppcVar1 = NULL;\n    param_1[0xe] = NULL;\n    param_1[0xf] = NULL;\n    param_1[0x10] = NULL;\n    param_1[0x11] = NULL;\n    puVar3 = fcn.0045306d(8);\n    if (puVar3 == NULL) {\n        puVar3 = fcn.0044e7ba(uVar2);\n    }\n    *ppcVar1 = puVar3;\n    *puVar3 = 0;\n    puVar3[1] = 0;\n    **ppcVar1 = ppcVar1;\n    *in_FS_OFFSET = var_ch;\n    return param_1;\n}\n",
        "token_count": 404
    },
    "0042a380": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042a380(int32_t param_1)\n\n{\n    if (7 < *(param_1 + 0x18)) {\n        fcn.00452a07(*(param_1 + 4));\n    }\n    *(param_1 + 0x18) = 7;\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 4) = 0;\n    fcn.00452a07(param_1);\n    return param_1;\n}\n",
        "token_count": 117
    },
    "0042ab10": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ab10(uint arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    ushort *in_ECX;\n    \n    *(in_ECX + 10) = 7;\n    *(in_ECX + 8) = 0;\n    *in_ECX = 0;\n    fcn.00402450(arg_8h, 0, 0xffffffff);\n    puVar1 = in_ECX + 0xc;\n    *(in_ECX + 0x16) = 7;\n    *(in_ECX + 0x14) = 0;\n    *puVar1 = 0;\n    if (arg_ch[5] < 8) {\n        if (arg_ch[4] + 1 != 0) {\n            fcn.004530c0(puVar1, arg_ch, (arg_ch[4] + 1) * 2);\n        }\n    }\n    else {\n        *puVar1 = *arg_ch;\n        *arg_ch = 0;\n    }\n    *(in_ECX + 0x14) = arg_ch[4];\n    *(in_ECX + 0x16) = arg_ch[5];\n    arg_ch[5] = 7;\n    arg_ch[4] = 0;\n    *arg_ch = 0;\n    return;\n}\n",
        "token_count": 296
    },
    "0042b440": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042b440(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint *in_ECX;\n    uint *puVar2;\n    \n    in_ECX[5] = 7;\n    in_ECX[4] = 0;\n    *in_ECX = 0;\n    if (arg_8h[5] < 8) {\n        if (arg_8h[4] != -1) {\n            fcn.004530c0();\n        }\n    }\n    else {\n        *in_ECX = *arg_8h;\n        *arg_8h = 0;\n    }\n    in_ECX[4] = arg_8h[4];\n    in_ECX[5] = arg_8h[5];\n    arg_8h[5] = 7;\n    arg_8h[4] = 0;\n    *arg_8h = 0;\n    puVar1 = in_ECX + 6;\n    puVar2 = arg_8h + 6;\n    in_ECX[0xb] = 7;\n    in_ECX[10] = 0;\n    *puVar1 = 0;\n    if (arg_8h[0xb] < 8) {\n        if (arg_8h[10] + 1 != 0) {\n            fcn.004530c0(puVar1, puVar2, (arg_8h[10] + 1) * 2);\n        }\n    }\n    else {\n        *puVar1 = *puVar2;\n        *puVar2 = 0;\n    }\n    in_ECX[10] = arg_8h[10];\n    in_ECX[0xb] = arg_8h[0xb];\n    arg_8h[0xb] = 7;\n    arg_8h[10] = 0;\n    *puVar2 = 0;\n    return;\n}\n",
        "token_count": 429
    },
    "0042d680": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d680(uint arg_8h, uint arg_ch)\n\n{\n    ushort *in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48a9e8;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    *(in_ECX + 10) = 7;\n    *(in_ECX + 8) = 0;\n    *in_ECX = 0;\n    fcn.00402450(arg_8h, 0, 0xffffffff);\n    var_4h = 0;\n    *(in_ECX + 0x16) = 7;\n    *(in_ECX + 0x14) = 0;\n    in_ECX[0xc] = 0;\n    fcn.00402450(arg_ch, 0, 0xffffffff);\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 244
    },
    "00433d20": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "PEB access",
            "access PEB ldr_data",
            "get kernel32 base address"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.00433d20(code **param_1)\n\n{\n    code **ppcVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x48aff6;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *param_1 = vtable.XmlReader_class_DefaultXmlBufferProvider_.0;\n    param_1[6] = 0x7;\n    param_1[5] = NULL;\n    *(param_1 + 1) = 0;\n    param_1[0xc] = 0x7;\n    param_1[0xb] = NULL;\n    *(param_1 + 7) = 0;\n    ppcVar1 = param_1 + 0xd;\n    var_4h = 1;\n    *ppcVar1 = NULL;\n    param_1[0xe] = NULL;\n    param_1[0xf] = NULL;\n    param_1[0x10] = NULL;\n    param_1[0x11] = NULL;\n    puVar3 = fcn.0045306d(8);\n    if (puVar3 == NULL) {\n        puVar3 = fcn.0044e7ba(uVar2);\n    }\n    *ppcVar1 = puVar3;\n    *puVar3 = 0;\n    puVar3[1] = 0;\n    **ppcVar1 = ppcVar1;\n    *in_FS_OFFSET = var_ch;\n    return param_1;\n}\n",
        "token_count": 403
    },
    "00434d20": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00434d20(ushort *arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x48b359;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    var_4h = 0;\n    if (arg_8h != NULL) {\n        *(arg_8h + 10) = 7;\n        *(arg_8h + 8) = 0;\n        *arg_8h = 0;\n        fcn.00402450(arg_ch, 0, 0xffffffff);\n        var_4h = CONCAT31(var_4h._1_3_, 1);\n        *(arg_8h + 0x16) = 7;\n        *(arg_8h + 0x14) = 0;\n        arg_8h[0xc] = 0;\n        fcn.00402450(arg_ch + 0x18, 0, 0xffffffff);\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 281
    },
    "00435dcd": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00435dcd(code **param_1)\n\n{\n    param_1[7] = NULL;\n    *param_1 = fcn.00435bfd;\n    param_1[1] = fcn.00435c88;\n    param_1[2] = fcn.00435ccb;\n    param_1[3] = 0x435d0e;\n    param_1[4] = 0x435d40;\n    param_1[5] = 0x435d96;\n    param_1[6] = 0x435dbe;\n    return;\n}\n",
        "token_count": 134
    },
    "00436f1c": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nuint fcn.00436f1c(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    \n    if ((param_1 != 0) && (puVar2 = *(param_1 + 0x1c),  puVar2 != NULL)) {\n        puVar2[7] = 0;\n        *(param_1 + 0x14) = 0;\n        *(param_1 + 8) = 0;\n        *(param_1 + 0x18) = 0;\n        *(param_1 + 0x30) = 1;\n        puVar1 = puVar2 + 0x14c;\n        *puVar2 = 0;\n        puVar2[1] = 0;\n        puVar2[3] = 0;\n        puVar2[5] = 0x8000;\n        puVar2[8] = 0;\n        puVar2[10] = 0;\n        puVar2[0xb] = 0;\n        puVar2[0xc] = 0;\n        puVar2[0xe] = 0;\n        puVar2[0xf] = 0;\n        puVar2[0x1b] = puVar1;\n        puVar2[0x14] = puVar1;\n        puVar2[0x13] = puVar1;\n        return 0;\n    }\n    return 0xfffffffe;\n}\n",
        "token_count": 325
    },
    "00438495": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00438495(code **param_1)\n\n{\n    param_1[7] = NULL;\n    *param_1 = fcn.004383cc;\n    param_1[1] = 0x438413;\n    param_1[2] = 0x43842a;\n    param_1[3] = 0x438441;\n    param_1[4] = 0x43844c;\n    param_1[5] = 0x43847f;\n    param_1[6] = 0x43848a;\n    return;\n}\n",
        "token_count": 130
    },
    "0043b620": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.0043b620(uint *param_1, uint32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint *puVar3;\n    uint32_t *puVar4;\n    uint32_t in_stack_ffffffac;\n    uchar auStack80 [29];\n    uint uStack51;\n    uint32_t uStack4;\n    \n    uStack4 = *0x4b4f00 ^ &stack0xffffffac;\n    puVar3 = &stack0xffffffac;\n    for (iVar1 = 0x14; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *param_1;\n        param_1 = param_1 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    fcn.0043bc60(&stack0xffffffae, 0x3e);\n    param_2[2] = 0;\n    param_2[3] = 0;\n    param_2[4] = 0;\n    param_2[5] = 0;\n    param_2[6] = 0;\n    param_2[7] = 0;\n    param_2[8] = 0;\n    param_2[9] = 0;\n    puVar2 = &stack0xffffffae;\n    puVar4 = param_2 + 2;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar4 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = *puVar2;\n    *(puVar4 + 2) = *(puVar2 + 2);\n    param_2[10] = 0;\n    param_2[0xb] = 0;\n    param_2[0xc] = 0;\n    param_2[0xd] = 0;\n    param_2[0xe] = 0;\n    param_2[0xf] = 0;\n    param_2[0x10] = 0;\n    param_2[0x11] = 0;\n    puVar2 = &uStack51;\n    puVar4 = param_2 + 10;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar4 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = *puVar2;\n    *(puVar4 + 2) = *(puVar2 + 2);\n    *param_2 = in_stack_ffffffac & 0xff;\n    param_2[1] = in_stack_ffffffac >> 8 & 0xff;\n    fcn.004529f8(in_stack_ffffffac);\n    return;\n}\n",
        "token_count": 671
    },
    "0043ca10": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint fcn.0043ca10(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint32_t *puVar2;\n    uint uVar3;\n    uint32_t **in_FS_OFFSET;\n    uint32_t *puStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x485eb1;\n    puStack12 = *in_FS_OFFSET;\n    puVar2 = *0x4b4f00 ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &puStack12;\n    fcn.0043c980(param_2, 0xffffffff);\n    puStack12 = 0x1;\n    uVar3 = fcn.0043c610(param_1);\n    uVar1 = uStack8;\n    fcn.0043c6b0(uVar3);\n    fcn.0043c360(uVar3, param_1, 1);\n    *in_FS_OFFSET = puVar2;\n    return uVar1;\n}\n",
        "token_count": 236
    },
    "0043cab0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0043cab0(void)\n\n{\n    uint32_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x485ef9;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &stack0xffffffec;\n    *in_FS_OFFSET = &piStack12;\n    uStack4 = 3;\n    fcn.0043c360(uVar1);\n    uStack4._0_1_ = 2;\n    fcn.0043c360();\n    uStack4._0_1_ = 1;\n    fcn.0043c360();\n    uStack4 = uStack4._1_3_ << 8;\n    fcn.0043c360();\n    uStack4 = 0xffffffff;\n    fcn.0043c360();\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 236
    },
    "0043cd20": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "PEB access",
            "access PEB ldr_data",
            "get process heap flags",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __fastcall fcn.0043cd20(int32_t *param_1)\n\n{\n    char *pcVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    int32_t *unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x485f92;\n    piStack12 = *in_FS_OFFSET;\n    uVar2 = *0x4b4f00 ^ &stack0xffffffe0;\n    *in_FS_OFFSET = &piStack12;\n    fcn.0043beb0(uVar2);\n    uStack4 = 0;\n    fcn.0043beb0();\n    uStack4._0_1_ = 1;\n    fcn.0043beb0();\n    uStack4._0_1_ = 2;\n    fcn.0043beb0();\n    uStack4._0_1_ = 3;\n    fcn.0043beb0();\n    uStack4._0_1_ = 4;\n    fcn.0043beb0();\n    uStack4 = CONCAT31(uStack4._1_3_, 5);\n    fcn.0043c570(0x4a23ad);\n    fcn.0043c570(0x4a23ad);\n    fcn.0043c570(0x4a23ad);\n    fcn.0043c570(0x4a23ad);\n    fcn.0043c570(0x4a23ad);\n    param_1[0xb] = 1;\n    param_1[0xc] = 1;\n    param_1[0xd] = 1;\n    param_1[9] = 0;\n    param_1[10] = 0;\n    pcVar1 = 0x4b4220;\n    do {\n        pcVar3 = pcVar1;\n        pcVar1 = pcVar3 + 1;\n    } while (*pcVar3 != '\\0');\n    iVar4 = fcn.0045306d(pcVar3 + -0x4b421f);\n    *param_1 = iVar4;\n    if (iVar4 != 0) {\n        fcn.004586b0(iVar4, 0x4b4220, pcVar3 + -0x4b4220);\n        (pcVar3 + -0x4b421f)[*param_1 + -1] = '\\0';\n        iVar4 = fcn.0045306d(9);\n        param_1[1] = iVar4;\n        if (iVar4 != 0) {\n            fcn.004586b0(iVar4, \"aucache/\", 8);\n            *(param_1[1] + 8) = 0;\n        }\n    }\n    *in_FS_OFFSET = unaff_EDI;\n    return param_1;\n}\n",
        "token_count": 679
    },
    "0043ce70": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0043ce70(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x485ff2;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &stack0xffffffec;\n    *in_FS_OFFSET = &piStack12;\n    uStack4 = 5;\n    if (*param_1 != 0) {\n        fcn.00452a07(*param_1, uVar1);\n    }\n    if (param_1[1] != 0) {\n        fcn.00452a07(param_1[1], uVar1);\n    }\n    uStack4._0_1_ = 4;\n    fcn.0043c360();\n    uStack4._0_1_ = 3;\n    fcn.0043c360();\n    uStack4._0_1_ = 2;\n    fcn.0043c360();\n    uStack4._0_1_ = 1;\n    fcn.0043c360();\n    uStack4 = uStack4._1_3_ << 8;\n    fcn.0043c360();\n    uStack4 = 0xffffffff;\n    fcn.0043c360();\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 340
    },
    "0043cfa0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.0043cfa0(void)\n\n{\n    uint32_t uVar1;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x486018;\n    uStack12 = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &uStack12;\n    *in_FS_OFFSET = &uStack12;\n    uStack4 = 0;\n    fcn.0043c590(&stack0x00000004);\n    uStack8 = 0xffffffff;\n    fcn.0043c360();\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 158
    },
    "0043e640": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __thiscall fcn.0043e640(uint param_1, uint param_2, uint param_3)\n\n{\n    uint32_t uVar1;\n    int32_t *unaff_ESI;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x486154;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &stack0xffffffec;\n    *in_FS_OFFSET = &piStack12;\n    fcn.0043beb0(uVar1);\n    uStack4 = 0;\n    fcn.0043beb0();\n    uStack4._0_1_ = 1;\n    fcn.0043beb0();\n    uStack4._0_1_ = 2;\n    fcn.0043beb0();\n    uStack4._0_1_ = 3;\n    fcn.0043beb0();\n    uStack4 = CONCAT31(uStack4._1_3_, 4);\n    fcn.0043e140(param_2, param_3);\n    *in_FS_OFFSET = unaff_ESI;\n    return param_1;\n}\n",
        "token_count": 295
    },
    "0043ecb0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043ecb0(uint param_1, int32_t param_2, uint *param_3)\n\n{\n    uint arg_8h;\n    uchar auStack136 [124];\n    uint uStack12;\n    uint uStack8;\n    uint32_t uStack4;\n    \n    uStack4 = *0x4b4f00 ^ &stack0xffffff74;\n    arg_8h = 0;\n    fcn.00453710(auStack136, 0, 0x7c);\n    if ((param_2 != 0) && (param_3 != NULL)) {\n        fcn.00443cb0(param_1, &stack0xffffff74);\n        fcn.004432f0(param_2, &uStack12, &stack0xffffff74);\n        *param_3 = uStack12;\n        param_3[1] = uStack8;\n        fcn.004529f8(arg_8h);\n        return;\n    }\n    fcn.004529f8(arg_8h);\n    return;\n}\n",
        "token_count": 232
    },
    "00440040": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440040(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    ulong uVar7;\n    \n    iVar1 = *(param_2 + 0x10);\n    iVar2 = *(param_2 + 8);\n    iVar3 = *(param_2 + 0x14);\n    iVar4 = *(param_2 + 0xc);\n    uVar7 = fcn.00440030();\n    iVar6 = iVar4 + uVar7;\n    *((uVar7 >> 0x20) + 8) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0x14) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0x10) = iVar6;\n    uVar7 = fcn.00440030();\n    *((uVar7 >> 0x20) + 0xc) = uVar7 + iVar6;\n    uVar7 = fcn.00440030();\n    iVar5 = uVar7 >> 0x20;\n    iVar6 = uVar7 + *(iVar5 + 0xc);\n    *(iVar5 + 8) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0x14) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0x10) = iVar6;\n    uVar7 = fcn.00440030();\n    *((uVar7 >> 0x20) + 0xc) = uVar7 + iVar6;\n    uVar7 = fcn.00440030();\n    iVar5 = uVar7 >> 0x20;\n    iVar6 = uVar7 + *(iVar5 + 0xc);\n    *(iVar5 + 8) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0x14) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0x10) = iVar6;\n    uVar7 = fcn.00440030();\n    *((uVar7 >> 0x20) + 0xc) = uVar7 + iVar6;\n    uVar7 = fcn.00440030();\n    iVar5 = uVar7 >> 0x20;\n    iVar6 = uVar7 + *(iVar5 + 0xc);\n    *(iVar5 + 8) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0x14) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0x10) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0xc) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 8) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0x14) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0x10) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0xc) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 8) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0x14) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0x10) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0xc) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 8) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0x14) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0x10) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0xc) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 8) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0x14) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0x10) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0xc) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 8) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0x14) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0x10) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0xc) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 8) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0x14) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0x10) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0xc) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 8) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0x14) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0x10) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0xc) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 8) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0x14) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0x10) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0xc) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 8) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0x14) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0x10) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0xc) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 8) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0x14) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0x10) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0xc) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 8) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0x14) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0x10) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0xc) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 8) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0x14) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar6 = iVar6 + uVar7;\n    *((uVar7 >> 0x20) + 0x10) = iVar6;\n    uVar7 = fcn.00440030();\n    iVar5 = uVar7 >> 0x20;\n    *(iVar5 + 8) = *(iVar5 + 8) + iVar2;\n    *(iVar5 + 0x10) = *(iVar5 + 0x10) + iVar1;\n    *(iVar5 + 0xc) = uVar7 + iVar6;\n    *(iVar5 + 0xc) = *(iVar5 + 0xc) + iVar4;\n    *(iVar5 + 0x14) = *(iVar5 + 0x14) + iVar3;\n    return;\n}\n",
        "token_count": 2998
    },
    "004443b0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "PEB access",
            "access PEB ldr_data",
            "get ntdll base address"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.004443b0(code **param_1, int32_t *param_2, code *param_3, code *param_4)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x486918;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &piStack12;\n    fcn.004488c0(uVar1);\n    uStack4 = 0;\n    *param_1 = vtable.PR_HTTP::TmInputSocketStream.0;\n    param_1[4] = param_2;\n    param_1[5] = NULL;\n    param_1[6] = param_4;\n    param_1[7] = NULL;\n    param_1[8] = NULL;\n    param_1[9] = NULL;\n    param_1[10] = NULL;\n    param_1[0xc] = param_3;\n    param_1[0xd] = NULL;\n    param_1[0xe] = NULL;\n    param_1[0xf] = NULL;\n    if (param_2 != NULL) {\n        (**(*param_2 + 0x3c))();\n        if ((0 < param_1[6]) && (-1 < param_1[0xc])) {\n            pcVar2 = fcn.0045306d(param_1[6]);\n            param_1[5] = pcVar2;\n            if (pcVar2 != NULL) goto code_r0x0044444c;\n        }\n    }\n    param_1[3] = 0x1;\n    param_1[1] = 0x1;\n    param_1[2] = 0x1;\ncode_r0x0044444c:\n    *in_FS_OFFSET = piStack12;\n    return param_1;\n}\n",
        "token_count": 472
    },
    "00444f00": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __thiscall fcn.00444f00(int32_t param_1, uint param_2, uint param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint32_t *in_FS_OFFSET;\n    uint32_t auStack20 [2];\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x486a49;\n    uStack12 = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &stack0xffffffe0;\n    *in_FS_OFFSET = &uStack12;\n    uVar5 = 0;\n    auStack20[0] = 0;\n    if (*(param_1 + 0x54) == 0) {\n        fcn.0043c980(0x4a23ad, 0xffffffff);\n    }\n    else {\n        fcn.0043e870(&param_3, param_3, uVar1);\n        uStack4 = 1;\n        iVar2 = fcn.0043c0a0();\n        if (iVar2 != 0) {\n            do {\n                uVar1 = uVar5;\n                uVar3 = fcn.0043c160(uVar5);\n                uVar4 = fcn.0043e870(auStack20, uVar3);\n                uStack8 = CONCAT31(uStack8._1_3_, 2);\n                iVar2 = fcn.0043c280(uVar3, uVar1, uVar4);\n                uStack12 = CONCAT31(uStack12._1_3_, 1);\n                fcn.0043c360();\n                if (iVar2 == 0) {\n                    uVar3 = fcn.0043c160(uVar5);\n                    param_2 = uStack8;\n                    fcn.0043c6b0();\n                    goto code_r0x00444fcc;\n                }\n                uVar5 = uVar5 + 1;\n                uVar1 = fcn.0043c0a0();\n            } while (uVar5 < uVar1);\n        }\n        uVar3 = 0x4a23ad;\n        fcn.0043c980(0x4a23ad, 0xffffffff);\ncode_r0x00444fcc:\n        uStack12 = uStack12 & 0xffffff00;\n        fcn.0043c360(uVar3);\n    }\n    *in_FS_OFFSET = auStack20[0];\n    return param_2;\n}\n",
        "token_count": 594
    },
    "00445030": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint fcn.00445030(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t **in_FS_OFFSET;\n    uint32_t *puStack28;\n    uint32_t *puStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x486a80;\n    puStack12 = *in_FS_OFFSET;\n    puStack28 = *0x4b4f00 ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &puStack12;\n    fcn.0043c980(\"Content-Length\", 0xffffffff);\n    puStack12 = NULL;\n    fcn.00444f00(&puStack28, &stack0xffffffe8);\n    fcn.0043c360();\n    iVar1 = fcn.0043c2e0();\n    if (iVar1 != 0) {\n        fcn.0043c360();\n        *in_FS_OFFSET = puStack28;\n        return 0;\n    }\n    uVar2 = fcn.0043bff0();\n    uVar2 = fcn.00458c5b(uVar2);\n    fcn.0043c360();\n    *in_FS_OFFSET = puStack28;\n    return uVar2;\n}\n",
        "token_count": 285
    },
    "004451c0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "access PEB ldr_data"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004451c0(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x486b35;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &stack0xffffffec;\n    *in_FS_OFFSET = &piStack12;\n    fcn.0043c0d0(0x10, 4, uVar1);\n    piStack12 = NULL;\n    fcn.0043c0d0(0x10, 4);\n    fcn.0043beb0();\n    fcn.0043beb0();\n    uVar3 = 4;\n    fcn.00459d93(param_1 + 0x34, 4, 4, fcn.0043beb0);\n    piVar2 = 0x4;\n    fcn.00459d93(param_1 + 0x44, 4, 4, fcn.0043beb0);\n    fcn.004448e0(uVar3);\n    *in_FS_OFFSET = piVar2;\n    return param_1;\n}\n",
        "token_count": 311
    },
    "00445380": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nint32_t fcn.00445380(uint param_1, uint param_2, ushort param_3, uint param_4)\n\n{\n    int32_t arg_8h;\n    ushort *puVar1;\n    \n    arg_8h = fcn.00459dfb(1, 0x20);\n    if (arg_8h != 0) {\n        puVar1 = fcn.00459dfb(1, 0x10);\n        if (puVar1 != NULL) {\n            puVar1[1] = param_3;\n            *(puVar1 + 2) = param_4;\n            *(arg_8h + 0x18) = puVar1;\n            *puVar1 = 2;\n            *(arg_8h + 4) = 2;\n            *(arg_8h + 8) = param_1;\n            *(arg_8h + 0xc) = param_2;\n            *(arg_8h + 0x10) = 0x10;\n            return arg_8h;\n        }\n        fcn.00455f3f(arg_8h);\n    }\n    return 0;\n}\n",
        "token_count": 257
    },
    "00445670": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint fcn.00445670(ushort param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t arg_8h;\n    ushort *puVar3;\n    \n    if (param_2 != 0) {\n        do {\n            uVar1 = *(*(param_2 + 0x18) + 4);\n            uVar2 = *(param_2 + 0xc);\n            arg_8h = fcn.00459dfb(1, 0x20);\n            if (arg_8h == 0) {\n                return 8;\n            }\n            puVar3 = fcn.00459dfb(1, 0x10);\n            if (puVar3 == NULL) {\n                fcn.00455f3f(arg_8h);\n                return 8;\n            }\n            puVar3[1] = param_1;\n            *(puVar3 + 2) = uVar1;\n            *puVar3 = 2;\n            *(arg_8h + 4) = 2;\n            *(arg_8h + 8) = 2;\n            *(arg_8h + 0xc) = uVar2;\n            *(arg_8h + 0x10) = 0x10;\n            *(arg_8h + 0x18) = puVar3;\n            *(arg_8h + 0x1c) = *(param_2 + 0x1c);\n            *(param_2 + 0x1c) = arg_8h;\n            param_2 = *(arg_8h + 0x1c);\n        } while (param_2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 383
    },
    "00446860": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "PEB access"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\ncode ** __thiscall fcn.00446860(code **param_1, uint param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *unaff_EBP;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x486b79;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &stack0xffffffe0;\n    *in_FS_OFFSET = &piStack12;\n    fcn.00445eb0(uVar1);\n    uStack4 = 0;\n    *param_1 = vtable.PR_HTTP::TmSocketS.0;\n    fcn.0043beb0();\n    uStack4._0_1_ = 1;\n    fcn.0043beb0();\n    uStack4._0_1_ = 2;\n    fcn.0043beb0();\n    uStack4 = CONCAT31(uStack4._1_3_, 3);\n    *(param_1 + 7) = param_3;\n    fcn.0043c570(param_2);\n    iVar2 = param_3;\n    if (param_3 == 0) {\n        iVar2 = 0x4a23ad;\n    }\n    fcn.0043c570(iVar2);\n    if (param_3 == 0) {\n        param_3 = 0x4a23ad;\n    }\n    fcn.0043c570(param_3);\n    param_1[10] = NULL;\n    *in_FS_OFFSET = unaff_EBP;\n    return param_1;\n}\n",
        "token_count": 406
    },
    "00446940": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00446940(code **param_1)\n\n{\n    uint32_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x486bbe;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &stack0xffffffec;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = vtable.PR_HTTP::TmSocketS.0;\n    uStack4 = 2;\n    fcn.0043c360(uVar1);\n    uStack4._0_1_ = 1;\n    fcn.0043c360();\n    uStack4 = uStack4._1_3_ << 8;\n    fcn.0043c360();\n    fcn.00446780();\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 226
    },
    "0044cdb6": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint fcn.0044cdb6(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if ((((param_1 == 0) || (iVar1 = *(param_1 + 0x1c),  iVar1 == 0)) || (*(param_1 + 0x20) == 0)) ||\n       (*(param_1 + 0x24) == 0)) {\n        uVar2 = 0xfffffffe;\n    }\n    else {\n        *(param_1 + 0x14) = 0;\n        *(param_1 + 8) = 0;\n        *(param_1 + 0x18) = 0;\n        *(param_1 + 0x2c) = 2;\n        *(iVar1 + 0x10) = *(iVar1 + 8);\n        *(iVar1 + 0x14) = 0;\n        if (*(iVar1 + 0x18) < 0) {\n            *(iVar1 + 0x18) = -*(iVar1 + 0x18);\n        }\n        *(iVar1 + 4) = (-(*(iVar1 + 0x18) != 0) & 0xffffffb9) + 0x71;\n        if (*(iVar1 + 0x18) == 2) {\n            uVar2 = fcn.00436f02();\n        }\n        else {\n            uVar2 = fcn.00438c99(0, 0, 0);\n        }\n        *(param_1 + 0x30) = uVar2;\n        *(iVar1 + 0x28) = 0;\n        fcn.0044dfb3(iVar1);\n        fcn.0044c2a4();\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 405
    },
    "00472e80": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00472e80(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    if (*(param_1 + 0x1e0) == 2) {\n        *(param_1 + 0x11c) = 0x24;\n        return 0;\n    }\n    if (*(param_1 + 0x1e0) == 3) {\n        *(param_1 + 0x11c) = 0x21;\n        return 0;\n    }\n    if (*(param_1 + 0x20) - *(param_1 + 0x1c) < param_2) {\n        iVar6 = *(param_1 + 0x18);\n        iVar2 = *(param_1 + 8);\n        iVar5 = *(param_1 + 0x1c) - iVar6;\n        iVar1 = iVar6 - iVar2;\n        iVar3 = iVar1;\n        if (0x400 < iVar1) {\n            iVar3 = 0x400;\n        }\n        iVar4 = iVar5 + param_2 + iVar3;\n        if (*(param_1 + 0x20) - iVar2 < iVar4) {\n            iVar6 = *(param_1 + 0x20) - iVar6;\n            if (iVar6 == 0) {\n                iVar6 = 0x400;\n            }\n            do {\n                iVar6 = iVar6 * 2;\n            } while (iVar6 < iVar4);\n            iVar2 = (**(param_1 + 0xc))(iVar6);\n            if (iVar2 == 0) {\n                *(param_1 + 0x11c) = 1;\n                return 0;\n            }\n            iVar3 = *(param_1 + 0x18);\n            *(param_1 + 0x20) = iVar2 + iVar6;\n            if (iVar3 != 0) {\n                iVar6 = iVar3 - *(param_1 + 8);\n                if (0x400 < iVar6) {\n                    iVar6 = 0x400;\n                }\n                fcn.00452a10(iVar2, iVar3 - iVar6, (iVar6 - iVar3) + *(param_1 + 0x1c));\n                (**(param_1 + 0x14))(*(param_1 + 8));\n                *(param_1 + 0x1c) = *(param_1 + 0x1c) + (iVar6 - *(param_1 + 0x18)) + iVar2;\n                *(param_1 + 0x18) = iVar6 + iVar2;\n                *(param_1 + 8) = iVar2;\n                return *(param_1 + 0x1c);\n            }\n            *(param_1 + 0x1c) = *(param_1 + 0x1c) + iVar2;\n            *(param_1 + 0x18) = iVar2;\n            *(param_1 + 8) = iVar2;\n        }\n        else if (iVar3 < iVar1) {\n            iVar1 = iVar1 - iVar3;\n            fcn.004530c0(iVar2, iVar2 + iVar1, iVar5 + iVar3);\n            *(param_1 + 0x1c) = *(param_1 + 0x1c) - iVar1;\n            *(param_1 + 0x18) = *(param_1 + 0x18) - iVar1;\n            return *(param_1 + 0x1c);\n        }\n    }\n    return *(param_1 + 0x1c);\n}\n",
        "token_count": 828
    },
    "00473dd0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nint32_t fcn.00473dd0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_EAX;\n    uint *puVar4;\n    int32_t iVar5;\n    \n    iVar1 = *(in_EAX + 0x164);\n    if (*(iVar1 + 0xb8) == 0) {\n        puVar4 = (**(in_EAX + 0xc))(*(in_EAX + 0x1d4) * 4);\n        *(iVar1 + 0xb8) = puVar4;\n        if (puVar4 == NULL) {\n            return -1;\n        }\n        *puVar4 = 0;\n    }\n    if (*(iVar1 + 0xac) <= *(iVar1 + 0xb0)) {\n        if (*(iVar1 + 0xa4) == 0) {\n            iVar5 = (**(in_EAX + 0xc))(0x380);\n            if (iVar5 == 0) {\n                return -1;\n            }\n            *(iVar1 + 0xac) = 0x20;\n        }\n        else {\n            iVar5 = (**(in_EAX + 0x10))(*(iVar1 + 0xa4), *(iVar1 + 0xac) * 0x38);\n            if (iVar5 == 0) {\n                return -1;\n            }\n            *(iVar1 + 0xac) = *(iVar1 + 0xac) * 2;\n        }\n        *(iVar1 + 0xa4) = iVar5;\n    }\n    iVar2 = *(iVar1 + 0xb0);\n    iVar3 = *(iVar1 + 0xa4);\n    *(iVar1 + 0xb0) = iVar2 + 1;\n    iVar5 = iVar3 + iVar2 * 0x1c;\n    if (*(iVar1 + 0xb4) != 0) {\n        iVar1 = iVar3 + *(*(iVar1 + 0xb8) + -4 + *(iVar1 + 0xb4) * 4) * 0x1c;\n        if (*(iVar1 + 0x10) != 0) {\n            *(iVar3 + 0x18 + *(iVar1 + 0x10) * 0x1c) = iVar2;\n        }\n        if (*(iVar1 + 0x14) == 0) {\n            *(iVar1 + 0xc) = iVar2;\n        }\n        *(iVar1 + 0x10) = iVar2;\n        *(iVar1 + 0x14) = *(iVar1 + 0x14) + 1;\n    }\n    *(iVar5 + 0x18) = 0;\n    *(iVar5 + 0x14) = 0;\n    *(iVar5 + 0x10) = 0;\n    *(iVar5 + 0xc) = 0;\n    return iVar2;\n}\n",
        "token_count": 645
    },
    "00473ef0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00473ef0(int32_t param_1, int32_t param_2, int32_t *param_3, int32_t *param_4, int16_t **param_5)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    \n    iVar3 = *(param_1 + 0x164);\n    param_2 = param_2 * 0x1c;\n    *param_3 = *(param_2 + *(iVar3 + 0xa4));\n    param_3[1] = *(*(iVar3 + 0xa4) + 4 + param_2);\n    if (*param_3 == 4) {\n        param_3[2] = *param_5;\n        piVar4 = *(*(iVar3 + 0xa4) + 8 + param_2);\n        **param_5 = *piVar4;\n        *param_5 = *param_5 + 1;\n        iVar2 = *piVar4;\n        while (iVar2 != 0) {\n            piVar1 = piVar4 + 1;\n            piVar4 = piVar4 + 1;\n            **param_5 = *piVar1;\n            *param_5 = *param_5 + 1;\n            iVar2 = *piVar4;\n        }\n        param_3[3] = 0;\n        param_3[4] = 0;\n        return;\n    }\n    param_3[3] = *(*(iVar3 + 0xa4) + 0x14 + param_2);\n    param_3[4] = *param_4;\n    *param_4 = *param_4 + param_3[3] * 0x14;\n    iVar6 = *(*(iVar3 + 0xa4) + 0xc + param_2);\n    uVar5 = 0;\n    if (param_3[3] != 0) {\n        param_2 = 0;\n        do {\n            fcn.00473ef0(param_1, iVar6, param_3[4] + param_2, param_4, param_5);\n            param_2 = param_2 + 0x14;\n            uVar5 = uVar5 + 1;\n            iVar6 = *(*(iVar3 + 0xa4) + 0x18 + iVar6 * 0x1c);\n        } while (uVar5 < param_3[3]);\n    }\n    param_3[2] = 0;\n    return;\n}\n",
        "token_count": 589
    },
    "00476160": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00476160(int32_t param_1, uint param_2, uint param_3, uint *param_4)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    \n    uVar4 = param_3;\n    uVar2 = param_2;\n    iVar3 = param_1;\n    puVar1 = param_1 + 0x90;\n    *(param_1 + 0x118) = fcn.00476160;\n    *(param_1 + 0x120) = param_2;\n    param_1 = 0;\n    iVar5 = (***puVar1)(*puVar1, param_2, param_3, &param_1);\n    *(iVar3 + 0x124) = param_1;\n    while (iVar5 + 0xfU < 0x1f) {\n        switch(*(*(iVar5 + 0x47634b) * 4 + 0x476318)) {\n        case 0x4761ce:\n            uVar6 = param_1;\n            if (*(iVar3 + 0x50) != 0) {\n                fcn.00473640(uVar2);\n                uVar6 = param_1;\n            }\n            goto code_r0x0047621a;\n        case 0x4761e7:\n            iVar5 = fcn.00475bb0(uVar2, param_1);\n            break;\n        case 0x4761fb:\n            iVar5 = fcn.00475c80(iVar3);\n            break;\n        case 0x476269:\n            goto code_r0x00476269;\n        case 0x476273:\n            if ((*(iVar3 + 0x50) != 0) && (fcn.00473640(uVar2),  *(iVar3 + 0x1e0) == 2)) {\n                return 0x23;\n            }\n            *param_4 = param_1;\n            return 0;\n        case 0x4762d2:\n            *(iVar3 + 0x120) = param_1;\n            return 4;\n        case 0x4762e2:\n            if (*(iVar3 + 0x1e4) != '\\0') {\n                return 5;\n            }\n            *param_4 = uVar2;\n            return 0;\n        case 0x476302:\n            if (*(iVar3 + 0x1e4) != '\\0') {\n                return 6;\n            }\n        case 0x4762ae:\n            *param_4 = uVar2;\n            return 0;\n        }\n        uVar6 = param_1;\n        if (iVar5 == 0) {\n            return 1;\n        }\ncode_r0x0047621a:\n        *(iVar3 + 0x120) = uVar6;\n        if (*(iVar3 + 0x1e0) == 2) {\n            return 0x23;\n        }\n        if (*(iVar3 + 0x1e0) == 3) {\n            *param_4 = uVar6;\n            return 0;\n        }\n        param_1 = 0;\n        iVar5 = (***(iVar3 + 0x90))(*(iVar3 + 0x90), uVar6, uVar4, &param_1);\n        *(iVar3 + 0x124) = param_1;\n        uVar2 = uVar6;\n    }\ncode_r0x00476269:\n    return 9;\n}\n",
        "token_count": 795
    },
    "00483150": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t fcn.00483150(void)\n\n{\n    int32_t in_EAX;\n    char cStack5;\n    char *pcStack4;\n    \n    pcStack4 = &cStack5;\n    (**(in_EAX + 0x3c))();\n    if (pcStack4 == &cStack5) {\n        return -1;\n    }\n    return cStack5;\n}\n",
        "token_count": 86
    },
    "004015a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004015a8(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *arg_10h;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_3ach;\n    uint var_3a8h;\n    uint var_3a3h;\n    uint var_2a4h;\n    uint var_2a0h;\n    uint var_1a0h;\n    uint var_98h;\n    uint var_94h;\n    uint var_7ch;\n    uint var_44h;\n    uint var_2ch;\n    uint var_4h;\n    \n    fcn.0045b335(0x3a0);\n    *(unaff_EBP + -0x3ac) = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x3a4) = 0;\n    fcn.00453710(unaff_EBP + -0x3a3, 0, 0xff);\n    fcn.00453710(unaff_EBP + -0x2a4, 0, 0x210);\n    fcn.004537a0(unaff_EBP + -0x3a4, 0x100, \"http://licenseupdate.trendmicro.com/ollu/license_update.aspx\");\n    fcn.00401000();\n    *(unaff_EBP + -4) = 0;\n    fcn.0040229c(\"http://licenseupdate.trendmicro.com/ollu/license_update.aspx\");\n    *(unaff_EBP + -4) = 1;\n    fcn.00426570(0);\n    *(unaff_EBP + -4) = 2;\n    iVar1 = fcn.00428680();\n    fcn.00402754(1, 0);\n    *(unaff_EBP + -4) = 0;\n    fcn.0040230f();\n    if (iVar1 != 0) {\n        *(unaff_EBP + -0x2a4) = 1;\n        arg_10h = fcn.00426660(0);\n        if (0xf < arg_10h[5]) {\n            arg_10h = *arg_10h;\n        }\n        fcn.004537a0(unaff_EBP + -0x2a0, 0x100, arg_10h);\n        fcn.0040230f();\n        *(unaff_EBP + -0x1a0) = *(unaff_EBP + -0x7c);\n    }\n    *(unaff_EBP + -0x98) = 0x1e;\n    *(unaff_EBP + -0x3a8) = 0;\n    iVar1 = sym.SupportWrapper.exe_PR_onlineUpdateLicense\n                      (unaff_EBP + -0x3a4, extraout_ECX + 0x6b, extraout_ECX + 0x1b, unaff_EBP + -0x3a8);\n    **(unaff_EBP + -0x3ac) = iVar1;\n    if ((iVar1 == 0) && (*(unaff_EBP + -0x3a8) == 0x60010122)) {\n        fcn.00401757();\n    }\n    fcn.0040172f();\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 764
    },
    "0040190f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040190f(uint *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint *in_ECX;\n    uint *puVar5;\n    \n    if (arg_8h[4] < arg_ch) {\n        fcn.0044e819(\"invalid string position\");\n    }\n    else {\n        uVar4 = arg_8h[4] - arg_ch;\n        iVar1 = in_ECX[4];\n        if (uVar4 < arg_10h) {\n            arg_10h = uVar4;\n        }\n        if (arg_10h < -iVar1 - 1U) {\n            if ((arg_10h != 0) && (cVar3 = fcn.004021a8(iVar1 + arg_10h, 0),  cVar3 != '\\0')) {\n                if (0xf < arg_8h[5]) {\n                    arg_8h = *arg_8h;\n                }\n                puVar5 = in_ECX;\n                if (0xf < in_ECX[5]) {\n                    puVar5 = *in_ECX;\n                }\n                if (arg_10h != 0) {\n                    fcn.00452a10(in_ECX[4] + puVar5, arg_ch + arg_8h, arg_10h);\n                }\n                in_ECX[4] = iVar1 + arg_10h;\n                if (0xf < in_ECX[5]) {\n                    in_ECX = *in_ECX;\n                }\n                *(in_ECX + iVar1 + arg_10h) = 0;\n            }\n            return;\n        }\n    }\n    fcn.0044e7eb(\"string too long\");\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 432
    },
    "004019b5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004019b5(uint *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint *in_ECX;\n    uint *puVar5;\n    \n    if (arg_8h[4] < arg_ch) {\n        fcn.0044e819(\"invalid string position\");\n    }\n    else {\n        uVar4 = arg_8h[4] - arg_ch;\n        iVar1 = in_ECX[4];\n        if (uVar4 < arg_10h) {\n            arg_10h = uVar4;\n        }\n        if (arg_10h < -iVar1 - 1U) {\n            if ((arg_10h != 0) && (cVar3 = fcn.004025ff(iVar1 + arg_10h, 0),  cVar3 != '\\0')) {\n                if (7 < arg_8h[5]) {\n                    arg_8h = *arg_8h;\n                }\n                puVar5 = in_ECX;\n                if (7 < in_ECX[5]) {\n                    puVar5 = *in_ECX;\n                }\n                fcn.0040272f(puVar5 + in_ECX[4] * 2, arg_8h + arg_ch * 2, arg_10h);\n                in_ECX[4] = iVar1 + arg_10h;\n                if (7 < in_ECX[5]) {\n                    in_ECX = *in_ECX;\n                }\n                *(in_ECX + (iVar1 + arg_10h) * 2) = 0;\n            }\n            return;\n        }\n    }\n    fcn.0044e7eb(\"string too long\");\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 426
    },
    "00401a5b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00401a5b(uint arg_8h)\n\n{\n    int16_t *arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    ushort *extraout_ECX;\n    int32_t arg_8h_01;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0045b302(0xc);\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    *(extraout_ECX + 10) = 7;\n    *(extraout_ECX + 8) = 0;\n    *extraout_ECX = 0;\n    arg_8h_00 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    uVar1 = *(arg_8h_01 + 0x10);\n    *(unaff_EBP + -0x10) = 1;\n    *(unaff_EBP + -0x14) = uVar1;\n    if (*arg_8h_00 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = fcn.00453054(arg_8h_00);\n    }\n    fcn.00401acc(iVar2 + *(unaff_EBP + -0x14));\n    fcn.004019b5(arg_8h_01, 0, 0xffffffff);\n    fcn.004017e4(arg_8h_00);\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 434
    },
    "00401b05": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401b05(uint *arg_8h, uint32_t arg_ch, uint *arg_10h, uint *arg_14h, uint32_t arg_18h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint *puVar6;\n    int32_t arg_8h_00;\n    uint *in_ECX;\n    uint *puVar7;\n    uint32_t uVar8;\n    int32_t arg_ch_00;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = arg_14h;\n    uVar4 = in_ECX[4];\n    if ((uVar4 < arg_8h) || (arg_10h[4] < arg_14h)) {\ncode_r0x00401dec:\n        fcn.0044e819(\"invalid string position\");\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    uVar8 = uVar4 - arg_8h;\n    if (uVar8 < arg_ch) {\n        arg_ch = uVar8;\n    }\n    uVar3 = arg_10h[4] - arg_14h;\n    if (uVar3 < arg_18h) {\n        arg_18h = uVar3;\n    }\n    if (-arg_18h - 1 <= uVar4 - arg_ch) {\n        fcn.0044e7eb(\"string too long\");\n        goto code_r0x00401dec;\n    }\n    uVar8 = uVar8 - arg_ch;\n    uVar3 = arg_18h + (uVar4 - arg_ch);\n    if (uVar4 < uVar3) {\n        fcn.004025ff(uVar3, 0);\n    }\n    if (in_ECX != arg_10h) {\n        puVar6 = in_ECX;\n        if (7 < in_ECX[5]) {\n            puVar6 = *in_ECX;\n        }\n        puVar5 = in_ECX;\n        if (7 < in_ECX[5]) {\n            puVar5 = *in_ECX;\n        }\n        fcn.0040239f(puVar5 + (arg_18h + arg_8h) * 2, puVar6 + (arg_ch + arg_8h) * 2, uVar8);\n        if (7 < arg_10h[5]) {\n            arg_10h = *arg_10h;\n        }\n        puVar6 = in_ECX;\n        if (7 < in_ECX[5]) {\n            puVar6 = *in_ECX;\n        }\n        fcn.0040272f(puVar6 + arg_8h * 2, arg_10h + arg_14h * 2, arg_18h);\n        goto code_r0x00401dbf;\n    }\n    arg_10h = in_ECX;\n    if (arg_ch < arg_18h) {\n        puVar6 = in_ECX;\n        if (arg_8h < arg_14h) {\n            uVar4 = arg_ch + arg_8h;\n            if (arg_14h < uVar4) {\n                if (7 < in_ECX[5]) {\n                    puVar6 = *in_ECX;\n                }\n                puVar5 = in_ECX;\n                if (7 < in_ECX[5]) {\n                    puVar5 = *in_ECX;\n                }\n                fcn.0040239f(puVar5 + arg_8h * 2, puVar6 + arg_14h * 2, arg_ch);\n                puVar6 = in_ECX;\n                if (7 < in_ECX[5]) {\n                    puVar6 = *in_ECX;\n                }\n                puVar5 = in_ECX;\n                if (7 < in_ECX[5]) {\n                    puVar5 = *in_ECX;\n                }\n                fcn.0040239f(puVar5 + (arg_18h + arg_8h) * 2, puVar6 + uVar4 * 2, uVar8);\n                arg_8h = in_ECX;\n                if (7 < in_ECX[5]) {\n                    arg_8h = *in_ECX;\n                }\n                puVar6 = in_ECX;\n                if (7 < in_ECX[5]) {\n                    puVar6 = *in_ECX;\n                }\n                uVar8 = arg_18h - arg_ch;\n                arg_ch_00 = arg_8h + (arg_14h + arg_18h) * 2;\n                arg_8h_00 = puVar6 + uVar4 * 2;\n                goto code_r0x00401db9;\n            }\n            puVar5 = in_ECX;\n            if (7 < in_ECX[5]) {\n                puVar5 = *in_ECX;\n            }\n            puVar7 = in_ECX;\n            if (7 < in_ECX[5]) {\n                puVar7 = *in_ECX;\n            }\n            fcn.0040239f(puVar7 + (arg_18h + arg_8h) * 2, puVar5 + uVar4 * 2, uVar8);\n            if (7 < in_ECX[5]) {\n                arg_10h = *in_ECX;\n            }\n            if (7 < in_ECX[5]) {\n                puVar6 = *in_ECX;\n            }\n            arg_14h = (arg_14h - arg_ch) + arg_18h;\n        }\n        else {\n            if (7 < in_ECX[5]) {\n                arg_10h = *in_ECX;\n            }\n            puVar5 = in_ECX;\n            if (7 < in_ECX[5]) {\n                puVar5 = *in_ECX;\n            }\n            fcn.0040239f(puVar5 + (arg_18h + arg_8h) * 2, arg_10h + (arg_ch + arg_8h) * 2, uVar8);\n            arg_10h = in_ECX;\n            if (7 < in_ECX[5]) {\n                arg_10h = *in_ECX;\n            }\n            if (7 < in_ECX[5]) {\n                puVar6 = *in_ECX;\n            }\n        }\n        arg_ch_00 = arg_10h + arg_14h * 2;\n        arg_8h_00 = puVar6 + arg_8h * 2;\n        uVar8 = arg_18h;\n    }\n    else {\n        arg_14h = in_ECX;\n        if (7 < in_ECX[5]) {\n            arg_14h = *in_ECX;\n        }\n        if (7 < in_ECX[5]) {\n            arg_10h = *in_ECX;\n        }\n        fcn.0040239f(arg_10h + arg_8h * 2, arg_14h + uVar2 * 2, arg_18h);\n        puVar6 = in_ECX;\n        if (7 < in_ECX[5]) {\n            puVar6 = *in_ECX;\n        }\n        puVar5 = in_ECX;\n        if (7 < in_ECX[5]) {\n            puVar5 = *in_ECX;\n        }\n        arg_ch_00 = puVar6 + (arg_ch + arg_8h) * 2;\n        arg_8h_00 = puVar5 + (arg_18h + arg_8h) * 2;\n    }\ncode_r0x00401db9:\n    fcn.0040239f(arg_8h_00, arg_ch_00, uVar8);\ncode_r0x00401dbf:\n    in_ECX[4] = uVar3;\n    if (7 < in_ECX[5]) {\n        in_ECX = *in_ECX;\n    }\n    *(in_ECX + uVar3 * 2) = 0;\n    return;\n}\n",
        "token_count": 1795
    },
    "00401e85": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401e85(uint *arg_8h)\n\n{\n    uint *in_ECX;\n    \n    if (arg_8h[5] < 8) {\n        fcn.0040239f(in_ECX, arg_8h, arg_8h[4] + 1);\n    }\n    else {\n        if (in_ECX != NULL) {\n            *in_ECX = *arg_8h;\n        }\n        *arg_8h = 0;\n    }\n    in_ECX[4] = arg_8h[4];\n    in_ECX[5] = arg_8h[5];\n    arg_8h[4] = 0;\n    arg_8h[5] = 7;\n    *arg_8h = 0;\n    return;\n}\n",
        "token_count": 179
    },
    "00401fe4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401fe4(uint *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint *in_ECX;\n    uint *puVar3;\n    uint32_t arg_8h_00;\n    \n    if (arg_8h[4] < arg_ch) {\n        fcn.0044e819(\"invalid string position\");\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    arg_8h_00 = arg_8h[4] - arg_ch;\n    if (arg_10h < arg_8h_00) {\n        arg_8h_00 = arg_10h;\n    }\n    if (in_ECX == arg_8h) {\n        fcn.00401f33(arg_ch + arg_8h_00);\n        fcn.00401f62(0, arg_ch);\n    }\n    else {\n        cVar2 = fcn.004021a8(arg_8h_00, 0);\n        if (cVar2 != '\\0') {\n            if (0xf < arg_8h[5]) {\n                arg_8h = *arg_8h;\n            }\n            puVar3 = in_ECX;\n            if (0xf < in_ECX[5]) {\n                puVar3 = *in_ECX;\n            }\n            if (arg_8h_00 != 0) {\n                fcn.00452a10(puVar3, arg_ch + arg_8h, arg_8h_00);\n            }\n            in_ECX[4] = arg_8h_00;\n            if (0xf < in_ECX[5]) {\n                in_ECX = *in_ECX;\n            }\n            *(in_ECX + arg_8h_00) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 425
    },
    "0040209f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040209f(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *extraout_ECX;\n    uint32_t uVar4;\n    uint *puVar5;\n    int32_t unaff_EBP;\n    uint32_t uVar6;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0045b36b(0xc);\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    uVar6 = *(unaff_EBP + 8) | 0xf;\n    if (uVar6 == 0xffffffff) {\n        uVar6 = *(unaff_EBP + 8);\n    }\n    else {\n        *(unaff_EBP + -0x14) = 3;\n        uVar1 = extraout_ECX[5];\n        uVar4 = uVar1 >> 1;\n        if (uVar6 / *(unaff_EBP + -0x14) < uVar4) {\n            if (-uVar4 - 2 < uVar1) {\n                uVar6 = 0xfffffffe;\n            }\n            else {\n                uVar6 = uVar4 + uVar1;\n            }\n        }\n    }\n    *(unaff_EBP + -4) = 0;\n    uVar3 = fcn.00402078(uVar6 + 1, 0);\n    *(unaff_EBP + -0x14) = uVar3;\n    iVar2 = *(unaff_EBP + 0xc);\n    if (iVar2 != 0) {\n        puVar5 = extraout_ECX;\n        if (0xf < extraout_ECX[5]) {\n            puVar5 = *extraout_ECX;\n        }\n        if (iVar2 != 0) {\n            fcn.00452a10(uVar3, puVar5, iVar2);\n        }\n    }\n    if (0xf < extraout_ECX[5]) {\n        fcn.00452a07(*extraout_ECX);\n    }\n    *extraout_ECX = *(unaff_EBP + -0x14);\n    iVar2 = *(unaff_EBP + 0xc);\n    extraout_ECX[5] = uVar6;\n    extraout_ECX[4] = iVar2;\n    puVar5 = extraout_ECX;\n    if (0xf < uVar6) {\n        puVar5 = *extraout_ECX;\n    }\n    *(puVar5 + iVar2) = 0;\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 610
    },
    "004023c1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004023c1(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint32_t uVar1;\n    code *pcVar2;\n    uint *puVar3;\n    uint *in_ECX;\n    int32_t iVar4;\n    \n    uVar1 = in_ECX[4];\n    if (uVar1 < arg_8h) {\n        fcn.0044e819(\"invalid string position\");\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if (arg_ch < uVar1 - arg_8h) {\n        if (arg_ch != 0) {\n            puVar3 = in_ECX;\n            if (7 < in_ECX[5]) {\n                puVar3 = *in_ECX;\n            }\n            arg_8h_00 = puVar3 + arg_8h * 2;\n            iVar4 = uVar1 - arg_ch;\n            fcn.0040239f(arg_8h_00, arg_8h_00 + arg_ch * 2, iVar4 - arg_8h);\n            in_ECX[4] = iVar4;\n            if (7 < in_ECX[5]) {\n                in_ECX = *in_ECX;\n            }\n            *(in_ECX + iVar4 * 2) = 0;\n        }\n    }\n    else {\n        in_ECX[4] = arg_8h;\n        if (7 < in_ECX[5]) {\n            in_ECX = *in_ECX;\n        }\n        *(in_ECX + arg_8h * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 377
    },
    "00402450": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402450(uint *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint *in_ECX;\n    uint *arg_8h_00;\n    uint32_t arg_8h_01;\n    \n    if (arg_8h[4] < arg_ch) {\n        fcn.0044e819(\"invalid string position\");\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    arg_8h_01 = arg_8h[4] - arg_ch;\n    if (arg_10h < arg_8h_01) {\n        arg_8h_01 = arg_10h;\n    }\n    if (in_ECX == arg_8h) {\n        fcn.0040236c(arg_ch + arg_8h_01);\n        fcn.004023c1(0, arg_ch);\n    }\n    else {\n        cVar2 = fcn.004025ff(arg_8h_01, 0);\n        if (cVar2 != '\\0') {\n            if (7 < arg_8h[5]) {\n                arg_8h = *arg_8h;\n            }\n            arg_8h_00 = in_ECX;\n            if (7 < in_ECX[5]) {\n                arg_8h_00 = *in_ECX;\n            }\n            fcn.0040272f(arg_8h_00, arg_8h + arg_ch * 2, arg_8h_01);\n            in_ECX[4] = arg_8h_01;\n            if (7 < in_ECX[5]) {\n                in_ECX = *in_ECX;\n            }\n            *(in_ECX + arg_8h_01 * 2) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 421
    },
    "00402667": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402667(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint *in_ECX;\n    \n    cVar1 = fcn.00402330(arg_8h);\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.004025ff(arg_ch, 0);\n        if (cVar1 != '\\0') {\n            puVar2 = in_ECX;\n            if (7 < in_ECX[5]) {\n                puVar2 = *in_ECX;\n            }\n            fcn.0040272f(puVar2, arg_8h, arg_ch);\n            in_ECX[4] = arg_ch;\n            if (7 < in_ECX[5]) {\n                in_ECX = *in_ECX;\n            }\n            *(in_ECX + arg_ch * 2) = 0;\n        }\n    }\n    else {\n        puVar2 = in_ECX;\n        if (7 < in_ECX[5]) {\n            puVar2 = *in_ECX;\n        }\n        fcn.00402450(in_ECX, arg_8h - puVar2 >> 1, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 278
    },
    "00402f26": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00402f26(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_40h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_14h;\n    char16_t *pcVar3;\n    char *arg_1ch;\n    uint uVar4;\n    uint uVar5;\n    uint var_4h;\n    uint arg_1ch_00;\n    \n    arg_1ch_00 = 0x34;\n    fcn.0045b335();\n    uVar5 = 0x800010;\n    uVar4 = 0xae;\n    pcVar3 = L\"SupportWrapper.cpp\";\n    uVar1 = fcn.0042c180();\n    fcn.0042c3c0(uVar1, pcVar3, uVar4, uVar5, \"unzipSfxPayload\", arg_1ch_00);\n    fcn.0042c5b0();\n    *(unaff_EBP + -4) = 0;\n    fcn.0042c5b0();\n    *(unaff_EBP + -4) = 1;\n    iVar2 = fcn.0041f980();\n    if (iVar2 != 0) {\n        arg_1ch = \"unzipSfxPayload\";\n        uVar5 = 0x800002;\n        uVar4 = 0xb8;\n        pcVar3 = L\"SupportWrapper.cpp\";\n        uVar1 = fcn.0042c180();\n        fcn.0042c3c0(uVar1, pcVar3, uVar4, uVar5, str._s_Extract7z__S_, arg_1ch);\n    }\n    uVar5 = 0x800020;\n    uVar4 = 0xbb;\n    pcVar3 = L\"SupportWrapper.cpp\";\n    uVar1 = fcn.0042c180();\n    fcn.0042c3c0(uVar1, pcVar3, uVar4, uVar5, \"unzipSfxPayload\", arg_1ch_00);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 544
    },
    "00403088": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "delete file",
            "get common file path"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00403088(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint lpFileName;\n    uint var_220h;\n    uint var_21ch;\n    uint lpBuffer;\n    uint var_4h;\n    \n    fcn.0045b335(0x224);\n    *(unaff_EBP + -0x218) = 0;\n    fcn.00453710(unaff_EBP + -0x216, 0, 0x206);\n    (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)(0x104, unaff_EBP + -0x218);\n    *(unaff_EBP + -0x21c) = 7;\n    *(unaff_EBP + -0x220) = 0;\n    *(unaff_EBP + -0x230) = 0;\n    *(unaff_EBP + -4) = 0;\n    if (*(unaff_EBP + -0x218) == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.00453054(unaff_EBP + -0x218);\n    }\n    fcn.00402667(unaff_EBP + -0x218, uVar1);\n    uVar1 = fcn.00453054(0x4a078c);\n    fcn.0040186c(0x4a078c, uVar1);\n    uVar1 = fcn.00453054(0x4a0790);\n    fcn.0040186c(0x4a0790, uVar1);\n    iVar2 = fcn.004262e0();\n    if (iVar2 != 0) {\n        iVar2 = fcn.0040ea4c();\n        if (iVar2 != 0) {\n            fcn.0040eaf1();\n            if (*0x4b9628 != 0) {\n                fcn.00455f3f(*0x4b9628);\n                *0x4b9628 = 0;\n            }\n            fcn.00436a19(iVar2);\n        }\n        iVar2 = unaff_EBP + -0x230;\n        if (7 < *(unaff_EBP + -0x21c)) {\n            iVar2 = *(unaff_EBP + -0x230);\n        }\n        (*_sym.imp.KERNEL32.dll_DeleteFileW)(iVar2);\n    }\n    fcn.00402754(1, 0);\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 588
    },
    "0040517e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040517e(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_2bch;\n    uint var_2b8h;\n    uint var_2a0h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_254h;\n    uint var_250h;\n    uint var_24ch;\n    uint var_248h;\n    uint var_244h;\n    uint var_240h;\n    uint var_23ch;\n    uint var_238h;\n    uint var_234h;\n    uint var_224h;\n    uint var_220h;\n    uint lpFilename;\n    char16_t *pcVar6;\n    uint uVar7;\n    char *pcVar8;\n    uint uVar9;\n    uint var_4h;\n    \n    fcn.0045b335(0x2b0);\n    uVar4 = *(unaff_EBP + 8);\n    *(unaff_EBP + -700) = 0;\n    uVar2 = fcn.00406264(unaff_EBP + -0x2b8);\n    *(unaff_EBP + -4) = 0;\n    fcn.00401a5b(0x4a078c);\n    *(unaff_EBP + -4) = 1;\n    fcn.0040c12e(uVar2);\n    *(unaff_EBP + -4) = 2;\n    fcn.0040c05d(L\".zip\");\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    iVar5 = unaff_EBP + -0x2a0;\n    if (7 < *(unaff_EBP + -0x28c)) {\n        iVar5 = *(unaff_EBP + -0x2a0);\n    }\n    *(unaff_EBP + -4) = 7;\n    *(unaff_EBP + -0x288) = vtable.ATTK::ArchiveMaker.0;\n    *(unaff_EBP + -0x284) = 0;\n    fcn.00402707(iVar5);\n    *(unaff_EBP + -0x268) = 0;\n    *(unaff_EBP + -4) = 8;\n    iVar3 = fcn.0042b8e0();\n    *(unaff_EBP + -0x284) = iVar3;\n    if (iVar3 == 0) {\n        pcVar8 = \"Init archive maker failed\";\n        uVar7 = 0x800002;\n        uVar2 = 0x326;\n        pcVar6 = L\"SupportWrapper.cpp\";\n        uVar4 = fcn.0042c180();\n        fcn.0042c3c0(uVar4, pcVar6, uVar2, uVar7, pcVar8, iVar5);\n        fcn.00402aa7(0x80030000);\n    }\n    else {\n        *(unaff_EBP + -0x248) = 0;\n        *(unaff_EBP + -0x244) = 0;\n        *(unaff_EBP + -0x240) = 0;\n        *(unaff_EBP + -0x23c) = extraout_ECX;\n        *(unaff_EBP + -0x238) = unaff_EBP + -0x288;\n        *(unaff_EBP + -4) = 9;\n        iVar3 = fcn.0041d153();\n        if (iVar3 == 0) {\n            pcVar8 = \"Init plugin manager failed\";\n            uVar7 = 0x800002;\n            uVar2 = 0x32d;\n            pcVar6 = L\"SupportWrapper.cpp\";\n            uVar4 = fcn.0042c180();\n            fcn.0042c3c0(uVar4, pcVar6, uVar2, uVar7, pcVar8, iVar5);\n            fcn.00402aa7(0x80010000);\n        }\n        else {\n            *(unaff_EBP + -0x21c) = 0;\n            fcn.00453710(unaff_EBP + -0x21a, 0, 0x206);\n            *(unaff_EBP + -0x220) = 7;\n            *(unaff_EBP + -0x224) = 0;\n            *(unaff_EBP + -0x234) = 0;\n            *(unaff_EBP + -4) = 10;\n            (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, unaff_EBP + -0x21c, 0x104);\n            *(unaff_EBP + -0x250) = 7;\n            *(unaff_EBP + -0x254) = 0;\n            *(unaff_EBP + -0x264) = 0;\n            if (*(unaff_EBP + -0x21c) == 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = fcn.00453054(unaff_EBP + -0x21c);\n            }\n            fcn.00402667(unaff_EBP + -0x21c, uVar2);\n            *(unaff_EBP + -4) = 0xb;\n            fcn.0042d580();\n            *(unaff_EBP + -4) = 10;\n            fcn.00402754(1, 0);\n            uVar4 = fcn.0041df21(unaff_EBP + -0x234, extraout_ECX + 4, uVar4);\n            fcn.00402aa7(uVar4);\n            *(unaff_EBP + -4) = 9;\n            fcn.00402754(1, 0);\n            cVar1 = fcn.0042d0c0(L\"FINGERPRINT\");\n            if (cVar1 == '\\0') {\n                iVar5 = fcn.00406321(0x405438);\n                if (iVar5 == 0) {\n                    pcVar8 = \"Generate Fingerprint failed\";\n                    uVar2 = 0x800002;\n                    pcVar6 = L\"SupportWrapper.cpp\";\n                    uVar4 = fcn.0042c180();\n                    fcn.0042c3c0(uVar4, pcVar6, 0x33d, uVar2, pcVar8, arg_8h);\n                    fcn.00402aa7(0x80030000);\n                }\n                *(unaff_EBP + -0x220) = 7;\n                *(unaff_EBP + -0x224) = 0;\n                *(unaff_EBP + -0x234) = 0;\n                fcn.00402667(0x4a00e0, 0);\n                *(unaff_EBP + -4) = 0xc;\n                uVar4 = 0x4054b0;\n                iVar5 = fcn.0040eefe(unaff_EBP + -0x234);\n                *(unaff_EBP + -4) = 9;\n                fcn.00402754(0x4054c9, 0);\n                if (iVar5 == 0) {\n                    pcVar8 = \"Archive Fingerprint failed\";\n                    uVar9 = 0x800002;\n                    uVar7 = 0x343;\n                    pcVar6 = L\"SupportWrapper.cpp\";\n                    uVar2 = fcn.0042c180();\n                    fcn.0042c3c0(uVar2, pcVar6, uVar7, uVar9, pcVar8, uVar4);\n                    fcn.00402aa7(0x80030000);\n                }\n            }\n            *(unaff_EBP + -0x220) = 7;\n            *(unaff_EBP + -0x224) = 0;\n            *(unaff_EBP + -0x234) = 0;\n            fcn.00402667(0x4a00e0, 0);\n            *(unaff_EBP + -4) = 0xd;\n            uVar4 = 0x405544;\n            iVar5 = fcn.0040eefe(unaff_EBP + -0x234);\n            *(unaff_EBP + -4) = 9;\n            fcn.00402754(0x40555d, 0);\n            if (iVar5 == 0) {\n                pcVar8 = \"Archive log failed\";\n                uVar9 = 0x800002;\n                uVar7 = 0x34a;\n                pcVar6 = L\"SupportWrapper.cpp\";\n                uVar2 = fcn.0042c180();\n                fcn.0042c3c0(uVar2, pcVar6, uVar7, uVar9, pcVar8, uVar4);\n                fcn.00402aa7(0x80030000);\n            }\n            if (*(extraout_ECX + 0x1c) != 0) {\n                fcn.004072da(unaff_EBP + -0x2a0, *(unaff_EBP + -700));\n            }\n        }\n        fcn.0040864f();\n    }\n    fcn.00402a23();\n    fcn.00402754(1, 0);\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 2171
    },
    "00405fbe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_58h\n\nvoid __cdecl fcn.00405fbe(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    int32_t iVar2;\n    uint var_118h;\n    uint var_100h;\n    uint var_e8h;\n    uint var_d0h;\n    uint var_b8h;\n    uint var_a0h;\n    uint var_88h;\n    uint var_70h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    char *arg_18h;\n    char *arg_1ch;\n    uint var_44h;\n    uint var_40h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    char16_t *arg_ch_00;\n    uint arg_10h;\n    uint arg_14h;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    uint uVar3;\n    \n    uVar3 = 0x10c;\n    fcn.0045b335();\n    uVar1 = *(unaff_EBP + 8);\n    fcn.0045400a(\"Sending files via HTTP...\\n\\n\", uVar3);\n    *(unaff_EBP + -0x14) = 7;\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -0x28) = 0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x2c) = 7;\n    *(unaff_EBP + -0x30) = 0;\n    *(unaff_EBP + -0x40) = 0;\n    *(unaff_EBP + -4) = 1;\n    if (*(extraout_ECX + 0x178) == 0) {\n        if (unaff_EBP + -0x28 != extraout_ECX + 0x108) {\n            fcn.00402450(extraout_ECX + 0x108, 0, 0xffffffff);\n        }\n        iVar2 = extraout_ECX + 0x120;\n    }\n    else {\n        if (unaff_EBP + -0x28 != extraout_ECX + 0x168) {\n            fcn.00402450(extraout_ECX + 0x168, 0, 0xffffffff);\n        }\n        iVar2 = extraout_ECX + 0x180;\n    }\n    if (unaff_EBP + -0x40 != iVar2) {\n        fcn.00402450(iVar2, 0, 0xffffffff);\n    }\n    arg_14h = 0x800040;\n    arg_10h = 0x42d;\n    arg_ch_00 = L\"SupportWrapper.cpp\";\n    uVar3 = fcn.0042c180();\n    fcn.0042c3c0(uVar3, arg_ch_00, arg_10h, arg_14h, \"%s Report result to %S\", \"WrapperAPP::HttpUpload()\");\n    fcn.00401a5b(L\"\\\\curl.exe\");\n    *(unaff_EBP + -4) = 2;\n    *(unaff_EBP + -0x60) = 0;\n    *(unaff_EBP + -0x5c) = 7;\n    *(unaff_EBP + -0x70) = 0;\n    uVar3 = fcn.00453054(L\"ZIPARCHIVE\");\n    fcn.00402667(L\"ZIPARCHIVE\", uVar3);\n    *(unaff_EBP + -4) = 3;\n    fcn.0042e460(unaff_EBP + -0x70, uVar1);\n    *(unaff_EBP + -4) = 5;\n    fcn.00402754(1, 0);\n    fcn.0040c0a5(unaff_EBP + -0x88);\n    *(unaff_EBP + -4) = 6;\n    fcn.0040c05d(0x4a1158);\n    *(unaff_EBP + -4) = 7;\n    fcn.0040c07f(unaff_EBP + -0xa0);\n    *(unaff_EBP + -4) = 8;\n    fcn.0040c05d(0x4a1150);\n    *(unaff_EBP + -4) = 9;\n    fcn.0040c07f(unaff_EBP + -0x28);\n    *(unaff_EBP + -4) = 10;\n    fcn.0040c05d(0x4a0c48);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    *(unaff_EBP + -4) = 0x10;\n    fcn.00402754(1, 0);\n    iVar2 = fcn.0042dfd0();\n    if (iVar2 != 0) {\n        iVar2 = unaff_EBP + -0x58;\n        if (7 < *(unaff_EBP + -0x44)) {\n            iVar2 = *(unaff_EBP + -0x58);\n        }\n        arg_1ch = \"WrapperAPP::HttpUpload()\";\n        arg_18h = \"%s Failed to invoke cURL[%d]: %S\";\n        uVar1 = fcn.0042c180(iVar2);\n        fcn.0042c3c0(uVar1, L\"SupportWrapper.cpp\", 0x437, 0x800002, arg_18h, arg_1ch);\n    }\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 1549
    },
    "0040764d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open registry key"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040764d(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint unaff_EDI;\n    char16_t *pcVar4;\n    uint uVar5;\n    uint uVar6;\n    char *pcVar7;\n    uint in_stack_ffffffd8;\n    uint hKey;\n    uint *var_1ch;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b4f00 ^ &stack0xfffffffc;\n    if (param_1 == 0) {\n        pcVar7 = \"RegisterStartProgram(): invalid wcsStartProgramPath\";\n        uVar6 = 0x800002;\n        uVar5 = 0x564;\n    }\n    else {\n        pcVar7 = \"RegisterStartProgram(): %s\";\n        uVar2 = 0x800040;\n        uVar6 = 0x56a;\n        pcVar4 = L\"SupportWrapper.cpp\";\n        iVar1 = param_1;\n        uVar5 = fcn.0042c180(param_1);\n        fcn.0042c3c0(uVar5, pcVar4, uVar6, uVar2, pcVar7, iVar1);\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)\n                          (0x80000002, L\"SOFTWARE\\\\TrendMicro\\\\HouseCall\", 0, 0, 0, 0xf003f, 0, &hKey, 0);\n        if (iVar1 == 0) {\n            fcn.00402707(param_1);\n            puVar3 = &var_1ch;\n            if (7 < var_8h) {\n                puVar3 = var_1ch;\n            }\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(hKey, L\"ProgramPath\", 0, 1, puVar3, var_ch * 2);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n            unaff_EDI = 1;\n            fcn.00402754(1, 0);\n            if (iVar1 == 0) {\n                pcVar7 = \"Register Start Program success: HKLM\\\\SOFTWARE\\\\TrendMicro\\\\HouseCall\\\\ProgramPath\";\n                uVar6 = 0x800040;\n                uVar5 = 0x579;\n                goto code_r0x00407722;\n            }\n        }\n        pcVar7 = \"Register Start Program failed: HKLM\\\\SOFTWARE\\\\TrendMicro\\\\HouseCall\\\\ProgramPath\";\n        uVar6 = 0x800040;\n        uVar5 = 0x57c;\n    }\ncode_r0x00407722:\n    pcVar4 = L\"SupportWrapper.cpp\";\n    uVar2 = fcn.0042c180();\n    fcn.0042c3c0(uVar2, pcVar4, uVar5, uVar6, pcVar7, unaff_EDI);\n    fcn.004529f8(in_stack_ffffffd8);\n    return;\n}\n",
        "token_count": 705
    },
    "00407a5b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00407a5b(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint *puVar3;\n    bool bVar4;\n    uint lpFileOp;\n    uint var_27ch;\n    uint var_278h;\n    uint var_270h;\n    uint var_260h;\n    uint var_248h;\n    uint var_234h;\n    uint var_230h;\n    uint var_220h;\n    uint var_21ch;\n    uint lpFilename;\n    uint var_4h;\n    \n    fcn.0045b335(0x274);\n    bVar4 = 7 < *0x4b7a20;\n    *(unaff_EBP + -0x280) = 0;\n    puVar3 = unaff_EBP + -0x27c;\n    for (iVar2 = 6; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    uVar1 = 0x4b7a0c;\n    if (bVar4) {\n        uVar1 = *0x4b7a0c;\n    }\n    *(unaff_EBP + -0x278) = uVar1;\n    *(unaff_EBP + -0x270) = 0x614;\n    *(unaff_EBP + -0x27c) = 3;\n    (*_sym.imp.SHELL32.dll_SHFileOperationW)(unaff_EBP + -0x280);\n    *(unaff_EBP + -0x218) = 0;\n    fcn.00453710(unaff_EBP + -0x216, 0, 0x206);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, unaff_EBP + -0x218, 0x104);\n    uVar1 = 0;\n    *(unaff_EBP + -0x21c) = 7;\n    *(unaff_EBP + -0x220) = 0;\n    *(unaff_EBP + -0x230) = 0;\n    if (*(unaff_EBP + -0x218) != 0) {\n        uVar1 = fcn.00453054(unaff_EBP + -0x218);\n    }\n    fcn.00402667(unaff_EBP + -0x218, uVar1);\n    *(unaff_EBP + -4) = 0;\n    fcn.0040c702(unaff_EBP + -0x230);\n    *(unaff_EBP + -4) = 1;\n    fcn.0040c05d(0x4a0c48);\n    fcn.00402754(1, 0);\n    *(unaff_EBP + -4) = 4;\n    fcn.00402754(1, 0);\n    iVar2 = unaff_EBP + -0x248;\n    if (7 < *(unaff_EBP + -0x234)) {\n        iVar2 = *(unaff_EBP + -0x248);\n    }\n    fcn.0042dd70(iVar2);\n    fcn.00402754(1, 0);\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 764
    },
    "0040853f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040853f(int16_t *arg_8h, int16_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int16_t **ppiVar2;\n    int16_t **in_ECX;\n    int16_t *piVar3;\n    int16_t **ppiVar4;\n    int32_t iVar5;\n    \n    if (((*arg_8h == 0) || (iVar1 = fcn.00453054(arg_8h),  iVar1 == 0)) || (piVar3 = in_ECX[4],  piVar3 == NULL)) {\n        return -1;\n    }\n    if (piVar3 <= arg_ch) {\n        arg_ch = piVar3 + -1;\n    }\n    ppiVar2 = in_ECX;\n    if (0x7 < in_ECX[5]) {\n        ppiVar2 = *in_ECX;\n    }\n    ppiVar2 = ppiVar2 + arg_ch * 2;\n    do {\n        piVar3 = arg_8h;\n        iVar5 = iVar1;\n        if (iVar1 != 0) {\n            do {\n                if (*piVar3 == *ppiVar2) goto code_r0x00408599;\n                iVar5 = iVar5 + -1;\n                piVar3 = piVar3 + 1;\n            } while (iVar5 != 0);\n            piVar3 = NULL;\ncode_r0x00408599:\n            if (piVar3 != NULL) {\n                if (0x7 < in_ECX[5]) {\n                    in_ECX = *in_ECX;\n                }\n                return ppiVar2 - in_ECX >> 1;\n            }\n        }\n        ppiVar4 = in_ECX;\n        if (0x7 < in_ECX[5]) {\n            ppiVar4 = *in_ECX;\n        }\n        if (ppiVar2 == ppiVar4) {\n            return -1;\n        }\n        ppiVar2 = ppiVar2 + -2;\n    } while( true );\n}\n",
        "token_count": 454
    },
    "0040864f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040864f(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *param_1;\n    if (iVar2 != 0) {\n        iVar1 = param_1[1];\n        for (; iVar2 != iVar1; iVar2 = iVar2 + 8) {\n            if (*(iVar2 + 4) != 0) {\n                fcn.0040cd13();\n            }\n        }\n        fcn.00452a07(*param_1);\n        *param_1 = 0;\n        param_1[1] = 0;\n        param_1[2] = 0;\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "00408d3d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00408d3d(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t arg_8h_00;\n    uint uVar2;\n    int32_t *extraout_ECX;\n    uint32_t arg_8h_01;\n    int32_t unaff_EBP;\n    int32_t *arg_8h_02;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0045b302(0xc);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    *extraout_ECX = 0x4a21fc;\n    extraout_ECX[4] = 0x4a4438;\n    extraout_ECX[0x1e] = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n    arg_8h_02 = extraout_ECX + 6;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = 1;\n    fcn.00409a95(arg_8h_02);\n    *(unaff_EBP + -4) = 1;\n    *(extraout_ECX + *(*extraout_ECX + 4)) = vtable.std::basic_fstream_char__struct_std::char_traits_char__.0;\n    *(*(*extraout_ECX + 4) + -4 + extraout_ECX) = *(*extraout_ECX + 4) + -0x78;\n    fcn.00409b16(0);\n    *(unaff_EBP + -4) = 2;\n    if (extraout_ECX[0x1a] == 0) {\n        arg_8h_00 = fcn.0044f41d(*(unaff_EBP + 8), 0x12, 0x40);\n        if (arg_8h_00 != 0) {\n            fcn.00409b8a(arg_8h_00, 1);\n            uVar2 = fcn.0040a951(unaff_EBP + 8);\n            *(unaff_EBP + -4) = 3;\n            uVar2 = fcn.0040c7bd(uVar2);\n            fcn.00409d43(uVar2);\n            *(unaff_EBP + -4) = 2;\n            fcn.0040e226();\n            goto code_r0x00408df6;\n        }\n    }\n    arg_8h_02 = NULL;\ncode_r0x00408df6:\n    if (arg_8h_02 == NULL) {\n        uVar1 = *(extraout_ECX + *(*extraout_ECX + 4) + 0xc);\n        arg_8h_01 = uVar1 | 2;\n        if (*(extraout_ECX + *(*extraout_ECX + 4) + 0x38) == 0) {\n            arg_8h_01 = uVar1 | 6;\n        }\n        fcn.0040e96e(arg_8h_01, 0);\n    }\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 758
    },
    "004096dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004096dc(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t arg_8h_00;\n    code *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    uint *in_ECX;\n    \n    cVar2 = fcn.00401ef8(arg_8h);\n    if (cVar2 == '\\0') {\n        if (-in_ECX[4] - 1 <= arg_ch) {\n            fcn.0044e7eb(\"string too long\");\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        if (arg_ch != 0) {\n            arg_8h_00 = in_ECX[4] + arg_ch;\n            cVar2 = fcn.004021a8(arg_8h_00, 0);\n            if (cVar2 != '\\0') {\n                puVar3 = in_ECX;\n                if (0xf < in_ECX[5]) {\n                    puVar3 = *in_ECX;\n                }\n                if (arg_ch != 0) {\n                    fcn.00452a10(in_ECX[4] + puVar3, arg_8h, arg_ch);\n                }\n                in_ECX[4] = arg_8h_00;\n                if (0xf < in_ECX[5]) {\n                    in_ECX = *in_ECX;\n                }\n                *(in_ECX + arg_8h_00) = 0;\n            }\n        }\n    }\n    else {\n        puVar3 = in_ECX;\n        if (0xf < in_ECX[5]) {\n            puVar3 = *in_ECX;\n        }\n        fcn.0040190f(in_ECX, arg_8h - puVar3, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 408
    },
    "0040977e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040977e(uint noname_0, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t arg_8h;\n    code *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *in_ECX;\n    uint noname_0_00;\n    \n    cVar2 = fcn.00402330(arg_ch);\n    if (cVar2 == '\\0') {\n        if (-in_ECX[4] - 1 <= arg_10h) {\n            fcn.0044e7eb(\"string too long\");\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        if (arg_10h != 0) {\n            arg_8h = in_ECX[4] + arg_10h;\n            cVar2 = fcn.004025ff(arg_8h, 0);\n            if (cVar2 != '\\0') {\n                puVar4 = in_ECX;\n                if (7 < in_ECX[5]) {\n                    puVar4 = *in_ECX;\n                }\n                puVar3 = in_ECX;\n                if (7 < in_ECX[5]) {\n                    puVar3 = *in_ECX;\n                }\n                fcn.0040239f(puVar3 + arg_10h * 2, puVar4, in_ECX[4]);\n                puVar4 = in_ECX;\n                if (7 < in_ECX[5]) {\n                    puVar4 = *in_ECX;\n                }\n                fcn.0040272f(puVar4, arg_ch, arg_10h);\n                in_ECX[4] = arg_8h;\n                if (7 < in_ECX[5]) {\n                    in_ECX = *in_ECX;\n                }\n                *(in_ECX + arg_8h * 2) = 0;\n            }\n        }\n    }\n    else {\n        puVar4 = in_ECX;\n        if (7 < in_ECX[5]) {\n            puVar4 = *in_ECX;\n        }\n        fcn.0040aa32(noname_0_00, in_ECX, arg_ch - puVar4 >> 1, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 512
    },
    "004098ea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004098ea(int16_t *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint *puVar1;\n    int16_t *piVar2;\n    uint *in_ECX;\n    int16_t *piVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    \n    if ((arg_10h != 0) && (arg_ch < in_ECX[4])) {\n        puVar4 = in_ECX;\n        if (7 < in_ECX[5]) {\n            puVar4 = *in_ECX;\n        }\n        puVar1 = in_ECX;\n        if (7 < in_ECX[5]) {\n            puVar1 = *in_ECX;\n        }\n        for (piVar2 = puVar1 + arg_ch * 2; piVar2 < puVar4 + in_ECX[4] * 2; piVar2 = piVar2 + 1) {\n            if (arg_10h != 0) {\n                piVar3 = arg_8h;\n                iVar5 = arg_10h;\n                do {\n                    if (*piVar3 == *piVar2) goto code_r0x0040993d;\n                    piVar3 = piVar3 + 1;\n                    iVar5 = iVar5 + -1;\n                } while (iVar5 != 0);\n                piVar3 = NULL;\ncode_r0x0040993d:\n                if (piVar3 != NULL) {\n                    if (7 < in_ECX[5]) {\n                        in_ECX = *in_ECX;\n                    }\n                    return piVar2 - in_ECX >> 1;\n                }\n            }\n        }\n    }\n    return -1;\n}\n",
        "token_count": 384
    },
    "00409a95": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409a95(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    \n    fcn.0045b302(0xc);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *(unaff_EBP + -0x14) = 0;\n    arg_8h_00 = *(unaff_EBP + 8);\n    *(extraout_ECX + *(*extraout_ECX + 4)) = vtable.std::basic_istream_char__struct_std::char_traits_char__.0;\n    *(*(*extraout_ECX + 4) + -4 + extraout_ECX) = *(*extraout_ECX + 4) + -0x18;\n    extraout_ECX[2] = 0;\n    extraout_ECX[3] = 0;\n    fcn.0040d04c(arg_8h_00, 0);\n    *(extraout_ECX + *(extraout_ECX[4] + 4) + 0x10) = vtable.std::basic_ostream_char__struct_std::char_traits_char__.0;\n    *(*(extraout_ECX[4] + 4) + 0xc + extraout_ECX) = *(extraout_ECX[4] + 4) + -8;\n    *(extraout_ECX + *(*extraout_ECX + 4)) = vtable.std::basic_iostream_char__struct_std::char_traits_char__.0;\n    *(*(*extraout_ECX + 4) + -4 + extraout_ECX) = *(*extraout_ECX + 4) + -0x20;\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 409
    },
    "0040a9af": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a9af(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    \n    fcn.0045b302(8);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *(unaff_EBP + -0x14) = 0;\n    arg_8h_00 = *(unaff_EBP + 8);\n    *(extraout_ECX + *(*extraout_ECX + 4)) = vtable.std::basic_istream_wchar_t__struct_std::char_traits_wchar_t__.0;\n    *(*(*extraout_ECX + 4) + -4 + extraout_ECX) = *(*extraout_ECX + 4) + -0x18;\n    extraout_ECX[2] = 0;\n    extraout_ECX[3] = 0;\n    fcn.0040b69d(arg_8h_00, 0);\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 257
    },
    "0040aa32": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040aa32(uint noname_0, uint *arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    int32_t arg_8h;\n    code *pcVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint *in_ECX;\n    uint *puVar5;\n    \n    if (arg_10h <= arg_ch[4]) {\n        uVar3 = arg_ch[4] - arg_10h;\n        if (uVar3 < arg_14h) {\n            arg_14h = uVar3;\n        }\n        if (arg_14h < -in_ECX[4] - 1) {\n            if (arg_14h != 0) {\n                arg_8h = in_ECX[4] + arg_14h;\n                cVar2 = fcn.004025ff(arg_8h, 0);\n                if (cVar2 != '\\0') {\n                    puVar5 = in_ECX;\n                    if (7 < in_ECX[5]) {\n                        puVar5 = *in_ECX;\n                    }\n                    puVar4 = in_ECX;\n                    if (7 < in_ECX[5]) {\n                        puVar4 = *in_ECX;\n                    }\n                    fcn.0040239f(puVar4 + arg_14h * 2, puVar5, in_ECX[4]);\n                    if (in_ECX == arg_ch) {\n                        puVar5 = in_ECX;\n                        if (7 < in_ECX[5]) {\n                            puVar5 = *in_ECX;\n                        }\n                        puVar4 = in_ECX;\n                        if (7 < in_ECX[5]) {\n                            puVar4 = *in_ECX;\n                        }\n                        if (arg_10h != 0) {\n                            arg_10h = arg_10h + arg_14h;\n                        }\n                        fcn.0040239f(puVar4, puVar5 + arg_10h * 2, arg_14h);\n                    }\n                    else {\n                        if (7 < arg_ch[5]) {\n                            arg_ch = *arg_ch;\n                        }\n                        puVar5 = in_ECX;\n                        if (7 < in_ECX[5]) {\n                            puVar5 = *in_ECX;\n                        }\n                        fcn.0040272f(puVar5, arg_ch + arg_10h * 2, arg_14h);\n                    }\n                    in_ECX[4] = arg_8h;\n                    if (7 < in_ECX[5]) {\n                        in_ECX = *in_ECX;\n                    }\n                    *(in_ECX + arg_8h * 2) = 0;\n                }\n            }\n            return;\n        }\n        fcn.0044e7eb(\"string too long\");\n    }\n    fcn.0044e819(\"invalid string position\");\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 663
    },
    "0040c0a5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0040c0a5(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    ushort *extraout_ECX;\n    int16_t *arg_8h_01;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0045b302(8);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    *(extraout_ECX + 10) = 7;\n    *(extraout_ECX + 8) = 0;\n    *extraout_ECX = 0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = 1;\n    if (*arg_8h_01 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.00453054(arg_8h_01);\n    }\n    arg_8h_00 = *(unaff_EBP + 8);\n    fcn.00401acc(*(arg_8h_00 + 0x10) + iVar1);\n    fcn.004017e4(arg_8h_01);\n    fcn.004019b5(arg_8h_00, 0, 0xffffffff);\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 388
    },
    "0040d09e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.0040d09e(float arg_8h, uint arg_ch)\n\n{\n    float10 fVar1;\n    uint var_8h;\n    \n    fVar1 = fcn.00456884(SUB84(arg_8h, 0), arg_8h >> 0x20, arg_ch);\n    return fVar1;\n}\n",
        "token_count": 81
    },
    "0040d558": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040d558(int32_t arg_8h)\n\n{\n    uint16_t *in_ECX;\n    uint16_t *in_EDX;\n    \n    while( true ) {\n        if (arg_8h == 0) {\n            return 0;\n        }\n        if (*in_ECX != *in_EDX) break;\n        in_ECX = in_ECX + 1;\n        in_EDX = in_EDX + 1;\n        arg_8h = arg_8h + -1;\n    }\n    return (-(*in_ECX < *in_EDX) & 0xfffffffe) + 1;\n}\n",
        "token_count": 144
    },
    "0040deb3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0040deb3(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = in_ECX;\n    uVar1 = fcn.0044f0b4(&var_4h, &arg_8h, 1, &var_8h, in_ECX + 0x18);\n    if (uVar1 < 0) {\n        var_4h._0_2_ = 0xffff;\n    }\n    return uVar1 & 0xffff0000 | var_4h;\n}\n",
        "token_count": 172
    },
    "0041050b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_6ch\n// WARNING: Variable defined which should be unmapped: var_84h\n// WARNING: Variable defined which should be unmapped: var_a0h\n// WARNING: Variable defined which should be unmapped: var_b8h\n// WARNING: Variable defined which should be unmapped: var_bch\n\nvoid __cdecl fcn.0041050b(uint arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint arg_8h_00;\n    char *pcVar4;\n    int32_t extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    int32_t unaff_EBP;\n    int32_t arg_8h_01;\n    int32_t iVar5;\n    uint var_bch;\n    uint var_b8h;\n    uint var_a0h;\n    uint var_84h;\n    uint var_6ch;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_34h;\n    uint var_1ch;\n    uint var_18h;\n    char16_t *pcVar6;\n    uint var_4h;\n    \n    fcn.0045b3a1(0xb0);\n    fcn.00413959();\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -4) = 1;\n    uVar1 = fcn.0044ec0d(1);\n    *(unaff_EBP + -0x18) = uVar1;\n    *(unaff_EBP + -4) = 2;\n    fcn.00413a56(1, unaff_EBP + -0x18);\n    fcn.0040e226();\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x58) = 7;\n    *(unaff_EBP + -0x5c) = 0;\n    *(unaff_EBP + -0x6c) = 0;\n    uVar1 = fcn.00453054(L\"Config\");\n    fcn.00402667(L\"Config\", uVar1);\n    *(unaff_EBP + -4) = 4;\n    pcVar6 = L\".Root\";\n    *(unaff_EBP + -0x18) = 0;\n    uVar2 = fcn.00401a5b(L\".Root\");\n    *(unaff_EBP + -4) = 5;\n    uVar1 = *(unaff_EBP + -0x18);\n    fcn.00413b57(uVar2);\n    iVar5 = unaff_EBP + -0x84;\n    *(unaff_EBP + -4) = 6;\n    fcn.00413b82(iVar5, unaff_EBP + -0x54);\n    *(unaff_EBP + -4) = 7;\n    uVar1 = fcn.0042c5b0(iVar5, unaff_EBP + -0x54, extraout_ECX_00, uVar2, pcVar6, uVar1);\n    fcn.004017bf(uVar1);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    *(unaff_EBP + -4) = 4;\n    fcn.00402754(1, 0);\n    *(unaff_EBP + -0x18) = 0;\n    uVar1 = fcn.00401a5b(L\".Type\");\n    *(unaff_EBP + -4) = 8;\n    fcn.00413b57(uVar1);\n    *(unaff_EBP + -4) = 9;\n    puVar3 = fcn.00413b82(unaff_EBP + -0x34, unaff_EBP + -0x54);\n    *(unaff_EBP + -4) = 10;\n    if (7 < puVar3[5]) {\n        puVar3 = *puVar3;\n    }\n    fcn.004026e0(puVar3);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    *(unaff_EBP + -4) = 4;\n    fcn.00402754(1, 0);\n    uVar1 = fcn.00401a5b(L\".DumpLogFileName.<xmlattr>.enable\");\n    *(unaff_EBP + -4) = 0xb;\n    uVar1 = fcn.00410dd3(unaff_EBP + -0xa0, uVar1, 0);\n    *(extraout_ECX + 0x1c) = uVar1;\n    *(unaff_EBP + -4) = 4;\n    fcn.00402754(1, 0);\n    uVar1 = fcn.00401a5b(L\".GetSupportToken.<xmlattr>.enable\");\n    *(unaff_EBP + -4) = 0xc;\n    uVar1 = fcn.00410dd3(unaff_EBP + -0xa0, uVar1, 0);\n    *(extraout_ECX + 0x18) = uVar1;\n    *(unaff_EBP + -4) = 4;\n    fcn.00402754(1, 0);\n    uVar1 = fcn.00401a5b(L\".WindowsErrorReporting.<xmlattr>.enable\");\n    *(unaff_EBP + -4) = 0xd;\n    uVar1 = fcn.00410dd3(unaff_EBP + -0xa0, uVar1, 0);\n    *(extraout_ECX + 0x28) = uVar1;\n    *(unaff_EBP + -4) = 4;\n    fcn.00402754(1, 0);\n    uVar1 = fcn.00401a5b(L\".Console.<xmlattr>.hide\");\n    *(unaff_EBP + -4) = 0xe;\n    uVar1 = fcn.00410dd3(unaff_EBP + -0xa0, uVar1, 0);\n    *(extraout_ECX + 8) = uVar1;\n    *(unaff_EBP + -4) = 4;\n    fcn.00402754(1, 0);\n    uVar1 = fcn.00401a5b(L\".Reboot.<xmlattr>.enable\");\n    *(unaff_EBP + -4) = 0xf;\n    uVar1 = fcn.00410dd3(unaff_EBP + -0xa0, uVar1, 0);\n    *(extraout_ECX + 4) = uVar1;\n    *(unaff_EBP + -4) = 4;\n    fcn.00402754(1, 0);\n    uVar1 = fcn.00401a5b(L\".Reboot.<xmlattr>.silent\");\n    *(unaff_EBP + -4) = 0x10;\n    uVar1 = fcn.00410dd3(unaff_EBP + -0xa0, uVar1, 0);\n    *(extraout_ECX + 0x20) = uVar1;\n    *(unaff_EBP + -4) = 4;\n    fcn.00402754(1, 0);\n    uVar1 = fcn.00401a5b(L\".Reboot.<xmlattr>.prompt\");\n    *(unaff_EBP + -4) = 0x11;\n    uVar1 = fcn.00410dd3(unaff_EBP + -0xa0, uVar1, 1);\n    *(extraout_ECX + 0x24) = uVar1;\n    *(unaff_EBP + -4) = 4;\n    fcn.00402754(1, 0);\n    *(unaff_EBP + -0x18) = 0;\n    uVar1 = fcn.00401a5b(L\".ClientEnvironmentProxy\");\n    *(unaff_EBP + -4) = 0x12;\n    fcn.00413b57(uVar1);\n    *(unaff_EBP + -4) = 0x13;\n    uVar1 = fcn.00413b82(unaff_EBP + -0x34, unaff_EBP + -0x54);\n    fcn.004017bf(uVar1);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    *(unaff_EBP + -4) = 4;\n    fcn.00402754(1, 0);\n    *(unaff_EBP + -0x18) = 0;\n    uVar1 = fcn.00401a5b(L\".Reporting.OutputFileComment\");\n    *(unaff_EBP + -4) = 0x14;\n    fcn.00413b57(uVar1);\n    *(unaff_EBP + -4) = 0x15;\n    uVar1 = fcn.00413b82(unaff_EBP + -0x34, unaff_EBP + -0x54);\n    fcn.004017bf(uVar1);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    *(unaff_EBP + -4) = 4;\n    fcn.00402754(1, 0);\n    pcVar6 = L\".Reporting.UploadToDrive\";\n    *(unaff_EBP + -0x18) = 0;\n    arg_8h_00 = fcn.00401a5b(L\".Reporting.UploadToDrive\");\n    *(unaff_EBP + -4) = 0x16;\n    uVar1 = *(unaff_EBP + -0x18);\n    fcn.00413b57(arg_8h_00);\n    iVar5 = unaff_EBP + -0x54;\n    arg_8h_01 = unaff_EBP + -0x84;\n    *(unaff_EBP + -4) = 0x17;\n    uVar2 = extraout_ECX_01;\n    fcn.00413b82(arg_8h_01, iVar5);\n    *(unaff_EBP + -4) = 0x18;\n    uVar1 = fcn.00426760(arg_8h_01, iVar5, uVar2, arg_8h_00, pcVar6, uVar1);\n    fcn.004017bf(uVar1);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    *(unaff_EBP + -4) = 4;\n    fcn.00402754(1, 0);\n    *(unaff_EBP + -0x18) = 0;\n    uVar1 = fcn.00401a5b(L\".Reporting.FTP.Username\");\n    *(unaff_EBP + -4) = 0x19;\n    fcn.00413b57(uVar1);\n    *(unaff_EBP + -4) = 0x1a;\n    uVar1 = fcn.00413b82(unaff_EBP + -0x34, unaff_EBP + -0x54);\n    fcn.004017bf(uVar1);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    *(unaff_EBP + -4) = 4;\n    fcn.00402754(1, 0);\n    *(unaff_EBP + -0x18) = 0;\n    uVar1 = fcn.00401a5b(L\".Reporting.FTP.Password\");\n    *(unaff_EBP + -4) = 0x1b;\n    fcn.00413b57(uVar1);\n    *(unaff_EBP + -4) = 0x1c;\n    uVar1 = fcn.00413b82(unaff_EBP + -0x34, unaff_EBP + -0x54);\n    fcn.004017bf(uVar1);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    *(unaff_EBP + -4) = 4;\n    fcn.00402754(1, 0);\n    *(unaff_EBP + -0x18) = 0;\n    uVar1 = fcn.00401a5b(L\".Reporting.FTP.IP\");\n    *(unaff_EBP + -4) = 0x1d;\n    fcn.00413b57(uVar1);\n    *(unaff_EBP + -4) = 0x1e;\n    uVar1 = fcn.00413b82(unaff_EBP + -0x34, unaff_EBP + -0x54);\n    fcn.004017bf(uVar1);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    *(unaff_EBP + -4) = 4;\n    fcn.00402754(1, 0);\n    *(unaff_EBP + -0x18) = 0;\n    uVar1 = fcn.00401a5b(L\".Reporting.FTP.FTPRemotePath\");\n    *(unaff_EBP + -4) = 0x1f;\n    fcn.00413b57(uVar1);\n    *(unaff_EBP + -4) = 0x20;\n    uVar1 = fcn.00413b82(unaff_EBP + -0x34, unaff_EBP + -0x54);\n    fcn.004017bf(uVar1);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    *(unaff_EBP + -4) = 4;\n    fcn.00402754(1, 0);\n    *(unaff_EBP + -0xbc) = 0;\n    *(unaff_EBP + -0x18) = 0;\n    uVar1 = fcn.00401a5b(L\".Reporting.FTP.Port\");\n    *(unaff_EBP + -4) = 0x21;\n    fcn.00413b57(uVar1);\n    *(unaff_EBP + -4) = 0x22;\n    pcVar4 = fcn.00414f5b(unaff_EBP + -0x1c, unaff_EBP + -0x54);\n    if (*pcVar4 == '\\0') {\n        puVar3 = unaff_EBP + -0xbc;\n    }\n    else {\n        puVar3 = pcVar4 + 4;\n    }\n    *(extraout_ECX + 0xec) = *puVar3;\n    fcn.00402754(1, 0);\n    *(unaff_EBP + -4) = 4;\n    fcn.00402754(1, 0);\n    *(unaff_EBP + -0xbc) = 0;\n    uVar1 = fcn.00401a5b(L\".Reporting.LogZipPassword\");\n    *(unaff_EBP + -4) = 0x23;\n    fcn.00413b57(uVar1);\n    *(unaff_EBP + -4) = 0x24;\n    uVar1 = fcn.00413b82(unaff_EBP + -0x34, unaff_EBP + -0x54);\n    fcn.004017bf(uVar1);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    *(unaff_EBP + -4) = 4;\n    fcn.00402754(1, 0);\n    *(unaff_EBP + -0xbc) = 0;\n    uVar1 = fcn.00401a5b(L\".Reporting.HTTP.CurlURL\");\n    *(unaff_EBP + -4) = 0x25;\n    fcn.00413b57(uVar1);\n    *(unaff_EBP + -4) = 0x26;\n    uVar1 = fcn.00413b82(unaff_EBP + -0x34, unaff_EBP + -0x54);\n    fcn.004017bf(uVar1);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    *(unaff_EBP + -4) = 4;\n    fcn.00402754(1, 0);\n    *(unaff_EBP + -0xbc) = 0;\n    uVar1 = fcn.00401a5b(L\".Reporting.HTTP.CurlOptions\");\n    *(unaff_EBP + -4) = 0x27;\n    fcn.00413b57(uVar1);\n    *(unaff_EBP + -4) = 0x28;\n    uVar1 = fcn.00413b82(unaff_EBP + -0x34, unaff_EBP + -0x54);\n    fcn.004017bf(uVar1);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    *(unaff_EBP + -4) = 4;\n    fcn.00402754(1, 0);\n    *(unaff_EBP + -0xbc) = 0;\n    uVar1 = fcn.00401a5b(L\".Plugins\");\n    *(unaff_EBP + -4) = 0x29;\n    fcn.00413b57(uVar1);\n    *(unaff_EBP + -4) = 0x2a;\n    uVar1 = fcn.00413a0d(unaff_EBP + -0x54);\n    fcn.00410e99(uVar1);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004139d2();\n    fcn.0045b2f3();\n    return;\n}\n",
        "token_count": 4190
    },
    "00411d70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00411d70(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t *arg_8h_00;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint32_t uVar3;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0045b36b(0x28);\n    *(unaff_EBP + -0x14) = arg_8h_00;\n    uVar3 = 0;\n    fcn.0040e5a1(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    if (*(unaff_EBP + -0x28) != '\\0') {\n        uVar1 = fcn.0040e1fb(unaff_EBP + -0x18);\n        *(unaff_EBP + -4) = 1;\n        uVar1 = fcn.00413c14(uVar1);\n        *(unaff_EBP + -0x1c) = uVar1;\n        fcn.0040e226();\n        *(unaff_EBP + -4) = 2;\n        iVar2 = *(*arg_8h_00 + 4) + arg_8h_00;\n        *(unaff_EBP + -0x34) = 0;\n        *(unaff_EBP + -0x20) = *(iVar2 + 0x40);\n        (**(**(unaff_EBP + -0x1c) + 0x20))\n                  (unaff_EBP + -0x34, *(unaff_EBP + -0x34), *(iVar2 + 0x38), iVar2, *(unaff_EBP + -0x20), \n                   *(unaff_EBP + 8));\n        if (*(unaff_EBP + -0x34) != '\\0') {\n            uVar3 = 4;\n        }\n        *(unaff_EBP + -4) = 0;\n    }\n    iVar2 = *(*arg_8h_00 + 4) + arg_8h_00;\n    *(unaff_EBP + 8) = iVar2;\n    if (uVar3 != 0) {\n        uVar3 = *(iVar2 + 0xc) | uVar3;\n        if (*(*(unaff_EBP + 8) + 0x38) == 0) {\n            uVar3 = uVar3 | 4;\n        }\n        fcn.0040e96e(uVar3, 0);\n    }\n    fcn.0040e660();\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 710
    },
    "00411ee9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00411ee9(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    fcn.00412544(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 46
    },
    "00412468": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00412468(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t arg_8h_00;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0045b302(4);\n    uVar1 = extraout_ECX[1];\n    arg_8h_00 = *(unaff_EBP + 8);\n    if ((arg_8h_00 < uVar1) && (*extraout_ECX < arg_8h_00 || *extraout_ECX == arg_8h_00)) {\n        uVar2 = *extraout_ECX;\n        if (uVar1 == extraout_ECX[2]) {\n            fcn.004125ea(uVar1);\n        }\n        uVar1 = extraout_ECX[1];\n        uVar3 = *extraout_ECX;\n        *(unaff_EBP + 8) = uVar1;\n        *(unaff_EBP + -0x10) = uVar1;\n        *(unaff_EBP + -4) = 0;\n        if (uVar1 != 0) {\n            fcn.004084c5(((arg_8h_00 - uVar2) / 0x18) * 0x18 + uVar3);\n        }\n        extraout_ECX[1] = extraout_ECX[1] + 0x18;\n    }\n    else {\n        if (uVar1 == extraout_ECX[2]) {\n            fcn.004125ea(uVar1);\n        }\n        uVar1 = extraout_ECX[1];\n        *(unaff_EBP + 8) = uVar1;\n        *(unaff_EBP + -0x10) = uVar1;\n        *(unaff_EBP + -4) = 1;\n        if (uVar1 != 0) {\n            fcn.004084c5(arg_8h_00);\n        }\n        extraout_ECX[1] = extraout_ECX[1] + 0x18;\n    }\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 521
    },
    "00412544": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00412544(uchar *arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint unaff_EDI;\n    uint var_24h;\n    uint var_20h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    \n    var_8h = *0x4b4f00 ^ &stack0xfffffffc;\n    if (((*(in_ECX + 0x3c) & 2) == 0) && (puVar1 = *(in_ECX + 0x20),  *puVar1 != 0)) {\n        uVar3 = *(in_ECX + 0x38);\n        if (uVar3 < *puVar1) {\n            uVar3 = *puVar1;\n        }\n        piVar2 = *(in_ECX + 0x10);\n    }\n    else {\n        if (((*(in_ECX + 0x3c) & 4) != 0) || (**(in_ECX + 0x1c) == 0)) {\n            var_ch = 0xf;\n            var_10h = 0;\n            var_20h._0_1_ = 0;\n            goto code_r0x004125bc;\n        }\n        piVar2 = *(in_ECX + 0xc);\n        uVar3 = **(in_ECX + 0x2c) + **(in_ECX + 0x1c);\n    }\n    var_ch = 0xf;\n    var_10h = 0;\n    var_20h._0_1_ = 0;\n    fcn.0040220b(*piVar2, uVar3 - *piVar2);\ncode_r0x004125bc:\n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    fcn.00401e37(&var_20h);\n    fcn.0040230f();\n    fcn.004529f8(unaff_EDI);\n    return;\n}\n",
        "token_count": 508
    },
    "00412654": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412654(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *param_1;\n    if (iVar2 != 0) {\n        iVar1 = param_1[1];\n        for (; iVar2 != iVar1; iVar2 = iVar2 + 0x18) {\n            fcn.00402754(1, 0);\n        }\n        fcn.00452a07(*param_1);\n        *param_1 = 0;\n        param_1[1] = 0;\n        param_1[2] = 0;\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "00412ddd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412ddd(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.0041370a(arg_8h);\n    fcn.00415d15(arg_8h_00);\n    iVar1 = in_ECX[1];\n    iVar3 = *in_ECX;\n    iVar2 = iVar1 - iVar3;\n    if (iVar3 != 0) {\n        for (; iVar3 != iVar1; iVar3 = iVar3 + 0x18) {\n            fcn.00402754(1, 0);\n        }\n        fcn.00452a07(*in_ECX);\n    }\n    in_ECX[2] = arg_8h * 0x18 + arg_8h_00;\n    in_ECX[1] = (iVar2 / 0x18) * 0x18 + arg_8h_00;\n    *in_ECX = arg_8h_00;\n    return;\n}\n",
        "token_count": 284
    },
    "00412e6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00412e6c(uint noname_0, uchar *arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    char cVar1;\n    ushort *puVar2;\n    ushort *puVar3;\n    uint32_t uVar4;\n    \n    *arg_ch = 0x25;\n    puVar2 = arg_ch + 1;\n    if ((arg_14h & 0x20) != 0) {\n        *puVar2 = 0x2b;\n        puVar2 = arg_ch + 2;\n    }\n    if ((arg_14h & 0x10) != 0) {\n        *puVar2 = 0x23;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0x2a2e;\n    puVar3 = puVar2 + 1;\n    if (arg_10h != '\\0') {\n        *puVar3 = arg_10h;\n        puVar3 = puVar2 + 3;\n    }\n    uVar4 = arg_14h & 0x3000;\n    if ((arg_14h & 4) == 0) {\n        cVar1 = (uVar4 != 0x1000) * '\\x02' + 'e';\n        if (uVar4 == 0x3000) {\n            cVar1 = 'a';\n        }\n        if (uVar4 == 0x2000) {\n            cVar1 = 'f';\n        }\n        *puVar3 = cVar1;\n    }\n    else {\n        cVar1 = (uVar4 != 0x1000) * '\\x02' + 'E';\n        if (uVar4 == 0x3000) {\n            cVar1 = 'A';\n        }\n        if (uVar4 == 0x2000) {\n            cVar1 = 'f';\n        }\n        *puVar3 = cVar1;\n    }\n    *(puVar3 + 1) = 0;\n    return arg_ch;\n}\n",
        "token_count": 462
    },
    "00413a56": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid __cdecl fcn.00413a56(uint noname_0, uint arg_ch)\n\n{\n    uint arg_ch_00;\n    uint *arg_8h;\n    uint *arg_ch_01;\n    uint extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_128h;\n    uint var_b8h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_28h;\n    uint var_4h;\n    \n    fcn.0045b335(0x11c);\n    arg_ch_00 = *(unaff_EBP + 0xc);\n    arg_8h = arg_ch_01;\n    if (0xf < arg_ch_01[5]) {\n        arg_8h = *arg_ch_01;\n    }\n    fcn.00413fbd(arg_8h);\n    *(unaff_EBP + -4) = 0;\n    if ((*(unaff_EBP + -0x11c + *(*(unaff_EBP + -0x128) + 4)) & 6) != 0) {\n        fcn.0040229c(\"cannot open file\");\n        *(unaff_EBP + -4) = 1;\n        fcn.00410100(unaff_EBP + -0x28, arg_ch_01, 0);\n        *(unaff_EBP + -4) = 2;\n        fcn.00414c83(\"C:\\\\ci-jenkins\\\\workspace\\\\iRobot\\\\iRobot_1.62\\\\iRobot_1.62\\\\import\\\\boost\\\\boost/property_tree/xml_parser.hpp\"\n                     , 0x53);\n    }\n    fcn.00413dc0(unaff_EBP + -0x6c, arg_ch_00);\n    fcn.0040e226();\n    fcn.00414cde(extraout_ECX, arg_ch_01);\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004140b6();\n    *(unaff_EBP + -0xb8) = vtable.std::ios_base.0;\n    fcn.0044e8ed(unaff_EBP + -0xb8);\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 508
    },
    "00413bce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00413bce(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    iVar1 = iVar2;\n    if (*(*param_2 + 0x18) != -0xc) {\n        iVar1 = *(*param_2 + 0x18);\n    }\n    iVar1 = *(*(iVar1 + 4) + 0x44);\n    if (iVar1 != 0) {\n        iVar2 = iVar1 + -0x40;\n    }\n    *param_1 = iVar2;\n    return param_1;\n}\n",
        "token_count": 153
    },
    "00413bf4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00413bf4(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = 0;\n    if (*param_1 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = *param_1 + 0x40;\n    }\n    if (*(iVar2 + 4) != 0) {\n        iVar1 = *(iVar2 + 4) + -0x40;\n    }\n    *param_1 = iVar1;\n    return;\n}\n",
        "token_count": 127
    },
    "00413e56": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413e56(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    \n    iVar3 = fcn.0045306d(0x48);\n    if (iVar3 == 0) {\n        fcn.0044e7ba();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    *(in_ECX + 4) = iVar3;\n    piVar1 = *(arg_8h + 8);\n    *(in_ECX + 0x10) = piVar1;\n    (**(*piVar1 + 4))();\n    fcn.00414b42();\n    iVar3 = in_ECX;\n    if (in_ECX == -0xc) {\n        iVar3 = 0;\n    }\n    if (*(iVar3 + 4) == 0) {\n        iVar3 = 0;\n    }\n    else {\n        iVar3 = *(iVar3 + 4) + 0x40;\n    }\n    iVar4 = in_ECX;\n    if (in_ECX == -0xc) {\n        iVar4 = 0;\n    }\n    *(*(iVar4 + 4) + 0x44) = iVar3;\n    iVar4 = in_ECX;\n    if (in_ECX == -0xc) {\n        iVar4 = 0;\n    }\n    *(*(iVar4 + 4) + 0x40) = iVar3;\n    *(in_ECX + 0x14) = 0;\n    return;\n}\n",
        "token_count": 368
    },
    "00413ed1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00413ed1(void)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    int32_t iVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0045b302(8);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -4) = 1;\n    iVar2 = extraout_ECX;\n    if (extraout_ECX == -0xc) {\n        iVar2 = 0;\n    }\n    iVar2 = *(*(iVar2 + 4) + 0x44);\n    if (iVar2 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = iVar2 + -0x40;\n    }\n    while( true ) {\n        iVar1 = extraout_ECX;\n        if (extraout_ECX == -0xc) {\n            iVar1 = 0;\n        }\n        if (iVar2 == *(iVar1 + 4)) break;\n        if (*(iVar2 + 0x44) == 0) {\n            *(unaff_EBP + -0x10) = 0;\n        }\n        else {\n            *(unaff_EBP + -0x10) = *(iVar2 + 0x44) + -0x40;\n        }\n        fcn.004151c9();\n        fcn.00452a07(iVar2);\n        iVar2 = *(unaff_EBP + -0x10);\n    }\n    fcn.0040e226();\n    fcn.00452a07(*(extraout_ECX + 4));\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 408
    },
    "00413fbd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00413fbd(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *extraout_ECX;\n    uint32_t arg_8h_00;\n    int32_t unaff_EBP;\n    int32_t *arg_8h_01;\n    uint var_14h;\n    uint var_10h;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    uint var_4h;\n    \n    fcn.0045b302(0xc);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    *extraout_ECX = 0x4a43c4;\n    extraout_ECX[0x1c] = vtable.std::basic_ios_wchar_t__struct_std::char_traits_wchar_t__.0;\n    arg_8h_01 = extraout_ECX + 4;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = 1;\n    piVar4 = arg_8h_01;\n    piVar5 = extraout_ECX;\n    fcn.0040a9af(arg_8h_01);\n    *(unaff_EBP + -4) = 1;\n    *(extraout_ECX + *(*extraout_ECX + 4)) = vtable.std::basic_ifstream_wchar_t__struct_std::char_traits_wchar_t__.0;\n    *(*(*extraout_ECX + 4) + -4 + extraout_ECX) = *(*extraout_ECX + 4) + -0x70;\n    fcn.004148e7(0);\n    *(unaff_EBP + -4) = 2;\n    if ((extraout_ECX[0x18] == 0) && (iVar2 = fcn.0044f41d(*(unaff_EBP + 8), 1, 0x40),  iVar2 != 0)) {\n        *(extraout_ECX + 0x17) = 1;\n        *(extraout_ECX + 0x56) = 0;\n        fcn.0040a96b(0, piVar4, piVar5, extraout_ECX);\n        extraout_ECX[0x18] = iVar2;\n        extraout_ECX[0x16] = *0x4b96f0;\n        extraout_ECX[0x14] = 0;\n        uVar3 = fcn.0040a951(unaff_EBP + 8);\n        *(unaff_EBP + -4) = 3;\n        uVar3 = fcn.00415128(uVar3);\n        fcn.00409d43(uVar3);\n        *(unaff_EBP + -4) = 2;\n        fcn.0040e226();\n    }\n    else {\n        arg_8h_01 = NULL;\n    }\n    if (arg_8h_01 == NULL) {\n        uVar1 = *(extraout_ECX + *(*extraout_ECX + 4) + 0xc);\n        arg_8h_00 = uVar1 | 2;\n        if (*(extraout_ECX + *(*extraout_ECX + 4) + 0x38) == 0) {\n            arg_8h_00 = uVar1 | 6;\n        }\n        fcn.0040e96e(arg_8h_00, 0);\n    }\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 856
    },
    "00414baf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00414baf(uint arg_8h)\n\n{\n    uint *arg_8h_00;\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_2ch;\n    uint var_28h;\n    uint var_4h;\n    \n    fcn.0045b335(0x20);\n    arg_8h_00 = *(unaff_EBP + 8);\n    puVar1 = arg_8h_00;\n    if (7 < arg_8h_00[5]) {\n        puVar1 = *arg_8h_00;\n    }\n    if (arg_8h_00[7] != puVar1 + arg_8h_00[4] * 2) {\n        fcn.004154fa(unaff_EBP + -0x28);\n        *(unaff_EBP + -4) = 0;\n        fcn.00415417(unaff_EBP + -0x2c, unaff_EBP + -0x28);\n        if (*(extraout_ECX + 0x18) == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(extraout_ECX + 0x18) + 0xc;\n        }\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = iVar2 + -0xc;\n        }\n        if (*(unaff_EBP + -0x2c) != *(iVar2 + 4)) {\n            fcn.00414baf(arg_8h_00);\n        }\n        fcn.00402754(1, 0);\n    }\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 417
    },
    "00415216": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415216(ushort *arg_8h)\n\n{\n    int32_t iVar1;\n    ushort uVar2;\n    int32_t *in_ECX;\n    ushort *puVar3;\n    \n    puVar3 = in_ECX[1];\n    if ((arg_8h < puVar3) && (*in_ECX < arg_8h || *in_ECX == arg_8h)) {\n        iVar1 = *in_ECX;\n        if (puVar3 == in_ECX[2]) {\n            fcn.00415339();\n        }\n        puVar3 = in_ECX[1];\n        if (puVar3 == NULL) goto code_r0x00415261;\n        uVar2 = *(*in_ECX + (arg_8h - iVar1 >> 1) * 2);\n    }\n    else {\n        if (puVar3 == in_ECX[2]) {\n            fcn.00415339();\n        }\n        puVar3 = in_ECX[1];\n        if (puVar3 == NULL) goto code_r0x00415261;\n        uVar2 = *arg_8h;\n    }\n    *puVar3 = uVar2;\ncode_r0x00415261:\n    in_ECX[1] = in_ECX[1] + 2;\n    return;\n}\n",
        "token_count": 293
    },
    "00415270": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415270(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    piVar1 = param_1 + 3;\n    iVar2 = *param_1;\n    while (iVar2 != piVar1) {\n        iVar3 = *param_1;\n        iVar2 = *((-iVar3 & 3U) + iVar3);\n        if (param_1[0x4004] == NULL) {\n            fcn.00456859(iVar3);\n        }\n        else {\n            (*param_1[0x4004])();\n        }\n        *param_1 = iVar2;\n    }\n    param_1[1] = (-piVar1 & 3U) + piVar1;\n    *param_1 = piVar1;\n    param_1[2] = param_1 + 0x4003;\n    return;\n}\n",
        "token_count": 212
    },
    "00415417": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415417(int32_t *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t arg_8h_00;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_ch_00;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_ECX + 0x18) == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = *(in_ECX + 0x18) + 0xc;\n    }\n    if (iVar2 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = iVar2 + -0xc;\n    }\n    iVar2 = *(iVar2 + 4);\n    arg_8h_00 = fcn.0041662d();\n    arg_ch_00 = iVar2;\n    if (arg_8h_00 != 0) {\n        do {\n            cVar1 = fcn.00417da5(arg_8h_00, arg_ch);\n            if (cVar1 == '\\0') {\n                iVar3 = *(arg_8h_00 + 0x38);\n                arg_ch_00 = arg_8h_00;\n            }\n            else {\n                iVar3 = *(arg_8h_00 + 0x3c);\n            }\n            if (iVar3 == 0) {\n                arg_8h_00 = 0;\n            }\n            else {\n                arg_8h_00 = iVar3 + -0x34;\n            }\n        } while (arg_8h_00 != 0);\n        if ((arg_ch_00 != iVar2) && (cVar1 = fcn.00417da5(arg_ch, arg_ch_00),  cVar1 == '\\0')) goto code_r0x00415495;\n    }\n    arg_ch_00 = iVar2;\ncode_r0x00415495:\n    *arg_8h = arg_ch_00;\n    return;\n}\n",
        "token_count": 455
    },
    "0041562f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041562f(int16_t *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    code *var_14h;\n    uint var_8h;\n    int16_t *var_4h;\n    \n    for (iVar2 = *(in_ECX + 0x18); iVar2 != 0; iVar2 = *(iVar2 + 0x2c)) {\n        *(iVar2 + 0x10) = 0;\n    }\n    iVar2 = *(in_ECX + 0x20);\n    *(in_ECX + 0x18) = 0;\n    for (; iVar2 != 0; iVar2 = *(iVar2 + 0x18)) {\n        *(iVar2 + 0x10) = 0;\n    }\n    *(in_ECX + 0x20) = 0;\n    if (*arg_8h == -0x101) {\n        arg_8h = arg_8h + 1;\n    }\n    while( true ) {\n        fcn.004162f7();\n        var_4h = arg_8h;\n        if (*arg_8h == 0) {\n            return;\n        }\n        if (*arg_8h != 0x3c) break;\n        arg_8h = arg_8h + 1;\n        iVar2 = fcn.00416313(&arg_8h);\n        if (iVar2 != 0) {\n            fcn.00415f6e(iVar2);\n        }\n    }\n    fcn.00453bd4();\n    var_14h = vtable.boost::property_tree::detail::rapidxml::parse_error.0;\n    var_8h = 0x4a381c;\n    fcn.0045b275(&var_14h, 0x4aca34);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 437
    },
    "00415d15": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00415d15(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t in_EDX;\n    \n    for (; in_ECX != in_EDX; in_ECX = in_ECX + 0x18) {\n        if (arg_8h != 0) {\n            fcn.00401ed3(in_ECX);\n        }\n        arg_8h = arg_8h + 0x18;\n    }\n    return arg_8h;\n}\n",
        "token_count": 116
    },
    "00416118": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416118(uint *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    uint var_8h;\n    \n    iVar1 = *(in_ECX + 0x18);\n    if (iVar1 == -0xc) {\n        iVar1 = 0;\n    }\n    puVar2 = fcn.00416888(&var_8h, *(iVar1 + 4), arg_ch);\n    *arg_8h = *puVar2;\n    return;\n}\n",
        "token_count": 129
    },
    "004162f7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004162f7(int32_t *param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = *param_1;\n    while( true ) {\n        cVar1 = fcn.00416755();\n        if (cVar1 == '\\0') break;\n        iVar2 = iVar2 + 2;\n    }\n    *param_1 = iVar2;\n    return;\n}\n",
        "token_count": 98
    },
    "00416b3b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00416b3b(uint arg_8h, uint arg_ch)\n\n{\n    uint16_t *puVar1;\n    uint extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0045b36b(8);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    fcn.00401acc(*(unaff_EBP + 0xc) - *(unaff_EBP + 8) >> 1);\n    *(unaff_EBP + -4) = 0;\n    puVar1 = *(unaff_EBP + 8);\n    while (puVar1 != *(unaff_EBP + 0xc)) {\n        fcn.0040b6ec(1, *puVar1);\n        puVar1 = *(unaff_EBP + 8) + 2;\n        *(unaff_EBP + 8) = puVar1;\n    }\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 253
    },
    "00416b9a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00416b9a(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_5ch;\n    uint var_58h;\n    uint var_40h;\n    uint var_28h;\n    uint var_4h;\n    \n    fcn.0045b335(0x50);\n    *(unaff_EBP + -0x5c) = 0;\n    arg_8h_00 = fcn.004170d4(unaff_EBP + -0x58);\n    *(unaff_EBP + -4) = 0;\n    fcn.004177d1(extraout_ECX);\n    *(unaff_EBP + -4) = 1;\n    fcn.00417865(arg_8h_00);\n    *(unaff_EBP + -4) = 2;\n    fcn.004178ad();\n    fcn.0040230f();\n    fcn.0040230f();\n    fcn.0040230f();\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 270
    },
    "00416d88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00416d88(int16_t **arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    code *var_14h;\n    char *var_8h;\n    int16_t *var_4h;\n    \n    while( true ) {\n        var_4h = *arg_8h;\n        if (((*var_4h == 0x2d) && (var_4h[1] == 0x2d)) && (var_4h[2] == 0x3e)) break;\n        if (*var_4h == 0) {\n            fcn.00453bd4();\n            var_14h = vtable.boost::property_tree::detail::rapidxml::parse_error.0;\n            var_8h = \"unexpected end of data\";\n            fcn.0045b275(&var_14h, 0x4aca34);\n            pcVar1 = swi(3);\n            uVar2 = (*pcVar1)();\n            return uVar2;\n        }\n        *arg_8h = var_4h + 1;\n    }\n    *arg_8h = *arg_8h + 3;\n    return 0;\n}\n",
        "token_count": 273
    },
    "00416e74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00416e74(int16_t **arg_8h)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    uint *arg_8h_00;\n    uint uVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    code *var_28h;\n    char *var_1ch;\n    int16_t *var_18h;\n    code *var_14h;\n    char *var_8h;\n    int16_t *var_4h;\n    \n    piVar5 = *arg_8h;\n    iVar1 = *piVar5;\n    while( true ) {\n        if (iVar1 == 0x3e) {\n            *arg_8h = *arg_8h + 1;\n            return 0;\n        }\n        if (*piVar5 == 0) break;\n        if (*piVar5 == 0x5b) {\n            piVar5 = piVar5 + 1;\n            *arg_8h = piVar5;\n            iVar4 = 1;\n            do {\n                iVar1 = *piVar5;\n                if (iVar1 == 0) {\n                    fcn.00453bd4();\n                    var_14h = vtable.boost::property_tree::detail::rapidxml::parse_error.0;\n                    var_8h = \"unexpected end of data\";\n                    arg_8h_00 = &var_14h;\n                    var_4h = piVar5;\n                    goto code_r0x00416f1a;\n                }\n                if (iVar1 == 0x5b) {\n                    iVar4 = iVar4 + 1;\n                }\n                else if (iVar1 == 0x5d) {\n                    iVar4 = iVar4 + -1;\n                }\n                piVar5 = piVar5 + 1;\n                *arg_8h = piVar5;\n            } while (0 < iVar4);\n        }\n        else {\n            *arg_8h = piVar5 + 1;\n        }\n        piVar5 = *arg_8h;\n        iVar1 = *piVar5;\n    }\n    var_18h = *arg_8h;\n    fcn.00453bd4();\n    var_28h = vtable.boost::property_tree::detail::rapidxml::parse_error.0;\n    var_1ch = \"unexpected end of data\";\n    arg_8h_00 = &var_28h;\ncode_r0x00416f1a:\n    fcn.0045b275(arg_8h_00, 0x4aca34);\n    pcVar2 = swi(3);\n    uVar3 = (*pcVar2)();\n    return uVar3;\n}\n",
        "token_count": 599
    },
    "004173b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004173b4(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t *in_ECX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    iVar3 = (-in_ECX[1] & 3U) + in_ECX[1];\n    if (in_ECX[2] <= iVar3 + arg_8h && iVar3 + arg_8h != in_ECX[2]) {\n        uVar1 = 0x10000;\n        if (0x10000 < arg_8h) {\n            uVar1 = arg_8h;\n        }\n        if (in_ECX[0x4003] == NULL) {\n            iVar3 = fcn.0044f469(uVar1 + 10);\n        }\n        else {\n            iVar3 = (*in_ECX[0x4003])();\n        }\n        piVar2 = (-iVar3 & 3U) + iVar3;\n        *piVar2 = *in_ECX;\n        *in_ECX = iVar3;\n        piVar2 = piVar2 + 1;\n        in_ECX[1] = piVar2;\n        in_ECX[2] = iVar3 + uVar1 + 10;\n        iVar3 = (-piVar2 & 3U) + piVar2;\n    }\n    in_ECX[1] = iVar3 + arg_8h;\n    return iVar3;\n}\n",
        "token_count": 326
    },
    "00417747": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00417747(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    \n    if (arg_8h == *(in_ECX + 0x18)) {\n        uVar1 = *(in_ECX + 0x1c);\n    }\n    else {\n        puVar4 = *(in_ECX + 0x10);\n        iVar3 = *(in_ECX + 0x14) * 8 >> 3;\n        while (iVar2 = iVar3,  0 < iVar2) {\n            iVar3 = iVar2 / 2;\n            if (puVar4[iVar3 * 2] < arg_8h) {\n                puVar4 = puVar4 + iVar3 * 2 + 2;\n                iVar3 = iVar2 + (-1 - iVar3);\n            }\n        }\n        uVar1 = puVar4[1];\n    }\n    return uVar1;\n}\n",
        "token_count": 238
    },
    "004177d1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.004177d1(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t arg_8h;\n    uint *puVar5;\n    uint arg_ch;\n    uint *extraout_ECX;\n    int32_t arg_8h_00;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0045b302(8);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    extraout_ECX[5] = 0xf;\n    extraout_ECX[4] = 0;\n    *extraout_ECX = 0;\n    *(unaff_EBP + -4) = 0;\n    iVar1 = *(arg_8h_00 + 0x10);\n    *(unaff_EBP + -0x10) = 1;\n    iVar4 = fcn.00402284(0x4a386c);\n    arg_8h = iVar4 + iVar1;\n    uVar2 = extraout_ECX[4];\n    if (((uVar2 <= arg_8h) && (extraout_ECX[5] != arg_8h)) && (cVar3 = fcn.004021a8(arg_8h, 1),  cVar3 != '\\0')) {\n        extraout_ECX[4] = uVar2;\n        puVar5 = extraout_ECX;\n        if (0xf < extraout_ECX[5]) {\n            puVar5 = *extraout_ECX;\n        }\n        *(puVar5 + uVar2) = 0;\n    }\n    fcn.0040190f(arg_8h_00, 0, 0xffffffff);\n    arg_ch = fcn.00402284(0x4a386c);\n    fcn.004096dc(0x4a386c, arg_ch);\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 524
    },
    "00417974": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00417974(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    char cVar4;\n    ushort uVar5;\n    uint32_t *extraout_ECX;\n    ushort *puVar6;\n    int32_t unaff_EBP;\n    int32_t iVar7;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_4h;\n    \n    fcn.0045b36b(0x10);\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    *(unaff_EBP + -0x14) = *(unaff_EBP + 8) - *extraout_ECX >> 1;\n    cVar4 = fcn.0040caf9(unaff_EBP + 0x14);\n    if (cVar4 == '\\0') {\n        iVar7 = extraout_ECX[1] - *extraout_ECX >> 1;\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x1c) = iVar7;\n        while( true ) {\n            var_4h = unaff_EBP + 0x14;\n            cVar4 = fcn.0040caf9(var_4h);\n            if (cVar4 != '\\0') break;\n            if (*(unaff_EBP + 0x10) == '\\0') {\n                fcn.0040bfba();\n            }\n            uVar2 = extraout_ECX[1];\n            uVar1 = unaff_EBP + 0x12;\n            if ((uVar1 < uVar2) && (*extraout_ECX < uVar1 || *extraout_ECX == uVar1)) {\n                uVar3 = *extraout_ECX;\n                if (uVar2 == extraout_ECX[2]) {\n                    fcn.00415339();\n                    var_4h = uVar1;\n                }\n                puVar6 = extraout_ECX[1];\n                if (puVar6 != NULL) {\n                    uVar5 = *(*extraout_ECX + (uVar1 - uVar3 >> 1) * 2);\ncode_r0x00417a16:\n                    *puVar6 = uVar5;\n                }\n            }\n            else {\n                if (uVar2 == extraout_ECX[2]) {\n                    fcn.00415339();\n                    var_4h = uVar1;\n                }\n                puVar6 = extraout_ECX[1];\n                if (puVar6 != NULL) {\n                    uVar5 = *(unaff_EBP + 0x12);\n                    goto code_r0x00417a16;\n                }\n            }\n            extraout_ECX[1] = extraout_ECX[1] + 2;\n            fcn.0040bf93(var_4h);\n        }\n        uVar1 = *extraout_ECX + iVar7 * 2;\n        if ((*extraout_ECX + *(unaff_EBP + -0x14) * 2 != uVar1) && (uVar1 != extraout_ECX[1])) {\n            fcn.00418f56(extraout_ECX[1]);\n        }\n    }\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 790
    },
    "00417da5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417da5(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t **in_ECX;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t *arg_18h;\n    \n    arg_18h = *in_ECX;\n    (**(*arg_18h + 4))();\n    puVar3 = arg_ch;\n    if (7 < arg_ch[5]) {\n        puVar3 = *arg_ch;\n    }\n    piVar1 = arg_ch + 4;\n    if (7 < arg_ch[5]) {\n        arg_ch = *arg_ch;\n    }\n    puVar4 = arg_8h;\n    if (7 < arg_8h[5]) {\n        puVar4 = *arg_8h;\n    }\n    piVar2 = arg_8h + 4;\n    if (7 < arg_8h[5]) {\n        arg_8h = *arg_8h;\n    }\n    fcn.0041854c(arg_8h, puVar4 + *piVar2 * 2, arg_ch, puVar3 + *piVar1 * 2, arg_18h);\n    return;\n}\n",
        "token_count": 286
    },
    "00417f4d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417f4d(uint *arg_8h)\n\n{\n    uint *puVar1;\n    ushort uVar2;\n    uint uVar3;\n    uint *in_ECX;\n    int32_t iVar4;\n    \n    if (in_ECX[5] < 8) {\n        if (arg_8h[5] < 8) {\n            if ((in_ECX != arg_8h) && (puVar1 = in_ECX + 4,  in_ECX != puVar1)) {\n                iVar4 = arg_8h - in_ECX;\n                do {\n                    uVar2 = *in_ECX;\n                    *in_ECX = *(iVar4 + in_ECX);\n                    *(iVar4 + in_ECX) = uVar2;\n                    in_ECX = in_ECX + 2;\n                } while (in_ECX != puVar1);\n            }\n        }\n        else {\n            uVar3 = *arg_8h;\n            fcn.0040272f(arg_8h, in_ECX, in_ECX[4] + 1);\n            *in_ECX = uVar3;\n        }\n    }\n    else if (arg_8h[5] < 8) {\n        uVar3 = *in_ECX;\n        fcn.0040272f(in_ECX, arg_8h, arg_8h[4] + 1);\n        *arg_8h = uVar3;\n    }\n    else {\n        uVar3 = *in_ECX;\n        *in_ECX = *arg_8h;\n        *arg_8h = uVar3;\n    }\n    return;\n}\n",
        "token_count": 364
    },
    "004183bd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004183bd(uint arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar2 = in_ECX + -0xc;\n    if (in_ECX == 0) {\n        iVar2 = 0;\n    }\n    var_4h = *(iVar2 + 4);\n    iVar2 = fcn.0041662d();\n    while (iVar2 != 0) {\n        cVar1 = fcn.00417da5(arg_8h, iVar2);\n        if (cVar1 == '\\0') {\n            iVar3 = *(iVar2 + 0x3c);\n        }\n        else {\n            iVar3 = *(iVar2 + 0x38);\n        }\n        var_4h = iVar2;\n        if (iVar3 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = iVar3 + -0x34;\n        }\n    }\n    if (var_4h == 0) {\n        var_4h = 0;\n    }\n    else {\n        var_4h = var_4h + 0x34;\n    }\n    iVar2 = fcn.004185eb(arg_8h, arg_ch);\n    if (iVar2 == *arg_ch) {\n        if (in_ECX == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = in_ECX + -0xc;\n        }\n        if (*(iVar3 + 4) == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = *(iVar3 + 4) + 0x34;\n        }\n        fcn.0041863a(var_4h, iVar3);\n    }\n    return iVar2;\n}\n",
        "token_count": 435
    },
    "0041854c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041854c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    uint16_t *puVar2;\n    int32_t unaff_EBP;\n    uint16_t *puVar3;\n    uint16_t *puVar4;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0045b302(0xc);\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = *(unaff_EBP + 0x18);\n    (**(**(unaff_EBP + 0x18) + 4))();\n    puVar2 = *(unaff_EBP + 0x14);\n    puVar4 = *(unaff_EBP + 0x10);\n    puVar3 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x14) = puVar2;\n    *(unaff_EBP + -0x18) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -4) = 1;\n    if (puVar3 != *(unaff_EBP + 0xc)) {\n        do {\n            if (puVar4 == puVar2) break;\n            cVar1 = fcn.00418f08(*puVar3, *puVar4);\n            if (cVar1 != '\\0') {\n                fcn.0040e226();\n                goto code_r0x004185d1;\n            }\n            cVar1 = fcn.00418f08(*puVar4, *puVar3);\n            if (cVar1 != '\\0') break;\n            puVar2 = *(unaff_EBP + -0x14);\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        } while (puVar3 != *(unaff_EBP + -0x18));\n    }\n    fcn.0040e226();\ncode_r0x004185d1:\n    fcn.0040e226();\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 506
    },
    "00418b8d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418b8d(uint32_t *arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    int32_t iVar6;\n    uint32_t *puVar7;\n    uint32_t **in_ECX;\n    uint32_t *in_EDX;\n    uint32_t *puVar8;\n    uint32_t *puVar9;\n    uint32_t *puVar10;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t *var_ch;\n    uint32_t *var_8h;\n    uint32_t *var_4h;\n    \n    puVar8 = arg_8h + -2;\n    puVar1 = in_EDX + ((arg_8h - in_EDX >> 3) - (arg_8h - in_EDX >> 0x1f) >> 1) * 2;\n    iVar6 = puVar8 - in_EDX >> 3;\n    if (iVar6 < 0x29) {\n        fcn.00418ff7(puVar8);\n    }\n    else {\n        iVar6 = iVar6 + 1;\n        iVar6 = iVar6 + (iVar6 >> 0x1f & 7U) >> 3;\n        fcn.00418ff7(in_EDX + iVar6 * 4);\n        fcn.00418ff7(puVar1 + iVar6 * 2);\n        fcn.00418ff7(puVar8);\n        fcn.00418ff7(puVar8 + iVar6 * -2);\n    }\n    puVar8 = puVar1 + 2;\n    while (puVar10 = puVar1,  in_EDX < puVar10) {\n        puVar1 = puVar10 + -2;\n        if ((*puVar1 < *puVar10) || (*puVar10 < *puVar1)) break;\n    }\n    puVar1 = puVar8;\n    var_ch = puVar8;\n    var_4h = puVar10;\n    var_8h = puVar10;\n    if (puVar8 < arg_8h) {\n        do {\n            puVar1 = puVar8;\n            var_ch = puVar8;\n            if ((*puVar8 < *puVar10) || (*puVar10 < *puVar8)) break;\n            puVar8 = puVar8 + 2;\n            puVar1 = puVar8;\n            var_ch = puVar8;\n        } while (puVar8 < arg_8h);\n    }\njoined_r0x00418c71:\n    do {\n        puVar5 = puVar10;\n        puVar7 = var_4h;\n        if (arg_8h <= puVar8) {\njoined_r0x00418cac:\n            for (; puVar9 = puVar8,  in_EDX < var_4h; var_4h = var_4h + -2) {\n                puVar10 = puVar7 + -2;\n                var_8h = puVar5;\n                if (*puVar5 <= *puVar10) {\n                    puVar9 = var_ch;\n                    if (*puVar5 < *puVar10) break;\n                    uVar2 = puVar5[-1];\n                    var_8h = puVar5 + -2;\n                    uVar3 = *var_8h;\n                    *var_8h = *puVar10;\n                    puVar5[-1] = puVar7[-1];\n                    *puVar10 = uVar3;\n                    puVar7[-1] = uVar2;\n                }\n                puVar5 = var_8h;\n                puVar8 = var_ch;\n                puVar7 = puVar10;\n            }\n            if (var_4h == in_EDX) {\n                if (puVar9 == arg_8h) {\n                    *in_ECX = puVar5;\n                    in_ECX[1] = puVar1;\n                    return;\n                }\n                if (puVar1 != puVar9) {\n                    uVar2 = *puVar5;\n                    uVar3 = puVar5[1];\n                    *puVar5 = *puVar1;\n                    puVar5[1] = puVar1[1];\n                    *puVar1 = uVar2;\n                    puVar1[1] = uVar3;\n                }\n                uVar2 = *puVar5;\n                uVar3 = puVar5[1];\n                puVar10 = var_8h + 2;\n                *puVar5 = *puVar9;\n                puVar5[1] = puVar9[1];\n                puVar8 = var_ch + 2;\n                *puVar9 = uVar2;\n                puVar9[1] = uVar3;\n                puVar1 = puVar1 + 2;\n                var_ch = puVar8;\n                var_8h = puVar10;\n            }\n            else {\n                puVar7 = var_4h + -2;\n                if (puVar9 == arg_8h) {\n                    puVar10 = puVar5 + -2;\n                    puVar8 = puVar9;\n                    if (puVar7 != puVar10) {\n                        uVar2 = *puVar7;\n                        uVar3 = var_4h[-1];\n                        *puVar7 = *puVar10;\n                        var_4h[-1] = puVar5[-1];\n                        *puVar10 = uVar2;\n                        puVar5[-1] = uVar3;\n                        puVar8 = var_ch;\n                    }\n                    uVar2 = *puVar10;\n                    uVar3 = puVar5[-1];\n                    puVar9 = puVar1 + -2;\n                    *puVar10 = *puVar9;\n                    puVar5[-1] = puVar1[-1];\n                    *puVar9 = uVar2;\n                    puVar1[-1] = uVar3;\n                    puVar1 = puVar9;\n                    var_4h = puVar7;\n                    var_8h = puVar10;\n                }\n                else {\n                    uVar2 = *puVar9;\n                    uVar3 = puVar9[1];\n                    *puVar9 = *puVar7;\n                    puVar8 = puVar9 + 2;\n                    puVar9[1] = var_4h[-1];\n                    *puVar7 = uVar2;\n                    var_4h[-1] = uVar3;\n                    puVar10 = puVar5;\n                    var_ch = puVar8;\n                    var_4h = puVar7;\n                }\n            }\n            goto joined_r0x00418c71;\n        }\n        uVar2 = *puVar8;\n        puVar9 = puVar1;\n        if (uVar2 <= *puVar10) {\n            var_ch = puVar8;\n            if (uVar2 < *puVar10) goto joined_r0x00418cac;\n            puVar9 = puVar1 + 2;\n            uVar3 = *puVar1;\n            uVar4 = puVar1[1];\n            *puVar1 = uVar2;\n            puVar1[1] = puVar8[1];\n            *puVar8 = uVar3;\n            puVar8[1] = uVar4;\n            puVar10 = var_8h;\n        }\n        puVar8 = puVar8 + 2;\n        puVar1 = puVar9;\n        var_ch = puVar8;\n    } while( true );\n}\n",
        "token_count": 1684
    },
    "00418e25": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418e25(uint *param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = param_2 - param_1;\n    if (8 < (uVar2 & 0xfffffff8)) {\n        puVar1 = param_2 + -8;\n        do {\n            var_8h = *puVar1;\n            var_4h = puVar1[1];\n            *puVar1 = *param_1;\n            puVar1[1] = param_1[1];\n            fcn.0041904c(uVar2 - 8 >> 3, &var_8h);\n            puVar1 = puVar1 + -2;\n            uVar2 = puVar1 + (8 - param_1);\n        } while (8 < (uVar2 & 0xfffffff8));\n    }\n    return;\n}\n",
        "token_count": 223
    },
    "00418e84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418e84(uint32_t *param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint32_t *puVar5;\n    uint32_t *puVar6;\n    uint32_t *puVar7;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (param_1 != param_2) {\n        for (puVar7 = param_1 + 2; puVar7 != param_2; puVar7 = puVar7 + 2) {\n            uVar2 = *puVar7;\n            uVar3 = puVar7[1];\n            puVar4 = puVar7;\n            if (uVar2 < *param_1) {\n                while (param_1 != puVar4) {\n                    *puVar4 = puVar4[-2];\n                    puVar4[1] = puVar4[-1];\n                    puVar4 = puVar4 + -2;\n                }\n                *param_1 = uVar2;\n                param_1[1] = uVar3;\n            }\n            else {\n                uVar1 = puVar7[-2];\n                puVar6 = puVar7 + -2;\n                while (puVar5 = puVar6,  uVar2 < uVar1) {\n                    *puVar4 = *puVar5;\n                    puVar4[1] = puVar5[1];\n                    puVar6 = puVar5 + -2;\n                    puVar4 = puVar5;\n                    uVar1 = puVar5[-2];\n                }\n                *puVar4 = uVar2;\n                puVar4[1] = uVar3;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 411
    },
    "0041999e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041999e(uint arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    uint *arg_1ch_00;\n    int32_t unaff_EBP;\n    uint var_238h;\n    uint var_234h;\n    uint var_21ch;\n    char16_t *arg_ch;\n    uint arg_10h;\n    uint arg_14h;\n    char *arg_18h;\n    uint uVar2;\n    uint var_4h;\n    \n    fcn.0045b335(0x22c);\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x21c) = 0;\n    fcn.00453710(unaff_EBP + -0x21a, 0, 0x206);\n    iVar1 = unaff_EBP + 8;\n    if (7 < *(unaff_EBP + 0x1c)) {\n        iVar1 = *(unaff_EBP + 8);\n    }\n    *(unaff_EBP + -0x238) = 0;\n    iVar1 = fcn.0042e9a0(iVar1, unaff_EBP + -0x21c, unaff_EBP + -0x238, unaff_EBP + -0x238);\n    if (iVar1 == 0) {\n        uVar2 = 0;\n        arg_1ch_00 = fcn.00426660(0);\n        *(unaff_EBP + -4) = 1;\n        if (0xf < arg_1ch_00[5]) {\n            arg_1ch_00 = *arg_1ch_00;\n        }\n        arg_18h = \"ATTK::Plugin::CheckExecutableSignature() File (%s) could not pass sign check, abort launching ...\";\n        arg_14h = 0x800002;\n        arg_10h = 0x26;\n        arg_ch = L\"c:\\\\ci-jenkins\\\\workspace\\\\irobot\\\\irobot_1.62\\\\irobot_1.62\\\\src\\\\supportwrapper\\\\WrpPluginImpl.h\";\n        uVar2 = fcn.0042c180(uVar2);\n        fcn.0042c3c0(uVar2, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch_00);\n        fcn.0040230f();\n    }\n    fcn.00402754(1, 0);\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 606
    },
    "0041a88e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.0041a88e(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    bool bVar3;\n    uint arg_14h;\n    char16_t *pcVar4;\n    uint uVar5;\n    uint uVar6;\n    char *pcVar7;\n    uint arg_1ch;\n    uint lpType;\n    uint lpcbData;\n    int32_t lpData;\n    uint hKey;\n    \n    arg_1ch = 0x80000002;\n    bVar3 = false;\n    hKey = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000002, L\"Software\\\\TrendMicro\\\\HouseCall\", 0, 0xf003f, &hKey);\n    if (iVar1 != 0) {\n        pcVar7 = \"Open registry key failed. Software\\\\TrendMicro\\\\HouseCall\";\n        uVar6 = 0x800008;\n        uVar5 = 0x185;\n        pcVar4 = L\"c:\\\\ci-jenkins\\\\workspace\\\\irobot\\\\irobot_1.62\\\\irobot_1.62\\\\src\\\\supportwrapper\\\\WrpPluginImpl.h\";\n        uVar2 = fcn.0042c180();\n        fcn.0042c3c0(uVar2, pcVar4, uVar5, uVar6, pcVar7, arg_1ch);\n        goto code_r0x0041a993;\n    }\n    pcVar7 = \"PluginExecuteReboot Open Housecall key success\";\n    uVar6 = 0x800020;\n    uVar5 = 0x170;\n    pcVar4 = L\"c:\\\\ci-jenkins\\\\workspace\\\\irobot\\\\irobot_1.62\\\\irobot_1.62\\\\src\\\\supportwrapper\\\\WrpPluginImpl.h\";\n    lpData = 0;\n    lpType = 4;\n    lpcbData = 4;\n    uVar2 = fcn.0042c180();\n    fcn.0042c3c0(uVar2, pcVar4, uVar5, uVar6, pcVar7, arg_1ch);\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(hKey, 0x4a4780, 0, &lpType, &lpData, &lpcbData);\n    if (iVar1 == 0) {\n        bVar3 = lpData == 1;\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueW)(hKey, 0x4a4780);\n        if (iVar1 != 0) {\n            uVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            pcVar7 = \"PluginExecuteReboot: delete value reboot failed. GetLastError=%lu\";\n            arg_14h = 0x800008;\n            uVar6 = 0x17a;\n            uVar2 = extraout_ECX;\n            goto code_r0x0041a958;\n        }\n    }\n    else {\n        uVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        pcVar7 = \"Failed to query reboot value, GetLastError=%lu\";\n        arg_14h = 0x800020;\n        uVar6 = 0x17e;\n        uVar2 = extraout_ECX_00;\ncode_r0x0041a958:\n        bVar3 = false;\n        pcVar4 = L\"c:\\\\ci-jenkins\\\\workspace\\\\irobot\\\\irobot_1.62\\\\irobot_1.62\\\\src\\\\supportwrapper\\\\WrpPluginImpl.h\";\n        uVar2 = fcn.0042c180(uVar2);\n        fcn.0042c3c0(uVar2, pcVar4, uVar6, arg_14h, pcVar7, uVar5);\n    }\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\ncode_r0x0041a993:\n    if (bVar3 == false) {\n        pcVar7 = \"No Reboot Needed, RebootWindows\";\n        uVar6 = 0x800008;\n        uVar5 = 0x18d;\n        pcVar4 = L\"c:\\\\ci-jenkins\\\\workspace\\\\irobot\\\\irobot_1.62\\\\irobot_1.62\\\\src\\\\supportwrapper\\\\WrpPluginImpl.h\";\n        uVar2 = fcn.0042c180();\n        fcn.0042c3c0(uVar2, pcVar4, uVar5, uVar6, pcVar7, arg_1ch);\n    }\n    else {\n        pcVar7 = \"Reboot Needed, RebootWindows\";\n        uVar6 = 0x800008;\n        uVar5 = 0x189;\n        pcVar4 = L\"c:\\\\ci-jenkins\\\\workspace\\\\irobot\\\\irobot_1.62\\\\irobot_1.62\\\\src\\\\supportwrapper\\\\WrpPluginImpl.h\";\n        uVar2 = fcn.0042c180();\n        fcn.0042c3c0(uVar2, pcVar4, uVar5, uVar6, pcVar7, arg_1ch);\n        fcn.0042f650();\n    }\n    return bVar3;\n}\n",
        "token_count": 1175
    },
    "0041c3f9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041c3f9(int32_t arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if ((arg_ch == 0) || (0x7fffffff < arg_ch)) {\n        iVar2 = -0x7ff8ffa9;\n    }\n    if (-1 < iVar2) {\n        iVar2 = 0;\n        arg_ch = arg_ch - 1;\n        uVar1 = fcn.00457832(arg_8h, arg_ch, arg_10h, &arg_14h);\n        if ((uVar1 < 0) || (arg_ch < uVar1)) {\n            iVar2 = -0x7ff8ff86;\n        }\n        else if (uVar1 != arg_ch) {\n            return 0;\n        }\n        *(arg_8h + arg_ch * 2) = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 235
    },
    "0041d936": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "set registry value"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl\nfcn.0041d936(uint arg_8h, uint arg_ch, uint arg_10h, uint noname_3, uint noname_4, uint noname_5, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    int32_t unaff_EBP;\n    uint var_220h;\n    uint uVar3;\n    char *pcVar4;\n    char16_t *pcVar5;\n    uint uVar6;\n    uint uVar7;\n    char *pcVar8;\n    uint var_4h;\n    \n    fcn.0045b335(0x214);\n    uVar3 = *(unaff_EBP + 8);\n    pcVar8 = \"%s Success opening key.\";\n    uVar7 = 0x800040;\n    uVar6 = 0x141;\n    pcVar5 = L\"WrpPlugin.cpp\";\n    *(unaff_EBP + -4) = 1;\n    uVar1 = fcn.0042c180(extraout_ECX);\n    fcn.0042c3c0(uVar1, pcVar5, uVar6, uVar7, pcVar8, \"SetWerReg()\");\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(uVar3, L\"DumpType\", 0, 4, unaff_EBP + 0xc, 4);\n    pcVar8 = \"SetWerReg()\";\n    if (iVar2 == 0) {\n        pcVar4 = \"%s Success writing to Registry DumpType.\";\n        uVar1 = 0x14b;\n    }\n    else {\n        pcVar4 = \"%s Error writing to Registry DumpType.\";\n        uVar1 = 0x14d;\n    }\n    uVar7 = 0x800040;\n    pcVar5 = L\"WrpPlugin.cpp\";\n    uVar6 = fcn.0042c180(extraout_ECX_00);\n    fcn.0042c3c0(uVar6, pcVar5, uVar1, uVar7, pcVar4, pcVar8);\n    *(unaff_EBP + -0x220) = 0;\n    fcn.00453710(unaff_EBP + -0x21e, 0, 0x208);\n    iVar2 = unaff_EBP + 0x10;\n    if (7 < *(unaff_EBP + 0x24)) {\n        iVar2 = *(unaff_EBP + 0x10);\n    }\n    fcn.0041c3f9(unaff_EBP + -0x220, 0x104, 0x4a53ac, iVar2);\n    pcVar4 = \"SetWerReg()\";\n    pcVar8 = \"%s szData=[%S].\";\n    uVar7 = 0x800040;\n    uVar6 = 0x158;\n    pcVar5 = L\"WrpPlugin.cpp\";\n    uVar1 = fcn.0042c180();\n    fcn.0042c3c0(uVar1, pcVar5, uVar6, uVar7, pcVar8, pcVar4);\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(uVar3, 0x4a520c, 0, 2, unaff_EBP + -0x220, *(unaff_EBP + 0x20) * 2);\n    pcVar8 = \"SetWerReg()\";\n    if (iVar2 == 0) {\n        pcVar4 = \"%s Success writing to Registry DumpFolder.\";\n        uVar3 = 0x162;\n    }\n    else {\n        pcVar4 = \"%s Error writing to Registry DumpFolder.\";\n        uVar3 = 0x164;\n    }\n    uVar6 = 0x800040;\n    pcVar5 = L\"WrpPlugin.cpp\";\n    uVar1 = fcn.0042c180(extraout_ECX_01);\n    fcn.0042c3c0(uVar1, pcVar5, uVar3, uVar6, pcVar4, pcVar8);\n    fcn.00402754(1, 0);\n    fcn.00402754(1, 0);\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 1002
    },
    "0041e7cb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: nNumberOfBytesToWrite\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: lpBuffer\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041e7cb(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *arg_1ch;\n    uint uVar3;\n    int32_t iVar4;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_EDX;\n    int32_t unaff_EBP;\n    int32_t arg_8h_00;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint lpExitCode;\n    uint lpNumberOfBytesWritten;\n    uint var_58h;\n    uint var_40h;\n    uint lpBuffer;\n    uint nNumberOfBytesToWrite;\n    uint var_14h;\n    uint arg_10h;\n    uint arg_14h;\n    char *arg_18h;\n    uint var_4h;\n    \n    fcn.0045b335(100);\n    *(unaff_EBP + -100) = extraout_EDX;\n    *(unaff_EBP + -0x5c) = extraout_ECX;\n    arg_1ch = *(unaff_EBP + 0xc);\n    arg_8h_00 = 0;\n    *(unaff_EBP + -0x60) = *(unaff_EBP + 8);\n    if (arg_1ch[4] != 0) {\n        iVar2 = fcn.004262e0();\n        if (7 < arg_1ch[5]) {\n            arg_1ch = *arg_1ch;\n        }\n        arg_18h = \"CreateTaskImpl(): LogFile=%S\";\n        arg_14h = 0x800008;\n        arg_10h = 0x24c;\n        uVar3 = fcn.0042c180(extraout_ECX_00);\n        fcn.0042c3c0(uVar3, L\"WrpPlugin.cpp\", arg_10h, arg_14h, arg_18h, arg_1ch);\n        fcn.00453710(unaff_EBP + -0x70, 0, 0xc);\n        *(unaff_EBP + -0x6c) = 0;\n        *(unaff_EBP + -0x70) = 0xc;\n        *(unaff_EBP + -0x68) = 1;\n        arg_8h_00 = fcn.00425c70(1, unaff_EBP + -0x70, 4, 0x80);\n        if (iVar2 != 0) {\n            fcn.0040c0a5(*(unaff_EBP + -0x5c));\n            *(unaff_EBP + -4) = 0;\n            fcn.0040c05d(L\"\\n-------------------------------\\n\\n\\n\");\n            *(unaff_EBP + -4) = 2;\n            fcn.00402754(1, 0);\n            fcn.00426660(0);\n            if (*(unaff_EBP + -0x18) != 0) {\n                iVar2 = unaff_EBP + -0x28;\n                if (0xf < *(unaff_EBP + -0x14)) {\n                    iVar2 = *(unaff_EBP + -0x28);\n                }\n                (*_sym.imp.KERNEL32.dll_WriteFile)(arg_8h_00, iVar2, *(unaff_EBP + -0x18), unaff_EBP + -0x5c, 0);\n            }\n            fcn.0040230f();\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00402754(1, 0);\n        }\n    }\n    iVar2 = fcn.0042d790();\n    iVar4 = fcn.0042d960(arg_8h_00, iVar2);\n    if (iVar4 == 0) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        **(unaff_EBP + -0x60) = uVar3;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(iVar4, 0xffffffff);\n        (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)(iVar4, *(unaff_EBP + -0x60));\n        pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar4);\n        if (iVar2 != 0) {\n            (*pcVar1)(iVar2);\n        }\n        if (arg_8h_00 != 0) {\n            (*pcVar1)(arg_8h_00);\n            (*_sym.imp.KERNEL32.dll_Sleep)(10);\n        }\n    }\n    fcn.0045b2e4();\n    return;\n}\n",
        "token_count": 1131
    },
    "0041ed78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ed78(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    int32_t arg_8h_00;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = 0;\n    if ((arg_8h != 0) && ((0x1fffffff < arg_8h || (arg_8h_00 = fcn.0045306d(arg_8h << 3),  arg_8h_00 == 0)))) {\n        fcn.0044e7ba();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    fcn.0041f869(arg_8h_00);\n    iVar1 = in_ECX[1];\n    iVar4 = *in_ECX;\n    iVar3 = iVar1 - iVar4;\n    if (iVar4 != 0) {\n        for (; iVar4 != iVar1; iVar4 = iVar4 + 8) {\n            if (*(iVar4 + 4) != 0) {\n                fcn.0040cd13();\n            }\n        }\n        fcn.00452a07(*in_ECX);\n    }\n    *in_ECX = arg_8h_00;\n    in_ECX[2] = arg_8h_00 + arg_8h * 8;\n    in_ECX[1] = arg_8h_00 + (iVar3 >> 3) * 8;\n    return;\n}\n",
        "token_count": 364
    },
    "0041ef8a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0041ef8a(uint16_t *arg_8h, uint16_t *arg_ch, ushort *arg_10h)\n\n{\n    ushort uVar1;\n    uint *in_ECX;\n    uint var_8h;\n    \n    if (arg_8h == arg_ch) {\n        *in_ECX = arg_10h;\n    }\n    else {\n        do {\n            uVar1 = fcn.00457a96(*arg_8h);\n            *arg_10h = uVar1;\n            arg_8h = arg_8h + 1;\n            arg_10h = arg_10h + 1;\n        } while (arg_8h != arg_ch);\n        *in_ECX = arg_10h;\n    }\n    return in_ECX;\n}\n",
        "token_count": 178
    },
    "0041f869": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0041f869(uint *arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    uint *in_EDX;\n    \n    for (; in_ECX != in_EDX; in_ECX = in_ECX + 2) {\n        if (arg_8h != NULL) {\n            *arg_8h = 0;\n            arg_8h[1] = 0;\n            if (arg_8h != in_ECX) {\n                arg_8h[1] = in_ECX[1];\n                in_ECX[1] = 0;\n                uVar1 = *arg_8h;\n                *arg_8h = *in_ECX;\n                *in_ECX = uVar1;\n            }\n        }\n        arg_8h = arg_8h + 2;\n    }\n    return arg_8h;\n}\n",
        "token_count": 197
    },
    "0041f940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f940(uint noname_0, int32_t arg_ch)\n\n{\n    if (arg_ch == 0) {\n        return;\n    }\n    fcn.00456a6c(arg_ch);\n    return;\n}\n",
        "token_count": 55
    },
    "0041f960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f960(uint noname_0, uint arg_ch)\n\n{\n    fcn.00455f3f(arg_ch);\n    return;\n}\n",
        "token_count": 38
    },
    "00420040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420040(uint32_t *lpNumberOfBytesRead)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar5;\n    uint var_4h;\n    \n    puVar1 = lpNumberOfBytesRead;\n    uVar5 = *lpNumberOfBytesRead;\n    if (uVar5 != 0) {\n        *lpNumberOfBytesRead = 0;\n        do {\n            uVar2 = uVar5;\n            if (0x400000 < uVar5) {\n                uVar2 = 0x400000;\n            }\n            lpNumberOfBytesRead = NULL;\n            iVar3 = (*_sym.imp.KERNEL32.dll_ReadFile)(*in_ECX, in_EDX, uVar2, &lpNumberOfBytesRead, 0);\n            *puVar1 = *puVar1 + lpNumberOfBytesRead;\n            in_EDX = in_EDX + lpNumberOfBytesRead;\n            uVar5 = uVar5 - lpNumberOfBytesRead;\n            if (iVar3 == 0) {\n                uVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                return uVar4;\n            }\n        } while ((lpNumberOfBytesRead != NULL) && (uVar5 != 0));\n    }\n    return 0;\n}\n",
        "token_count": 311
    },
    "004200c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004200c0(uint32_t *lpNumberOfBytesWritten)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar5;\n    uint var_4h;\n    \n    puVar1 = lpNumberOfBytesWritten;\n    uVar5 = *lpNumberOfBytesWritten;\n    if (uVar5 != 0) {\n        *lpNumberOfBytesWritten = 0;\n        do {\n            uVar2 = uVar5;\n            if (0x400000 < uVar5) {\n                uVar2 = 0x400000;\n            }\n            lpNumberOfBytesWritten = NULL;\n            iVar3 = (*_sym.imp.KERNEL32.dll_WriteFile)(*in_ECX, in_EDX, uVar2, &lpNumberOfBytesWritten, 0);\n            *puVar1 = *puVar1 + lpNumberOfBytesWritten;\n            in_EDX = in_EDX + lpNumberOfBytesWritten;\n            uVar5 = uVar5 - lpNumberOfBytesWritten;\n            if (iVar3 == 0) {\n                uVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                return uVar4;\n            }\n        } while ((lpNumberOfBytesWritten != NULL) && (uVar5 != 0));\n    }\n    return 0;\n}\n",
        "token_count": 312
    },
    "004201d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint8_t __cdecl fcn.004201d0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00420040(arg_10h);\n    return -(iVar1 != 0) & 8;\n}\n",
        "token_count": 67
    },
    "004201f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004201f0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00420140(arg_10h);\n    return;\n}\n",
        "token_count": 44
    },
    "004202e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004202e0(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    \n    iVar2 = 0;\n    uVar1 = param_1[4];\n    uVar4 = 0;\n    if (uVar1 != 0) {\n        if (3 < uVar1) {\n            iVar3 = *param_1;\n            iVar5 = 0;\n            iVar6 = 0;\n            iVar7 = 0;\n            iVar8 = 0;\n            iVar2 = 0;\n            do {\n                uVar4 = uVar4 + 4;\n                iVar5 = iVar5 + *(iVar2 + 4 + iVar3);\n                iVar6 = iVar6 + *(iVar2 + 0x1c + iVar3);\n                iVar7 = iVar7 + *(iVar2 + 0x34 + iVar3);\n                iVar8 = iVar8 + *(iVar2 + 0x4c + iVar3);\n                iVar2 = iVar2 + 0x60;\n            } while (uVar4 < uVar1 - (uVar1 & 3));\n            iVar2 = iVar5 + iVar7 + iVar6 + iVar8;\n        }\n        if (uVar4 < uVar1) {\n            iVar3 = uVar4 * 0x18;\n            iVar5 = uVar1 - uVar4;\n            do {\n                iVar2 = iVar2 + *(iVar3 + 4 + *param_1);\n                iVar3 = iVar3 + 0x18;\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 414
    },
    "00420380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00420380(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    \n    iVar1 = fcn.004202e0();\n    if ((iVar1 != 0) && (iVar1 = iVar1 + -1,  -1 < iVar1)) {\n        do {\n            uVar3 = 0;\n            if (*(param_1 + 0x14) == 0) {\ncode_r0x004203ad:\n                return CONCAT44(*(*(param_1 + 0xc) + 4 + iVar1 * 8), *(*(param_1 + 0xc) + iVar1 * 8));\n            }\n            piVar2 = *(param_1 + 4) + 4;\n            while (*piVar2 != iVar1) {\n                uVar3 = uVar3 + 1;\n                piVar2 = piVar2 + 2;\n                if (*(param_1 + 0x14) <= uVar3) goto code_r0x004203ad;\n            }\n            if (uVar3 < 0) goto code_r0x004203ad;\n            iVar1 = iVar1 + -1;\n        } while (-1 < iVar1);\n    }\n    return 0;\n}\n",
        "token_count": 288
    },
    "004204f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004204f0(uint *param_1, int32_t param_2)\n\n{\n    (**(param_2 + 4))(param_2, param_1[0xc]);\n    (**(param_2 + 4))(param_2, param_1[0xd]);\n    (**(param_2 + 4))(param_2, param_1[0xe]);\n    (**(param_2 + 4))(param_2, param_1[0xf]);\n    (**(param_2 + 4))(param_2, param_1[0x10]);\n    (**(param_2 + 4))(param_2, param_1[0x11]);\n    param_1[0x11] = 0;\n    param_1[0x12] = 0;\n    fcn.004203d0();\n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    param_1[0xc] = 0;\n    param_1[0xd] = 0;\n    param_1[0xe] = 0;\n    param_1[0xf] = 0;\n    param_1[0x10] = 0;\n    param_1[0x11] = 0;\n    param_1[0x12] = 0;\n    return;\n}\n",
        "token_count": 365
    },
    "00420720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00420720(uint8_t **param_1, uint32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    \n    *param_2 = 0;\n    iVar3 = 0;\n    do {\n        if (param_1[1] == NULL) {\n            return 0x10;\n        }\n        param_1[1] = param_1[1] + -1;\n        uVar1 = **param_1;\n        *param_1 = *param_1 + 1;\n        uVar2 = iVar3;\n        iVar3 = iVar3 + 8;\n        *param_2 = *param_2 | uVar1 << (uVar2 & 0x1f);\n    } while (iVar3 < 0x20);\n    return 0;\n}\n",
        "token_count": 196
    },
    "00420a20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420a20(int32_t *arg_8h, code **arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    char **in_ECX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t in_EDX;\n    \n    if (in_ECX[1] == NULL) {\n        return 0x10;\n    }\n    in_ECX[1] = in_ECX[1] + -1;\n    cVar1 = **in_ECX;\n    *in_ECX = *in_ECX + 1;\n    if (cVar1 == '\\0') {\n        uVar2 = fcn.004209a0(arg_8h, arg_ch);\n        return uVar2;\n    }\n    if (in_EDX == 0) {\n        *arg_8h = 0;\n    }\n    else {\n        iVar3 = (**arg_ch)(arg_ch);\n        *arg_8h = iVar3;\n        if (iVar3 == 0) {\n            return 2;\n        }\n    }\n    uVar4 = 0;\n    if (in_EDX != 0) {\n        do {\n            uVar5 = uVar4 + 1;\n            *(uVar4 + *arg_8h) = 1;\n            uVar4 = uVar5;\n        } while (uVar5 < in_EDX);\n    }\n    return 0;\n}\n",
        "token_count": 325
    },
    "00421cf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00421cf0(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint var_4h;\n    \n    iVar1 = fcn.00420770();\n    if (iVar1 == 0) {\n        while ((var_10h >> 0x1f == var_ch && (var_10h < 9))) {\n    // switch table (9 cases) at 0x421dc0\n            switch(*(var_10h * 4 + 0x421dc0)) {\n            case 0x421d37:\n                iVar1 = fcn.00420b20(arg_8h + 0x14, arg_8h, arg_8h + 4, arg_8h + 8, arg_1ch);\n                break;\n            case 0x421d56:\n                iVar1 = fcn.00421300(arg_8h + 0xc, arg_1ch, arg_20h);\n                break;\n            case 0x421d6f:\n                iVar1 = fcn.00421700(*(arg_8h + 0xc), arg_ch, arg_10h, arg_14h, arg_18h, arg_20h);\n                break;\n            case 0x421daa:\n                return 0;\n            case 0x421db2:\n                goto code_r0x00421db2;\n            }\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            iVar1 = fcn.00420770();\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n        }\ncode_r0x00421db2:\n        iVar1 = 4;\n    }\n    return iVar1;\n}\n",
        "token_count": 433
    },
    "00422340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00422340(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    var_18h = 0;\n    uVar1 = fcn.00421e50(&var_4h, &var_8h, &var_ch, &var_10h, &var_14h, &var_18h, arg_8h, arg_ch);\n    (**(arg_ch + 4))(arg_ch, var_4h);\n    (**(arg_ch + 4))(arg_ch, var_8h);\n    (**(arg_ch + 4))(arg_ch, var_ch);\n    (**(arg_ch + 4))(arg_ch, var_10h);\n    (**(arg_ch + 4))(arg_ch, var_14h);\n    (**(arg_ch + 4))(arg_ch, var_18h);\n    return uVar1;\n}\n",
        "token_count": 283
    },
    "00422ba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422ba0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    (**(in_ECX + 0xc))();\n    return;\n}\n",
        "token_count": 61
    },
    "00422bd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00422bd0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    if (arg_8h != 0) {\n        iVar1 = (**(in_ECX + 8))();\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (arg_8h == 0) {\n            return 6;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 108
    },
    "00422c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00422c80(int32_t arg_8h, int32_t arg_ch)\n\n{\n    *(arg_8h + 0x14) = *(arg_8h + 0x14) + arg_ch;\n    return 0;\n}\n",
        "token_count": 60
    },
    "00422ea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00422ea0(code **arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    \n    in_ECX[1] = 0;\n    if (in_EDX == 0) {\n        *in_ECX = 0;\n        return 1;\n    }\n    iVar1 = (**arg_8h)(arg_8h);\n    *in_ECX = iVar1;\n    if (iVar1 != 0) {\n        in_ECX[1] = in_EDX;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 141
    },
    "00423240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00423240(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    code **in_ECX;\n    int32_t in_EDX;\n    int32_t iVar2;\n    bool bVar3;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar2 = arg_ch;\n    var_4h = in_EDX;\n    if ((arg_ch != 0) || (arg_8h != 0)) {\n        do {\n            arg_ch = 0x40000;\n            if ((iVar2 == 0) && (arg_8h < 0x40000)) {\n                arg_ch = arg_8h;\n            }\n            iVar1 = (**in_ECX)();\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            if (arg_ch == 0) {\n                return 6;\n            }\n            fcn.00452a10(var_4h, var_8h, arg_ch);\n            var_4h = var_4h + arg_ch;\n            bVar3 = arg_8h < arg_ch;\n            arg_8h = arg_8h - arg_ch;\n            iVar2 = iVar2 - bVar3;\n            iVar1 = (*in_ECX[1])();\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n        } while ((iVar2 != 0) || (arg_8h != 0));\n    }\n    return 0;\n}\n",
        "token_count": 336
    },
    "00426db0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00426db0(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    fcn.00426f50(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 47
    },
    "00426f50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426f50(int32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    int32_t arg_ch;\n    uint in_stack_ffffffd4;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    \n    var_8h = *0x4b4f00 ^ &stack0xfffffffc;\n    if (((*(in_ECX + 0x3c) & 2) == 0) && (uVar1 = **(in_ECX + 0x20),  uVar1 != 0)) {\n        uVar2 = *(in_ECX + 0x38);\n        if (*(in_ECX + 0x38) < uVar1) {\n            uVar2 = uVar1;\n        }\n        arg_ch = uVar2 - **(in_ECX + 0x10) >> 1;\n        var_ch = 7;\n        var_10h = 0;\n        var_20h = var_20h._2_2_ << 0x10;\n        fcn.00402667(**(in_ECX + 0x10), arg_ch);\n        arg_8h[5] = 7;\n        arg_8h[4] = 0;\n        *arg_8h = 0;\n        if (var_ch < 8) {\n            if (var_10h + 1 != 0) {\n                fcn.004530c0(arg_8h, &var_20h, (var_10h + 1) * 2);\n                arg_8h[4] = var_10h;\n                arg_8h[5] = var_ch;\n                fcn.004529f8(arg_ch);\n                return;\n            }\n        }\n        else {\n            *arg_8h = var_20h;\n        }\n        arg_8h[4] = var_10h;\n        arg_8h[5] = var_ch;\n        fcn.004529f8(arg_ch);\n        return;\n    }\n    if (((*(in_ECX + 0x3c) & 4) == 0) && (**(in_ECX + 0x1c) != 0)) {\n        var_ch = 7;\n        var_10h = 0;\n        var_20h = var_20h._2_2_ << 0x10;\n        fcn.00402667(**(in_ECX + 0xc), (**(in_ECX + 0x1c) + **(in_ECX + 0x2c) * 2) - **(in_ECX + 0xc) >> 1);\n        arg_8h[5] = 7;\n        arg_8h[4] = 0;\n        *arg_8h = 0;\n        if (var_ch < 8) {\n            if (var_10h + 1 != 0) {\n                fcn.004530c0(arg_8h, &var_20h, (var_10h + 1) * 2);\n            }\n        }\n        else {\n            *arg_8h = var_20h;\n        }\n    }\n    else {\n        var_ch = 7;\n        var_10h = 0;\n        var_20h = var_20h._2_2_ << 0x10;\n        arg_8h[5] = 7;\n        arg_8h[4] = 0;\n        *arg_8h = 0;\n        fcn.004530c0(arg_8h, &var_20h, 2);\n    }\n    arg_8h[5] = var_ch;\n    arg_8h[4] = var_10h;\n    fcn.004529f8(in_stack_ffffffd4);\n    return;\n}\n",
        "token_count": 886
    },
    "00427380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00427380(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    \n    fcn.00429160(&arg_8h, arg_8h);\n    if (*(in_ECX + 4) == arg_8h) {\n        return 0;\n    }\n    if (arg_ch != arg_8h + 0x28) {\n        fcn.00402450(arg_8h + 0x28, 0, 0xffffffff);\n    }\n    return 1;\n}\n",
        "token_count": 125
    },
    "00427470": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00427470(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 4) != *(in_ECX + 0xc)) {\n        fcn.00429e70();\n        if (*(in_ECX + 4) != *(in_ECX + 0xc)) {\n            iVar1 = *(in_ECX + 0xc) + 0x10;\n            if (arg_8h != iVar1) {\n                fcn.00402450(iVar1, 0, 0xffffffff);\n            }\n            iVar1 = *(in_ECX + 0xc) + 0x28;\n            if (arg_ch != iVar1) {\n                fcn.00402450(iVar1, 0, 0xffffffff);\n            }\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 207
    },
    "00427500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00427500(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.00453054(L\"https://\");\n    iVar2 = fcn.00429530(L\"https://\", 0, uVar1);\n    if (iVar2 == 0) {\n        return 1;\n    }\n    uVar1 = fcn.00453054(L\"ftp://\");\n    iVar2 = fcn.00429530(L\"ftp://\", 0, uVar1);\n    return (-(iVar2 != 0) & 0xfffffffe) + 2;\n}\n",
        "token_count": 139
    },
    "00428fc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00428fc0(int16_t **arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int16_t **ppiVar4;\n    int16_t **ppiVar5;\n    uint unaff_EBX;\n    uint32_t unaff_ESI;\n    int32_t *piVar6;\n    int32_t **in_FS_OFFSET;\n    uint in_stack_ffffff70;\n    ushort *arg_ch;\n    int32_t *piStack108;\n    ushort auStack104 [4];\n    uint uStack96;\n    uint32_t uStack92;\n    uint32_t uStack88;\n    uint uStack84;\n    uint uStack72;\n    uint32_t uStack68;\n    int32_t *piStack56;\n    uint uStack28;\n    int32_t *piStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0xffffffff;\n    uStack16 = 0x48a390;\n    piStack20 = *in_FS_OFFSET;\n    uStack28 = *0x4b4f00 ^ &piStack108;\n    *in_FS_OFFSET = &piStack20;\n    piStack108 = in_ECX;\n    iVar1 = fcn.00429dd0(arg_8h);\n    if (iVar1 != *in_ECX) {\n        piStack108 = *(iVar1 + 0x20);\n        ppiVar4 = iVar1 + 0x10;\n        if (7 < *(iVar1 + 0x24)) {\n            ppiVar4 = *ppiVar4;\n        }\n        ppiVar5 = arg_8h;\n        if (0x7 < arg_8h[5]) {\n            ppiVar5 = *arg_8h;\n        }\n        piVar6 = piStack108;\n        if (arg_8h[4] < piStack108) {\n            piVar6 = arg_8h[4];\n        }\n        for (; piVar6 != NULL; piVar6 = piVar6 + -1) {\n            if (*ppiVar5 != *ppiVar4) {\n                uVar2 = (-(*ppiVar5 < *ppiVar4) & 0xfffffffe) + 1;\n                goto code_r0x00429038;\n            }\n            ppiVar5 = ppiVar5 + 2;\n            ppiVar4 = ppiVar4 + 2;\n        }\n        uVar2 = 0;\ncode_r0x00429038:\n        if (uVar2 == 0) {\n            if (arg_8h[4] < piStack108) {\n                uVar2 = 0xffffffff;\n            }\n            else {\n                uVar2 = arg_8h[4] != piStack108;\n            }\n        }\n        if (-1 < uVar2) goto code_r0x0042913c;\n    }\n    uStack84 = 7;\n    uStack88 = 0;\n    auStack104[0] = 0;\n    uStack16 = 0;\n    arg_ch = auStack104;\n    in_stack_ffffff70 = fcn.0042ab10(arg_8h, arg_ch);\n    uStack28 = CONCAT31(uStack28._1_3_, 1);\n    iVar3 = fcn.0042aba0(in_stack_ffffff70);\n    fcn.0042abd0(&stack0xffffff80, iVar1, iVar3 + 0x10, iVar3);\n    if (7 < uStack68) {\n        fcn.00452a07(uStack88);\n    }\n    uStack68 = 7;\n    uStack72 = 0;\n    uStack88 = uStack88 & 0xffff0000;\n    if (7 < uStack92) {\n        fcn.00452a07(unaff_EBX);\n    }\n    uStack92 = 7;\n    uStack96 = 0;\n    if (7 < unaff_ESI) {\n        fcn.00452a07(arg_ch);\n    }\ncode_r0x0042913c:\n    *in_FS_OFFSET = piStack56;\n    fcn.004529f8(in_stack_ffffff70);\n    return;\n}\n",
        "token_count": 943
    },
    "00429160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429160(int32_t *arg_8h, int16_t **arg_ch)\n\n{\n    int16_t *piVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint32_t uVar4;\n    int16_t **ppiVar5;\n    int16_t *piVar6;\n    uint var_4h;\n    \n    iVar3 = fcn.00429dd0(arg_ch);\n    if (iVar3 != *in_ECX) {\n        piVar1 = *(iVar3 + 0x20);\n        ppiVar5 = iVar3 + 0x10;\n        if (7 < *(iVar3 + 0x24)) {\n            ppiVar5 = *ppiVar5;\n        }\n        piVar2 = arg_ch[4];\n        if (0x7 < arg_ch[5]) {\n            arg_ch = *arg_ch;\n        }\n        piVar6 = piVar1;\n        if (piVar2 < piVar1) {\n            piVar6 = piVar2;\n        }\n        for (; piVar6 != NULL; piVar6 = piVar6 + -1) {\n            if (*arg_ch != *ppiVar5) {\n                uVar4 = (-(*arg_ch < *ppiVar5) & 0xfffffffe) + 1;\n                goto code_r0x004291a4;\n            }\n            arg_ch = arg_ch + 2;\n            ppiVar5 = ppiVar5 + 2;\n        }\n        uVar4 = 0;\ncode_r0x004291a4:\n        if (uVar4 == 0) {\n            if (piVar2 < piVar1) goto code_r0x004291f2;\n            uVar4 = piVar2 != piVar1;\n        }\n        if (-1 < uVar4) {\n            *arg_8h = iVar3;\n            return;\n        }\n    }\ncode_r0x004291f2:\n    *arg_8h = *in_ECX;\n    return;\n}\n",
        "token_count": 455
    },
    "00429210": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00429210(int16_t *arg_8h)\n\n{\n    uint32_t arg_8h_00;\n    uint arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint var_7ch;\n    uint var_34h;\n    uint32_t var_2ch;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48a720;\n    var_ch = *in_FS_OFFSET;\n    arg_8h_00 = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_14h = arg_8h_00;\n    fcn.00429b80();\n    var_4h = 0;\n    arg_ch = 0;\n    var_18h = 7;\n    var_1ch = 0;\n    var_2ch = var_2ch._2_2_ << 0x10;\n    if (*arg_8h != 0) {\n        arg_ch = fcn.00453054(arg_8h);\n    }\n    fcn.00402667(arg_8h, arg_ch);\n    var_4h = CONCAT31(var_4h._1_3_, 1);\n    fcn.00429840(&var_2ch);\n    if (7 < var_18h) {\n        fcn.00452a07(var_2ch);\n    }\n    var_18h = 7;\n    var_1ch = 0;\n    var_2ch = var_2ch & 0xffff0000;\n    fcn.004294a0();\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(arg_8h_00);\n    return;\n}\n",
        "token_count": 440
    },
    "004292f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004292f0(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint var_4ch;\n    uint var_48h;\n    uint var_34h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48a7d8;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00430f40(uVar1);\n    var_4h = 0;\n    fcn.00429ec0(arg_8h, in_ECX + 4);\n    if (7 < var_20h) {\n        fcn.00452a07(var_34h);\n    }\n    fcn.00429c80();\n    fcn.00452a07(var_48h);\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(unaff_EDI);\n    return;\n}\n",
        "token_count": 300
    },
    "004293b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004293b0(int32_t param_1)\n\n{\n    // WARNING: Could not recover jumptable at 0x004293b9. Too many branches\n    // WARNING: Treating indirect jump as call\n    (***(param_1 + 4))();\n    return;\n}\n",
        "token_count": 68
    },
    "004293c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004293c0(int32_t param_1)\n\n{\n    // WARNING: Could not recover jumptable at 0x004293c9. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(*(param_1 + 4) + 4))();\n    return;\n}\n",
        "token_count": 72
    },
    "004293d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004293d0(int32_t param_1)\n\n{\n    // WARNING: Could not recover jumptable at 0x004293d9. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(*(param_1 + 4) + 8))();\n    return;\n}\n",
        "token_count": 72
    },
    "004293e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004293e0(int32_t param_1)\n\n{\n    // WARNING: Could not recover jumptable at 0x004293e9. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(*(param_1 + 4) + 0xc))();\n    return;\n}\n",
        "token_count": 73
    },
    "00429840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00429840(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint var_6ch;\n    int32_t var_68h;\n    uint var_58h;\n    uint32_t var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint32_t var_44h;\n    uint var_34h;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48a7a0;\n    var_ch = *in_FS_OFFSET;\n    var_14h = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (in_ECX + 4 != arg_8h) {\n        fcn.00402450(arg_8h, 0, 0xffffffff);\n    }\n    arg_8h_00 = 0;\n    var_6ch = 0x4a6330;\n    var_54h = 7;\n    var_58h = 0;\n    var_68h = var_68h._2_2_ << 0x10;\n    fcn.00402450(arg_8h, 0, 0xffffffff);\n    var_50h = 0xffffffff;\n    var_30h = 7;\n    var_34h = 0;\n    var_44h = var_44h._2_2_ << 0x10;\n    var_18h = 7;\n    var_1ch = 0;\n    var_2ch = var_2ch._2_2_ << 0x10;\n    var_4h = 1;\n    fcn.00431a50(&var_6ch, in_ECX);\n    if (7 < var_18h) {\n        fcn.00452a07(var_2ch);\n    }\n    var_18h = 7;\n    var_1ch = 0;\n    var_2ch = var_2ch & 0xffff0000;\n    if (7 < var_30h) {\n        fcn.00452a07(var_44h);\n    }\n    var_30h = 7;\n    var_34h = 0;\n    var_44h = var_44h & 0xffff0000;\n    if (7 < var_54h) {\n        fcn.00452a07(var_68h);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(arg_8h_00);\n    return;\n}\n",
        "token_count": 656
    },
    "00429c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00429c80(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = *(param_1 + 0x10);\n    while (iVar4 != 0) {\n        puVar2 = *(*(param_1 + 4) + (*(param_1 + 8) - 1U & *(param_1 + 0xc) + -1 + iVar4) * 4);\n        if (7 < puVar2[5]) {\n            fcn.00452a07(*puVar2);\n        }\n        puVar2[5] = 7;\n        puVar2[4] = 0;\n        *puVar2 = 0;\n        piVar1 = param_1 + 0x10;\n        *piVar1 = *piVar1 + -1;\n        iVar4 = *(param_1 + 0x10);\n        if (*piVar1 == 0) {\n            *(param_1 + 0xc) = 0;\n        }\n    }\n    iVar4 = *(param_1 + 8);\n    while (iVar4 != 0) {\n        iVar4 = iVar4 + -1;\n        iVar3 = *(*(param_1 + 4) + iVar4 * 4);\n        if (iVar3 != 0) {\n            fcn.00452a07(iVar3);\n        }\n    }\n    if (*(param_1 + 4) != 0) {\n        fcn.00452a07(*(param_1 + 4));\n    }\n    *(param_1 + 4) = 0;\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 392
    },
    "0042a760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a760(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_ECX;\n    \n    iVar1 = in_ECX[4];\n    iVar2 = in_ECX[3];\n    uVar3 = *in_ECX;\n    arg_8h[1] = 0;\n    *arg_8h = uVar3;\n    arg_8h[2] = iVar1 + iVar2;\n    return;\n}\n",
        "token_count": 119
    },
    "0042aae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042aae0(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uchar *arg_8h;\n    uint uVar4;\n    code *pcStack20;\n    char *pcStack8;\n    \n    pcStack8 = 0x42aae7;\n    iVar2 = fcn.0045306d(0x40);\n    if (iVar2 != 0) {\n        *iVar2 = iVar2;\n        if (iVar2 + 4 != NULL) {\n            *(iVar2 + 4) = iVar2;\n        }\n        if (iVar2 + 8 != NULL) {\n            *(iVar2 + 8) = iVar2;\n        }\n        *(iVar2 + 0xc) = 0x101;\n        return;\n    }\n    uVar4 = 1;\n    arg_8h = &stack0xfffffff8;\n    pcStack8 = \"bad allocation\";\n    fcn.00453b96(arg_8h);\n    uVar3 = 0x4abeac;\n    pcStack20 = vtable.std::bad_alloc.0;\n    fcn.0045b275(&stack0xffffffec, 0x4abeac);\n    pcVar1 = swi(3);\n    (*pcVar1)(uVar3, arg_8h, uVar4);\n    return;\n}\n",
        "token_count": 304
    },
    "0042af30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042af30(int32_t arg_8h)\n\n{\n    if (7 < *(arg_8h + 0x3c)) {\n        fcn.00452a07(*(arg_8h + 0x28));\n    }\n    *(arg_8h + 0x3c) = 7;\n    *(arg_8h + 0x38) = 0;\n    *(arg_8h + 0x28) = 0;\n    if (7 < *(arg_8h + 0x24)) {\n        fcn.00452a07(*(arg_8h + 0x10));\n    }\n    *(arg_8h + 0x24) = 7;\n    *(arg_8h + 0x20) = 0;\n    *(arg_8h + 0x10) = 0;\n    fcn.00452a07(arg_8h);\n    return;\n}\n",
        "token_count": 211
    },
    "0042af90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0042af90(uint *param_1)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    \n    puVar2 = fcn.0045306d(0x40);\n    if (puVar2 != NULL) {\n        *puVar2 = *param_1;\n        if (puVar2 + 1 != NULL) {\n            puVar2[1] = *param_1;\n        }\n        if (puVar2 + 2 != NULL) {\n            puVar2[2] = *param_1;\n        }\n        return puVar2;\n    }\n    fcn.0044e7ba();\n    pcVar1 = swi(3);\n    puVar2 = (*pcVar1)();\n    return puVar2;\n}\n",
        "token_count": 173
    },
    "0042b780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042b85e)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042b780(int16_t *arg_8h)\n\n{\n    uint32_t arg_8h_00;\n    uint uVar1;\n    uint *lpFileName;\n    int16_t *in_EDX;\n    int32_t *in_FS_OFFSET;\n    uint var_74h;\n    uint32_t var_60h;\n    uint var_5ch;\n    uint var_4ch;\n    uint var_48h;\n    uint *var_44h;\n    uint var_34h;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48a848;\n    var_ch = *in_FS_OFFSET;\n    arg_8h_00 = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar1 = 0;\n    var_18h = 7;\n    var_1ch = 0;\n    var_2ch = var_2ch & 0xffff0000;\n    var_14h = arg_8h_00;\n    if (*in_EDX != 0) {\n        uVar1 = fcn.00453054(in_EDX);\n    }\n    fcn.00402667(in_EDX, uVar1);\n    var_4h = 0;\n    fcn.00426660(0);\n    var_4h = CONCAT31(var_4h._1_3_, 2);\n    if (7 < var_18h) {\n        fcn.00452a07(var_2ch);\n    }\n    uVar1 = 0;\n    var_18h = 7;\n    var_1ch = 0;\n    var_2ch = var_2ch & 0xffff0000;\n    if (*arg_8h != 0) {\n        uVar1 = fcn.00453054(arg_8h);\n    }\n    fcn.00402667(arg_8h, uVar1);\n    var_4h = CONCAT31(var_4h._1_3_, 3);\n    fcn.00426660(0);\n    lpFileName = &var_44h;\n    if (0xf < var_30h) {\n        lpFileName = var_44h;\n    }\n    fcn.0042b570(lpFileName);\n    if (0xf < var_30h) {\n        fcn.00452a07(var_44h);\n    }\n    var_30h = 0xf;\n    var_34h = 0;\n    var_44h = var_44h & 0xffffff00;\n    if (0xf < var_60h) {\n        fcn.00452a07(var_74h);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(arg_8h_00);\n    return;\n}\n",
        "token_count": 713
    },
    "0042b8e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042b8e0(int16_t *param_1, uint param_2)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint arg_ch;\n    uint *puVar3;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint *var_40h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48a8d8;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    arg_ch = 0;\n    var_14h = 7;\n    var_18h = 0;\n    var_28h = var_28h & 0xffff0000;\n    var_10h = uVar2;\n    if (*param_1 != 0) {\n        arg_ch = fcn.00453054(param_1);\n    }\n    fcn.00402667(param_1, arg_ch);\n    var_4h = 0;\n    fcn.00426660(0);\n    if (7 < var_14h) {\n        fcn.00452a07(var_28h, param_1, arg_ch, uVar2);\n    }\n    puVar3 = &var_40h;\n    if (0xf < var_2ch) {\n        puVar3 = var_40h;\n    }\n    cVar1 = fcn.0042b510();\n    if (cVar1 != '\\0') {\n        fcn.0044ac39(puVar3, param_2, 0, 0x4b9630);\n    }\n    if (0xf < var_2ch) {\n        fcn.00452a07(var_40h);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(unaff_EDI);\n    return;\n}\n",
        "token_count": 495
    },
    "0042bcc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042bcc0(int16_t *arg_8h, int16_t *arg_ch)\n\n{\n    uint uVar1;\n    uint *arg_8h_00;\n    int16_t *in_EDX;\n    uint *arg_ch_00;\n    int32_t *in_FS_OFFSET;\n    uint var_8ch;\n    uint var_88h;\n    uint32_t var_74h;\n    uint *var_70h;\n    uint var_60h;\n    uint32_t var_5ch;\n    uint *var_58h;\n    uint var_48h;\n    uint32_t var_44h;\n    uint32_t var_40h;\n    uint var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48a89b;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar1 = 0;\n    var_14h = 7;\n    var_18h = 0;\n    var_28h = var_28h & 0xffff0000;\n    if (*in_EDX != 0) {\n        uVar1 = fcn.00453054(in_EDX);\n    }\n    fcn.00402667(in_EDX, uVar1);\n    var_4h = 0;\n    fcn.00426660(0);\n    var_4h = CONCAT31(var_4h._1_3_, 2);\n    if (7 < var_14h) {\n        fcn.00452a07(var_28h);\n    }\n    uVar1 = 0;\n    var_14h = 7;\n    var_18h = 0;\n    var_28h = var_28h & 0xffff0000;\n    var_2ch = 7;\n    var_30h = 0;\n    var_40h = var_40h._2_2_ << 0x10;\n    if (*arg_8h != 0) {\n        uVar1 = fcn.00453054(arg_8h);\n    }\n    fcn.00402667(arg_8h, uVar1);\n    var_4h._0_1_ = 3;\n    fcn.00426660(0);\n    var_4h = CONCAT31(var_4h._1_3_, 5);\n    if (7 < var_2ch) {\n        fcn.00452a07(var_40h);\n    }\n    uVar1 = 0;\n    var_2ch = 7;\n    var_30h = 0;\n    var_40h = var_40h & 0xffff0000;\n    var_14h = 7;\n    var_18h = 0;\n    var_28h = var_28h & 0xffff0000;\n    if (*arg_ch != 0) {\n        uVar1 = fcn.00453054(arg_ch);\n    }\n    fcn.00402667(arg_ch, uVar1);\n    var_4h = CONCAT31(var_4h._1_3_, 6);\n    fcn.00426660(0);\n    if (7 < var_14h) {\n        fcn.00452a07(var_28h);\n    }\n    arg_ch_00 = &var_58h;\n    if (0xf < var_44h) {\n        arg_ch_00 = var_58h;\n    }\n    arg_8h_00 = &var_70h;\n    if (0xf < var_5ch) {\n        arg_8h_00 = var_70h;\n    }\n    fcn.0042b9c0(arg_8h_00, arg_ch_00);\n    if (0xf < var_44h) {\n        fcn.00452a07(var_58h);\n    }\n    var_44h = 0xf;\n    var_48h = 0;\n    var_58h = var_58h & 0xffffff00;\n    if (0xf < var_5ch) {\n        fcn.00452a07(var_70h);\n    }\n    var_5ch = 0xf;\n    var_60h = 0;\n    var_70h = var_70h & 0xffffff00;\n    if (0xf < var_74h) {\n        fcn.00452a07(var_88h);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(in_EDX);\n    return;\n}\n",
        "token_count": 1093
    },
    "0042c0d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c0d0(uint32_t arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    *in_ECX = arg_ch;\n    *0x4b9658 = in_ECX;\n    *(in_ECX + 1) = 0;\n    if (arg_10h != 0) {\n        fcn.00459e39(in_ECX + 1, 0x104, arg_10h, 0x200);\n        (*_sym.imp.KERNEL32.dll_DeleteFileA)(arg_10h);\n    }\n    if ((*in_ECX & 0x80000000) != 0) {\n        var_8h = 0x4a2310;\n        var_4h = 0;\n        (*_sym.imp.ADVAPI32.dll_RegisterTraceGuidsW)(fcn.0042bfd0, 0, 0x4a2320, 1, &var_8h, 0, 0, 0x4b9668);\n    }\n    if ((arg_8h & arg_ch) != 0) {\n        fcn.0042c3c0(in_ECX, 0x4a00e0, 0, arg_ch, \"===== [%s.%s.%s][%s] LOG START =====\", 0x4a6414);\n    }\n    return;\n}\n",
        "token_count": 333
    },
    "0042c180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * fcn.0042c180(void)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x48a90b;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    puVar2 = *0x4b9658;\n    if (*0x4b9658 == NULL) {\n        puVar2 = fcn.0045306d(0x108);\n        if (puVar2 == NULL) {\n            puVar2 = NULL;\n        }\n        else {\n            *puVar2 = 0;\n            *(puVar2 + 1) = 0;\n            if ((*puVar2 & 0x80000000) != 0) {\n                var_14h = 0x4a2310;\n                var_10h = 0;\n                *0x4b9658 = puVar2;\n                (*_sym.imp.ADVAPI32.dll_RegisterTraceGuidsW)\n                          (fcn.0042bfd0, 0, 0x4a2320, 1, &var_14h, 0, 0, 0x4b9668, uVar1);\n            }\n        }\n    }\n    *0x4b9658 = puVar2;\n    *in_FS_OFFSET = var_ch;\n    return puVar2;\n}\n",
        "token_count": 376
    },
    "0042c320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c320(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint in_ECX;\n    uint extraout_EDX;\n    uint unaff_ESI;\n    uint lpSystemTime;\n    ushort var_eh;\n    ushort var_ch;\n    ushort var_ah;\n    ushort var_8h;\n    ushort var_6h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b4f00 ^ &stack0xfffffffc;\n    (*_sym.imp.KERNEL32.dll_GetLocalTime)(&lpSystemTime);\n    *0x4b96fc = *0x4b96fc + 1;\n    cVar1 = fcn.0042c020();\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)\n                      (lpSystemTime._2_2_, var_eh, var_ch, var_ah, var_8h, var_6h, extraout_EDX, cVar1);\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)(uVar2);\n    fcn.00455bdd(in_ECX, 0xfff, \"[%04x:%04x] %02d/%02d %02d:%02d:%02d:%03d-%03d [%c] \", uVar2);\n    fcn.004529f8(unaff_ESI);\n    return;\n}\n",
        "token_count": 316
    },
    "0042d710": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0042d710(uint *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint extraout_ECX;\n    uint var_8h;\n    \n    iVar1 = fcn.0042aba0(arg_ch);\n    puVar2 = fcn.0042b240(&var_8h, extraout_ECX, iVar1 + 0x10, iVar1);\n    *arg_8h = *puVar2;\n    *(arg_8h + 1) = *(puVar2 + 1);\n    return arg_8h;\n}\n",
        "token_count": 140
    },
    "0042e330": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nint32_t fcn.0042e330(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48ab5b;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (*0x4b9700 == 0) {\n        iVar2 = fcn.0045306d(0x40);\n        var_4h = 0;\n        if (iVar2 == 0) {\n            *0x4b9700 = 0;\n        }\n        else {\n            *0x4b9700 = fcn.00431bb0(uVar1, iVar2);\n        }\n        fcn.00453ab0(0x42e3b0);\n    }\n    iVar2 = *0x4b9700;\n    *in_FS_OFFSET = var_ch;\n    return iVar2;\n}\n",
        "token_count": 281
    },
    "0042e3d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042e3d0(uint16_t **param_1, uint *param_2)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint16_t **ppuVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    if (param_1[4] != param_2[4]) {\n        return 0;\n    }\n    if (7 < param_2[5]) {\n        param_2 = *param_2;\n    }\n    ppuVar5 = param_1;\n    if (0x7 < param_1[5]) {\n        ppuVar5 = *param_1;\n    }\n    ppuVar5 = ppuVar5 + param_1[4] * 2;\n    if (0x7 < param_1[5]) {\n        param_1 = *param_1;\n    }\n    if (param_1 != ppuVar5) {\n        iVar4 = param_2 - param_1;\n        do {\n            uVar1 = *(iVar4 + param_1);\n            iVar2 = fcn.00457a96(*param_1);\n            iVar3 = fcn.00457a96(uVar1);\n            if (iVar2 != iVar3) {\n                return 0;\n            }\n            param_1 = param_1 + 2;\n        } while (param_1 != ppuVar5);\n    }\n    return 1;\n}\n",
        "token_count": 336
    },
    "0042e7b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0042e7b0(uint pvObject, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    bool bVar4;\n    uint pvFindPara;\n    uint var_b0h;\n    uint var_ach;\n    uint var_9ch;\n    uint var_98h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    int32_t hMem;\n    int32_t var_34h;\n    int32_t cchNameString;\n    uint var_2ch;\n    int32_t var_28h;\n    uint hCertStore;\n    uint hCryptMsg;\n    int32_t var_10h;\n    code *pcStack16;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    pcStack16 = fcn.0045e970;\n    var_10h = *in_FS_OFFSET;\n    var_8h = *0x4b4f00 ^ 0x4b12d0;\n    uVar1 = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_10h;\n    hCertStore = 0;\n    hCryptMsg = 0;\n    var_34h = 0;\n    var_28h = 0;\n    bVar4 = false;\n    var_2ch = 0;\n    var_4h = 0;\n    iVar2 = (*_sym.imp.CRYPT32.dll_CryptQueryObject)\n                      (1, pvObject, 0x400, 2, 0, &var_40h, &var_44h, &var_3ch, &hCertStore, &hCryptMsg, 0, uVar1);\n    if (iVar2 != 0) {\n        iVar2 = (*_sym.imp.CRYPT32.dll_CryptMsgGetParam)(hCryptMsg, 6, 0, 0, &pvObject);\n        if (iVar2 != 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, pvObject);\n            var_28h = iVar2;\n            if (iVar2 != 0) {\n                iVar3 = (*_sym.imp.CRYPT32.dll_CryptMsgGetParam)(hCryptMsg, 6, 0, iVar2, &pvObject);\n                if (iVar3 != 0) {\n                    var_9ch = *(iVar2 + 4);\n                    var_98h = *(iVar2 + 8);\n                    var_b0h = *(iVar2 + 0xc);\n                    var_ach = *(iVar2 + 0x10);\n                    iVar2 = (*_sym.imp.CRYPT32.dll_CertFindCertificateInStore)\n                                      (hCertStore, 0x10001, 0, 0xb0000, &pvFindPara, 0);\n                    var_34h = iVar2;\n                    if (iVar2 != 0) {\n                        cchNameString = (*_sym.imp.CRYPT32.dll_CertGetNameStringW)(iVar2, 4, 0, 0, 0, 0);\n                        if (cchNameString != 0) {\n                            hMem = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, cchNameString * 2);\n                            if (hMem != 0) {\n                                iVar3 = (*_sym.imp.CRYPT32.dll_CertGetNameStringW)(iVar2, 4, 0, 0, hMem, cchNameString);\n                                iVar2 = arg_ch;\n                                bVar4 = iVar3 != 0;\n                                if (bVar4) {\n                                    fcn.00457920(arg_ch, 0x104, hMem, cchNameString);\n                                    *(iVar2 + 0x206) = 0;\n                                    var_2ch = 1;\n                                }\n                                (*_sym.imp.KERNEL32.dll_LocalFree)(hMem);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    var_4h = 0xfffffffe;\n    fcn.0042e95c();\n    *in_FS_OFFSET = var_10h;\n    return bVar4;\n}\n",
        "token_count": 939
    },
    "0042f6e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "query environment variable"
        ],
        "decompiled_code": "\nushort * __fastcall fcn.0042f6e0(ushort *param_1, uint *param_2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    uint nSize;\n    int16_t *lpBuffer;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x48ad70;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_4h = 0;\n    lpBuffer = fcn.0044f469(0x208, uVar1);\n    uVar2 = (**0x4a67f0)();\n    fcn.00453710(lpBuffer, 0, uVar2);\n    var_4h = 1;\n    puVar3 = param_2;\n    if (7 < param_2[5]) {\n        puVar3 = *param_2;\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableW)(puVar3, lpBuffer, 0x104);\n    if (0x104 < uVar1) {\n        fcn.00456859(lpBuffer);\n        lpBuffer = fcn.0044f469(-(uVar1 * 2 >> 0x20 != 0) | uVar1 * 2);\n        uVar2 = (**0x4a67f0)();\n        fcn.00453710(lpBuffer, 0, uVar2);\n        if (7 < param_2[5]) {\n            param_2 = *param_2;\n        }\n        (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableW)(param_2, lpBuffer, uVar1);\n    }\n    uVar2 = 0;\n    *(param_1 + 10) = 7;\n    *(param_1 + 8) = 0;\n    *param_1 = 0;\n    if (*lpBuffer != 0) {\n        uVar2 = fcn.00453054(lpBuffer);\n    }\n    fcn.00402667(lpBuffer, uVar2);\n    fcn.00456859(lpBuffer);\n    *in_FS_OFFSET = var_ch;\n    return param_1;\n}\n",
        "token_count": 537
    },
    "0042fa00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get OS version",
            "get system information on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0042fa00(void)\n\n{\n    uint32_t arg_8h;\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    uchar auStack384 [16];\n    uchar auStack368 [16];\n    uint uStack352;\n    int32_t iStack332;\n    uint auStack328 [73];\n    uint32_t uStack36;\n    uchar *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x48ad9e;\n    piStack28 = *in_FS_OFFSET;\n    arg_8h = *0x4b4f00 ^ &stack0xfffffff0;\n    *in_FS_OFFSET = &piStack28;\n    auStack384 = ZEXT816(0);\n    auStack368 = ZEXT816(0);\n    uStack352 = 0;\n    uStack36 = arg_8h;\n    fcn.00453710(auStack328, 0, 0x11c);\n    auStack328[0] = 0x11c;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetVersionExW)(auStack328);\n    if (iVar1 == 0) {\n        auStack328[0] = 0x114;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetVersionExW)(auStack328);\n        if (iVar1 == 0) goto code_r0x0042fb4b;\n    }\n    if (*0x4b9700 == 0) {\n        iStack332 = fcn.0045306d(0x40);\n        uStack20 = 0;\n        if (iStack332 == 0) {\n            *0x4b9700 = 0;\n        }\n        else {\n            *0x4b9700 = fcn.00431bb0();\n        }\n        uStack20 = 0xffffffff;\n        fcn.00453ab0(0x42e3b0);\n    }\n    if (*(*0x4b9700 + 0xc) == NULL) {\n        (*_sym.imp.KERNEL32.dll_GetSystemInfo)(auStack384);\n    }\n    else {\n        (**(*0x4b9700 + 0xc))(auStack384);\n    }\ncode_r0x0042fb4b:\n    *in_FS_OFFSET = piStack28;\n    fcn.004529f8(arg_8h);\n    return;\n}\n",
        "token_count": 562
    },
    "00430f40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00430f40(uint *param_1)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint arg_ch;\n    int32_t *in_FS_OFFSET;\n    char16_t *arg_8h;\n    uint in_stack_ffffffbc;\n    uint16_t uVar3;\n    int32_t noname_2;\n    uint in_stack_ffffffc0;\n    uint in_stack_ffffffc4;\n    uint in_stack_ffffffc8;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uVar3 = in_stack_ffffffbc >> 0x10;\n    var_4h = 0xffffffff;\n    uStack12 = 0x48ae23;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    puVar2 = fcn.0045306d(8);\n    if (puVar2 == NULL) {\n        puVar2 = fcn.0044e7ba(uVar1);\n    }\n    *param_1 = puVar2;\n    *puVar2 = 0;\n    puVar2[1] = 0;\n    **param_1 = param_1;\n    param_1[10] = 7;\n    param_1[9] = 0;\n    *(param_1 + 5) = 0;\n    var_4h = 1;\n    param_1[0xc] = 0;\n    param_1[0xb] = 0;\n    fcn.00402667(0x4a00e0, 0);\n    noname_2 = uVar3 << 0x10;\n    arg_ch = fcn.00453054(L\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\");\n    arg_8h = L\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\";\n    fcn.00402667(L\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\", arg_ch);\n    fcn.00431040(arg_8h, arg_ch, noname_2, in_stack_ffffffc0, in_stack_ffffffc4, in_stack_ffffffc8);\n    *in_FS_OFFSET = var_ch;\n    return param_1;\n}\n",
        "token_count": 588
    },
    "00431110": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00431110(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    uint noname_2;\n    uint in_stack_ffffff58;\n    uint16_t uVar2;\n    int32_t noname_3;\n    uint in_stack_ffffff5c;\n    uint in_stack_ffffff60;\n    uint var_40h;\n    uint32_t var_2ch;\n    int32_t var_28h;\n    uint var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    uVar2 = in_stack_ffffff58 >> 0x10;\n    var_4h = 0xffffffff;\n    uStack12 = 0x48af50;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.0042a3c0(arg_8h);\n    var_14h = 7;\n    var_18h = 0;\n    var_28h = var_28h._2_2_ << 0x10;\n    var_4h = 0;\n    uVar1 = fcn.00453054(0x4a6d34);\n    fcn.00402667(0x4a6d34, uVar1);\n    fcn.004019b5(arg_8h, 0, 0xffffffff);\n    uVar1 = fcn.004315f0(&var_40h);\n    var_4h._0_1_ = 1;\n    fcn.004019b5(uVar1, 0, 0xffffffff);\n    var_4h = var_4h._1_3_ << 8;\n    if (7 < var_2ch) {\n        fcn.00452a07(var_40h);\n    }\n    uVar1 = fcn.00453054(0x4a6d38);\n    fcn.0040186c(0x4a6d38, uVar1);\n    noname_2 = 0xffffffff;\n    uVar1 = 0;\n    noname_3 = uVar2 << 0x10;\n    arg_8h_00 = &var_28h;\n    fcn.00402450(arg_8h_00, 0, 0xffffffff);\n    fcn.00431040(arg_8h_00, uVar1, noname_2, noname_3, in_stack_ffffff5c, in_stack_ffffff60);\n    *(in_ECX + 0x2c) = *(in_ECX + 0x2c) + 1;\n    if (7 < var_14h) {\n        fcn.00452a07(var_28h);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(in_stack_ffffff5c);\n    return;\n}\n",
        "token_count": 711
    },
    "00431240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00431240(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint *puVar3;\n    uint noname_2;\n    uint in_stack_ffffff84;\n    uint16_t uVar4;\n    int32_t noname_3;\n    uint in_stack_ffffff88;\n    uint in_stack_ffffff8c;\n    int32_t var_2ch;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uVar4 = in_stack_ffffff84 >> 0x10;\n    var_4h = 0xffffffff;\n    uStack12 = 0x48aed8;\n    var_ch = *in_FS_OFFSET;\n    var_14h = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (*(in_ECX + 0x10) != 0) {\n        puVar3 = *(*(in_ECX + 4) + (*(in_ECX + 8) - 1U & *(in_ECX + 0xc) + *(in_ECX + 0x10) + -1) * 4);\n        if (7 < puVar3[5]) {\n            fcn.00452a07(*puVar3, var_14h);\n        }\n        puVar3[5] = 7;\n        puVar3[4] = 0;\n        *puVar3 = 0;\n        piVar1 = in_ECX + 0x10;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            *(in_ECX + 0xc) = 0;\n        }\n    }\n    var_18h = 7;\n    var_1ch = 0;\n    var_2ch = var_2ch._2_2_ << 0x10;\n    var_4h = 0;\n    if (0 < *(in_ECX + 0x2c)) {\n        *(in_ECX + 0x2c) = *(in_ECX + 0x2c) + -1;\n    }\n    uVar2 = fcn.00453054(0x4a6d3c);\n    fcn.00402667(0x4a6d3c, uVar2);\n    fcn.004019b5(arg_8h, 0, 0xffffffff);\n    uVar2 = fcn.00453054(0x4a6d38);\n    fcn.0040186c(0x4a6d38, uVar2);\n    noname_2 = 0xffffffff;\n    uVar2 = 0;\n    noname_3 = uVar4 << 0x10;\n    puVar3 = &var_2ch;\n    fcn.00402450(puVar3, 0, 0xffffffff);\n    fcn.00431040(puVar3, uVar2, noname_2, noname_3, in_stack_ffffff88, in_stack_ffffff8c);\n    if (7 < var_18h) {\n        fcn.00452a07(var_2ch);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(in_stack_ffffff88);\n    return;\n}\n",
        "token_count": 784
    },
    "00431380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00431380(void)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h;\n    uint var_40h;\n    uint var_34h;\n    int32_t var_28h;\n    uint var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48a8d8;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    puVar2 = &var_34h;\n    fcn.0042a760(puVar2);\n    piVar1 = fcn.0042aa60(puVar2);\n    puVar2 = *piVar1;\n    if (puVar2 != NULL) {\n        puVar2 = *puVar2;\n    }\n    arg_8h = 0xffffffff;\n    var_28h = var_28h._2_2_ << 0x10;\n    var_14h = 7;\n    var_18h = 0;\n    fcn.00402450(*(puVar2[1] + (puVar2[2] - 1 & piVar1[2]) * 4), 0, 0xffffffff);\n    var_4h = 0;\n    fcn.00431240(&var_28h);\n    if (7 < var_14h) {\n        fcn.00452a07(var_28h);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(arg_8h);\n    return;\n}\n",
        "token_count": 415
    },
    "00431440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00431440(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    uint in_stack_ffffff08;\n    uint16_t uVar3;\n    int32_t iVar2;\n    uint in_stack_ffffff0c;\n    uint in_stack_ffffff10;\n    uint uVar4;\n    uint in_stack_ffffff58;\n    uint16_t uVar5;\n    uint in_stack_ffffff5c;\n    uint in_stack_ffffff60;\n    uint var_44h;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    uVar3 = in_stack_ffffff08 >> 0x10;\n    uVar5 = in_stack_ffffff58 >> 0x10;\n    uStack12 = 0x48af18;\n    var_ch = *in_FS_OFFSET;\n    var_14h = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_18h = 7;\n    var_1ch = 0;\n    var_2ch = var_2ch & 0xffff0000;\n    var_4h = 0;\n    uVar1 = fcn.00453054(0x4a6d34);\n    fcn.00402667(0x4a6d34, uVar1);\n    fcn.004019b5(arg_8h, 0, 0xffffffff);\n    uVar1 = fcn.004315f0(&var_44h);\n    var_4h._0_1_ = 1;\n    fcn.004019b5(uVar1, 0, 0xffffffff);\n    var_4h._0_1_ = 0;\n    if (7 < var_30h) {\n        fcn.00452a07(var_44h);\n    }\n    uVar1 = fcn.00453054(0x4a6d38);\n    fcn.0040186c(0x4a6d38, uVar1);\n    uVar4 = 0xffffffff;\n    uVar1 = 0;\n    iVar2 = uVar5 << 0x10;\n    fcn.00402450(arg_ch, 0, 0xffffffff);\n    uVar1 = fcn.00431640(&var_44h, arg_ch, uVar1, uVar4, iVar2, in_stack_ffffff5c, in_stack_ffffff60);\n    var_4h._0_1_ = 2;\n    fcn.004019b5(uVar1, 0, 0xffffffff);\n    var_4h = var_4h._1_3_ << 8;\n    if (7 < var_30h) {\n        fcn.00452a07(var_44h);\n    }\n    uVar1 = fcn.00453054(0x4a6d3c);\n    fcn.0040186c(0x4a6d3c, uVar1);\n    fcn.004019b5(arg_8h, 0, 0xffffffff);\n    uVar1 = fcn.00453054(0x4a6d38);\n    fcn.0040186c(0x4a6d38, uVar1);\n    uVar4 = 0xffffffff;\n    uVar1 = 0;\n    iVar2 = uVar3 << 0x10;\n    arg_8h_00 = &var_2ch;\n    fcn.00402450(arg_8h_00, 0, 0xffffffff);\n    fcn.00431040(arg_8h_00, uVar1, uVar4, iVar2, in_stack_ffffff0c, in_stack_ffffff10);\n    if (7 < var_18h) {\n        fcn.00452a07(var_2ch);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(in_stack_ffffff0c);\n    return;\n}\n",
        "token_count": 958
    },
    "00431a50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00431a50(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint arg_8h_00;\n    uint *extraout_ECX;\n    uint unaff_EBP;\n    uint var_100ch;\n    uint var_1007h;\n    char16_t *arg_ch_00;\n    uint arg_10h;\n    uint arg_14h;\n    char *arg_18h;\n    uint var_4h;\n    \n    fcn.00459c50();\n    iVar1 = (**(*arg_8h + 4))();\n    if (iVar1 != 0) {\n        extraout_ECX[1] = arg_ch;\n        uVar2 = fcn.00479740();\n        *extraout_ECX = uVar2;\n        fcn.00472e30();\n        fcn.00472e50();\n        fcn.00472e70();\n        do {\n            fcn.00453710();\n            iVar1 = (**(*arg_8h + 8))();\n            if (iVar1 == 0) {\n                fcn.00474dc0();\n                (**(*arg_8h + 0xc))();\n                fcn.004529f8(unaff_EBP);\n                return;\n            }\n            iVar1 = fcn.00474f00();\n        } while (iVar1 != 0);\n        uVar2 = fcn.00473050();\n        arg_18h = \"XmlParser::Read() Error: 0x%x\";\n        arg_14h = 0x2000002;\n        arg_10h = 0x8a;\n        arg_ch_00 = L\"XmlParser.cpp\";\n        arg_8h_00 = fcn.0042c180();\n        fcn.0042c3c0(arg_8h_00, arg_ch_00, arg_10h, arg_14h, arg_18h, uVar2);\n        fcn.00474dc0();\n    }\n    fcn.004529f8(unaff_EBP);\n    return;\n}\n",
        "token_count": 480
    },
    "00433430": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00433430(void)\n\n{\n    code **ppcVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x48b028;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    *0x4b9848 = 0;\n    *0x4b984c = 0;\n    *0x4b9850 = 0;\n    var_4h = 0;\n    ppcVar1 = fcn.0045306d(8);\n    if (ppcVar1 == NULL) {\n        ppcVar1 = NULL;\n    }\n    else {\n        ppcVar1[1] = NULL;\n        *ppcVar1 = vtable.HouseCall7::GUID::OSCE10GUIDGenerator.0;\n    }\n    fcn.004335b0(ppcVar1, 1);\n    ppcVar1 = fcn.0045306d(8);\n    if (ppcVar1 == NULL) {\n        ppcVar1 = NULL;\n    }\n    else {\n        ppcVar1[1] = NULL;\n        *ppcVar1 = vtable.HouseCall7::GUID::WFBS6GUIDGenerator.0;\n    }\n    fcn.004335b0(ppcVar1, 1);\n    ppcVar1 = fcn.0045306d(8);\n    if (ppcVar1 == NULL) {\n        ppcVar1 = NULL;\n    }\n    else {\n        ppcVar1[1] = NULL;\n        *ppcVar1 = vtable.HouseCall7::GUID::TIS17GUIDGenerator.0;\n    }\n    fcn.004335b0(ppcVar1, 1);\n    ppcVar1 = fcn.0045306d(8);\n    if (ppcVar1 == NULL) {\n        ppcVar1 = NULL;\n    }\n    else {\n        ppcVar1[1] = NULL;\n        *ppcVar1 = vtable.HouseCall7::GUID::AMSPGUIDGenerator.0;\n    }\n    fcn.004335b0(ppcVar1, 1);\n    ppcVar1 = fcn.0045306d(8);\n    if (ppcVar1 == NULL) {\n        ppcVar1 = NULL;\n    }\n    else {\n        ppcVar1[1] = NULL;\n        *ppcVar1 = vtable.HouseCall7::GUID::CachedGUIDGenerator.0;\n    }\n    fcn.004335b0(ppcVar1, 0);\n    ppcVar1 = fcn.0045306d(8);\n    if (ppcVar1 == NULL) {\n        ppcVar1 = NULL;\n    }\n    else {\n        ppcVar1[1] = NULL;\n        *ppcVar1 = vtable.HouseCall7::GUID::HousecallGUIDGenerator.0;\n    }\n    fcn.004335b0(ppcVar1, 1);\n    ppcVar1 = fcn.0045306d(8);\n    if (ppcVar1 == NULL) {\n        ppcVar1 = NULL;\n    }\n    else {\n        ppcVar1[1] = NULL;\n        *ppcVar1 = vtable.HouseCall7::GUID::DummyGUIDGenerator.0;\n    }\n    fcn.004335b0(ppcVar1, 0);\n    *in_FS_OFFSET = var_ch;\n    return 0x4b9848;\n}\n",
        "token_count": 797
    },
    "004335b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004335b0(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = arg_8h;\n    *(arg_8h + 4) = arg_ch;\n    if ((&arg_8h < *0x4b984c) && (*0x4b9848 <= &arg_8h)) {\n        iVar1 = &arg_8h - *0x4b9848;\n        if (*0x4b984c == *0x4b9850) {\n            fcn.00433a80(*0x4b984c);\n        }\n        if (*0x4b984c != NULL) {\n            **0x4b984c = (*0x4b9848)[iVar1 >> 2];\n            *0x4b984c = *0x4b984c + 1;\n            return;\n        }\n    }\n    else {\n        if (*0x4b984c == *0x4b9850) {\n            fcn.00433a80(*0x4b984c);\n        }\n        if (*0x4b984c != NULL) {\n            **0x4b984c = iVar1;\n        }\n    }\n    *0x4b984c = *0x4b984c + 1;\n    return;\n}\n",
        "token_count": 299
    },
    "004339a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004339a0(void)\n\n{\n    uint arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint var_7ch;\n    uint var_34h;\n    uint32_t var_2ch;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48b1f0;\n    var_ch = *in_FS_OFFSET;\n    var_14h = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00433d20(var_14h);\n    var_4h = 0;\n    var_18h = 7;\n    var_1ch = 0;\n    var_2ch = var_2ch._2_2_ << 0x10;\n    arg_ch = fcn.00453054(L\"commonsetting.dat\");\n    fcn.00402667(L\"commonsetting.dat\", arg_ch);\n    var_4h = CONCAT31(var_4h._1_3_, 1);\n    fcn.00433bf0(&var_2ch);\n    if (7 < var_18h) {\n        fcn.00452a07(var_2ch);\n    }\n    var_18h = 7;\n    var_1ch = 0;\n    var_2ch = var_2ch & 0xffff0000;\n    fcn.004294a0();\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(arg_ch);\n    return;\n}\n",
        "token_count": 390
    },
    "00433bf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00433bf0(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint var_6ch;\n    int32_t var_68h;\n    uint var_58h;\n    uint32_t var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint32_t var_44h;\n    uint var_34h;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48a7a0;\n    var_ch = *in_FS_OFFSET;\n    var_14h = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (in_ECX + 4 != arg_8h) {\n        fcn.00402450(arg_8h, 0, 0xffffffff);\n    }\n    arg_8h_00 = 0;\n    var_6ch = 0x4a6dd8;\n    var_54h = 7;\n    var_58h = 0;\n    var_68h = var_68h._2_2_ << 0x10;\n    fcn.00402450(arg_8h, 0, 0xffffffff);\n    var_50h = 0xffffffff;\n    var_30h = 7;\n    var_34h = 0;\n    var_44h = var_44h._2_2_ << 0x10;\n    var_18h = 7;\n    var_1ch = 0;\n    var_2ch = var_2ch._2_2_ << 0x10;\n    var_4h = 1;\n    fcn.00431a50(&var_6ch, in_ECX);\n    if (7 < var_18h) {\n        fcn.00452a07(var_2ch);\n    }\n    var_18h = 7;\n    var_1ch = 0;\n    var_2ch = var_2ch & 0xffff0000;\n    if (7 < var_30h) {\n        fcn.00452a07(var_44h);\n    }\n    var_30h = 7;\n    var_34h = 0;\n    var_44h = var_44h & 0xffff0000;\n    if (7 < var_54h) {\n        fcn.00452a07(var_68h);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(arg_8h_00);\n    return;\n}\n",
        "token_count": 658
    },
    "00433e50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433e50(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    \n    piVar2 = fcn.0045306d(0x10);\n    if (piVar2 == NULL) {\n        fcn.0044e7ba();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if (arg_8h == NULL) {\n        arg_8h = piVar2;\n        arg_ch = piVar2;\n    }\n    *piVar2 = arg_8h;\n    if (piVar2 + 1 != NULL) {\n        piVar2[1] = arg_ch;\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "00434000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "create mutex"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434000(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint *in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint *var_28h;\n    uint var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48b298;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *in_ECX = 0;\n    var_14h = 0xf;\n    var_18h = 0;\n    var_28h = var_28h & 0xffffff00;\n    fcn.00401fe4(arg_8h, 0, 0xffffffff);\n    var_4h = 0;\n    uVar1 = fcn.00453900(0x4a7618);\n    fcn.004096dc(0x4a7618, uVar1);\n    fcn.0040190f(arg_ch, 0, 0xffffffff);\n    puVar2 = &var_28h;\n    if (0xf < var_14h) {\n        puVar2 = var_28h;\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 0, puVar2);\n    *in_ECX = uVar1;\n    if (0xf < var_14h) {\n        fcn.00452a07(var_28h);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(arg_ch);\n    return;\n}\n",
        "token_count": 417
    },
    "00435350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00435350(uint param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    int32_t iVar7;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    code *pcVar8;\n    int32_t *in_FS_OFFSET;\n    ulong uVar9;\n    uint uVar10;\n    uint in_stack_fffffeac;\n    char16_t *pcVar11;\n    uint in_stack_fffffeb0;\n    uint uVar12;\n    uint in_stack_fffffeb4;\n    uint uVar13;\n    uint in_stack_fffffeb8;\n    char *pcVar14;\n    uint in_stack_fffffebc;\n    uint uVar15;\n    uint in_stack_fffffec0;\n    uint var_128h;\n    uint var_124h;\n    uint pExecInfo;\n    uint var_d8h;\n    char16_t *var_d0h;\n    uint var_cch;\n    uint *var_c8h;\n    uint *var_c4h;\n    uint var_c0h;\n    uint var_a4h;\n    int32_t var_a0h;\n    uint var_9ch;\n    int32_t hThread;\n    uint var_90h;\n    uint var_8ch;\n    uint lpApplicationName;\n    int32_t lpCommandLine;\n    uint var_80h;\n    uint32_t var_6ch;\n    uint *var_68h;\n    uint var_58h;\n    uint32_t var_54h;\n    uint *var_50h;\n    int32_t var_40h;\n    uint32_t var_3ch;\n    uint var_38h;\n    uint var_2eh;\n    uint var_26h;\n    uint var_1eh;\n    uint var_16h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x48b510;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x4b4f00 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_54h = 7;\n    var_58h = 0;\n    var_68h = var_68h & 0xffff0000;\n    var_3ch = 7;\n    var_40h = 0;\n    var_50h = var_50h & 0xffff0000;\n    var_4h = 1;\n    var_a0h = param_2;\n    var_10h = uVar2;\n    fcn.0042c5b0();\n    fcn.00435180(in_stack_fffffeac, in_stack_fffffeb0, in_stack_fffffeb4, in_stack_fffffeb8, in_stack_fffffebc, \n                 in_stack_fffffec0);\n    fcn.00453710(&var_124h, 0, 0x40);\n    var_9ch = 0;\n    _hThread = 0;\n    var_90h = 0;\n    var_128h = 0x44;\n    piVar3 = fcn.0040c0a5(&var_50h);\n    if (&var_50h != piVar3) {\n        if (7 < var_3ch) {\n            fcn.00452a07(var_50h, uVar2);\n        }\n        var_3ch = 7;\n        var_40h = 0;\n        var_50h = var_50h & 0xffff0000;\n        if (piVar3[5] < 8) {\n            if (piVar3[4] + 1 != 0) {\n                fcn.004530c0(&var_50h, piVar3, (piVar3[4] + 1) * 2);\n            }\n        }\n        else {\n            var_50h = *piVar3;\n            *piVar3 = 0;\n        }\n        var_40h = piVar3[4];\n        var_3ch = piVar3[5];\n        piVar3[5] = 7;\n        piVar3[4] = 0;\n        *piVar3 = 0;\n    }\n    if (7 < var_6ch) {\n        fcn.00452a07(var_80h);\n    }\n    uVar4 = fcn.00453054(0x4a0c48);\n    uVar15 = 0x4a0c48;\n    fcn.0040186c(0x4a0c48, uVar4);\n    uVar2 = var_40h + 0x13;\n    iVar5 = fcn.0044f469(-(uVar2 * 2 >> 0x20 != 0) | uVar2 * 2);\n    puVar6 = &var_50h;\n    if (7 < var_3ch) {\n        puVar6 = var_50h;\n    }\n    lpCommandLine = iVar5;\n    fcn.0045ac88(iVar5, uVar2, puVar6);\n    fcn.00453710(&var_d8h, 0, 0x38);\n    var_cch = lpApplicationName;\n    var_c4h = &var_68h;\n    if (7 < var_54h) {\n        var_c4h = var_68h;\n    }\n    pExecInfo = 0x3c;\n    var_d8h = 0x4440;\n    var_d0h = L\"runas\";\n    var_c0h = 10;\n    var_38h._0_2_ = 0;\n    stack0xffffffc6 = 0;\n    _var_2eh = 0;\n    _var_26h = 0;\n    _var_1eh = 0;\n    var_16h = 0;\n    uVar9 = fcn.00435830();\n    (*_sym.imp.USER32.dll_wsprintfW)(&var_38h, L\" %X %X\", uVar9 >> 0x20, uVar9);\n    pcVar14 = \"Create iRobot process\";\n    uVar13 = 0x2000040;\n    uVar12 = 0x45;\n    pcVar11 = L\"HCLaunch.cpp\";\n    uVar4 = fcn.0042c180();\n    fcn.0042c3c0(uVar4, pcVar11, uVar12, uVar13, pcVar14, uVar15);\n    fcn.0045b209(iVar5, uVar2, &var_38h);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    pcVar8 = NULL;\n    var_8ch = 0;\n    if (param_2 != 0) {\n        iVar5 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(L\"Kernel32.dll\");\n        if (iVar5 == 0) {\n            uVar4 = (*pcVar1)();\n            pcVar14 = \"hInstance = NULL; GetLastError()=%lu\";\n            uVar13 = 0x2000004;\n            uVar12 = 0x5a;\n            pcVar11 = L\"HCLaunch.cpp\";\n            uVar15 = fcn.0042c180(extraout_ECX);\n            fcn.0042c3c0(uVar15, pcVar11, uVar12, uVar13, pcVar14, uVar4);\n        }\n        else {\n            pcVar8 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar5, \"AssignProcessToJobObject\");\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar5);\n            if (pcVar8 == NULL) {\n                pcVar14 = \"no funAssignProcessToJobObject\";\n                uVar13 = 0x2000004;\n                uVar12 = 0x55;\n                pcVar11 = L\"HCLaunch.cpp\";\n                uVar4 = fcn.0042c180();\n                fcn.0042c3c0(uVar4, pcVar11, uVar12, uVar13, pcVar14, uVar15);\n            }\n            else {\n                pcVar14 = \"CreationFlag = CreationFlag | CREATE_SUSPENDED\";\n                uVar13 = 0x2000004;\n                uVar12 = 0x5f;\n                pcVar11 = L\"HCLaunch.cpp\";\n                uVar4 = fcn.0042c180();\n                fcn.0042c3c0(uVar4, pcVar11, uVar12, uVar13, pcVar14, uVar15);\n                var_8ch = 4;\n            }\n        }\n    }\n    puVar6 = &var_68h;\n    if (7 < var_54h) {\n        puVar6 = var_68h;\n    }\n    uVar4 = 0;\n    iVar7 = (*_sym.imp.KERNEL32.dll_CreateProcessW)\n                      (lpApplicationName, lpCommandLine, 0, 0, 0, var_8ch, 0, puVar6, &var_128h, &var_9ch);\n    iVar5 = var_a0h;\n    if (iVar7 == 0) {\n        iVar5 = (*pcVar1)();\n        if (iVar5 == 0x2e4) {\n            uVar15 = (*pcVar1)();\n            pcVar14 = \"CreateProcess failed %lu; Try ShellExecuteEx...\";\n            uVar10 = 0x2000008;\n            uVar13 = 0x8e;\n            pcVar11 = L\"HCLaunch.cpp\";\n            uVar12 = fcn.0042c180(extraout_ECX_00);\n            fcn.0042c3c0(uVar12, pcVar11, uVar13, uVar10, pcVar14, uVar15);\n            var_c8h = &var_38h;\n            iVar5 = (*_sym.imp.SHELL32.dll_ShellExecuteExW)(&pExecInfo);\n            if (iVar5 == 0) {\n                uVar15 = (*pcVar1)();\n                pcVar14 = \"ShellExecuteEx failed error = %lu\";\n                uVar10 = 0x2000002;\n                uVar13 = 0x94;\n                pcVar11 = L\"HCLaunch.cpp\";\n                uVar12 = fcn.0042c180(extraout_ECX_01);\n                fcn.0042c3c0(uVar12, pcVar11, uVar13, uVar10, pcVar14, uVar15);\n            }\n        }\n    }\n    else {\n        if ((var_a0h != 0) && (pcVar8 != NULL)) {\n            pcVar14 = \"before pfAssignProcessToJobObject...\";\n            uVar13 = 0x2000004;\n            uVar12 = 0x7b;\n            pcVar11 = L\"HCLaunch.cpp\";\n            uVar15 = fcn.0042c180();\n            fcn.0042c3c0(uVar15, pcVar11, uVar12, uVar13, pcVar14, lpApplicationName);\n            iVar5 = (*pcVar8)(iVar5, var_9ch);\n            if (iVar5 == 0) {\n                (*pcVar1)();\n                uVar10 = 0;\n                pcVar14 = \"bAssignProcessToJobObject=%d; err=%lu\";\n                uVar13 = 0x2000004;\n                uVar12 = 0x7f;\n                pcVar11 = L\"HCLaunch.cpp\";\n                uVar15 = fcn.0042c180();\n                fcn.0042c3c0(uVar15, pcVar11, uVar12, uVar13, pcVar14, uVar10);\n            }\n            (*_sym.imp.KERNEL32.dll_Sleep)(10);\n            (*_sym.imp.KERNEL32.dll_ResumeThread)(hThread);\n        }\n        if (hThread != 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hThread);\n        }\n    }\n    if (lpCommandLine != 0) {\n        fcn.00456859(lpCommandLine);\n    }\n    if (7 < var_3ch) {\n        fcn.00452a07(var_50h);\n    }\n    var_3ch = 7;\n    var_40h = 0;\n    var_50h = var_50h & 0xffff0000;\n    if (7 < var_54h) {\n        fcn.00452a07(var_68h);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.004529f8(uVar4);\n    return;\n}\n",
        "token_count": 2851
    },
    "00435830": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data with MD5/b89f3dedf7f4429eb99b897ea968a51a"
        ],
        "decompiled_code": "\nulong fcn.00435830(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint extraout_ECX_02;\n    uint extraout_ECX_03;\n    uint extraout_ECX_04;\n    uint extraout_ECX_05;\n    uint extraout_ECX_06;\n    uint extraout_ECX_07;\n    uint extraout_ECX_08;\n    char16_t *pcVar7;\n    uint uVar8;\n    uint uVar9;\n    char *pcVar10;\n    uint *arg_1ch;\n    int32_t var_10h;\n    int32_t phKey;\n    int32_t hProv;\n    int32_t hBaseData;\n    \n    pcVar1 = _sym.imp.ADVAPI32.dll_CryptAcquireContextW;\n    arg_1ch = &hProv;\n    hProv = 0;\n    phKey = 0;\n    hBaseData = 0;\n    iVar3 = (*_sym.imp.ADVAPI32.dll_CryptAcquireContextW)\n                      (arg_1ch, 0, L\"Microsoft Enhanced Cryptographic Provider v1.0\", 1, 0xf0000000);\n    pcVar2 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar3 == 0) {\n        iVar3 = (*pcVar1)(&hProv, 0, L\"Microsoft Enhanced Cryptographic Provider v1.0\", 1, 0xf0000008);\n        if (iVar3 != 0) goto code_r0x0043589d;\n        uVar4 = (*pcVar2)();\n        pcVar10 = \"TICKET:Error(%lu) during CryptAcquireContext!\";\n        uVar8 = 0x31;\n        uVar6 = extraout_ECX;\n    }\n    else {\ncode_r0x0043589d:\n        pcVar10 = \"TICKET:A cryptographic provider has been acquired.\";\n        uVar8 = 0x2000040;\n        uVar4 = 0x35;\n        pcVar7 = L\"Ticket.cpp\";\n        uVar6 = fcn.0042c180();\n        fcn.0042c3c0(uVar6, pcVar7, uVar4, uVar8, pcVar10, arg_1ch);\n        iVar3 = hProv;\n        iVar5 = (*_sym.imp.ADVAPI32.dll_CryptCreateHash)(hProv, 0x8003, 0, 0, &hBaseData);\n        if (iVar5 == 0) {\n            uVar4 = (*pcVar2)();\n            pcVar10 = \"TICKET:Error(%lu) during CryptCreateHash!\";\n            uVar8 = 0x4f;\n            uVar6 = extraout_ECX_05;\n        }\n        else {\n            pcVar10 = \"TICKET:A hash object has been created.\";\n            uVar8 = 0x2000040;\n            uVar4 = 0x4b;\n            pcVar7 = L\"Ticket.cpp\";\n            uVar6 = fcn.0042c180();\n            fcn.0042c3c0(uVar6, pcVar7, uVar4, uVar8, pcVar10, iVar3);\n            uVar6 = (*_sym.imp.KERNEL32.dll_lstrlenW)(L\"Error verifying\", 0);\n            iVar3 = hBaseData;\n            iVar5 = (*_sym.imp.ADVAPI32.dll_CryptHashData)(hBaseData, L\"Error verifying\", uVar6);\n            if (iVar5 == 0) {\n                uVar4 = (*pcVar2)();\n                pcVar10 = \"TICKET:Error(%lu) during CryptHashData.\";\n                uVar8 = 0x5f;\n                uVar6 = extraout_ECX_04;\n            }\n            else {\n                pcVar10 = \"TICKET:The password has been added to the hash.\";\n                uVar8 = 0x2000040;\n                uVar4 = 0x5b;\n                pcVar7 = L\"Ticket.cpp\";\n                uVar6 = fcn.0042c180();\n                fcn.0042c3c0(uVar6, pcVar7, uVar4, uVar8, pcVar10, iVar3);\n                iVar3 = (*_sym.imp.ADVAPI32.dll_CryptDeriveKey)(hProv, 0x6801, hBaseData, 0x800000, &phKey);\n                if (iVar3 != 0) {\n                    pcVar10 = \"TICKET:An encryption key is derived from the password hash.\";\n                    uVar8 = 0x2000040;\n                    uVar4 = 0x6c;\n                    pcVar7 = L\"Ticket.cpp\";\n                    uVar6 = fcn.0042c180();\n                    fcn.0042c3c0(uVar6, pcVar7, uVar4, uVar8, pcVar10, arg_1ch);\n                    iVar3 = fcn.00456a6c(0x10);\n                    if (iVar3 == 0) {\n                        pcVar10 = \"TICKET:Out of memory.\";\n                        uVar8 = 0x2000002;\n                        uVar4 = 0x94;\n                        pcVar7 = L\"Ticket.cpp\";\n                        uVar6 = fcn.0042c180();\n                        fcn.0042c3c0(uVar6, pcVar7, uVar4, uVar8, pcVar10, arg_1ch);\n                    }\n                    else {\n                        pcVar10 = \"TICKET:Memory has been allocated for the buffer.\";\n                        uVar8 = 0x2000040;\n                        uVar4 = 0x90;\n                        pcVar7 = L\"Ticket.cpp\";\n                        uVar6 = fcn.0042c180();\n                        fcn.0042c3c0(uVar6, pcVar7, uVar4, uVar8, pcVar10, arg_1ch);\n                        var_10h = 8;\n                        (*_sym.imp.KERNEL32.dll_GetSystemTime)(0x4b988c);\n                        (*_sym.imp.KERNEL32.dll_SystemTimeToFileTime)(0x4b988c, 0x4b989c);\n                        iVar5 = fcn.004537f5(iVar3, 0x10, 0x4b989c, 8);\n                        if (iVar5 != 0) {\n                            pcVar10 = \"TICKET:error memcpy=(%d)\";\n                            uVar8 = 0x2000002;\n                            uVar4 = 0xa4;\n                            pcVar7 = L\"Ticket.cpp\";\n                            uVar6 = fcn.0042c180(extraout_ECX_00);\n                            fcn.0042c3c0(uVar6, pcVar7, uVar4, uVar8, pcVar10, iVar5);\n                        }\n                        iVar5 = (*_sym.imp.ADVAPI32.dll_CryptEncrypt)(phKey, 0, 1, 0, iVar3, &var_10h, 0x10);\n                        if (iVar5 == 0) {\n                            iVar5 = (*pcVar2)();\n                            pcVar10 = \"TICKET:Error(%lu) during CryptEncrypt.\";\n                            uVar4 = 0xb2;\n                            uVar6 = extraout_ECX_02;\n                        }\n                        else {\n                            if (var_10h == 8) {\n                                fcn.004537f5(0x4b98a4, 8, iVar3, 8);\n                                fcn.00455f3f(iVar3);\n                                goto code_r0x00435b04;\n                            }\n                            pcVar10 = \"Inconsistent encrypted block size(%lu bytes)\";\n                            uVar4 = 0xb9;\n                            uVar6 = extraout_ECX_01;\n                            iVar5 = var_10h;\n                        }\n                        uVar8 = 0x2000002;\n                        pcVar7 = L\"Ticket.cpp\";\n                        uVar6 = fcn.0042c180(uVar6);\n                        fcn.0042c3c0(uVar6, pcVar7, uVar4, uVar8, pcVar10, iVar5);\n                        fcn.00455f3f(iVar3);\n                    }\n                    goto code_r0x00435b04;\n                }\n                uVar4 = (*pcVar2)();\n                pcVar10 = \"TICKET:Error(%lu) during CryptDeriveKey!\";\n                uVar8 = 0x70;\n                uVar6 = extraout_ECX_03;\n            }\n        }\n    }\n    uVar9 = 0x2000002;\n    pcVar7 = L\"Ticket.cpp\";\n    uVar6 = fcn.0042c180(uVar6);\n    fcn.0042c3c0(uVar6, pcVar7, uVar8, uVar9, pcVar10, uVar4);\ncode_r0x00435b04:\n    if (hBaseData != 0) {\n        iVar3 = (*_sym.imp.ADVAPI32.dll_CryptDestroyHash)(hBaseData);\n        if (iVar3 == 0) {\n            uVar6 = (*pcVar2)();\n            pcVar10 = \"TICKET:Error(%lu) during CryptDestroyHash.\";\n            uVar9 = 0x2000002;\n            uVar8 = 0xca;\n            pcVar7 = L\"Ticket.cpp\";\n            uVar4 = fcn.0042c180(extraout_ECX_06);\n            fcn.0042c3c0(uVar4, pcVar7, uVar8, uVar9, pcVar10, uVar6);\n        }\n        hBaseData = 0;\n    }\n    if (phKey != 0) {\n        iVar3 = (*_sym.imp.ADVAPI32.dll_CryptDestroyKey)(phKey);\n        if (iVar3 == 0) {\n            uVar6 = (*pcVar2)();\n            pcVar10 = \"TICKET:Error(%lu) during CryptDestroyKey!\";\n            uVar9 = 0x2000002;\n            uVar8 = 0xd6;\n            pcVar7 = L\"Ticket.cpp\";\n            uVar4 = fcn.0042c180(extraout_ECX_07);\n            fcn.0042c3c0(uVar4, pcVar7, uVar8, uVar9, pcVar10, uVar6);\n        }\n    }\n    if (hProv != 0) {\n        iVar3 = (*_sym.imp.ADVAPI32.dll_CryptReleaseContext)(hProv, 0);\n        if (iVar3 == 0) {\n            uVar6 = (*pcVar2)();\n            pcVar10 = \"TICKET:Error(%lu) during CryptReleaseContext!\";\n            uVar9 = 0x2000002;\n            uVar8 = 0xe0;\n            pcVar7 = L\"Ticket.cpp\";\n            uVar4 = fcn.0042c180(extraout_ECX_08);\n            fcn.0042c3c0(uVar4, pcVar7, uVar8, uVar9, pcVar10, uVar6);\n        }\n    }\n    pcVar10 = \"TICKET:Origin %8X %8X\";\n    uVar9 = 0x2000040;\n    uVar8 = 0xe4;\n    pcVar7 = L\"Ticket.cpp\";\n    uVar6 = *0x4b98a0;\n    uVar4 = fcn.0042c180();\n    fcn.0042c3c0(uVar4, pcVar7, uVar8, uVar9, pcVar10, uVar6);\n    return CONCAT44(*0x4b98a8, *0x4b98a4);\n}\n",
        "token_count": 2645
    },
    "0043633c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0043633c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    fcn.00436043(arg_ch, 0, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h);\n    return;\n}\n",
        "token_count": 107
    },
    "00436363": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00436363(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 == 0) {\n        iVar1 = -0x66;\n    }\n    else {\n        *(param_1 + 0x34) = *(param_1 + 0x44);\n        *(param_1 + 0x30) = 0;\n        iVar1 = fcn.00436043(param_1 + 0x48, param_1 + 0x98, 0, 0, 0, 0, 0, 0);\n        *(param_1 + 0x38) = iVar1 == 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 160
    },
    "004363a5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004363a5(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 == 0) {\n        iVar1 = -0x66;\n    }\n    else if ((*(param_1 + 0x38) == 0) || ((*(param_1 + 0x24) != 0xffff && (*(param_1 + 0x30) + 1 == *(param_1 + 0x24))))\n            ) {\n        iVar1 = -100;\n    }\n    else {\n        *(param_1 + 0x34) = *(param_1 + 0x34) + *(param_1 + 0x70) + *(param_1 + 0x6c) + 0x2e + *(param_1 + 0x68);\n        *(param_1 + 0x30) = *(param_1 + 0x30) + 1;\n        iVar1 = fcn.00436043(param_1 + 0x48, param_1 + 0x98, 0, 0, 0, 0, 0, 0);\n        *(param_1 + 0x38) = iVar1 == 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 283
    },
    "00436c9f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00436c9f(uint param_1)\n\n{\n    fcn.00436a4d(param_1, 0, 0, 0, 0);\n    return;\n}\n",
        "token_count": 45
    },
    "00438f30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * fcn.00438f30(uint32_t *param_1, uint32_t *param_2, int32_t param_3)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t *puVar7;\n    \n    puVar3 = param_1;\n    do {\n        uVar1 = *puVar3;\n        puVar3 = puVar3 + 1;\n    } while (uVar1 != 0);\n    uVar4 = (param_3 - (puVar3 - (param_1 + 1))) - 1;\n    if (uVar4 != 0) {\n        uVar6 = param_1 & 3;\n        puVar3 = param_1;\n        while (uVar6 != 0) {\n            uVar1 = *puVar3;\n            puVar3 = puVar3 + 1;\n            if (uVar1 == 0) goto code_r0x004585cd;\n            uVar6 = puVar3 & 3;\n        }\n        do {\n            do {\n                puVar7 = puVar3;\n                puVar3 = puVar7 + 1;\n            } while (((*puVar7 ^ 0xffffffff ^ *puVar7 + 0x7efefeff) & 0x81010100) == 0);\n            uVar6 = *puVar7;\n            if (uVar6 == '\\0') goto code_r0x004585df;\n            if (uVar6 >> 8 == '\\0') {\n                puVar7 = puVar7 + 1;\n                goto code_r0x004585df;\n            }\n            if ((uVar6 & 0xff0000) == 0) {\n                puVar7 = puVar7 + 2;\n                goto code_r0x004585df;\n            }\n        } while ((uVar6 & 0xff000000) != 0);\ncode_r0x004585cd:\n        puVar7 = puVar3 + -1;\ncode_r0x004585df:\n        if ((param_2 & 3) == 0) {\n            uVar5 = uVar4 >> 2;\n        }\n        else {\n            do {\n                uVar1 = *param_2;\n                uVar6 = uVar1;\n                param_2 = param_2 + 1;\n                if (uVar1 == 0) goto code_r0x0045863a;\n                *puVar7 = uVar1;\n                puVar7 = puVar7 + 1;\n                uVar4 = uVar4 - 1;\n                if (uVar4 == 0) goto code_r0x00458630;\n            } while ((param_2 & 3) != 0);\n            uVar5 = uVar4 >> 2;\n        }\n        for (; uVar5 != 0; uVar5 = uVar5 - 1) {\n            uVar2 = *param_2;\n            uVar6 = *param_2;\n            param_2 = param_2 + 1;\n            if (((uVar2 ^ 0xffffffff ^ uVar2 + 0x7efefeff) & 0x81010100) != 0) {\n                if (uVar6 == '\\0') {\ncode_r0x0045863a:\n                    *puVar7 = uVar6;\n                    return param_1;\n                }\n                if (uVar6 >> 8 == '\\0') {\n                    *puVar7 = uVar6;\n                    return param_1;\n                }\n                if ((uVar6 & 0xff0000) == 0) {\n                    *puVar7 = uVar6;\n                    *(puVar7 + 2) = 0;\n                    return param_1;\n                }\n                if ((uVar6 & 0xff000000) == 0) {\n                    *puVar7 = uVar6;\n                    return param_1;\n                }\n            }\n            *puVar7 = uVar6;\n            puVar7 = puVar7 + 1;\n        }\n        for (uVar4 = uVar4 & 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n            uVar1 = *param_2;\n            param_2 = param_2 + 1;\n            *puVar7 = uVar1;\n            puVar7 = puVar7 + 1;\n            if (uVar1 == 0) {\n                return param_1;\n            }\n        }\ncode_r0x00458630:\n        *puVar7 = uVar4;\n    }\n    return param_1;\n}\n",
        "token_count": 1049
    },
    "00438f70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00438f70(uint param_1, int32_t param_2, int32_t param_3, int32_t param_4)\n\n{\n    int32_t unaff_EDI;\n    int32_t extraout_var;\n    int32_t arg_8h;\n    uchar uStack2308;\n    uchar auStack2307 [253];\n    uchar uStack2054;\n    uchar uStack2052;\n    uchar auStack2051 [2046];\n    uchar uStack5;\n    uint32_t uStack4;\n    \n    uStack4 = *0x4b4f00 ^ &stack0xfffff6f4;\n    uStack2308 = 0;\n    fcn.00453710(auStack2307, 0, 0xfe);\n    uStack2052 = 0;\n    arg_8h = extraout_var;\n    fcn.00453710(auStack2051, 0, 0x7ff);\n    if ((((param_3 != 0) && (param_4 != 0)) && (arg_8h != 0)) && ((param_2 != 0 && (unaff_EDI != 0)))) {\n        fcn.004586b0(&uStack2052, param_3, 0x7ff);\n        uStack5 = 0;\n        fcn.004586b0(&uStack2308, \"?Protocol_version=\", 0xfe);\n        uStack2054 = 0;\n        fcn.00438f30(&uStack2308, param_4, 0xff);\n        fcn.00438f30(&uStack2052, &uStack2308, 0x800);\n        fcn.004586b0(&uStack2308, \"&AC=\", 0xfe);\n        uStack2054 = 0;\n        fcn.00438f30(&uStack2308, arg_8h, 0xff);\n        fcn.00438f30(&uStack2052, &uStack2308, 0x800);\n        fcn.004586b0(&uStack2308, \"&Product_Code=\", 0xfe);\n        uStack2054 = 0;\n        fcn.00438f30(&uStack2308, param_2, 0xff);\n        fcn.00438f30(&uStack2052, &uStack2308, 0x800);\n        fcn.004586b0(&uStack2308, \"&AP_Name=\", 0xfe);\n        uStack2054 = 0;\n        fcn.00438f30(&uStack2308, param_2 + 3, 0xff);\n        fcn.00438f30(&uStack2052, &uStack2308, 0x800);\n        fcn.004586b0(&uStack2308, \"&OS=\", 0xfe);\n        uStack2054 = 0;\n        fcn.00438f30(&uStack2308, param_2 + 6, 0xff);\n        fcn.00438f30(&uStack2052, &uStack2308, 0x800);\n        fcn.004586b0(&uStack2308, \"&Language=\", 0xfe);\n        uStack2054 = 0;\n        fcn.00438f30(&uStack2308, param_2 + 9, 0xff);\n        fcn.00438f30(&uStack2052, &uStack2308, 0x800);\n        fcn.004586b0(&uStack2308, \"&Product_Version=\", 0xfe);\n        uStack2054 = 0;\n        fcn.00438f30(&uStack2308, param_2 + 0xb, 0xff);\n        fcn.00438f30(&uStack2052, &uStack2308, 0x800);\n        fcn.00453710();\n        fcn.004586b0();\n        *(unaff_EDI + 0x7ff) = 0;\n        fcn.004529f8(arg_8h);\n        return;\n    }\n    fcn.004529f8(arg_8h);\n    return;\n}\n",
        "token_count": 918
    },
    "0043ab60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043ab60(uint *param_1, uint *param_2)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t in_stack_ffffffb0;\n    uint32_t arg_8h;\n    uchar auStack76 [2];\n    uchar auStack74 [3];\n    uint uStack71;\n    uint uStack67;\n    uint uStack63;\n    uint32_t uStack59;\n    uint uStack55;\n    uint uStack51;\n    uint uStack47;\n    uchar uStack43;\n    uchar uStack40;\n    uint uStack39;\n    uint uStack35;\n    uint uStack31;\n    uint uStack27;\n    uint uStack23;\n    uint uStack19;\n    uint uStack15;\n    uint uStack11;\n    uchar uStack7;\n    uint32_t uStack4;\n    \n    uStack4 = *0x4b4f00 ^ &stack0xffffffb0;\n    uStack40 = 0;\n    uStack39 = 0;\n    uStack35 = 0;\n    uStack31 = 0;\n    uStack27 = 0;\n    uStack23 = 0;\n    uStack19 = 0;\n    uStack15 = 0;\n    uStack11 = 0;\n    uStack7 = 0;\n    auStack76[0] = 0;\n    stack0xffffffb5 = 0;\n    uStack71 = 0;\n    uStack67 = 0;\n    uStack63 = 0;\n    uStack59 = 0;\n    uStack55 = 0;\n    uStack51 = 0;\n    uStack47 = 0;\n    uStack43 = 0;\n    arg_8h = (in_stack_ffffffb0 >> 8 & 0xffff00) << 8;\n    if (param_1 != NULL) {\n        puVar2 = param_1;\n        do {\n            cVar1 = *puVar2;\n            puVar2 = puVar2 + 1;\n        } while (cVar1 != '\\0');\n        if (puVar2 - (param_1 + 1) == 0x1f) {\n            puVar2 = &uStack40;\n            for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar2 = *param_1;\n                param_1 = param_1 + 1;\n                puVar2 = puVar2 + 1;\n            }\n            *puVar2 = *param_1;\n            *(puVar2 + 2) = *(param_1 + 2);\n            auStack76[0] = uStack40;\n            unique0x100000d1 = uStack39 & 0xff;\n            iVar3 = fcn.0043d710(&uStack39 + 1, 0x1d, auStack74);\n            if (iVar3 == -0x1ffeffff) {\n                fcn.004529f8(arg_8h);\n                return;\n            }\n            fcn.0043d5b0(auStack76, 0x12, &stack0xffffffb0);\n            iVar3 = (arg_8h & 0xff) - (uStack59 >> 8 & 0xff);\n            if ((iVar3 == 0) && (iVar3 = (arg_8h >> 8 & 0xff) - (uStack59 >> 0x10 & 0xff),  iVar3 == 0)) {\n                iVar4 = 0;\n            }\n            else {\n                iVar4 = 1;\n                if (iVar3 < 1) {\n                    iVar4 = -1;\n                }\n            }\n            if (iVar4 != 0) {\n                fcn.004529f8(arg_8h);\n                return;\n            }\n            if (param_2 != NULL) {\n                puVar2 = auStack76;\n                for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n                    *param_2 = *puVar2;\n                    puVar2 = puVar2 + 1;\n                    param_2 = param_2 + 1;\n                }\n                *param_2 = *puVar2;\n                *(param_2 + 2) = *(puVar2 + 2);\n            }\n            fcn.004529f8(arg_8h);\n            return;\n        }\n    }\n    fcn.004529f8(arg_8h);\n    return;\n}\n",
        "token_count": 1010
    },
    "0043acd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043acd0(int32_t param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint in_stack_ffffffcc;\n    uint uStack32;\n    uint uStack28;\n    uint uStack23;\n    uint uStack19;\n    uint uStack14;\n    ushort uStack10;\n    uint32_t uStack4;\n    \n    uStack4 = *0x4b4f00 ^ &stack0xffffffcc;\n    if ((param_1 != 0) && (param_2 != NULL)) {\n        fcn.00453710(&stack0xffffffcc, 0, 0x2d);\n        in_stack_ffffffcc = CONCAT22(*(param_1 + 3), in_stack_ffffffcc & 0xff00 | *(param_1 + 2));\n        uStack32 = *(param_1 + 0xc);\n        uStack28 = *(param_1 + 0x10);\n        uStack23 = *(param_1 + 0x14);\n        uStack19 = *(param_1 + 0x18);\n        uStack14 = *(param_1 + 0x1c);\n        uStack10 = *(param_1 + 0x20);\n        iVar1 = fcn.0043bd70(&uStack32);\n        if (iVar1 == 0) {\n            puVar2 = &stack0xffffffcc;\n            for (iVar1 = 0xb; iVar1 != 0; iVar1 = iVar1 + -1) {\n                *param_2 = *puVar2;\n                puVar2 = puVar2 + 1;\n                param_2 = param_2 + 1;\n            }\n            *param_2 = *puVar2;\n            fcn.004529f8(in_stack_ffffffcc);\n            return;\n        }\n    }\n    fcn.004529f8(in_stack_ffffffcc);\n    return;\n}\n",
        "token_count": 429
    },
    "0043b1a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043b1a0(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    fcn.004587d4(param_1, param_2, param_3, param_4);\n    return;\n}\n",
        "token_count": 60
    },
    "0043b1c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0043b1c0(int32_t param_1, uint8_t *param_2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    \n    puVar3 = param_1 + 5;\n    iVar2 = *puVar3 - 0x41;\n    if ((iVar2 == 0) && (iVar2 = *(param_1 + 6) - 0x50,  iVar2 == 0)) {\n        iVar4 = 0;\n    }\n    else {\n        iVar4 = 1;\n        if (iVar2 < 1) {\n            iVar4 = -1;\n        }\n    }\n    if (iVar4 == 0) {\n        return CONCAT44(puVar3, 1);\n    }\n    iVar2 = *puVar3 - 0x5a;\n    if ((iVar2 == 0) && (iVar2 = *(param_1 + 6) - 0x5a,  iVar2 == 0)) {\n        iVar4 = 0;\n    }\n    else {\n        iVar4 = 1;\n        if (iVar2 < 1) {\n            iVar4 = -1;\n        }\n    }\n    if (iVar4 != 0) {\n        puVar5 = *param_2;\n        iVar2 = *puVar3 - puVar5;\n        if ((iVar2 == 0) && (iVar2 = *(param_1 + 6) - param_2[1],  iVar2 == 0)) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = 1;\n            if (iVar2 < 1) {\n                iVar4 = -1;\n            }\n        }\n        if (iVar4 != 0) goto code_r0x0043b327;\n    }\n    puVar5 = param_1 + 2;\n    iVar2 = *puVar5 - 0x4d;\n    if ((iVar2 == 0) && (iVar2 = *(param_1 + 3) - 0x4d,  iVar2 == 0)) {\n        iVar4 = 0;\n    }\n    else {\n        iVar4 = 1;\n        if (iVar2 < 1) {\n            iVar4 = -1;\n        }\n    }\n    if (iVar4 != 0) {\n        iVar2 = *puVar5 - 0x5a;\n        if ((iVar2 == 0) && (iVar2 = *(param_1 + 3) - 0x5a,  iVar2 == 0)) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = 1;\n            if (iVar2 < 1) {\n                iVar4 = -1;\n            }\n        }\n        if (iVar4 != 0) {\n            iVar2 = *puVar5 - param_2[3];\n            if (iVar2 == 0) {\n                puVar5 = param_1 + 3;\n                iVar2 = *(param_1 + 3) - param_2[4];\n                if (iVar2 != 0) goto code_r0x0043b2d1;\n                iVar4 = 0;\n            }\n            else {\ncode_r0x0043b2d1:\n                iVar4 = 1;\n                if (iVar2 < 1) {\n                    iVar4 = -1;\n                }\n            }\n            if (iVar4 != 0) goto code_r0x0043b327;\n        }\n    }\n    puVar5 = param_1 + 0xc;\n    if ((*(param_1 + 0xc) == 'M') || (*(param_1 + 0xc) == 'Z')) goto code_r0x0043b32c;\n    iVar2 = *puVar5 - param_2[6];\n    if (iVar2 == 0) {\n        puVar5 = param_2[7];\n        iVar2 = *(param_1 + 0xd) - puVar5;\n        if (iVar2 != 0) goto code_r0x0043b313;\n        iVar4 = 0;\n    }\n    else {\ncode_r0x0043b313:\n        iVar4 = 1;\n        if (iVar2 < 1) {\n            iVar4 = -1;\n        }\n    }\n    if (iVar4 != 0) {\ncode_r0x0043b327:\n        return ZEXT48(puVar5) << 0x20;\n    }\ncode_r0x0043b32c:\n    puVar3 = param_2 + 0xb;\n    do {\n        uVar1 = *puVar3;\n        puVar3 = puVar3 + 1;\n    } while (uVar1 != 0);\n    return CONCAT44(param_2 + 0xc, puVar3 - (param_2 + 0xc) == 0xb);\n}\n",
        "token_count": 1089
    },
    "0043b6d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043b6d0(uint param_1, uint param_2)\n\n{\n    uint in_stack_ffffffb4;\n    uchar auStack36 [32];\n    uint32_t uStack4;\n    \n    uStack4 = *0x4b4f00 ^ &stack0xffffffb4;\n    fcn.0043b620(param_1, &stack0xffffffb4);\n    sym.SupportWrapper.exe_PR_decomposeActivationCode(auStack36, param_2);\n    fcn.004529f8(in_stack_ffffffb4);\n    return;\n}\n",
        "token_count": 126
    },
    "0043bba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0043bba0(int32_t param_1, int32_t *param_2, int32_t *param_3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iStack4;\n    \n    iVar1 = fcn.0043b750(param_1, &iStack4, param_2);\n    if (iVar1 == 0) {\n        uVar2 = *(param_1 + 10) - 0x31;\n        if ((uVar2 == 0) && (uVar2 = *(param_1 + 0xb),  uVar2 == 0)) {\n            iVar1 = 0;\n        }\n        else {\n            iVar1 = 1;\n            if (uVar2 < 1) {\n                iVar1 = -1;\n            }\n        }\n        if (iVar1 == 0) {\n            if (iStack4 == 0x60010106) {\n                *param_3 = (0x3c < *param_2) + 0x6001010d;\n                return 0;\n            }\n            if ((0x60010106 < iStack4) && (iStack4 < 0x60010109)) {\n                *param_3 = 0x6001010d;\n                return 0;\n            }\n        }\n        else {\n            if (iStack4 == 0x60010108) {\n                *param_3 = 0x6001010f;\n                return 0;\n            }\n            *param_3 = (0xe < *param_2) + 0x6001010f;\n        }\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 376
    },
    "0043bc60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encode data using XOR"
        ],
        "decompiled_code": "\nvoid fcn.0043bc60(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < param_2) {\n        do {\n            *(iVar1 + param_1) = *(iVar1 + param_1) ^ 0x5a;\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < param_2);\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "0043bd70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0043bd70(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0;\n    uStack8 = 0;\n    uStack12 = 0;\n    iVar1 = fcn.0043bc80(param_1, &uStack4, &uStack8, &uStack12);\n    return -(iVar1 != 0) & 0xe0010001;\n}\n",
        "token_count": 115
    },
    "0043bdb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0043bdb0(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    \n    if (param_1 == 0) {\n        pcVar4 = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    }\n    else if (param_1 == 1) {\n        pcVar4 = \"ABCDEFGHJKLMNPQRSTUVWXYZ23456789\";\n    }\n    else {\n        pcVar4 = param_2;\n        if (param_1 == 2) {\n            pcVar4 = \"0123456789\";\n        }\n    }\n    pcVar2 = pcVar4;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    iVar3 = fcn.00458c80(pcVar4, param_2, pcVar2 - (pcVar4 + 1));\n    if (iVar3 == 0) {\n        return -1;\n    }\n    return iVar3 - pcVar4;\n}\n",
        "token_count": 248
    },
    "0043be10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043be10(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.00467e12(param_1, param_2, param_3, &stack0x00000010);\n    return;\n}\n",
        "token_count": 57
    },
    "0043bfb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0043bfb0(uint8_t **param_1, uint8_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    bool bVar3;\n    \n    puVar2 = *param_1;\n    if (puVar2 == NULL) {\n        puVar2 = 0x4a23ad;\n    }\n    while( true ) {\n        uVar1 = *puVar2;\n        bVar3 = uVar1 < *param_2;\n        if (uVar1 != *param_2) break;\n        if (uVar1 == 0) {\n            return 0;\n        }\n        uVar1 = puVar2[1];\n        bVar3 = uVar1 < param_2[1];\n        if (uVar1 != param_2[1]) break;\n        puVar2 = puVar2 + 2;\n        param_2 = param_2 + 2;\n        if (uVar1 == 0) {\n            return 0;\n        }\n    }\n    return (1 - bVar3) - (bVar3 != 0);\n}\n",
        "token_count": 257
    },
    "0043c000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0043c000(int32_t *param_1, int32_t param_2)\n\n{\n    return *param_1 + param_2;\n}\n",
        "token_count": 42
    },
    "0043c030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043c030(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *param_1;\n    if (iVar1 == 0) {\n        return iVar1;\n    }\n    return iVar1 + -8;\n}\n",
        "token_count": 65
    },
    "0043c040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar * fcn.0043c040(char *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    \n    if (param_1 == NULL) {\n        return param_1;\n    }\n    pcVar1 = param_1 + 1;\n    do {\n        cVar2 = *param_1;\n        param_1 = param_1 + 1;\n    } while (cVar2 != '\\0');\n    return param_1 + -pcVar1;\n}\n",
        "token_count": 109
    },
    "0043c100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043c100(code **param_1)\n\n{\n    uint32_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x485df8;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &stack0xffffffec;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = vtable.PR_HTTP::TmSimpleStringVector.0;\n    uStack4 = 0;\n    fcn.0043c0b0(uVar1);\n    fcn.0043c090();\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 174
    },
    "0043c290": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0043c290(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint32_t *puVar1;\n    int32_t *extraout_ECX;\n    \n    puVar1 = fcn.0043c030();\n    if (((param_2 != 0) && (param_1 != 0)) && (puVar1 != NULL)) {\n        if (*puVar1 < param_2 + param_3) {\n            param_2 = *puVar1 - param_3;\n        }\n        fcn.00452a10(param_1, *extraout_ECX + param_3, param_2);\n        return param_2;\n    }\n    return 0;\n}\n",
        "token_count": 166
    },
    "0043c370": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0043c370(int32_t *param_1, char param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.0043c300();\n    if (param_3 < uVar1) {\n        iVar2 = fcn.00458d30(*param_1 + param_3, param_2);\n        if (iVar2 != 0) {\n            return iVar2 - *param_1;\n        }\n    }\n    return -1;\n}\n",
        "token_count": 130
    },
    "0043c3b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0043c3b0(int32_t *param_1, int32_t param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.0043c300();\n    if ((param_3 < uVar1) && (param_2 != 0)) {\n        iVar2 = fcn.00458e60(*param_1 + param_3, param_2);\n        if (iVar2 != 0) {\n            return iVar2 - *param_1;\n        }\n    }\n    return -1;\n}\n",
        "token_count": 143
    },
    "0043c3f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043c3f0(uint32_t **param_1, uint32_t param_2)\n\n{\n    uint32_t *puVar1;\n    \n    if (param_2 != 0) {\n        if (param_2 < 0x100) {\n            puVar1 = fcn.0045306d(0x108);\n            puVar1[1] = 0xff;\n        }\n        else {\n            puVar1 = fcn.0045306d(param_2 + 9);\n            puVar1[1] = param_2;\n        }\n        *(puVar1 + param_2 + 8) = 0;\n        *puVar1 = param_2;\n        fcn.0043c310();\n        *param_1 = puVar1 + 2;\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "0043c450": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043c450(int32_t *param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    \n    iVar1 = fcn.0043c030();\n    if ((iVar1 == 0) || (*(iVar1 + 4) < param_2)) {\n        fcn.0043c3f0(param_2);\n    }\n    if (*param_1 != 0) {\n        if (param_2 != 0) {\n            fcn.00452a10(*param_1, param_2, param_2);\n        }\n        puVar2 = fcn.0043c030();\n        *puVar2 = param_2;\n        *(param_2 + *param_1) = 0;\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "0043c4a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043c4a0(int32_t *param_1, int32_t param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    piVar2 = fcn.0043c030();\n    if (piVar2 == NULL) {\n        fcn.0043c450(param_2, param_3);\n        return;\n    }\n    iVar1 = *piVar2;\n    if (piVar2[1] < iVar1 + param_2) {\n        iVar3 = fcn.0045306d(iVar1 + 1);\n        fcn.00452a10(iVar3, *param_1, iVar1);\n        *(iVar1 + iVar3) = 0;\n        fcn.0043c3f0(*piVar2 + param_2);\n        piVar2 = fcn.0043c030();\n        fcn.00452a10(*param_1, iVar3, iVar1);\n        fcn.00452a07(iVar3);\n        fcn.00452a10(*param_1 + iVar1, param_2, unaff_retaddr);\n        *piVar2 = iVar1 + unaff_retaddr;\n        *(iVar1 + unaff_retaddr + *param_1) = 0;\n        return;\n    }\n    fcn.00452a10(*param_1 + iVar1, param_3, param_2);\n    *piVar2 = *piVar2 + param_2;\n    *(*piVar2 + *param_1) = 0;\n    return;\n}\n",
        "token_count": 373
    },
    "0043c7b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0043c7b0(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t *unaff_ESI;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x485eb1;\n    piStack12 = *in_FS_OFFSET;\n    uVar2 = *0x4b4f00 ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &piStack12;\n    fcn.0043c6b0(param_2, uVar2);\n    uStack8 = 1;\n    uVar3 = fcn.0043c610(param_2);\n    uVar1 = uStack4;\n    fcn.0043c6b0(uVar3);\n    fcn.0043c360(uVar3, param_2, 1);\n    *in_FS_OFFSET = unaff_ESI;\n    return uVar1;\n}\n",
        "token_count": 248
    },
    "0043c840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0043c840(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t *unaff_ESI;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x485eb1;\n    piStack12 = *in_FS_OFFSET;\n    uVar2 = *0x4b4f00 ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &piStack12;\n    fcn.0043c6b0(param_2, uVar2);\n    uStack8 = 1;\n    uVar3 = fcn.0043c5f0(param_2);\n    uVar1 = uStack4;\n    fcn.0043c6b0(uVar3);\n    fcn.0043c360(uVar3, param_2, 1);\n    *in_FS_OFFSET = unaff_ESI;\n    return uVar1;\n}\n",
        "token_count": 248
    },
    "0043cb30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0043cb30(uint *param_1, uint param_2, uint param_3)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t *piVar7;\n    int32_t **in_FS_OFFSET;\n    uint unaff_retaddr;\n    uchar auStack16 [4];\n    int32_t *piStack12;\n    uint uStack8;\n    int32_t iStack4;\n    \n    iStack4 = 0xffffffff;\n    uStack8 = 0x485f28;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &stack0xffffffdc;\n    *in_FS_OFFSET = &piStack12;\n    iVar5 = 0;\n    piVar7 = NULL;\n    piVar6 = NULL;\n    fcn.0043ea40(auStack16, param_2, uVar1);\n    iStack4 = 0;\n    uVar2 = fcn.0043d190();\n    iVar3 = fcn.0043e6d0(auStack16, uVar2);\n    if ((iVar3 == 0) || (iVar4 = fcn.0042e1b0(),  iVar4 == 0)) {\n        iVar5 = 2;\n    }\n    else {\n        fcn.0043d080(0);\n        piVar7 = fcn.0043df60(*param_1);\n        if (piVar7 == NULL) {\n            iVar5 = 3;\n        }\n        else {\n            (**(*piVar7 + 0x1c))(param_3);\n            iVar4 = (**(*piVar7 + 0xc))();\n            if (iVar4 == 0) {\n                iVar5 = (**(*piVar7 + 4))();\n            }\n            else {\n                piVar6 = (**(*piVar7 + 0x10))();\n                if ((piVar6 == NULL) || (iVar4 = (**(*piVar6 + 8))(),  iVar4 != 0)) {\n                    iVar5 = 5;\n                }\n                else {\n                    unaff_EBP = fcn.0045306d(0x400);\n                    if (unaff_EBP == 0) {\n                        iVar5 = 1;\n                    }\n                    else {\n                        iVar4 = (***piVar6)();\n                        while (iVar4 == 0) {\n                            (**(*piVar6 + 0x28))(unaff_EBP, 0x400);\n                            iVar4 = (**(*piVar6 + 4))();\n                            if (iVar4 != 0) {\n                                iVar5 = (**(*piVar6 + 0x34))();\n                                iVar5 = (-(iVar5 != 0) & 6) + 7;\n                                goto code_r0x0043cca9;\n                            }\n                            (**(*piVar6 + 0x2c))();\n                            iVar4 = (***piVar6)();\n                        }\n                        fcn.00452a10(unaff_retaddr, unaff_EBP, iVar3);\n                    }\n                }\n            }\n        }\n    }\ncode_r0x0043cca9:\n    if (iStack4 != 0) {\n        fcn.0043cab0();\n        fcn.00452a07(iStack4);\n    }\n    if (piVar7 != NULL) {\n        (***piVar7)(1);\n    }\n    if (piVar6 != NULL) {\n        (**(*piVar6 + 0x10))(1);\n    }\n    if (unaff_EBP != 0) {\n        fcn.00452a07(unaff_EBP);\n    }\n    piStack12 = 0xffffffff;\n    fcn.0043c360();\n    *in_FS_OFFSET = NULL;\n    return iVar5;\n}\n",
        "token_count": 867
    },
    "0043cf30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.0043cf30(void)\n\n{\n    uint32_t uVar1;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x486018;\n    uStack12 = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &uStack12;\n    *in_FS_OFFSET = &uStack12;\n    uStack4 = 0;\n    fcn.0043c590(&stack0x00000004);\n    uStack8 = 0xffffffff;\n    fcn.0043c360();\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 157
    },
    "0043d000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.0043d000(void)\n\n{\n    uint32_t uVar1;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x486018;\n    uStack12 = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &uStack12;\n    *in_FS_OFFSET = &uStack12;\n    uStack4 = 0;\n    fcn.0043c590(&stack0x00000004);\n    uStack8 = 0xffffffff;\n    fcn.0043c360();\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 157
    },
    "0043d0a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0043d0a0(int32_t param_1, uint param_2)\n\n{\n    fcn.0043c6b0(param_1 + 8);\n    return param_2;\n}\n",
        "token_count": 51
    },
    "0043d0d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0043d0d0(int32_t param_1, uint param_2)\n\n{\n    fcn.0043c6b0(param_1 + 0x1c);\n    return param_2;\n}\n",
        "token_count": 54
    },
    "0043d1b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0043d1b0(int32_t param_1, uint param_2)\n\n{\n    fcn.0043c6b0(param_1 + 0x20);\n    return param_2;\n}\n",
        "token_count": 53
    },
    "0043d320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043d320(int32_t param_1)\n\n{\n    uint32_t *unaff_ESI;\n    uint in_stack_ffffffec;\n    uint32_t uVar1;\n    uint uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    uint32_t uStack4;\n    \n    uStack4 = *0x4b4f00 ^ &stack0xffffffec;\n    if ((param_1 != 0) && (unaff_ESI != NULL)) {\n        uVar1 = 0;\n        uStack16 = 0;\n        uStack12 = 0;\n        uStack8 = 0;\n        fcn.004586b0(&stack0xffffffec, param_1, 2);\n        uVar1 = uVar1 & 0xff00ffff;\n        fcn.004586b0(&stack0xffffffef, param_1 + 2, 2);\n        uStack16 = uStack16 & 0xffff00ff;\n        fcn.004586b0(&uStack16 + 2, param_1 + 4, 9);\n        *unaff_ESI = uVar1;\n        uStack8 = uStack8 & 0xffffff;\n        unaff_ESI[1] = uStack16;\n        unaff_ESI[2] = uStack12;\n        unaff_ESI[3] = uStack8;\n        fcn.004529f8(uVar1);\n        return;\n    }\n    fcn.004529f8(in_stack_ffffffec);\n    return;\n}\n",
        "token_count": 347
    },
    "0043d690": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043d690(int32_t param_1, uint8_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char *unaff_EDI;\n    \n    if (0 < param_1 + -1) {\n        iVar1 = param_1 + -1;\n        do {\n            iVar2 = iVar1 + -1;\n            unaff_EDI[iVar1] = unaff_EDI[iVar1 + -1] >> (8 - param_2 & 0x1f) | unaff_EDI[iVar1] << (param_2 & 0x1f);\n            iVar1 = iVar2;\n        } while (0 < iVar2);\n    }\n    *unaff_EDI = *unaff_EDI << (param_2 & 0x1f);\n    return;\n}\n",
        "token_count": 186
    },
    "0043d6e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0043d6e0(void)\n\n{\n    uchar in_AL;\n    int32_t iVar1;\n    \n    iVar1 = fcn.00458c80(\"ABCDEFGHJKLMNPQRSTUVWXYZ23456789\", in_AL, 0x20);\n    if (iVar1 != 0) {\n        return iVar1 + -0x48f1a4;\n    }\n    return -1;\n}\n",
        "token_count": 90
    },
    "0043d950": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043d950(uint param_1)\n\n{\n    fcn.00458b9e(param_1, *0x48f12c);\n    return;\n}\n",
        "token_count": 42
    },
    "0043d970": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0043d970(void)\n\n{\n    uint64_t uVar1;\n    uint uVar2;\n    float10 fVar3;\n    int32_t iStackY32;\n    float fStackY28;\n    double dVar4;\n    \n    fcn.0043d850();\n    uVar2 = fcn.0043d950();\n    fVar3 = fcn.00459610(uVar2);\n    dVar4 = fVar3;\n    fVar3 = fcn.00459610(dVar4);\n    fVar3 = fcn.004594b0(dVar4 / fVar3);\n    if (*0x4b8ae0 == 0) {\n        fStackY28 = fVar3;\n        uVar1 = ROUND(fVar3);\n        iStackY32 = uVar1;\n        if ((iStackY32 != 0) || (fStackY28 = uVar1 >> 0x20,  (uVar1 & 0x7fffffff00000000) != 0)) {\n            if (fStackY28 < 0) {\n                iStackY32 = iStackY32 + (0x80000000 < (fVar3 - uVar1 ^ 0x80000000));\n            }\n            else {\n                iStackY32 = iStackY32 - (0x80000000 < fVar3 - uVar1);\n            }\n        }\n        return iStackY32;\n    }\n    return fVar3;\n}\n",
        "token_count": 328
    },
    "00458be6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00458be6(void)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    float fVar4;\n    float10 in_ST0;\n    uint32_t uStack32;\n    float fStack28;\n    \n    uVar1 = ROUND(in_ST0);\n    uStack32 = uVar1;\n    fStack28 = uVar1 >> 0x20;\n    fVar4 = in_ST0;\n    if ((uStack32 != 0) || (fVar4 = fStack28,  (uVar1 & 0x7fffffff00000000) != 0)) {\n        if (fVar4 < 0) {\n            uVar2 = 0x80000000 < (in_ST0 - uVar1 ^ 0x80000000);\n            bVar3 = CARRY4(uStack32, uVar2);\n            uStack32 = uStack32 + uVar2;\n            fStack28 = fStack28 + bVar3;\n        }\n        else {\n            uVar2 = 0x80000000 < in_ST0 - uVar1;\n            bVar3 = uStack32 < uVar2;\n            uStack32 = uStack32 - uVar2;\n            fStack28 = fStack28 - bVar3;\n        }\n    }\n    return CONCAT44(fStack28, uStack32);\n}\n",
        "token_count": 306
    },
    "0043de00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043de00(void)\n\n{\n    uint unaff_retaddr;\n    uint in_stack_00002630;\n    uint in_stack_00002634;\n    uint in_stack_00002638;\n    uint in_stack_0000263c;\n    int32_t in_stack_00002648;\n    int32_t in_stack_0000264c;\n    uint *in_stack_00002650;\n    \n    fcn.00459c50();\n    if (((in_stack_00002648 != 0) && (in_stack_0000264c != 0)) && (in_stack_00002650 != NULL)) {\n        fcn.0043efe0();\n        fcn.0043f3a0();\n        *in_stack_00002650 = in_stack_00002630;\n        in_stack_00002650[1] = in_stack_00002634;\n        in_stack_00002650[2] = in_stack_00002638;\n        in_stack_00002650[3] = in_stack_0000263c;\n        fcn.004529f8(unaff_retaddr);\n        return;\n    }\n    fcn.004529f8(unaff_retaddr);\n    return;\n}\n",
        "token_count": 263
    },
    "0043dec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043dec0(int32_t param_1, uint param_2, uint *param_3)\n\n{\n    uint in_stack_ffffff94;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint32_t uStack4;\n    \n    uStack4 = *0x4b4f00 ^ &stack0xffffff94;\n    if ((param_1 != 0) && (param_3 != NULL)) {\n        fcn.00440a50(&stack0xffffff94);\n        fcn.00440a80(&stack0xffffff94, param_1, param_2);\n        fcn.00440ae0(&stack0xffffff94, &uStack20);\n        *param_3 = uStack20;\n        param_3[1] = uStack16;\n        param_3[2] = uStack12;\n        param_3[3] = uStack8;\n        fcn.004529f8(in_stack_ffffff94);\n        return;\n    }\n    fcn.004529f8(in_stack_ffffff94);\n    return;\n}\n",
        "token_count": 246
    },
    "0043e010": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0043e010(int32_t param_1, uint param_2)\n\n{\n    fcn.0043c6b0(param_1 + 0xc);\n    return param_2;\n}\n",
        "token_count": 50
    },
    "0043e030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0043e030(int32_t param_1, uint param_2)\n\n{\n    fcn.0043c6b0(param_1 + 0x14);\n    return param_2;\n}\n",
        "token_count": 51
    },
    "0043e050": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0043e050(int32_t param_1, uint param_2)\n\n{\n    fcn.0043c6b0(param_1 + 0x18);\n    return param_2;\n}\n",
        "token_count": 51
    },
    "0043e6d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0043e6d0(uint param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *unaff_ESI;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x48617b;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &stack0xffffffec;\n    *in_FS_OFFSET = &piStack12;\n    iVar2 = fcn.0045306d(0x1c);\n    uStack4 = 0;\n    if (iVar2 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = fcn.0043e640(param_1, param_2, uVar1);\n    }\n    piStack12 = 0xffffffff;\n    if (iVar2 != 0) {\n        iVar3 = fcn.0042e1b0();\n        if (iVar3 != 0) {\n            *in_FS_OFFSET = unaff_ESI;\n            return iVar2;\n        }\n        fcn.0043cab0();\n        fcn.00452a07(iVar2);\n    }\n    *in_FS_OFFSET = unaff_ESI;\n    return 0;\n}\n",
        "token_count": 322
    },
    "0043e770": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043e770(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "0043e780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043e780(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "0043e790": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0043e790(void)\n\n{\n    uchar uVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    uint32_t **in_FS_OFFSET;\n    uint32_t *puStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x4861b9;\n    puStack12 = *in_FS_OFFSET;\n    puVar2 = *0x4b4f00 ^ &stack0xffffffe4;\n    *in_FS_OFFSET = &puStack12;\n    uStack4 = 0;\n    iVar3 = fcn.0043c300();\n    iVar3 = fcn.0045306d(iVar3 + 1);\n    iVar4 = fcn.0043c300();\n    fcn.00453710(iVar3, 0, iVar4 + 1);\n    uVar5 = fcn.0043c300(0);\n    fcn.0043c290(iVar3, uVar5);\n    uVar8 = 0;\n    iVar4 = fcn.0043c300();\n    if (iVar4 != 0) {\n        do {\n            uVar1 = fcn.0043e770();\n            *(uVar8 + iVar3) = uVar1;\n            uVar8 = uVar8 + 1;\n            uVar6 = fcn.0043c300();\n        } while (uVar8 < uVar6);\n    }\n    uVar7 = fcn.0043c300();\n    uVar5 = uStack8;\n    fcn.0043c980(iVar3, uVar7);\n    fcn.00452a07(iVar3);\n    *in_FS_OFFSET = puVar2;\n    return uVar5;\n}\n",
        "token_count": 422
    },
    "0043e870": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0043e870(void)\n\n{\n    uchar uVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    uint32_t **in_FS_OFFSET;\n    uint32_t *puStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x4861b9;\n    puStack12 = *in_FS_OFFSET;\n    puVar2 = *0x4b4f00 ^ &stack0xffffffe4;\n    *in_FS_OFFSET = &puStack12;\n    uStack4 = 0;\n    iVar3 = fcn.0043c300();\n    iVar3 = fcn.0045306d(iVar3 + 1);\n    iVar4 = fcn.0043c300();\n    fcn.00453710(iVar3, 0, iVar4 + 1);\n    uVar5 = fcn.0043c300(0);\n    fcn.0043c290(iVar3, uVar5);\n    uVar8 = 0;\n    iVar4 = fcn.0043c300();\n    if (iVar4 != 0) {\n        do {\n            uVar1 = fcn.0043e780();\n            *(uVar8 + iVar3) = uVar1;\n            uVar8 = uVar8 + 1;\n            uVar6 = fcn.0043c300();\n        } while (uVar8 < uVar6);\n    }\n    uVar7 = fcn.0043c300();\n    uVar5 = uStack8;\n    fcn.0043c980(iVar3, uVar7);\n    fcn.00452a07(iVar3);\n    *in_FS_OFFSET = puVar2;\n    return uVar5;\n}\n",
        "token_count": 422
    },
    "0043e950": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.0043e950(uint param_1, uint param_2)\n\n{\n    uint arg_8h;\n    uint uStack72;\n    uchar auStack68 [63];\n    uchar uStack5;\n    uint32_t uStack4;\n    \n    uStack4 = *0x4b4f00 ^ &uStack72;\n    uStack72 = 0;\n    fcn.0043be10(auStack68, 0x3f, 0x48f2fc, param_2);\n    arg_8h = 0xffffffff;\n    uStack5 = 0;\n    fcn.0043c980(auStack68);\n    fcn.004529f8(arg_8h);\n    return;\n}\n",
        "token_count": 162
    },
    "0043e9f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0043e9f0(void)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    iVar5 = 0;\n    puVar1 = fcn.0043bff0();\n    iVar2 = fcn.0043bff0();\n    iVar3 = fcn.0043c300();\n    for (; puVar1 != iVar2 + iVar3; puVar1 = puVar1 + 1) {\n        iVar4 = fcn.0043e9b0(*puVar1);\n        iVar5 = iVar5 * 0x10 + iVar4;\n    }\n    return iVar5;\n}\n",
        "token_count": 162
    },
    "0043ec00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043ec00(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x486228;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &piStack12;\n    uStack4 = 0;\n    uVar5 = 0;\n    iVar2 = fcn.0043c300(uVar1);\n    if (iVar2 != 0) {\n        iVar2 = fcn.00448980();\n        do {\n            uVar1 = uVar5;\n            if (iVar2 == 0) {\n                puVar3 = fcn.0043c000();\n                *(param_1 + uVar5 * 2) = *puVar3;\n                *(param_1 + 1 + uVar5 * 2) = 0;\n            }\n            else {\n                *(param_1 + uVar5 * 2) = 0;\n                puVar3 = fcn.0043c000();\n                *(param_1 + 1 + uVar5 * 2) = *puVar3;\n            }\n            uVar5 = uVar5 + 1;\n            uVar4 = fcn.0043c300();\n        } while (uVar5 < uVar4);\n    }\n    uStack4 = 0xffffffff;\n    fcn.0043c360(uVar1);\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 398
    },
    "0043ed70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuchar __thiscall fcn.0043ed70(int32_t param_1, uint8_t param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint32_t in_EAX;\n    \n    uVar1 = *((in_EAX & 0xff) + 0x304 + param_1);\n    uVar2 = *(param_2 + 0x304 + param_1) + uVar1;\n    return *(uVar2 + 0x204 + (uVar2 < uVar1) + param_1);\n}\n",
        "token_count": 127
    },
    "00440a80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00440a80(int32_t *param_1, int32_t param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    \n    param_1[1] = param_1[1] + param_3;\n    if (param_3 != 0) {\n        do {\n            uVar1 = 0x40U - *param_1;\n            if (param_3 < 0x40U - *param_1) {\n                uVar1 = param_3;\n            }\n            fcn.00452a10(*param_1 + 0x18 + param_1, param_2, uVar1);\n            *param_1 = *param_1 + uVar1;\n            param_2 = param_2 + uVar1;\n            param_3 = param_3 - uVar1;\n            if (*param_1 == 0x40) {\n                fcn.00440040();\n                *param_1 = 0;\n            }\n        } while (param_3 != 0);\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "00441240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "access PEB ldr_data"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441240(int32_t param_1)\n\n{\n    int32_t **in_FS_OFFSET;\n    code *pcVar1;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x48635f;\n    piStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack12;\n    uStack4 = 4;\n    fcn.00459cc6(param_1 + 0x44, 4, 4, fcn.0043c360);\n    pcVar1 = fcn.0043c360;\n    fcn.00459cc6(param_1 + 0x34, 4, 4, fcn.0043c360);\n    fcn.0043c360();\n    fcn.0043c360();\n    fcn.0043c100();\n    fcn.0043c100();\n    *in_FS_OFFSET = pcVar1;\n    return;\n}\n",
        "token_count": 222
    },
    "00441440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00441440(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x4863f6;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &piStack12;\n    iVar2 = fcn.00445100(uVar1);\n    if (iVar2 == 0) {\n        iVar2 = fcn.0045306d(0x40);\n        uStack4 = 1;\n        if (iVar2 != 0) {\n            uVar3 = fcn.00445030(0x1000);\n            uVar3 = fcn.004443b0(*(param_1 + 100), uVar3);\n            goto code_r0x004414e1;\n        }\n    }\n    else {\n        iVar2 = fcn.0045306d(0x44);\n        uStack4 = 0;\n        if (iVar2 != 0) {\n            uVar3 = fcn.00445030(0x1000);\n            uVar3 = fcn.004445e0(*(param_1 + 100), uVar3);\n            goto code_r0x004414e1;\n        }\n    }\n    uVar3 = 0;\ncode_r0x004414e1:\n    *(param_1 + 0xc) = uVar3;\n    *in_FS_OFFSET = unaff_EDI;\n    return 1;\n}\n",
        "token_count": 400
    },
    "00441e60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00441e60(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    code **ppcVar4;\n    uchar auStack44 [8];\n    uchar auStack36 [4];\n    uchar auStack32 [4];\n    uchar uStack28;\n    uchar auStack24 [4];\n    uchar uStack20;\n    uchar auStack16 [4];\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x486538;\n    uStack12 = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &stack0xffffffc0;\n    *in_FS_OFFSET = &uStack12;\n    uVar2 = fcn.0043e050(auStack16, uVar1);\n    uStack8 = 0;\n    uVar3 = fcn.0043e030(auStack24);\n    uStack12._0_1_ = 1;\n    fcn.0043c7b0(auStack32, uVar3, uVar2);\n    uStack12 = CONCAT31(uStack12._1_3_, 2);\n    fcn.0043e010(auStack36);\n    auStack16[0] = 3;\n    fcn.0043d0a0(auStack44);\n    uStack20 = 4;\n    uVar2 = fcn.00444e60(&stack0xffffffcc, 2);\n    uStack28 = 5;\n    fcn.0043ea40(&stack0xffffffc0, uVar2);\n    ppcVar4 = **(param_1 + 0x7c);\n    uStack28 = 6;\n    uVar2 = fcn.0043bff0(param_1 + 0x58, 0);\n    uVar2 = fcn.0043bff0(0x48f32c, uVar2);\n    uVar2 = fcn.0043bff0(uVar2);\n    uVar2 = fcn.0043bff0(uVar2);\n    (**ppcVar4)(uVar2);\n    fcn.0043c360();\n    fcn.0043c360();\n    fcn.0043c360();\n    fcn.0043c360();\n    fcn.0043c360();\n    fcn.0043c360();\n    fcn.0043c360();\n    *in_FS_OFFSET = unaff_EDI;\n    return;\n}\n",
        "token_count": 598
    },
    "00441fe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "PEB access",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441fe0(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    code **ppcVar4;\n    uchar auStack40 [8];\n    uchar auStack32 [8];\n    uchar auStack24 [8];\n    uchar auStack16 [4];\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x486588;\n    uStack12 = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &stack0xffffffc8;\n    *in_FS_OFFSET = &uStack12;\n    fcn.0043dff0(auStack16, uVar1);\n    uStack8 = 0;\n    fcn.0043d0d0(auStack24);\n    uStack12 = CONCAT31(uStack12._1_3_, 1);\n    fcn.0043e050(auStack32);\n    auStack16[0] = 2;\n    uVar2 = fcn.00444eb0(auStack40, 2);\n    auStack24[0] = 3;\n    iVar3 = fcn.0043ea40(&stack0xffffffcc, uVar2);\n    ppcVar4 = **(param_1 + 0x7c);\n    auStack24[0] = 4;\n    uVar2 = fcn.0043bff0(param_1 + 0x5c, 0);\n    uVar2 = fcn.0043bff0(0x48f32c, uVar2);\n    uVar2 = fcn.0043bff0(uVar2);\n    uVar2 = fcn.0043bff0(uVar2);\n    (**ppcVar4)(uVar2);\n    fcn.0043c360();\n    fcn.0043c360();\n    fcn.0043c360();\n    fcn.0043c360();\n    fcn.0043c360();\n    *in_FS_OFFSET = iVar3;\n    return;\n}\n",
        "token_count": 483
    },
    "00442b80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00442b80(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    \n    iVar1 = fcn.00442b00();\n    if (iVar1 != 0) {\n        uVar2 = fcn.00445030();\n        uVar4 = 0;\n        uVar3 = fcn.0045306d(0x400);\n        if (uVar2 != 0) {\n            do {\n                if (uVar2 - uVar4 < 0x401) {\n                    iVar1 = (**(**(param_1 + 100) + 0x2c))(uVar3, uVar2 - uVar4, 1, 0);\n                }\n                else {\n                    iVar1 = (**(**(param_1 + 100) + 0x2c))(uVar3, 0x400);\n                }\n                uVar4 = uVar4 + iVar1;\n            } while (uVar4 < uVar2);\n        }\n        fcn.00452a07(uVar3);\n        return;\n    }\n    *(param_1 + 0x70) = 1;\n    *(param_1 + 0x74) = 1;\n    return;\n}\n",
        "token_count": 292
    },
    "00442c00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00442c00(code **param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x486825;\n    piStack12 = *in_FS_OFFSET;\n    uVar2 = *0x4b4f00 ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = vtable.PR_HTTP::TmHttpURLConnection.0;\n    uStack4 = 5;\n    if (param_1[0x19] != NULL) {\n        (**(*param_1[0x19] + 0x40))(uVar2);\n    }\n    pcVar1 = param_1[0x18];\n    if (pcVar1 != NULL) {\n        fcn.00441240();\n        fcn.00452a07(pcVar1);\n    }\n    if (param_1[0x1e] != NULL) {\n        (**(*param_1[0x1e] + 0x10))(1);\n    }\n    if (param_1[0x20] != NULL) {\n        (**(*param_1[0x20] + 0x10))(1);\n    }\n    if (param_1[0x1f] != NULL) {\n        (**(*param_1[0x1f] + 0x10))(1);\n    }\n    fcn.00440d90();\n    uStack4._0_1_ = 4;\n    fcn.0043c360();\n    uStack4._0_1_ = 3;\n    fcn.0043c360();\n    uStack4._0_1_ = 2;\n    fcn.0043c360();\n    uStack4._0_1_ = 1;\n    fcn.0043c360();\n    uStack4 = uStack4._1_3_ << 8;\n    fcn.0043c360();\n    uStack4 = 0xffffffff;\n    fcn.004452b0();\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 503
    },
    "00443fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00443fa0(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    \n    iVar1 = 0;\n    uVar3 = 0;\n    iVar4 = 0;\n    iVar6 = 0;\n    iVar7 = iVar6;\n    if (0 < param_3) {\n        do {\n            uVar5 = *(*(param_1 + iVar4) + 0x4905a8);\n            iVar2 = iVar1;\n            iVar7 = iVar6;\n            if (-1 < uVar5) {\n                iVar2 = iVar1 + 6;\n                uVar3 = uVar3 << 6 | uVar5;\n                if (7 < iVar2) {\n                    iVar2 = iVar1 + -2;\n                    iVar7 = iVar6 + 1;\n                    *(iVar6 + param_2) = uVar3 >> (iVar2 & 0x1f);\n                }\n            }\n            iVar4 = iVar4 + 1;\n            iVar1 = iVar2;\n            iVar6 = iVar7;\n        } while (iVar4 < param_3);\n    }\n    return iVar7;\n}\n",
        "token_count": 307
    },
    "00444010": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00444010(code **param_1)\n\n{\n    uint32_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x4868e8;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &stack0xffffffec;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = vtable.PR_HTTP::TmInputSocketStream.0;\n    uStack4 = 0;\n    if (param_1[4] != NULL) {\n        (**(*param_1[4] + 0x40))(uVar1);\n    }\n    if (param_1[5] != NULL) {\n        fcn.00452a07(param_1[5]);\n    }\n    uStack4 = 0xffffffff;\n    fcn.004488e0();\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 232
    },
    "00444250": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00444250(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    return (param_3 + param_2) % *(param_1 + 0x18);\n}\n",
        "token_count": 58
    },
    "00444270": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00444270(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    param_2 = param_2 - param_3;\n    if (param_2 < 0) {\n        param_2 = param_2 + *(param_1 + 0x18);\n    }\n    return param_2;\n}\n",
        "token_count": 87
    },
    "00445100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool fcn.00445100(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t **in_FS_OFFSET;\n    uint uStack36;\n    uint32_t *puStack32;\n    uint uStack24;\n    uchar uStack20;\n    uint32_t *puStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x486ab8;\n    puStack12 = *in_FS_OFFSET;\n    puStack32 = *0x4b4f00 ^ &stack0xffffffe4;\n    *in_FS_OFFSET = &puStack12;\n    uStack36 = 0xffffffff;\n    fcn.0043c980(\"Transfer-Encoding\");\n    puStack12 = NULL;\n    uVar1 = fcn.00444f00(&uStack24, &puStack32);\n    uStack20 = 1;\n    fcn.0043e870(&uStack36, uVar1);\n    uStack20 = 2;\n    iVar2 = fcn.0043bfb0(\"chunked\");\n    uStack24._0_1_ = 1;\n    fcn.0043c360();\n    uStack24 = uStack24._1_3_ << 8;\n    fcn.0043c360();\n    uStack24 = 0xffffffff;\n    fcn.0043c360();\n    *in_FS_OFFSET = puStack32;\n    return iVar2 == 0;\n}\n",
        "token_count": 339
    },
    "004452e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004452e0(char *param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t arg_8h;\n    \n    if (param_1 == NULL) {\n        return 0;\n    }\n    pcVar2 = param_1;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    arg_8h = fcn.00459dfb(1, pcVar2 + (1 - (param_1 + 1)));\n    if (arg_8h == 0) {\n        return 0;\n    }\n    fcn.004537a0(arg_8h, pcVar2 + (1 - (param_1 + 1)), param_1);\n    return arg_8h;\n}\n",
        "token_count": 193
    },
    "00445700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00445700(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 != 0) {\n        do {\n            if (*(param_1 + 0x14) != 0) {\n                fcn.00455f3f(*(param_1 + 0x14));\n            }\n            if (*(param_1 + 0x18) != 0) {\n                fcn.00455f3f(*(param_1 + 0x18));\n            }\n            iVar1 = *(param_1 + 0x1c);\n            fcn.00455f3f(param_1);\n            param_1 = iVar1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 166
    },
    "00445eb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "initialize Winsock library"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00445eb0(code **param_1)\n\n{\n    uchar *arg_8h;\n    uchar auStack404 [400];\n    uint32_t uStack4;\n    \n    arg_8h = auStack404;\n    uStack4 = *0x4b4f00 ^ auStack404;\n    *param_1 = vtable.PR_HTTP::TmSocket.0;\n    (*_sym.imp.WS2_32.dll_WSAStartup)(0x101);\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = 0x1;\n    param_1[1] = 0xffffffff;\n    fcn.004529f8(arg_8h);\n    return;\n}\n",
        "token_count": 169
    },
    "00447160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00447160(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0045306d((param_2 - param_1) + 1);\n    fcn.00452a10(iVar1, param_1, param_2 - param_1);\n    *((iVar1 - param_1) + param_2) = 0;\n    return iVar1;\n}\n",
        "token_count": 105
    },
    "00447490": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.00447490(code **param_1)\n\n{\n    fcn.00448930();\n    *param_1 = vtable.PR_HTTP::TmDigestAuthenticator.0;\n    fcn.004586b0(param_1 + 5, \"realm\", 0xff);\n    *(param_1 + 0x113) = 0;\n    param_1[0x45] = param_1 + 2;\n    fcn.004586b0(param_1 + 0x46, \"opaque\", 0xff);\n    *(param_1 + 0x217) = 0;\n    param_1[0x86] = param_1 + 3;\n    fcn.004586b0(param_1 + 0x87, \"nonce\", 0xff);\n    *(param_1 + 0x31b) = 0;\n    param_1[199] = param_1 + 4;\n    return param_1;\n}\n",
        "token_count": 217
    },
    "00448950": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00448950(code **param_1)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = vtable.PR_HTTP::TmAuthenticator.0;\n    iVar1 = fcn.0043c030();\n    if (iVar1 != 0) {\n        fcn.0043c010(iVar1);\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "00448780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.00448780(code **param_1)\n\n{\n    uint32_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x486d58;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x4b4f00 ^ &stack0xffffffec;\n    *in_FS_OFFSET = &piStack12;\n    fcn.00448930(uVar1);\n    uStack4 = 0;\n    *param_1 = vtable.PR_HTTP::TmBasicAuthenticator.0;\n    fcn.0043c570(\"BASIC\");\n    *in_FS_OFFSET = param_1;\n    return param_1;\n}\n",
        "token_count": 186
    },
    "004489f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004489f0(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        fcn.00453710(param_1, param_2);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "00449ad0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00449ad0(int32_t param_1, int32_t param_2)\n\n{\n    uchar *in_EAX;\n    \n    if (param_2 != 0) {\n        param_1 = param_1 - in_EAX;\n        do {\n            *in_EAX = in_EAX[param_1];\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "00449270": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00449270(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    do {\n        if (*(uVar1 + param_2) != *(*(uVar1 + param_2) + 0x490cf8)) {\n            return 0;\n        }\n        uVar1 = uVar1 + 1;\n    } while (uVar1 < 8);\n    return 1;\n}\n",
        "token_count": 110
    },
    "0044a940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a940(uint *param_1)\n\n{\n    char cVar1;\n    char *in_EAX;\n    \n    *param_1 = 0x12345678;\n    param_1[1] = 0x23456789;\n    param_1[2] = 0x34567890;\n    cVar1 = *in_EAX;\n    while (cVar1 != '\\0') {\n        fcn.0044a8fd(cVar1);\n        in_EAX = in_EAX + 1;\n        cVar1 = *in_EAX;\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "0044ab85": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044ab85(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t in_ECX;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_4h;\n    \n    iVar1 = 0;\n    if (0 < unaff_ESI) {\n        do {\n            *(&var_4h + iVar1) = in_ECX;\n            in_ECX = in_ECX >> 8;\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < unaff_ESI);\n    }\n    if ((in_ECX != 0) && (0 < unaff_ESI)) {\n        fcn.00453710(&var_4h, 0xff);\n    }\n    iVar1 = (**(unaff_EDI + 8))(*(unaff_EDI + 0x1c), arg_8h, &var_4h);\n    return -(iVar1 != unaff_ESI);\n}\n",
        "token_count": 222
    },
    "0044abce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044abce(uint32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    \n    iVar1 = 0;\n    if (0 < param_2) {\n        do {\n            *(iVar1 + unaff_ESI) = param_1;\n            param_1 = param_1 >> 8;\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < param_2);\n    }\n    if ((param_1 != 0) && (0 < param_2)) {\n        fcn.00453710();\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "0044af9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint fcn.0044af9c(void)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    int32_t unaff_ESI;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    if ((*(unaff_ESI + 0x4090) != 0) && (*(unaff_ESI + 0x6c) != 0)) {\n        puVar3 = unaff_ESI + 0x88;\n        do {\n            uVar1 = fcn.0044a8e6();\n            fcn.0044a8fd(*puVar3);\n            *puVar3 = *puVar3 ^ uVar1;\n            puVar3 = puVar3 + 1;\n        } while (puVar3 + (-0x88 - unaff_ESI) < *(unaff_ESI + 0x6c));\n    }\n    iVar2 = (**(unaff_ESI + 8))(*(unaff_ESI + 0x1c), *(unaff_ESI + 0x20), unaff_ESI + 0x88, *(unaff_ESI + 0x6c));\n    if (iVar2 != *(unaff_ESI + 0x6c)) {\n        var_8h = 0xffffffff;\n    }\n    *(unaff_ESI + 0x6c) = 0;\n    return var_8h;\n}\n",
        "token_count": 334
    },
    "0044b952": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0044b952(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h)\n\n{\n    fcn.0044b491(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, arg_2ch, arg_30h, \n                 0xfffffff1, 8, 0, 0, 0);\n    return;\n}\n",
        "token_count": 163
    },
    "0044b989": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0044b989(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    fcn.0044b952(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, arg_2ch, 0);\n    return;\n}\n",
        "token_count": 135
    },
    "0044c2a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.0044c2a4(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    \n    *(unaff_ESI + 0x3c) = *(unaff_ESI + 0x2c) * 2;\n    *(*(unaff_ESI + 0x44) + -2 + *(unaff_ESI + 0x4c) * 2) = 0;\n    fcn.00453710(*(unaff_ESI + 0x44), 0, *(unaff_ESI + 0x4c) * 2 + -2);\n    iVar1 = *(unaff_ESI + 0x84) * 0xc;\n    *(unaff_ESI + 0x80) = *(iVar1 + 0x491f5a);\n    *(unaff_ESI + 0x8c) = *(iVar1 + 0x491f58);\n    *(unaff_ESI + 0x90) = *(iVar1 + 0x491f5c);\n    *(unaff_ESI + 0x7c) = *(iVar1 + 0x491f5e);\n    *(unaff_ESI + 0x6c) = 0;\n    *(unaff_ESI + 0x5c) = 0;\n    *(unaff_ESI + 0x74) = 0;\n    *(unaff_ESI + 0x68) = 0;\n    *(unaff_ESI + 0x48) = 0;\n    *(unaff_ESI + 0x78) = 2;\n    *(unaff_ESI + 0x60) = 2;\n    return;\n}\n",
        "token_count": 377
    },
    "0044d00d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044d00d(void)\n\n{\n    int32_t in_EAX;\n    ushort *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = in_EAX + 0x94;\n    iVar2 = 0x11e;\n    do {\n        *puVar1 = 0;\n        puVar1 = puVar1 + 2;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    puVar1 = in_EAX + 0x988;\n    iVar2 = 0x1e;\n    do {\n        *puVar1 = 0;\n        puVar1 = puVar1 + 2;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    puVar1 = in_EAX + 0xa7c;\n    iVar2 = 0x13;\n    do {\n        *puVar1 = 0;\n        puVar1 = puVar1 + 2;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    *(in_EAX + 0x16ac) = 0;\n    *(in_EAX + 0x16a8) = 0;\n    *(in_EAX + 0x16b0) = 0;\n    *(in_EAX + 0x16a0) = 0;\n    *(in_EAX + 0x494) = 1;\n    return;\n}\n",
        "token_count": 326
    },
    "0044d06b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044d06b(int32_t arg_8h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t in_EAX;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t unaff_EDI;\n    bool bVar10;\n    uint var_4h;\n    \n    iVar5 = *(in_EAX + 0xb5c + arg_8h * 4);\n    iVar9 = *(in_EAX + 0x1450);\n    iVar8 = arg_8h * 2;\n    bVar10 = SBORROW4(iVar8, iVar9);\n    iVar7 = iVar8 - iVar9;\n    if (iVar8 <= iVar9) {\n        do {\n            iVar9 = iVar8;\n            if (bVar10 != iVar7 < 0) {\n                iVar7 = *(in_EAX + 0xb60 + iVar8 * 4);\n                uVar3 = *(unaff_EDI + iVar7 * 4);\n                uVar4 = *(unaff_EDI + *(in_EAX + 0xb5c + iVar8 * 4) * 4);\n                if ((uVar3 < uVar4) ||\n                   ((uVar3 == uVar4 &&\n                    (uVar2 = *(iVar7 + 0x1458 + in_EAX),  puVar1 = *(in_EAX + 0xb5c + iVar8 * 4) + 0x1458 + in_EAX, \n                    uVar2 < *puVar1 || uVar2 == *puVar1)))) {\n                    iVar9 = iVar8 + 1;\n                }\n            }\n            iVar7 = *(in_EAX + 0xb5c + iVar9 * 4);\n            uVar3 = *(unaff_EDI + iVar5 * 4);\n            uVar4 = *(unaff_EDI + iVar7 * 4);\n            if ((uVar3 < uVar4) ||\n               ((uVar3 == uVar4 &&\n                (uVar2 = *(iVar5 + 0x1458 + in_EAX),  puVar1 = iVar7 + 0x1458 + in_EAX, \n                uVar2 < *puVar1 || uVar2 == *puVar1)))) break;\n            *(in_EAX + 0xb5c + arg_8h * 4) = iVar7;\n            iVar6 = *(in_EAX + 0x1450);\n            iVar8 = iVar9 * 2;\n            bVar10 = SBORROW4(iVar8, iVar6);\n            iVar7 = iVar8 - iVar6;\n            arg_8h = iVar9;\n        } while (iVar8 <= iVar6);\n    }\n    *(in_EAX + 0xb5c + arg_8h * 4) = iVar5;\n    return;\n}\n",
        "token_count": 670
    },
    "0044de77": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044de77(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x16bc) == 0x10) {\n        *(*(in_EAX + 8) + *(in_EAX + 0x14)) = *(in_EAX + 0x16b8);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 0x14) + *(in_EAX + 8)) = *(in_EAX + 0x16b9);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(in_EAX + 0x16b8) = 0;\n        *(in_EAX + 0x16bc) = 0;\n        return;\n    }\n    if (7 < *(in_EAX + 0x16bc)) {\n        *(*(in_EAX + 8) + *(in_EAX + 0x14)) = *(in_EAX + 0x16b8);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(in_EAX + 0x16bc) = *(in_EAX + 0x16bc) + -8;\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b9);\n    }\n    return;\n}\n",
        "token_count": 336
    },
    "0044e017": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_22h\n\nvoid __cdecl fcn.0044e017(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    ushort uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t in_EDX;\n    int32_t iVar5;\n    int32_t unaff_ESI;\n    uchar var_24h [2];\n    uint var_22h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b4f00 ^ &stack0xfffffffc;\n    iVar5 = 0;\n    iVar1 = 0;\n    iVar3 = 1;\n    do {\n        iVar1 = (*(in_EDX + iVar3 * 2 + -2) + iVar1) * 2;\n        *(var_24h + iVar3 * 2) = iVar1;\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x10);\n    if (-1 < arg_8h) {\n        do {\n            uVar4 = *(unaff_ESI + 2 + iVar5 * 4);\n            if (uVar4 != 0) {\n                iVar1 = *(var_24h + uVar4 * 2);\n                *(var_24h + uVar4 * 2) = iVar1 + 1;\n                uVar2 = fcn.0044de58(iVar1, uVar4);\n                *(unaff_ESI + iVar5 * 4) = uVar2;\n            }\n            iVar5 = iVar5 + 1;\n        } while (iVar5 <= arg_8h);\n    }\n    fcn.004529f8(_var_24h);\n    return;\n}\n",
        "token_count": 389
    },
    "0044e2d7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044e2d7(int32_t arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(arg_8h + 0x16bc);\n    if (iVar1 < 0xe) {\n        *(arg_8h + 0x16b8) = *(arg_8h + 0x16b8) | arg_14h << (iVar1 & 0x1f);\n        *(arg_8h + 0x16bc) = iVar1 + 3;\n    }\n    else {\n        *(arg_8h + 0x16b8) = *(arg_8h + 0x16b8) | arg_14h << (iVar1 & 0x1f);\n        *(*(arg_8h + 8) + *(arg_8h + 0x14)) = *(arg_8h + 0x16b8);\n        *(arg_8h + 0x14) = *(arg_8h + 0x14) + 1;\n        *(*(arg_8h + 0x14) + *(arg_8h + 8)) = *(arg_8h + 0x16b9);\n        iVar1 = *(arg_8h + 0x16bc);\n        *(arg_8h + 0x14) = *(arg_8h + 0x14) + 1;\n        *(arg_8h + 0x16bc) = iVar1 + -0xd;\n        *(arg_8h + 0x16b8) = arg_14h >> (0x10U - iVar1 & 0x1f);\n    }\n    fcn.0044df3b(1);\n    return;\n}\n",
        "token_count": 408
    },
    "0044f42f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044f42f(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    fcn.00457cbc(arg_8h, *(arg_ch * 4 + 0x493a84), arg_10h);\n    return;\n}\n",
        "token_count": 66
    },
    "0044f44c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044f44c(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    fcn.0045c9d7(arg_8h, *(arg_ch * 4 + 0x493ac0), arg_10h);\n    return;\n}\n",
        "token_count": 69
    },
    "00451f2b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00451f2b(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < arg_14h) {\n        do {\n            if (*(arg_10h + iVar1 * 8) == 0.0) {\n                return arg_8h;\n            }\n            fcn.00451c48(arg_8h, arg_ch, *(arg_10h + iVar1 * 8));\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < arg_14h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 158
    },
    "004521be": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004521be(uint arg_8h, uint arg_ch)\n\n{\n    fcn.004521e4(arg_8h, arg_ch);\n    return arg_8h;\n}\n",
        "token_count": 45
    },
    "00452949": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00452949(int16_t *arg_8h, int16_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint uVar2;\n    \n    uVar1 = arg_ch[3] >> 4 & 0x7ff;\n    if (uVar1 == 0x7ff) {\n        *arg_8h = 0;\n        if (((((*(arg_ch + 3) & 0xf) == 0) && (arg_ch[2] == 0)) && (arg_ch[1] == 0)) && (*arg_ch == 0)) {\n            uVar2 = 1;\n        }\n        else {\n            uVar2 = 2;\n        }\n    }\n    else {\n        if ((uVar1 == 0) && (uVar1 = fcn.0045267c(arg_ch),  0 < uVar1)) {\n            *arg_8h = 0;\n            return 0;\n        }\n        arg_ch[3] = arg_ch[3] & 0xbfefU | 0x3fe0;\n        *arg_8h = uVar1 - 0x3fe;\n        uVar2 = 0xffffffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 278
    },
    "0045400a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.0045400a(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint arg_10h;\n    uint var_4h;\n    \n    fcn.0045e910(0x4ac050, 0xc);\n    if (*(unaff_EBP + 8) == 0) {\n        puVar1 = fcn.0045c4f2();\n        *puVar1 = 0x16;\n        fcn.0045e4f8();\n    }\n    else {\n        iVar2 = fcn.00456012();\n        fcn.00456057(1, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0;\n        iVar2 = fcn.00456012();\n        arg_8h_00 = fcn.0045f529(iVar2 + 0x20);\n        iVar2 = unaff_EBP + 0xc;\n        arg_10h = 0;\n        uVar4 = *(unaff_EBP + 8);\n        iVar3 = fcn.00456012();\n        uVar4 = fcn.0045f5cf(iVar3 + 0x20, uVar4, arg_10h, iVar2);\n        *(unaff_EBP + -0x1c) = uVar4;\n        iVar2 = fcn.00456012();\n        fcn.0045f4f8(arg_8h_00, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.004540a3();\n    }\n    fcn.0045e955();\n    return;\n}\n",
        "token_count": 451
    },
    "004540a3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004540a3(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00456012();\n    fcn.004560c1(1, iVar1 + 0x20);\n    return;\n}\n",
        "token_count": 54
    },
    "00455a2b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00455a2b(uint arg_8h)\n\n{\n    fcn.0045a502(arg_8h, 0, 10);\n    return;\n}\n",
        "token_count": 42
    },
    "004655a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004655a4(void)\n\n{\n    code **ppcVar1;\n    \n    for (ppcVar1 = 0x4ab198; ppcVar1 < 0x4ab198; ppcVar1 = ppcVar1 + 1) {\n        if (*ppcVar1 != NULL) {\n            (**ppcVar1)();\n        }\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "00468d0b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00468d0b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_2c8h;\n    \n    fcn.00468ecd(arg_8h, arg_ch);\n    fcn.00468ecd(arg_10h, arg_14h);\n    fcn.00468867();\n    fcn.00468d4c();\n    return;\n}\n",
        "token_count": 99
    },
    "00468e9a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00468e9a(uint arg_8h, uint arg_ch)\n\n{\n    uint var_2c8h;\n    \n    fcn.00468ecd(arg_8h, arg_ch);\n    fcn.00468800();\n    fcn.00468d4c();\n    return;\n}\n",
        "token_count": 70
    },
    "00468ecd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nfloat10 __cdecl fcn.00468ecd(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    float10 fVar1;\n    uint var_ah;\n    uint var_6h;\n    uint var_2h;\n    \n    if ((arg_ch._2_2_ & 0x7ff0) == 0x7ff0) {\n        fVar1 = CONCAT28(arg_ch._2_2_, CONCAT44(arg_ch << 0xb | arg_8h >> 0x15, arg_8h)) | 0x7fff;\n    }\n    else {\n        fVar1 = CONCAT26(arg_ch._2_2_, CONCAT24(arg_ch, arg_8h));\n    }\n    return fVar1;\n}\n",
        "token_count": 180
    },
    "0046e3d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0046e3d4(uint16_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    uVar1 = *arg_8h;\n    while (uVar1 != 0) {\n        arg_8h = arg_8h + 1;\n        if (uVar1 - 0x61 < 6) {\n            uVar1 = uVar1 - 0x27;\n        }\n        else if (uVar1 - 0x41 < 6) {\n            uVar1 = uVar1 - 7;\n        }\n        iVar2 = iVar2 * 0x10 + (uVar1 - 0x30);\n        uVar1 = *arg_8h;\n    }\n    return iVar2;\n}\n",
        "token_count": 188
    },
    "0046ecd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046ecd8(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.0046ebc5(arg_ch, arg_10h, arg_14h, arg_18h, arg_8h, 1);\n    return;\n}\n",
        "token_count": 79
    },
    "00470871": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00470871(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.00470059(arg_ch, arg_10h, arg_14h, arg_18h, arg_8h, 1);\n    return;\n}\n",
        "token_count": 76
    },
    "00472e00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00472e00(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t unaff_EBX;\n    \n    if (in_EAX != 0) {\n        do {\n            iVar1 = *(in_EAX + 4);\n            (**(unaff_EBX + 0x14))(*(in_EAX + 0x10));\n            (**(unaff_EBX + 0x14))(in_EAX);\n            in_EAX = iVar1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "00473060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint fcn.00473060(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    puVar2 = *(param_1 + 0x16c);\n    while( true ) {\n        if (puVar2 == NULL) {\n            return 1;\n        }\n        iVar3 = puVar2[9];\n        iVar1 = puVar2[6] * 2 + 2;\n        iVar4 = iVar3 + iVar1;\n        if (puVar2[1] == iVar4) break;\n        iVar5 = (puVar2[2] + 1 & 0xfffffffe) + iVar1;\n        if (puVar2[10] - iVar3 < iVar5) {\n            iVar4 = (**(param_1 + 0x10))(iVar3, iVar5);\n            if (iVar4 == 0) {\n                return 0;\n            }\n            if (puVar2[3] == puVar2[9]) {\n                puVar2[3] = iVar4;\n            }\n            if (puVar2[4] != 0) {\n                puVar2[4] = iVar4 + (puVar2[4] - puVar2[9] >> 1) * 2;\n            }\n            puVar2[9] = iVar4;\n            puVar2[10] = iVar4 + iVar5;\n            iVar4 = iVar4 + iVar1;\n        }\n        fcn.00452a10(iVar4, puVar2[1], puVar2[2]);\n        puVar2[1] = iVar4;\n        puVar2 = *puVar2;\n    }\n    return 1;\n}\n",
        "token_count": 391
    },
    "00473820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00473820(uint16_t *param_1, uint16_t *param_2)\n\n{\n    uint16_t *puVar1;\n    uint32_t uVar2;\n    \n    uVar2 = *param_1;\n    if (*param_1 == *param_2) {\n        do {\n            if (uVar2 == 0) {\n                return CONCAT31(uVar2 >> 8, 1);\n            }\n            puVar1 = param_1 + 1;\n            uVar2 = *puVar1;\n            param_1 = param_1 + 1;\n            param_2 = param_2 + 1;\n        } while (*puVar1 == *param_2);\n    }\n    return uVar2 & 0xffffff00;\n}\n",
        "token_count": 173
    },
    "00473850": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encode data using XOR",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00473850(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    uVar1 = *param_2;\n    while (uVar1 != 0) {\n        param_2 = param_2 + 1;\n        uVar2 = uVar2 * 0xf4243 ^ uVar1;\n        uVar1 = *param_2;\n    }\n    return uVar2;\n}\n",
        "token_count": 122
    },
    "00473b30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00473b30(void)\n\n{\n    int32_t *unaff_ESI;\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (unaff_ESI[2] != 0) {\n        do {\n            (**(unaff_ESI[4] + 8))(*(*unaff_ESI + uVar1 * 4));\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < unaff_ESI[2]);\n    }\n    (**(unaff_ESI[4] + 8))(*unaff_ESI);\n    return;\n}\n",
        "token_count": 138
    },
    "00473ba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00473ba0(uint param_1, int32_t **param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    if (*param_2 != param_2[1]) {\n        do {\n            iVar1 = **param_2;\n            piVar2 = *param_2 + 1;\n            *param_2 = piVar2;\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n        } while (piVar2 != param_2[1]);\n    }\n    return 0;\n}\n",
        "token_count": 132
    },
    "00473c20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00473c20(void)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *unaff_EDI;\n    \n    puVar2 = *unaff_EDI;\n    while (puVar2 != NULL) {\n        puVar1 = *puVar2;\n        (**(unaff_EDI[5] + 8))(puVar2);\n        puVar2 = puVar1;\n    }\n    puVar2 = unaff_EDI[1];\n    while (puVar2 != NULL) {\n        puVar1 = *puVar2;\n        (**(unaff_EDI[5] + 8))(puVar2);\n        puVar2 = puVar1;\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "00473c60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00473c60(void)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t **unaff_ESI;\n    int32_t iVar4;\n    \n    ppiVar1 = unaff_ESI[1];\n    if (ppiVar1 != NULL) {\n        if (unaff_ESI[4] == NULL) {\n            *unaff_ESI = ppiVar1;\n            unaff_ESI[1] = *ppiVar1;\n            **unaff_ESI = 0;\n            piVar3 = *unaff_ESI + 2;\n            unaff_ESI[4] = piVar3;\n            iVar4 = (*unaff_ESI)[1];\n            unaff_ESI[3] = piVar3;\n            unaff_ESI[2] = piVar3 + iVar4 * 2;\n            return CONCAT31(piVar3 >> 8, 1);\n        }\n        if (unaff_ESI[2] - unaff_ESI[4] >> 1 < ppiVar1[1]) {\n            piVar3 = *ppiVar1;\n            *ppiVar1 = *unaff_ESI;\n            piVar2 = unaff_ESI[1];\n            unaff_ESI[1] = piVar3;\n            *unaff_ESI = piVar2;\n            fcn.00452a10(*unaff_ESI + 2, unaff_ESI[4], (unaff_ESI[2] - unaff_ESI[4] >> 1) * 2);\n            piVar3 = unaff_ESI[4];\n            piVar2 = *unaff_ESI;\n            unaff_ESI[4] = piVar2 + 2;\n            unaff_ESI[3] = piVar2 + (unaff_ESI[3] - piVar3 >> 1) * 2 + 8;\n            iVar4 = piVar2[1];\n            unaff_ESI[2] = piVar2 + 2 + iVar4 * 2;\n            return CONCAT31(iVar4 >> 8, 1);\n        }\n    }\n    piVar3 = *unaff_ESI;\n    if ((piVar3 == NULL) || (unaff_ESI[4] != piVar3 + 2)) {\n        piVar3 = 0x400;\n        iVar4 = unaff_ESI[2] - unaff_ESI[4] >> 1;\n        if (0x3ff < iVar4) {\n            piVar3 = iVar4 * 2;\n        }\n        iVar4 = piVar3 * 2 + 8;\n        ppiVar1 = (**unaff_ESI[5])(iVar4);\n        if (ppiVar1 != NULL) {\n            ppiVar1[1] = piVar3;\n            *ppiVar1 = *unaff_ESI;\n            piVar3 = unaff_ESI[4];\n            *unaff_ESI = ppiVar1;\n            if (unaff_ESI[3] != piVar3) {\n                fcn.00452a10(ppiVar1 + 2, piVar3, (unaff_ESI[3] - piVar3 >> 1) * 2);\n            }\n            piVar3 = ppiVar1 + (unaff_ESI[3] - unaff_ESI[4] >> 1) * 2 + 8;\n            unaff_ESI[2] = iVar4 + ppiVar1;\n            unaff_ESI[3] = piVar3;\n            unaff_ESI[4] = ppiVar1 + 2;\n            return CONCAT31(piVar3 >> 8, 1);\n        }\n    }\n    else {\n        iVar4 = unaff_ESI[2] - unaff_ESI[4] >> 1;\n        ppiVar1 = (*unaff_ESI[5][1])(piVar3, iVar4 * 4 + 8);\n        *unaff_ESI = ppiVar1;\n        if (ppiVar1 != NULL) {\n            ppiVar1[1] = iVar4 * 2;\n            piVar3 = unaff_ESI[4];\n            piVar2 = *unaff_ESI + 2;\n            unaff_ESI[4] = piVar2;\n            unaff_ESI[2] = piVar2 + iVar4;\n            unaff_ESI[3] = *unaff_ESI + (unaff_ESI[3] - piVar3 >> 1) * 2 + 8;\n            return CONCAT31(piVar2 + iVar4 >> 8, 1);\n        }\n    }\n    return ppiVar1 & 0xffffff00;\n}\n",
        "token_count": 1044
    },
    "00474000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00474000(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    \n    iVar1 = (**(unaff_EBX + 0xc))((*(*(unaff_EBX + 0x164) + 0xa8) + *(*(unaff_EBX + 0x164) + 0xb0) * 10) * 2);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    fcn.00473ef0();\n    return iVar1;\n}\n",
        "token_count": 122
    },
    "00474170": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint8_t __thiscall fcn.00474170(int32_t param_1, uint32_t *param_2, uint param_3, uint32_t *param_4, char param_5)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    uint32_t *puVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint32_t *puVar5;\n    uint32_t uStack16;\n    int32_t iStack8;\n    uint32_t *puStack4;\n    \n    uVar1 = *param_2;\n    if (in_EAX == *(param_1 + 0x90)) {\n        puStack4 = param_1 + 0x120;\n        *puStack4 = uVar1;\n        puVar5 = param_1 + 0x124;\n    }\n    else {\n        puStack4 = *(param_1 + 300);\n        puVar5 = puStack4 + 1;\n    }\n    puVar3 = puStack4;\n    *puStack4 = uVar1;\n    *param_2 = 0;\n    iVar4 = (**(in_EAX + 8))();\n    *puVar5 = uStack16;\n    while (iVar4 + 4U < 0x2d) {\n        switch(*(*(iVar4 + 0x47444c) * 4 + 0x47442c)) {\n        case 0x4741fe:\n            if (*(param_1 + 0x3c) == NULL) goto code_r0x004742ed;\n            iStack8 = 10;\n            (**(param_1 + 0x3c))(*(param_1 + 4), &iStack8, 1);\n            break;\n        case 0x474226:\n            pcVar2 = *(param_1 + 0x3c);\n            if (pcVar2 == NULL) {\ncode_r0x004742ed:\n                if (*(param_1 + 0x50) != 0) {\n                    fcn.00473640(uVar1);\n                }\n            }\n            else if ((*(in_EAX + 0x49) == '\\0') || ((uVar1 & 1) != 0)) {\n                iStack8 = *(param_1 + 0x2c);\n                (**(in_EAX + 0x40))();\n                *puVar5 = uStack16;\n                (*pcVar2)(*(param_1 + 4), *(param_1 + 0x2c), iStack8 - *(param_1 + 0x2c) >> 1);\n                while (uVar1 != uStack16) {\n                    *puStack4 = uVar1;\n                    iStack8 = *(param_1 + 0x2c);\n                    (**(in_EAX + 0x40))();\n                    *puVar5 = uStack16;\n                    (*pcVar2)(*(param_1 + 4), *(param_1 + 0x2c), iStack8 - *(param_1 + 0x2c) >> 1);\n                }\n            }\n            else {\n                (*pcVar2)(*(param_1 + 4), uVar1, uStack16 - uVar1 >> 1);\n            }\n            break;\n        case 0x474353:\n            goto code_r0x00474353;\n        case 0x474362:\n            if (*(param_1 + 0x4c) == NULL) {\n                if (*(param_1 + 0x50) != 0) {\n                    fcn.00473640(uVar1);\n                }\n            }\n            else {\n                (**(param_1 + 0x4c))(*(param_1 + 4));\n            }\n            *param_2 = uStack16;\n            *param_4 = uStack16;\n            return (*(param_1 + 0x1e0) != 2) - 1U & 0x23;\n        case 0x4743cd:\n            *puVar3 = uStack16;\n            return 4;\n        case 0x4743dc:\n            if (param_5 != '\\0') {\n                *param_4 = uVar1;\n                return 0;\n            }\n            return 6;\n        case 0x474404:\n            if (param_5 != '\\0') {\n                *param_4 = uVar1;\n                return 0;\n            }\n            return 0x14;\n        }\n        puVar3 = puStack4;\n        *puStack4 = uStack16;\n        if (*(param_1 + 0x1e0) == 2) {\n            return 0x23;\n        }\n        if (*(param_1 + 0x1e0) == 3) {\n            *param_4 = uStack16;\n            return 0;\n        }\n        iVar4 = (**(in_EAX + 8))();\n        *puVar5 = uStack16;\n        uVar1 = uStack16;\n    }\ncode_r0x00474353:\n    *puVar3 = uStack16;\n    return 0x17;\n}\n",
        "token_count": 1127
    },
    "004746b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004746b0(int16_t **param_1)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t *piVar4;\n    int16_t *piVar5;\n    int16_t *piVar6;\n    \n    iVar2 = *(in_EAX + 0x164);\n    piVar5 = *param_1;\n    iVar1 = *piVar5;\n    do {\n        if (iVar1 == 0) {\n            return 1;\n        }\n        if (iVar1 == 0x3a) {\n            for (piVar6 = *param_1; piVar6 != piVar5; piVar6 = piVar6 + 1) {\n                if ((*(iVar2 + 0x5c) == *(iVar2 + 0x58)) && (cVar3 = fcn.00473c60(),  cVar3 == '\\0')) {\n                    return 0;\n                }\n                **(iVar2 + 0x5c) = *piVar6;\n                *(iVar2 + 0x5c) = *(iVar2 + 0x5c) + 2;\n            }\n            if ((*(iVar2 + 0x5c) == *(iVar2 + 0x58)) && (cVar3 = fcn.00473c60(),  cVar3 == '\\0')) {\n                return 0;\n            }\n            **(iVar2 + 0x5c) = 0;\n            *(iVar2 + 0x5c) = *(iVar2 + 0x5c) + 2;\n            piVar4 = fcn.00473880(*(iVar2 + 0x60), 8);\n            if (piVar4 == NULL) {\n                return 0;\n            }\n            if (*piVar4 == *(iVar2 + 0x60)) {\n                *(iVar2 + 0x60) = *(iVar2 + 0x5c);\n            }\n            else {\n                *(iVar2 + 0x5c) = *(iVar2 + 0x60);\n            }\n            param_1[1] = piVar4;\n        }\n        iVar1 = piVar5[1];\n        piVar5 = piVar5 + 1;\n    } while( true );\n}\n",
        "token_count": 515
    },
    "00474ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00474ac0(void)\n\n{\n    int32_t iVar1;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    code **unaff_ESI;\n    \n    iVar1 = (**unaff_ESI)(0xbc);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    fcn.00473bc0();\n    fcn.00473bc0();\n    fcn.00473b70();\n    fcn.00473b70();\n    fcn.00473b70();\n    fcn.00473b70();\n    *(extraout_EDX + 0x83) = 0;\n    fcn.00473b70();\n    *(extraout_EDX_00 + 0x98) = 0;\n    *(extraout_EDX_00 + 0x9c) = 0;\n    *(extraout_EDX_00 + 0xa0) = 0;\n    *(extraout_EDX_00 + 0xb8) = 0;\n    *(extraout_EDX_00 + 0xa4) = 0;\n    *(extraout_EDX_00 + 0xb4) = 0;\n    *(extraout_EDX_00 + 0xac) = 0;\n    *(extraout_EDX_00 + 0xb0) = 0;\n    *(extraout_EDX_00 + 0xa8) = 0;\n    *(extraout_EDX_00 + 0x81) = 0;\n    *(extraout_EDX_00 + 0x82) = 0;\n    *(extraout_EDX_00 + 0x80) = 1;\n    return extraout_EDX_00;\n}\n",
        "token_count": 385
    },
    "00474c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00474c80(int32_t param_1)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    char cVar3;\n    int16_t *in_EAX;\n    \n    do {\n        if (*(param_1 + 0xc) == *(param_1 + 8)) {\n            cVar3 = fcn.00473c60();\n            if (cVar3 == '\\0') {\n                return 0;\n            }\n        }\n        **(param_1 + 0xc) = *in_EAX;\n        *(param_1 + 0xc) = *(param_1 + 0xc) + 2;\n        iVar1 = *in_EAX;\n        in_EAX = in_EAX + 1;\n    } while (iVar1 != 0);\n    uVar2 = *(param_1 + 0x10);\n    *(param_1 + 0x10) = *(param_1 + 0xc);\n    return uVar2;\n}\n",
        "token_count": 220
    },
    "00474d10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00474d10(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.00474c20();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    if ((*(param_1 + 0xc) == *(param_1 + 8)) && (cVar1 = fcn.00473c60(),  cVar1 == '\\0')) {\n        return 0;\n    }\n    **(param_1 + 0xc) = 0;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 2;\n    return *(param_1 + 0x10);\n}\n",
        "token_count": 165
    },
    "00474d50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __cdecl\nfcn.00474d50(int32_t noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, \n            uint noname_19, uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, \n            uint noname_25, uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint noname_30, \n            uint noname_31, uint noname_32, uint noname_33, uint noname_34, uint noname_35, uint noname_36, \n            uint noname_37, uint noname_38, uint noname_39, uint noname_40, uint noname_41, uint noname_42, \n            uint noname_43, uint noname_44, uint noname_45, uint noname_46, uint noname_47, uint noname_48, \n            uint noname_49, uint noname_50, uint noname_51, uint noname_52, uint noname_53, uint noname_54, \n            uint noname_55, uint noname_56, uint noname_57, uint noname_58, uint noname_59, uint noname_60, \n            uint noname_61, uint noname_62, uint noname_63, uint noname_64, uint noname_65, uint noname_66, \n            uint noname_67, uint noname_68, uint noname_69, uint noname_70, uint noname_71, uint noname_72, \n            uint noname_73, uint noname_74, uint noname_75, uint noname_76, uint noname_77, uint noname_78, \n            uint noname_79, uint noname_80, uint noname_81, uint noname_82, uint noname_83, uint noname_84, \n            uint noname_85, uint noname_86, uint arg_164h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(noname_0 + 0x164);\n    iVar1 = fcn.00474d10();\n    if (iVar1 != 0) {\n        piVar2 = fcn.00473880(iVar1, 0x18);\n        if (piVar2 != NULL) {\n            if (*piVar2 != iVar1) {\n                *(iVar3 + 0x5c) = *(iVar3 + 0x60);\n                return piVar2;\n            }\n            *(iVar3 + 0x60) = *(iVar3 + 0x5c);\n            iVar3 = fcn.004746b0(piVar2);\n            if (iVar3 != 0) {\n                return piVar2;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 767
    },
    "00476360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00476360(uint param_1, uint param_2, int32_t param_3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    char unaff_BL;\n    \n    iVar2 = fcn.00475350(param_1, param_2);\n    if (iVar2 == 0) {\n        if (((unaff_BL == '\\0') && ((*(param_3 + 0xc) - *(param_3 + 0x10) & 0xfffffffeU) != 0)) &&\n           (piVar3 = *(param_3 + 0xc) + -2,  *piVar3 == 0x20)) {\n            *(param_3 + 0xc) = piVar3;\n        }\n        if (*(param_3 + 0xc) == *(param_3 + 8)) {\n            cVar1 = fcn.00473c60();\n            if (cVar1 == '\\0') {\n                return 1;\n            }\n        }\n        **(param_3 + 0xc) = 0;\n        *(param_3 + 0xc) = *(param_3 + 0xc) + 2;\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 285
    },
    "00479380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00479380(void)\n\n{\n    uint uVar1;\n    uint *unaff_ESI;\n    int32_t unaff_EDI;\n    \n    unaff_ESI[0x46] = 0x479340;\n    fcn.00485b10(unaff_ESI + 0x40);\n    if (unaff_EDI == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.00474c80();\n    }\n    unaff_ESI[0x3a] = uVar1;\n    unaff_ESI[0x5a] = 0;\n    fcn.00483e90(unaff_ESI + 0x25, unaff_ESI + 0x24, 0);\n    unaff_ESI[6] = unaff_ESI[2];\n    unaff_ESI[7] = unaff_ESI[2];\n    *unaff_ESI = 0;\n    unaff_ESI[1] = 0;\n    unaff_ESI[0xd] = 0;\n    unaff_ESI[0xe] = 0;\n    unaff_ESI[0xf] = 0;\n    unaff_ESI[0x10] = 0;\n    unaff_ESI[0x11] = 0;\n    unaff_ESI[0x12] = 0;\n    unaff_ESI[0x13] = 0;\n    unaff_ESI[0x14] = 0;\n    unaff_ESI[0x15] = 0;\n    unaff_ESI[0x16] = 0;\n    unaff_ESI[0x17] = 0;\n    unaff_ESI[0x18] = 0;\n    unaff_ESI[0x19] = 0;\n    unaff_ESI[0x1a] = 0;\n    unaff_ESI[0x1b] = 0;\n    unaff_ESI[0x1c] = 0;\n    unaff_ESI[0x1e] = 0;\n    unaff_ESI[0x20] = 0;\n    unaff_ESI[0x21] = 0;\n    unaff_ESI[0x22] = 0;\n    unaff_ESI[0x23] = 0;\n    unaff_ESI[9] = 0;\n    unaff_ESI[10] = 0;\n    unaff_ESI[0x56] = 0;\n    unaff_ESI[0x57] = 0;\n    unaff_ESI[0x4f] = 0;\n    unaff_ESI[0x50] = 0;\n    unaff_ESI[0x51] = 0;\n    unaff_ESI[0x52] = 0;\n    unaff_ESI[0x53] = 0;\n    unaff_ESI[0x54] = 0;\n    unaff_ESI[0x55] = 0;\n    *(unaff_ESI + 0x58) = 0;\n    *(unaff_ESI + 0x161) = 0;\n    unaff_ESI[0x1d] = unaff_ESI;\n    unaff_ESI[0x66] = 0;\n    unaff_ESI[0x67] = 0;\n    unaff_ESI[0x47] = 0;\n    unaff_ESI[0x48] = 0;\n    unaff_ESI[0x49] = 0;\n    unaff_ESI[0x4a] = 0;\n    unaff_ESI[0x4b] = 0;\n    unaff_ESI[0x4e] = 0;\n    unaff_ESI[0x5b] = 0;\n    unaff_ESI[0x5d] = 0;\n    unaff_ESI[0x60] = 0;\n    unaff_ESI[0x3c] = 0;\n    unaff_ESI[0x3f] = 0;\n    unaff_ESI[0x3d] = 0;\n    unaff_ESI[0x77] = 0;\n    unaff_ESI[0x78] = 0;\n    *(unaff_ESI + 0x7a) = 0;\n    *(unaff_ESI + 0x1e9) = 0;\n    unaff_ESI[0x7b] = 0;\n    *(unaff_ESI + 0x4d) = 1;\n    return;\n}\n",
        "token_count": 1024
    },
    "00479500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00479500(int32_t param_1, ushort *param_2, int32_t param_3)\n\n{\n    code *pcVar1;\n    code **in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    code **ppcVar5;\n    \n    if (in_EAX == NULL) {\n        iVar2 = fcn.00456a6c(0x1f0);\n        if (iVar2 == 0) {\n            return 0;\n        }\n        ppcVar5 = iVar2 + 0xc;\n        *ppcVar5 = fcn.00456a6c;\n        *(iVar2 + 0x10) = fcn.0045a687;\n        *(iVar2 + 0x14) = fcn.00455f3f;\n    }\n    else {\n        iVar2 = (**in_EAX)();\n        if (iVar2 == 0) {\n            return 0;\n        }\n        ppcVar5 = iVar2 + 0xc;\n        *ppcVar5 = *in_EAX;\n        *(iVar2 + 0x10) = in_EAX[1];\n        *(iVar2 + 0x14) = in_EAX[2];\n    }\n    pcVar1 = *ppcVar5;\n    *(iVar2 + 8) = 0;\n    *(iVar2 + 0x20) = 0;\n    *(iVar2 + 0x17c) = 0x10;\n    iVar3 = (*pcVar1)(0x100);\n    *(iVar2 + 0x188) = iVar3;\n    if (iVar3 == 0) {\n        (**(iVar2 + 0x14))(iVar2);\n        return 0;\n    }\n    iVar3 = (**ppcVar5)(0x800);\n    *(iVar2 + 0x2c) = iVar3;\n    if (iVar3 == 0) {\n        (**(iVar2 + 0x14))(*(iVar2 + 0x188));\n        (**(iVar2 + 0x14))(iVar2);\n        return 0;\n    }\n    *(iVar2 + 0x30) = iVar3 + 0x800;\n    if (param_3 == 0) {\n        iVar3 = fcn.00474ac0();\n        *(iVar2 + 0x164) = iVar3;\n        if (iVar3 == 0) {\n            (**(iVar2 + 0x14))(*(iVar2 + 0x2c));\n            (**(iVar2 + 0x14))(*(iVar2 + 0x188));\n            (**(iVar2 + 0x14))(iVar2);\n            return 0;\n        }\n    }\n    else {\n        *(iVar2 + 0x164) = param_3;\n    }\n    *(iVar2 + 0x178) = 0;\n    *(iVar2 + 0x170) = 0;\n    *(iVar2 + 0x130) = 0;\n    *(iVar2 + 0x1d4) = 0;\n    *(iVar2 + 0x1d0) = 0;\n    *(iVar2 + 0x7c) = 0;\n    *(iVar2 + 0xf8) = 0;\n    *(iVar2 + 0x1d8) = 0x21;\n    *(iVar2 + 0xec) = 0;\n    *(iVar2 + 0xed) = 0;\n    *(iVar2 + 0x18c) = 0;\n    *(iVar2 + 400) = 0;\n    *(iVar2 + 0x194) = 0;\n    fcn.00473bc0(ppcVar5);\n    fcn.00473bc0(ppcVar5);\n    fcn.00479380();\n    if ((param_1 != 0) && (*(iVar2 + 0xe8) == 0)) {\n        fcn.00474dc0(iVar2);\n        return 0;\n    }\n    if (param_2 == NULL) {\n        uVar4 = fcn.00483e20();\n        *(iVar2 + 0xe4) = uVar4;\n        return iVar2;\n    }\n    *(iVar2 + 0xec) = 1;\n    uVar4 = fcn.00483ff0();\n    *(iVar2 + 0xe4) = uVar4;\n    *(iVar2 + 0x1d8) = *param_2;\n    return iVar2;\n}\n",
        "token_count": 998
    },
    "00479740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00479740(uint param_1)\n\n{\n    fcn.004796f0(param_1, 0, 0);\n    return;\n}\n",
        "token_count": 36
    },
    "0047a4d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0047a4d0(uint8_t **param_1, int32_t param_2, uint8_t *param_3)\n\n{\n    char cVar1;\n    uint8_t *in_EAX;\n    uint uVar2;\n    \n    if (in_EAX != param_3) {\n        if (*in_EAX == 0x78) {\n            uVar2 = fcn.0047a480();\n            return uVar2;\n        }\n        if (*(*in_EAX + 0x4c + param_2) != '\\x19') {\ncode_r0x0047a4f8:\n            *param_1 = in_EAX;\n            return 0;\n        }\n        for (in_EAX = in_EAX + 1; in_EAX != param_3; in_EAX = in_EAX + 1) {\n            cVar1 = *(*in_EAX + 0x4c + param_2);\n            if (cVar1 == '\\x12') {\n                *param_1 = in_EAX + 1;\n                return 10;\n            }\n            if (cVar1 != '\\x19') goto code_r0x0047a4f8;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 277
    },
    "0047cd30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0047cd30(uint8_t param_1)\n\n{\n    uchar in_AL;\n    \n    // switch table (40 cases) at 0x47cd6c\n    switch(in_AL) {\n    case 0xd8:\n    case 0xd9:\n    case 0xda:\n    case 0xdb:\n        return 7;\n    case 0xdc:\n    case 0xdd:\n    case 0xde:\n    case 0xdf:\n        return 8;\n    case 0xff:\n        if (0xfd < param_1) {\n            return 0;\n        }\n    }\n    return 0x1d;\n}\n",
        "token_count": 143
    },
    "0047dda0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0047dda0(uint8_t *param_1, uint8_t *param_2, int32_t param_3)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint uVar3;\n    uint32_t uVar4;\n    ulong uVar5;\n    \n    if (param_2 != param_1) {\n        if (param_2[1] == 0) {\n            if (*param_2 == 0x78) {\n                uVar3 = fcn.0047dd30();\n                return uVar3;\n            }\n            uVar4 = *(*param_2 + 0x4c + param_3);\n        }\n        else {\n            uVar5 = fcn.0047cd30();\n            param_2 = uVar5 >> 0x20;\n            uVar4 = uVar5;\n        }\n        uVar5 = CONCAT44(param_2, uVar4);\n        while( true ) {\n            iVar2 = uVar5 >> 0x20;\n            if (uVar5 != 0x19) {\n                *in_EAX = iVar2;\n                return 0;\n            }\n            puVar1 = iVar2 + 2;\n            if (puVar1 == param_1) break;\n            if (*(iVar2 + 3) == '\\0') {\n                uVar5 = CONCAT44(puVar1, *(*puVar1 + 0x4c + param_3));\n            }\n            else {\n                uVar5 = fcn.0047cd30();\n            }\n            if (uVar5 == 0x12) {\n                *in_EAX = (uVar5 >> 0x20) + 2;\n                return 10;\n            }\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 403
    },
    "00480c90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00480c90(char *param_1, char *param_2, int32_t param_3)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint uVar3;\n    uint32_t uVar4;\n    ulong uVar5;\n    \n    if (param_2 != param_1) {\n        if (*param_2 == '\\0') {\n            if (param_2[1] == 0x78) {\n                uVar3 = fcn.00480c10();\n                return uVar3;\n            }\n            uVar4 = *(param_2[1] + 0x4c + param_3);\n        }\n        else {\n            uVar5 = fcn.0047cd30();\n            param_2 = uVar5 >> 0x20;\n            uVar4 = uVar5;\n        }\n        uVar5 = CONCAT44(param_2, uVar4);\n        while( true ) {\n            iVar2 = uVar5 >> 0x20;\n            if (uVar5 != 0x19) {\n                *in_EAX = iVar2;\n                return 0;\n            }\n            pcVar1 = iVar2 + 2;\n            if (pcVar1 == param_1) break;\n            if (*pcVar1 == '\\0') {\n                uVar5 = CONCAT44(pcVar1, *(pcVar1[1] + 0x4c + param_3));\n            }\n            else {\n                uVar5 = fcn.0047cd30();\n            }\n            if (uVar5 == 0x12) {\n                *in_EAX = (uVar5 >> 0x20) + 2;\n                return 10;\n            }\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 399
    },
    "00483100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00483100(char *param_1)\n\n{\n    char cVar1;\n    char *in_EAX;\n    char cVar2;\n    \n    while( true ) {\n        cVar1 = *param_1;\n        cVar2 = *in_EAX;\n        param_1 = param_1 + 1;\n        in_EAX = in_EAX + 1;\n        if (cVar1 + 0x9fU < 0x1a) {\n            cVar1 = cVar1 + -0x20;\n        }\n        if (cVar2 + 0x9fU < 0x1a) {\n            cVar2 = cVar2 + -0x20;\n        }\n        if (cVar1 != cVar2) break;\n        if (cVar1 == '\\0') {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 200
    },
    "004831a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004831a0(void)\n\n{\n    uint in_EAX;\n    \n    // switch table (24 cases) at 0x4831c0\n    switch(in_EAX) {\n    case 9:\n    case 10:\n    case 0xd:\n    case 0x20:\n        return 1;\n    default:\n        return 0;\n    }\n}\n",
        "token_count": 82
    },
    "00459470": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00459470(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0045c031(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 110
    },
    "0044ee62": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044ee62(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *param_1;\n    if (iVar1 == 0) {\n        fcn.0045c4a9(0xc);\n        return;\n    }\n    if (iVar1 < 4) {\n        fcn.00450194(iVar1 * 0x18 + 0x4b8508);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "004274d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004274d0(uint *param_1)\n\n{\n    uint *var_4h;\n    \n    var_4h = param_1;\n    fcn.00429d10(&var_4h, **param_1, *param_1);\n    fcn.00452a07(*param_1);\n    return;\n}\n",
        "token_count": 78
    },
    "00428aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00428aa0(int32_t param_1)\n\n{\n    int32_t var_4h;\n    \n    var_4h = param_1;\n    fcn.00429d10(&var_4h, **(param_1 + 8), *(param_1 + 8));\n    fcn.00452a07(*(param_1 + 8));\n    return;\n}\n",
        "token_count": 90
    },
    "0048ba50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.0048ba50(void)\n\n{\n    uint32_t uVar1;\n    uint var_1h;\n    \n    uVar1 = *0x4b7b1c;\n    if (7 < *0x4b7b30) {\n        fcn.00402751();\n        fcn.0040272c(0x4b7b1c);\n        fcn.00402751();\n        fcn.00452a07(uVar1);\n    }\n    *0x4b7b1c = *0x4b7b1c & 0xffff0000;\n    *0x4b7b2c = 0;\n    *0x4b7b30 = 7;\n    return;\n}\n",
        "token_count": 180
    },
    "0048bae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.0048bae0(void)\n\n{\n    uint32_t uVar1;\n    uint var_1h;\n    \n    uVar1 = *0x4b9874;\n    if (7 < *0x4b9888) {\n        fcn.00402751();\n        fcn.0040272c(0x4b9874);\n        fcn.00402751();\n        fcn.00452a07(uVar1);\n    }\n    *0x4b9874 = *0x4b9874 & 0xffff0000;\n    *0x4b9884 = 0;\n    *0x4b9888 = 7;\n    return;\n}\n",
        "token_count": 169
    },
    "00470a51": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00470a51(void)\n\n{\n    *0x4b5d90 = (*_sym.imp.KERNEL32.dll_CreateFileW)(L\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 65
    },
    "0040b6ec": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b6ec(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    code *pcVar1;\n    char cVar2;\n    uint *in_ECX;\n    \n    if (-in_ECX[4] - 1 <= arg_8h) {\n        fcn.0044e7eb(\"string too long\");\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if (arg_8h != 0) {\n        arg_8h_00 = in_ECX[4] + arg_8h;\n        cVar2 = fcn.004025ff(arg_8h_00, 0);\n        if (cVar2 != '\\0') {\n            fcn.0040d12b(in_ECX[4], arg_8h, arg_ch);\n            in_ECX[4] = arg_8h_00;\n            if (7 < in_ECX[5]) {\n                in_ECX = *in_ECX;\n            }\n            *(in_ECX + arg_8h_00 * 2) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 265
    },
    "0040c12e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c12e(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint arg_8h_00;\n    int32_t in_EDX;\n    uint var_4h;\n    \n    uVar1 = *(in_EDX + 0x14) - *(in_EDX + 0x10);\n    if ((*(arg_8h + 0x10) < uVar1 || *(arg_8h + 0x10) == uVar1) ||\n       (*(arg_8h + 0x14) - *(arg_8h + 0x10) < *(in_EDX + 0x10))) {\n        arg_8h_00 = fcn.004019b5(arg_8h, 0, 0xffffffff);\n    }\n    else {\n        arg_8h_00 = fcn.0040aa32(arg_8h, in_EDX, 0, 0xffffffff);\n    }\n    fcn.00401ed3(arg_8h_00);\n    return;\n}\n",
        "token_count": 236
    },
    "00417865": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417865(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint arg_8h_00;\n    int32_t in_EDX;\n    uint var_4h;\n    \n    uVar1 = *(in_EDX + 0x14) - *(in_EDX + 0x10);\n    if ((*(arg_8h + 0x10) < uVar1 || *(arg_8h + 0x10) == uVar1) ||\n       (*(arg_8h + 0x14) - *(arg_8h + 0x10) < *(in_EDX + 0x10))) {\n        arg_8h_00 = fcn.0040190f(arg_8h, 0, 0xffffffff);\n    }\n    else {\n        arg_8h_00 = fcn.00417e65(arg_8h, in_EDX);\n    }\n    fcn.0041994f(arg_8h_00);\n    return;\n}\n",
        "token_count": 227
    },
    "00418f56": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418f56(ushort *arg_8h)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    ushort *in_ECX;\n    int32_t iVar3;\n    int32_t in_EDX;\n    int32_t iVar4;\n    ushort *puVar5;\n    ushort *puVar6;\n    int32_t iVar7;\n    uint var_10h;\n    ushort *var_ch;\n    int32_t var_8h;\n    ushort *var_4h;\n    \n    iVar3 = arg_8h - in_ECX >> 1;\n    iVar7 = in_EDX - in_ECX >> 1;\n    iVar4 = iVar7;\n    var_8h = iVar3;\n    while (iVar2 = iVar4,  iVar2 != 0) {\n        iVar4 = var_8h % iVar2;\n        var_8h = iVar2;\n    }\n    if ((var_8h < iVar3) && (0 < var_8h)) {\n        var_ch = in_ECX + var_8h;\n        do {\n            var_4h = var_ch;\n            puVar6 = var_ch + iVar7;\n            if (var_ch + iVar7 == arg_8h) {\n                puVar6 = in_ECX;\n            }\n            do {\n                puVar5 = puVar6;\n                uVar1 = *var_4h;\n                *var_4h = *puVar5;\n                *puVar5 = uVar1;\n                iVar4 = arg_8h - puVar5 >> 1;\n                puVar6 = in_ECX + (iVar7 - iVar4);\n                if (iVar7 < iVar4) {\n                    puVar6 = puVar5 + iVar7;\n                }\n                var_4h = puVar5;\n            } while (puVar6 != var_ch);\n            var_ch = var_ch + -1;\n            var_8h = var_8h + -1;\n        } while (0 < var_8h);\n    }\n    return;\n}\n",
        "token_count": 447
    },
    "0041904c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041904c(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = in_EDX * 2;\n    iVar4 = in_EDX;\n    while( true ) {\n        iVar2 = iVar3 + 2;\n        if (arg_8h <= iVar2) break;\n        if (*(in_ECX + iVar2 * 8) < *(in_ECX + -8 + iVar2 * 8)) {\n            iVar2 = iVar3 + 1;\n        }\n        *(in_ECX + iVar4 * 8) = *(in_ECX + iVar2 * 8);\n        *(in_ECX + 4 + iVar4 * 8) = *(in_ECX + 4 + iVar2 * 8);\n        iVar3 = iVar2 * 2;\n        iVar4 = iVar2;\n    }\n    if (iVar2 == arg_8h) {\n        *(in_ECX + iVar4 * 8) = *(in_ECX + -8 + arg_8h * 8);\n        *(in_ECX + 4 + iVar4 * 8) = *(in_ECX + -4 + arg_8h * 8);\n        iVar4 = arg_8h + -1;\n    }\n    while ((iVar3 = (iVar4 + -1) / 2,  in_EDX < iVar4 && (uVar1 = *(in_ECX + iVar3 * 8),  uVar1 < *arg_ch))) {\n        *(in_ECX + iVar4 * 8) = uVar1;\n        *(in_ECX + 4 + iVar4 * 8) = *(in_ECX + 4 + iVar3 * 8);\n        iVar4 = iVar3;\n    }\n    *(in_ECX + iVar4 * 8) = *arg_ch;\n    *(in_ECX + 4 + iVar4 * 8) = arg_ch[1];\n    return;\n}\n",
        "token_count": 471
    },
    "00433af0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00433af0(int32_t *arg_8h)\n\n{\n    uint *arg_8h_00;\n    uint *arg_14h;\n    uint *arg_8h_01;\n    uint *arg_14h_00;\n    uint *arg_10h;\n    int32_t *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h != in_ECX) {\n        arg_8h_00 = *in_ECX;\n        arg_14h = *arg_8h;\n        arg_8h_01 = *arg_8h_00;\n        arg_10h = *arg_14h;\n        while (arg_8h_01 != arg_8h_00) {\n            if (arg_10h == arg_14h) {\n                return;\n            }\n            if ((arg_8h_01[3] < arg_10h[3]) || ((arg_8h_01[3] <= arg_10h[3] && (arg_8h_01[2] <= arg_10h[2])))) {\n                arg_8h_01 = *arg_8h_01;\n            }\n            else {\n                arg_14h_00 = *arg_10h;\n                fcn.00433b70(arg_8h_01, arg_8h, arg_10h, arg_14h_00, 1);\n                arg_10h = arg_14h_00;\n            }\n        }\n        if (arg_10h != arg_14h) {\n            fcn.00433b70(arg_8h_00, arg_8h, arg_10h, arg_14h, arg_8h[1]);\n        }\n    }\n    return;\n}\n",
        "token_count": 432
    },
    "00433b70": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433b70(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint32_t arg_18h)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t in_ECX;\n    \n    if (in_ECX != arg_ch) {\n        if (0xffffffeU - *(in_ECX + 4) < arg_18h) {\n            fcn.0044e7eb(\"list<T> too long\");\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        *(in_ECX + 4) = *(in_ECX + 4) + arg_18h;\n        *(arg_ch + 4) = *(arg_ch + 4) - arg_18h;\n    }\n    **(arg_10h + 4) = arg_14h;\n    **(arg_14h + 4) = arg_8h;\n    **(arg_8h + 4) = arg_10h;\n    uVar1 = *(arg_8h + 4);\n    *(arg_8h + 4) = *(arg_14h + 4);\n    *(arg_14h + 4) = *(arg_10h + 4);\n    *(arg_10h + 4) = uVar1;\n    return;\n}\n",
        "token_count": 315
    },
    "00440a50": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "hash data with MD5"
        ],
        "decompiled_code": "\nvoid fcn.00440a50(uint *param_1)\n\n{\n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[5] = 0x10325476;\n    param_1[4] = 0x98badcfe;\n    param_1[3] = 0xefcdab89;\n    param_1[2] = 0x67452301;\n    return;\n}\n",
        "token_count": 101
    },
    "00449a60": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "hash data with MD5"
        ],
        "decompiled_code": "\nvoid fcn.00449a60(uint *param_1)\n\n{\n    param_1[5] = 0;\n    param_1[4] = 0;\n    *param_1 = 0x67452301;\n    param_1[1] = 0xefcdab89;\n    param_1[2] = 0x98badcfe;\n    param_1[3] = 0x10325476;\n    return;\n}\n",
        "token_count": 101
    },
    "00473bc0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00473bc0(uint param_1)\n\n{\n    uint *in_EAX;\n    \n    *in_EAX = 0;\n    in_EAX[1] = 0;\n    in_EAX[4] = 0;\n    in_EAX[3] = 0;\n    in_EAX[2] = 0;\n    in_EAX[5] = param_1;\n    return;\n}\n",
        "token_count": 92
    },
    "00485b10": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00485b10(uint *param_1)\n\n{\n    *param_1 = 0x485a20;\n    param_1[4] = 1;\n    param_1[3] = 0;\n    param_1[5] = 0;\n    return;\n}\n",
        "token_count": 66
    },
    "004031d6": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/f2e93a0d9a164553a93d71878df6b782"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.004031d6(void)\n\n{\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0045b302(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.004028f4();\n    *(unaff_EBP + -4) = 0;\n    fcn.00402707(0x4a00e0);\n    *(unaff_EBP + -4) = 1;\n    fcn.00402707(0x4a00e0);\n    *(unaff_EBP + -4) = 2;\n    fcn.00402707(0x4a00e0);\n    *(unaff_EBP + -4) = 3;\n    fcn.00402707(0x4a00e0);\n    *(unaff_EBP + -4) = 4;\n    fcn.00402707(0x4a00e0);\n    *(unaff_EBP + -4) = 5;\n    *(extraout_ECX + 0x1c8) = 0;\n    fcn.00402707(0x4a00e0);\n    *(unaff_EBP + -4) = 6;\n    fcn.00402707(0x4a00e0);\n    *(unaff_EBP + -4) = 7;\n    fcn.00402707(0x4a00e0);\n    *(extraout_ECX + 0x214) = 0;\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 404
    },
    "004491f0": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.004491f0(uint8_t *param_1)\n\n{\n    *param_1 = *(*param_1 + 0x490cf8);\n    param_1[1] = *(param_1[1] + 0x490cf8);\n    param_1[2] = *(param_1[2] + 0x490cf8);\n    param_1[3] = *(param_1[3] + 0x490cf8);\n    param_1[4] = *(param_1[4] + 0x490cf8);\n    param_1[5] = *(param_1[5] + 0x490cf8);\n    param_1[6] = *(param_1[6] + 0x490cf8);\n    param_1[7] = *(param_1[7] + 0x490cf8);\n    return;\n}\n",
        "token_count": 201
    },
    "004271a0": {
        "rules": [
            "read file on Windows",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004271a0(uint8_t *arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_ReadFile)(*(in_ECX + 0x1c), arg_8h, arg_ch, arg_10h, 0);\n    if (iVar1 == 0) {\n        return;\n    }\n    for (iVar1 = *arg_10h; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *arg_8h = ~*arg_8h;\n        arg_8h = arg_8h + 1;\n    }\n    return;\n}\n",
        "token_count": 169
    },
    "00431940": {
        "rules": [
            "read file on Windows"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00431940(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    (*_sym.imp.KERNEL32.dll_ReadFile)(*(in_ECX + 0x1c), arg_8h, arg_ch, arg_10h, 0);\n    return;\n}\n",
        "token_count": 79
    },
    "00435c88": {
        "rules": [
            "read file on Windows"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00435c88(uint noname_0, int32_t *arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    var_4h = 0;\n    if ((arg_ch != NULL) && (*arg_ch != 0)) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_ReadFile)(*arg_ch, arg_10h, arg_14h, &var_4h, 0);\n        if (iVar1 == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar1 == 0x26) {\n                iVar1 = 0;\n            }\n            arg_ch[1] = iVar1;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 183
    },
    "00435ccb": {
        "rules": [
            "write file on Windows"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00435ccb(uint noname_0, int32_t *arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    var_4h = 0;\n    if ((arg_ch != NULL) && (*arg_ch != 0)) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_WriteFile)(*arg_ch, arg_10h, arg_14h, &var_4h, 0);\n        if (iVar1 == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar1 == 0x26) {\n                iVar1 = 0;\n            }\n            arg_ch[1] = iVar1;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 182
    },
    "00416f21": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00416f21(void)\n\n{\n    ushort *extraout_ECX;\n    char *extraout_EDX;\n    int32_t unaff_EBP;\n    char *pcVar1;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0045b302(8);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    *(extraout_ECX + 10) = 7;\n    *(extraout_ECX + 8) = 0;\n    *extraout_ECX = 0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = 1;\n    for (pcVar1 = extraout_EDX; *pcVar1 != '\\0'; pcVar1 = pcVar1 + 1) {\n        fcn.0040b6ec(1, *pcVar1);\n    }\n    fcn.0045b2d0();\n    return;\n}\n",
        "token_count": 245
    },
    "004206e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004206e0(uint32_t arg_8h)\n\n{\n    uchar *puVar1;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (arg_8h != 0) {\n        do {\n            if (in_ECX[1] == 0) {\n                return 0x10;\n            }\n            puVar1 = *in_ECX;\n            in_ECX[1] = in_ECX[1] + -1;\n            *(uVar2 + in_EDX) = *puVar1;\n            uVar2 = uVar2 + 1;\n            *in_ECX = puVar1 + 1;\n        } while (uVar2 < arg_8h);\n    }\n    return 0;\n}\n",
        "token_count": 189
    },
    "00423a90": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00423a90(uint32_t param_1, uint32_t *param_2, uint32_t param_3, int32_t param_4)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = param_3;\n    if (param_3 != 0) {\n        do {\n            uVar1 = param_3;\n            if ((param_2 & 3) == 0) break;\n            param_1 = param_1 >> 8 ^ *(param_4 + ((*param_2 ^ param_1) & 0xff) * 4);\n            param_2 = param_2 + 1;\n            param_3 = param_3 - 1;\n            uVar1 = param_3;\n        } while (param_3 != 0);\n    }\n    if (3 < uVar1) {\n        param_3 = uVar1 >> 2;\n        do {\n            param_1 = param_1 ^ *param_2;\n            uVar1 = uVar1 - 4;\n            param_2 = param_2 + 1;\n            param_1 = *(param_4 + 0x800 + (param_1 >> 8 & 0xff) * 4) ^ *(param_4 + 0x400 + (param_1 >> 0x10 & 0xff) * 4)\n                      ^ *(param_4 + 0xc00 + (param_1 & 0xff) * 4) ^ *(param_4 + (param_1 >> 0x18) * 4);\n            param_3 = param_3 - 1;\n        } while (param_3 != 0);\n    }\n    for (; uVar1 != 0; uVar1 = uVar1 - 1) {\n        param_1 = param_1 >> 8 ^ *(param_4 + ((*param_2 ^ param_1) & 0xff) * 4);\n        param_2 = param_2 + 1;\n    }\n    return param_1;\n}\n",
        "token_count": 452
    },
    "0042bf70": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042bf70(uint noname_0, int32_t arg_ch)\n\n{\n    char *pcVar1;\n    char *in_ECX;\n    char *pcVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0x1000;\n    pcVar1 = in_ECX;\n    while ((pcVar2 = pcVar1,  iVar3 != -0x7fffeffe && (pcVar2[arg_ch - in_ECX] != '\\0'))) {\n        *pcVar2 = pcVar2[arg_ch - in_ECX];\n        iVar3 = iVar3 + -1;\n        pcVar1 = pcVar2 + 1;\n        if (iVar3 == 0) {\n            *pcVar2 = '\\0';\n            return 0x8007007a;\n        }\n    }\n    if (iVar3 == 0) {\n        pcVar2[-1] = '\\0';\n        return 0x8007007a;\n    }\n    *pcVar2 = '\\0';\n    return 0;\n}\n",
        "token_count": 230
    },
    "0043c280": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0043c280(uint8_t **param_1, uint8_t **param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    bool bVar4;\n    \n    puVar3 = *param_2;\n    puVar2 = *param_1;\n    if (puVar2 == NULL) {\n        puVar2 = 0x4a23ad;\n    }\n    while( true ) {\n        uVar1 = *puVar2;\n        bVar4 = uVar1 < *puVar3;\n        if (uVar1 != *puVar3) break;\n        if (uVar1 == 0) {\n            return 0;\n        }\n        uVar1 = puVar2[1];\n        bVar4 = uVar1 < puVar3[1];\n        if (uVar1 != puVar3[1]) break;\n        puVar2 = puVar2 + 2;\n        puVar3 = puVar3 + 2;\n        if (uVar1 == 0) {\n            return 0;\n        }\n    }\n    return (1 - bVar4) - (bVar4 != 0);\n}\n",
        "token_count": 275
    },
    "0044aad9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044aad9(void)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    \n    if (in_EAX != NULL) {\n        do {\n            piVar1 = *in_EAX;\n            fcn.00455f3f(in_EAX);\n            in_EAX = piVar1;\n        } while (piVar1 != NULL);\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "0044dfb3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044dfb3(int32_t param_1)\n\n{\n    ushort *puVar1;\n    int32_t iVar2;\n    \n    *(param_1 + 0x16b8) = 0;\n    *(param_1 + 0x16bc) = 0;\n    *(param_1 + 0xb18) = param_1 + 0x94;\n    *(param_1 + 0xb24) = param_1 + 0x988;\n    *(param_1 + 0xb20) = 0x4b4964;\n    *(param_1 + 0xb2c) = 0x4b4978;\n    *(param_1 + 0xb30) = param_1 + 0xa7c;\n    *(param_1 + 0xb38) = 0x4b498c;\n    *(param_1 + 0x16b4) = 8;\n    puVar1 = param_1 + 0x94;\n    iVar2 = 0x11e;\n    do {\n        *puVar1 = 0;\n        puVar1 = puVar1 + 2;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    puVar1 = param_1 + 0x988;\n    iVar2 = 0x1e;\n    do {\n        *puVar1 = 0;\n        puVar1 = puVar1 + 2;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    puVar1 = param_1 + 0xa7c;\n    iVar2 = 0x13;\n    do {\n        *puVar1 = 0;\n        puVar1 = puVar1 + 2;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    *(param_1 + 0x16ac) = 0;\n    *(param_1 + 0x16a8) = 0;\n    *(param_1 + 0x16b0) = 0;\n    *(param_1 + 0x16a0) = 0;\n    *(param_1 + 0x494) = 1;\n    return;\n}\n",
        "token_count": 498
    },
    "00451c3f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00451c3f(double *param_1, int32_t param_2)\n\n{\n    uint16_t *puVar1;\n    double dVar2;\n    uint16_t uVar3;\n    uint8_t uVar4;\n    uint16_t uVar5;\n    uint16_t uVar6;\n    uint16_t uVar7;\n    uint32_t uVar8;\n    uint8_t uVar9;\n    uint16_t uVar10;\n    uint32_t uVar11;\n    uint16_t uVar12;\n    \n    uVar6 = *(param_1 + 6) >> 4 & 0x7ff;\n    if (uVar6 == 0x7ff) {\n        if (((((*(param_1 + 6) & 0xf) != 0) || (*(param_1 + 4) != 0)) || (*(param_1 + 2) != 0)) || (*param_1 != 0)) {\n            return 2;\n        }\n    }\n    else {\n        if ((uVar6 == 0) && (uVar6 = fcn.0045267c(param_1),  0 < uVar6)) {\n            return 0;\n        }\n        if ((param_2 < 1) || (param_2 < 0x7ff - uVar6)) {\n            if (-uVar6 < param_2) {\n                *(param_1 + 6) = (uVar6 + param_2) * 0x10 | *(param_1 + 6) & 0x800f;\n                return 0xffffffff;\n            }\n            uVar7 = *(param_1 + 6) & 0xf | 0x10;\n            uVar10 = *(param_1 + 6) & 0x8000;\n            uVar11 = param_2 + -1 + uVar6;\n            *(param_1 + 6) = uVar7;\n            if (uVar11 + 0x35 < 0x35) {\n                uVar6 = 0;\n                if (uVar11 < -0xf) {\n                    uVar8 = (-uVar11 - 0x10U >> 4) + 1;\n                    uVar11 = uVar8 * 0x10 + uVar11;\n                    uVar6 = 0;\n                    uVar5 = *(param_1 + 4);\n                    uVar3 = *(param_1 + 2);\n                    do {\n                        uVar12 = uVar5;\n                        uVar5 = uVar7;\n                        uVar6 = uVar6 != 0 | *param_1;\n                        *param_1 = uVar3;\n                        uVar8 = uVar8 - 1;\n                        uVar7 = 0;\n                        uVar3 = uVar12;\n                    } while (uVar8 != 0);\n                    *(param_1 + 6) = 0;\n                    *(param_1 + 4) = uVar5;\n                    *(param_1 + 2) = uVar12;\n                }\n                uVar11 = -(uVar11 & 0xffff) & 0xffff;\n                if (uVar11 != 0) {\n                    uVar4 = uVar11;\n                    uVar9 = 0x10 - uVar4;\n                    uVar6 = *param_1 << (uVar9 & 0x1f) | uVar6 != 0;\n                    *param_1 = *param_1 >> (uVar4 & 0x1f) | *(param_1 + 2) << (uVar9 & 0x1f);\n                    *(param_1 + 2) = *(param_1 + 2) >> (uVar4 & 0x1f) | *(param_1 + 4) << (uVar9 & 0x1f);\n                    *(param_1 + 4) = *(param_1 + 4) >> (uVar4 & 0x1f) | *(param_1 + 6) << (uVar9 & 0x1f);\n                    *(param_1 + 6) = *(param_1 + 6) >> (uVar4 & 0x1f);\n                }\n                *(param_1 + 6) = *(param_1 + 6) | uVar10;\n                if (((0x8000 < uVar6) || ((uVar6 == 0x8000 && ((*param_1 & 1) != 0)))) &&\n                   (*param_1 = *param_1 + 1,  *param_1 == 0)) {\n                    puVar1 = param_1 + 2;\n                    *puVar1 = *puVar1 + 1;\n                    if (*puVar1 == 0) {\n                        puVar1 = param_1 + 4;\n                        *puVar1 = *puVar1 + 1;\n                        if (*puVar1 == 0) {\n                            *(param_1 + 6) = *(param_1 + 6) + 1;\n                            return 0xffffffff;\n                        }\n                    }\n                }\n                if (*(param_1 + 6) != uVar10) {\n                    return 0xffffffff;\n                }\n                if (*(param_1 + 4) != 0) {\n                    return 0xffffffff;\n                }\n                if (*(param_1 + 2) != 0) {\n                    return 0xffffffff;\n                }\n                if (*param_1 != 0) {\n                    return 0xffffffff;\n                }\n            }\n            else {\n                *(param_1 + 6) = uVar10;\n                *(param_1 + 2) = 0;\n                *param_1 = 0;\n            }\n            return 0;\n        }\n        dVar2 = *0x4b4b38;\n        if ((*(param_1 + 6) & 0x8000) != 0) {\n            dVar2 = -*0x4b4b38;\n        }\n        *param_1 = dVar2;\n    }\n    return 1;\n}\n",
        "token_count": 1334
    },
    "0045ef01": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0045ef01(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0045e910(0x4ac478, 0xc);\n    fcn.0045c345(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x4b9160;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x4b915c;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x0045ef46;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.00455f3f(arg_8h_00);\ncode_r0x0045ef46:\n        fcn.00455f3f(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0045ef69();\n    fcn.0045e955();\n    return;\n}\n",
        "token_count": 401
    },
    "00403037": {
        "rules": [
            "delete file"
        ],
        "decompiled_code": "\nuint fcn.00403037(void)\n\n{\n    int32_t iVar1;\n    uint unaff_ESI;\n    uint uVar2;\n    \n    fcn.0045400a(\"Preparing components...\\n\\n\", unaff_ESI);\n    iVar1 = fcn.00402b96();\n    if ((iVar1 != 0) && (iVar1 = fcn.00402f26(),  iVar1 != 0)) {\n        uVar2 = 0x4b7a54;\n        if (7 < *0x4b7a68) {\n            uVar2 = *0x4b7a54;\n        }\n        (*_sym.imp.KERNEL32.dll_DeleteFileW)(uVar2);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 169
    },
    "0040f9b3": {
        "rules": [
            "shutdown system",
            "modify access privileges"
        ],
        "decompiled_code": "\nvoid fcn.0040f9b3(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    uint TokenHandle;\n    uint NewState;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b4f00 ^ &stack0xfffffffc;\n    arg_8h = 0x28;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0x28, &TokenHandle);\n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar1);\n    if (iVar2 != 0) {\n        (*_sym.imp.ADVAPI32.dll_LookupPrivilegeValueW)(0, L\"SeShutdownPrivilege\", &var_10h);\n        NewState = 1;\n        var_8h = 2;\n        (*_sym.imp.ADVAPI32.dll_AdjustTokenPrivileges)(TokenHandle, 0, &NewState, 0, 0, 0);\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar2 == 0) {\n            (*_sym.imp.USER32.dll_ExitWindowsEx)(6, 0);\n        }\n    }\n    fcn.004529f8(arg_8h);\n    return;\n}\n",
        "token_count": 303
    },
    "0042f650": {
        "rules": [
            "shutdown system",
            "modify access privileges"
        ],
        "decompiled_code": "\nvoid fcn.0042f650(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    uint TokenHandle;\n    uint NewState;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b4f00 ^ &stack0xfffffffc;\n    arg_8h = 0x28;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0x28, &TokenHandle);\n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar1);\n    if (iVar2 != 0) {\n        (*_sym.imp.ADVAPI32.dll_LookupPrivilegeValueW)(0, L\"SeShutdownPrivilege\", &var_10h);\n        NewState = 1;\n        var_8h = 2;\n        (*_sym.imp.ADVAPI32.dll_AdjustTokenPrivileges)(TokenHandle, 0, &NewState, 0, 0, 0);\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar2 == 0) {\n            (*_sym.imp.USER32.dll_ExitWindowsEx)(6, 0);\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(TokenHandle);\n    }\n    fcn.004529f8(arg_8h);\n    return;\n}\n",
        "token_count": 316
    },
    "0041db67": {
        "rules": [
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041db67(uint hKey, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 4;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(hKey, L\"DumpType\", 0, &var_8h, 0, &var_4h);\n    if ((iVar1 == 0) && (var_8h == 4)) {\n        var_4h = 4;\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(hKey, L\"DumpType\", 0, &var_8h, arg_10h, &var_4h);\n        if ((iVar1 == 0) && (var_8h == 4)) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 217
    },
    "00436cb2": {
        "rules": [
            "hash data with CRC32"
        ],
        "decompiled_code": "\nuint fcn.00436cb2(void)\n\n{\n    return 0x48c408;\n}\n",
        "token_count": 22
    },
    "0042e730": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint fcn.0042e730(void)\n\n{\n    uint uVar1;\n    \n    if (*0x4b9674 == 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(L\"Wintrust.dll\", \"CryptCATAdminAcquireContext2\");\n        *0x4b9674 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n    }\n    if (*0x4b9670 == 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(L\"Wintrust.dll\", \"CryptCATAdminCalcHashFromFileHandle2\");\n        *0x4b9670 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n    }\n    if ((*0x4b9674 != 0) && (*0x4b9670 != 0)) {\n        *0x4b9678 = 1;\n    }\n    return 0x4b96d1;\n}\n",
        "token_count": 218
    },
    "0045cec3": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045cec3(uint arg_8h)\n\n{\n    if ((*0x4b98e8 ^ *0x4b4f00) != NULL) {\n        (*(*0x4b98e8 ^ *0x4b4f00))();\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_TlsGetValue)(arg_8h);\n    return;\n}\n",
        "token_count": 90
    }
}