{
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x004011b6: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x004011bb)\n\nvoid entry0(void)\n\n{\n    uint arg_ch;\n    uint extraout_EDX;\n    uint arg_8h;\n    \n    // [00] -r-x section size 16384 named .code\n    sub.MSVCRT.dll_memset(0x418068, 0, 0xac);\n    *0x41806c = sub.KERNEL32.dll_GetModuleHandleW(0);\n    *0x418068 = sub.KERNEL32.dll_HeapCreate(0, 0x1000, 0);\n    fcn.00405000();\n    *0x41808c = 0x41707c;\n    fcn.0040e4d0();\n    fcn.0040e23d();\n    fcn.0040b120();\n    fcn.0040a9a9();\n    fcn.0040a441();\n    fcn.0040a1c0();\n    fcn.00409669();\n    fcn.00408dee();\n    fcn.004053b5();\n    fcn.0040cdc3();\n    fcn.0040b870();\n    fcn.00405068();\n    *0x418094 = sub.KERNEL32.dll_GetStdHandle(0xfffffff5);\n    fcn.0040a460(4, 0x15, 0, 0x418110, 0x200);\n    fcn.0040aa5a(*0x4180f8);\n    fcn.0040a9c8(8, 0x4180f8, 0x41706c, 7);\n    fcn.0040aa5a(*0x418100);\n    fcn.0040a9c8(4, 0x418100, 0x417064, 8);\n    fcn.0040e266(0xc, 0x186a1, 7, 0x417074, 0x4180f0);\n    fcn.00405068();\n    fcn.0040aa5a(*0x418108);\n    fcn.0040a9c8(4, 0x418108, 0x417064, 8);\n    main(0x4020ce, 1);\n    fcn.00409fb0(0x401f4c);\n    arg_ch = fcn.0040e520(extraout_EDX);\n    fcn.00402eed();\n    arg_8h = 0x4180a0;\n    fcn.0040e560(0x4180a0, arg_ch);\n    fcn.00401ba0(arg_8h);\n    if (*0x4180b0 == 1) {\n        fcn.00402fad();\n    }\n    fcn.00403f53();\n    fcn.00405373(0x4011bb, 0);\n    fcn.00409fd0();\n    fcn.0040ad35();\n    fcn.0040b110();\n    fcn.0040d944();\n    fcn.0040a1b0();\n    return;\n}\n",
        "token_count": 711
    },
    "00401511": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00401511(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint extraout_EDX;\n    uint extraout_EDX_00;\n    uint extraout_EDX_01;\n    uint extraout_EDX_02;\n    uint extraout_EDX_03;\n    uchar uVar4;\n    bool bVar5;\n    ulong uVar6;\n    uint uStack144;\n    uchar *puStack140;\n    uint uStack136;\n    int32_t iStack104;\n    uchar *arg_8h;\n    uchar *puVar7;\n    uint in_stack_ffffffd4;\n    uint uStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uVar8;\n    \n    iVar3 = 0xb;\n    do {\n        uVar8 = 0;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    iStack16 = 0x40152a;\n    fcn.0040e660();\n    if (*0x4180ec == 1) {\n        if ((*0x4180d4 == 1) && (*0x4180c0 != 1)) {\n            bVar5 = true;\n        }\n        else {\n            bVar5 = false;\n        }\n        if (bVar5) {\n            iStack16 = 0x417026;\n            iStack20 = *0x4180e8;\n            iStack24 = 0x401571;\n            uVar6 = fcn.00405760();\n            iStack16 = 1;\n            do {\n                iStack20 = uVar6;\n                in_stack_ffffffd4 = uVar8;\n                if (iStack20 < iStack16) break;\n                uStack28 = 0x401591;\n                uVar1 = fcn.0040e520();\n                iStack24 = uVar6 >> 0x20;\n                iStack20 = uVar6;\n                uStack28 = iStack24;\n                iStack24 = uVar1;\n                uStack28 = fcn.0040e520();\n                uVar2 = *0x4180e8;\n                fcn.004057f0();\n                puVar7 = &stack0xffffffe4;\n                fcn.0040e560(puVar7, uVar2);\n                uVar6 = fcn.00402447();\n                uVar1 = uVar6 >> 0x20;\n                if (uVar6 != 0) {\n                    uVar1 = fcn.0040e520();\n                    fcn.00402ba6();\n                    fcn.0040e560(&stack0xffffffd8, uVar2);\n                    fcn.0040e520();\n                    fcn.0040e6c0(puVar7);\n                    fcn.0040e6c0(uVar1);\n                    uVar1 = 0x41705c;\n                    fcn.0040e6c0(0x41705c);\n                    fcn.0040e560(&stack0xffffffc8, uVar1);\n                    uVar1 = extraout_EDX_00;\n                }\n                uVar6 = CONCAT44(uVar1, iStack20);\n                bVar5 = SCARRY4(iStack16, 1);\n                iStack16 = iStack16 + 1;\n                in_stack_ffffffd4 = uVar8;\n            } while (!bVar5);\n            uStack28 = 0x401626;\n            fcn.00405700();\n            uStack28 = 0;\n            fcn.0040a1e0();\n            sub.KERNEL32.dll_WriteFile();\n            fcn.0040a200();\n            fcn.00405068();\n        }\n    }\n    else {\n        *0x4180ec = 1;\n        uStack136 = extraout_EDX;\n        while( true ) {\n            puStack140 = 0x401683;\n            uVar8 = fcn.0040e520();\n            puStack140 = uStack136;\n            uStack144 = 0x40168b;\n            uStack136 = uVar8;\n            puStack140 = fcn.0040e520();\n            uStack144 = 0x41702e;\n            uVar8 = *0x41807c;\n            fcn.004057f0();\n            fcn.0040e560(&stack0xffffff7c, uVar8);\n            puVar7 = puStack140;\n            iVar3 = fcn.004059c0();\n            if (iVar3 != 0) {\n                fcn.0040e520();\n                uVar1 = fcn.0040e520();\n                iVar3 = iStack104;\n                fcn.004057f0();\n                puVar7 = &stack0xffffff44;\n                fcn.0040e560(&stack0xffffff70, iVar3);\n                uVar8 = extraout_EDX_01;\n                uVar2 = fcn.0040e520(extraout_EDX_01);\n                uVar8 = fcn.0040e520(uVar8, uVar2);\n                fcn.004057f0(uVar1, 1, 0x417032, uVar8);\n                fcn.0040e560(&stack0xffffff44, uVar1);\n            }\n            bVar5 = true;\n            fcn.00405120();\n            if (!bVar5) break;\n            uVar4 = iStack24 % 2 == 0;\n            if (uVar4) {\n                uVar6 = fcn.004059e0();\n                uStack136 = uVar6 >> 0x20;\n                *(*0x4180f0 + puVar7 * 0xc + 8) = uVar6;\n            }\n            else {\n                uVar8 = fcn.0040e520();\n                fcn.0040e520();\n                iStack104 = 1;\n                fcn.00405b20();\n                fcn.0040e720();\n                fcn.00405160();\n                fcn.00405120();\n                if (uVar4) {\n                    uVar8 = fcn.0040e520();\n                    fcn.0040e520();\n                    fcn.00405da0();\n                    arg_8h = &stack0xffffffc0;\n                    fcn.0040e560(arg_8h, puVar7);\n                    fcn.0040e520();\n                    fcn.0040e6c0(uVar8);\n                    iVar3 = *0x4180f0 + arg_8h * 0xc + 4;\n                    fcn.0040e560(iVar3, uVar8);\n                    uVar8 = fcn.004059e0();\n                    *(*0x4180f0 + iVar3 * 0xc) = uVar8;\n                    uVar8 = *0x4180e8;\n                    fcn.0040e520();\n                    fcn.0040e6c0(uVar8);\n                    fcn.0040e6c0(*0x4180a8);\n                    fcn.0040e6c0(*0x4180c4);\n                    fcn.0040e6c0(iVar3);\n                    uVar8 = 0x41705c;\n                    fcn.0040e6c0(0x41705c);\n                    uStack136 = 0x40191f;\n                    fcn.0040e560(0x4180e8, uVar8);\n                    uStack136 = extraout_EDX_03;\n                }\n                else {\n                    uVar1 = *0x4180a8;\n                    fcn.0040e520();\n                    fcn.0040e6c0(uVar1);\n                    fcn.0040e6c0(*0x4180c4);\n                    fcn.0040e520();\n                    fcn.0040e520();\n                    uVar2 = 0x417036;\n                    fcn.00405da0();\n                    iVar3 = iStack104;\n                    fcn.0040e560(&stack0xffffffd0, uVar2);\n                    iStack104 = 0x401801;\n                    fcn.0040ad45(uVar8);\n                    if (*0x4180dc == 1) {\n                        fcn.004059e0();\n                        fcn.0040adc5();\n                        iStack104 = iVar3;\n                    }\n                    fcn.00403bea();\n                    uVar8 = *0x4180e8;\n                    fcn.0040e520();\n                    fcn.0040e6c0(uVar8);\n                    fcn.0040e6c0(uVar1);\n                    uVar8 = 0x41705c;\n                    fcn.0040e6c0(0x41705c);\n                    uStack136 = 0x40185d;\n                    fcn.0040e560(0x4180e8, uVar8);\n                    uStack136 = extraout_EDX_02;\n                }\n            }\n            iStack104 = iStack104 + 1;\n        }\n    }\n    uVar8 = in_stack_ffffffd4;\n    fcn.0040e5f0(in_stack_ffffffd4);\n    fcn.0040e5f0(iStack16);\n    fcn.0040e5f0(uVar8);\n    fcn.0040e5f0(uStack28);\n    fcn.0040e5f0(in_stack_ffffffd4);\n    return;\n}\n",
        "token_count": 2104
    },
    "00401fba": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x004011b6: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x004011bb)\n// WARNING: Removing unreachable block (ram,0x00401fcb)\n// WARNING: Removing unreachable block (ram,0x00401fda)\n\nvoid fcn.00401fba(void)\n\n{\n    uint arg_8h;\n    uint lpPathName;\n    \n    fcn.0040e660();\n    lpPathName = *0x4180c8;\n    fcn.0040ae67();\n    arg_8h = *0x4180b8;\n    fcn.0040ae67();\n    fcn.0040347d(arg_8h, lpPathName);\n    fcn.0040ae67(*0x418098);\n    sub.KERNEL32.dll_RemoveDirectoryW(*0x418084);\n    sub.KERNEL32.dll_RemoveDirectoryW(*0x4180d0);\n    fcn.00405373(0x4011bb, arg_8h);\n    fcn.00409fd0();\n    fcn.0040ad35();\n    fcn.0040b110();\n    fcn.0040d944();\n    fcn.0040a1b0();\n    return;\n}\n",
        "token_count": 280
    },
    "00402150": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00402150(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t extraout_EDX;\n    uint extraout_EDX_00;\n    int32_t extraout_EDX_01;\n    uint extraout_EDX_02;\n    uint extraout_EDX_03;\n    int32_t extraout_EDX_04;\n    int32_t extraout_EDX_05;\n    uint extraout_EDX_06;\n    int32_t extraout_EDX_07;\n    uint extraout_EDX_08;\n    int32_t extraout_EDX_09;\n    bool bVar4;\n    uchar uVar5;\n    ulong uVar6;\n    int32_t unaff_retaddr;\n    int32_t iStack148;\n    uint uStack144;\n    int32_t iStack132;\n    uint uStack124;\n    uint uStack120;\n    int32_t iStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    int32_t iStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0;\n    uStack12 = 0;\n    uStack16 = 0;\n    uStack20 = 0;\n    uStack24 = 0x40215c;\n    fcn.0040e660();\n    uStack24 = param_2;\n    iStack28 = 0x402165;\n    fcn.004051a0();\n    iStack28 = 0x402173;\n    uVar6 = fcn.00405100();\n    if (uVar6 == 1) {\n        uStack32 = 0x402184;\n        iStack28 = uVar6 >> 0x20;\n        iVar1 = fcn.0040e520();\n        uStack32 = iStack28;\n        uStack36 = 0x40218c;\n        iStack28 = iVar1;\n        uVar2 = fcn.0040e520();\n        uStack36 = uStack32;\n        uStack40 = 0x402194;\n        uStack32 = uVar2;\n        uVar2 = fcn.0040e520();\n        uStack40 = uStack36;\n        uStack44 = 0x40219c;\n        uStack36 = uVar2;\n        uStack40 = fcn.0040e520();\n        uStack44 = 0x28;\n        unaff_retaddr = unaff_retaddr + 0x40;\n        fcn.0040a290();\n        fcn.00405182();\n        unaff_retaddr = unaff_retaddr + extraout_EDX;\n        fcn.00406060();\n        uStack56 = 0x4021c7;\n        fcn.0040e560(&stack0xffffffd4, unaff_retaddr);\n        uStack60 = 0x4021cd;\n        uStack56 = extraout_EDX_00;\n        uVar2 = fcn.0040e520();\n        uStack60 = uStack56;\n        uStack64 = 0x4021d5;\n        uStack56 = uVar2;\n        uVar2 = fcn.0040e520();\n        uStack64 = uStack60;\n        uStack68 = 0x4021dd;\n        uStack60 = uVar2;\n        uVar2 = fcn.0040e520();\n        uStack68 = uStack64;\n        uStack64 = uVar2;\n        uStack68 = fcn.0040e520();\n        iStack116 = iStack28 + 300;\n        fcn.0040a290();\n        fcn.00405182();\n        iStack116 = iStack116 + extraout_EDX_01;\n        fcn.00406060();\n        uStack84 = 0x402213;\n        fcn.0040e560(&stack0xffffffbc, iStack116);\n        uStack88 = 0x402219;\n        uStack84 = extraout_EDX_02;\n        uVar2 = fcn.0040e520();\n        uStack88 = uStack84;\n        iStack92 = 0x402221;\n        uStack84 = uVar2;\n        uVar2 = fcn.0040e520();\n        iStack92 = 1;\n        uStack96 = 0x417024;\n        uStack100 = uStack88;\n        uStack104 = 0x402234;\n        uStack88 = uVar2;\n        uVar2 = fcn.0040e520();\n        uStack104 = uStack100;\n        uStack108 = 0x40223c;\n        uStack100 = uVar2;\n        uStack104 = fcn.0040e520();\n        uStack108 = *0x418074;\n        uStack112 = 2;\n        uStack120 = 0x402252;\n        fcn.004057f0();\n        uStack120 = 0x402257;\n        fcn.0040e720();\n        uStack124 = 0x40225d;\n        uStack120 = extraout_EDX_03;\n        uVar2 = fcn.0040e520();\n        uStack124 = uStack120;\n        uStack120 = uVar2;\n        uStack124 = fcn.0040e520();\n        iVar1 = iStack92;\n        fcn.004057f0();\n        fcn.00405182();\n        iVar1 = iVar1 + extraout_EDX_04;\n        fcn.00405182();\n        iStack132 = extraout_EDX_05 + 1;\n        fcn.00408f69();\n        uStack144 = 0x40229b;\n        fcn.0040e560(&stack0xffffff84, iVar1);\n        bVar4 = true;\n        uStack144 = 0x4022a6;\n        fcn.00405120();\n        if (bVar4) {\n            iStack148 = 0x4022b2;\n            uStack144 = extraout_EDX_06;\n            uVar2 = fcn.0040e520();\n            iStack148 = uStack144;\n            uStack144 = uVar2;\n            uVar3 = fcn.0040e520();\n            uVar2 = iStack148;\n            iStack148 = uVar3;\n            uVar3 = fcn.0040e520(uVar2, 1);\n            uVar2 = fcn.0040e520(uVar2, uVar3);\n            iVar1 = iStack132;\n            fcn.00406060(iStack132, uVar2);\n            fcn.00405182();\n            iVar1 = iVar1 + extraout_EDX_07;\n            uVar5 = iVar1 == 0;\n            fcn.0040d780();\n            fcn.0040e560(&stack0xffffff6c, iVar1);\n            fcn.00405120();\n            if (uVar5) {\n                uVar2 = extraout_EDX_08;\n                uVar3 = fcn.0040e520(extraout_EDX_08);\n                uVar3 = fcn.0040e520(uVar2, 0x10, uVar3);\n                uVar2 = fcn.0040e520(uVar2, uVar3);\n                fcn.004057f0(iVar1, 3, *0x418074, uVar2);\n                fcn.0040e720();\n                uVar2 = *0x4180bc;\n                fcn.00405182(*0x4180bc);\n                fcn.00408e27(uVar2, iVar1 + extraout_EDX_09);\n                fcn.004051a0();\n                fcn.00401fba(0);\n            }\n        }\n        else {\n            uStack144 = 0;\n            iStack148 = 0x402366;\n            fcn.00401fba();\n        }\n    }\n    iStack148 = iStack132;\n    uVar2 = fcn.0040e520();\n    iVar1 = iStack148;\n    iStack148 = uVar2;\n    fcn.0040e6c0(iVar1);\n    fcn.00405170(iVar1);\n    fcn.0040e5f0(uStack144);\n    uVar2 = uStack144;\n    fcn.0040e5f0(uStack144);\n    fcn.0040e5f0(uVar2);\n    fcn.0040e5f0(iStack148);\n    return;\n}\n",
        "token_count": 1990
    },
    "004023b8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004023b8(void)\n\n{\n    int32_t iVar1;\n    int32_t in_stack_ffffffd8;\n    uint uVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    fcn.00405060(0, 0, 0, 0);\n    fcn.00405060();\n    uVar2 = 0xffffffff;\n    iVar1 = fcn.0040b330(0xffffffff, uVar3, 0x18);\n    if (iVar1 != 0) {\n        fcn.0040b600(iVar1, uVar3);\n        fcn.0040b050(uVar2);\n        in_stack_ffffffd8 = iVar1;\n    }\n    fcn.00405de0();\n    fcn.0040e5f0(in_stack_ffffffd8);\n    fcn.0040e5f0(in_stack_ffffffd8);\n    return;\n}\n",
        "token_count": 209
    },
    "00402447": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00402447(void)\n\n{\n    int32_t iVar1;\n    int32_t iStack28;\n    uint uVar2;\n    \n    uVar2 = 0;\n    fcn.00405060(0, 0, 0);\n    iStack28 = 0x40246b;\n    iVar1 = fcn.0040b420(0xffffffff, uVar2, 0x20000);\n    if (iVar1 != 0) {\n        fcn.0040b050();\n        iStack28 = iVar1;\n    }\n    fcn.0040e5f0(iStack28);\n    return;\n}\n",
        "token_count": 141
    },
    "004026c7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004026c7(uint param_1, uint param_2, uint param_3, uint param_4, int32_t param_5, int32_t param_6)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t extraout_EDX;\n    uint extraout_EDX_00;\n    uint extraout_EDX_01;\n    int32_t extraout_EDX_02;\n    int32_t extraout_EDX_03;\n    bool bVar9;\n    ulong uVar10;\n    int32_t unaff_retaddr;\n    uint in_stack_0000002c;\n    int32_t arg_ch;\n    uint uStack68;\n    int32_t iStack64;\n    uint uStack60;\n    uint uStack56;\n    uchar *arg_8h;\n    \n    iVar8 = 0x11;\n    do {\n        iVar8 = iVar8 + -1;\n    } while (iVar8 != 0);\n    fcn.0040e660();\n    fcn.00405060();\n    param_4 = fcn.00401511();\n    param_5 = 0;\n    do {\n        if (param_5 < param_6) break;\n        fcn.0040e520();\n        uVar1 = fcn.0040e520();\n        fcn.0040e520();\n        iVar2 = fcn.0040e520();\n        iVar8 = *(*0x4180f0 + param_6 * 0xc + 4);\n        fcn.0040d780();\n        fcn.00405182();\n        iVar8 = iVar8 + extraout_EDX;\n        fcn.00405eb0();\n        fcn.0040e560(&stack0x00000008, iVar8);\n        fcn.0040e520();\n        fcn.0040e520();\n        arg_ch = unaff_retaddr;\n        fcn.00405e10();\n        arg_8h = &stack0xfffffffc;\n        uStack56 = 0x402783;\n        fcn.0040e560(arg_8h, arg_ch);\n        uStack56 = 10;\n        iStack64 = *0x4180ac;\n        uStack68 = 0x402797;\n        uStack60 = uVar1;\n        sub.KERNEL32.dll_FindResourceW();\n        iVar7 = *0x4180ac;\n        uStack68 = 10;\n        iVar3 = sub.KERNEL32.dll_FindResourceW();\n        uVar1 = *0x4180a8;\n        if (iVar8 == 0) {\n            if (iVar3 == 0) {\n                fcn.0040e520();\n                fcn.0040e6c0(uVar1);\n                fcn.0040e6c0(*0x4180c4);\n                uVar1 = *(*0x4180f0 + arg_8h * 0xc + 4);\n                fcn.0040e6c0(uVar1);\n                fcn.0040e560(&stack0xffffffe0, uVar1);\n                arg_ch = 0;\n                fcn.0040478d();\n                if (*0x4180dc == 1) {\n                    fcn.0040adc5();\n                }\n            }\n            else {\n                fcn.00402664();\n                fcn.0040477d();\n                uVar6 = *0x4180a0;\n                fcn.004011ef();\n                iVar8 = fcn.0040a320();\n                fcn.0040a320();\n                fcn.0040a220();\n                uVar5 = *0x4180a8;\n                iVar4 = fcn.0040e520();\n                fcn.0040e6c0(uVar5);\n                fcn.0040e6c0(*0x4180c4);\n                uVar1 = *(*0x4180f0 + iVar8 * 0xc + 4);\n                fcn.0040e6c0(uVar1);\n                fcn.0040e560(&stack0xffffffbc, uVar1);\n                if (iVar2 != 0) {\n                    uStack68 = fcn.0040ee60(iVar2, &stack0xffffff88, iVar3 + 0x10, extraout_EDX_00);\n                    fcn.0040478d(iVar7, iVar2, uVar5, iVar4);\n                    if (*0x4180dc == 1) {\n                        fcn.0040adc5(uVar6, *(*0x4180f0 + iVar4 * 0xc));\n                    }\n                    fcn.0040a200();\n                }\n            }\n        }\n        else {\n            fcn.00402664();\n            fcn.0040477d();\n            uVar1 = *0x4180a8;\n            fcn.0040e520();\n            fcn.0040e6c0(uVar1);\n            fcn.0040e6c0(*0x4180c4);\n            iVar7 = *(*0x4180f0 + iStack64 * 0xc + 4);\n            fcn.0040e6c0(iVar7);\n            fcn.0040e560(&stack0xffffffd4, iVar7);\n            uVar1 = *0x4180a0;\n            arg_ch = iVar7;\n            fcn.004011ef();\n            fcn.0040478d(iStack64, uStack68, iVar7, uVar1);\n            if (*0x4180dc == 1) {\n                fcn.0040adc5(iVar8, *(*0x4180f0 + arg_ch * 0xc));\n            }\n        }\n        uVar10 = fcn.00402447(iStack64);\n        uVar1 = uVar10 >> 0x20;\n        if (uVar10 != 0) {\n            *0x4180d8 = *0x4180d8 + 1;\n            uVar5 = fcn.0040e520(uVar1);\n            uVar1 = fcn.0040e520(uVar1, uVar5);\n            fcn.00402ba6(uStack68, uVar1);\n            fcn.0040e720();\n            uVar5 = *0x4180e0;\n            uVar6 = fcn.0040e520();\n            fcn.0040e6c0(uVar5);\n            uVar1 = extraout_EDX_01;\n            uVar5 = fcn.0040e520(extraout_EDX_01, uVar5, uVar6);\n            iVar7 = fcn.0040e520(uVar1, uVar5);\n            iVar8 = *0x4180d8 >> 0x1f;\n            fcn.00406160(*0x4180d8, iVar8, iVar7);\n            fcn.00405182();\n            iVar8 = iVar8 + extraout_EDX_02;\n            fcn.00405182(iVar8);\n            fcn.004099a5(iVar8, iVar7 + extraout_EDX_03);\n            fcn.004051a0();\n            fcn.0040ab74(*0x418100);\n            fcn.0040e520();\n            fcn.0040e6c0(arg_ch);\n            fcn.0040e560(*0x418104 + 8, arg_ch);\n        }\n        bVar9 = SCARRY4(param_6, 1);\n        param_6 = param_6 + 1;\n    } while (!bVar9);\n    fcn.0040a200();\n    fcn.0040e520();\n    fcn.0040e520();\n    fcn.0040e520();\n    fcn.00406160();\n    fcn.0040e720();\n    fcn.00405182();\n    fcn.004099a5();\n    fcn.004051a0();\n    fcn.00401511();\n    fcn.0040e5f0(unaff_retaddr);\n    fcn.0040e5f0(unaff_retaddr);\n    uVar1 = param_3;\n    fcn.0040e5f0(param_3);\n    uStack56 = 0x402b65;\n    fcn.0040e5f0(uVar1);\n    return;\n}\n",
        "token_count": 1876
    },
    "00402b6d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool fcn.00402b6d(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 9;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    fcn.0040e660();\n    sub.KERNEL32.dll_GetNativeSystemInfo();\n    return *0x10 != 4;\n}\n",
        "token_count": 82
    },
    "00402c55": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00402c55(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint extraout_EDX;\n    uint extraout_EDX_00;\n    int32_t extraout_EDX_01;\n    uint extraout_EDX_02;\n    bool bVar4;\n    ulong uVar5;\n    uint in_stack_ffffff60;\n    int32_t in_stack_ffffff64;\n    uint arg_ch;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *in_stack_ffffffd4;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    int32_t iStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0;\n    uStack12 = 0;\n    uStack16 = 0;\n    uStack20 = 0;\n    iStack24 = 0;\n    uStack28 = 0;\n    uStack32 = 0x402c63;\n    fcn.0040e660();\n    uStack32 = 0x402c6f;\n    fcn.00405060();\n    uStack48 = extraout_EDX;\n    if (iStack24 == 1) {\n        uStack36 = 0x402c7e;\n        uStack32 = extraout_EDX;\n        uVar1 = fcn.0040e520();\n        uStack36 = uStack32;\n        uStack32 = uVar1;\n        uStack36 = fcn.0040e520();\n        uVar1 = uStack28;\n        fcn.0040a240();\n        in_stack_ffffffd4 = &stack0xffffffdc;\n        uStack48 = 0x402c9c;\n        fcn.0040e560(in_stack_ffffffd4, uVar1);\n        uStack48 = extraout_EDX_00;\n    }\n    uStack52 = 0x402ca2;\n    uVar1 = fcn.0040e520();\n    uStack52 = uStack48;\n    uStack56 = 0x402caa;\n    uStack48 = uVar1;\n    uVar1 = fcn.0040e520();\n    uStack56 = uStack52;\n    uStack52 = uVar1;\n    uVar2 = fcn.0040e520();\n    uVar1 = uStack56;\n    uStack56 = uVar2;\n    uVar1 = fcn.0040e520(uVar1);\n    uVar2 = 1;\n    fcn.0040d780(in_stack_ffffffd4, 1, uVar1);\n    fcn.00405182();\n    in_stack_ffffffd4 = in_stack_ffffffd4 + extraout_EDX_01;\n    fcn.00405eb0();\n    fcn.0040e560(&stack0xffffffc8, in_stack_ffffffd4);\n    iVar3 = sub.KERNEL32.dll_FindResourceW(*0x4180ac, uVar2, 10);\n    if (iVar3 != 0) {\n        arg_ch = *0x4180ac;\n        uVar1 = fcn.00402664(*0x4180ac, iVar3);\n        *0x418078 = fcn.0040477d(uVar1);\n        fcn.004011ef(uVar2, *0x418078, *0x4180a0);\n        uVar1 = extraout_EDX_02;\n        uVar2 = fcn.0040e520(extraout_EDX_02);\n        uVar1 = fcn.0040e520(uVar1, uVar2);\n        fcn.0040a290(arg_ch, *0x418078, uVar1);\n        fcn.0040e560(0x41807c, arg_ch);\n        fcn.0040a200(uVar2);\n        uVar5 = fcn.004059c0(*0x41807c, 0x41703e);\n        uVar1 = fcn.0040e520(uVar5 >> 0x20);\n        iVar3 = uVar5;\n        uVar1 = fcn.0040e520(uVar5 >> 0x20, uVar1);\n        in_stack_ffffff64 = *0x41807c;\n        fcn.00405f20(*0x41807c, iVar3 + -1, uVar1);\n        in_stack_ffffff60 = 0x41807c;\n        fcn.0040e560(0x41807c, in_stack_ffffff64);\n    }\n    bVar4 = true;\n    fcn.00405120();\n    if (bVar4) {\n        if (in_stack_ffffff64 == 1) {\n            *0x418070 = fcn.0040548c(fcn.004026c7, in_stack_ffffff60);\n        }\n        else {\n            fcn.004026c7(in_stack_ffffff60);\n        }\n    }\n    fcn.0040e5f0(in_stack_ffffff60);\n    fcn.0040e5f0(in_stack_ffffff64);\n    return;\n}\n",
        "token_count": 1152
    },
    "00402e49": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00402e49(void)\n\n{\n    uint uVar1;\n    uint in_stack_ffffffd4;\n    uint uStack36;\n    int32_t iStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0;\n    uStack8 = 0;\n    uStack12 = 0;\n    uStack16 = 0;\n    uStack20 = 0;\n    uStack24 = 0;\n    uStack28 = 0x402e56;\n    fcn.0040e660();\n    uStack28 = 0x402e62;\n    fcn.00405060();\n    uStack28 = 10;\n    iStack32 = uStack24;\n    uStack36 = *0x4180ac;\n    iStack32 = sub.KERNEL32.dll_FindResourceW();\n    if (iStack32 != 0) {\n        in_stack_ffffffd4 = *0x4180ac;\n        uStack36 = fcn.00402664(*0x4180ac, iStack32);\n        *0x418078 = fcn.0040477d(uStack36);\n    }\n    uVar1 = fcn.0040a220();\n    uStack36 = 0x200;\n    iStack32 = fcn.0040ee60(uVar1, &stack0xffffffdc, in_stack_ffffffd4, *0x418078);\n    fcn.0040e5f0(0x200);\n    return;\n}\n",
        "token_count": 361
    },
    "0040347d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040347d(uint arg_8h, uint lpPathName)\n\n{\n    int32_t iVar1;\n    \n    fcn.0040e660(0);\n    if (*0x418088 == 1) {\n        iVar1 = fcn.0040aac3(*0x418100);\n        if (0 < iVar1) {\n            fcn.0040aacd(*0x418100);\n            while( true ) {\n                iVar1 = fcn.0040aae2(*0x418100);\n                if (iVar1 == 0) break;\n                fcn.0040ae67();\n            }\n        }\n        iVar1 = fcn.0040aac3(*0x4180f8);\n        if (0 < iVar1) {\n            fcn.00406fb0(*0x4180f8, 1, 0, 5);\n            fcn.0040aacd(*0x4180f8);\n            while( true ) {\n                iVar1 = fcn.0040aae2(*0x4180f8);\n                if (iVar1 == 0) break;\n                sub.KERNEL32.dll_RemoveDirectoryW();\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 270
    },
    "00403bea": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00403bea(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    int32_t in_stack_ffffffd4;\n    uint uVar4;\n    uint uVar5;\n    \n    uVar5 = 0;\n    fcn.0040e660(0);\n    fcn.00405060();\n    uVar4 = *0x418110;\n    piVar2 = fcn.0040a52d(*0x418110, uVar5);\n    if (*piVar2 < 1) {\n        puVar3 = fcn.0040a52d(*0x418110, uVar4);\n        *puVar3 = 1;\n        uVar4 = *0x4180f8;\n        fcn.0040ab74();\n        fcn.0040e520();\n        fcn.0040e6c0(uVar4);\n        iVar1 = *0x4180fc;\n        in_stack_ffffffd4 = *0x4180fc + 0xc;\n        fcn.0040e560(in_stack_ffffffd4, uVar4);\n        *(iVar1 + 8) = *0x4180e4;\n        *0x4180e4 = *0x4180e4 + 1;\n    }\n    fcn.0040e5f0(in_stack_ffffffd4);\n    return;\n}\n",
        "token_count": 317
    },
    "00403e37": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00403e37(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    ushort *puVar3;\n    uint extraout_EDX;\n    uint uStack92;\n    uchar *in_stack_ffffffac;\n    uint uVar4;\n    int32_t in_stack_ffffffb4;\n    int32_t iStack64;\n    int32_t iStack60;\n    int32_t iStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    int32_t iStack40;\n    uint uStack36;\n    int32_t iStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0;\n    uStack12 = 0;\n    uStack16 = 0;\n    uStack20 = 0;\n    uStack24 = 0x403e43;\n    fcn.0040e660();\n    uStack24 = param_3;\n    uStack28 = 0x403e4c;\n    fcn.004051a0();\n    uStack28 = 0x403e58;\n    fcn.00405060();\n    uStack28 = 10;\n    iStack32 = uStack24;\n    uStack36 = *0x4180ac;\n    iStack40 = 0x403e6c;\n    iStack32 = sub.KERNEL32.dll_FindResourceW();\n    if (iStack32 != 0) {\n        uStack44 = *0x4180ac;\n        uStack48 = 0x403e8a;\n        iStack40 = iStack32;\n        uStack48 = fcn.00402664();\n        uStack52 = 0x403e97;\n        uStack36 = uStack48;\n        *0x418078 = fcn.0040477d();\n        uStack52 = *0x4180a0;\n        iStack60 = iStack40;\n        iStack64 = 0x403eb1;\n        iStack56 = *0x418078;\n        fcn.004011ef();\n        if (iStack32 == 1) {\n            iStack64 = *0x418078 >> 0x1f;\n            iVar1 = *0x418078;\n            fcn.0040478d(*0x4180b8, uStack52, *0x418078);\n            fcn.0040a200(iVar1);\n            in_stack_ffffffac = 0x403f36;\n            puVar3 = fcn.0040e750();\n            *puVar3 = 0;\n            goto code_r0x00403f3b;\n        }\n        iStack64 = extraout_EDX;\n        iVar1 = fcn.0040e520();\n        uVar4 = iStack64;\n        iStack64 = iVar1;\n        uVar2 = fcn.0040e520(uVar4);\n        uVar4 = uStack52;\n        in_stack_ffffffb4 = *0x418078;\n        fcn.0040a330(uStack52, *0x418078, 2, uVar2);\n        in_stack_ffffffac = &stack0xffffffc0;\n        fcn.0040e560(in_stack_ffffffac, uVar4);\n        fcn.0040a200(in_stack_ffffffb4);\n    }\n    uStack92 = fcn.0040e520();\n    fcn.0040e6c0(in_stack_ffffffb4);\n    fcn.00405170(in_stack_ffffffb4);\ncode_r0x00403f3b:\n    fcn.0040e5f0(uStack92);\n    fcn.0040e5f0(in_stack_ffffffac);\n    return;\n}\n",
        "token_count": 857
    },
    "00403f53": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00403f53(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint arg_8h;\n    int32_t iVar4;\n    uint extraout_EDX;\n    uint extraout_EDX_00;\n    uint extraout_EDX_01;\n    uint extraout_EDX_02;\n    uint extraout_EDX_03;\n    uint extraout_EDX_04;\n    uint extraout_EDX_05;\n    uint extraout_EDX_06;\n    uint extraout_EDX_07;\n    uint extraout_EDX_08;\n    int32_t extraout_EDX_09;\n    int32_t extraout_EDX_10;\n    uint extraout_EDX_11;\n    int32_t extraout_EDX_12;\n    uint extraout_EDX_13;\n    int32_t iVar5;\n    ulong uVar6;\n    int32_t unaff_retaddr;\n    uint arg_8h_00;\n    int32_t iVar7;\n    uint uVar8;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack8;\n    uchar *puVar9;\n    uchar *puVar10;\n    \n    iVar4 = 0xe;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    fcn.0040e660();\n    *0x41808c = 0x417092;\n    puVar9 = NULL;\n    uStack8 = extraout_EDX;\n    do {\n        if (0x19 < puVar9) break;\n        unaff_retaddr = **0x41808c;\n        *0x41808c = *0x41808c + 1;\n        uStack8 = fcn.0040e520();\n        fcn.0040e520();\n        iVar4 = -unaff_retaddr;\n        fcn.00405dc0();\n        fcn.0040e560(&stack0xfffffffc, iVar4);\n        uVar2 = uStack8;\n        fcn.0040e520();\n        fcn.0040e6c0(uVar2);\n        fcn.0040e6c0(iVar4);\n        puVar10 = &stack0xfffffff0;\n        uStack40 = 0x403fe7;\n        fcn.0040e560(puVar10, iVar4);\n        puVar9 = puVar10 + 1;\n        uStack8 = extraout_EDX_00;\n    } while (!SCARRY4(puVar10, 1));\n    *0x41808c = 0x4170f6;\n    puVar9 = NULL;\n    do {\n        if (2 < puVar9) break;\n        unaff_retaddr = **0x41808c;\n        *0x41808c = *0x41808c + 1;\n        uStack8 = fcn.0040e520();\n        fcn.0040e520();\n        iVar4 = -unaff_retaddr;\n        fcn.00405dc0();\n        fcn.0040e560(&stack0xfffffffc, iVar4);\n        fcn.0040e520();\n        fcn.0040e6c0(puVar9);\n        fcn.0040e6c0(iVar4);\n        puVar10 = &stack0xfffffff4;\n        uStack40 = 0x404068;\n        fcn.0040e560(puVar10, iVar4);\n        puVar9 = puVar10 + 1;\n        uStack8 = extraout_EDX_01;\n    } while (!SCARRY4(puVar10, 1));\n    *0x41808c = 0x4170fb;\n    puVar9 = NULL;\n    do {\n        if (3 < puVar9) break;\n        iVar4 = **0x41808c;\n        *0x41808c = *0x41808c + 1;\n        uStack8 = fcn.0040e520();\n        fcn.0040e520();\n        iVar5 = -iVar4;\n        fcn.00405dc0();\n        fcn.0040e560(&stack0xfffffffc, iVar5);\n        unaff_retaddr = iVar4;\n        fcn.0040e520();\n        fcn.0040e6c0(iVar4);\n        fcn.0040e6c0(iVar5);\n        puVar10 = &stack0xfffffff8;\n        uStack40 = 0x4040e9;\n        fcn.0040e560(puVar10, iVar5);\n        puVar9 = puVar10 + 1;\n        uStack8 = extraout_EDX_02;\n    } while (!SCARRY4(puVar10, 1));\n    *0x41808c = 0x4170f9;\n    puVar9 = NULL;\n    do {\n        puVar10 = &stack0xfffffffc;\n        if (1 < puVar9) break;\n        unaff_retaddr = **0x41808c;\n        *0x41808c = *0x41808c + 1;\n        uStack8 = fcn.0040e520();\n        fcn.0040e520();\n        iVar4 = -unaff_retaddr;\n        fcn.00405dc0();\n        fcn.0040e560(&stack0xfffffffc, iVar4);\n        uVar2 = param_1;\n        fcn.0040e520();\n        fcn.0040e6c0(uVar2);\n        fcn.0040e6c0(iVar4);\n        uStack40 = 0x40416a;\n        fcn.0040e560(&stack0xfffffffc, iVar4);\n        puVar9 = puVar10 + 1;\n        uStack8 = extraout_EDX_03;\n    } while (!SCARRY4(puVar10, 1));\n    *0x41808c = 0x4170cf;\n    puVar9 = NULL;\n    do {\n        if (0xd < puVar9) break;\n        unaff_retaddr = **0x41808c;\n        *0x41808c = *0x41808c + 1;\n        uStack8 = fcn.0040e520();\n        fcn.0040e520();\n        iVar4 = -unaff_retaddr;\n        fcn.00405dc0();\n        fcn.0040e560(&stack0xfffffffc, iVar4);\n        uVar2 = param_2;\n        fcn.0040e520();\n        fcn.0040e6c0(uVar2);\n        fcn.0040e6c0(iVar4);\n        uStack40 = 0x4041eb;\n        puVar10 = *0x10;\n        fcn.0040e560(*0x10, iVar4);\n        puVar9 = puVar10 + 1;\n        uStack8 = extraout_EDX_04;\n    } while (!SCARRY4(puVar10, 1));\n    *0x41808c = 0x4170dd;\n    iVar4 = 0;\n    do {\n        if (0xe < iVar4) break;\n        unaff_retaddr = **0x41808c;\n        *0x41808c = *0x41808c + 1;\n        uStack8 = fcn.0040e520();\n        fcn.0040e520();\n        iVar4 = -unaff_retaddr;\n        fcn.00405dc0();\n        fcn.0040e560(&stack0xfffffffc, iVar4);\n        uVar2 = *0x418090;\n        fcn.0040e520();\n        fcn.0040e6c0(uVar2);\n        fcn.0040e6c0(iVar4);\n        iVar5 = 0x418090;\n        uStack40 = 0x404270;\n        fcn.0040e560(0x418090, iVar4);\n        iVar4 = iVar5 + 1;\n        uStack8 = extraout_EDX_05;\n    } while (!SCARRY4(iVar5, 1));\n    *0x41808c = 0x4170ec;\n    iVar4 = 0;\n    do {\n        if (9 < iVar4) break;\n        unaff_retaddr = **0x41808c;\n        *0x41808c = *0x41808c + 1;\n        uStack8 = fcn.0040e520();\n        fcn.0040e520();\n        iVar4 = -unaff_retaddr;\n        fcn.00405dc0();\n        fcn.0040e560(&stack0xfffffffc, iVar4);\n        uVar2 = *0x4180e0;\n        fcn.0040e520();\n        fcn.0040e6c0(uVar2);\n        fcn.0040e6c0(iVar4);\n        iVar5 = 0x4180e0;\n        uStack40 = 0x4042f5;\n        fcn.0040e560(0x4180e0, iVar4);\n        iVar4 = iVar5 + 1;\n        uStack8 = extraout_EDX_06;\n    } while (!SCARRY4(iVar5, 1));\n    *0x41808c = 0x417084;\n    iVar4 = 0;\n    do {\n        if (4 < iVar4) break;\n        unaff_retaddr = **0x41808c;\n        *0x41808c = *0x41808c + 1;\n        uStack8 = fcn.0040e520();\n        fcn.0040e520();\n        iVar4 = -unaff_retaddr;\n        fcn.00405dc0();\n        fcn.0040e560(&stack0xfffffffc, iVar4);\n        uVar2 = *0x4180bc;\n        fcn.0040e520();\n        fcn.0040e6c0(uVar2);\n        fcn.0040e6c0(iVar4);\n        iVar5 = 0x4180bc;\n        uStack40 = 0x40437a;\n        fcn.0040e560(0x4180bc, iVar4);\n        iVar4 = iVar5 + 1;\n        uStack8 = extraout_EDX_07;\n    } while (!SCARRY4(iVar5, 1));\n    *0x41808c = 0x417103;\n    iVar4 = 0;\n    do {\n        if (3 < iVar4) break;\n        unaff_retaddr = **0x41808c;\n        *0x41808c = *0x41808c + 1;\n        uStack8 = fcn.0040e520();\n        fcn.0040e520();\n        iVar4 = -unaff_retaddr;\n        fcn.00405dc0();\n        fcn.0040e560(&stack0xfffffffc, iVar4);\n        uVar2 = *0x4180b8;\n        fcn.0040e520();\n        fcn.0040e6c0(uVar2);\n        fcn.0040e6c0(iVar4);\n        iVar5 = 0x4180b8;\n        uStack40 = 0x4043ff;\n        fcn.0040e560(0x4180b8, iVar4);\n        iVar4 = iVar5 + 1;\n        uStack8 = extraout_EDX_08;\n    } while (!SCARRY4(iVar5, 1));\n    uStack8 = *0x4180b8;\n    uVar1 = fcn.0040e520();\n    uVar2 = uStack8;\n    uStack8 = uVar1;\n    fcn.0040e6c0(uVar2);\n    uVar2 = param_3;\n    fcn.0040e6c0(param_3);\n    fcn.0040e560(0x4180b8, uVar2);\n    fcn.0040e520();\n    fcn.00403221();\n    uStack40 = 0x40444d;\n    fcn.0040e560(&stack0x00000004, iVar4);\n    uStack40 = 0x404452;\n    fcn.0040985e();\n    uStack40 = 0;\n    uStack44 = 0x404460;\n    uVar6 = sub.KERNEL32.dll_GetModuleHandleW();\n    uStack48 = 0x40446b;\n    uVar2 = fcn.0040e520();\n    uStack44 = uVar6 >> 0x20;\n    *0x4180ac = uVar6;\n    uStack48 = uStack44;\n    uStack44 = uVar2;\n    uStack48 = fcn.0040e520();\n    fcn.0040e520();\n    fcn.0040e520();\n    iVar4 = *0x4180a0;\n    fcn.0040d780();\n    fcn.00405182();\n    iVar4 = iVar4 + extraout_EDX_09;\n    fcn.00405eb0();\n    fcn.0040e560(&stack0xffffffec, iVar4);\n    fcn.0040e520();\n    fcn.0040e520();\n    fcn.0040e520();\n    fcn.0040e520();\n    fcn.0040d780();\n    fcn.00405182();\n    unaff_retaddr = unaff_retaddr + extraout_EDX_10;\n    fcn.00405eb0();\n    fcn.0040e560(&stack0xffffffd0, unaff_retaddr);\n    fcn.00402e49();\n    fcn.0040e520();\n    fcn.00402150();\n    fcn.004051a0();\n    fcn.0040196c();\n    fcn.0040469c();\n    fcn.0040e520();\n    uVar2 = fcn.00405100();\n    fcn.00403539();\n    fcn.0040e560(0x4180a8, uVar2);\n    iVar5 = *0x4180a8;\n    sub.SHLWAPI.DLL_PathRemoveBackslashW();\n    uVar8 = 1;\n    fcn.00402068(1);\n    uVar2 = extraout_EDX_11;\n    uVar3 = fcn.0040e520(extraout_EDX_11);\n    uVar2 = fcn.0040e520(uVar2, uVar3);\n    iVar7 = *0x4180a8;\n    fcn.00402ba6(*0x4180a8, uVar2);\n    fcn.0040e720();\n    fcn.00405182(iVar4);\n    fcn.004099a5(iVar4, iVar7 + extraout_EDX_12);\n    fcn.004051a0();\n    uVar2 = *0x418084;\n    arg_8h = fcn.0040e520();\n    fcn.0040e6c0(uVar2);\n    uVar1 = *0x4180b8;\n    fcn.0040e6c0(*0x4180b8);\n    arg_8h_00 = 0x4180b8;\n    fcn.0040e560(0x4180b8, uVar1);\n    fcn.00403801();\n    uVar1 = fcn.0040e520(extraout_EDX_13);\n    fcn.00401e66();\n    fcn.0040e560(&stack0xffffff84, iVar5);\n    if (*0x4180c0 == 1) {\n        *0x418070 = fcn.0040548c(fcn.00402c55, uVar3);\n    }\n    else {\n        fcn.00402c55(uVar3);\n    }\n    fcn.00403c83(uVar8, iVar4, arg_8h_00, uVar2);\n    main();\n    fcn.00401fba();\n    fcn.0040e5f0(uVar1);\n    fcn.0040e5f0(arg_8h_00);\n    fcn.0040e5f0(0x4020ce);\n    fcn.0040e5f0(0x4020ce);\n    fcn.0040e5f0(arg_8h_00);\n    fcn.0040e5f0(arg_8h);\n    fcn.0040e5f0(0);\n    fcn.0040e5f0(arg_8h);\n    fcn.0040e5f0(arg_8h_00);\n    return;\n}\n",
        "token_count": 3725
    },
    "0040478d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040478d(int32_t param_1)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    int32_t unaff_retaddr;\n    uint uStack32;\n    \n    fcn.0040e660();\n    uStack32 = 0x4047a7;\n    fcn.00405060();\n    if (*0x4180a4 != 1) {\n        uStack32 = 0;\n        iVar2 = fcn.00402447();\n        if (iVar2 != 0) {\n            bVar1 = true;\n            goto code_r0x004047c7;\n        }\n    }\n    bVar1 = false;\ncode_r0x004047c7:\n    if ((!bVar1) && (iVar2 = fcn.0040b350(0xffffffff, uStack32),  iVar2 != 0)) {\n        if ((param_1 < 1) && ((param_1 < 0 || (unaff_retaddr == 0)))) {\n            bVar1 = false;\n        }\n        else {\n            bVar1 = true;\n        }\n        if (bVar1) {\n            fcn.0040b630(iVar2, unaff_EBX, unaff_retaddr);\n        }\n        uStack32 = 0;\n        fcn.0040b050();\n    }\n    fcn.0040e5f0(uStack32);\n    return;\n}\n",
        "token_count": 318
    },
    "00405573": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00405573(void)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iStack844;\n    int32_t iStack840;\n    int32_t iStack832;\n    uchar auStack572 [4];\n    int32_t iStack568;\n    int32_t iStack564;\n    char cStack290;\n    uint auStack288 [70];\n    char cStack6;\n    \n    iStack844 = 0x114;\n    iVar4 = 200;\n    iVar3 = 0;\n    iVar5 = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetVersionExW)(&iStack844);\n    if (iVar2 == 0) {\n        return 200;\n    }\n    if (iStack832 == 1) {\n        if (iStack840 == 0) {\n            return 10;\n        }\n        if (iStack840 != 10) {\n            if (iStack840 != 0x5a) {\n                return 200;\n            }\n            return 0x28;\n        }\n        return 0x1e;\n    }\n    if (iStack832 != 2) {\n        return 200;\n    }\n    uVar1 = 0;\n    iVar2 = fcn.0040552c(auStack572);\n    if (iVar2 == 0) {\n        auStack288[0] = 0x11c;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetVersionExW)(auStack288);\n        iStack568 = iStack844;\n        iStack564 = iStack840;\n        cStack290 = cStack6;\n        if (iVar2 == 0) goto code_r0x00405611;\n    }\n    iVar3 = iStack568;\n    iVar5 = iStack564;\n    if (cStack290 == '\\x01') {\n        uVar1 = 1;\n    }\ncode_r0x00405611:\n    if (iVar3 == 3) {\n        iVar4 = 5;\n    }\n    else if (iVar3 == 4) {\n        iVar4 = 0x14;\n    }\n    else if (iVar3 == 5) {\n        if (iVar5 == 0) {\n            iVar4 = 0x32;\n        }\n        else if (iVar5 == 1) {\n            iVar4 = 0x3c;\n        }\n        else if (iVar5 == 2) {\n            iVar4 = (-uVar1 & 0xfffffffb) + 0x41;\n        }\n    }\n    else if (iVar3 == 6) {\n        if (iVar5 == 0) {\n            iVar4 = (-uVar1 & 0xfffffffb) + 0x4b;\n        }\n        else if (iVar5 == 1) {\n            iVar4 = (-uVar1 & 0xfffffffb) + 0x55;\n        }\n        else if (iVar5 == 2) {\n            iVar4 = (-uVar1 & 0xfffffffb) + 0x5f;\n        }\n        else if (iVar5 == 3) {\n            iVar4 = (-uVar1 & 0xfffffffb) + 0x69;\n        }\n    }\n    else if ((iVar3 == 10) && (iVar5 == 0)) {\n        iVar4 = 0x6e;\n    }\n    return iVar4;\n}\n",
        "token_count": 762
    },
    "004056d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004056d8(void)\n\n{\n    if (*0x418120 == 0) {\n        (*_sym.imp.WINMM.DLL_timeBeginPeriod)(1);\n        *0x418120 = 1;\n    }\n    // WARNING: Could not recover jumptable at 0x004056f3. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_Sleep)();\n    return;\n}\n",
        "token_count": 102
    },
    "00405760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00405760(int16_t *param_1, int16_t *param_2)\n\n{\n    int16_t *piVar1;\n    int16_t *piVar2;\n    int16_t iVar3;\n    int16_t *piVar4;\n    int32_t iVar5;\n    \n    iVar5 = 0;\n    if ((param_1 == NULL) || (param_2 == NULL)) {\n        return 0;\n    }\n    if ((*param_2 == 0) || (iVar3 = *param_1,  iVar3 == 0)) {\n        return 0;\n    }\n    do {\n        param_1 = param_1 + 1;\n        if (iVar3 == *param_2) {\n            piVar4 = param_2 + 1;\n            iVar3 = *param_1;\n            piVar2 = param_1;\n            while (iVar3 != 0) {\n                if (*piVar4 == 0) goto code_r0x004057c2;\n                if (iVar3 != *piVar4) break;\n                piVar1 = piVar2 + 1;\n                piVar2 = piVar2 + 1;\n                piVar4 = piVar4 + 1;\n                iVar3 = *piVar1;\n            }\n            if (*piVar4 == 0) {\ncode_r0x004057c2:\n                iVar5 = iVar5 + 1;\n                param_1 = piVar2;\n            }\n        }\n        iVar3 = *param_1;\n        if (iVar3 == 0) {\n            return iVar5;\n        }\n    } while( true );\n}\n",
        "token_count": 359
    },
    "004057f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004057f0(int16_t *param_1, int32_t param_2, int16_t *param_3, uint param_4)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int16_t *piVar4;\n    int32_t iVar5;\n    int32_t arg_8h;\n    int16_t *arg_8h_00;\n    int32_t iVar6;\n    \n    arg_8h = 0;\n    if (param_2 < 1) {\n        fcn.0040e9e0(param_4);\n        return;\n    }\n    if (param_1 == NULL) {\n        param_1 = 0x413024;\n    }\n    if (param_3 == NULL) {\n        param_3 = 0x413024;\n    }\n    iVar6 = 0;\n    arg_8h_00 = param_1;\n    if ((*param_3 == 0) || (param_3[1] == 0)) {\n        do {\n            iVar1 = *arg_8h_00;\n            if ((iVar1 == *param_3) || (iVar1 == 0)) {\n                iVar6 = iVar6 + 1;\n                if (iVar6 == param_2) {\n                    arg_8h = arg_8h_00 - param_1 >> 1;\n                    goto code_r0x004058c1;\n                }\n                if (iVar1 == 0) goto code_r0x004058c1;\n                param_1 = arg_8h_00 + 1;\n            }\n            arg_8h_00 = arg_8h_00 + 1;\n        } while( true );\n    }\n    piVar4 = param_3;\n    do {\n        iVar1 = *piVar4;\n        piVar4 = piVar4 + 1;\n    } while (iVar1 != 0);\n    iVar5 = piVar4 - (param_3 + 1) >> 1;\n    while( true ) {\n        for (; (iVar2 = sub.MSVCRT.dll_wcsncmp(arg_8h_00, param_3, iVar5),  iVar2 != 0 && (*arg_8h_00 != 0));\n            arg_8h_00 = arg_8h_00 + 1) {\n        }\n        iVar6 = iVar6 + 1;\n        if (iVar6 == param_2) break;\n        if (*arg_8h_00 == 0) goto code_r0x004058c1;\n        arg_8h_00 = arg_8h_00 + iVar5;\n        param_1 = arg_8h_00;\n    }\n    arg_8h = arg_8h_00 - param_1 >> 1;\ncode_r0x004058c1:\n    iVar6 = fcn.0040e880(arg_8h_00);\n    if (iVar6 != 0) {\n        uVar3 = fcn.0040e8d0(param_3);\n        sub.MSVCRT.dll_memmove(uVar3, param_1, arg_8h * 2);\n    }\n    iVar5 = fcn.0040e900(arg_8h, param_3);\n    if (iVar6 == 0) {\n        sub.MSVCRT.dll_wcsncpy(iVar5, param_1, arg_8h);\n    }\n    *(iVar5 + arg_8h * 2) = 0;\n    return;\n}\n",
        "token_count": 774
    },
    "00405920": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00405920(int16_t *param_1, int16_t *param_2, int32_t param_3, uint8_t param_4)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    \n    if (param_1 == NULL) {\n        return 0;\n    }\n    if (((param_2 == NULL) || (*param_1 == 0)) || (*param_2 == 0)) {\n        return 0;\n    }\n    param_3 = param_3 + -1;\n    piVar1 = param_1;\n    if (0 < param_3) {\n        iVar2 = 0;\n        do {\n            if (*piVar1 == 0) break;\n            iVar2 = iVar2 + 2;\n            piVar1 = piVar1 + 1;\n        } while (iVar2 >> 1 < param_3);\n    }\n    iVar2 = piVar1 - param_1 >> 1;\n    if (param_3 < 0) {\n        param_3 = 0;\n    }\n    else if (iVar2 < param_3) {\n        param_3 = iVar2;\n    }\n    if ((param_4 & 1) == 0) {\n        iVar2 = sub.MSVCRT.dll_wcsstr(param_1 + param_3, param_2);\n    }\n    else {\n        iVar2 = fcn.00406670();\n    }\n    if (iVar2 == 0) {\n        return 0;\n    }\n    return (iVar2 - param_1 >> 1) + 1;\n}\n",
        "token_count": 352
    },
    "00405ba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00405ba0(code *param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    int16_t *piVar4;\n    int16_t *piVar5;\n    int32_t iVar6;\n    int16_t *piVar7;\n    int32_t iVar8;\n    int32_t arg_8h;\n    int16_t *piVar9;\n    int16_t *piVar10;\n    int16_t *piVar11;\n    int32_t iStack12;\n    uint8_t uStack8;\n    int16_t *piStack4;\n    \n    if (param_1 == NULL) {\n        arg_8h = 0;\n    }\n    else {\n        piVar4 = param_1;\n        do {\n            iVar1 = *piVar4;\n            piVar4 = piVar4 + 1;\n        } while (iVar1 != 0);\n        arg_8h = piVar4 - (param_1 + 2) >> 1;\n    }\n    fcn.0040e880(param_1);\n    iVar2 = fcn.0040e880(param_1);\n    piVar3 = fcn.0040e900(arg_8h, param_4);\n    piVar4 = param_1;\n    if (iStack12 != 0) {\n        piVar4 = fcn.0040ea10(iStack12);\n        param_1 = fcn.0040ea10(iStack12);\n    }\n    piVar7 = piVar3;\n    if ((piVar4 != NULL) && (*piVar4 != 0)) {\n        if ((param_1 == NULL) || (*param_1 == 0)) {\n            piVar7 = piVar4;\n            do {\n                iVar1 = *piVar7;\n                piVar7 = piVar7 + 1;\n                *(piVar3 + (-2 - piVar4) + piVar7) = iVar1;\n            } while (iVar1 != 0);\n            piVar7 = piVar3 + arg_8h;\n        }\n        else {\n            piVar7 = param_1;\n            do {\n                iVar1 = *piVar7;\n                piVar7 = piVar7 + 1;\n            } while (iVar1 != 0);\n            iVar8 = piVar7 - (param_1 + 2) >> 1;\n            piVar5 = param_1;\n            piVar9 = piStack4;\n            piVar10 = piVar4;\n            piVar11 = piVar3;\n            if (iStack12 != 0) {\n                piVar5 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x418068, 0, iVar8 * 2 + 2);\n                piVar7 = param_1;\n                do {\n                    iVar1 = *piVar7;\n                    piVar7 = piVar7 + 1;\n                    *(piVar5 + (-2 - param_1) + piVar7) = iVar1;\n                    piVar9 = piVar5;\n                } while (iVar1 != 0);\n            }\n            param_1 = 0x40530d;\n            if ((uStack8 & 1) == 0) {\n                param_1 = sub.MSVCRT.dll_wcsncmp;\n            }\n            if (1 < piStack4) {\n                sub.MSVCRT.dll_wcsncpy(piVar3, piVar4, piStack4 + -1);\n                piVar3 = piVar3 + piStack4 + -1;\n                piVar4 = piVar4 + piStack4 + -1;\n            }\n            iVar1 = *piVar4;\n            piVar7 = piVar3;\n            piVar3 = piVar11;\n            while (iVar1 != 0) {\n                iVar6 = (*param_1)(piVar4, piVar5, iVar8);\n                if (iVar6 == 0) {\n                    piVar4 = piVar4 + iVar8;\n                    if ((iVar2 != -1) && (iVar2 = iVar2 + -1,  iVar2 < 1)) {\n                        iVar2 = arg_8h - (piVar4 - piVar10 >> 1);\n                        sub.MSVCRT.dll_wcsncpy(piVar7, piVar4, iVar2);\n                        piVar7 = piVar7 + iVar2;\n                        break;\n                    }\n                }\n                else {\n                    *piVar7 = *piVar4;\n                    piVar7 = piVar7 + 1;\n                    piVar4 = piVar4 + 1;\n                }\n                iVar1 = *piVar4;\n            }\n            if (iStack12 != 0) {\n                (*_sym.imp.KERNEL32.dll_HeapFree)(*0x418068, 0, piVar9);\n            }\n        }\n    }\n    fcn.0040ea90(arg_8h - (piVar7 - piVar3 >> 1));\n    *piVar7 = 0;\n    return;\n}\n",
        "token_count": 1113
    },
    "00406080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00406080(int16_t *param_1, uint param_2, uint32_t param_3)\n\n{\n    int32_t arg_8h;\n    int16_t *piVar1;\n    int16_t iVar2;\n    uint32_t arg_8h_00;\n    int32_t unaff_EBP;\n    int16_t *piVar3;\n    \n    arg_8h_00 = (param_3 < 0) - 1 & param_3;\n    arg_8h = fcn.0040e880(param_1);\n    piVar1 = fcn.0040e900(arg_8h_00, param_3);\n    if (arg_8h != 0) {\n        param_1 = fcn.0040ea10(arg_8h);\n    }\n    piVar3 = piVar1;\n    if (param_1 != NULL) {\n        for (; 1 < unaff_EBP; unaff_EBP = unaff_EBP + -1) {\n            if (*param_1 == 0) goto code_r0x004060f7;\n            param_1 = param_1 + 1;\n        }\n        iVar2 = *param_1;\n        if (iVar2 != 0) {\n            do {\n                if (arg_8h_00 == 0) break;\n                *piVar3 = iVar2;\n                arg_8h_00 = arg_8h_00 - 1;\n                iVar2 = *(param_1 + (2 - piVar1) + piVar3);\n                piVar3 = piVar3 + 1;\n            } while (iVar2 != 0);\n        }\n    }\ncode_r0x004060f7:\n    fcn.0040ea90(arg_8h_00);\n    *piVar3 = 0;\n    return;\n}\n",
        "token_count": 405
    },
    "00406310": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00406310(code *param_1, int16_t *param_2, int16_t *param_3, uint32_t param_4, int32_t param_5, int32_t param_6)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    int16_t *piVar4;\n    int16_t *piVar5;\n    code *arg_ch;\n    int16_t *piVar6;\n    int16_t *piVar7;\n    int32_t unaff_EBP;\n    int32_t iVar8;\n    int32_t unaff_ESI;\n    int32_t iVar9;\n    int32_t unaff_EDI;\n    int32_t iVar10;\n    int16_t *unaff_retaddr;\n    code *pcVar11;\n    int32_t iStack24;\n    int16_t *piStack12;\n    int16_t *piStack8;\n    code *pcStack4;\n    \n    iVar8 = 0;\n    if (param_1 == NULL) {\n        param_1 = 0x413024;\n    }\n    if (param_2 == NULL) {\n        param_2 = 0x413024;\n    }\n    if (param_3 == NULL) {\n        param_3 = 0x413024;\n    }\n    arg_ch = 0x40530d;\n    if ((param_4 & 1) == 0) {\n        arg_ch = sub.MSVCRT.dll_wcsncmp;\n    }\n    if (param_5 < 1) {\n        param_5 = 1;\n    }\n    piVar3 = param_2;\n    do {\n        iVar1 = *piVar3;\n        piVar3 = piVar3 + 1;\n    } while (iVar1 != 0);\n    iVar9 = piVar3 - (param_2 + 1) >> 1;\n    piVar3 = param_3;\n    do {\n        iVar1 = *piVar3;\n        piVar3 = piVar3 + 1;\n    } while (iVar1 != 0);\n    iVar10 = piVar3 - (param_3 + 1) >> 1;\n    if ((param_4 & 2) == 0) {\n        pcVar11 = param_1;\n        iVar2 = fcn.0040e880(param_1);\n        if (iVar2 != 0) {\n            unaff_retaddr = sub.MSVCRT.dll__wcsdup(unaff_retaddr);\n        }\n        iVar2 = fcn.0040e880(param_2);\n        piVar3 = param_2;\n        if (iVar2 != 0) {\n            piVar3 = sub.MSVCRT.dll__wcsdup(param_2);\n            unaff_retaddr = piVar3;\n        }\n        piVar4 = fcn.0040e880(param_1);\n        if (piVar4 != NULL) {\n            unaff_retaddr = sub.MSVCRT.dll__wcsdup(unaff_retaddr);\n        }\n        piVar5 = piStack8 + param_2 + -1;\n        piVar6 = piVar5;\n        if (param_3 != NULL) {\n            iVar1 = *piVar5;\n            piVar7 = piVar5;\n            while (iVar1 != 0) {\n                if (unaff_EBP == 0) {\n                    if ((iVar1 == *piVar3) &&\n                       (iVar2 = (*param_1)(piVar7, piVar3, iVar9),  iVar10 = unaff_ESI,  iVar2 == 0))\n                    goto code_r0x00406553;\ncode_r0x004064e2:\n                    piVar7 = piVar7 + 1;\n                    iVar10 = unaff_ESI;\n                }\n                else {\n                    iVar2 = (*param_1)(piVar7, piVar3, iVar9);\n                    iVar10 = unaff_ESI;\n                    if (iVar2 != 0) goto code_r0x004064e2;\ncode_r0x00406553:\n                    piVar7 = piVar7 + iVar9;\n                    iVar8 = iVar8 + 1;\n                    if ((param_3 != 0xffffffff) && (param_3 <= iVar8)) break;\n                }\n                unaff_ESI = iVar10;\n                iVar1 = *piVar7;\n            }\n        }\n        piVar3 = piStack8;\n        do {\n            iVar1 = *piVar3;\n            piVar3 = piVar3 + 1;\n        } while (iVar1 != 0);\n        piVar3 = fcn.0040e900((iVar10 - iVar9) * iVar8 + (piVar3 - (piStack8 + 1) >> 1), arg_ch);\n        if (iVar8 == 0) {\n            piVar6 = piStack8;\n            do {\n                iVar1 = *piVar6;\n                piVar6 = piVar6 + 1;\n                *(piVar3 + (-2 - piStack8) + piVar6) = iVar1;\n                piVar4 = piStack8;\n            } while (iVar1 != 0);\n        }\n        else {\n            piVar7 = piStack8;\n            if (1 < unaff_retaddr) {\n                piVar7 = piVar6;\n                sub.MSVCRT.dll_wcsncpy(piVar3, piVar4, unaff_retaddr);\n                piVar3 = piVar3 + unaff_EBP + -2;\n            }\n            iVar1 = *piVar7;\n            while (iVar1 != 0) {\n                if (iVar8 < 1) {\ncode_r0x004065b7:\n                    *piVar3 = *piVar7;\n                    piVar3 = piVar3 + 1;\n                    piVar7 = piVar7 + 1;\n                }\n                else {\n                    if (unaff_EDI == 0) {\n                        if (iVar1 != *piStack12) goto code_r0x004065b7;\n                        iVar10 = (*pcStack4)(piVar7, piStack12, iVar9);\n                    }\n                    else {\n                        iVar10 = (*pcStack4)(piVar7, piStack12, iVar9);\n                    }\n                    if (iVar10 != 0) goto code_r0x004065b7;\n                    sub.MSVCRT.dll_wcsncpy(piVar3, piStack8, pcVar11);\n                    piVar7 = piVar7 + iVar9;\n                    iVar8 = iVar8 + -1;\n                    piVar3 = piVar3 + pcVar11;\n                }\n                iVar1 = *piVar7;\n            }\n            *piVar3 = 0;\n        }\n        if ((param_2 & 0x7fffffff) != 0) {\n            sub.MSVCRT.dll_free(piVar4);\n        }\n        if (piVar5 != NULL) {\n            sub.MSVCRT.dll_free(piStack12);\n        }\n        if (iStack24 != 0) {\n            sub.MSVCRT.dll_free(piStack8);\n        }\n    }\n    else if (((iVar9 != 0) && (param_6 != 0)) &&\n            (piVar3 = param_1 + (param_5 + -1) * 2,  piVar4 = piVar3,  *piVar3 != 0)) {\n        while ((param_6 == -1 || (iVar8 < param_6))) {\n            iVar2 = (*arg_ch)(piVar4, param_2, iVar9);\n            if (iVar2 == 0) {\n                sub.MSVCRT.dll_wcsncpy(piVar4, param_3, iVar10);\n                piVar3 = piVar3 + iVar9;\n                iVar8 = iVar8 + 1;\n                piVar4 = piVar4 + iVar10;\n            }\n            else {\n                piVar4 = piVar4 + 1;\n                piVar3 = piVar3 + 1;\n            }\n            if (*piVar3 == 0) {\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 1763
    },
    "00406cf0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00406cf0(int32_t *param_1, uint param_2, uint param_3, int32_t param_4, int32_t param_5)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint32_t unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t iVar6;\n    int32_t unaff_EDI;\n    int32_t unaff_retaddr;\n    \n    iVar6 = param_5;\n    piVar3 = param_1;\n    if ((param_1 != NULL) && (*param_1 != 0)) {\n        if (param_5 == -1) {\n            piVar4 = param_1[1];\n            iVar6 = param_1[4];\n        }\n        else {\n            unaff_EDI = fcn.0040ac12(param_1, param_5);\n            iVar1 = param_4;\n            iVar5 = fcn.0040ac12(piVar3, param_4);\n            iVar6 = (iVar1 - iVar6) + 1;\n            if (unaff_ESI == 0) {\n                return;\n            }\n            if (iVar5 == 0) {\n                return;\n            }\n            unaff_ESI = unaff_ESI + -8;\n            piVar4 = iVar5 + -8;\n        }\n        iVar1 = *piVar4;\n        piVar2 = *(unaff_ESI + 4);\n        iVar5 = unaff_EDI + 8;\n        if (unaff_retaddr == -1) {\n            unaff_retaddr = piVar3[0xb];\n        }\n        param_1 = piVar4;\n    // switch table (25 cases) at 0x406f64\n        switch(unaff_retaddr) {\n        case 1:\n            if ((unaff_EBX & 1) == 0) {\n                fcn.00407fe0(&stack0xfffffff4, &param_1, iVar6, iVar5);\n            }\n            else {\n                fcn.00407120();\n            }\n            break;\n        case 3:\n            if ((unaff_EBX & 1) == 0) {\n                fcn.00408c00(&stack0xfffffff4, &param_1, iVar6, iVar5);\n            }\n            else {\n                fcn.00407d40();\n            }\n            break;\n        case 5:\n        case 0x15:\n            if ((unaff_EBX & 1) == 0) {\n                fcn.00408540(&stack0xfffffff4, &param_1, iVar6, iVar5);\n            }\n            else {\n                fcn.00407680();\n            }\n            break;\n        case 8:\n            if ((unaff_EBX & 1) == 0) {\n                if ((unaff_EBX & 2) == 0) {\n                    fcn.004087f0(&stack0xfffffff4, &param_1, iVar6, iVar5);\n                }\n                else {\n                    fcn.00408950();\n                }\n            }\n            else if ((unaff_EBX & 2) == 0) {\n                fcn.00407930(&stack0xfffffff4, &param_1);\n            }\n            else {\n                fcn.00407a90();\n            }\n            break;\n        case 9:\n            if ((unaff_EBX & 1) == 0) {\n                fcn.004083f0(&stack0xfffffff4, &param_1, iVar6, iVar5);\n            }\n            else {\n                fcn.00407530();\n            }\n            break;\n        case 0xb:\n            if ((unaff_EBX & 1) == 0) {\n                fcn.00408130(&stack0xfffffff4, &param_1, iVar6, iVar5);\n            }\n            else {\n                fcn.00407270();\n            }\n            break;\n        case 0xc:\n            if ((unaff_EBX & 1) == 0) {\n                fcn.00408280(&stack0xfffffff4, &param_1, iVar6, iVar5);\n            }\n            else {\n                fcn.004073c0(&stack0xfffffff4, &param_1, iVar6, iVar5);\n            }\n            break;\n        case 0xd:\n            if ((unaff_EBX & 1) == 0) {\n                fcn.00408690(&stack0xfffffff4, &param_1, iVar6, iVar5);\n            }\n            else {\n                fcn.004077d0();\n            }\n            break;\n        case 0x18:\n            if ((unaff_EBX & 1) == 0) {\n                fcn.00407e90(&stack0xfffffff4, &param_1, iVar6, iVar5);\n            }\n            else {\n                fcn.00406fd0();\n            }\n            break;\n        case 0x19:\n            if ((unaff_EBX & 1) == 0) {\n                fcn.00408ab0(&stack0xfffffff4, &param_1, iVar6, iVar5);\n            }\n            else {\n                fcn.00407bf0();\n            }\n        }\n        *(unaff_ESI + 4) = piVar2;\n        *param_1 = iVar1;\n        if (piVar2 == NULL) {\n            *piVar3 = unaff_ESI;\n        }\n        else {\n            *piVar2 = unaff_ESI;\n        }\n        if (iVar1 == 0) {\n            piVar3[1] = param_1;\n            *(piVar3 + 0xc) = 1;\n            return;\n        }\n        *(iVar1 + 4) = param_1;\n        *(piVar3 + 0xc) = 1;\n    }\n    return;\n}\n",
        "token_count": 1305
    },
    "00406fd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00406fd0(int32_t **param_1, int32_t **param_2, int32_t **param_3, int32_t param_4)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    int32_t **ppiVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t **ppiStack12;\n    int32_t *apiStack8 [2];\n    \n    iVar3 = param_4;\n    if (param_3 == 0x2) {\n        piVar1 = *param_1;\n        if (*(param_4 + *param_2) <= *(piVar1 + param_4)) {\n            return;\n        }\n        *param_1 = *param_2;\n        *param_2 = piVar1;\n        **param_1 = piVar1;\n        (*param_2)[1] = *param_1;\n        return;\n    }\n    if (param_3 < 3) {\n        return;\n    }\n    ppiVar5 = *param_1;\n    iVar6 = param_3 / 2;\n    iVar7 = param_3 - iVar6;\n    for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n        ppiVar5 = *ppiVar5;\n    }\n    ppiStack12 = ppiVar5[1];\n    iVar6 = param_3 - iVar7;\n    param_3 = ppiVar5;\n    fcn.00406fd0(param_1, &ppiStack12, iVar6, param_4);\n    fcn.00406fd0(&param_3, param_2, iVar7, iVar3);\n    ppiVar4 = *param_1;\n    ppiVar5 = apiStack8;\n    while (ppiVar2 = ppiVar4,  iVar6 != 0) {\n        if (iVar7 == 0) goto joined_r0x004070f6;\n        if (*(ppiVar2 + iVar3) < *(param_3 + iVar3)) {\n            *ppiVar5 = param_3;\n            iVar7 = iVar7 + -1;\n            param_3[1] = ppiVar5;\n            ppiVar4 = ppiVar2;\n            ppiVar5 = param_3;\n            param_3 = *param_3;\n        }\n        else {\n            *ppiVar5 = ppiVar2;\n            iVar6 = iVar6 + -1;\n            ppiVar2[1] = ppiVar5;\n            ppiVar4 = *ppiVar2;\n            ppiVar5 = ppiVar2;\n        }\n    }\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *ppiVar5 = param_3;\n        param_3[1] = ppiVar5;\n        ppiVar5 = param_3;\n        param_3 = *param_3;\n    }\ncode_r0x004070dc:\n    *param_1 = apiStack8[0];\n    *param_2 = ppiVar5;\n    return;\njoined_r0x004070f6:\n    for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *ppiVar5 = ppiVar2;\n        ppiVar2[1] = ppiVar5;\n        ppiVar5 = ppiVar2;\n        ppiVar2 = *ppiVar2;\n    }\n    goto code_r0x004070dc;\n}\n",
        "token_count": 788
    },
    "00407120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00407120(int32_t **param_1, int32_t **param_2, int32_t **param_3, int32_t param_4)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    int32_t **ppiVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t **ppiStack12;\n    int32_t *apiStack8 [2];\n    \n    iVar3 = param_4;\n    if (param_3 == 0x2) {\n        piVar1 = *param_1;\n        if (*(param_4 + *param_2) <= *(piVar1 + param_4)) {\n            return;\n        }\n        *param_1 = *param_2;\n        *param_2 = piVar1;\n        **param_1 = piVar1;\n        (*param_2)[1] = *param_1;\n        return;\n    }\n    if (param_3 < 3) {\n        return;\n    }\n    ppiVar5 = *param_1;\n    iVar6 = param_3 / 2;\n    iVar7 = param_3 - iVar6;\n    for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n        ppiVar5 = *ppiVar5;\n    }\n    ppiStack12 = ppiVar5[1];\n    iVar6 = param_3 - iVar7;\n    param_3 = ppiVar5;\n    fcn.00407120(param_1, &ppiStack12, iVar6, param_4);\n    fcn.00407120(&param_3, param_2, iVar7, iVar3);\n    ppiVar4 = *param_1;\n    ppiVar5 = apiStack8;\n    while (ppiVar2 = ppiVar4,  iVar6 != 0) {\n        if (iVar7 == 0) goto joined_r0x00407246;\n        if (*(ppiVar2 + iVar3) < *(param_3 + iVar3)) {\n            *ppiVar5 = param_3;\n            iVar7 = iVar7 + -1;\n            param_3[1] = ppiVar5;\n            ppiVar4 = ppiVar2;\n            ppiVar5 = param_3;\n            param_3 = *param_3;\n        }\n        else {\n            *ppiVar5 = ppiVar2;\n            iVar6 = iVar6 + -1;\n            ppiVar2[1] = ppiVar5;\n            ppiVar4 = *ppiVar2;\n            ppiVar5 = ppiVar2;\n        }\n    }\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *ppiVar5 = param_3;\n        param_3[1] = ppiVar5;\n        ppiVar5 = param_3;\n        param_3 = *param_3;\n    }\ncode_r0x0040722c:\n    *param_1 = apiStack8[0];\n    *param_2 = ppiVar5;\n    return;\njoined_r0x00407246:\n    for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *ppiVar5 = ppiVar2;\n        ppiVar2[1] = ppiVar5;\n        ppiVar5 = ppiVar2;\n        ppiVar2 = *ppiVar2;\n    }\n    goto code_r0x0040722c;\n}\n",
        "token_count": 785
    },
    "00407270": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00407270(int32_t **param_1, int32_t **param_2, int32_t **param_3, int32_t param_4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    int32_t **ppiVar4;\n    int32_t **ppiVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t **ppiStack12;\n    int32_t *apiStack8 [2];\n    \n    iVar2 = param_4;\n    if (param_3 == 0x2) {\n        piVar1 = *param_1;\n        if (*(param_4 + *param_2) <= *(piVar1 + param_4)) {\n            return;\n        }\n        *param_1 = *param_2;\n        *param_2 = piVar1;\n        **param_1 = piVar1;\n        (*param_2)[1] = *param_1;\n        return;\n    }\n    if (param_3 < 3) {\n        return;\n    }\n    ppiVar5 = *param_1;\n    iVar6 = param_3 / 2;\n    iVar7 = param_3 - iVar6;\n    for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n        ppiVar5 = *ppiVar5;\n    }\n    ppiStack12 = ppiVar5[1];\n    iVar6 = param_3 - iVar7;\n    param_3 = ppiVar5;\n    fcn.00407270(param_1, &ppiStack12, iVar6, param_4);\n    fcn.00407270(&param_3, param_2, iVar7, iVar2);\n    ppiVar3 = *param_1;\n    ppiVar5 = apiStack8;\n    while (ppiVar4 = ppiVar3,  iVar6 != 0) {\n        if (iVar7 == 0) goto joined_r0x004073a0;\n        if (*(ppiVar4 + iVar2) < *(param_3 + iVar2)) {\n            *ppiVar5 = param_3;\n            iVar7 = iVar7 + -1;\n            param_3[1] = ppiVar5;\n            ppiVar3 = ppiVar4;\n            ppiVar5 = param_3;\n            param_3 = *param_3;\n        }\n        else {\n            *ppiVar5 = ppiVar4;\n            iVar6 = iVar6 + -1;\n            ppiVar4[1] = ppiVar5;\n            ppiVar3 = *ppiVar4;\n            ppiVar5 = ppiVar4;\n        }\n    }\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *ppiVar5 = param_3;\n        param_3[1] = ppiVar5;\n        ppiVar5 = param_3;\n        param_3 = *param_3;\n    }\ncode_r0x00407386:\n    *param_1 = apiStack8[0];\n    *param_2 = ppiVar5;\n    return;\njoined_r0x004073a0:\n    for (; ppiVar3 = ppiVar4,  iVar6 != 0; iVar6 = iVar6 + -1) {\n        *ppiVar5 = ppiVar3;\n        ppiVar3[1] = ppiVar5;\n        ppiVar4 = *ppiVar3;\n        ppiVar5 = ppiVar3;\n    }\n    goto code_r0x00407386;\n}\n",
        "token_count": 796
    },
    "004073c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004073c0(int32_t **arg_8h, int32_t **arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    int32_t arg_10h_00;\n    int32_t **ppiStack24;\n    int32_t **ppiStack20;\n    int32_t *apiStack16 [3];\n    \n    if (arg_10h == 2) {\n        piVar1 = *arg_8h;\n        if (((*(arg_14h + *arg_ch) < *(piVar1 + arg_14h)) << 8 | (*(arg_14h + *arg_ch) == *(piVar1 + arg_14h)) << 0xe)\n            == 0) {\n            *arg_8h = *arg_ch;\n            *arg_ch = piVar1;\n            **arg_8h = piVar1;\n            (*arg_ch)[1] = *arg_8h;\n            return;\n        }\n    }\n    else if (2 < arg_10h) {\n        iVar3 = arg_10h / 2;\n        arg_10h_00 = arg_10h - iVar3;\n        ppiStack24 = *arg_8h;\n        for (; iVar3 != 0; iVar3 = iVar3 + -1) {\n            ppiStack24 = *ppiStack24;\n        }\n        ppiStack20 = ppiStack24[1];\n        arg_10h = arg_10h - arg_10h_00;\n        fcn.004073c0(arg_8h, &ppiStack20, arg_10h, arg_14h);\n        fcn.004073c0(&ppiStack24, arg_ch, arg_10h_00, arg_14h);\n        ppiVar4 = apiStack16;\n        ppiVar2 = *arg_8h;\n        while (arg_10h != 0) {\n            if (arg_10h_00 == 0) {\n                if (arg_10h != 0) {\n                    do {\n                        ppiStack20 = ppiVar2;\n                        *ppiVar4 = ppiStack20;\n                        ppiStack20[1] = ppiVar4;\n                        arg_10h = arg_10h + -1;\n                        ppiVar4 = ppiStack20;\n                        ppiVar2 = *ppiStack20;\n                    } while (arg_10h != 0);\n                    *arg_8h = apiStack16[0];\n                    *arg_ch = ppiStack20;\n                    return;\n                }\n                goto code_r0x004074e6;\n            }\n            if (*(ppiStack24 + arg_14h) < *(ppiVar2 + arg_14h) == (*(ppiStack24 + arg_14h) == *(ppiVar2 + arg_14h))) {\n                *ppiVar4 = ppiStack24;\n                arg_10h_00 = arg_10h_00 + -1;\n                ppiStack24[1] = ppiVar4;\n                ppiVar4 = ppiStack24;\n                ppiStack24 = *ppiStack24;\n            }\n            else {\n                *ppiVar4 = ppiVar2;\n                arg_10h = arg_10h + -1;\n                ppiVar2[1] = ppiVar4;\n                ppiVar4 = ppiVar2;\n                ppiVar2 = *ppiVar2;\n            }\n        }\n        for (; arg_10h_00 != 0; arg_10h_00 = arg_10h_00 + -1) {\n            *ppiVar4 = ppiStack24;\n            ppiStack24[1] = ppiVar4;\n            ppiVar4 = ppiStack24;\n            ppiStack24 = *ppiStack24;\n        }\ncode_r0x004074e6:\n        *arg_8h = apiStack16[0];\n        *arg_ch = ppiVar4;\n    }\n    return;\n}\n",
        "token_count": 922
    },
    "00407530": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00407530(int32_t **param_1, int32_t **param_2, int32_t **param_3, int32_t param_4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    int32_t **ppiVar4;\n    int32_t iVar5;\n    int32_t **ppiVar6;\n    int32_t iVar7;\n    int32_t **ppiStack12;\n    int32_t *apiStack8 [2];\n    \n    iVar2 = param_4;\n    if (param_3 == 0x2) {\n        piVar1 = *param_1;\n        if (((*(*param_2 + param_4) < *(piVar1 + param_4)) << 8 | (*(*param_2 + param_4) == *(piVar1 + param_4)) << 0xe)\n            != 0) {\n            return;\n        }\n        *param_1 = *param_2;\n        *param_2 = piVar1;\n        **param_1 = piVar1;\n        (*param_2)[1] = *param_1;\n        return;\n    }\n    if (param_3 < 3) {\n        return;\n    }\n    ppiVar6 = *param_1;\n    iVar5 = param_3 / 2;\n    iVar7 = param_3 - iVar5;\n    for (; iVar5 != 0; iVar5 = iVar5 + -1) {\n        ppiVar6 = *ppiVar6;\n    }\n    ppiStack12 = ppiVar6[1];\n    iVar5 = param_3 - iVar7;\n    param_3 = ppiVar6;\n    fcn.00407530(param_1, &ppiStack12, iVar5, param_4);\n    fcn.00407530(&param_3, param_2, iVar7, iVar2);\n    ppiVar3 = *param_1;\n    ppiVar6 = apiStack8;\n    while (ppiVar4 = ppiVar3,  iVar5 != 0) {\n        if (iVar7 == 0) goto joined_r0x00407665;\n        if (*(param_3 + iVar2) < *(ppiVar4 + iVar2) == (*(param_3 + iVar2) == *(ppiVar4 + iVar2))) {\n            *ppiVar6 = param_3;\n            iVar7 = iVar7 + -1;\n            param_3[1] = ppiVar6;\n            ppiVar3 = ppiVar4;\n            ppiVar6 = param_3;\n            param_3 = *param_3;\n        }\n        else {\n            *ppiVar6 = ppiVar4;\n            iVar5 = iVar5 + -1;\n            ppiVar4[1] = ppiVar6;\n            ppiVar3 = *ppiVar4;\n            ppiVar6 = ppiVar4;\n        }\n    }\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *ppiVar6 = param_3;\n        param_3[1] = ppiVar6;\n        ppiVar6 = param_3;\n        param_3 = *param_3;\n    }\ncode_r0x0040764b:\n    *param_1 = apiStack8[0];\n    *param_2 = ppiVar6;\n    return;\njoined_r0x00407665:\n    for (; ppiVar3 = ppiVar4,  iVar5 != 0; iVar5 = iVar5 + -1) {\n        *ppiVar6 = ppiVar3;\n        ppiVar3[1] = ppiVar6;\n        ppiVar4 = *ppiVar3;\n        ppiVar6 = ppiVar3;\n    }\n    goto code_r0x0040764b;\n}\n",
        "token_count": 849
    },
    "00407680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00407680(int32_t **param_1, int32_t **param_2, int32_t **param_3, int32_t param_4)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    int32_t **ppiVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t **ppiStack12;\n    int32_t *apiStack8 [2];\n    \n    iVar3 = param_4;\n    if (param_3 == 0x2) {\n        piVar1 = *param_1;\n        if (*(param_4 + *param_2) <= *(piVar1 + param_4)) {\n            return;\n        }\n        *param_1 = *param_2;\n        *param_2 = piVar1;\n        **param_1 = piVar1;\n        (*param_2)[1] = *param_1;\n        return;\n    }\n    if (param_3 < 3) {\n        return;\n    }\n    ppiVar5 = *param_1;\n    iVar6 = param_3 / 2;\n    iVar7 = param_3 - iVar6;\n    for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n        ppiVar5 = *ppiVar5;\n    }\n    ppiStack12 = ppiVar5[1];\n    iVar6 = param_3 - iVar7;\n    param_3 = ppiVar5;\n    fcn.00407680(param_1, &ppiStack12, iVar6, param_4);\n    fcn.00407680(&param_3, param_2, iVar7, iVar3);\n    ppiVar4 = *param_1;\n    ppiVar5 = apiStack8;\n    while (ppiVar2 = ppiVar4,  iVar6 != 0) {\n        if (iVar7 == 0) goto joined_r0x004077a6;\n        if (*(ppiVar2 + iVar3) < *(param_3 + iVar3)) {\n            *ppiVar5 = param_3;\n            iVar7 = iVar7 + -1;\n            param_3[1] = ppiVar5;\n            ppiVar4 = ppiVar2;\n            ppiVar5 = param_3;\n            param_3 = *param_3;\n        }\n        else {\n            *ppiVar5 = ppiVar2;\n            iVar6 = iVar6 + -1;\n            ppiVar2[1] = ppiVar5;\n            ppiVar4 = *ppiVar2;\n            ppiVar5 = ppiVar2;\n        }\n    }\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *ppiVar5 = param_3;\n        param_3[1] = ppiVar5;\n        ppiVar5 = param_3;\n        param_3 = *param_3;\n    }\ncode_r0x0040778c:\n    *param_1 = apiStack8[0];\n    *param_2 = ppiVar5;\n    return;\njoined_r0x004077a6:\n    for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *ppiVar5 = ppiVar2;\n        ppiVar2[1] = ppiVar5;\n        ppiVar5 = ppiVar2;\n        ppiVar2 = *ppiVar2;\n    }\n    goto code_r0x0040778c;\n}\n",
        "token_count": 787
    },
    "004077d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004077d0(int32_t **param_1, int32_t **param_2, int32_t **param_3, int32_t param_4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t **ppiVar6;\n    int32_t **ppiVar7;\n    int32_t **ppiVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t **ppiStack12;\n    int32_t *apiStack8 [2];\n    \n    iVar1 = param_4;\n    if (param_3 == 0x2) {\n        piVar3 = *param_1;\n        piVar4 = *param_2;\n        iVar9 = *(piVar3 + param_4 + 4);\n        iVar1 = *(param_4 + 4 + piVar4);\n        if (iVar1 < iVar9) {\n            return;\n        }\n        if ((iVar1 <= iVar9) && (*(param_4 + piVar4) <= *(piVar3 + param_4))) {\n            return;\n        }\n        *param_1 = piVar4;\n        *param_2 = piVar3;\n        **param_1 = piVar3;\n        (*param_2)[1] = *param_1;\n        return;\n    }\n    if (param_3 < 3) {\n        return;\n    }\n    ppiVar8 = *param_1;\n    iVar9 = param_3 / 2;\n    iVar10 = param_3 - iVar9;\n    for (; iVar9 != 0; iVar9 = iVar9 + -1) {\n        ppiVar8 = *ppiVar8;\n    }\n    ppiStack12 = ppiVar8[1];\n    iVar9 = param_3 - iVar10;\n    param_3 = ppiVar8;\n    fcn.004077d0(param_1, &ppiStack12, iVar9, param_4);\n    fcn.004077d0(&param_3, param_2, iVar10, iVar1);\n    ppiVar7 = *param_1;\n    ppiVar8 = apiStack8;\n    while (ppiVar6 = ppiVar7,  iVar9 != 0) {\n        if (iVar10 == 0) goto joined_r0x00407912;\n        iVar5 = *(ppiVar6 + iVar1 + 4);\n        iVar2 = *(param_3 + iVar1 + 4);\n        if ((iVar5 < iVar2) || ((iVar5 <= iVar2 && (*(ppiVar6 + iVar1) < *(param_3 + iVar1))))) {\n            *ppiVar8 = param_3;\n            iVar10 = iVar10 + -1;\n            param_3[1] = ppiVar8;\n            ppiVar7 = ppiVar6;\n            ppiVar8 = param_3;\n            param_3 = *param_3;\n        }\n        else {\n            *ppiVar8 = ppiVar6;\n            iVar9 = iVar9 + -1;\n            ppiVar6[1] = ppiVar8;\n            ppiVar7 = *ppiVar6;\n            ppiVar8 = ppiVar6;\n        }\n    }\n    for (; iVar10 != 0; iVar10 = iVar10 + -1) {\n        *ppiVar8 = param_3;\n        param_3[1] = ppiVar8;\n        ppiVar8 = param_3;\n        param_3 = *param_3;\n    }\ncode_r0x004078f8:\n    *param_1 = apiStack8[0];\n    *param_2 = ppiVar8;\n    return;\njoined_r0x00407912:\n    for (; iVar9 != 0; iVar9 = iVar9 + -1) {\n        *ppiVar8 = ppiVar6;\n        ppiVar6[1] = ppiVar8;\n        ppiVar8 = ppiVar6;\n        ppiVar6 = *ppiVar6;\n    }\n    goto code_r0x004078f8;\n}\n",
        "token_count": 920
    },
    "00407930": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00407930(int32_t **param_1, int32_t **param_2, int32_t **param_3, int32_t param_4)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t **ppiVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t **ppiVar8;\n    int32_t **unaff_EDI;\n    int32_t iVar9;\n    int32_t **ppiStack12;\n    int32_t *apiStack8 [2];\n    \n    iVar4 = param_4;\n    if (param_3 == 0x2) {\n        iVar4 = fcn.00408d50(*(*param_1 + param_4), *(*param_2 + param_4));\n        if (-1 < iVar4) {\n            return;\n        }\n        piVar1 = *param_1;\n        *param_1 = *param_2;\n        *param_2 = piVar1;\n        **param_1 = piVar1;\n        (*param_2)[1] = *param_1;\n        return;\n    }\n    if (param_3 < 3) {\n        return;\n    }\n    ppiVar2 = *param_1;\n    iVar6 = param_3 / 2;\n    iVar7 = param_3 - iVar6;\n    for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n        ppiVar2 = *ppiVar2;\n    }\n    ppiStack12 = ppiVar2[1];\n    iVar6 = param_3 - iVar7;\n    param_3 = ppiVar2;\n    iVar9 = iVar6;\n    fcn.00407930(param_1, &ppiStack12, iVar6, param_4);\n    fcn.00407930(&param_3, param_2, iVar7, iVar4);\n    ppiStack12 = *param_1;\n    ppiVar3 = ppiStack12;\n    ppiVar8 = apiStack8;\n    ppiVar2 = param_3;\n    while (iVar6 != 0) {\n        if (iVar7 == 0) goto joined_r0x00407a71;\n        iVar5 = fcn.00408d50(iVar9, *(ppiVar2 + iVar4), *(ppiVar3 + iVar4));\n        if (iVar5 < 0) {\n            iVar7 = iVar7 + -1;\n            *ppiVar8 = param_1;\n            param_1[1] = ppiVar8;\n            ppiVar2 = *param_1;\n            ppiVar3 = unaff_EDI;\n            ppiVar8 = param_1;\n            param_1 = ppiVar2;\n        }\n        else {\n            iVar6 = iVar6 + -1;\n            *ppiVar8 = unaff_EDI;\n            unaff_EDI[1] = ppiVar8;\n            ppiVar3 = *unaff_EDI;\n            ppiVar8 = unaff_EDI;\n            ppiVar2 = param_1;\n            unaff_EDI = *unaff_EDI;\n        }\n    }\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *ppiVar8 = ppiVar2;\n        param_3[1] = ppiVar8;\n        ppiVar2 = *param_3;\n        ppiVar8 = param_3;\n        param_3 = ppiVar2;\n    }\ncode_r0x00407a57:\n    *param_1 = apiStack8[0];\n    *param_2 = ppiVar8;\n    return;\njoined_r0x00407a71:\n    for (; ppiVar2 = ppiStack12,  iVar6 != 0; iVar6 = iVar6 + -1) {\n        *ppiVar8 = ppiVar3;\n        ppiVar2[1] = ppiVar8;\n        ppiVar3 = *ppiVar2;\n        ppiStack12 = ppiVar3;\n        ppiVar8 = ppiVar2;\n    }\n    goto code_r0x00407a57;\n}\n",
        "token_count": 934
    },
    "00407a90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00407a90(int32_t **param_1, int32_t **param_2, int32_t **param_3, int32_t param_4)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t **ppiVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t **ppiVar8;\n    int32_t **unaff_EDI;\n    int32_t iVar9;\n    int32_t **ppiStack12;\n    int32_t *apiStack8 [2];\n    \n    iVar4 = param_4;\n    if (param_3 == 0x2) {\n        iVar4 = fcn.00408db0(*(*param_1 + param_4), *(*param_2 + param_4));\n        if (-1 < iVar4) {\n            return;\n        }\n        piVar1 = *param_1;\n        *param_1 = *param_2;\n        *param_2 = piVar1;\n        **param_1 = piVar1;\n        (*param_2)[1] = *param_1;\n        return;\n    }\n    if (param_3 < 3) {\n        return;\n    }\n    ppiVar2 = *param_1;\n    iVar6 = param_3 / 2;\n    iVar7 = param_3 - iVar6;\n    for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n        ppiVar2 = *ppiVar2;\n    }\n    ppiStack12 = ppiVar2[1];\n    iVar6 = param_3 - iVar7;\n    param_3 = ppiVar2;\n    iVar9 = iVar6;\n    fcn.00407a90(param_1, &ppiStack12, iVar6, param_4);\n    fcn.00407a90(&param_3, param_2, iVar7, iVar4);\n    ppiStack12 = *param_1;\n    ppiVar3 = ppiStack12;\n    ppiVar8 = apiStack8;\n    ppiVar2 = param_3;\n    while (iVar6 != 0) {\n        if (iVar7 == 0) goto joined_r0x00407bd1;\n        iVar5 = fcn.00408db0(iVar9, *(ppiVar2 + iVar4), *(ppiVar3 + iVar4));\n        if (iVar5 < 0) {\n            iVar7 = iVar7 + -1;\n            *ppiVar8 = param_1;\n            param_1[1] = ppiVar8;\n            ppiVar2 = *param_1;\n            ppiVar3 = unaff_EDI;\n            ppiVar8 = param_1;\n            param_1 = ppiVar2;\n        }\n        else {\n            iVar6 = iVar6 + -1;\n            *ppiVar8 = unaff_EDI;\n            unaff_EDI[1] = ppiVar8;\n            ppiVar3 = *unaff_EDI;\n            ppiVar8 = unaff_EDI;\n            ppiVar2 = param_1;\n            unaff_EDI = *unaff_EDI;\n        }\n    }\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *ppiVar8 = ppiVar2;\n        param_3[1] = ppiVar8;\n        ppiVar2 = *param_3;\n        ppiVar8 = param_3;\n        param_3 = ppiVar2;\n    }\ncode_r0x00407bb7:\n    *param_1 = apiStack8[0];\n    *param_2 = ppiVar8;\n    return;\njoined_r0x00407bd1:\n    for (; ppiVar2 = ppiStack12,  iVar6 != 0; iVar6 = iVar6 + -1) {\n        *ppiVar8 = ppiVar3;\n        ppiVar2[1] = ppiVar8;\n        ppiVar3 = *ppiVar2;\n        ppiStack12 = ppiVar3;\n        ppiVar8 = ppiVar2;\n    }\n    goto code_r0x00407bb7;\n}\n",
        "token_count": 937
    },
    "00407bf0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00407bf0(int32_t **param_1, int32_t **param_2, int32_t **param_3, int32_t param_4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    int32_t **ppiVar4;\n    int32_t **ppiVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t **ppiStack12;\n    int32_t *apiStack8 [2];\n    \n    iVar2 = param_4;\n    if (param_3 == 0x2) {\n        piVar1 = *param_1;\n        if (*(param_4 + *param_2) <= *(piVar1 + param_4)) {\n            return;\n        }\n        *param_1 = *param_2;\n        *param_2 = piVar1;\n        **param_1 = piVar1;\n        (*param_2)[1] = *param_1;\n        return;\n    }\n    if (param_3 < 3) {\n        return;\n    }\n    ppiVar5 = *param_1;\n    iVar6 = param_3 / 2;\n    iVar7 = param_3 - iVar6;\n    for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n        ppiVar5 = *ppiVar5;\n    }\n    ppiStack12 = ppiVar5[1];\n    iVar6 = param_3 - iVar7;\n    param_3 = ppiVar5;\n    fcn.00407bf0(param_1, &ppiStack12, iVar6, param_4);\n    fcn.00407bf0(&param_3, param_2, iVar7, iVar2);\n    ppiVar3 = *param_1;\n    ppiVar5 = apiStack8;\n    while (ppiVar4 = ppiVar3,  iVar6 != 0) {\n        if (iVar7 == 0) goto joined_r0x00407d20;\n        if (*(ppiVar4 + iVar2) < *(param_3 + iVar2)) {\n            *ppiVar5 = param_3;\n            iVar7 = iVar7 + -1;\n            param_3[1] = ppiVar5;\n            ppiVar3 = ppiVar4;\n            ppiVar5 = param_3;\n            param_3 = *param_3;\n        }\n        else {\n            *ppiVar5 = ppiVar4;\n            iVar6 = iVar6 + -1;\n            ppiVar4[1] = ppiVar5;\n            ppiVar3 = *ppiVar4;\n            ppiVar5 = ppiVar4;\n        }\n    }\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *ppiVar5 = param_3;\n        param_3[1] = ppiVar5;\n        ppiVar5 = param_3;\n        param_3 = *param_3;\n    }\ncode_r0x00407d06:\n    *param_1 = apiStack8[0];\n    *param_2 = ppiVar5;\n    return;\njoined_r0x00407d20:\n    for (; ppiVar3 = ppiVar4,  iVar6 != 0; iVar6 = iVar6 + -1) {\n        *ppiVar5 = ppiVar3;\n        ppiVar3[1] = ppiVar5;\n        ppiVar4 = *ppiVar3;\n        ppiVar5 = ppiVar3;\n    }\n    goto code_r0x00407d06;\n}\n",
        "token_count": 801
    },
    "00407d40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00407d40(int32_t **param_1, int32_t **param_2, int32_t **param_3, int32_t param_4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    int32_t **ppiVar4;\n    int32_t **ppiVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t **ppiStack12;\n    int32_t *apiStack8 [2];\n    \n    iVar2 = param_4;\n    if (param_3 == 0x2) {\n        piVar1 = *param_1;\n        if (*(param_4 + *param_2) <= *(piVar1 + param_4)) {\n            return;\n        }\n        *param_1 = *param_2;\n        *param_2 = piVar1;\n        **param_1 = piVar1;\n        (*param_2)[1] = *param_1;\n        return;\n    }\n    if (param_3 < 3) {\n        return;\n    }\n    ppiVar5 = *param_1;\n    iVar6 = param_3 / 2;\n    iVar7 = param_3 - iVar6;\n    for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n        ppiVar5 = *ppiVar5;\n    }\n    ppiStack12 = ppiVar5[1];\n    iVar6 = param_3 - iVar7;\n    param_3 = ppiVar5;\n    fcn.00407d40(param_1, &ppiStack12, iVar6, param_4);\n    fcn.00407d40(&param_3, param_2, iVar7, iVar2);\n    ppiVar3 = *param_1;\n    ppiVar5 = apiStack8;\n    while (ppiVar4 = ppiVar3,  iVar6 != 0) {\n        if (iVar7 == 0) goto joined_r0x00407e70;\n        if (*(ppiVar4 + iVar2) < *(param_3 + iVar2)) {\n            *ppiVar5 = param_3;\n            iVar7 = iVar7 + -1;\n            param_3[1] = ppiVar5;\n            ppiVar3 = ppiVar4;\n            ppiVar5 = param_3;\n            param_3 = *param_3;\n        }\n        else {\n            *ppiVar5 = ppiVar4;\n            iVar6 = iVar6 + -1;\n            ppiVar4[1] = ppiVar5;\n            ppiVar3 = *ppiVar4;\n            ppiVar5 = ppiVar4;\n        }\n    }\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *ppiVar5 = param_3;\n        param_3[1] = ppiVar5;\n        ppiVar5 = param_3;\n        param_3 = *param_3;\n    }\ncode_r0x00407e56:\n    *param_1 = apiStack8[0];\n    *param_2 = ppiVar5;\n    return;\njoined_r0x00407e70:\n    for (; ppiVar3 = ppiVar4,  iVar6 != 0; iVar6 = iVar6 + -1) {\n        *ppiVar5 = ppiVar3;\n        ppiVar3[1] = ppiVar5;\n        ppiVar4 = *ppiVar3;\n        ppiVar5 = ppiVar3;\n    }\n    goto code_r0x00407e56;\n}\n",
        "token_count": 801
    },
    "00407e90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00407e90(int32_t **param_1, int32_t **param_2, int32_t **param_3, int32_t param_4)\n\n{\n    uint8_t *puVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    int32_t iVar4;\n    int32_t **ppiVar5;\n    int32_t **ppiVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t **ppiStack12;\n    int32_t *apiStack8 [2];\n    \n    iVar4 = param_4;\n    if (param_3 == 0x2) {\n        piVar2 = *param_1;\n        puVar1 = param_4 + *param_2;\n        if (*(piVar2 + param_4) < *puVar1 || *(piVar2 + param_4) == *puVar1) {\n            return;\n        }\n        *param_1 = *param_2;\n        *param_2 = piVar2;\n        **param_1 = piVar2;\n        (*param_2)[1] = *param_1;\n        return;\n    }\n    if (param_3 < 3) {\n        return;\n    }\n    ppiVar6 = *param_1;\n    iVar7 = param_3 / 2;\n    iVar8 = param_3 - iVar7;\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        ppiVar6 = *ppiVar6;\n    }\n    ppiStack12 = ppiVar6[1];\n    iVar7 = param_3 - iVar8;\n    param_3 = ppiVar6;\n    fcn.00407e90(param_1, &ppiStack12, iVar7, param_4);\n    fcn.00407e90(&param_3, param_2, iVar8, iVar4);\n    ppiVar5 = *param_1;\n    ppiVar6 = apiStack8;\n    while (ppiVar3 = ppiVar5,  iVar7 != 0) {\n        if (iVar8 == 0) goto joined_r0x00407fb6;\n        if (*(ppiVar3 + iVar4) < *(param_3 + iVar4) || *(ppiVar3 + iVar4) == *(param_3 + iVar4)) {\n            *ppiVar6 = ppiVar3;\n            iVar7 = iVar7 + -1;\n            ppiVar3[1] = ppiVar6;\n            ppiVar5 = *ppiVar3;\n            ppiVar6 = ppiVar3;\n        }\n        else {\n            *ppiVar6 = param_3;\n            iVar8 = iVar8 + -1;\n            param_3[1] = ppiVar6;\n            ppiVar5 = ppiVar3;\n            ppiVar6 = param_3;\n            param_3 = *param_3;\n        }\n    }\n    for (; iVar8 != 0; iVar8 = iVar8 + -1) {\n        *ppiVar6 = param_3;\n        param_3[1] = ppiVar6;\n        ppiVar6 = param_3;\n        param_3 = *param_3;\n    }\ncode_r0x00407f9c:\n    *param_1 = apiStack8[0];\n    *param_2 = ppiVar6;\n    return;\njoined_r0x00407fb6:\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *ppiVar6 = ppiVar3;\n        ppiVar3[1] = ppiVar6;\n        ppiVar6 = ppiVar3;\n        ppiVar3 = *ppiVar3;\n    }\n    goto code_r0x00407f9c;\n}\n",
        "token_count": 843
    },
    "00407fe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00407fe0(int32_t **param_1, int32_t **param_2, int32_t **param_3, int32_t param_4)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    int32_t **ppiVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t **ppiStack12;\n    int32_t *apiStack8 [2];\n    \n    iVar3 = param_4;\n    if (param_3 == 0x2) {\n        piVar1 = *param_1;\n        if (*(piVar1 + param_4) <= *(param_4 + *param_2)) {\n            return;\n        }\n        *param_1 = *param_2;\n        *param_2 = piVar1;\n        **param_1 = piVar1;\n        (*param_2)[1] = *param_1;\n        return;\n    }\n    if (param_3 < 3) {\n        return;\n    }\n    ppiVar5 = *param_1;\n    iVar6 = param_3 / 2;\n    iVar7 = param_3 - iVar6;\n    for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n        ppiVar5 = *ppiVar5;\n    }\n    ppiStack12 = ppiVar5[1];\n    iVar6 = param_3 - iVar7;\n    param_3 = ppiVar5;\n    fcn.00407fe0(param_1, &ppiStack12, iVar6, param_4);\n    fcn.00407fe0(&param_3, param_2, iVar7, iVar3);\n    ppiVar4 = *param_1;\n    ppiVar5 = apiStack8;\n    while (ppiVar2 = ppiVar4,  iVar6 != 0) {\n        if (iVar7 == 0) goto joined_r0x00408106;\n        if (*(param_3 + iVar3) < *(ppiVar2 + iVar3)) {\n            *ppiVar5 = param_3;\n            iVar7 = iVar7 + -1;\n            param_3[1] = ppiVar5;\n            ppiVar4 = ppiVar2;\n            ppiVar5 = param_3;\n            param_3 = *param_3;\n        }\n        else {\n            *ppiVar5 = ppiVar2;\n            iVar6 = iVar6 + -1;\n            ppiVar2[1] = ppiVar5;\n            ppiVar4 = *ppiVar2;\n            ppiVar5 = ppiVar2;\n        }\n    }\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *ppiVar5 = param_3;\n        param_3[1] = ppiVar5;\n        ppiVar5 = param_3;\n        param_3 = *param_3;\n    }\ncode_r0x004080ec:\n    *param_1 = apiStack8[0];\n    *param_2 = ppiVar5;\n    return;\njoined_r0x00408106:\n    for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *ppiVar5 = ppiVar2;\n        ppiVar2[1] = ppiVar5;\n        ppiVar5 = ppiVar2;\n        ppiVar2 = *ppiVar2;\n    }\n    goto code_r0x004080ec;\n}\n",
        "token_count": 786
    },
    "00408130": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00408130(int32_t **param_1, int32_t **param_2, int32_t **param_3, int32_t param_4)\n\n{\n    uint16_t *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    int32_t **ppiVar5;\n    int32_t **ppiVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t **ppiStack12;\n    int32_t *apiStack8 [2];\n    \n    iVar3 = param_4;\n    if (param_3 == 0x2) {\n        piVar2 = *param_1;\n        puVar1 = param_4 + *param_2;\n        if (*(piVar2 + param_4) < *puVar1 || *(piVar2 + param_4) == *puVar1) {\n            return;\n        }\n        *param_1 = *param_2;\n        *param_2 = piVar2;\n        **param_1 = piVar2;\n        (*param_2)[1] = *param_1;\n        return;\n    }\n    if (param_3 < 3) {\n        return;\n    }\n    ppiVar6 = *param_1;\n    iVar7 = param_3 / 2;\n    iVar8 = param_3 - iVar7;\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        ppiVar6 = *ppiVar6;\n    }\n    ppiStack12 = ppiVar6[1];\n    iVar7 = param_3 - iVar8;\n    param_3 = ppiVar6;\n    fcn.00408130(param_1, &ppiStack12, iVar7, param_4);\n    fcn.00408130(&param_3, param_2, iVar8, iVar3);\n    ppiVar4 = *param_1;\n    ppiVar6 = apiStack8;\n    while (ppiVar5 = ppiVar4,  iVar7 != 0) {\n        if (iVar8 == 0) goto joined_r0x00408260;\n        if (*(ppiVar5 + iVar3) < *(param_3 + iVar3) || *(ppiVar5 + iVar3) == *(param_3 + iVar3)) {\n            *ppiVar6 = ppiVar5;\n            iVar7 = iVar7 + -1;\n            ppiVar5[1] = ppiVar6;\n            ppiVar4 = *ppiVar5;\n            ppiVar6 = ppiVar5;\n        }\n        else {\n            *ppiVar6 = param_3;\n            iVar8 = iVar8 + -1;\n            param_3[1] = ppiVar6;\n            ppiVar4 = ppiVar5;\n            ppiVar6 = param_3;\n            param_3 = *param_3;\n        }\n    }\n    for (; iVar8 != 0; iVar8 = iVar8 + -1) {\n        *ppiVar6 = param_3;\n        param_3[1] = ppiVar6;\n        ppiVar6 = param_3;\n        param_3 = *param_3;\n    }\ncode_r0x00408246:\n    *param_1 = apiStack8[0];\n    *param_2 = ppiVar6;\n    return;\njoined_r0x00408260:\n    for (; ppiVar4 = ppiVar5,  iVar7 != 0; iVar7 = iVar7 + -1) {\n        *ppiVar6 = ppiVar4;\n        ppiVar4[1] = ppiVar6;\n        ppiVar5 = *ppiVar4;\n        ppiVar6 = ppiVar4;\n    }\n    goto code_r0x00408246;\n}\n",
        "token_count": 845
    },
    "00408280": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408280(int32_t **arg_8h, int32_t **arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    int32_t arg_10h_00;\n    int32_t **ppiStack24;\n    int32_t **ppiStack20;\n    int32_t *apiStack16 [3];\n    \n    if (arg_10h == 2) {\n        piVar1 = *arg_8h;\n        if (*(arg_14h + *arg_ch) < *(piVar1 + arg_14h)) {\n            *arg_8h = *arg_ch;\n            *arg_ch = piVar1;\n            **arg_8h = piVar1;\n            (*arg_ch)[1] = *arg_8h;\n            return;\n        }\n    }\n    else if (2 < arg_10h) {\n        iVar3 = arg_10h / 2;\n        arg_10h_00 = arg_10h - iVar3;\n        ppiStack24 = *arg_8h;\n        for (; iVar3 != 0; iVar3 = iVar3 + -1) {\n            ppiStack24 = *ppiStack24;\n        }\n        ppiStack20 = ppiStack24[1];\n        arg_10h = arg_10h - arg_10h_00;\n        fcn.00408280(arg_8h, &ppiStack20, arg_10h, arg_14h);\n        fcn.00408280(&ppiStack24, arg_ch, arg_10h_00, arg_14h);\n        ppiVar4 = apiStack16;\n        ppiVar2 = *arg_8h;\n        while (arg_10h != 0) {\n            if (arg_10h_00 == 0) {\n                if (arg_10h != 0) {\n                    do {\n                        ppiStack20 = ppiVar2;\n                        *ppiVar4 = ppiStack20;\n                        ppiStack20[1] = ppiVar4;\n                        arg_10h = arg_10h + -1;\n                        ppiVar4 = ppiStack20;\n                        ppiVar2 = *ppiStack20;\n                    } while (arg_10h != 0);\n                    *arg_8h = apiStack16[0];\n                    *arg_ch = ppiStack20;\n                    return;\n                }\n                goto code_r0x004083a6;\n            }\n            if (*(ppiStack24 + arg_14h) < *(ppiVar2 + arg_14h)) {\n                *ppiVar4 = ppiStack24;\n                arg_10h_00 = arg_10h_00 + -1;\n                ppiStack24[1] = ppiVar4;\n                ppiVar4 = ppiStack24;\n                ppiStack24 = *ppiStack24;\n            }\n            else {\n                *ppiVar4 = ppiVar2;\n                arg_10h = arg_10h + -1;\n                ppiVar2[1] = ppiVar4;\n                ppiVar4 = ppiVar2;\n                ppiVar2 = *ppiVar2;\n            }\n        }\n        for (; arg_10h_00 != 0; arg_10h_00 = arg_10h_00 + -1) {\n            *ppiVar4 = ppiStack24;\n            ppiStack24[1] = ppiVar4;\n            ppiVar4 = ppiStack24;\n            ppiStack24 = *ppiStack24;\n        }\ncode_r0x004083a6:\n        *arg_8h = apiStack16[0];\n        *arg_ch = ppiVar4;\n    }\n    return;\n}\n",
        "token_count": 860
    },
    "004083f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004083f0(int32_t **param_1, int32_t **param_2, int32_t **param_3, int32_t param_4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    int32_t **ppiVar4;\n    int32_t iVar5;\n    int32_t **ppiVar6;\n    int32_t iVar7;\n    int32_t **ppiStack12;\n    int32_t *apiStack8 [2];\n    \n    iVar2 = param_4;\n    if (param_3 == 0x2) {\n        piVar1 = *param_1;\n        if (*(piVar1 + param_4) <= *(*param_2 + param_4)) {\n            return;\n        }\n        *param_1 = *param_2;\n        *param_2 = piVar1;\n        **param_1 = piVar1;\n        (*param_2)[1] = *param_1;\n        return;\n    }\n    if (param_3 < 3) {\n        return;\n    }\n    ppiVar6 = *param_1;\n    iVar5 = param_3 / 2;\n    iVar7 = param_3 - iVar5;\n    for (; iVar5 != 0; iVar5 = iVar5 + -1) {\n        ppiVar6 = *ppiVar6;\n    }\n    ppiStack12 = ppiVar6[1];\n    iVar5 = param_3 - iVar7;\n    param_3 = ppiVar6;\n    fcn.004083f0(param_1, &ppiStack12, iVar5, param_4);\n    fcn.004083f0(&param_3, param_2, iVar7, iVar2);\n    ppiVar3 = *param_1;\n    ppiVar6 = apiStack8;\n    while (ppiVar4 = ppiVar3,  iVar5 != 0) {\n        if (iVar7 == 0) goto joined_r0x00408525;\n        if (*(param_3 + iVar2) < *(ppiVar4 + iVar2)) {\n            *ppiVar6 = param_3;\n            iVar7 = iVar7 + -1;\n            param_3[1] = ppiVar6;\n            ppiVar3 = ppiVar4;\n            ppiVar6 = param_3;\n            param_3 = *param_3;\n        }\n        else {\n            *ppiVar6 = ppiVar4;\n            iVar5 = iVar5 + -1;\n            ppiVar4[1] = ppiVar6;\n            ppiVar3 = *ppiVar4;\n            ppiVar6 = ppiVar4;\n        }\n    }\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *ppiVar6 = param_3;\n        param_3[1] = ppiVar6;\n        ppiVar6 = param_3;\n        param_3 = *param_3;\n    }\ncode_r0x0040850b:\n    *param_1 = apiStack8[0];\n    *param_2 = ppiVar6;\n    return;\njoined_r0x00408525:\n    for (; ppiVar3 = ppiVar4,  iVar5 != 0; iVar5 = iVar5 + -1) {\n        *ppiVar6 = ppiVar3;\n        ppiVar3[1] = ppiVar6;\n        ppiVar4 = *ppiVar3;\n        ppiVar6 = ppiVar3;\n    }\n    goto code_r0x0040850b;\n}\n",
        "token_count": 798
    },
    "00408540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00408540(int32_t **param_1, int32_t **param_2, int32_t **param_3, int32_t param_4)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    int32_t **ppiVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t **ppiStack12;\n    int32_t *apiStack8 [2];\n    \n    iVar3 = param_4;\n    if (param_3 == 0x2) {\n        piVar1 = *param_1;\n        if (*(piVar1 + param_4) <= *(param_4 + *param_2)) {\n            return;\n        }\n        *param_1 = *param_2;\n        *param_2 = piVar1;\n        **param_1 = piVar1;\n        (*param_2)[1] = *param_1;\n        return;\n    }\n    if (param_3 < 3) {\n        return;\n    }\n    ppiVar5 = *param_1;\n    iVar6 = param_3 / 2;\n    iVar7 = param_3 - iVar6;\n    for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n        ppiVar5 = *ppiVar5;\n    }\n    ppiStack12 = ppiVar5[1];\n    iVar6 = param_3 - iVar7;\n    param_3 = ppiVar5;\n    fcn.00408540(param_1, &ppiStack12, iVar6, param_4);\n    fcn.00408540(&param_3, param_2, iVar7, iVar3);\n    ppiVar4 = *param_1;\n    ppiVar5 = apiStack8;\n    while (ppiVar2 = ppiVar4,  iVar6 != 0) {\n        if (iVar7 == 0) goto joined_r0x00408666;\n        if (*(param_3 + iVar3) < *(ppiVar2 + iVar3)) {\n            *ppiVar5 = param_3;\n            iVar7 = iVar7 + -1;\n            param_3[1] = ppiVar5;\n            ppiVar4 = ppiVar2;\n            ppiVar5 = param_3;\n            param_3 = *param_3;\n        }\n        else {\n            *ppiVar5 = ppiVar2;\n            iVar6 = iVar6 + -1;\n            ppiVar2[1] = ppiVar5;\n            ppiVar4 = *ppiVar2;\n            ppiVar5 = ppiVar2;\n        }\n    }\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *ppiVar5 = param_3;\n        param_3[1] = ppiVar5;\n        ppiVar5 = param_3;\n        param_3 = *param_3;\n    }\ncode_r0x0040864c:\n    *param_1 = apiStack8[0];\n    *param_2 = ppiVar5;\n    return;\njoined_r0x00408666:\n    for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *ppiVar5 = ppiVar2;\n        ppiVar2[1] = ppiVar5;\n        ppiVar5 = ppiVar2;\n        ppiVar2 = *ppiVar2;\n    }\n    goto code_r0x0040864c;\n}\n",
        "token_count": 785
    },
    "00408690": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00408690(int32_t **param_1, int32_t **param_2, int32_t **param_3, int32_t param_4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t **ppiVar6;\n    int32_t **ppiVar7;\n    int32_t **ppiVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t **ppiStack12;\n    int32_t *apiStack8 [2];\n    \n    iVar1 = param_4;\n    if (param_3 == 0x2) {\n        piVar3 = *param_1;\n        piVar4 = *param_2;\n        iVar9 = *(piVar3 + param_4 + 4);\n        iVar1 = *(param_4 + 4 + piVar4);\n        if (iVar9 < iVar1) {\n            return;\n        }\n        if ((iVar9 <= iVar1) &&\n           (*(piVar3 + param_4) < *(param_4 + piVar4) || *(piVar3 + param_4) == *(param_4 + piVar4))) {\n            return;\n        }\n        *param_1 = piVar4;\n        *param_2 = piVar3;\n        **param_1 = piVar3;\n        (*param_2)[1] = *param_1;\n        return;\n    }\n    if (param_3 < 3) {\n        return;\n    }\n    ppiVar8 = *param_1;\n    iVar9 = param_3 / 2;\n    iVar10 = param_3 - iVar9;\n    for (; iVar9 != 0; iVar9 = iVar9 + -1) {\n        ppiVar8 = *ppiVar8;\n    }\n    ppiStack12 = ppiVar8[1];\n    iVar9 = param_3 - iVar10;\n    param_3 = ppiVar8;\n    fcn.00408690(param_1, &ppiStack12, iVar9, param_4);\n    fcn.00408690(&param_3, param_2, iVar10, iVar1);\n    ppiVar7 = *param_1;\n    ppiVar8 = apiStack8;\n    while (ppiVar6 = ppiVar7,  iVar9 != 0) {\n        if (iVar10 == 0) goto joined_r0x004087d2;\n        iVar5 = *(ppiVar6 + iVar1 + 4);\n        iVar2 = *(param_3 + iVar1 + 4);\n        if ((iVar2 < iVar5) ||\n           ((iVar2 <= iVar5 && (*(param_3 + iVar1) <= *(ppiVar6 + iVar1) && *(ppiVar6 + iVar1) != *(param_3 + iVar1)))))\n        {\n            *ppiVar8 = param_3;\n            iVar10 = iVar10 + -1;\n            param_3[1] = ppiVar8;\n            ppiVar7 = ppiVar6;\n            ppiVar8 = param_3;\n            param_3 = *param_3;\n        }\n        else {\n            *ppiVar8 = ppiVar6;\n            iVar9 = iVar9 + -1;\n            ppiVar6[1] = ppiVar8;\n            ppiVar7 = *ppiVar6;\n            ppiVar8 = ppiVar6;\n        }\n    }\n    for (; iVar10 != 0; iVar10 = iVar10 + -1) {\n        *ppiVar8 = param_3;\n        param_3[1] = ppiVar8;\n        ppiVar8 = param_3;\n        param_3 = *param_3;\n    }\ncode_r0x004087b8:\n    *param_1 = apiStack8[0];\n    *param_2 = ppiVar8;\n    return;\njoined_r0x004087d2:\n    for (; iVar9 != 0; iVar9 = iVar9 + -1) {\n        *ppiVar8 = ppiVar6;\n        ppiVar6[1] = ppiVar8;\n        ppiVar8 = ppiVar6;\n        ppiVar6 = *ppiVar6;\n    }\n    goto code_r0x004087b8;\n}\n",
        "token_count": 959
    },
    "004087f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004087f0(int32_t **param_1, int32_t **param_2, int32_t **param_3, int32_t param_4)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t **ppiVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t **ppiVar8;\n    int32_t **unaff_EDI;\n    int32_t iVar9;\n    int32_t **ppiStack12;\n    int32_t *apiStack8 [2];\n    \n    iVar4 = param_4;\n    if (param_3 == 0x2) {\n        iVar4 = fcn.00408d50(*(*param_1 + param_4), *(*param_2 + param_4));\n        if (iVar4 < 1) {\n            return;\n        }\n        piVar1 = *param_1;\n        *param_1 = *param_2;\n        *param_2 = piVar1;\n        **param_1 = piVar1;\n        (*param_2)[1] = *param_1;\n        return;\n    }\n    if (param_3 < 3) {\n        return;\n    }\n    ppiVar2 = *param_1;\n    iVar6 = param_3 / 2;\n    iVar7 = param_3 - iVar6;\n    for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n        ppiVar2 = *ppiVar2;\n    }\n    ppiStack12 = ppiVar2[1];\n    iVar6 = param_3 - iVar7;\n    param_3 = ppiVar2;\n    iVar9 = iVar6;\n    fcn.004087f0(param_1, &ppiStack12, iVar6, param_4);\n    fcn.004087f0(&param_3, param_2, iVar7, iVar4);\n    ppiStack12 = *param_1;\n    ppiVar3 = ppiStack12;\n    ppiVar8 = apiStack8;\n    ppiVar2 = param_3;\n    while (iVar6 != 0) {\n        if (iVar7 == 0) goto joined_r0x00408931;\n        iVar5 = fcn.00408d50(iVar9, *(ppiVar2 + iVar4), *(ppiVar3 + iVar4));\n        if (iVar5 < 1) {\n            iVar6 = iVar6 + -1;\n            *ppiVar8 = unaff_EDI;\n            unaff_EDI[1] = ppiVar8;\n            ppiVar3 = *unaff_EDI;\n            ppiVar8 = unaff_EDI;\n            ppiVar2 = param_1;\n            unaff_EDI = *unaff_EDI;\n        }\n        else {\n            iVar7 = iVar7 + -1;\n            *ppiVar8 = param_1;\n            param_1[1] = ppiVar8;\n            ppiVar2 = *param_1;\n            ppiVar3 = unaff_EDI;\n            ppiVar8 = param_1;\n            param_1 = ppiVar2;\n        }\n    }\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *ppiVar8 = ppiVar2;\n        param_3[1] = ppiVar8;\n        ppiVar2 = *param_3;\n        ppiVar8 = param_3;\n        param_3 = ppiVar2;\n    }\ncode_r0x00408917:\n    *param_1 = apiStack8[0];\n    *param_2 = ppiVar8;\n    return;\njoined_r0x00408931:\n    for (; ppiVar2 = ppiStack12,  iVar6 != 0; iVar6 = iVar6 + -1) {\n        *ppiVar8 = ppiVar3;\n        ppiVar2[1] = ppiVar8;\n        ppiVar3 = *ppiVar2;\n        ppiStack12 = ppiVar3;\n        ppiVar8 = ppiVar2;\n    }\n    goto code_r0x00408917;\n}\n",
        "token_count": 934
    },
    "00408950": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00408950(int32_t **param_1, int32_t **param_2, int32_t **param_3, int32_t param_4)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t **ppiVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t **ppiVar8;\n    int32_t **unaff_EDI;\n    int32_t iVar9;\n    int32_t **ppiStack12;\n    int32_t *apiStack8 [2];\n    \n    iVar4 = param_4;\n    if (param_3 == 0x2) {\n        iVar4 = fcn.00408db0(*(*param_1 + param_4), *(*param_2 + param_4));\n        if (iVar4 < 1) {\n            return;\n        }\n        piVar1 = *param_1;\n        *param_1 = *param_2;\n        *param_2 = piVar1;\n        **param_1 = piVar1;\n        (*param_2)[1] = *param_1;\n        return;\n    }\n    if (param_3 < 3) {\n        return;\n    }\n    ppiVar2 = *param_1;\n    iVar6 = param_3 / 2;\n    iVar7 = param_3 - iVar6;\n    for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n        ppiVar2 = *ppiVar2;\n    }\n    ppiStack12 = ppiVar2[1];\n    iVar6 = param_3 - iVar7;\n    param_3 = ppiVar2;\n    iVar9 = iVar6;\n    fcn.00408950(param_1, &ppiStack12, iVar6, param_4);\n    fcn.00408950(&param_3, param_2, iVar7, iVar4);\n    ppiStack12 = *param_1;\n    ppiVar3 = ppiStack12;\n    ppiVar8 = apiStack8;\n    ppiVar2 = param_3;\n    while (iVar6 != 0) {\n        if (iVar7 == 0) goto joined_r0x00408a91;\n        iVar5 = fcn.00408db0(iVar9, *(ppiVar2 + iVar4), *(ppiVar3 + iVar4));\n        if (iVar5 < 1) {\n            iVar6 = iVar6 + -1;\n            *ppiVar8 = unaff_EDI;\n            unaff_EDI[1] = ppiVar8;\n            ppiVar3 = *unaff_EDI;\n            ppiVar8 = unaff_EDI;\n            ppiVar2 = param_1;\n            unaff_EDI = *unaff_EDI;\n        }\n        else {\n            iVar7 = iVar7 + -1;\n            *ppiVar8 = param_1;\n            param_1[1] = ppiVar8;\n            ppiVar2 = *param_1;\n            ppiVar3 = unaff_EDI;\n            ppiVar8 = param_1;\n            param_1 = ppiVar2;\n        }\n    }\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *ppiVar8 = ppiVar2;\n        param_3[1] = ppiVar8;\n        ppiVar2 = *param_3;\n        ppiVar8 = param_3;\n        param_3 = ppiVar2;\n    }\ncode_r0x00408a77:\n    *param_1 = apiStack8[0];\n    *param_2 = ppiVar8;\n    return;\njoined_r0x00408a91:\n    for (; ppiVar2 = ppiStack12,  iVar6 != 0; iVar6 = iVar6 + -1) {\n        *ppiVar8 = ppiVar3;\n        ppiVar2[1] = ppiVar8;\n        ppiVar3 = *ppiVar2;\n        ppiStack12 = ppiVar3;\n        ppiVar8 = ppiVar2;\n    }\n    goto code_r0x00408a77;\n}\n",
        "token_count": 935
    },
    "00408ab0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00408ab0(int32_t **param_1, int32_t **param_2, int32_t **param_3, int32_t param_4)\n\n{\n    uint16_t *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    int32_t **ppiVar5;\n    int32_t **ppiVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t **ppiStack12;\n    int32_t *apiStack8 [2];\n    \n    iVar3 = param_4;\n    if (param_3 == 0x2) {\n        piVar2 = *param_1;\n        puVar1 = param_4 + *param_2;\n        if (*(piVar2 + param_4) < *puVar1 || *(piVar2 + param_4) == *puVar1) {\n            return;\n        }\n        *param_1 = *param_2;\n        *param_2 = piVar2;\n        **param_1 = piVar2;\n        (*param_2)[1] = *param_1;\n        return;\n    }\n    if (param_3 < 3) {\n        return;\n    }\n    ppiVar6 = *param_1;\n    iVar7 = param_3 / 2;\n    iVar8 = param_3 - iVar7;\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        ppiVar6 = *ppiVar6;\n    }\n    ppiStack12 = ppiVar6[1];\n    iVar7 = param_3 - iVar8;\n    param_3 = ppiVar6;\n    fcn.00408ab0(param_1, &ppiStack12, iVar7, param_4);\n    fcn.00408ab0(&param_3, param_2, iVar8, iVar3);\n    ppiVar4 = *param_1;\n    ppiVar6 = apiStack8;\n    while (ppiVar5 = ppiVar4,  iVar7 != 0) {\n        if (iVar8 == 0) goto joined_r0x00408be0;\n        if (*(ppiVar5 + iVar3) < *(param_3 + iVar3) || *(ppiVar5 + iVar3) == *(param_3 + iVar3)) {\n            *ppiVar6 = ppiVar5;\n            iVar7 = iVar7 + -1;\n            ppiVar5[1] = ppiVar6;\n            ppiVar4 = *ppiVar5;\n            ppiVar6 = ppiVar5;\n        }\n        else {\n            *ppiVar6 = param_3;\n            iVar8 = iVar8 + -1;\n            param_3[1] = ppiVar6;\n            ppiVar4 = ppiVar5;\n            ppiVar6 = param_3;\n            param_3 = *param_3;\n        }\n    }\n    for (; iVar8 != 0; iVar8 = iVar8 + -1) {\n        *ppiVar6 = param_3;\n        param_3[1] = ppiVar6;\n        ppiVar6 = param_3;\n        param_3 = *param_3;\n    }\ncode_r0x00408bc6:\n    *param_1 = apiStack8[0];\n    *param_2 = ppiVar6;\n    return;\njoined_r0x00408be0:\n    for (; ppiVar4 = ppiVar5,  iVar7 != 0; iVar7 = iVar7 + -1) {\n        *ppiVar6 = ppiVar4;\n        ppiVar4[1] = ppiVar6;\n        ppiVar5 = *ppiVar4;\n        ppiVar6 = ppiVar4;\n    }\n    goto code_r0x00408bc6;\n}\n",
        "token_count": 852
    },
    "00408c00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00408c00(int32_t **param_1, int32_t **param_2, int32_t **param_3, int32_t param_4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    int32_t **ppiVar4;\n    int32_t **ppiVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t **ppiStack12;\n    int32_t *apiStack8 [2];\n    \n    iVar2 = param_4;\n    if (param_3 == 0x2) {\n        piVar1 = *param_1;\n        if (*(piVar1 + param_4) <= *(param_4 + *param_2)) {\n            return;\n        }\n        *param_1 = *param_2;\n        *param_2 = piVar1;\n        **param_1 = piVar1;\n        (*param_2)[1] = *param_1;\n        return;\n    }\n    if (param_3 < 3) {\n        return;\n    }\n    ppiVar5 = *param_1;\n    iVar6 = param_3 / 2;\n    iVar7 = param_3 - iVar6;\n    for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n        ppiVar5 = *ppiVar5;\n    }\n    ppiStack12 = ppiVar5[1];\n    iVar6 = param_3 - iVar7;\n    param_3 = ppiVar5;\n    fcn.00408c00(param_1, &ppiStack12, iVar6, param_4);\n    fcn.00408c00(&param_3, param_2, iVar7, iVar2);\n    ppiVar3 = *param_1;\n    ppiVar5 = apiStack8;\n    while (ppiVar4 = ppiVar3,  iVar6 != 0) {\n        if (iVar7 == 0) goto joined_r0x00408d30;\n        if (*(param_3 + iVar2) < *(ppiVar4 + iVar2)) {\n            *ppiVar5 = param_3;\n            iVar7 = iVar7 + -1;\n            param_3[1] = ppiVar5;\n            ppiVar3 = ppiVar4;\n            ppiVar5 = param_3;\n            param_3 = *param_3;\n        }\n        else {\n            *ppiVar5 = ppiVar4;\n            iVar6 = iVar6 + -1;\n            ppiVar4[1] = ppiVar5;\n            ppiVar3 = *ppiVar4;\n            ppiVar5 = ppiVar4;\n        }\n    }\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *ppiVar5 = param_3;\n        param_3[1] = ppiVar5;\n        ppiVar5 = param_3;\n        param_3 = *param_3;\n    }\ncode_r0x00408d16:\n    *param_1 = apiStack8[0];\n    *param_2 = ppiVar5;\n    return;\njoined_r0x00408d30:\n    for (; ppiVar3 = ppiVar4,  iVar6 != 0; iVar6 = iVar6 + -1) {\n        *ppiVar5 = ppiVar3;\n        ppiVar3[1] = ppiVar5;\n        ppiVar4 = *ppiVar3;\n        ppiVar5 = ppiVar3;\n    }\n    goto code_r0x00408d16;\n}\n",
        "token_count": 801
    },
    "00408d50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.00408d50(uint16_t *param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    bool bVar2;\n    \n    if (param_1 == NULL) {\n        if ((param_2 != NULL) && (*param_2 != 0)) {\n            return 0xffffffff;\n        }\n    }\n    else {\n        if (param_2 == NULL) {\n            return 1;\n        }\n        do {\n            uVar1 = *param_1;\n            bVar2 = uVar1 < *param_2;\n            if (uVar1 != *param_2) {\ncode_r0x00408d87:\n                return -bVar2 | 1;\n            }\n            if (uVar1 == 0) {\n                return 0;\n            }\n            uVar1 = param_1[1];\n            bVar2 = uVar1 < param_2[1];\n            if (uVar1 != param_2[1]) goto code_r0x00408d87;\n            param_1 = param_1 + 2;\n            param_2 = param_2 + 2;\n        } while (uVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 273
    },
    "00408db0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00408db0(int32_t param_1, int16_t *param_2)\n\n{\n    uint uVar1;\n    \n    if (param_1 != 0) {\n        if (param_2 != NULL) {\n            uVar1 = sub.MSVCRT.dll__wcsicmp(param_1, param_2);\n            return uVar1;\n        }\n        return 1;\n    }\n    if ((param_2 != NULL) && (*param_2 != 0)) {\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 123
    },
    "00408e58": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00408e58(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (param_1 != 0) {\n        iVar1 = sub.MSVCRT.dll_wcslen(param_1);\n        iVar1 = iVar1 * 2 + 2;\n        iVar2 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x418068, 0, iVar1);\n        if (iVar2 != 0) {\n            sub.MSVCRT.dll_wcscpy(iVar2, iVar1);\n            return iVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 144
    },
    "00408f69": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00408f69(uint param_1, uint param_2, uint param_3)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint arg_8h;\n    uint32_t uVar9;\n    uint uStack376;\n    uint32_t uStack372;\n    uint uStack368;\n    uint uStack364;\n    int32_t iStack360;\n    int32_t iStack356;\n    int32_t iStack352;\n    uint uStack348;\n    uint uStack344;\n    int32_t iStack340;\n    uint uStack336;\n    uint uStack332;\n    uint uStack328;\n    int32_t iStack324;\n    uint uStack320;\n    uint uStack316;\n    char16_t *pcStack312;\n    uint uStack308;\n    uint32_t uStack304;\n    uint uStack300;\n    uint uStack296;\n    uint uStack292;\n    uint uStack288;\n    int32_t iStack284;\n    uint uStack280;\n    uint uStack276;\n    uint uStack272;\n    uint uStack268;\n    uint uStack264;\n    int32_t iStack260;\n    uint uStack256;\n    uint uStack252;\n    char16_t *pcStack248;\n    uint uStack240;\n    uint uStack236;\n    uint uStack232;\n    uint uStack228;\n    uint uStack224;\n    int32_t iStack220;\n    uint uStack216;\n    uint uStack212;\n    uchar *puStack208;\n    int32_t iStack204;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    int32_t iStack144;\n    uint32_t uStack140;\n    uint uStack136;\n    uchar *puStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uchar auStack64 [4];\n    uint uStack60;\n    uint uStack48;\n    uint uStack44;\n    code *pcStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    uStack116 = param_1;\n    uVar9 = 0;\n    uStack120 = 0x408f81;\n    iVar3 = fcn.00408e58();\n    uStack120 = param_2;\n    uStack124 = 0x408f90;\n    fcn.00408e58();\n    uStack124 = param_3;\n    uStack128 = 0x408fa3;\n    iVar4 = fcn.00408e58();\n    if (*0x418124 == 0) {\n        uStack116 = 0x11;\n        uStack120 = 0x408fb8;\n        *0x418124 = (*_sym.imp.GDI32.DLL_GetStockObject)();\n    }\n    uStack116 = 1;\n    uStack120 = *0x41806c;\n    uStack48 = 0x30;\n    uStack44 = 3;\n    pcStack40 = fcn.00408eb4;\n    uStack36 = 0;\n    uStack32 = 0;\n    uStack28 = *0x41806c;\n    uStack124 = 0x408fef;\n    uStack32 = (*_sym.imp.USER32.DLL_LoadIconW)();\n    uStack124 = 0x7f00;\n    uStack128 = 0;\n    puStack132 = 0x408fff;\n    uStack36 = (*_sym.imp.USER32.DLL_LoadCursorW)();\n    uStack24 = *0x41710c;\n    puStack132 = &stack0xffffffc0;\n    uStack32 = 0x10;\n    uStack28 = 0;\n    uStack20 = 0;\n    uStack136 = 0x409027;\n    (*_sym.imp.USER32.DLL_RegisterClassExW)();\n    *0x418128 = 0;\n    uStack136 = 0x409032;\n    *0x418138 = fcn.004094d1();\n    uStack136 = 1;\n    uStack140 = 0x40903e;\n    fcn.00409588();\n    if (*0x418138 == 0) {\ncode_r0x0040906b:\n        *0x41813c = 0;\n    }\n    else {\n        uStack140 = *0x418138;\n        iStack144 = 0x40904e;\n        iVar5 = (*_sym.imp.USER32.DLL_IsWindowEnabled)();\n        if (iVar5 == 0) goto code_r0x0040906b;\n        uStack140 = 0;\n        iStack144 = *0x418138;\n        uStack148 = 0x40905f;\n        (*_sym.imp.USER32.DLL_EnableWindow)();\n        *0x41813c = 1;\n    }\n    uStack140 = 0;\n    iStack144 = *0x41806c;\n    uStack148 = 0;\n    uStack152 = 0x40907e;\n    uStack152 = fcn.004094d1();\n    pcVar1 = _sym.imp.USER32.DLL_GetSystemMetrics;\n    uStack156 = 0x82;\n    (*_sym.imp.USER32.DLL_GetSystemMetrics)();\n    iVar5 = (*pcVar1)();\n    pcVar1 = _sym.imp.USER32.DLL_CreateWindowExW;\n    iVar6 = (*_sym.imp.USER32.DLL_CreateWindowExW)();\n    if (iVar6 == 0) {\ncode_r0x004092ba:\n        if (iVar5 / 2 != 0x96) goto code_r0x004092cd;\n    }\n    else {\n        puStack208 = 0x4090d9;\n        iStack204 = iVar6;\n        (*_sym.imp.USER32.DLL_SetWindowLongW)();\n        puStack208 = NULL;\n        uStack212 = *0x41806c;\n        uStack216 = 0;\n        uStack224 = 0x16;\n        uStack228 = 0x118;\n        uStack232 = 10;\n        uStack236 = 10;\n        uStack240 = 0x5000000b;\n        pcStack248 = L\"STATIC\";\n        uStack252 = 0;\n        uStack256 = 0x409103;\n        iStack220 = iVar6;\n        *0x418134 = (*pcVar1)();\n        pcVar2 = _sym.imp.USER32.DLL_SendMessageW;\n        uStack256 = 1;\n        iStack260 = *0x418124;\n        uStack264 = 0x30;\n        uStack272 = 0x40911b;\n        uStack268 = *0x418134;\n        (*_sym.imp.USER32.DLL_SendMessageW)();\n        pcVar1 = _sym.imp.USER32.DLL_CreateWindowExW;\n        if ((uStack140 & 1) != 0) {\n            uVar9 = 0x20;\n        }\n        uStack272 = 0;\n        uStack276 = *0x41806c;\n        uStack304 = uVar9 | 0x50010080;\n        uStack280 = 10;\n        uStack288 = 0x15;\n        uStack292 = 0x113;\n        uStack296 = 0x20;\n        uStack300 = 10;\n        uStack308 = 0;\n        pcStack312 = L\"EDIT\";\n        uStack316 = 0x200;\n        uStack320 = 0x409159;\n        iStack284 = iVar6;\n        *0x418130 = (*_sym.imp.USER32.DLL_CreateWindowExW)();\n        uStack320 = 1;\n        iStack324 = *0x418124;\n        uStack328 = 0x30;\n        uStack336 = 0x40916b;\n        uStack332 = *0x418130;\n        (*pcVar2)();\n        uStack336 = *0x418130;\n        iStack340 = 0x409177;\n        (*_sym.imp.USER32.DLL_SetFocus)();\n        if (iVar4 != 0) {\n            uStack344 = 0;\n            uStack348 = 0xc;\n            iStack352 = *0x418130;\n            iStack356 = 0x409188;\n            iStack340 = iVar4;\n            (*pcVar2)();\n            iStack360 = 0x40918e;\n            iStack356 = iVar4;\n            iStack356 = sub.MSVCRT.dll_wcslen();\n            uStack364 = 0x409196;\n            iStack360 = iVar4;\n            iStack360 = sub.MSVCRT.dll_wcslen();\n            uStack364 = 0xb1;\n            uStack368 = *0x418130;\n            uStack372 = 0x4091a5;\n            (*pcVar2)();\n        }\n        iStack340 = 0;\n        uStack344 = *0x41806c;\n        uStack348 = 1000;\n        iStack356 = 0x19;\n        iStack360 = 0x50;\n        uStack364 = 0x43;\n        uStack368 = 0x6e;\n        uStack372 = 0x50010001;\n        uStack376 = 0x413080;\n        iStack352 = iVar6;\n        *0x41812c = (*pcVar1)(0, L\"BUTTON\");\n        (*pcVar2)(*0x41812c, 0x30, *0x418124, 1);\n        uStack368 = 0x3e9001b;\n        uStack376 = CONCAT31(uStack376 >> 8 & 0xff | 0xd00, 1);\n        uStack372 = uStack372 & 0xff000000 | 0x103e8;\n        iVar7 = (*_sym.imp.USER32.DLL_CreateAcceleratorTableW)(&stack0xfffffe88, 2);\n        (*_sym.imp.USER32.DLL_SetForegroundWindow)(iVar6);\n        (*_sym.imp.USER32.DLL_BringWindowToTop)(iVar6);\n        while (*0x418128 == 0) {\n            iStack204 = 0;\n            puStack208 = &stack0xffffff64;\n            uStack212 = 0x40923f;\n            iVar8 = (*_sym.imp.USER32.DLL_GetMessageW)();\n            if (iVar8 == 0) break;\n            puStack208 = 0x409250;\n            iStack204 = iVar6;\n            iVar8 = (*_sym.imp.USER32.DLL_TranslateAcceleratorW)();\n            if (iVar8 == 0) {\n                (*_sym.imp.USER32.DLL_TranslateMessage)();\n                iStack204 = 0x40926a;\n                (*_sym.imp.USER32.DLL_DispatchMessageW)();\n            }\n        }\n        if (iVar7 != 0) {\n            (*_sym.imp.USER32.DLL_DestroyAcceleratorTable)();\n        }\n        if (iVar5 / 2 != 0x96) {\n            arg_8h = sub.MSVCRT.dll_wcslen();\n            iStack204 = 0x40929c;\n            puStack208 = fcn.0040e900(arg_8h, uStack60);\n            uStack212 = 0x4092a6;\n            iStack204 = iVar3;\n            sub.MSVCRT.dll_wcscpy();\n            puStack208 = NULL;\n            uStack212 = *0x418068;\n            uStack216 = 0x4092ba;\n            iStack204 = iVar3;\n            (*_sym.imp.KERNEL32.dll_HeapFree)();\n            goto code_r0x004092ba;\n        }\n    }\n    fcn.0040e9e0(uStack60);\ncode_r0x004092cd:\n    fcn.00408e9a();\n    iStack204 = 0x4092df;\n    fcn.00408e9a();\n    puStack208 = 0x4092e5;\n    iStack204 = iVar4;\n    fcn.00408e9a();\n    return;\n}\n",
        "token_count": 2718
    },
    "004092f2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004092f2(void)\n\n{\n    if (*0x41813c != 0) {\n        (*_sym.imp.USER32.DLL_EnableWindow)(*0x418138, 1);\n    }\n    fcn.00409588(0);\n    return;\n}\n",
        "token_count": 61
    },
    "00409311": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409311(uint arg_8h, int32_t arg_ch, uint noname_2, int32_t arg_14h)\n\n{\n    if ((arg_ch == 1) && (arg_14h != 0)) {\n        (*_sym.imp.USER32.DLL_SendMessageW)(arg_8h, 0x467, 1, arg_14h);\n        (*_sym.imp.KERNEL32.dll_Sleep)(200);\n        (*_sym.imp.USER32.DLL_PostMessageW)(arg_8h, 0x467, 1, arg_14h);\n    }\n    return 0;\n}\n",
        "token_count": 141
    },
    "00409355": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.00409355(uint param_1, uint param_2)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    ushort *puVar4;\n    int32_t iVar5;\n    uint uVar6;\n    code *pcVar7;\n    char *pcVar8;\n    uint uStack576;\n    code *pcStack552;\n    int16_t *piStack548;\n    int16_t aiStack542 [260];\n    ushort uStack22;\n    uint uStack20;\n    int32_t iStack12;\n    \n    iVar5 = 0;\n    if (*0x418140 == 0) {\n        uStack576 = 0;\n        *0x418140 = 1;\n        (*_sym.imp.OLE32.DLL_CoInitialize)();\n    }\n    uStack576 = 0x20;\n    sub.MSVCRT.dll_memset(&pcStack552, 0);\n    uStack576 = 0x413098;\n    pcVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)();\n    pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if (pcVar2 != NULL) {\n        pcVar8 = \"SHBrowseForFolderW\";\n        (*_sym.imp.KERNEL32.dll_GetProcAddress)(pcVar2);\n        pcVar7 = pcVar2;\n        uStack576 = (*pcVar1)(pcVar2, 0x4130c4);\n        if (iStack12 == 0) {\n            iStack12 = 0x413024;\n        }\n        sub.MSVCRT.dll_wcsncpy(aiStack542 + 1, iStack12, 0x103);\n        uStack22 = 0;\n        iVar3 = sub.MSVCRT.dll_wcslen(aiStack542 + 1);\n        if ((3 < iVar3) && (aiStack542[iVar3] == 0x5c)) {\n            aiStack542[iVar3] = 0;\n        }\n        fcn.004094d1();\n        piStack548 = aiStack542 + 1;\n        uVar6 = 1;\n        pcStack552 = fcn.00409311;\n        fcn.00409588(1);\n        iVar3 = (*pcVar8)(&uStack576);\n        fcn.00409588(0);\n        if (iVar3 != 0) {\n            puVar4 = fcn.0040e900(0x104, uStack20);\n            *puVar4 = 0;\n            (*pcVar7)(uVar6, puVar4);\n            (*_sym.imp.OLE32.DLL_CoTaskMemFree)(uVar6);\n            iVar5 = sub.MSVCRT.dll_wcslen(puVar4);\n            if (puVar4[iVar5 + -1] != 0x5c) {\n                puVar4[iVar5] = 0x5c;\n                puVar4[iVar5 + 1] = 0;\n                iVar5 = iVar5 + 1;\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(pcVar2);\n        if (iVar5 != 0) goto code_r0x004094bd;\n    }\n    puVar4 = fcn.0040e900(0x104, param_2);\n    *puVar4 = 0;\ncode_r0x004094bd:\n    fcn.0040ea90(0x104 - iVar5);\n    return;\n}\n",
        "token_count": 757
    },
    "00409588": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop",
            "enumerate gui resources"
        ],
        "decompiled_code": "\nvoid fcn.00409588(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    if (param_1 == 0) {\n        puVar3 = *0x418144;\n        if (*0x418144 != NULL) {\n            do {\n                puVar1 = *puVar3;\n                iVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n                if (puVar3[2] == iVar2) {\n                    if (*(puVar3 + 0x11) != '\\0') {\n                        (*_sym.imp.USER32.DLL_EnableWindow)(puVar3[3], 1);\n                    }\n                    if (*(puVar3 + 4) != '\\0') {\n                        (*_sym.imp.USER32.DLL_SetWindowPos)(puVar3[3], 0xffffffff, 0, 0, 0, 0, 3);\n                    }\n                    fcn.0040e1b2(0x418144, puVar3 + 2);\n                }\n                puVar3 = puVar1;\n            } while (puVar1 != NULL);\n        }\n    }\n    else {\n        (*_sym.imp.USER32.DLL_EnumWindows)(0x409507, param_1);\n        puVar3 = *0x418144;\n        while (puVar1 = puVar3,  puVar1 != NULL) {\n            puVar3 = *puVar1;\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            if ((puVar1[2] == iVar2) && (*(puVar1 + 4) != '\\0')) {\n                (*_sym.imp.USER32.DLL_SetWindowPos)(puVar1[3], 0xfffffffe, 0, 0, 0, 0, 3);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 414
    },
    "0040994f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040994f(uint *param_1)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(*param_1);\n    if (param_1[2] != 0) {\n        (*pcVar1)(param_1[2]);\n    }\n    if (param_1[3] != 0) {\n        (*pcVar1)(param_1[3]);\n    }\n    if (param_1[4] != 0) {\n        (*pcVar1)(param_1[4]);\n    }\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x418730);\n    fcn.0040e1b2(0x418148, param_1);\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x418730);\n    return;\n}\n",
        "token_count": 198
    },
    "004099a5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "set environment variable"
        ],
        "decompiled_code": "\nvoid fcn.004099a5(int32_t param_1, int32_t param_2)\n\n{\n    if (param_1 != 0) {\n        if (param_2 == 0) {\n            param_2 = 0x413024;\n        }\n        (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableW)(param_1, param_2);\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "00409fb0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040a0fa)\n\nvoid fcn.00409fb0(uint param_1)\n\n{\n    *0x418150 = param_1;\n    if (*0x418158 == 0) {\n        *0x418158 = (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0x409f70);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040a0e5. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)();\n    return;\n}\n",
        "token_count": 140
    },
    "00409ff0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00409ff0(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    \n    if (*0x418154 == 0) {\n        *0x417110 = **param_1;\n    }\n    else {\n        *0x418154 = 0;\n    }\n    piVar1 = *param_1;\n    if ((*piVar1 == -0x3ffffffb) && (1 < piVar1[4])) {\n        *0x418750 = piVar1[6];\n    }\n    else {\n        *0x418750 = 0;\n    }\n    *0x418748 = (*param_1)[3];\n    *0x41874c = *0x417001;\n    *0x418754 = param_1[1][0x2c];\n    *0x418758 = param_1[1][0x29];\n    *0x41875c = param_1[1][0x2b];\n    *0x418760 = param_1[1][0x2a];\n    *0x418764 = param_1[1][0x2d];\n    *0x418768 = param_1[1][0x28];\n    *0x41876c = param_1[1][0x27];\n    *0x418770 = param_1[1][0x31];\n    *0x418774 = param_1[1][0x30];\n    return 1;\n}\n",
        "token_count": 327
    },
    "0040a330": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040a330(int16_t *param_1, uint32_t param_2, uint32_t param_3, uint param_4)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    code *pcVar3;\n    int16_t *piVar4;\n    int32_t arg_8h;\n    int32_t iVar5;\n    uint uVar6;\n    uint unaff_EBP;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint uVar9;\n    \n    param_2 = (param_2 < -1) - 1 & param_2;\n    if ((param_3 & 0x1f) == 0x19) {\n        if (param_2 == 0xffffffff) {\n            piVar4 = param_1;\n            do {\n                iVar2 = *piVar4;\n                piVar4 = piVar4 + 1;\n            } while (iVar2 != 0);\n            param_2 = piVar4 - (param_1 + 1) >> 1;\n        }\n        piVar4 = fcn.0040e900(param_2, param_4);\n        if ((param_1 != NULL) && (param_2 != 0)) {\n            iVar7 = param_1 - piVar4;\n            do {\n                iVar2 = *(iVar7 + piVar4);\n                if (iVar2 == 0) break;\n                *piVar4 = iVar2;\n                piVar4 = piVar4 + 1;\n                param_2 = param_2 - 1;\n            } while (param_2 != 0);\n        }\n        fcn.0040ea90(param_2);\n        *piVar4 = 0;\n        return;\n    }\n    if ((param_3 & 0x1f) == 2) {\n        uVar6 = 0xfde9;\n        if (param_2 != 0xffffffff) {\n            if ((param_3 & 0x40) == 0) {\n                param_2 = fcn.0040eac0(param_1, param_2);\n                uVar6 = 0xfde9;\n            }\n            goto code_r0x0040a3db;\n        }\n    }\n    else {\n        uVar6 = 0;\ncode_r0x0040a3db:\n        if (param_2 != 0xffffffff) {\n            iVar7 = 0;\n            cVar1 = *param_1;\n            while ((cVar1 != '\\0' && (iVar7 < param_2))) {\n                iVar7 = iVar7 + 1;\n                cVar1 = *(param_1 + iVar7);\n            }\n            goto code_r0x0040a403;\n        }\n    }\n    piVar4 = param_1;\n    do {\n        cVar1 = *piVar4;\n        piVar4 = piVar4 + 1;\n    } while (cVar1 != '\\0');\n    iVar7 = piVar4 - (param_1 + 1);\ncode_r0x0040a403:\n    pcVar3 = _sym.imp.KERNEL32.dll_MultiByteToWideChar;\n    uVar9 = 0;\n    iVar8 = iVar7;\n    arg_8h = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(uVar6, 0, param_1, iVar7, 0, 0);\n    iVar5 = fcn.0040e900(arg_8h, unaff_EBP);\n    iVar7 = (*pcVar3)(uVar9, 0, iVar8, iVar7, iVar5, arg_8h + 1);\n    *(iVar5 + iVar7 * 2) = 0;\n    return;\n}\n",
        "token_count": 820
    },
    "0040a6c3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint * fcn.0040a6c3(uint *param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    if ((param_3 == 1) && (puVar1 = fcn.0040a638(param_1, param_2),  puVar1 != NULL)) {\n        if (param_1[4] != 0) {\n            fcn.0041242a(puVar1, param_1[4]);\n        }\n    }\n    else {\n        if (param_2 == 0) {\n            param_2 = 0x413024;\n        }\n        if ((*(param_1 + 0xb) & 1) == 0) {\n            uVar2 = fcn.0040a92f(param_2);\n        }\n        else {\n            uVar2 = fcn.0040a94a();\n        }\n        uVar2 = uVar2 % param_1[9];\n        puVar1 = fcn.0040dbff(param_1[0xe]);\n        if (puVar1 == NULL) {\n            return NULL;\n        }\n        iVar3 = sub.MSVCRT.dll_wcslen(param_2);\n        uVar4 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x418068, 0, iVar3 * 2 + 2);\n        puVar1[1] = uVar4;\n        sub.MSVCRT.dll_wcscpy(uVar4, param_2);\n        *puVar1 = *(param_1[1] + uVar2 * 4);\n        *(param_1[1] + uVar2 * 4) = puVar1;\n        param_1[2] = 0;\n        param_1[10] = param_1[10] + 1;\n        *param_1 = puVar1;\n        puVar1 = puVar1 + 2;\n        param_1[5] = uVar2;\n    }\n    if ((puVar1 != NULL) && (sub.MSVCRT.dll_memset(puVar1, 0, param_1[7]),  (*(param_1 + 0xb) & 2) != 0)) {\n        fcn.0041252f(puVar1, param_1[4]);\n    }\n    return puVar1;\n}\n",
        "token_count": 542
    },
    "0040a82a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint * fcn.0040a82a(uint *param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    if ((param_3 == 1) && (puVar1 = fcn.0040a976(param_1, param_2),  puVar1 != NULL)) {\n        if (param_1[4] != 0) {\n            fcn.0041242a(puVar1, param_1[4]);\n        }\n    }\n    else {\n        iVar2 = param_2 % param_1[9];\n        puVar1 = fcn.0040dbff(param_1[0xe]);\n        if (puVar1 == NULL) {\n            return NULL;\n        }\n        puVar1[1] = param_2;\n        *puVar1 = *(param_1[1] + iVar2 * 4);\n        *(param_1[1] + iVar2 * 4) = puVar1;\n        param_1[2] = 0;\n        param_1[10] = param_1[10] + 1;\n        *param_1 = puVar1;\n        puVar1 = puVar1 + 2;\n        param_1[5] = iVar2;\n    }\n    if ((puVar1 != NULL) && (sub.MSVCRT.dll_memset(puVar1, 0, param_1[7]),  (*(param_1 + 0xb) & 2) != 0)) {\n        fcn.0041252f(puVar1, param_1[4]);\n    }\n    return puVar1;\n}\n",
        "token_count": 371
    },
    "0040a8bb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040a8bb(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = *(param_1 + 0x14);\n    if (iVar1 < *(param_1 + 0x24)) {\n        piVar2 = *(param_1 + 4) + iVar1 * 4;\n        do {\n            if (*piVar2 != 0) {\n                *(param_1 + 0x14) = iVar1;\n                return *(*(param_1 + 4) + iVar1 * 4);\n            }\n            iVar1 = iVar1 + 1;\n            piVar2 = piVar2 + 1;\n        } while (iVar1 < *(param_1 + 0x24));\n    }\n    return 0;\n}\n",
        "token_count": 182
    },
    "0040a8e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * fcn.0040a8e8(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar1 = *param_1;\n    piVar2 = param_1[5];\n    param_1[2] = piVar1;\n    param_1[6] = piVar2;\n    if (piVar1 == NULL) {\n        if (piVar2 == 0xffffffff) {\n            param_1[5] = NULL;\n            goto code_r0x0040a914;\n        }\n    }\n    else {\n        piVar1 = *piVar1;\n        *param_1 = piVar1;\n        if (piVar1 != NULL) goto code_r0x0040a926;\n        param_1[5] = piVar2 + 1;\ncode_r0x0040a914:\n        piVar2 = fcn.0040a8bb(param_1);\n        *param_1 = piVar2;\n    }\n    if (*param_1 == NULL) {\n        return NULL;\n    }\ncode_r0x0040a926:\n    return *param_1 + 2;\n}\n",
        "token_count": 265
    },
    "0040aa5a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040aa5a(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    code *pcVar3;\n    \n    if (param_1 != 0) {\n        fcn.0040ab16(param_1);\n        fcn.0040dfc6(*(param_1 + 0x1c));\n        pcVar3 = _sym.imp.KERNEL32.dll_HeapFree;\n        **(param_1 + 0x24) = 0;\n        *(*(param_1 + 0x24) + 4) = 0;\n        puVar2 = *(param_1 + 0x20);\n        while (puVar2 != NULL) {\n            puVar1 = *puVar2;\n            (*pcVar3)(*0x418068, 0, puVar2);\n            puVar2 = puVar1;\n        }\n        if (*(param_1 + 0x32) != '\\0') {\n            (*pcVar3)(*0x418068, 0, *(param_1 + 0x24));\n        }\n        (*pcVar3)(*0x418068, 0, param_1);\n    }\n    return;\n}\n",
        "token_count": 266
    },
    "0040ac12": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * fcn.0040ac12(uint *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    iVar1 = param_1[5];\n    param_1[5] = param_2;\n    if ((param_2 < 0) || (iVar3 = param_1[4],  iVar3 <= param_2)) {\n        puVar2 = NULL;\n    }\n    else if (*(param_1 + 0xc) == '\\0') {\n        puVar2 = param_1[2];\n        if (iVar1 < param_2) {\n            iVar3 = iVar3 - param_2;\n            param_2 = param_2 - iVar1;\n            if (param_2 < iVar3) {\n                for (; (puVar2 != NULL && (param_2 != 0)); param_2 = param_2 + -1) {\n                    puVar2 = *puVar2;\n                }\n            }\n            else {\n                puVar2 = param_1[1];\n                while ((iVar3 = iVar3 + -1,  puVar2 != NULL && (iVar3 != 0))) {\n                    puVar2 = puVar2[1];\n                }\n            }\n        }\n        else {\n            iVar1 = iVar1 - param_2;\n            if (iVar1 < param_2) {\n                for (; (puVar2 != NULL && (iVar1 != 0)); iVar1 = iVar1 + -1) {\n                    puVar2 = puVar2[1];\n                }\n            }\n            else {\n                puVar2 = *param_1;\n                for (; (puVar2 != NULL && (param_2 != 0)); param_2 = param_2 + -1) {\n                    puVar2 = *puVar2;\n                }\n            }\n        }\n    }\n    else if (param_2 < iVar3 / 2) {\n        puVar2 = *param_1;\n        for (; (puVar2 != NULL && (param_2 != 0)); param_2 = param_2 + -1) {\n            puVar2 = *puVar2;\n        }\n    }\n    else {\n        puVar2 = param_1[1];\n        iVar3 = iVar3 - param_2;\n        while ((iVar3 = iVar3 + -1,  puVar2 != NULL && (iVar3 != 0))) {\n            puVar2 = puVar2[1];\n        }\n    }\n    param_1[2] = puVar2;\n    *param_1[3] = puVar2;\n    if (puVar2 == NULL) {\n        *(param_1 + 0xc) = 1;\n        puVar2 = NULL;\n    }\n    else {\n        *(param_1 + 0xc) = 0;\n        puVar2 = puVar2 + 2;\n    }\n    return puVar2;\n}\n",
        "token_count": 642
    },
    "0040ad45": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040ad45(int32_t s2)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint lpPathName;\n    uint var_4h;\n    \n    if (s2 == 0) {\n        uVar4 = 0;\n    }\n    else {\n        sub.MSVCRT.dll_wcsncpy(&lpPathName, s2, 0x104);\n        var_4h._0_2_ = 0;\n        iVar2 = sub.MSVCRT.dll_wcslen(&lpPathName);\n        for (puVar3 = &lpPathName + iVar2 * 2;\n            (&lpPathName < puVar3 && (((iVar1 = *(puVar3 + -2),  iVar1 == 0x20 || (iVar1 == 0x5c)) || (iVar1 == 0x2f))))\n            ; puVar3 = puVar3 + -2) {\n        }\n        *puVar3 = 0;\n        uVar4 = (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(&lpPathName, 0);\n    }\n    return uVar4;\n}\n",
        "token_count": 276
    },
    "0040ae39": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "delete file"
        ],
        "decompiled_code": "\nuint fcn.0040ae39(int32_t param_1, uint8_t param_2)\n\n{\n    uint uVar1;\n    \n    if (param_1 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        if ((param_2 & 2) != 0) {\n            (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(param_1, 0x80);\n        }\n        uVar1 = (*_sym.imp.KERNEL32.dll_DeleteFileW)(param_1);\n    }\n    return uVar1;\n}\n",
        "token_count": 125
    },
    "0040aeba": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040aeba(uint param_1, uint param_2)\n\n{\n    int32_t arg_ch;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    int32_t nFolder;\n    uint unaff_EDI;\n    \n    nFolder = 0;\n    arg_ch = fcn.0040e900(0x104, param_2);\n    // switch table (10 cases) at 0x40afb2\n    switch(unaff_EBX) {\n    case 0:\n        break;\n    case 1:\n        nFolder = 0x26;\n        break;\n    case 2:\n        goto code_r0x0040af9d;\n    case 3:\n        nFolder = 5;\n        break;\n    case 4:\n        nFolder = 0x1a;\n        break;\n    case 5:\n        nFolder = 0x23;\n        break;\n    case 6:\n        nFolder = 0xe;\n        break;\n    case 7:\n        nFolder = 0xd;\n        break;\n    case 8:\n        nFolder = 0x27;\n        break;\n    case 9:\n        nFolder = 0x2e;\n        break;\n    default:\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(L\"Shell32.DLL\");\n        if (iVar1 != 0) {\n            *0x418160 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"SHGetKnownFolderPath\");\n            if ((*0x418160 != NULL) && (iVar2 = (**0x418160)(0x417114, 0, 0, &stack0xfffffff0),  iVar2 == 0)) {\n                sub.MSVCRT.dll_wcscpy(arg_ch, unaff_EDI);\n                sub.MSVCRT.dll_wcscat(arg_ch, 0x4136d4);\n                nFolder = sub.MSVCRT.dll_wcslen(arg_ch);\n                (*_sym.imp.OLE32.DLL_CoTaskMemFree)(unaff_EDI);\n            }\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar1);\n            if (nFolder != 0) goto code_r0x0040af9d;\n        }\n        fcn.0040afec(0x28, arg_ch);\n        sub.MSVCRT.dll_wcscat(arg_ch, 0x4136d8);\n        nFolder = sub.MSVCRT.dll_wcslen(arg_ch);\n        goto code_r0x0040af9d;\n    }\n    nFolder = fcn.0040afec(nFolder, arg_ch);\ncode_r0x0040af9d:\n    fcn.0040ea90(0x104 - nFolder);\n    *(arg_ch + nFolder * 2) = 0;\n    return;\n}\n",
        "token_count": 627
    },
    "0040afda": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "set current directory"
        ],
        "decompiled_code": "\nuint fcn.0040afda(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (param_1 != 0) {\n    // WARNING: Could not recover jumptable at 0x0040afe1. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar1 = (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 101
    },
    "0040b050": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040b050(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    if (param_1 == -1) {\n        fcn.0040e075(*0x418784);\n        return;\n    }\n    puVar1 = fcn.0040dad9(*0x418784, param_1);\n    if (puVar1 != NULL) {\n        if (puVar1[1] != 0) {\n            fcn.0040b0c0(puVar1);\n            (*_sym.imp.KERNEL32.dll_HeapFree)(*0x418068, 0, puVar1[1]);\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*puVar1);\n        fcn.0040da8a(*0x418784, param_1);\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "0040b0c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040b0c0(uint *param_1)\n\n{\n    uint uVar1;\n    uint uStack4;\n    \n    uStack4 = 0;\n    if (param_1[5] == 0) {\n        uVar1 = param_1[1];\n        (*_sym.imp.KERNEL32.dll_WriteFile)(*param_1, uVar1, param_1[2] - param_1[3], &uStack4, 0);\n        param_1[3] = param_1[2];\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 133
    },
    "0040b140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t * fcn.0040b140(int32_t param_1, int32_t *param_2, uint param_3, uint32_t param_4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    int32_t *piVar3;\n    uchar uVar4;\n    uint unaff_retaddr;\n    int32_t *piStack4;\n    \n    piVar3 = NULL;\n    piVar1 = fcn.0040db18(*0x418784, param_1);\n    if (piVar1 == NULL) {\n        return NULL;\n    }\n    if (param_1 == 1) {\n        uVar4 = (param_4 & 0x20000) != 0;\n        if ((param_4 & 0x40000) != 0) {\n            uVar4 = 7;\n        }\n        param_2 = (*_sym.imp.KERNEL32.dll_CreateFileW)(unaff_retaddr, 0x80000000, uVar4, 0, 3, 0x80, 0);\ncode_r0x0040b26c:\n        if (param_2 == 0xffffffff) goto code_r0x0040b30f;\n    }\n    else {\n        if (param_1 == 2) {\n            uVar4 = (param_4 & 0x20000) != 0;\n            if ((param_4 & 0x40000) != 0) {\n                uVar4 = 7;\n            }\n            param_2 = (*_sym.imp.KERNEL32.dll_CreateFileW)(unaff_retaddr, 0xc0000000, uVar4, 0, 4, 0x80, 0);\n            goto code_r0x0040b26c;\n        }\n        if (param_1 != 3) goto code_r0x0040b26c;\n        uVar4 = (param_4 & 0x20000) != 0;\n        if ((param_4 & 0x40000) != 0) {\n            uVar4 = 7;\n        }\n        param_2 = (*_sym.imp.KERNEL32.dll_CreateFileW)(unaff_retaddr, 0xc0000000, uVar4, 0, 2, 0x80, 0);\n        if (param_2 == 0xffffffff) {\n            param_2 = (*_sym.imp.KERNEL32.dll_CreateFileW)(unaff_retaddr, 0x40000000, uVar4, 0, 5, 0, 0);\n            goto code_r0x0040b26c;\n        }\n    }\n    if (param_2 != NULL) {\n        if ((*0x417124 == 0) || ((param_4 & 0x80000) != 0)) {\n            piVar1[1] = 0;\n        }\n        else {\n            iVar2 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x418068, 0, *0x417124);\n            piVar1[1] = iVar2;\n        }\n        *piVar1 = param_2;\n        piVar1[2] = *0x417124;\n        piVar1[6] = unaff_EBP;\n        piVar1[3] = 0;\n        piVar1[5] = 1;\n        piVar1[7] = param_1 == 1;\n        if ((param_1 == 2) && ((param_4 & 0x100000) != 0)) {\n            (*_sym.imp.KERNEL32.dll_SetFilePointer)(param_2, 0, &stack0xfffffff4, 2);\n        }\n        piVar3 = piVar1;\n        if (piStack4 != 0xffffffff) {\n            piVar3 = param_2;\n        }\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\ncode_r0x0040b30f:\n    if (piStack4 != 0xffffffff) {\n        piVar1 = piStack4;\n    }\n    fcn.0040da8a(*0x418784, piVar1);\n    return piVar3;\n}\n",
        "token_count": 935
    },
    "0040b500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint16_t * fcn.0040b500(uint *param_1, int16_t *param_2, int32_t param_3)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    int16_t **ppiVar5;\n    uint *unaff_ESI;\n    int16_t *piStack16;\n    uint *puStack4;\n    \n    puStack4 = NULL;\n    if ((param_2 == NULL) || (*param_2 == 0)) {\n        return NULL;\n    }\n    if (param_3 != 0x19) {\n        piStack16 = param_2;\n        iVar4 = fcn.0040b7b0((param_3 != 2) - 1 & 0xfde9);\n        if (iVar4 != 0) {\n            if (unaff_ESI[1] == 0) {\n                ppiVar5 = &piStack16;\n                uVar2 = *unaff_ESI;\n                unaff_ESI = puStack4;\n                (*_sym.imp.KERNEL32.dll_WriteFile)(uVar2, iVar4, puStack4, ppiVar5, 0);\n            }\n            else {\n                ppiVar5 = fcn.0040b6a0(unaff_ESI, iVar4, puStack4);\n            }\n            (*_sym.imp.KERNEL32.dll_HeapFree)(*0x418068, 0, iVar4, unaff_ESI, ppiVar5);\n        }\n        return piStack16;\n    }\n    piVar3 = param_2;\n    if (param_1[1] == 0) {\n        do {\n            iVar1 = *piVar3;\n            piVar3 = piVar3 + 1;\n        } while (iVar1 != 0);\n        piStack16 = NULL;\n        piVar3 = (piVar3 - (param_2 + 1) >> 1) * 2;\n        (*_sym.imp.KERNEL32.dll_WriteFile)(*param_1, param_2, piVar3, &puStack4);\n        return piVar3;\n    }\n    do {\n        iVar1 = *piVar3;\n        piVar3 = piVar3 + 1;\n    } while (iVar1 != 0);\n    piStack16 = (piVar3 - (param_2 + 1) >> 1) * 2;\n    piVar3 = fcn.0040b6a0(param_1, param_2);\n    return piVar3;\n}\n",
        "token_count": 564
    },
    "0040b630": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040b630(uint param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint unaff_EDI;\n    \n    if (param_2 == 0) {\n        return 0;\n    }\n    if (param_3 != 0) {\n        puVar1 = fcn.0040dad9(*0x418784, param_1);\n        if (puVar1 != NULL) {\n            if (puVar1[1] != 0) {\n                uVar2 = fcn.0040b6a0(puVar1, param_2, param_3);\n                return uVar2;\n            }\n            (*_sym.imp.KERNEL32.dll_WriteFile)(*puVar1, param_2, param_3, &stack0xfffffff4, 0);\n        }\n        return unaff_EDI;\n    }\n    return 0;\n}\n",
        "token_count": 211
    },
    "0040b6a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0040b6a0(uint *param_1, uint *param_2, int32_t param_3)\n\n{\n    uint *puVar1;\n    int32_t iStack4;\n    \n    if (param_1[7] != 0) {\n        return 0;\n    }\n    if (param_1[5] == 1) {\n        iStack4 = -param_1[3] >> 0x1f;\n        (*_sym.imp.KERNEL32.dll_SetFilePointer)(*param_1, -param_1[3], &iStack4, 1);\n        param_1[5] = 0;\n        param_1[3] = param_1[2];\n    }\n    if (param_3 < param_1[3]) {\n        puVar1 = (param_1[2] + param_1[1]) - param_1[3];\n        if (param_3 == 1) {\n            *puVar1 = *param_2;\n            param_1[3] = param_1[3] + -1;\n            return 1;\n        }\n        if (param_3 == 2) {\n            *puVar1 = *param_2;\n            param_1[3] = param_1[3] + -2;\n            return 2;\n        }\n        if (param_3 == 4) {\n            *puVar1 = *param_2;\n            param_1[3] = param_1[3] + -4;\n            return 4;\n        }\n    }\n    else {\n        fcn.0040b0c0(param_1);\n        if (param_1[2] <= param_3) {\n            (*_sym.imp.KERNEL32.dll_WriteFile)(*param_1, param_1, param_3, &stack0xfffffff0, 0);\n            return param_3;\n        }\n        puVar1 = (param_1[1] - param_1[3]) + param_1[2];\n    }\n    sub.MSVCRT.dll_memcpy(puVar1);\n    param_1[3] = param_1[3] - param_3;\n    return param_3;\n}\n",
        "token_count": 486
    },
    "0040ccb6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040ccb6(int32_t param_1, int32_t param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    if (*(param_1 + 0x5c) == 0) {\n        iVar3 = 0;\n    }\n    else {\n        iVar3 = param_1 + 0x60;\n    }\n    uVar1 = *(param_1 + 0x14) >> 3 & 0x3f;\n    uVar4 = *(param_1 + 0x14) + param_3 * 8;\n    *(param_1 + 0x14) = uVar4;\n    if (uVar4 < param_3 << 3) {\n        *(param_1 + 0x18) = *(param_1 + 0x18) + 1;\n    }\n    *(param_1 + 0x18) = *(param_1 + 0x18) + (param_3 >> 0x1d);\n    if (uVar1 + param_3 < 0x40) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = -uVar1 + 0x40;\n        sub.MSVCRT.dll_memcpy(param_1 + 0x1c + uVar1, param_2, iVar2);\n        fcn.0040b9c7(param_1, param_1 + 0x1c, iVar3);\n        for (uVar4 = -uVar1 + 0x7f; uVar4 < param_3; uVar4 = uVar4 + 0x40) {\n            fcn.0040b9c7(param_1, param_2 + -0x3f + uVar4, iVar3);\n            iVar2 = iVar2 + 0x40;\n        }\n        uVar1 = 0;\n    }\n    sub.MSVCRT.dll_memcpy(param_1 + 0x1c + uVar1, param_2 + iVar2, param_3 - iVar2);\n    return;\n}\n",
        "token_count": 482
    },
    "0040d944": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040d944(void)\n\n{\n    if (*0x417016 != 0) {\n        return;\n    }\n    if (*0x418674 != 0) {\n        (*_sym.imp.KERNEL32.dll_TlsFree)(*0x418678);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "0040da8a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040da8a(uint *param_1)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(param_1 + 8);\n    if ((param_1 < 0) || (param_1[2] <= param_1)) {\n        fcn.0040e1b2(param_1 + 4, param_1);\n    }\n    else if (*(param_1[3] + param_1 * 4) != 0) {\n        sub.MSVCRT.dll_memset(*(param_1[3] + param_1 * 4), 0, *param_1);\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1 + 8);\n    return;\n}\n",
        "token_count": 164
    },
    "0040db18": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040db18(uint *param_1)\n\n{\n    int32_t in_ram_ffffffff;\n    uint uVar1;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(param_1 + 8);\n    if (param_1 == 0xffffffff) {\n        uVar1 = fcn.0040e1f2(0xf, in_ram_ffffffff + 8);\n    }\n    else {\n        if (param_1[2] <= param_1) {\n            param_1[2] = param_1[1] + param_1;\n            uVar1 = (*_sym.imp.KERNEL32.dll_HeapReAlloc)(*0x418068, 8, param_1[3], (param_1[1] + param_1) * 4);\n            param_1[3] = uVar1;\n        }\n        if (*(param_1[3] + param_1 * 4) == 0) {\n            uVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x418068, 8, *param_1);\n            *(param_1[3] + param_1 * 4) = uVar1;\n        }\n        else if (param_1[5] != NULL) {\n            (*param_1[5])(param_1);\n        }\n        uVar1 = *(param_1[3] + param_1 * 4);\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1 + 8);\n    return uVar1;\n}\n",
        "token_count": 342
    },
    "0040ddcb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040ddcb(int32_t **param_1, int32_t param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    \n    if (param_1[7] != NULL) {\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(param_1 + 8);\n    }\n    ppiVar3 = param_2 + -4;\n    ppiVar1 = *ppiVar3;\n    *ppiVar3 = ppiVar1[2];\n    ppiVar1[5] = ppiVar1[5] + 1;\n    ppiVar1[2] = ppiVar3;\n    if (ppiVar1[5] != ppiVar1[4]) {\n        if ((ppiVar1[5] == 0x1) && (ppiVar1[3] <= ppiVar1[4])) {\n            if (*ppiVar1 != NULL) {\n                (*ppiVar1)[1] = ppiVar1[1];\n            }\n            if (ppiVar1 == *param_1) {\n                *param_1 = *ppiVar1;\n            }\n            else {\n                *ppiVar1[1] = *ppiVar1;\n            }\n            *ppiVar1 = param_1[1];\n            ppiVar1[1] = NULL;\n            param_1[1] = ppiVar1;\n            if (*ppiVar1 != NULL) {\n                (*ppiVar1)[1] = ppiVar1;\n            }\n        }\n        goto code_r0x0040de85;\n    }\n    piVar2 = *ppiVar1;\n    if (ppiVar1[3] == 0x1) {\n        if (piVar2 != NULL) {\n            piVar2[1] = ppiVar1[1];\n        }\n        piVar2 = *ppiVar1;\n        if (ppiVar1 == *param_1) {\n            *param_1 = piVar2;\n        }\n        else {\ncode_r0x0040de30:\n            *ppiVar1[1] = piVar2;\n        }\n    }\n    else {\n        if (piVar2 != NULL) {\n            piVar2[1] = ppiVar1[1];\n        }\n        piVar2 = *ppiVar1;\n        if (ppiVar1 != param_1[1]) goto code_r0x0040de30;\n        param_1[1] = piVar2;\n    }\n    param_1[3] = param_1[3] - ppiVar1[3];\n    (*_sym.imp.KERNEL32.dll_HeapFree)(*0x418068, 0, ppiVar1);\ncode_r0x0040de85:\n    if (param_1[7] != NULL) {\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1 + 8);\n    }\n    return;\n}\n",
        "token_count": 648
    },
    "0040dfc6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040dfc6(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    \n    ppiVar2 = *(param_1 + 8);\n    if (ppiVar2 == NULL) {\n        fcn.0040dd5d(param_1);\n        if (*(param_1 + 0x1c) != 0) {\n            (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(param_1 + 0x20);\n        }\n        (*_sym.imp.KERNEL32.dll_HeapFree)(*0x418068, 0, param_1);\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x418684);\n        piVar1 = *(param_1 + 8) + 0x14;\n        *piVar1 = *piVar1 + -1;\n        if (*(*(param_1 + 8) + 0x14) < 1) {\n            *(param_1 + 8) = 0;\n            fcn.0040dfc6(param_1);\n            if (*ppiVar2 != NULL) {\n                *(*ppiVar2 + 4) = ppiVar2[1];\n            }\n            if (ppiVar2[1] != NULL) {\n                *ppiVar2[1] = *ppiVar2;\n            }\n            if (*0x418680 == ppiVar2) {\n                *0x418680 = *ppiVar2;\n            }\n            (*_sym.imp.KERNEL32.dll_HeapFree)(*0x418068, 0, ppiVar2);\n        }\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x418684);\n    }\n    return;\n}\n",
        "token_count": 381
    },
    "0040e075": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e075(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = arg_8h;\n    if (*(arg_8h + 0x14) != 0) {\n        fcn.0040e19b(arg_8h);\n        while( true ) {\n            iVar2 = fcn.0040e144(iVar1, &arg_8h);\n            if (iVar2 == 0) break;\n            (**(iVar1 + 0x14))(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "0040e0c3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e0c3(int32_t *arg_8h, code *arg_ch)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(0x413708);\n    if (iVar1 != 0) {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"InitOnceExecuteOnce\");\n        if (pcVar2 != NULL) {\n            (*pcVar2)(arg_8h, 0x40e0a3, arg_ch, &var_4h);\n        }\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar1);\n        if (pcVar2 != NULL) {\n            return;\n        }\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_InterlockedCompareExchange)(arg_8h, 1, 0);\n    if (iVar1 == 0) {\n        (*arg_ch)();\n        (*_sym.imp.KERNEL32.dll_InterlockedExchange)(arg_8h, 2);\n    }\n    else if (iVar1 == 1) {\n        while (*arg_8h != 2) {\n            (*_sym.imp.KERNEL32.dll_Sleep)(0);\n        }\n    }\n    return;\n}\n",
        "token_count": 290
    },
    "0040e144": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * fcn.0040e144(int32_t param_1, int32_t **param_2)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    \n    piVar3 = NULL;\n    do {\n        piVar1 = *(param_1 + 0x18);\n        if ((piVar1 < 0) || (*(param_1 + 8) <= piVar1)) break;\n        piVar2 = *(*(param_1 + 0xc) + piVar1 * 4);\n        if ((piVar2 != NULL) && (*piVar2 != 0)) {\n            *param_2 = piVar1;\n            piVar3 = piVar2;\n        }\n        *(param_1 + 0x18) = *(param_1 + 0x18) + 1;\n    } while (piVar3 == NULL);\n    if (piVar3 == NULL) {\n        if (*(param_1 + 0x10) != 0) {\n            piVar3 = *(param_1 + 0x10) + 8;\n            *param_2 = piVar3;\n            if (piVar3 != NULL) {\n                return piVar3;\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1 + 0x20);\n    }\n    return piVar3;\n}\n",
        "token_count": 313
    },
    "0040e560": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e560(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar1 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*0x417168);\n    uVar3 = piVar1[2] - arg_ch;\n    if (*arg_8h == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x418788, 0, uVar3 + 10);\n        *arg_8h = iVar2;\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_HeapReAlloc)(*0x418788, 0, *arg_8h, uVar3 + 10);\n        *arg_8h = iVar2;\n    }\n    fcn.0040ea40(*arg_8h, *piVar1 + arg_ch, uVar3 >> 1);\n    piVar1[2] = arg_ch;\n    return;\n}\n",
        "token_count": 255
    },
    "0040e5f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0040e5f0(int32_t arg_8h)\n\n{\n    uint in_EAX;\n    uint in_EDX;\n    \n    if (arg_8h != 0) {\n        (*_sym.imp.KERNEL32.dll_HeapFree)(*0x418788, 0, arg_8h);\n    }\n    return CONCAT44(in_EDX, in_EAX);\n}\n",
        "token_count": 88
    },
    "0040e6c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e6c0(int32_t s)\n\n{\n    int32_t arg_8h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if (s != 0) {\n        var_4h = sub.MSVCRT.dll_wcslen(s);\n    }\n    arg_8h = fcn.0040e900(var_4h, 0xffffffff);\n    if (s == 0) {\n        *(arg_8h + var_4h * 2) = 0;\n    }\n    else {\n        fcn.0040ea40(arg_8h, s, var_4h);\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "0040e780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e780(uint *arg_8h, int32_t s)\n\n{\n    int32_t arg_10h;\n    uint uVar1;\n    uint var_4h;\n    \n    if (s != 0) {\n        arg_10h = sub.MSVCRT.dll_wcslen(s);\n        uVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x418788, 0, arg_10h * 2 + 10);\n        *arg_8h = uVar1;\n        fcn.0040ea40(*arg_8h, s, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "0040e7d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040e7d0(int32_t *arg_8h, int32_t s)\n\n{\n    int32_t iVar1;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if (s == 0) {\n        if (*arg_8h != 0) {\n            (*_sym.imp.KERNEL32.dll_HeapFree)(*0x418788, 0, *arg_8h);\n            *arg_8h = 0;\n        }\n    }\n    else {\n        var_4h = sub.MSVCRT.dll_wcslen(s);\n        if (*arg_8h == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x418788, 0, var_4h * 2 + 10);\n            *arg_8h = iVar1;\n        }\n        else {\n            iVar1 = (*_sym.imp.KERNEL32.dll_HeapReAlloc)(*0x418788, 0, *arg_8h, var_4h * 2 + 10);\n            *arg_8h = iVar1;\n        }\n        fcn.0040ea40(*arg_8h, s, var_4h);\n    }\n    return var_4h * 2 + 2;\n}\n",
        "token_count": 291
    },
    "0040ea40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ea40(uint *arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    ushort *puVar1;\n    uint var_4h;\n    \n    puVar1 = arg_8h + arg_10h * 2;\n    for (; 0 < arg_10h; arg_10h = arg_10h + -2) {\n        *arg_8h = *arg_ch;\n        arg_8h = arg_8h + 1;\n        arg_ch = arg_ch + 1;\n    }\n    *puVar1 = 0;\n    return;\n}\n",
        "token_count": 140
    },
    "0040ee80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040ef09)\n// WARNING: Removing unreachable block (ram,0x0040ef22)\n\nint32_t fcn.0040ee80(uchar *param_1, int32_t *param_2, uint param_3, int32_t *param_4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uchar uStack57;\n    uint uStack56;\n    int32_t iStack52;\n    uchar *puStack44;\n    int32_t iStack40;\n    int32_t iStack36;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    \n    iVar2 = *param_4;\n    iVar4 = *param_2;\n    if (iVar4 == 0) {\n        param_1 = &uStack57;\n        iVar4 = 1;\n    }\n    else {\n        *param_2 = 0;\n    }\n    uStack56 = param_3;\n    iStack52 = 0;\n    uStack24 = 0;\n    uStack20 = 0;\n    uStack16 = 0;\n    iVar1 = fcn.004108d0(&uStack56, \"1.2.11\", 0x38);\n    puStack44 = param_1;\n    iStack40 = iVar1;\n    if (iVar1 == 0) {\n        do {\n            iVar5 = iVar4;\n            if (iStack40 == 0) {\n                iVar5 = 0;\n                iStack40 = iVar4;\n            }\n            iVar3 = iVar2;\n            if (iStack52 == 0) {\n                iVar3 = 0;\n                iStack52 = iVar2;\n            }\n            iVar1 = fcn.0040eff0(&uStack56, 0);\n            iVar2 = iVar3;\n            iVar4 = iVar5;\n        } while (iVar1 == 0);\n        *param_4 = *param_4 - (iStack52 + iVar3);\n        if (param_1 == &uStack57) {\n            if ((iStack36 != 0) && (iVar1 == -5)) {\n                iVar5 = 1;\n            }\n        }\n        else {\n            *param_2 = iStack36;\n        }\n        fcn.004107a0(&uStack56);\n        if (iVar1 == 1) {\n            return 0;\n        }\n        if ((iVar1 == 2) || ((iVar1 == -5 && (iStack40 + iVar5 != 0)))) {\n            iVar1 = -3;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 595
    },
    "0040eff0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t fcn.0040eff0(uint8_t **param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    uint8_t *puVar8;\n    uint8_t *puVar9;\n    uint16_t uVar10;\n    uint32_t uVar11;\n    uint8_t *puVar12;\n    uint8_t *puVar13;\n    int32_t iVar14;\n    uint *puVar15;\n    uint32_t uStack56;\n    uint8_t *puStack52;\n    uint8_t *puStack48;\n    ushort uStack44;\n    uchar uStack42;\n    uchar uStack41;\n    uint *puStack40;\n    uint8_t *puStack36;\n    uint8_t *puStack32;\n    int32_t iStack28;\n    uint8_t *puStack24;\n    uint32_t uStack20;\n    uint32_t uStack16;\n    uint8_t *puStack12;\n    uint *puStack8;\n    uint8_t *puStack4;\n    \n    if ((((((param_1 == NULL) || (param_1[8] == NULL)) || (param_1[9] == NULL)) ||\n         ((puVar15 = param_1[7],  puVar15 == NULL || (*puVar15 != param_1)))) || (iVar5 = puVar15[1],  iVar5 < 0x3f34))\n       || (((0x3f53 < iVar5 || (param_1[3] == NULL)) || ((*param_1 == NULL && (param_1[1] != NULL)))))) {\n        return -2;\n    }\n    if (iVar5 == 0x3f3f) {\n        puVar15[1] = 0x3f40;\n    }\n    puStack36 = param_1[3];\n    uVar11 = puVar15[0xf];\n    puStack48 = param_1[4];\n    puVar9 = *param_1;\n    iStack28 = 0;\n    puVar12 = param_1[1];\n    uVar4 = puVar15[1] - 0x3f34;\n    puVar13 = puVar15[0x10];\n    if (uVar4 < 0x1f) {\n        puStack8 = puVar15 + 0x16;\n        uStack56 = uVar11;\n        puStack52 = puVar9;\n        puStack40 = puVar15;\n        puStack32 = puStack48;\n        puStack12 = puVar12;\n        do {\n    // switch table (31 cases) at 0x410710\n            puVar8 = puVar13;\n            switch(*(uVar4 * 4 + 0x410710)) {\n            case 0x40f0c7:\n                uVar4 = puVar15[3];\n                if (uVar4 == 0) {\n                    puVar15[1] = 0x3f40;\n                }\n                else {\n                    if (puVar13 < 0x10) {\n                        do {\n                            if (puVar12 == NULL) goto code_r0x0040f5df;\n                            uVar1 = *puVar9;\n                            puVar9 = puVar9 + 1;\n                            uVar11 = uVar11 + (uVar1 << (puVar13 & 0x1f));\n                            puVar13 = puVar13 + 8;\n                            puVar12 = puVar12 + -1;\n                            uStack56 = uVar11;\n                            puStack52 = puVar9;\n                        } while (puVar13 < 0x10);\n                        uVar4 = puVar15[3];\n                    }\n                    if (((uVar4 & 2) == 0) || (uVar11 != 0x8b1f)) {\n                        puVar15[5] = 0;\n                        if (puVar15[9] != 0) {\n                            *(puVar15[9] + 0x30) = 0xffffffff;\n                        }\n                        uVar4 = uVar11;\n                        if (((*(puVar15 + 3) & 1) == 0) ||\n                           (uVar4 = uStack56,  ((uVar11 >> 8) + (uVar11 & 0xff) * 0x100) % 0x1f != 0)) {\n                            param_1[6] = \"incorrect header check\";\n                            puVar15[1] = 0x3f51;\n                            uVar11 = uVar4;\n                        }\n                        else if ((uStack56 & 0xf) == 8) {\n                            uVar11 = uStack56 >> 4;\n                            puVar13 = puVar13 + -4;\n                            uVar4 = (uVar11 & 0xf) + 8;\n                            if (puVar15[10] == 0) {\n                                puVar15[10] = uVar4;\n                            }\n                            if ((uVar4 < 0x10) && (uVar4 < puVar15[10] || uVar4 == puVar15[10])) {\n                                puVar15[6] = 1 << uVar4;\n                                puVar13 = fcn.00411490(0, 0, 0);\n                                puVar15[7] = puVar13;\n                                param_1[0xc] = puVar13;\n                                puVar15[1] = ~(uStack56 >> 0xc) & 2 | 0x3f3d;\n                                uStack56 = 0;\n                                puVar13 = NULL;\n                                uVar11 = 0;\n                            }\n                            else {\n                                param_1[6] = \"invalid window size\";\n                                puVar15[1] = 0x3f51;\n                                uStack56 = uVar11;\n                            }\n                        }\n                        else {\n                            param_1[6] = \"unknown compression method\";\n                            puVar15[1] = 0x3f51;\n                            uVar11 = uStack56;\n                        }\n                    }\n                    else {\n                        if (puVar15[10] == 0) {\n                            puVar15[10] = 0xf;\n                        }\n                        uVar6 = fcn.00410c80(0, 0, 0);\n                        puVar15[7] = uVar6;\n                        uStack44 = 0x8b1f;\n                        uVar6 = fcn.00410c80(puVar15[7], &uStack44, 2);\n                        puVar15[7] = uVar6;\n                        uStack56 = 0;\n                        puVar13 = NULL;\n                        puVar15[1] = 0x3f35;\n                        uVar11 = 0;\n                    }\n                }\n                break;\n            case 0x40f258:\n                for (; puVar13 < 0x10; puVar13 = puVar13 + 8) {\n                    if (puVar12 == NULL) goto code_r0x0040f5df;\n                    uVar1 = *puVar9;\n                    puVar9 = puVar9 + 1;\n                    uVar11 = uVar11 + (uVar1 << (puVar13 & 0x1f));\n                    puVar12 = puVar12 + -1;\n                    uStack56 = uVar11;\n                    puStack52 = puVar9;\n                }\n                puVar15[5] = uVar11;\n                if (uVar11 == '\\b') {\n                    if ((uVar11 & 0xe000) == 0) {\n                        if (puVar15[9] != NULL) {\n                            *puVar15[9] = uVar11 >> 8 & 1;\n                        }\n                        if (((puVar15[5] & 0x200) != 0) && ((*(puVar15 + 3) & 4) != 0)) {\n                            uStack44 = uVar11;\n                            uVar6 = fcn.00410c80(puVar15[7], &uStack44, 2);\n                            puVar15[7] = uVar6;\n                        }\n                        uVar11 = 0;\n                        puVar15[1] = 0x3f36;\n                        uStack56 = 0;\n                        puVar13 = NULL;\n                        do {\n                            if (puVar12 == NULL) goto code_r0x0040f5df;\n                            uVar1 = *puVar9;\n                            puVar9 = puVar9 + 1;\n                            uVar11 = uVar11 + (uVar1 << (puVar13 & 0x1f));\n                            puVar13 = puVar13 + 8;\n                            puVar12 = puVar12 + -1;\n                            uStack56 = uVar11;\n                            puStack52 = puVar9;\njoined_r0x0040f311:\n                        } while (puVar13 < 0x20);\n                        if (puVar15[9] != 0) {\n                            *(puVar15[9] + 4) = uVar11;\n                        }\n                        if (((puVar15[5] & 0x200) != 0) && ((*(puVar15 + 3) & 4) != 0)) {\n                            uStack44 = uVar11;\n                            uStack42 = uVar11 >> 0x10;\n                            uStack41 = uVar11 >> 0x18;\n                            uVar6 = fcn.00410c80(puVar15[7], &uStack44, 4);\n                            puVar15[7] = uVar6;\n                        }\n                        uVar11 = 0;\n                        puVar15[1] = 0x3f37;\n                        uStack56 = 0;\n                        puVar13 = NULL;\n                        do {\n                            if (puVar12 == NULL) goto code_r0x0040f5df;\n                            uVar1 = *puVar9;\n                            puVar9 = puVar9 + 1;\n                            uVar11 = uVar11 + (uVar1 << (puVar13 & 0x1f));\n                            puVar13 = puVar13 + 8;\n                            puVar12 = puVar12 + -1;\n                            uStack56 = uVar11;\n                            puStack52 = puVar9;\njoined_r0x0040f395:\n                        } while (puVar13 < 0x10);\n                        if (puVar15[9] != 0) {\n                            *(puVar15[9] + 8) = uVar11 & 0xff;\n                            *(puVar15[9] + 0xc) = uVar11 >> 8;\n                        }\n                        if (((puVar15[5] & 0x200) != 0) && ((*(puVar15 + 3) & 4) != 0)) {\n                            uStack44 = uVar11;\n                            uVar6 = fcn.00410c80(puVar15[7], &uStack44, 2);\n                            puVar15[7] = uVar6;\n                        }\n                        uVar11 = 0;\n                        puVar15[1] = 0x3f38;\n                        uStack56 = 0;\n                        puVar13 = NULL;\n                        goto code_r0x0040f410;\n                    }\n                    param_1[6] = \"unknown header flags set\";\n                    puVar15[1] = 0x3f51;\n                }\n                else {\n                    param_1[6] = \"unknown compression method\";\n                    puVar15[1] = 0x3f51;\n                }\n                break;\n            case 0x40f30e:\n                goto joined_r0x0040f311;\n            case 0x40f392:\n                goto joined_r0x0040f395;\n            case 0x40f410:\ncode_r0x0040f410:\n                if ((puVar15[5] & 0x400) == 0) {\n                    if (puVar15[9] != 0) {\n                        *(puVar15[9] + 0x10) = 0;\n                    }\n                }\n                else {\n                    for (; puVar13 < 0x10; puVar13 = puVar13 + 8) {\n                        if (puVar12 == NULL) goto code_r0x0040f5df;\n                        uVar1 = *puVar9;\n                        puVar9 = puVar9 + 1;\n                        uVar11 = uVar11 + (uVar1 << (puVar13 & 0x1f));\n                        puVar12 = puVar12 + -1;\n                        uStack56 = uVar11;\n                        puStack52 = puVar9;\n                    }\n                    puVar15[0x11] = uVar11;\n                    if (puVar15[9] != 0) {\n                        *(puVar15[9] + 0x14) = uVar11;\n                    }\n                    if (((puVar15[5] & 0x200) != 0) && ((*(puVar15 + 3) & 4) != 0)) {\n                        uStack44 = uVar11;\n                        uVar6 = fcn.00410c80(puVar15[7], &uStack44, 2);\n                        puVar15[7] = uVar6;\n                    }\n                    puVar13 = NULL;\n                    uStack56 = 0;\n                }\n                puVar15[1] = 0x3f39;\n            case 0x40f49e:\n                if ((puVar15[5] & 0x400) == 0) {\ncode_r0x0040f53a:\n                    puVar15[0x11] = 0;\n                    puVar15[1] = 0x3f3a;\ncode_r0x0040f548:\n                    if ((puVar15[5] & 0x800) == 0) {\n                        if (puVar15[9] != 0) {\n                            *(puVar15[9] + 0x1c) = 0;\n                        }\ncode_r0x0040f671:\n                        puVar15[0x11] = 0;\n                        puVar15[1] = 0x3f3b;\ncode_r0x0040f67f:\n                        if ((puVar15[5] & 0x1000) == 0) {\n                            if (puVar15[9] != 0) {\n                                *(puVar15[9] + 0x24) = 0;\n                            }\ncode_r0x0040f71d:\n                            puVar15[1] = 0x3f3c;\n                            uVar11 = uStack56;\ncode_r0x0040f728:\n                            if ((puVar15[5] & 0x200) != 0) {\n                                for (; puVar13 < 0x10; puVar13 = puVar13 + 8) {\n                                    if (puVar12 == NULL) goto code_r0x0040f5df;\n                                    uVar1 = *puVar9;\n                                    puVar9 = puVar9 + 1;\n                                    uVar11 = uVar11 + (uVar1 << (puVar13 & 0x1f));\n                                    puVar12 = puVar12 + -1;\n                                    uStack56 = uVar11;\n                                    puStack52 = puVar9;\n                                }\n                                if (((*(puVar15 + 3) & 4) != 0) && (uVar11 != *(puVar15 + 7))) {\n                                    param_1[6] = \"header crc mismatch\";\n                                    puVar15[1] = 0x3f51;\n                                    break;\n                                }\n                                puVar13 = NULL;\n                                uStack56 = 0;\n                            }\n                            if (puVar15[9] != 0) {\n                                *(puVar15[9] + 0x2c) = puVar15[5] >> 9 & 1;\n                                *(puVar15[9] + 0x30) = 1;\n                            }\n                            puVar8 = fcn.00410c80(0, 0, 0);\n                            puVar15[7] = puVar8;\n                            param_1[0xc] = puVar8;\n                            puVar15[1] = 0x3f3f;\n                            uVar11 = uStack56;\n                            break;\n                        }\n                        if (puVar12 != NULL) {\n                            puStack4 = NULL;\n                            do {\n                                puVar8 = puStack4 + puVar9;\n                                puStack24 = *puVar8;\n                                puStack4 = puStack4 + 1;\n                                iVar5 = puVar15[9];\n                                if (((iVar5 != 0) && (*(iVar5 + 0x24) != 0)) && (puVar15[0x11] < *(iVar5 + 0x28))) {\n                                    *(*(iVar5 + 0x24) + puVar15[0x11]) = *puVar8;\n                                    puVar15[0x11] = puVar15[0x11] + 1;\n                                    puVar9 = puStack52;\n                                }\n                            } while ((puStack24 != NULL) && (puStack4 < puVar12));\n                            if (((puVar15[5] & 0x200) != 0) && ((*(puVar15 + 3) & 4) != 0)) {\n                                uVar6 = fcn.00410c80(puVar15[7], puVar9, puStack4);\n                                puVar15[7] = uVar6;\n                            }\n                            puVar9 = puVar9 + puStack4;\n                            puVar12 = puVar12 + -puStack4;\n                            puStack52 = puVar9;\n                            if (puStack24 == NULL) goto code_r0x0040f71d;\n                        }\n                    }\n                    else if (puVar12 != NULL) {\n                        puStack4 = NULL;\n                        do {\n                            puVar8 = puStack4 + puVar9;\n                            puStack24 = *puVar8;\n                            puStack4 = puStack4 + 1;\n                            iVar5 = puVar15[9];\n                            if (((iVar5 != 0) && (*(iVar5 + 0x1c) != 0)) && (puVar15[0x11] < *(iVar5 + 0x20))) {\n                                *(*(iVar5 + 0x1c) + puVar15[0x11]) = *puVar8;\n                                puVar15[0x11] = puVar15[0x11] + 1;\n                                puVar9 = puStack52;\n                            }\n                        } while ((puStack24 != NULL) && (puStack4 < puVar12));\n                        if (((puVar15[5] & 0x200) != 0) && ((*(puVar15 + 3) & 4) != 0)) {\n                            uVar6 = fcn.00410c80(puVar15[7], puVar9, puStack4);\n                            puVar15[7] = uVar6;\n                        }\n                        puVar9 = puVar9 + puStack4;\n                        puVar12 = puVar12 + -puStack4;\n                        puStack52 = puVar9;\n                        if (puStack24 == NULL) goto code_r0x0040f671;\n                    }\n                }\n                else {\n                    puStack24 = puVar15[0x11];\n                    if (puVar12 < puVar15[0x11]) {\n                        puStack24 = puVar12;\n                    }\n                    if (puStack24 != NULL) {\n                        iVar5 = puVar15[9];\n                        if ((iVar5 != 0) && (puStack4 = *(iVar5 + 0x10),  puStack4 != NULL)) {\n                            uStack16 = *(iVar5 + 0x14) - puVar15[0x11];\n                            puVar8 = puStack24;\n                            if (*(iVar5 + 0x18) < puStack24 + uStack16) {\n                                puVar8 = *(iVar5 + 0x18) + -uStack16;\n                            }\n                            sub.MSVCRT.dll_memcpy(puStack4 + uStack16, puVar9, puVar8);\n                        }\n                        if (((puVar15[5] & 0x200) != 0) && ((*(puVar15 + 3) & 4) != 0)) {\n                            uVar6 = fcn.00410c80(puVar15[7], puVar9, puStack24);\n                            puVar15[7] = uVar6;\n                        }\n                        puVar9 = puVar9 + puStack24;\n                        puVar12 = puVar12 + -puStack24;\n                        puVar15[0x11] = puVar15[0x11] - puStack24;\n                        puStack52 = puVar9;\n                    }\n                    if (puVar15[0x11] == 0) goto code_r0x0040f53a;\n                }\ncode_r0x0040f5df:\n                puVar9 = puStack32;\n                puVar15 = puStack40;\n                param_1[3] = puStack36;\n                param_1[4] = puStack48;\n                param_1[1] = puVar12;\n                *param_1 = puStack52;\n                puStack40[0xf] = uStack56;\n                puStack40[0x10] = puVar13;\n                if (((puStack40[0xb] == 0) &&\n                    (((puStack32 == param_1[4] || (0x3f50 < puStack40[1])) ||\n                     ((0x3f4d < puStack40[1] && (param_2 == 4)))))) ||\n                   (iVar5 = fcn.00410b90(param_1, param_1[3], puStack32 - param_1[4]),  iVar5 == 0)) {\n                    puStack12 = puStack12 - param_1[1];\n                    iVar5 = puVar9 - param_1[4];\n                    param_1[2] = param_1[2] + puStack12;\n                    param_1[5] = param_1[5] + iVar5;\n                    puVar15[8] = puVar15[8] + iVar5;\n                    if (((*(puVar15 + 3) & 4) != 0) && (iVar5 != 0)) {\n                        if (puVar15[5] == 0) {\n                            puVar9 = fcn.00411490(puVar15[7], param_1[3] - iVar5, iVar5);\n                            puVar15[7] = puVar9;\n                            param_1[0xc] = puVar9;\n                        }\n                        else {\n                            puVar9 = fcn.00410c80();\n                            puVar15[7] = puVar9;\n                            param_1[0xc] = puVar9;\n                        }\n                    }\n                    iVar2 = puVar15[1];\n                    if ((iVar2 == 0x3f47) || (iVar2 == 0x3f42)) {\n                        iVar14 = 0x100;\n                    }\n                    else {\n                        iVar14 = 0;\n                    }\n                    param_1[0xb] = (-(puVar15[2] != 0) & 0x40) + ((iVar2 != 0x3f3f) - 1 & 0x80) + puVar15[0x10] + iVar14\n                    ;\n                    if (((puStack12 != NULL) || (iVar5 != 0)) && (param_2 != 4)) {\n                        return iStack28;\n                    }\n                    if (iStack28 == 0) {\n                        return -5;\n                    }\n                }\n                else {\n                    puVar15[1] = 0x3f52;\ncode_r0x0040f656:\n                    iStack28 = -4;\n                }\n                return iStack28;\n            case 0x40f548:\n                goto code_r0x0040f548;\n            case 0x40f656:\n                goto code_r0x0040f656;\n            case 0x40f67f:\n                goto code_r0x0040f67f;\n            case 0x40f728:\n                goto code_r0x0040f728;\n            case 0x40f7cb:\n                for (; puVar13 < 0x20; puVar13 = puVar13 + 8) {\n                    if (puVar12 == NULL) goto code_r0x0040f5df;\n                    uVar1 = *puVar9;\n                    puVar9 = puVar9 + 1;\n                    uVar11 = uVar11 + (uVar1 << (puVar13 & 0x1f));\n                    puVar12 = puVar12 + -1;\n                    uStack56 = uVar11;\n                    puStack52 = puVar9;\n                }\n                puVar8 = (uVar11 >> 8 & 0xff00) + ((uVar11 & 0xff00) + uVar11 * 0x10000) * 0x100 + (uVar11 >> 0x18);\n                uVar11 = 0;\n                puVar15[7] = puVar8;\n                uStack56 = 0;\n                puVar13 = NULL;\n                param_1[0xc] = puVar8;\n                puVar15[1] = 0x3f3e;\n            case 0x40f82f:\n                if (puVar15[4] == 0) {\n                    param_1[3] = puStack36;\n                    param_1[4] = puStack48;\n                    *param_1 = puVar9;\n                    param_1[1] = puVar12;\n                    puVar15[0x10] = puVar13;\n                    puVar15[0xf] = uVar11;\n                    return 2;\n                }\n                puVar8 = fcn.00411490(0, 0, 0);\n                puVar15[7] = puVar8;\n                param_1[0xc] = puVar8;\n                puVar15[1] = 0x3f3f;\n                uVar11 = uStack56;\ncode_r0x0040f85c:\n                if ((param_2 == 5) || (param_2 == 6)) goto code_r0x0040f5df;\ncode_r0x0040f872:\n                if (puVar15[2] != 0) {\n                    puVar15[1] = 0x3f4e;\n                    uStack56 = uVar11 >> (puVar13 & 7);\n                    puVar13 = puVar13 + -(puVar13 & 7);\n                    uVar11 = uStack56;\n                    break;\n                }\n                for (; puVar13 < 0x3; puVar13 = puVar13 + 8) {\n                    if (puVar12 == NULL) goto code_r0x0040f5df;\n                    uVar1 = *puVar9;\n                    puVar9 = puVar9 + 1;\n                    uVar11 = uVar11 + (uVar1 << (puVar13 & 0x1f));\n                    puVar12 = puVar12 + -1;\n                    uStack56 = uVar11;\n                    puStack52 = puVar9;\n                }\n                puVar15[2] = uVar11 & 1;\n    // switch table (4 cases) at 0x41078c\n                switch(uVar11 >> 1 & 3) {\n                case 0:\n                    puVar15[1] = 0x3f41;\n                    break;\n                case 1:\n                    puVar15[0x14] = 0x413740;\n                    puVar15[0x16] = 9;\n                    puVar15[0x15] = 0x413f40;\n                    puVar15[0x17] = 5;\n                    puVar15[1] = 0x3f47;\n                    if (param_2 == 6) {\n                        uStack56 = uVar11 >> 3;\n                        puVar13 = puVar13 + -3;\n                        goto code_r0x0040f5df;\n                    }\n                    break;\n                case 2:\n                    uVar11 = uVar11 >> 3;\n                    puVar13 = puVar13 + -3;\n                    puVar15[1] = 0x3f44;\n                    uStack56 = uVar11;\n                    goto code_r0x0040fa41;\n                case 3:\n                    uVar11 = uVar11 >> 3;\n                    puVar13 = puVar13 + -3;\n                    param_1[6] = \"invalid block type\";\n                    puVar15[1] = 0x3f51;\n                    uStack56 = uVar11;\n                    goto code_r0x0040fa41;\n                }\n                uVar11 = uVar11 >> 3;\n                puVar13 = puVar13 + -3;\n                uStack56 = uVar11;\n                break;\n            case 0x40f85c:\n                goto code_r0x0040f85c;\n            case 0x40f872:\n                goto code_r0x0040f872;\n            case 0x40f962:\n                uStack56 = uVar11 >> (puVar13 & 7);\n                for (puVar13 = puVar13 + -(puVar13 & 7); puVar13 < 0x20; puVar13 = puVar13 + 8) {\n                    if (puVar12 == NULL) goto code_r0x0040f5df;\n                    uVar1 = *puVar9;\n                    puVar9 = puVar9 + 1;\n                    uStack56 = uStack56 + (uVar1 << (puVar13 & 0x1f));\n                    puVar12 = puVar12 + -1;\n                    puStack52 = puVar9;\n                }\n                if ((uStack56 & 0xffff) == ~uStack56 >> 0x10) {\n                    uVar11 = 0;\n                    puVar15[0x11] = uStack56 & 0xffff;\n                    puVar13 = NULL;\n                    uStack56 = 0;\n                    puVar15[1] = 0x3f42;\n                    if (param_2 != 6) goto code_r0x0040f9e2;\n                    uStack56 = 0;\n                    goto code_r0x0040f5df;\n                }\n                param_1[6] = \"invalid stored block lengths\";\n                puVar15[1] = 0x3f51;\n                uVar11 = uStack56;\n                break;\n            case 0x40f9e2:\ncode_r0x0040f9e2:\n                puVar15[1] = 0x3f43;\n            case 0x40f9e9:\n                puStack24 = puVar15[0x11];\n                if (puStack24 == NULL) {\n                    puVar15[1] = 0x3f3f;\n                    break;\n                }\n                if (puVar12 < puStack24) {\n                    puStack24 = puVar12;\n                }\n                if (puStack48 < puStack24) {\n                    puStack24 = puStack48;\n                }\n                if (puStack24 != NULL) {\n                    sub.MSVCRT.dll_memcpy(puStack36, puVar9, puStack24);\n                    puStack48 = puStack48 + -puStack24;\n                    puVar9 = puVar9 + puStack24;\n                    puStack36 = puStack36 + puStack24;\n                    puVar12 = puVar12 + -puStack24;\n                    puVar15[0x11] = puVar15[0x11] - puStack24;\n                    uVar11 = uStack56;\n                    puStack52 = puVar9;\n                    break;\n                }\n                goto code_r0x0040f5df;\n            case 0x40fa68:\n                for (; puVar13 < 0xe; puVar13 = puVar13 + 8) {\n                    if (puVar12 == NULL) goto code_r0x0040f5df;\n                    uVar1 = *puVar9;\n                    puVar9 = puVar9 + 1;\n                    uVar11 = uVar11 + (uVar1 << (puVar13 & 0x1f));\n                    puVar12 = puVar12 + -1;\n                    uStack56 = uVar11;\n                    puStack52 = puVar9;\n                }\n                puVar13 = puVar13 + -0xe;\n                puVar15[0x19] = (uVar11 & 0x1f) + 0x101;\n                uVar4 = uVar11 >> 10;\n                puVar15[0x1a] = (uVar11 >> 5 & 0x1f) + 1;\n                uVar11 = uVar11 >> 0xe;\n                puVar15[0x18] = (uVar4 & 0xf) + 4;\n                uStack56 = uVar11;\n                if ((puVar15[0x19] < 0x11f) && (puVar15[0x1a] < 0x1f)) {\n                    puVar15[0x1b] = 0;\n                    puVar15[1] = 0x3f45;\n                    goto code_r0x0040faed;\n                }\n                param_1[6] = \"too many length or distance symbols\";\n                puVar15[1] = 0x3f51;\n                break;\n            case 0x40faed:\ncode_r0x0040faed:\n                if (puVar15[0x1b] < puVar15[0x18]) {\n                    do {\n                        for (; puVar13 < 0x3; puVar13 = puVar13 + 8) {\n                            if (puVar12 == NULL) goto code_r0x0040f5df;\n                            uVar1 = *puVar9;\n                            puVar9 = puVar9 + 1;\n                            uStack56 = uVar11 + (uVar1 << (puVar13 & 0x1f));\n                            puVar12 = puVar12 + -1;\n                            uVar11 = uStack56;\n                            puStack52 = puVar9;\n                        }\n                        uStack56 = uVar11 >> 3;\n                        puVar13 = puVar13 + -3;\n                        *(puVar15 + *(puVar15[0x1b] * 2 + 0x413fc0) * 2 + 0x74) = uVar11 & 7;\n                        puVar15[0x1b] = puVar15[0x1b] + 1;\n                        uVar11 = uStack56;\n                    } while (puVar15[0x1b] < puVar15[0x18]);\n                }\n                uVar11 = puVar15[0x1b];\n                while (uVar11 < 0x13) {\n                    *(puVar15 + *(puVar15[0x1b] * 2 + 0x413fc0) * 2 + 0x74) = 0;\n                    puVar15[0x1b] = puVar15[0x1b] + 1;\n                    uVar11 = puVar15[0x1b];\n                }\n                puVar15[0x16] = 7;\n                puVar15[0x14] = puVar15 + 0x14d;\n                puVar15[0x1c] = puVar15 + 0x14d;\n                iStack28 = fcn.004117c0(0, puVar15 + 0x1d, 0x13, puVar15 + 0x1c, puVar15 + 0x16, puVar15 + 0xbd);\n                if (iStack28 == 0) {\n                    puVar15[0x1b] = 0;\n                    puVar15[1] = 0x3f46;\n                    goto code_r0x0040fbe3;\n                }\n                param_1[6] = \"invalid code lengths set\";\n                puVar15[1] = 0x3f51;\n                uVar11 = uStack56;\n                break;\n            case 0x40fbe3:\ncode_r0x0040fbe3:\n                puStack24 = puVar15[0x1b];\n                if (puStack24 < puVar15[0x1a] + puVar15[0x19]) {\n                    do {\n                        uStack16 = *(puStack40[0x14] + ((1 << (*puStack8 & 0x1f)) - 1U & uStack56) * 4);\n                        if (puVar13 < (uStack16 >> 8 & 0xff)) {\n                            do {\n                                if (puVar12 == NULL) goto code_r0x0040f5df;\n                                uStack56 = uStack56 + (*puVar9 << (puVar13 & 0x1f));\n                                puVar9 = puVar9 + 1;\n                                puVar13 = puVar13 + 8;\n                                puVar12 = puVar12 + -1;\n                                uStack16 = *(puStack40[0x14] + ((1 << (*puStack8 & 0x1f)) - 1U & uStack56) * 4);\n                                puStack52 = puVar9;\n                            } while (puVar13 < (uStack16 >> 8 & 0xff));\n                        }\n                        uVar10 = uStack16 >> 0x10;\n                        puVar15 = puStack40;\n                        if (0xf < uVar10) {\n                            if (uVar10 == 0x10) {\n                                puStack4 = (uStack16 >> 8 & 0xff) + 2;\n                                for (; puVar13 < puStack4; puVar13 = puVar13 + 8) {\n                                    if (puVar12 == NULL) goto code_r0x0040f5df;\n                                    uVar1 = *puVar9;\n                                    puVar9 = puVar9 + 1;\n                                    uStack56 = uStack56 + (uVar1 << (puVar13 & 0x1f));\n                                    puVar12 = puVar12 + -1;\n                                    puStack52 = puVar9;\n                                }\n                                uVar11 = uStack16 >> 8 & 0xff;\n                                puVar13 = puVar13 + -uVar11;\n                                uStack56 = uStack56 >> (uVar11 & 0x1f);\n                                if (puStack24 != NULL) {\n                                    uStack16 = *(puStack40 + puStack24 * 2 + 0x72);\n                                    uStack20 = uStack56 & 3;\n                                    uStack56 = uStack56 >> 2;\n                                    uStack20 = uStack20 + 3;\n                                    puVar13 = puVar13 + -2;\n                                    goto code_r0x0040fddc;\n                                }\n                            }\n                            else {\n                                puStack4 = uStack16 >> 8 & 0xff;\n                                if (uVar10 == 0x11) {\n                                    for (; puVar13 < puStack4 + 3; puVar13 = puVar13 + 8) {\n                                        if (puVar12 == NULL) goto code_r0x0040f5df;\n                                        uVar1 = *puVar9;\n                                        puVar9 = puVar9 + 1;\n                                        uStack56 = uStack56 + (uVar1 << (puVar13 & 0x1f));\n                                        puVar12 = puVar12 + -1;\n                                        puStack52 = puVar9;\n                                    }\n                                    uVar11 = uStack56 >> (puStack4 & 0x1f);\n                                    uStack56 = uVar11 >> 3;\n                                    uStack20 = (uVar11 & 7) + 3;\n                                    iVar5 = -3 - puStack4;\n                                }\n                                else {\n                                    for (; puVar13 < puStack4 + 7; puVar13 = puVar13 + 8) {\n                                        if (puVar12 == NULL) goto code_r0x0040f5df;\n                                        uVar1 = *puVar9;\n                                        puVar9 = puVar9 + 1;\n                                        uStack56 = uStack56 + (uVar1 << (puVar13 & 0x1f));\n                                        puVar12 = puVar12 + -1;\n                                        puStack52 = puVar9;\n                                    }\n                                    uVar11 = uStack56 >> (puStack4 & 0x1f);\n                                    uStack56 = uVar11 >> 7;\n                                    uStack20 = (uVar11 & 0x7f) + 0xb;\n                                    iVar5 = -7 - puStack4;\n                                }\n                                puVar13 = puVar13 + iVar5;\n                                uStack16 = 0;\ncode_r0x0040fddc:\n                                uVar11 = uStack20;\n                                if (puStack24 + uStack20 <= puStack40[0x1a] + puStack40[0x19]) {\n                                    for (; uVar11 != 0; uVar11 = uVar11 - 1) {\n                                        *(puStack40 + puStack40[0x1b] * 2 + 0x74) = uStack16;\n                                        puStack40[0x1b] = puStack40[0x1b] + 1;\n                                    }\n                                    goto code_r0x0040fe16;\n                                }\n                            }\n                            param_1[6] = \"invalid bit length repeat\";\n                            puStack40[1] = 0x3f51;\n                            uVar11 = uStack56;\n                            goto code_r0x0040fa41;\n                        }\n                        uVar11 = uStack16 >> 8 & 0xff;\n                        puVar13 = puVar13 + -uVar11;\n                        uStack56 = uStack56 >> (uVar11 & 0x1f);\n                        *(puStack40 + puStack24 * 2 + 0x74) = uVar10;\n                        puStack40[0x1b] = puStack40[0x1b] + 1;\ncode_r0x0040fe16:\n                        puStack24 = puStack40[0x1b];\n                    } while (puStack24 < puStack40[0x1a] + puStack40[0x19]);\n                }\n                uVar11 = uStack56;\n                if (puVar15[1] != 0x3f51) {\n                    if (*(puVar15 + 0x9d) == 0) {\n                        param_1[6] = \"invalid code -- missing end-of-block\";\n                        puVar15[1] = 0x3f51;\n                    }\n                    else {\n                        puVar15[0x16] = 9;\n                        puVar15[0x14] = puVar15 + 0x14d;\n                        puVar15[0x1c] = puVar15 + 0x14d;\n                        iStack28 = fcn.004117c0(1, puVar15 + 0x1d, puVar15[0x19], puVar15 + 0x1c, puVar15 + 0x16, \n                                                puVar15 + 0xbd);\n                        if (iStack28 == 0) {\n                            puVar15[0x15] = puVar15[0x1c];\n                            puVar15[0x17] = 6;\n                            iStack28 = fcn.004117c0(2, puVar15 + (puVar15[0x19] + 0x3a) * 2, puVar15[0x1a], \n                                                    puVar15 + 0x1c, puVar15 + 0x17, puVar15 + 0xbd);\n                            if (iStack28 == 0) {\n                                puVar15[1] = 0x3f47;\n                                if (param_2 != 6) goto code_r0x0040ff40;\n                                goto code_r0x0040f5df;\n                            }\n                            param_1[6] = \"invalid distances set\";\n                            puVar15[1] = 0x3f51;\n                        }\n                        else {\n                            param_1[6] = \"invalid literal/lengths set\";\n                            puVar15[1] = 0x3f51;\n                        }\n                    }\n                }\n                break;\n            case 0x40ff40:\ncode_r0x0040ff40:\n                puVar15[1] = 0x3f48;\n                puVar8 = puVar13;\n            case 0x40ff47:\n                if ((0x5 < puVar12) && (0x101 < puStack48)) {\n                    param_1[3] = puStack36;\n                    param_1[4] = puStack48;\n                    *param_1 = puVar9;\n                    param_1[1] = puVar12;\n                    puVar15[0xf] = uVar11;\n                    puVar15[0x10] = puVar8;\n                    fcn.00411c20(param_1, puStack32);\n                    uVar11 = puVar15[0xf];\n                    puVar13 = puVar15[0x10];\n                    puStack36 = param_1[3];\n                    puVar9 = *param_1;\n                    puVar12 = param_1[1];\n                    puStack48 = param_1[4];\n                    uStack56 = uVar11;\n                    puStack52 = puVar9;\n                    if (puVar15[1] == 0x3f3f) {\n                        puVar15[0x6f2] = 0xffffffff;\n                    }\n                    break;\n                }\n                puStack4 = puVar15[0x14];\n                puVar15[0x6f2] = 0;\n                uVar4 = *(puVar15[0x14] + ((1 << (puVar15[0x16] & 0x1f)) - 1U & uVar11) * 4);\n                if (puVar8 < (uVar4 >> 8 & 0xff)) {\n                    do {\n                        puVar13 = puVar8;\n                        if (puVar12 == NULL) goto code_r0x0040f5df;\n                        uVar1 = *puVar9;\n                        puVar9 = puVar9 + 1;\n                        uVar11 = uVar11 + (uVar1 << (puVar8 & 0x1f));\n                        puVar8 = puVar8 + 8;\n                        puVar12 = puVar12 + -1;\n                        uVar4 = *(puVar15[0x14] + ((1 << (puVar15[0x16] & 0x1f)) - 1U & uVar11) * 4);\n                        uStack56 = uVar11;\n                        puStack52 = puVar9;\n                    } while (puVar8 < (uVar4 >> 8 & 0xff));\n                }\n                cVar3 = uVar4;\n                uVar7 = uVar4;\n                if ((cVar3 != '\\0') && ((uVar4 & 0xf0) == 0)) {\n                    uStack20 = uVar4 >> 8;\n                    uVar1 = uVar4 >> 8;\n                    uVar7 = *(puStack4 +\n                             ((((1 << (cVar3 + uVar1 & 0x1f)) - 1U & uStack56) >> (uVar1 & 0x1f)) + (uVar4 >> 0x10)) * 4\n                             );\n                    puVar13 = puVar8;\n                    uStack16 = uVar4;\n                    if (puVar8 < (uVar7 >> 8 & 0xff) + (uStack20 & 0xff)) {\n                        do {\n                            if (puVar12 == NULL) goto code_r0x0040f5df;\n                            puVar8 = puVar13 + 8;\n                            puVar12 = puVar12 + -1;\n                            uVar1 = *puStack52;\n                            puStack52 = puStack52 + 1;\n                            uStack56 = uStack56 + (uVar1 << (puVar13 & 0x1f));\n                            uVar11 = uVar4 >> 8 & 0xff;\n                            uVar1 = uVar11;\n                            uVar7 = *(puStack40[0x14] +\n                                     ((((1 << (cVar3 + uVar1 & 0x1f)) - 1U & uStack56) >> (uVar1 & 0x1f)) +\n                                     (uVar4 >> 0x10)) * 4);\n                            puVar13 = puVar8;\n                        } while (puVar8 < (uVar7 >> 8 & 0xff) + uVar11);\n                    }\n                    uVar4 = uVar4 >> 8 & 0xff;\n                    uVar11 = uStack56 >> (uVar4 & 0x1f);\n                    puVar8 = puVar8 + -uVar4;\n                    puStack40[0x6f2] = uVar4;\n                    puVar9 = puStack52;\n                    puVar15 = puStack40;\n                }\n                uVar4 = uVar7 >> 8 & 0xff;\n                puVar15[0x6f2] = puVar15[0x6f2] + uVar4;\n                puVar13 = puVar8 + -uVar4;\n                uVar11 = uVar11 >> (uVar4 & 0x1f);\n                puVar15[0x11] = uVar7 >> 0x10;\n                uStack56 = uVar11;\n                if (uVar7 == '\\0') {\n                    puVar15[1] = 0x3f4d;\n                    break;\n                }\n                if ((uVar7 & 0x20) != 0) {\n                    puVar15[0x6f2] = 0xffffffff;\n                    puVar15[1] = 0x3f3f;\n                    break;\n                }\n                if ((uVar7 & 0x40) != 0) {\n                    param_1[6] = \"invalid literal/length code\";\n                    puVar15[1] = 0x3f51;\n                    break;\n                }\n                puVar15[1] = 0x3f49;\n                puVar15[0x13] = uVar7 & 0xf;\ncode_r0x00410173:\n                puVar8 = puVar15[0x13];\n                if (puVar8 != NULL) {\n                    if (puVar13 < puVar8) {\n                        do {\n                            if (puVar12 == NULL) goto code_r0x0040f5df;\n                            uVar1 = *puVar9;\n                            puVar9 = puVar9 + 1;\n                            puVar8 = puVar15[0x13];\n                            uVar11 = uVar11 + (uVar1 << (puVar13 & 0x1f));\n                            puVar13 = puVar13 + 8;\n                            puVar12 = puVar12 + -1;\n                            uStack56 = uVar11;\n                            puStack52 = puVar9;\n                        } while (puVar13 < puVar8);\n                    }\n                    puVar13 = puVar13 + -puVar8;\n                    uVar4 = (1 << (puVar8 & 0x1f)) - 1U & uVar11;\n                    uVar11 = uVar11 >> (puVar8 & 0x1f);\n                    puVar15[0x11] = puVar15[0x11] + uVar4;\n                    puVar15[0x6f2] = puVar15[0x6f2] + puVar8;\n                    uStack56 = uVar11;\n                }\n                puVar15[0x6f3] = puVar15[0x11];\n                puVar15[1] = 0x3f4a;\ncode_r0x004101d0:\n                puStack4 = puVar15[0x15];\n                uVar4 = *(puVar15[0x15] + ((1 << (puVar15[0x17] & 0x1f)) - 1U & uVar11) * 4);\n                if (puVar13 < (uVar4 >> 8 & 0xff)) {\n                    do {\n                        if (puVar12 == NULL) goto code_r0x0040f5df;\n                        uVar1 = *puVar9;\n                        puVar9 = puVar9 + 1;\n                        uVar11 = uVar11 + (uVar1 << (puVar13 & 0x1f));\n                        puVar13 = puVar13 + 8;\n                        puVar12 = puVar12 + -1;\n                        uVar4 = *(puVar15[0x15] + ((1 << (puVar15[0x17] & 0x1f)) - 1U & uVar11) * 4);\n                        uStack56 = uVar11;\n                        puStack52 = puVar9;\n                    } while (puVar13 < (uVar4 >> 8 & 0xff));\n                }\n                uVar7 = uVar4;\n                if ((uVar4 & 0xf0) == 0) {\n                    uStack20 = uVar4 >> 8;\n                    uVar1 = uVar4 >> 8;\n                    uVar7 = *(puStack4 +\n                             ((((1 << (uVar4 + uVar1 & 0x1f)) - 1U & uStack56) >> (uVar1 & 0x1f)) + (uVar4 >> 0x10)) * 4\n                             );\n                    puVar9 = puVar13;\n                    uStack16 = uVar4;\n                    if (puVar13 < (uVar7 >> 8 & 0xff) + (uStack20 & 0xff)) {\n                        do {\n                            puVar13 = puVar9;\n                            if (puVar12 == NULL) goto code_r0x0040f5df;\n                            puVar13 = puVar9 + 8;\n                            puVar12 = puVar12 + -1;\n                            uVar1 = *puStack52;\n                            puStack52 = puStack52 + 1;\n                            uStack56 = uStack56 + (uVar1 << (puVar9 & 0x1f));\n                            uVar11 = uVar4 >> 8 & 0xff;\n                            uVar1 = uVar11;\n                            uVar7 = *(puStack40[0x15] +\n                                     ((((1 << (uVar4 + uVar1 & 0x1f)) - 1U & uStack56) >> (uVar1 & 0x1f)) +\n                                     (uVar4 >> 0x10)) * 4);\n                            puVar9 = puVar13;\n                        } while (puVar13 < (uVar7 >> 8 & 0xff) + uVar11);\n                    }\n                    uVar4 = uVar4 >> 8 & 0xff;\n                    puVar13 = puVar13 + -uVar4;\n                    uVar11 = uStack56 >> (uVar4 & 0x1f);\n                    puStack40[0x6f2] = puStack40[0x6f2] + uVar4;\n                    puVar15 = puStack40;\n                }\n                uVar4 = uVar7 >> 8 & 0xff;\n                puVar15[0x6f2] = puVar15[0x6f2] + uVar4;\n                puVar13 = puVar13 + -uVar4;\n                uVar11 = uVar11 >> (uVar4 & 0x1f);\n                puVar9 = puStack52;\n                uStack56 = uVar11;\n                if ((uVar7 & 0x40) != 0) {\n                    param_1[6] = \"invalid distance code\";\n                    puVar15[1] = 0x3f51;\n                    break;\n                }\n                puVar15[1] = 0x3f4b;\n                puVar15[0x12] = uVar7 >> 0x10;\n                puVar15[0x13] = uVar7 & 0xf;\ncode_r0x00410349:\n                puVar8 = puVar15[0x13];\n                if (puVar8 != NULL) {\n                    if (puVar13 < puVar8) {\n                        do {\n                            if (puVar12 == NULL) goto code_r0x0040f5df;\n                            uVar1 = *puVar9;\n                            puVar9 = puVar9 + 1;\n                            puVar8 = puVar15[0x13];\n                            uVar11 = uVar11 + (uVar1 << (puVar13 & 0x1f));\n                            puVar13 = puVar13 + 8;\n                            puVar12 = puVar12 + -1;\n                            uStack56 = uVar11;\n                            puStack52 = puVar9;\n                        } while (puVar13 < puVar8);\n                    }\n                    puVar13 = puVar13 + -puVar8;\n                    uVar4 = (1 << (puVar8 & 0x1f)) - 1U & uVar11;\n                    uVar11 = uVar11 >> (puVar8 & 0x1f);\n                    puVar15[0x12] = puVar15[0x12] + uVar4;\n                    puVar15[0x6f2] = puVar15[0x6f2] + puVar8;\n                    uStack56 = uVar11;\n                }\n                puVar15[1] = 0x3f4c;\ncode_r0x0041039b:\n                if (puStack48 != NULL) {\n                    uVar4 = puVar15[0x12];\n                    if (puStack32 - puStack48 < uVar4) {\n                        puVar8 = uVar4 - (puStack32 - puStack48);\n                        if ((puVar15[0xc] <= puVar8 && puVar8 != puVar15[0xc]) && (puVar15[0x6f1] != 0)) {\n                            param_1[6] = \"invalid distance too far back\";\n                            puVar15[1] = 0x3f51;\n                            break;\n                        }\n                        if (puVar15[0xd] < puVar8) {\n                            puVar8 = puVar8 + -puVar15[0xd];\n                            uStack16 = (puVar15[0xe] + puVar15[0xb]) - puVar8;\n                        }\n                        else {\n                            uStack16 = (puVar15[0xe] - puVar8) + puVar15[0xd];\n                        }\n                        puVar9 = puVar15[0x11];\n                        if (puVar9 < puVar8) goto code_r0x00410410;\n                    }\n                    else {\n                        uStack16 = puStack36 - uVar4;\n                        puVar9 = puVar15[0x11];\ncode_r0x00410410:\n                        puVar8 = puVar9;\n                    }\n                    if (puStack48 < puVar8) {\n                        puVar8 = puStack48;\n                    }\n                    puStack48 = puStack48 + -puVar8;\n                    puVar15[0x11] = puVar9 - puVar8;\n                    iVar5 = uStack16 - puStack36;\n                    do {\n                        *puStack36 = puStack36[iVar5];\n                        puStack36 = puStack36 + 1;\n                        puVar8 = puVar8 + -1;\n                    } while (puVar8 != NULL);\n                    puVar9 = puStack52;\n                    puVar15 = puStack40;\n                    if (puStack40[0x11] == 0) {\n                        puStack40[1] = 0x3f48;\n                    }\n                    break;\n                }\n                goto code_r0x0040f5df;\n            case 0x410173:\n                goto code_r0x00410173;\n            case 0x4101d0:\n                goto code_r0x004101d0;\n            case 0x410349:\n                goto code_r0x00410349;\n            case 0x41039b:\n                goto code_r0x0041039b;\n            case 0x41045a:\n                if (puStack48 == NULL) goto code_r0x0040f5df;\n                puStack48 = puStack48 + -1;\n                *puStack36 = *(puVar15 + 0x11);\n                puVar15[1] = 0x3f48;\n                puVar9 = puStack52;\n                puStack36 = puStack36 + 1;\n                break;\n            case 0x410486:\n                if (puVar15[3] != 0) {\n                    for (; puVar13 < 0x20; puVar13 = puVar13 + 8) {\n                        if (puVar12 == NULL) goto code_r0x0040f5df;\n                        uVar1 = *puVar9;\n                        puVar9 = puVar9 + 1;\n                        uVar11 = uVar11 + (uVar1 << (puVar13 & 0x1f));\n                        puVar12 = puVar12 + -1;\n                        uStack56 = uVar11;\n                        puStack52 = puVar9;\n                    }\n                    puStack32 = puStack32 - puStack48;\n                    param_1[5] = param_1[5] + puStack32;\n                    puVar15[8] = puVar15[8] + puStack32;\n                    if (((*(puVar15 + 3) & 4) != 0) && (puStack32 != NULL)) {\n                        if (puVar15[5] == 0) {\n                            puVar8 = fcn.00411490(puVar15[7], puStack36 - puStack32, puStack32);\n                        }\n                        else {\n                            puVar8 = fcn.00410c80();\n                        }\n                        puVar15[7] = puVar8;\n                        param_1[0xc] = puVar8;\n                        uVar11 = uStack56;\n                    }\n                    puStack32 = puStack48;\n                    if ((*(puVar15 + 3) & 4) != 0) {\n                        uVar4 = uVar11;\n                        if (puVar15[5] == 0) {\n                            uVar4 = ((uVar11 & 0xff00) + uVar11 * 0x10000) * 0x100 + (uVar11 >> 8 & 0xff00) +\n                                    (uVar11 >> 0x18);\n                        }\n                        if (uVar4 != puVar15[7]) {\n                            param_1[6] = \"incorrect data check\";\n                            puVar15[1] = 0x3f51;\n                            break;\n                        }\n                    }\n                    uVar11 = 0;\n                    puVar13 = NULL;\n                    uStack56 = 0;\n                }\n                puVar15[1] = 0x3f4f;\n            case 0x41056c:\n                if ((puVar15[3] != 0) && (puVar15[5] != 0)) {\n                    for (; puVar13 < 0x20; puVar13 = puVar13 + 8) {\n                        if (puVar12 == NULL) goto code_r0x0040f5df;\n                        uVar1 = *puVar9;\n                        puVar9 = puVar9 + 1;\n                        uVar11 = uVar11 + (uVar1 << (puVar13 & 0x1f));\n                        puVar12 = puVar12 + -1;\n                        uStack56 = uVar11;\n                        puStack52 = puVar9;\n                    }\n                    if (uVar11 != puVar15[8]) {\n                        param_1[6] = \"incorrect length check\";\n                        puVar15[1] = 0x3f51;\n                        break;\n                    }\n                    puVar13 = NULL;\n                    uStack56 = 0;\n                }\n                puVar15[1] = 0x3f50;\ncode_r0x004105f5:\n                iStack28 = 1;\n                goto code_r0x0040f5df;\n            case 0x4105f5:\n                goto code_r0x004105f5;\n            case 0x410602:\n                iStack28 = -3;\n                goto code_r0x0040f5df;\n            }\ncode_r0x0040fa41:\n            uVar4 = puVar15[1] - 0x3f34;\n        } while (uVar4 < 0x1f);\n    }\n    return -2;\n}\n",
        "token_count": 14419
    },
    "004107a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.004107a0(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    \n    if ((((param_1 != 0) && (*(param_1 + 0x20) != 0)) && (*(param_1 + 0x24) != NULL)) &&\n       (((piVar1 = *(param_1 + 0x1c),  piVar1 != NULL && (*piVar1 == param_1)) &&\n        ((0x3f33 < piVar1[1] && (piVar1[1] < 0x3f54)))))) {\n        if (piVar1[0xe] != 0) {\n            (**(param_1 + 0x24))(*(param_1 + 0x28), piVar1[0xe]);\n        }\n        (**(param_1 + 0x24))(*(param_1 + 0x28), *(param_1 + 0x1c));\n        *(param_1 + 0x1c) = 0;\n        return 0;\n    }\n    return 0xfffffffe;\n}\n",
        "token_count": 243
    },
    "00410810": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00410810(int32_t param_1, uint param_2, char *param_3, int32_t param_4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (((param_3 == NULL) || (*param_3 != '1')) || (param_4 != 0x38)) {\n        return -6;\n    }\n    if (param_1 == 0) {\n        return -2;\n    }\n    *(param_1 + 0x18) = 0;\n    if (*(param_1 + 0x20) == 0) {\n        *(param_1 + 0x20) = 0x412040;\n        *(param_1 + 0x28) = 0;\n    }\n    if (*(param_1 + 0x24) == 0) {\n        *(param_1 + 0x24) = 0x412060;\n    }\n    piVar1 = (**(param_1 + 0x20))(*(param_1 + 0x28), 1, 0x1bd0);\n    if (piVar1 == NULL) {\n        return -4;\n    }\n    *(param_1 + 0x1c) = piVar1;\n    *piVar1 = param_1;\n    piVar1[0xe] = 0;\n    piVar1[1] = 0x3f34;\n    iVar2 = fcn.00410950(param_1, param_2);\n    if (iVar2 != 0) {\n        (**(param_1 + 0x24))(*(param_1 + 0x28), piVar1);\n        *(param_1 + 0x1c) = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 397
    },
    "004108f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.004108f0(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    \n    if ((((param_1 == 0) || (*(param_1 + 0x20) == 0)) || (*(param_1 + 0x24) == 0)) ||\n       (((piVar2 = *(param_1 + 0x1c),  piVar2 == NULL || (*piVar2 != param_1)) ||\n        ((piVar2[1] < 0x3f34 || (0x3f53 < piVar2[1])))))) {\n        return 0xfffffffe;\n    }\n    piVar2[0xb] = 0;\n    piVar2[0xc] = 0;\n    piVar2[0xd] = 0;\n    if ((((param_1 != 0) && (*(param_1 + 0x20) != 0)) &&\n        ((*(param_1 + 0x24) != 0 &&\n         (((piVar2 = *(param_1 + 0x1c),  piVar2 != NULL && (*piVar2 == param_1)) && (0x3f33 < piVar2[1])))))) &&\n       (piVar2[1] < 0x3f54)) {\n        piVar2[8] = 0;\n        *(param_1 + 0x14) = 0;\n        *(param_1 + 8) = 0;\n        *(param_1 + 0x18) = 0;\n        if (piVar2[3] != 0) {\n            *(param_1 + 0x30) = piVar2[3] & 1;\n        }\n        piVar1 = piVar2 + 0x14d;\n        piVar2[1] = 0x3f34;\n        piVar2[0x1c] = piVar1;\n        piVar2[0x15] = piVar1;\n        piVar2[0x14] = piVar1;\n        piVar2[2] = 0;\n        piVar2[4] = 0;\n        piVar2[6] = 0x8000;\n        piVar2[9] = 0;\n        piVar2[0xf] = 0;\n        piVar2[0x10] = 0;\n        piVar2[0x6f1] = 1;\n        piVar2[0x6f2] = -1;\n        return 0;\n    }\n    return 0xfffffffe;\n}\n",
        "token_count": 577
    },
    "00410950": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00410950(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (((((param_1 == 0) || (*(param_1 + 0x20) == 0)) || (*(param_1 + 0x24) == NULL)) ||\n        ((piVar1 = *(param_1 + 0x1c),  piVar1 == NULL || (*piVar1 != param_1)))) ||\n       ((piVar1[1] < 0x3f34 || (0x3f53 < piVar1[1])))) {\n        return 0xfffffffe;\n    }\n    if (param_2 < 0) {\n        iVar3 = 0;\n        param_2 = -param_2;\n    }\n    else {\n        iVar3 = (param_2 >> 4) + 5;\n        if (param_2 < 0x30) {\n            param_2 = param_2 & 0xf;\n        }\n    }\n    if ((param_2 != 0) && ((param_2 < 8 || (0xf < param_2)))) {\n        return 0xfffffffe;\n    }\n    if ((piVar1[0xe] != 0) && (piVar1[10] != param_2)) {\n        (**(param_1 + 0x24))(*(param_1 + 0x28), piVar1[0xe]);\n        piVar1[0xe] = 0;\n    }\n    piVar1[3] = iVar3;\n    piVar1[10] = param_2;\n    uVar2 = fcn.004108f0(param_1);\n    return uVar2;\n}\n",
        "token_count": 394
    },
    "00410b90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00410b90(int32_t param_1, int32_t param_2, uint32_t param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    iVar1 = *(param_1 + 0x1c);\n    if (*(iVar1 + 0x38) == 0) {\n        iVar2 = (**(param_1 + 0x20))(*(param_1 + 0x28), 1 << (*(iVar1 + 0x28) & 0x1f), 1);\n        *(iVar1 + 0x38) = iVar2;\n        if (iVar2 == 0) {\n            return 1;\n        }\n    }\n    if (*(iVar1 + 0x2c) == 0) {\n        *(iVar1 + 0x2c) = 1 << (*(iVar1 + 0x28) & 0x1f);\n        *(iVar1 + 0x34) = 0;\n        *(iVar1 + 0x30) = 0;\n    }\n    uVar3 = *(iVar1 + 0x2c);\n    if (uVar3 <= param_3) {\n        sub.MSVCRT.dll_memcpy(*(iVar1 + 0x38), param_2 - uVar3, uVar3);\n        *(iVar1 + 0x30) = *(iVar1 + 0x2c);\n        *(iVar1 + 0x34) = 0;\n        return 0;\n    }\n    uVar3 = uVar3 - *(iVar1 + 0x34);\n    if (param_3 < uVar3) {\n        uVar3 = param_3;\n    }\n    sub.MSVCRT.dll_memcpy(*(iVar1 + 0x38) + *(iVar1 + 0x34), param_2 - param_3, uVar3);\n    iVar2 = param_3 - uVar3;\n    if (iVar2 != 0) {\n        sub.MSVCRT.dll_memcpy(*(iVar1 + 0x38), param_2 - iVar2, iVar2);\n        *(iVar1 + 0x34) = iVar2;\n        *(iVar1 + 0x30) = *(iVar1 + 0x2c);\n        return 0;\n    }\n    *(iVar1 + 0x34) = *(iVar1 + 0x34) + uVar3;\n    if (*(iVar1 + 0x34) == *(iVar1 + 0x2c)) {\n        *(iVar1 + 0x34) = 0;\n    }\n    if (*(iVar1 + 0x30) < *(iVar1 + 0x2c)) {\n        *(iVar1 + 0x30) = *(iVar1 + 0x30) + uVar3;\n    }\n    return 0;\n}\n",
        "token_count": 632
    },
    "00411490": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.00411490(uint32_t param_1, uint8_t *param_2, uint32_t param_3)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    int32_t iVar16;\n    int32_t iVar17;\n    int32_t iVar18;\n    int32_t iVar19;\n    uint32_t uVar20;\n    \n    uVar3 = param_1 & 0xffff;\n    param_1 = param_1 >> 0x10;\n    if (param_3 == 1) {\n        uVar3 = uVar3 + *param_2;\n        if (0xfff0 < uVar3) {\n            uVar3 = uVar3 - 0xfff1;\n        }\n        param_1 = param_1 + uVar3;\n        if (0xfff0 < param_1) {\n            param_1 = param_1 - 0xfff1;\n        }\n        return param_1 << 0x10 | uVar3;\n    }\n    if (param_2 == NULL) {\n        return 1;\n    }\n    if (param_3 < 0x10) {\n        if (param_3 != 0) {\n            do {\n                uVar2 = *param_2;\n                param_2 = param_2 + 1;\n                uVar3 = uVar3 + uVar2;\n                param_1 = param_1 + uVar3;\n                param_3 = param_3 - 1;\n            } while (param_3 != 0);\n        }\n        if (0xfff0 < uVar3) {\n            uVar3 = uVar3 - 0xfff1;\n        }\n        return ((param_1 / 0xfff1) * 0xf + param_1) * 0x10000 | uVar3;\n    }\n    if (0x15af < param_3) {\n        uVar20 = param_3 / 0x15b0;\n        do {\n            param_3 = param_3 - 0x15b0;\n            iVar19 = 0x15b;\n            do {\n                iVar4 = uVar3 + *param_2;\n                iVar5 = iVar4 + param_2[1];\n                iVar6 = iVar5 + param_2[2];\n                iVar7 = iVar6 + param_2[3];\n                iVar8 = iVar7 + param_2[4];\n                iVar9 = iVar8 + param_2[5];\n                iVar10 = iVar9 + param_2[6];\n                iVar11 = iVar10 + param_2[7];\n                iVar12 = iVar11 + param_2[8];\n                iVar13 = iVar12 + param_2[9];\n                iVar14 = iVar13 + param_2[10];\n                iVar15 = iVar14 + param_2[0xb];\n                iVar16 = iVar15 + param_2[0xc];\n                iVar17 = iVar16 + param_2[0xd];\n                iVar18 = iVar17 + param_2[0xe];\n                puVar1 = param_2 + 0xf;\n                param_2 = param_2 + 0x10;\n                uVar3 = iVar18 + *puVar1;\n                param_1 = param_1 + iVar4 + iVar5 + iVar6 + iVar7 + iVar8 + iVar9 + iVar10 + iVar11 + iVar12 + iVar13 +\n                          iVar14 + iVar15 + iVar16 + iVar17 + iVar18 + uVar3;\n                iVar19 = iVar19 + -1;\n            } while (iVar19 != 0);\n            uVar3 = uVar3 % 0xfff1;\n            param_1 = param_1 % 0xfff1;\n            uVar20 = uVar20 - 1;\n        } while (uVar20 != 0);\n    }\n    if (param_3 != 0) {\n        if (0xf < param_3) {\n            uVar20 = param_3 >> 4;\n            do {\n                param_3 = param_3 - 0x10;\n                iVar19 = uVar3 + *param_2;\n                iVar4 = iVar19 + param_2[1];\n                iVar5 = iVar4 + param_2[2];\n                iVar6 = iVar5 + param_2[3];\n                iVar7 = iVar6 + param_2[4];\n                iVar8 = iVar7 + param_2[5];\n                iVar9 = iVar8 + param_2[6];\n                iVar10 = iVar9 + param_2[7];\n                iVar11 = iVar10 + param_2[8];\n                iVar12 = iVar11 + param_2[9];\n                iVar13 = iVar12 + param_2[10];\n                iVar14 = iVar13 + param_2[0xb];\n                iVar15 = iVar14 + param_2[0xc];\n                iVar16 = iVar15 + param_2[0xd];\n                iVar17 = iVar16 + param_2[0xe];\n                puVar1 = param_2 + 0xf;\n                param_2 = param_2 + 0x10;\n                uVar3 = iVar17 + *puVar1;\n                param_1 = param_1 + iVar19 + iVar4 + iVar5 + iVar6 + iVar7 + iVar8 + iVar9 + iVar10 + iVar11 + iVar12 +\n                          iVar13 + iVar14 + iVar15 + iVar16 + iVar17 + uVar3;\n                uVar20 = uVar20 - 1;\n            } while (uVar20 != 0);\n        }\n        for (; param_3 != 0; param_3 = param_3 - 1) {\n            uVar2 = *param_2;\n            param_2 = param_2 + 1;\n            uVar3 = uVar3 + uVar2;\n            param_1 = param_1 + uVar3;\n        }\n        uVar3 = uVar3 % 0xfff1;\n        param_1 = param_1 % 0xfff1;\n    }\n    return param_1 << 0x10 | uVar3;\n}\n",
        "token_count": 1420
    },
    "004117c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.004117c0(int32_t param_1, int32_t param_2, uint32_t param_3, int32_t *param_4, uint32_t *param_5, \n                 uint16_t *param_6)\n\n{\n    int16_t *piVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    uint8_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    char cVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    uint16_t *puVar13;\n    bool bVar14;\n    bool bVar15;\n    uint uStack124;\n    uint32_t uStack120;\n    uint32_t uStack116;\n    int32_t iStack112;\n    uint32_t uStack108;\n    uint32_t uStack104;\n    uint16_t *puStack100;\n    uint16_t *puStack96;\n    uint32_t uStack92;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint32_t uStack80;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint16_t auStack32 [16];\n    \n    uStack64 = 0;\n    uStack60 = 0;\n    uStack56 = 0;\n    uStack52 = 0;\n    uStack48 = 0;\n    uStack44 = 0;\n    uStack40 = 0;\n    uStack36 = 0;\n    if (param_3 != 0) {\n        uVar4 = 0;\n        do {\n            iVar7 = uVar4 * 2;\n            uVar4 = uVar4 + 1;\n            piVar1 = &uStack64 + *(param_2 + iVar7) * 2;\n            *piVar1 = *piVar1 + 1;\n        } while (uVar4 < param_3);\n    }\n    uVar4 = 0xf;\n    do {\n        if (*(&uStack64 + uVar4 * 2) != 0) break;\n        uVar4 = uVar4 - 1;\n    } while (uVar4 != 0);\n    uStack116 = *param_5;\n    if (uVar4 < *param_5) {\n        uStack116 = uVar4;\n    }\n    if (uVar4 == 0) {\n        **param_4 = 0x140;\n        *param_4 = *param_4 + 4;\n        **param_4 = 0x140;\n        *param_4 = *param_4 + 4;\n        *param_5 = 1;\n        return 0;\n    }\n    uVar10 = 1;\n    uStack88 = 1;\n    if (1 < uVar4) {\n        do {\n            uStack88 = uVar10;\n            if (*(&uStack64 + uVar10 * 2) != 0) break;\n            uVar10 = uVar10 + 1;\n            uStack88 = uVar10;\n        } while (uVar10 < uVar4);\n    }\n    if (uStack116 < uStack88) {\n        uStack116 = uStack88;\n    }\n    iVar7 = 1;\n    uVar10 = 1;\n    do {\n        iVar7 = iVar7 * 2 - *(&uStack64 + uVar10 * 2);\n        if (iVar7 < 0) {\n            return 0xffffffff;\n        }\n        uVar10 = uVar10 + 1;\n    } while (uVar10 < 0x10);\n    if ((0 < iVar7) && ((param_1 == 0 || (uVar4 != 1)))) {\n        return 0xffffffff;\n    }\n    uVar10 = 2;\n    auStack32[1] = 0;\n    do {\n        *(auStack32 + uVar10 + 2) = *(auStack32 + uVar10) + *(&uStack64 + uVar10);\n        uVar10 = uVar10 + 2;\n    } while (uVar10 < 0x1e);\n    uVar10 = 0;\n    if (param_3 != 0) {\n        do {\n            uVar3 = *(param_2 + uVar10 * 2);\n            if (uVar3 != 0) {\n                param_6[auStack32[uVar3]] = uVar10;\n                auStack32[*(param_2 + uVar10 * 2)] = auStack32[*(param_2 + uVar10 * 2)] + 1;\n            }\n            uVar10 = uVar10 + 1;\n        } while (uVar10 < param_3);\n    }\n    if (param_1 == 0) {\n        puStack100 = param_6;\n        puStack96 = param_6;\n        uStack104 = 0x14;\n    }\n    else if (param_1 == 1) {\n        puStack96 = 0x416200;\n        puStack100 = 0x416240;\n        uStack104 = 0x101;\n    }\n    else {\n        puStack96 = 0x416280;\n        puStack100 = 0x4162c0;\n        uStack104 = 0;\n    }\n    uStack108 = 0;\n    uStack120 = 0;\n    uStack80 = 0xffffffff;\n    iStack112 = *param_4;\n    uStack92 = 1 << (uStack116 & 0x1f);\n    uVar10 = uStack92 - 1;\n    uVar11 = uStack88;\n    uStack84 = uStack92;\n    if (param_1 == 1) {\n        if (uStack92 < 0x355) {\ncode_r0x004119f4:\n            do {\n                do {\n                    cVar9 = uVar11;\n                    uVar6 = uStack120;\n                    uVar2 = cVar9 - uVar6;\n                    uVar8 = *param_6;\n                    if (uVar8 + 1 < uStack104) {\n                        uStack124 = uVar2 << 8;\n                        uStack124 = uStack124 | *param_6 << 0x10;\n                    }\n                    else {\n                        if (uVar8 < uStack104) {\n                            uStack124 = CONCAT31(uVar2, 0x60);\n                            uVar3 = 0;\n                        }\n                        else {\n                            uStack124._0_2_ = CONCAT11(uVar2, *(puStack100 + (uVar8 - uStack104)));\n                            uVar3 = puStack96[uVar8 - uStack104];\n                        }\n                        uStack124 = CONCAT22(uVar3, uStack124);\n                    }\n                    iVar7 = 1 << (cVar9 - uVar6 & 0x1f);\n                    puVar5 = iStack112 + ((uStack108 >> (uVar6 & 0x1f)) + uStack92) * 4;\n                    uVar8 = uStack92;\n                    do {\n                        puVar5 = puVar5 + -iVar7;\n                        *puVar5 = uStack124;\n                        uVar8 = uVar8 - iVar7;\n                    } while (uVar8 != 0);\n                    for (uVar8 = 1 << (cVar9 - 1U & 0x1f); (uStack108 & uVar8) != 0; uVar8 = uVar8 >> 1) {\n                    }\n                    if (uVar8 == 0) {\n                        uStack108 = 0;\n                    }\n                    else {\n                        uStack108 = (uVar8 - 1 & uStack108) + uVar8;\n                    }\n                    param_6 = param_6 + 1;\n                    piVar1 = &uStack64 + uVar11 * 2;\n                    *piVar1 = *piVar1 + -1;\n                    if (*piVar1 == 0) {\n                        if (uVar11 == uVar4) {\n                            if (uStack108 != 0) {\n                                uStack124._0_2_ = CONCAT11(cVar9 - uVar6, 0x40);\n                                uStack124 = uStack124;\n                                *(iStack112 + uStack108 * 4) = uStack124;\n                            }\n                            *param_4 = *param_4 + uStack84 * 4;\n                            *param_5 = uStack116;\n                            return 0;\n                        }\n                        uVar11 = *(param_2 + *param_6 * 2);\n                        uStack88 = uVar11;\n                    }\n                } while ((uVar11 <= uStack116) || (uVar8 = uVar10 & uStack108,  uVar8 == uStack80));\n                if (uStack120 == 0) {\n                    uStack120 = uStack116;\n                }\n                iVar12 = uVar11 - uStack120;\n                uVar11 = uStack120 + iVar12;\n                iStack112 = iStack112 + uStack92 * 4;\n                iVar7 = 1 << (iVar12 & 0x1f);\n                if (uVar11 < uVar4) {\n                    puVar13 = &uStack64 + uVar11 * 2;\n                    do {\n                        uVar3 = *puVar13;\n                        if (iVar7 - uVar3 < 1) break;\n                        uVar11 = uVar11 + 1;\n                        iVar12 = iVar12 + 1;\n                        puVar13 = puVar13 + 1;\n                        iVar7 = (iVar7 - uVar3) * 2;\n                    } while (uVar11 < uVar4);\n                }\n                uStack92 = 1 << (iVar12 & 0x1f);\n                uStack84 = uStack84 + uStack92;\n                if (param_1 == 1) {\n                    bVar14 = uStack84 < 0x354;\n                    bVar15 = uStack84 == 0x354;\ncode_r0x00411b8c:\n                    if (!bVar14 && !bVar15) {\n                        return 1;\n                    }\n                }\n                else if (param_1 == 2) {\n                    bVar14 = uStack84 < 0x250;\n                    bVar15 = uStack84 == 0x250;\n                    goto code_r0x00411b8c;\n                }\n                *(*param_4 + uVar8 * 4) = iVar12;\n                *(*param_4 + 1 + uVar8 * 4) = uStack116;\n                *(*param_4 + 2 + uVar8 * 4) = iStack112 - *param_4 >> 2;\n                uVar11 = uStack88;\n                uStack80 = uVar8;\n            } while( true );\n        }\n    }\n    else if ((param_1 != 2) || (uStack92 < 0x251)) goto code_r0x004119f4;\n    return 1;\n}\n",
        "token_count": 2491
    },
    "00411c20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00411c20(uint8_t **param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint8_t *puVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint uVar10;\n    uint uVar11;\n    uint8_t *puVar12;\n    uint8_t *puVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    int32_t iVar18;\n    char cVar19;\n    uint32_t uVar20;\n    int32_t iVar21;\n    uint8_t *puVar22;\n    uint8_t *puVar23;\n    uint8_t *puVar24;\n    uint32_t uVar25;\n    uint8_t *puVar26;\n    uint8_t *puStack56;\n    \n    puVar2 = param_1[7];\n    puStack56 = *param_1;\n    puVar3 = param_1[3];\n    puVar12 = param_1[1] + -5 + puStack56;\n    puVar4 = param_1[4];\n    puVar13 = puVar4 + -0x101 + puVar3;\n    uVar20 = *(puVar2 + 0x40);\n    iVar21 = *(puVar2 + 0x2c);\n    uVar5 = *(puVar2 + 0x30);\n    uVar6 = *(puVar2 + 0x34);\n    puVar7 = *(puVar2 + 0x38);\n    iVar8 = *(puVar2 + 0x50);\n    iVar9 = *(puVar2 + 0x54);\n    uVar10 = *(puVar2 + 0x58);\n    uVar11 = *(puVar2 + 0x5c);\n    uVar25 = *(puVar2 + 0x3c);\n    puVar22 = puVar3;\ncode_r0x00411cb0:\n    if (uVar20 < 0xf) {\n        uVar1 = *puStack56;\n        puVar23 = puStack56 + 1;\n        puStack56 = puStack56 + 2;\n        uVar25 = uVar25 + (uVar1 << (uVar20 & 0x1f)) + (*puVar23 << (uVar20 + 8 & 0x1f));\n        uVar20 = uVar20 + 0x10;\n    }\n    uVar16 = *(iVar8 + ((1 << (uVar10 & 0x1f)) - 1U & uVar25) * 4);\n    uVar15 = uVar16 >> 8 & 0xff;\n    uVar25 = uVar25 >> (uVar15 & 0x1f);\n    uVar20 = uVar20 - uVar15;\n    cVar19 = uVar16;\n    while (cVar19 != '\\0') {\n        puVar23 = puVar22;\n        if ((uVar16 & 0x10) != 0) {\n            uVar15 = uVar16 >> 0x10;\n            uVar16 = uVar16 & 0xf;\n            if (uVar16 != 0) {\n                if (uVar20 < uVar16) {\n                    uVar25 = uVar25 + (*puStack56 << (uVar20 & 0x1f));\n                    uVar20 = uVar20 + 8;\n                    puStack56 = puStack56 + 1;\n                }\n                uVar14 = (1 << uVar16) - 1U & uVar25;\n                uVar25 = uVar25 >> uVar16;\n                uVar15 = uVar15 + uVar14;\n                uVar20 = uVar20 - uVar16;\n            }\n            if (uVar20 < 0xf) {\n                uVar1 = *puStack56;\n                puVar26 = puStack56 + 1;\n                puStack56 = puStack56 + 2;\n                uVar25 = uVar25 + (uVar1 << (uVar20 & 0x1f)) + (*puVar26 << (uVar20 + 8 & 0x1f));\n                uVar20 = uVar20 + 0x10;\n            }\n            uVar16 = *(iVar9 + ((1 << (uVar11 & 0x1f)) - 1U & uVar25) * 4);\n            uVar14 = uVar16 >> 8 & 0xff;\n            uVar20 = uVar20 - uVar14;\n            uVar25 = uVar25 >> (uVar14 & 0x1f);\n            goto joined_r0x00411db3;\n        }\n        if ((uVar16 & 0x40) != 0) {\n            if ((uVar16 & 0x20) == 0) {\n                param_1[6] = \"invalid literal/length code\";\n                goto code_r0x00411fe2;\n            }\n            *(puVar2 + 4) = 0x3f3f;\n            goto code_r0x00411fe9;\n        }\n        uVar16 = *(iVar8 + (((1 << (uVar16 & 0x1f)) - 1U & uVar25) + (uVar16 >> 0x10)) * 4);\n        uVar15 = uVar16 >> 8 & 0xff;\n        uVar25 = uVar25 >> (uVar15 & 0x1f);\n        uVar20 = uVar20 - uVar15;\n        cVar19 = uVar16;\n    }\n    *puVar22 = uVar16 >> 0x10;\n    puVar23 = puVar22 + 1;\n    goto code_r0x00411f3b;\njoined_r0x00411db3:\n    if ((uVar16 & 0x10) != 0) goto code_r0x00411df2;\n    if ((uVar16 & 0x40) != 0) {\n        param_1[6] = \"invalid distance code\";\n        goto code_r0x00411fe2;\n    }\n    uVar16 = *(iVar9 + (((1 << (uVar16 & 0x1f)) - 1U & uVar25) + (uVar16 >> 0x10)) * 4);\n    uVar14 = uVar16 >> 8 & 0xff;\n    uVar20 = uVar20 - uVar14;\n    uVar25 = uVar25 >> (uVar14 & 0x1f);\n    goto joined_r0x00411db3;\ncode_r0x00411df2:\n    uVar17 = uVar16 & 0xf;\n    uVar14 = uVar20;\n    puVar26 = puStack56;\n    if (uVar20 < uVar17) {\n        uVar14 = uVar20 + 8;\n        uVar25 = uVar25 + (*puStack56 << (uVar20 & 0x1f));\n        puVar26 = puStack56 + 1;\n        if (uVar14 < uVar17) {\n            uVar25 = uVar25 + (puStack56[1] << (uVar14 & 0x1f));\n            uVar14 = uVar20 + 0x10;\n            puVar26 = puStack56 + 2;\n        }\n    }\n    puStack56 = puVar26;\n    uVar20 = uVar14 - uVar17;\n    uVar14 = (1 << uVar17) - 1U & uVar25;\n    uVar25 = uVar25 >> uVar17;\n    uVar14 = (uVar16 >> 0x10) + uVar14;\n    if (uVar14 <= puVar22 - (puVar3 + (puVar4 - param_2))) {\n        puVar23 = puVar22 + -uVar14;\n        do {\n            puVar24 = puVar22;\n            puVar26 = puVar23;\n            *puVar24 = *puVar26;\n            uVar15 = uVar15 - 3;\n            puVar24[1] = puVar26[1];\n            puVar24[2] = puVar26[2];\n            puVar22 = puVar24 + 3;\n            puVar23 = puVar26 + 3;\n        } while (2 < uVar15);\n        puVar23 = puVar22;\n        if (uVar15 != 0) {\n            *puVar22 = puVar26[3];\n            puVar23 = puVar24 + 4;\n            if (1 < uVar15) {\n                puVar24[4] = puVar26[4];\n                puVar23 = puVar24 + 5;\n            }\n        }\n        goto code_r0x00411f3b;\n    }\n    uVar16 = uVar14 - (puVar22 - (puVar3 + (puVar4 - param_2)));\n    if ((uVar5 < uVar16) && (*(puVar2 + 0x1bc4) != 0)) {\n        param_1[6] = \"invalid distance too far back\";\ncode_r0x00411fe2:\n        *(puVar2 + 4) = 0x3f51;\ncode_r0x00411fe9:\n        iVar21 = uVar20 - (uVar20 & 0xfffffff8);\n        param_1[1] = puVar12 + (5 - (puStack56 + -(uVar20 >> 3)));\n        param_1[3] = puVar23;\n        param_1[4] = puVar13 + (0x101 - puVar23);\n        *param_1 = puStack56 + -(uVar20 >> 3);\n        *(puVar2 + 0x3c) = uVar25 & (1 << (iVar21 & 0x1f)) - 1U;\n        *(puVar2 + 0x40) = iVar21;\n        return;\n    }\n    if (uVar6 == 0) {\n        puVar26 = puVar7 + (iVar21 - uVar16);\n        if (uVar16 < uVar15) {\n            uVar15 = uVar15 - uVar16;\n            do {\n                uVar1 = *puVar26;\n                puVar26 = puVar26 + 1;\n                *puVar22 = uVar1;\n                puVar22 = puVar22 + 1;\n                uVar16 = uVar16 - 1;\n            } while (uVar16 != 0);\ncode_r0x00411eee:\n            puVar26 = puVar22 + -uVar14;\n        }\n    }\n    else {\n        puVar26 = puVar7 + (uVar6 - uVar16);\n        if (uVar6 < uVar16) {\n            puVar26 = puVar26 + iVar21;\n            uVar16 = uVar16 - uVar6;\n            if (uVar16 < uVar15) {\n                uVar15 = uVar15 - uVar16;\n                iVar18 = puVar26 - puVar22;\n                do {\n                    *puVar22 = puVar22[iVar18];\n                    puVar22 = puVar22 + 1;\n                    uVar16 = uVar16 - 1;\n                } while (uVar16 != 0);\n                puVar26 = puVar7;\n                if (uVar6 < uVar15) {\n                    uVar15 = uVar15 - uVar6;\n                    uVar16 = uVar6;\n                    puVar23 = puVar7;\n                    do {\n                        uVar1 = *puVar23;\n                        puVar23 = puVar23 + 1;\n                        *puVar22 = uVar1;\n                        puVar22 = puVar22 + 1;\n                        uVar16 = uVar16 - 1;\n                    } while (uVar16 != 0);\n                    goto code_r0x00411eee;\n                }\n            }\n        }\n        else if (uVar16 < uVar15) {\n            uVar15 = uVar15 - uVar16;\n            do {\n                uVar1 = *puVar26;\n                puVar26 = puVar26 + 1;\n                *puVar22 = uVar1;\n                puVar22 = puVar22 + 1;\n                uVar16 = uVar16 - 1;\n            } while (uVar16 != 0);\n            goto code_r0x00411eee;\n        }\n    }\n    if (2 < uVar15) {\n        iVar18 = (uVar15 - 3) / 3 + 1;\n        do {\n            uVar15 = uVar15 - 3;\n            *puVar22 = *puVar26;\n            puVar22[1] = puVar26[1];\n            puVar23 = puVar26 + 2;\n            puVar26 = puVar26 + 3;\n            puVar22[2] = *puVar23;\n            puVar22 = puVar22 + 3;\n            iVar18 = iVar18 + -1;\n        } while (iVar18 != 0);\n    }\n    puVar23 = puVar22;\n    if (uVar15 != 0) {\n        *puVar22 = *puVar26;\n        puVar23 = puVar22 + 1;\n        if (1 < uVar15) {\n            *puVar23 = puVar26[1];\n            puVar23 = puVar22 + 2;\n        }\n    }\ncode_r0x00411f3b:\n    if ((puVar12 <= puStack56) || (puVar22 = puVar23,  puVar13 <= puVar23)) goto code_r0x00411fe9;\n    goto code_r0x00411cb0;\n}\n",
        "token_count": 3097
    },
    "00412154": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00412154(int32_t param_1, int32_t param_2, int32_t **param_3, int32_t param_4)\n\n{\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t **ppiVar7;\n    int32_t **ppiVar8;\n    int32_t **ppiVar9;\n    int32_t **ppiVar10;\n    int32_t *piVar11;\n    int32_t unaff_retaddr;\n    int32_t *piVar12;\n    int32_t *piStack8;\n    int32_t **ppiStack4;\n    \n    piVar6 = NULL;\n    if (param_4 != param_1) {\n        if (param_3 != NULL) {\n            piVar11 = *param_3;\n            while (piVar11 != 0xffffffff) {\n                ppiVar10 = param_3 + 1;\n                if (piVar11 == 0xfffffff9) {\n                    piVar11 = *ppiVar10;\n                    ppiStack4 = param_3[2];\n                    iVar2 = *(piVar11 + param_4);\n                    piVar12 = piVar11 + param_1;\n                    ppiVar10 = param_3 + 2 + ppiStack4 + 1;\n                    if (*piVar12 != 0) {\n                        (**0x4186d4)(*piVar12);\n                    }\n                    if (iVar2 != 0) {\n                        iVar5 = (**0x4186bc)(*(iVar2 + -0x14), *(iVar2 + -8), *(iVar2 + -4), *(iVar2 + -0x10), piVar12);\n                        *(iVar5 + -0x18) = *(iVar2 + -0x18);\n                        (**0x4186c8)(iVar2, iVar5, 0);\n                    }\n                    piVar12 = ppiStack4 * 4 + 4;\n                }\n                else if (piVar11 == 0xfffffffa) {\n                    piVar11 = *ppiVar10;\n                    ppiVar10 = param_3 + 6;\n                    iVar2 = *(piVar11 + param_4);\n                    iVar5 = *(piVar11 + param_1);\n                    if (iVar5 != 0) {\n                        (**0x4186dc)(iVar5);\n                    }\n                    if (iVar2 != 0) {\n                        (**0x4186c4)(*(iVar2 + 0x1c), *(iVar2 + 0x20), *(iVar2 + 0x10), piVar11 + param_1, \n                                     *(iVar2 + 0x24));\n                        (**0x4186d0)(*(piVar11 + param_4), *piStack8, 0);\n                    }\ncode_r0x004122c5:\n                    piVar12 = 0x4;\n                }\n                else if (piVar11 == 0xfffffffb) {\n                    piVar11 = *ppiVar10;\n                    ppiVar10 = param_3 + 5;\n                    iVar2 = *(piVar11 + param_4);\n                    iVar5 = *(piVar11 + param_1);\n                    if (iVar5 != 0) {\n                        (**0x4186d8)(iVar5);\n                    }\n                    if (iVar2 != 0) {\n                        (**0x4186c0)(*(iVar2 + 0x28) + -8, piVar11 + param_1, *(iVar2 + 0x18), *(iVar2 + 0x2c));\n                        (**0x4186cc)(*(piVar11 + param_4), *ppiStack4, 0);\n                    }\n                    piVar12 = 0x8;\n                }\n                else {\n                    if (piVar11 == 0xfffffffc) {\n                        piVar11 = *ppiVar10;\n                        ppiVar10 = param_3 + 6;\n                        iVar2 = *(piVar11 + param_4);\n                        piVar12 = piVar11 + param_1;\n                        if (*piVar12 != 0) {\n                            (**0x4186d4)(*piVar12);\n                        }\n                        if (iVar2 != 0) {\n                            uVar4 = (**0x4186bc)(*(iVar2 + -0x14), *(iVar2 + -8), *(iVar2 + -4), *(iVar2 + -0x10), \n                                                 piVar12);\n                            (**0x4186c8)(iVar2, uVar4, 0);\n                        }\n                        goto code_r0x004122c5;\n                    }\n                    if (piVar11 == 0xfffffffd) {\n                        piVar11 = *ppiVar10;\n                        piVar12 = param_3[2];\n                        ppiVar10 = param_3 + 4;\n                        fcn.00412154();\n                    }\n                    else {\n                        if (piVar11 != 0xfffffffe) {\n                            piVar12 = piVar11 + param_1;\n                            iVar2 = *(piVar11 + param_4);\n                            if (*piVar12 != 0) {\n                                fcn.0040e5f0(*piVar12);\n                                *piVar12 = 0;\n                                iVar2 = param_2;\n                            }\n                            if (iVar2 != 0) {\n                                fcn.0040e780(piVar12, iVar2);\n                            }\n                            goto code_r0x004122c5;\n                        }\n                        ppiStack4 = *ppiVar10;\n                        piStack8 = param_3[2];\n                        ppiVar1 = param_3[3];\n                        ppiVar3 = ppiVar1;\n                        ppiVar7 = ppiStack4;\n                        ppiVar10 = param_3 + 5;\n                        piVar11 = piStack8;\n                        if (0 < ppiStack4) {\n                            ppiVar7 = piStack8 + param_1;\n                            ppiVar8 = ppiVar7;\n                            ppiVar9 = ppiStack4;\n                            param_4 = unaff_retaddr;\n                            do {\n                                ppiVar3 = ppiVar8;\n                                fcn.00412154();\n                                ppiVar8 = ppiVar8 + ppiVar1;\n                                ppiVar9 = ppiVar9 + -1;\n                                ppiVar10 = ppiStack4;\n                                piVar11 = piVar6;\n                                unaff_retaddr = param_4;\n                            } while (ppiVar9 != NULL);\n                        }\n                        piVar12 = ppiVar7 * ppiVar3;\n                    }\n                }\n                if (piVar6 < piVar11) {\n                    sub.MSVCRT.dll_memcpy(param_1 + piVar6, piVar6 + param_4, piVar11 - piVar6);\n                }\n                piVar6 = piVar12 + piVar11;\n                param_3 = ppiVar10;\n                piVar11 = *ppiVar10;\n            }\n            if (param_2 <= piVar6) {\n                return;\n            }\n            param_2 = param_2 - piVar6;\n            param_4 = piVar6 + param_4;\n            param_1 = piVar6 + param_1;\n        }\n        sub.MSVCRT.dll_memcpy(param_1, param_4, param_2);\n    }\n    return;\n}\n",
        "token_count": 1625
    },
    "0041242a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041242a(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t arg_ch_00;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t arg_8h_00;\n    uint uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = *arg_ch;\n    do {\n        if (iVar2 == -1) {\n            return in_EAX;\n        }\n        piVar3 = arg_ch + 1;\n        if (iVar2 == -7) {\n            uVar4 = *(*piVar3 + arg_8h);\n            piVar3 = arg_ch + 2 + arg_ch[2] + 4;\ncode_r0x00412514:\n            (**0x4186d4)(uVar4);\n        }\n        else if (iVar2 == -6) {\n            iVar2 = *piVar3;\n            piVar3 = arg_ch + 6;\n            (**0x4186dc)(*(iVar2 + arg_8h));\n        }\n        else if (iVar2 == -5) {\n            iVar2 = *piVar3;\n            piVar3 = arg_ch + 5;\n            (**0x4186d8)(*(iVar2 + arg_8h));\n        }\n        else {\n            if (iVar2 == -4) {\n                iVar2 = *piVar3;\n                piVar3 = arg_ch + 6;\n                uVar4 = *(iVar2 + arg_8h);\n                goto code_r0x00412514;\n            }\n            if (iVar2 == -3) {\n                iVar2 = *piVar3;\n                piVar3 = arg_ch + 4;\n                in_EAX = iVar2 + arg_8h;\n                fcn.0041242a(in_EAX, arg_ch[3]);\n            }\n            else if (iVar2 == -2) {\n                iVar2 = *piVar3;\n                iVar1 = arg_ch[3];\n                arg_ch_00 = arg_ch[4];\n                piVar3 = arg_ch + 5;\n                if (0 < iVar2) {\n                    arg_8h_00 = arg_ch[2] + arg_8h;\n                    do {\n                        in_EAX = arg_8h_00;\n                        fcn.0041242a(arg_8h_00, arg_ch_00);\n                        arg_8h_00 = arg_8h_00 + iVar1;\n                        iVar2 = iVar2 + -1;\n                    } while (iVar2 != 0);\n                }\n            }\n            else if (*(iVar2 + arg_8h) != 0) {\n                in_EAX = *(iVar2 + arg_8h);\n                fcn.0040e5f0(in_EAX);\n            }\n        }\n        iVar2 = *piVar3;\n        arg_ch = piVar3;\n    } while( true );\n}\n",
        "token_count": 665
    },
    "00412722": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "get thread local storage value",
            "set thread local storage value",
            "allocate thread local storage"
        ],
        "decompiled_code": "\nvoid fcn.00412722(void)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t unaff_ESI;\n    int32_t iVar5;\n    \n    if (*0x4186e0 == 0) {\n        *0x418700 = (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x4186e8);\n        *0x4186e0 = 1;\n    }\n    iVar5 = *0x418700;\n    piVar2 = (*_sym.imp.KERNEL32.dll_TlsGetValue)();\n    if (piVar2 == NULL) {\n        piVar2 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x418068, 8, 0x14);\n        if (piVar2 == NULL) {\n            return;\n        }\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x4186e8);\n        if (*0x4186e4 != NULL) {\n            **0x4186e4 = piVar2;\n        }\n        piVar2[1] = *0x4186e4;\n        *0x4186e4 = piVar2;\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4186e8);\n        pcVar1 = _sym.imp.KERNEL32.dll_GetCurrentProcess;\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(piVar2 + 4, 0x100000, 0, 0);\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentThread)(uVar3);\n        uVar3 = (*pcVar1)(uVar3);\n        (*_sym.imp.KERNEL32.dll_DuplicateHandle)(uVar3);\n        (*_sym.imp.KERNEL32.dll_RegisterWaitForSingleObject)(piVar2 + 3, piVar2[4], 0x41281a, piVar2, 0xffffffff, 8);\n        (*_sym.imp.KERNEL32.dll_TlsSetValue)(*0x418700, piVar2);\n    }\n    piVar4 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x418068, 0, 0xc);\n    if (piVar4 != NULL) {\n        piVar4[1] = iVar5;\n        piVar4[2] = unaff_ESI;\n        *piVar4 = piVar2[2];\n        piVar2[2] = piVar4;\n    }\n    return;\n}\n",
        "token_count": 571
    },
    "004011ef": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.004011ef(void)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    bool bVar3;\n    uint8_t *in_stack_00000010;\n    int32_t in_stack_00000014;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uStack64;\n    char *pcStack60;\n    uint uStack56;\n    int32_t *piStack52;\n    uchar *puStack48;\n    int32_t iStack44;\n    uint uStack40;\n    uint32_t uStack36;\n    uint32_t uStack32;\n    uchar *puStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    int32_t *piVar7;\n    \n    iVar1 = 0x10;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    iStack20 = 0x401210;\n    uVar5 = 0;\n    fcn.00405060();\n    iStack20 = uVar5;\n    iStack24 = 0x401218;\n    iStack24 = fcn.00405700();\n    puStack28 = 0x401225;\n    iStack16 = fcn.0040a1e0();\n    uStack32 = 0;\n    uStack36 = 5;\n    uStack40 = 0x100;\n    iStack44 = 4;\n    puStack48 = 0x401247;\n    puStack28 = &stack0xfffffff4;\n    fcn.0040e266();\n    piStack52 = NULL;\n    uStack56 = 5;\n    pcStack60 = 0x100;\n    uStack64 = 4;\n    puStack48 = &stack0xffffffe8;\n    fcn.0040e266();\n    puStack28 = NULL;\n    iStack20 = 0;\n    iStack16 = 0;\n    uStack56 = 0x20;\n    uStack36 = 0;\n    piVar7 = piStack52;\n    pcVar2 = pcStack60;\n    do {\n        if (0xff < uStack36) break;\n        *piVar7 = uStack36;\n        piVar7 = piVar7 + 1;\n        if (*pcVar2 == '\\0') {\n            pcVar2 = pcStack60;\n        }\n        *(iStack44 + uStack36 * 4) = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n        bVar3 = SCARRY4(uStack36, 1);\n        uStack36 = uStack36 + 1;\n    } while (!bVar3);\n    uStack32 = 0;\n    uStack36 = 0;\n    do {\n        if (0xff < uStack36) break;\n        uStack32 = uStack32 + piStack52[uStack36] + *(iStack44 + uStack36 * 4) & 0xff;\n        iStack20 = piStack52[uStack36];\n        piStack52[uStack36] = piStack52[uStack32];\n        piStack52[uStack32] = iStack20;\n        bVar3 = SCARRY4(uStack36, 1);\n        uStack36 = uStack36 + 1;\n    } while (!bVar3);\n    uStack36 = 0;\n    uStack32 = 0;\n    iStack24 = 0;\n    do {\n        if (in_stack_00000014 + -1 < iStack24) break;\n        uStack36 = uStack36 + 1 & 0xff;\n        uStack32 = uStack32 + piStack52[uStack36] & 0xff;\n        iStack20 = piStack52[uStack36];\n        piStack52[uStack36] = piStack52[uStack32];\n        piStack52[uStack32] = iStack20;\n        puStack28 = piStack52[uStack36] + (piStack52[uStack32] & 0xffU) & 0xff;\n        iStack16 = piStack52[puStack28];\n        *in_stack_00000010 = *in_stack_00000010 ^ iStack16;\n        in_stack_00000010 = in_stack_00000010 + 1;\n        bVar3 = SCARRY4(iStack24, 1);\n        iStack24 = iStack24 + 1;\n    } while (!bVar3);\n    fcn.0040e266(4, 1, 5, 0, &stack0xffffffcc);\n    uVar6 = 5;\n    uVar4 = 1;\n    fcn.0040e266(4, 1, 5, 0, &stack0xffffffc0);\n    uVar5 = uVar4;\n    fcn.0040a200();\n    uVar4 = fcn.0040e5f0(uVar4);\n    fcn.0040e3b9(uVar5, uVar4);\n    fcn.0040e3b9();\n    return uVar6;\n}\n",
        "token_count": 1124
    },
    "0040249d": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040249d(void)\n\n{\n    uint uVar1;\n    int32_t arg_ch;\n    uint uVar2;\n    int32_t iVar3;\n    uint extraout_EDX;\n    int32_t extraout_EDX_00;\n    ulong uVar4;\n    int32_t in_stack_ffffffb4;\n    uint in_stack_ffffffb8;\n    uint in_stack_ffffffbc;\n    uint in_stack_ffffffc8;\n    uchar *s;\n    uchar *arg_8h;\n    \n    iVar3 = 9;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    fcn.0040e660();\n    fcn.004051a0();\n    *0x41808c = 0x4170c8;\n    s = NULL;\n    do {\n        if (6 < s) break;\n        iVar3 = **0x41808c;\n        *0x41808c = *0x41808c + 1;\n        uVar1 = fcn.0040e520();\n        fcn.0040e520();\n        iVar3 = -iVar3;\n        fcn.00405dc0();\n        fcn.0040e560(&stack0xfffffff4, iVar3);\n        fcn.0040e520();\n        fcn.0040e6c0(uVar1);\n        fcn.0040e6c0(iVar3);\n        arg_8h = &stack0xffffffe8;\n        fcn.0040e560(arg_8h, iVar3);\n        s = arg_8h + 1;\n    } while (!SCARRY4(arg_8h, 1));\n    fcn.0040e520();\n    uVar1 = fcn.0040e520();\n    arg_ch = sub.KERNEL32.dll_GetCommandLineW();\n    fcn.0040a240();\n    fcn.0040e560(&stack0xfffffffc, arg_ch);\n    fcn.0040e520();\n    fcn.0040e6c0(s);\n    fcn.0040e560(&stack0xfffffff4, s);\n    sub.SHLWAPI.DLL_PathRemoveArgsW(uVar1);\n    iVar3 = arg_ch;\n    uVar4 = fcn.00405de0();\n    if (0 < uVar4) {\n        uVar2 = fcn.0040e520(uVar4 >> 0x20);\n        in_stack_ffffffc8 = 0x41702a;\n        fcn.0040e6c0(0x41702a);\n        uVar1 = extraout_EDX;\n        uVar2 = fcn.0040e520(extraout_EDX, in_stack_ffffffc8, uVar2);\n        uVar2 = fcn.0040e520(uVar1, uVar2);\n        in_stack_ffffffbc = fcn.0040e520(uVar1, uVar2);\n        in_stack_ffffffb8 = fcn.0040e520(uVar1);\n        in_stack_ffffffb4 = iVar3 + 1;\n        fcn.00406110(s);\n        fcn.00405182();\n        fcn.00406060(s + extraout_EDX_00);\n        fcn.0040e560(&stack0xffffffd8, in_stack_ffffffb4);\n    }\n    fcn.004099a5();\n    uVar1 = fcn.0040e520();\n    fcn.0040e6c0(in_stack_ffffffc8);\n    fcn.00405170(in_stack_ffffffc8);\n    fcn.0040e5f0(in_stack_ffffffb8);\n    fcn.0040e5f0(in_stack_ffffffbc);\n    fcn.0040e5f0(arg_ch);\n    fcn.0040e5f0(uVar1);\n    fcn.0040e5f0(in_stack_ffffffb4);\n    return;\n}\n",
        "token_count": 874
    },
    "00403221": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00403221(void)\n\n{\n    bool bVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint in_stack_00000024;\n    uchar *puVar5;\n    char16_t *arg_ch;\n    uchar *puVar6;\n    uchar *puStack40;\n    int32_t iStack36;\n    uint uStack32;\n    uint uVar7;\n    uint32_t uStack16;\n    uint uStack12;\n    \n    iVar4 = 7;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    uStack12 = 0x403239;\n    fcn.0040e660();\n    puVar5 = &stack0xfffffff4;\n    puVar6 = &stack0xfffffff4;\n    uStack12 = in_stack_00000024;\n    fcn.004051a0();\n    fcn.00405060();\n    fcn.00405060();\n    iVar4 = fcn.00402b6d();\n    if ((iVar4 == 0) || (iVar4 = fcn.00405573(),  iVar4 == 0x41)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        uVar2 = fcn.0040e520();\n        iVar4 = fcn.0040e520();\n        uVar7 = 0x800;\n        fcn.004062c0();\n        uStack32 = 0x4032a5;\n        fcn.0040e560(&stack0xfffffff4, uVar7);\n        uStack32 = 0x800;\n        puStack40 = 0x4032b3;\n        iStack36 = iVar4;\n        sub.KERNEL32.dll_GetWindowsDirectoryW();\n        puStack40 = puVar5;\n        puVar6 = puStack40;\n        sub.SHLWAPI.DLL_PathAddBackslashW();\n        uVar7 = uStack32;\n        fcn.0040e520();\n        fcn.0040e6c0(uVar7);\n        arg_ch = L\"sysnative\";\n        fcn.0040e6c0(L\"sysnative\");\n        fcn.0040e560(&stack0xffffffd8, arg_ch);\n        sub.SHLWAPI.DLL_PathAddBackslashW();\n        uVar7 = fcn.0040e520();\n        fcn.0040e6c0(arg_ch);\n        fcn.0040e6c0(uVar7);\n        fcn.0040e560(&stack0xffffffc8, uVar7);\n        uVar7 = fcn.0040e520();\n        fcn.0040e6c0(arg_ch);\n        fcn.0040e6c0(uVar7);\n        fcn.0040e6c0(uVar7);\n        fcn.0040e560(&stack0xffffffb8, uVar7);\n        iVar3 = fcn.0040b440(0, arg_ch);\n        if (iVar3 != 0) {\n            fcn.0040b050(0);\n        }\n        puStack40 = NULL;\n        iStack36 = uVar2;\n        iVar3 = fcn.0040b440();\n        if (iVar3 != 0) {\n            puStack40 = NULL;\n            fcn.0040b050();\n        }\n        uStack16 = iVar3 != 0;\n        puVar5 = &stack0xffffffd8;\n        if (iVar4 + uStack16 == 0) {\n            fcn.0040e520();\n            fcn.0040e520();\n            uVar7 = 0x800;\n            fcn.004062c0();\n            fcn.0040e560(&stack0xffffffd8, uVar7);\n            sub.KERNEL32.dll_GetSystemDirectoryW();\n            puStack40 = puVar5;\n            sub.SHLWAPI.DLL_PathAddBackslashW();\n        }\n    }\n    else {\n        fcn.0040e520();\n        iStack36 = fcn.0040e520();\n        uVar7 = 0x800;\n        fcn.004062c0();\n        uStack32 = 0x40340b;\n        fcn.0040e560(&stack0xfffffff4, uVar7);\n        uStack32 = 0x800;\n        puStack40 = 0x403419;\n        sub.KERNEL32.dll_GetSystemDirectoryW();\n        puStack40 = puVar6;\n        puVar6 = puStack40;\n        sub.SHLWAPI.DLL_PathAddBackslashW();\n    }\n    uVar7 = uStack32;\n    fcn.0040e520();\n    fcn.0040e6c0(uVar7);\n    fcn.00405170();\n    fcn.0040e5f0(puVar6);\n    fcn.0040e5f0(puVar6);\n    fcn.0040e5f0(puVar6);\n    fcn.0040e5f0(puVar6);\n    fcn.0040e5f0(puVar6);\n    return;\n}\n",
        "token_count": 1151
    },
    "00403801": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00403801(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint extraout_EDX;\n    uint extraout_EDX_00;\n    int32_t extraout_EDX_01;\n    int32_t extraout_EDX_02;\n    uint extraout_EDX_03;\n    int32_t extraout_EDX_04;\n    uint extraout_EDX_05;\n    int32_t extraout_EDX_06;\n    int32_t extraout_EDX_07;\n    uint extraout_EDX_08;\n    uint extraout_EDX_09;\n    int32_t extraout_EDX_10;\n    uint extraout_EDX_11;\n    int32_t extraout_EDX_12;\n    uint extraout_EDX_13;\n    int32_t extraout_EDX_14;\n    uchar *s;\n    uint arg_8h;\n    uchar *puVar5;\n    uint uStack232;\n    uint uStack228;\n    uint uStack224;\n    int32_t iStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    int32_t iStack64;\n    uint uStack8;\n    uchar *puVar6;\n    \n    iVar4 = 0xc;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    fcn.0040e660();\n    *0x41808c = 0x417089;\n    puVar6 = NULL;\n    uStack8 = extraout_EDX;\n    do {\n        if (8 < puVar6) break;\n        iVar4 = **0x41808c;\n        *0x41808c = *0x41808c + 1;\n        uStack8 = fcn.0040e520();\n        fcn.0040e520();\n        iVar4 = -iVar4;\n        fcn.00405dc0();\n        fcn.0040e560(&stack0xfffffffc, iVar4);\n        uVar2 = uStack8;\n        fcn.0040e520();\n        fcn.0040e6c0(uVar2);\n        fcn.0040e6c0(iVar4);\n        puVar5 = &stack0xfffffff0;\n        fcn.0040e560(puVar5, iVar4);\n        puVar6 = puVar5 + 1;\n        uStack8 = extraout_EDX_00;\n    } while (!SCARRY4(puVar5, 1));\n    uStack8 = fcn.0040e520();\n    fcn.0040e520();\n    fcn.0040e520();\n    fcn.0040e520();\n    iVar4 = *0x4180a0;\n    fcn.0040d780();\n    fcn.00405182();\n    iVar4 = iVar4 + extraout_EDX_01;\n    fcn.00405eb0();\n    fcn.0040e560(&stack0xfffffff8, iVar4);\n    fcn.0040e520();\n    fcn.0040e520();\n    iVar1 = fcn.0040e520();\n    fcn.0040e520();\n    iVar4 = *0x4180a0;\n    fcn.0040d780();\n    fcn.00405182();\n    iVar4 = iVar4 + extraout_EDX_02;\n    fcn.00405eb0();\n    iStack64 = 0x403928;\n    fcn.0040e560(&stack0xffffffe0, iVar4);\n    uStack68 = 0x40392e;\n    iStack64 = extraout_EDX_03;\n    iVar4 = fcn.0040e520();\n    uStack68 = iStack64;\n    uStack72 = 0x403936;\n    iStack64 = iVar4;\n    uVar2 = fcn.0040e520();\n    uStack72 = uStack68;\n    uStack76 = 0x40393e;\n    uStack68 = uVar2;\n    uVar2 = fcn.0040e520();\n    uStack76 = uStack72;\n    uStack80 = 0x403946;\n    uStack72 = uVar2;\n    uStack76 = fcn.0040e520();\n    uStack80 = 3;\n    fcn.0040d780();\n    fcn.00405182();\n    iVar1 = iVar1 + extraout_EDX_04;\n    fcn.00405eb0();\n    puVar6 = &stack0xffffffc8;\n    uStack92 = 0x40396d;\n    fcn.0040e560(puVar6, iVar1);\n    uStack96 = 0x403973;\n    uStack92 = extraout_EDX_05;\n    uVar2 = fcn.0040e520();\n    uStack96 = uStack92;\n    uStack100 = 0x40397b;\n    uStack92 = uVar2;\n    uVar2 = fcn.0040e520();\n    uStack100 = uStack96;\n    uStack104 = 0x403983;\n    uStack96 = uVar2;\n    uVar2 = fcn.0040e520();\n    uStack104 = uStack100;\n    uStack100 = uVar2;\n    uStack104 = fcn.0040e520();\n    iStack156 = iStack64;\n    fcn.0040d780();\n    fcn.00405182();\n    iStack156 = iStack156 + extraout_EDX_06;\n    fcn.00405eb0();\n    fcn.0040e560(&stack0xffffffb0, iStack156);\n    fcn.0040e520();\n    fcn.0040e520();\n    fcn.0040e520();\n    fcn.0040e520();\n    fcn.0040d780();\n    fcn.00405182();\n    puVar6 = puVar6 + extraout_EDX_07;\n    fcn.00405eb0();\n    uStack148 = 0x4039f7;\n    fcn.0040e560(&stack0xffffff98, puVar6);\n    uStack152 = 0x4039fd;\n    uStack148 = extraout_EDX_08;\n    uStack148 = fcn.0040e520();\n    uStack152 = 1;\n    fcn.00403e37();\n    fcn.004051a0();\n    uVar3 = fcn.0040e520();\n    uVar2 = 3;\n    fcn.00403e37();\n    fcn.0040e560(0x4180b4, uVar2);\n    fcn.0040e520();\n    uVar2 = uStack148;\n    fcn.00403e37();\n    puVar6 = &stack0xffffff70;\n    fcn.0040e560(puVar6, uVar2);\n    fcn.0040e520();\n    fcn.00403e37();\n    fcn.0040e560(&stack0xffffff64, uVar3);\n    fcn.0040e520();\n    s = puVar6;\n    fcn.00403e37();\n    uStack224 = 0x403a94;\n    fcn.0040e560(&stack0xffffff58, puVar6);\n    uStack228 = 0x403a9a;\n    uStack224 = extraout_EDX_09;\n    uVar2 = fcn.0040e520();\n    uStack228 = uStack224;\n    uStack232 = 0x403aa2;\n    uStack224 = uVar2;\n    uVar2 = fcn.0040e520();\n    uStack232 = uStack228;\n    uStack228 = uVar2;\n    uStack232 = fcn.0040e520();\n    iVar4 = *0x4180c8;\n    fcn.00402ba6();\n    fcn.0040e720();\n    uVar2 = 0x417056;\n    fcn.00405182();\n    fcn.00406650(s, uVar2, iVar4 + extraout_EDX_10);\n    puVar5 = &stack0xffffff34;\n    fcn.0040e560(puVar5, s);\n    uVar2 = extraout_EDX_11;\n    iVar1 = fcn.0040e520(extraout_EDX_11);\n    uVar3 = fcn.0040e520(uVar2);\n    uVar2 = fcn.0040e520(uVar2, uVar3);\n    iVar4 = *0x4180b8;\n    fcn.00402ba6(*0x4180b8, uVar2);\n    fcn.0040e720();\n    fcn.00405182(puVar6, 0x41702e);\n    iVar4 = iVar4 + extraout_EDX_12;\n    fcn.00406650();\n    fcn.0040e560(&stack0xffffff18, puVar6);\n    uVar2 = fcn.0040e520(extraout_EDX_13);\n    uVar3 = fcn.0040e520(iVar4, uVar2);\n    fcn.0040e6c0(iVar4);\n    arg_8h = 0x41705c;\n    fcn.0040e6c0(0x41705c);\n    fcn.0040e6c0(puVar5);\n    fcn.0040e6c0(s);\n    fcn.0040e6c0(iVar1);\n    fcn.0040e720();\n    uVar2 = *0x418098;\n    fcn.00405182();\n    iVar1 = iVar1 + extraout_EDX_14;\n    fcn.004023b8();\n    fcn.004051a0();\n    fcn.0040e5f0(arg_8h);\n    fcn.0040e5f0(s);\n    fcn.0040e5f0(iVar4);\n    fcn.0040e5f0(iVar4);\n    fcn.0040e5f0(uVar3);\n    fcn.0040e5f0(iVar1);\n    fcn.0040e5f0(iVar4);\n    fcn.0040e5f0(s);\n    fcn.0040e5f0(iVar1);\n    fcn.0040e5f0(uVar2);\n    return;\n}\n",
        "token_count": 2376
    },
    "00409698": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00409698(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.0040e900(0x104, param_1);\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(*0x41806c, iVar1, 0x104);\n    iVar3 = sub.MSVCRT.dll_wcscmp(iVar1, L\"\\\\\\\\?\\\\\");\n    if (iVar3 == 0) {\n        sub.MSVCRT.dll_memmove(iVar1, iVar1 + 8, iVar2 * 2 + -8);\n        iVar2 = iVar2 + -4;\n    }\n    fcn.0040ea90(0x104 - iVar2);\n    *(iVar1 + iVar2 * 2) = 0;\n    return;\n}\n",
        "token_count": 195
    },
    "0040e900": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040e900(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    piVar1 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*0x417168);\n    if (arg_ch == -1) {\n        arg_ch = piVar1[2];\n    }\n    var_8h = piVar1[2] + arg_8h * 2;\n    if (var_8h < piVar1[1] + -4) {\n        if (0x100000 < piVar1[1]) {\n            if (var_8h < 0x100000) {\n                var_8h = 0x100000;\n            }\n            piVar1[1] = var_8h;\n            iVar2 = (*_sym.imp.KERNEL32.dll_HeapReAlloc)(*0x418788, 0, *piVar1, piVar1[1] + 10);\n            *piVar1 = iVar2;\n        }\n    }\n    else {\n        piVar1[1] = var_8h + 0x4000;\n        iVar2 = (*_sym.imp.KERNEL32.dll_HeapReAlloc)(*0x418788, 0, *piVar1, piVar1[1] + 10);\n        *piVar1 = iVar2;\n    }\n    piVar1[2] = arg_ch + arg_8h * 2;\n    return *piVar1 + arg_ch;\n}\n",
        "token_count": 363
    },
    "00410c80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t * fcn.00410c80(uint32_t param_1, uint32_t *param_2, uint32_t param_3)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    if (param_2 == NULL) {\n        return param_2;\n    }\n    param_1 = ~param_1;\n    if (param_3 != 0) {\n        do {\n            if ((param_2 & 3) == 0) break;\n            uVar1 = *param_2;\n            param_2 = param_2 + 1;\n            param_1 = param_1 >> 8 ^ *(((uVar1 ^ param_1) & 0xff) * 4 + 0x4141d0);\n            param_3 = param_3 - 1;\n        } while (param_3 != 0);\n    }\n    if (0x1f < param_3) {\n        uVar3 = param_3 >> 5;\n        do {\n            param_1 = param_1 ^ *param_2;\n            uVar2 = *((param_1 >> 0x10 & 0xff) * 4 + 0x4145d0) ^ *((param_1 >> 8 & 0xff) * 4 + 0x4149d0) ^\n                    *((param_1 >> 0x18) * 4 + 0x4141d0) ^ *((param_1 & 0xff) * 4 + 0x414dd0) ^ param_2[1];\n            uVar2 = *((uVar2 >> 0x10 & 0xff) * 4 + 0x4145d0) ^ *((uVar2 >> 8 & 0xff) * 4 + 0x4149d0) ^\n                    *((uVar2 >> 0x18) * 4 + 0x4141d0) ^ *((uVar2 & 0xff) * 4 + 0x414dd0) ^ param_2[2];\n            uVar2 = *((uVar2 >> 0x10 & 0xff) * 4 + 0x4145d0) ^ *((uVar2 >> 8 & 0xff) * 4 + 0x4149d0) ^\n                    *((uVar2 >> 0x18) * 4 + 0x4141d0) ^ *((uVar2 & 0xff) * 4 + 0x414dd0) ^ param_2[3];\n            uVar2 = *((uVar2 >> 0x10 & 0xff) * 4 + 0x4145d0) ^ *((uVar2 >> 8 & 0xff) * 4 + 0x4149d0) ^\n                    *((uVar2 >> 0x18) * 4 + 0x4141d0) ^ *((uVar2 & 0xff) * 4 + 0x414dd0) ^ param_2[4];\n            uVar2 = *((uVar2 >> 0x10 & 0xff) * 4 + 0x4145d0) ^ *((uVar2 >> 8 & 0xff) * 4 + 0x4149d0) ^\n                    *((uVar2 >> 0x18) * 4 + 0x4141d0) ^ *((uVar2 & 0xff) * 4 + 0x414dd0) ^ param_2[5];\n            param_3 = param_3 - 0x20;\n            uVar2 = *((uVar2 >> 0x10 & 0xff) * 4 + 0x4145d0) ^ *((uVar2 >> 8 & 0xff) * 4 + 0x4149d0) ^\n                    *((uVar2 >> 0x18) * 4 + 0x4141d0) ^ *((uVar2 & 0xff) * 4 + 0x414dd0) ^ param_2[6];\n            uVar2 = *((uVar2 >> 0x10 & 0xff) * 4 + 0x4145d0) ^ *((uVar2 >> 8 & 0xff) * 4 + 0x4149d0) ^\n                    *((uVar2 >> 0x18) * 4 + 0x4141d0) ^ *((uVar2 & 0xff) * 4 + 0x414dd0) ^ param_2[7];\n            param_2 = param_2 + 8;\n            param_1 = *((uVar2 >> 0x10 & 0xff) * 4 + 0x4145d0) ^ *((uVar2 >> 8 & 0xff) * 4 + 0x4149d0) ^\n                      *((uVar2 >> 0x18) * 4 + 0x4141d0) ^ *((uVar2 & 0xff) * 4 + 0x414dd0);\n            uVar3 = uVar3 - 1;\n        } while (uVar3 != 0);\n    }\n    if (3 < param_3) {\n        uVar3 = param_3 >> 2;\n        do {\n            param_1 = param_1 ^ *param_2;\n            param_3 = param_3 - 4;\n            param_2 = param_2 + 1;\n            param_1 = *((param_1 >> 0x10 & 0xff) * 4 + 0x4145d0) ^ *((param_1 >> 8 & 0xff) * 4 + 0x4149d0) ^\n                      *((param_1 >> 0x18) * 4 + 0x4141d0) ^ *((param_1 & 0xff) * 4 + 0x414dd0);\n            uVar3 = uVar3 - 1;\n        } while (uVar3 != 0);\n    }\n    for (; param_3 != 0; param_3 = param_3 - 1) {\n        uVar1 = *param_2;\n        param_2 = param_2 + 1;\n        param_1 = param_1 >> 8 ^ *(((uVar1 ^ param_1) & 0xff) * 4 + 0x4141d0);\n    }\n    return ~param_1;\n}\n",
        "token_count": 1436
    },
    "00401ba0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x004011b6: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x004011bb)\n\nvoid __cdecl fcn.00401ba0(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint extraout_EDX;\n    int32_t extraout_EDX_00;\n    uint extraout_EDX_01;\n    int32_t extraout_EDX_02;\n    int32_t extraout_EDX_03;\n    uint extraout_EDX_04;\n    int32_t extraout_EDX_05;\n    uint extraout_EDX_06;\n    uint extraout_EDX_07;\n    uchar uVar5;\n    ulong uVar6;\n    uint in_stack_ffffff30;\n    uint in_stack_ffffff34;\n    uint in_stack_ffffff38;\n    uint uStack136;\n    uchar *s;\n    uint uStack96;\n    int32_t iStack80;\n    int32_t iStack76;\n    int32_t iStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    int32_t iStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0;\n    uStack16 = 0;\n    uStack20 = 0;\n    uStack24 = 0;\n    uStack28 = 0;\n    uStack32 = 0;\n    uStack36 = 0x401baf;\n    fcn.0040e660();\n    uStack40 = 0x401bb5;\n    uStack36 = extraout_EDX;\n    uVar1 = fcn.0040e520();\n    uStack40 = 2;\n    uStack44 = 0;\n    uStack48 = uStack36;\n    iStack52 = 0x401bc7;\n    uStack36 = uVar1;\n    uVar1 = fcn.0040e520();\n    iStack52 = uStack48;\n    uStack56 = 0x401bcf;\n    uStack48 = uVar1;\n    iStack52 = fcn.0040e520();\n    uStack56 = 0x401bd6;\n    fcn.00409698();\n    uStack56 = 0x401bdb;\n    fcn.00405182();\n    iStack52 = iStack52 + extraout_EDX_00;\n    uStack56 = 0x401be3;\n    sub.KERNEL32.dll_LoadLibraryExW();\n    uStack56 = 0x401be8;\n    uStack64 = fcn.004051a0();\n    uStack56 = 0;\n    uStack60 = 0x402033;\n    uStack68 = 0x401c00;\n    iStack52 = uStack64;\n    sub.KERNEL32.dll_EnumResourceTypesW();\n    uStack68 = uStack64;\n    iStack72 = 0x401c08;\n    sub.KERNEL32.dll_FreeLibrary();\n    iStack72 = *0x418108;\n    iStack76 = 0x401c13;\n    iVar2 = fcn.0040aac3();\n    if (0 < iVar2) {\n        iStack76 = *0x418108;\n        iStack80 = 0x401c28;\n        fcn.0040aacd();\n        while( true ) {\n            s = &stack0xffffffb0;\n            iStack80 = *0x418108;\n            iVar2 = fcn.0040aae2();\n            if (iVar2 == 0) break;\n            uVar1 = *(*0x41810c + 8);\n            fcn.0040e520();\n            fcn.0040e6c0(uVar1);\n            uStack96 = 0x401c58;\n            fcn.0040e560(&stack0xffffffb0, uVar1);\n            uStack96 = uVar1;\n            uVar1 = uStack96;\n            iVar2 = fcn.00405de0();\n            if (iVar2 < 0xb) {\n                fcn.0040e520();\n                fcn.0040e6c0(s);\n                fcn.0040e560(&stack0xffffffa8, s);\n            }\n            else {\n                fcn.0040e520();\n                fcn.0040e6c0(uVar1);\n                uVar1 = uStack96;\n                fcn.0040e6c0(uStack96);\n                fcn.0040e560(&stack0xffffffa0, uVar1);\n            }\n        }\n        fcn.0040ab16();\n        uVar1 = extraout_EDX_01;\n        fcn.0040e520();\n        uStack96 = 0x401cca;\n        fcn.0040e520();\n        uStack96 = uVar1;\n        uStack96 = fcn.0040e520();\n        fcn.0040e520();\n        uVar1 = 1;\n        fcn.0040e520();\n        fcn.0040e520();\n        iVar2 = iStack76;\n        fcn.00405e10();\n        fcn.00405182();\n        iVar2 = iVar2 + extraout_EDX_02;\n        fcn.0040d780();\n        fcn.00405182();\n        iVar2 = iVar2 + extraout_EDX_03;\n        fcn.00405eb0();\n        fcn.0040e560(&stack0xffffffa0, iVar2);\n        fcn.0040e520();\n        fcn.0040e6c0(uVar1);\n        uStack136 = 0x401d3a;\n        fcn.0040e560(&stack0xffffff98, uVar1);\n        uStack136 = extraout_EDX_04;\n        uStack136 = fcn.0040e520();\n        fcn.0040e520();\n        uVar3 = fcn.0040e520();\n        fcn.0040e520();\n        fcn.0040d780();\n        fcn.00405182();\n        iVar2 = iVar2 + extraout_EDX_05;\n        uVar5 = iVar2 == 0;\n        fcn.00405eb0();\n        fcn.0040e560(&stack0xffffff78, iVar2);\n        uVar1 = extraout_EDX_06;\n        uVar4 = fcn.0040e520(extraout_EDX_06);\n        uVar1 = fcn.0040e520(uVar1, uVar4);\n        fcn.00405f20(uVar3, 10, uVar1);\n        fcn.0040e560(&stack0xffffff64, uVar3);\n        fcn.00405120();\n        if (!uVar5) {\n            uVar6 = fcn.0040985e();\n            uVar1 = uVar6 >> 0x20;\n            uVar5 = uVar6 == 0;\n            if (!uVar5) {\n                uVar3 = fcn.0040e520(uVar1);\n                uVar1 = fcn.0040e520(uVar1, uVar3);\n                uVar3 = 0;\n                fcn.00409872(0, uVar1);\n                fcn.0040e720();\n                fcn.00405160(uVar3);\n                fcn.00405120();\n                if (!uVar5) {\n                    *0x4180b0 = 1;\n                    uVar1 = extraout_EDX_07;\n                    uVar3 = fcn.0040e520(extraout_EDX_07);\n                    in_stack_ffffff38 = fcn.0040e520(uVar1, uVar3);\n                    in_stack_ffffff34 = 1;\n                    fcn.00409872(1, in_stack_ffffff38);\n                    in_stack_ffffff30 = 0x418080;\n                    fcn.0040e560(0x418080, in_stack_ffffff34);\n                }\n            }\n            fcn.0040e5f0(in_stack_ffffff34);\n            fcn.0040e5f0(in_stack_ffffff38);\n            fcn.0040e5f0(in_stack_ffffff30);\n            fcn.0040e5f0(in_stack_ffffff38);\n            fcn.0040e5f0(in_stack_ffffff30);\n            return;\n        }\n    }\n    fcn.00405373(0x4011bb, 0);\n    fcn.00409fd0();\n    fcn.0040ad35();\n    fcn.0040b110();\n    fcn.0040d944();\n    fcn.0040a1b0();\n    return;\n}\n",
        "token_count": 1985
    },
    "00409a1f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * fcn.00409a1f(int16_t *param_1, int32_t param_2, uint param_3, uint32_t param_4, int32_t param_5)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint32_t uVar6;\n    int16_t *piVar7;\n    uint *puVar8;\n    bool bVar9;\n    int16_t *unaff_retaddr;\n    int32_t iVar10;\n    int32_t iVar11;\n    uchar *puVar12;\n    uint32_t uVar13;\n    int32_t iStack192;\n    int32_t iStack188;\n    int32_t iStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint auStack168 [2];\n    uint32_t uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uchar auStack140 [8];\n    uint16_t uStack132;\n    uint auStack128 [4];\n    uint uStack112;\n    uint uStack108;\n    uint uStack100;\n    int16_t *piStack96;\n    uint uStack92;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint16_t uStack80;\n    int32_t iStack72;\n    int32_t iStack68;\n    int32_t iStack64;\n    uint uStack56;\n    uint uStack44;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    int16_t *piStack4;\n    \n    uStack156 = 0xc;\n    uVar6 = 0x20;\n    iStack192 = 0;\n    puVar8 = NULL;\n    uStack176 = 0;\n    auStack168[0] = 0;\n    iStack188 = 0;\n    uStack180 = 0;\n    iStack184 = 0;\n    uStack172 = 0;\n    uStack152 = 0;\n    uStack148 = 1;\n    sub.MSVCRT.dll_memset(auStack128, 0, 0x44);\n    pcVar1 = _sym.imp.KERNEL32.dll_CreatePipe;\n    uStack84 = 1;\n    auStack128[0] = 0x44;\n    bVar9 = (param_4 & 2) == 0;\n    if (!bVar9) {\n        uVar6 = 0x30;\n    }\n    uStack80 = bVar9;\n    if ((((param_4 & 0x40) == 0) || (param_5 == 0)) || (*(param_5 + 0xc) == 0)) {\n        if ((((param_4 & 4) != 0) && ((param_4 & 0x10) != 0)) &&\n           (iVar2 = (*_sym.imp.KERNEL32.dll_CreatePipe)(&iStack192, &uStack176, &uStack156, 0),  iVar2 != 0)) {\n            uStack84 = uStack84 | 0x100;\n            iStack72 = iStack192;\n            fcn.004099c7(&uStack176);\n            goto code_r0x00409b1d;\n        }\n    }\n    else {\n        uStack84 = 0x101;\n        iStack72 = *(param_5 + 0xc);\ncode_r0x00409b1d:\n        uStack172 = 1;\n        uVar6 = uVar6 & 0xffffffef;\n    }\n    uStack160 = param_4 & 4;\n    if (uStack160 != 0) {\n        if (((param_4 & 8) != 0) && (iVar2 = (*pcVar1)(auStack168, &iStack188, &uStack156, 0),  iVar2 != 0)) {\n            uStack84 = uStack84 | 0x100;\n            iStack68 = iStack188;\n            fcn.004099c7(auStack168);\n            uVar6 = uVar6 & 0xffffffef;\n            uStack172 = 1;\n        }\n        if (((param_4 & 0x20) != 0) && (iVar2 = (*pcVar1)(&uStack180, &iStack184, &uStack156, 0),  iVar2 != 0)) {\n            uStack84 = uStack84 | 0x100;\n            iStack64 = iStack184;\n            fcn.004099c7(&uStack180);\n            uVar6 = uVar6 & 0xffffffef;\n            uStack172 = 1;\n        }\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_GetStdHandle;\n    if ((uStack84 & 0x100) != 0) {\n        if (iStack72 == 0) {\n            iStack72 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(0xfffffff6);\n        }\n        if (iStack68 == 0) {\n            iStack68 = (*pcVar1)(0xfffffff5);\n        }\n        if (iStack64 == 0) {\n            iStack64 = (*pcVar1)(0xfffffff4);\n        }\n    }\n    if (param_1 == NULL) {\n        param_1 = 0x413024;\n    }\n    if (param_2 == 0) {\n        param_2 = 0x413024;\n    }\n    iVar2 = sub.MSVCRT.dll_wcslen(param_1);\n    iVar3 = sub.MSVCRT.dll_wcslen(param_2);\n    iVar2 = (iVar2 + iVar3) * 2 + 8;\n    uVar13 = 0;\n    iVar3 = *0x418068;\n    uVar4 = (*_sym.imp.KERNEL32.dll_HeapAlloc)();\n    uStack176 = uVar4;\n    if (*param_1 == 0x22) {\n        sub.MSVCRT.dll_wcscpy(uVar4, param_1);\n    }\n    else {\n        sub.MSVCRT.dll_wcscpy(uVar4, 0x4130e8);\n        sub.MSVCRT.dll_wcscat(uVar4, param_1);\n        sub.MSVCRT.dll_wcscat(uVar4, 0x4130e8);\n    }\n    if (*piStack4 != 0) {\n        sub.MSVCRT.dll_wcscat(uVar4, 0x413028);\n        sub.MSVCRT.dll_wcscat(uVar4, piStack4);\n    }\n    if (unaff_retaddr != NULL) {\n        unaff_retaddr = unaff_retaddr & -(*unaff_retaddr != 0);\n    }\n    puVar12 = auStack140;\n    iVar11 = 0;\n    iVar10 = iStack184;\n    iVar5 = (*_sym.imp.KERNEL32.dll_CreateProcessW)(0, uVar4, 0, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n    if (iVar5 == 0) {\n        if (uVar6 != 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar6);\n        }\n        if (iVar3 != 0) {\n            (*pcVar1)(iVar3);\n        }\n        if (puVar12 != NULL) {\n            (*pcVar1)(puVar12);\n        }\n        if (iVar10 != 0) {\n            (*pcVar1)(iVar10);\n        }\n        if (iVar11 != 0) {\n            (*pcVar1)(iVar11);\n        }\n        if (unaff_retaddr != NULL) {\n            (*pcVar1)(unaff_retaddr);\n        }\n        if ((uStack36 & 0x78) != 0) goto code_r0x00409f2c;\n        if (uStack40 == 0) {\n            iVar3 = sub.MSVCRT.dll_wcslen(param_1);\n            piVar7 = param_1 + iVar3 + -1;\n            if (param_1 < piVar7) {\n                do {\n                    if (*piVar7 == 0x5c) break;\n                    piVar7 = piVar7 + -1;\n                } while (param_1 < piVar7);\n                if (param_1 < piVar7) {\n                    sub.MSVCRT.dll_wcscpy(uVar13, param_1);\n                    *(uVar13 + 2 + (piVar7 - param_1 >> 1) * 2) = 0;\n                    uStack40 = uVar13;\n                }\n            }\n        }\n        sub.MSVCRT.dll_memset(&uStack112, 0, 0x3c);\n        uStack84 = uStack132;\n        uStack100 = 0;\n        uStack88 = uStack40;\n        uStack92 = uStack44;\n        uStack112 = 0x3c;\n        uStack108 = 0x540;\n        piStack96 = param_1;\n        iVar3 = (*_sym.imp.SHELL32.DLL_ShellExecuteExW)(&uStack112);\n        if (iVar3 == 0) goto code_r0x00409f2c;\n        if ((uStack36 & 1) != 0) {\n            (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(uStack56, 0xffffffff);\n        }\n        if (iVar2 != 0) {\n            (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x418730);\n            puVar8 = fcn.0040e1f2(0x418148, 0x20);\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x418730);\n            puVar8[1] = 0xffffffff;\n            *puVar8 = uStack56;\n            puVar8[3] = 0;\n            puVar8[2] = 0;\n            puVar8[4] = 0;\n            puVar8[5] = uStack36;\n            goto code_r0x00409f2c;\n        }\n        (*pcVar1)(uStack56);\n    }\n    else {\n        if (uVar6 != 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar6);\n        }\n        if (iVar10 != 0) {\n            (*pcVar1)(iVar10);\n        }\n        if (iVar11 != 0) {\n            (*pcVar1)(iVar11);\n        }\n        (*pcVar1)(iStack192);\n        uVar6 = uStack40;\n        if ((uStack40 & 1) != 0) {\n            (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(unaff_EBP, 0xffffffff);\n        }\n        if (uVar13 != 0) {\n            (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x418730);\n            puVar8 = fcn.0040e1f2(0x418148, 0x20);\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x418730);\n            *puVar8 = unaff_EBX;\n            puVar8[1] = iStack188;\n            puVar8[3] = iVar3;\n            puVar8[2] = puVar12;\n            puVar8[4] = unaff_retaddr;\n            puVar8[5] = uVar6;\n            goto code_r0x00409f2c;\n        }\n        (*pcVar1)(unaff_EBP);\n    }\n    puVar8 = 0x1;\ncode_r0x00409f2c:\n    (*_sym.imp.KERNEL32.dll_HeapFree)(*0x418068, 0, uVar13);\n    return puVar8;\n}\n",
        "token_count": 2615
    },
    "0040a638": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * fcn.0040a638(uint *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    if (param_2 == 0) {\n        param_2 = 0x413024;\n    }\n    if ((*(param_1 + 0xb) & 1) == 0) {\n        uVar1 = fcn.0040a92f(param_2);\n        uVar1 = uVar1 % param_1[9];\n        for (puVar3 = *(param_1[1] + uVar1 * 4); puVar3 != NULL; puVar3 = *puVar3) {\n            iVar2 = sub.MSVCRT.dll_wcscmp(puVar3[1], param_2);\n            if (iVar2 == 0) goto code_r0x0040a683;\n            param_1[2] = puVar3;\n        }\n    }\n    else {\n        uVar1 = fcn.0040a94a();\n        uVar1 = uVar1 % param_1[9];\n        for (puVar3 = *(param_1[1] + uVar1 * 4); puVar3 != NULL; puVar3 = *puVar3) {\n            iVar2 = sub.MSVCRT.dll__wcsicmp(puVar3[1], param_2);\n            if (iVar2 == 0) {\ncode_r0x0040a683:\n                param_1[5] = uVar1;\n                *param_1 = puVar3;\n                return puVar3 + 2;\n            }\n            param_1[2] = puVar3;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 388
    },
    "004059e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nulong fcn.004059e0(uint16_t *param_1)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    bool bVar10;\n    bool bVar11;\n    \n    uVar4 = 0;\n    iVar9 = 0;\n    if (param_1 == NULL) goto code_r0x00405b15;\n    for (; (*param_1 == 0x20 || (*param_1 == 9)); param_1 = param_1 + 1) {\n    }\n    if (*param_1 == 0x2d) {\n        bVar11 = true;\ncode_r0x00405a1a:\n        param_1 = param_1 + 1;\n    }\n    else {\n        bVar11 = false;\n        if (*param_1 == 0x2b) goto code_r0x00405a1a;\n    }\n    uVar8 = *param_1;\n    if (uVar8 == 0x24) {\n        while( true ) {\n            uVar8 = param_1[1];\n            param_1 = param_1 + 1;\n            if ((((uVar8 < 0x30) || (0x39 < uVar8)) && ((uVar8 < 0x41 || (0x46 < uVar8)))) &&\n               ((uVar8 < 0x61 || (0x66 < uVar8)))) break;\n            if ((uVar8 < 0x30) || (0x39 < uVar8)) {\n                uVar6 = iVar9 << 4 | uVar4 >> 0x1c;\n                uVar5 = uVar4 * 0x10;\n                if (uVar8 < 0x61) {\n                    uVar4 = (uVar5 + uVar8) - 0x37;\n                    iVar9 = (uVar6 + CARRY4(uVar5, uVar8)) - (uVar5 + uVar8 < 0x37);\n                }\n                else {\n                    uVar4 = (uVar5 + uVar8) - 0x57;\n                    iVar9 = (uVar6 + CARRY4(uVar5, uVar8)) - (uVar5 + uVar8 < 0x57);\n                }\n            }\n            else {\n                bVar10 = uVar4 < 3;\n                uVar5 = uVar4 - 3;\n                uVar6 = uVar5 * 0x10;\n                uVar4 = uVar6 + uVar8;\n                iVar9 = ((iVar9 - bVar10) * 0x10 | uVar5 >> 0x1c) + CARRY4(uVar6, uVar8);\n            }\n        }\n    }\n    else if (uVar8 == 0x25) {\n        uVar2 = param_1[1];\n        while ((uVar8 = uVar2,  0x2f < uVar8 && (uVar2 < 0x32))) {\n            bVar10 = uVar4 < 0x18;\n            uVar6 = uVar4 - 0x18;\n            uVar5 = uVar6 * 2;\n            uVar4 = uVar5 + uVar8;\n            iVar9 = ((iVar9 - bVar10) * 2 | uVar6 >> 0x1f) + CARRY4(uVar5, uVar8);\n            uVar2 = param_1[2];\n            param_1 = param_1 + 1;\n        }\n    }\n    else {\n        while ((0x2f < uVar8 && (uVar8 < 0x3a))) {\n            uVar5 = uVar4 >> 0x1e;\n            bVar10 = CARRY4(uVar4, uVar4 * 4);\n            uVar3 = uVar4 * 5;\n            puVar1 = param_1 + 1;\n            uVar6 = uVar4 * 10;\n            uVar7 = uVar6 + uVar8;\n            uVar4 = uVar7 - 0x30;\n            iVar9 = (((iVar9 + (iVar9 << 2 | uVar5) + bVar10) * 2 | uVar3 >> 0x1f) + CARRY4(uVar6, uVar8)) -\n                    (uVar7 < 0x30);\n            param_1 = param_1 + 1;\n            uVar8 = *puVar1;\n        }\n    }\n    if (bVar11) {\n        bVar11 = uVar4 != 0;\n        uVar4 = -uVar4;\n        iVar9 = -(iVar9 + bVar11);\n    }\ncode_r0x00405b15:\n    return CONCAT44(iVar9, uVar4);\n}\n",
        "token_count": 1114
    },
    "00406160": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00406160(uint32_t param_1, int32_t param_2, uint param_3)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    int16_t *piVar3;\n    uint unaff_retaddr;\n    \n    if (param_2 + (0x7fffffff < param_1) != 0) {\n        piVar3 = fcn.0040e900(0x40, param_3);\n        fcn.0041206c(piVar3, param_1, unaff_retaddr);\n        piVar1 = piVar3 + 1;\n        do {\n            iVar2 = *piVar3;\n            piVar3 = piVar3 + 1;\n        } while (iVar2 != 0);\n        fcn.0040ea90(0x40 - (piVar3 - piVar1 >> 1));\n        return;\n    }\n    fcn.004061e0(param_1, param_3);\n    return;\n}\n",
        "token_count": 221
    },
    "0040a290": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0040a290(uint param_1, uint32_t param_2, uint param_3)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int32_t unaff_EBX;\n    \n    if (param_2 == 0xffffffff) {\n        fcn.0040a240(param_1, param_3);\n        return;\n    }\n    param_2 = (param_2 < 0) - 1 & param_2;\n    piVar2 = fcn.0040e900(param_2, param_3);\n    if ((unaff_EBX != 0) && (param_2 != 0)) {\n        unaff_EBX = unaff_EBX - piVar2;\n        do {\n            iVar1 = *(unaff_EBX + piVar2);\n            if (iVar1 == 0) break;\n            *piVar2 = iVar1;\n            piVar2 = piVar2 + 1;\n            param_2 = param_2 - 1;\n        } while (param_2 != 0);\n    }\n    fcn.0040ea90(param_2);\n    *piVar2 = 0;\n    return;\n}\n",
        "token_count": 262
    },
    "0040b350": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * fcn.0040b350(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint unaff_retaddr;\n    uint uVar5;\n    \n    piVar4 = NULL;\n    piVar1 = fcn.0040db18(*0x418784, param_1);\n    if (piVar1 == NULL) {\n        return NULL;\n    }\n    uVar5 = 0;\n    piVar2 = (*_sym.imp.KERNEL32.dll_CreateFileW)(unaff_retaddr, 0xc0000000, 0, 0, 2, 0x80, 0);\n    if (((piVar2 != 0xffffffff) ||\n        (piVar2 = (*_sym.imp.KERNEL32.dll_CreateFileW)(uVar5, 0x40000000, 0, 0, 5, 0, 0),  piVar2 != 0xffffffff)) &&\n       (piVar2 != NULL)) {\n        if (*0x417124 == 0) {\n            piVar1[1] = 0;\n        }\n        else {\n            iVar3 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x418068, 0, *0x417124);\n            piVar1[1] = iVar3;\n        }\n        *piVar1 = piVar2;\n        iVar3 = *0x417124;\n        piVar1[3] = 0;\n        piVar1[7] = 0;\n        piVar1[2] = iVar3;\n        piVar1[5] = 1;\n        piVar1[6] = 2;\n        piVar4 = piVar1;\n        if (param_1 != 0xffffffff) {\n            piVar4 = piVar2;\n        }\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    if (param_1 != 0xffffffff) {\n        piVar1 = param_1;\n    }\n    fcn.0040da8a(*0x418784, piVar1);\n    return piVar4;\n}\n",
        "token_count": 490
    },
    "0040b440": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * fcn.0040b440(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint unaff_retaddr;\n    \n    piVar4 = NULL;\n    piVar1 = fcn.0040db18(*0x418784, param_1);\n    if (piVar1 == NULL) {\n        return NULL;\n    }\n    piVar2 = (*_sym.imp.KERNEL32.dll_CreateFileW)(unaff_retaddr, 0x80000000, 0, 0, 3, 0x80, 0);\n    if ((piVar2 != 0xffffffff) && (piVar2 != NULL)) {\n        if (*0x417124 == 0) {\n            piVar1[1] = 0;\n        }\n        else {\n            iVar3 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x418068, 0, *0x417124);\n            piVar1[1] = iVar3;\n        }\n        *piVar1 = piVar2;\n        iVar3 = *0x417124;\n        piVar1[3] = 0;\n        piVar1[2] = iVar3;\n        piVar1[5] = 1;\n        piVar1[6] = 2;\n        piVar1[7] = 1;\n        piVar4 = piVar1;\n        if (param_1 != 0xffffffff) {\n            piVar4 = piVar2;\n        }\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    if (param_1 != 0xffffffff) {\n        piVar1 = param_1;\n    }\n    fcn.0040da8a(*0x418784, piVar1);\n    return piVar4;\n}\n",
        "token_count": 421
    },
    "0040d7f0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * fcn.0040d7f0(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    piVar3 = NULL;\n    if (param_1 == -1) {\n        if (*0x418168 != 0) {\n            return 0x418170;\n        }\n    }\n    else if (0 < *0x418168) {\n        piVar1 = 0x418170;\n        iVar2 = *0x418168;\n        do {\n            if (*piVar1 == param_1) {\n                piVar3 = piVar1;\n            }\n            piVar1 = piVar1 + 5;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return piVar3;\n}\n",
        "token_count": 191
    },
    "0040d840": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.0040d840(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    \n    piVar5 = NULL;\n    piVar1 = *0x418168;\n    if (param_1 != -1) {\n        if (*0x418168 < 1) goto code_r0x0040d879;\n        piVar2 = 0x418170;\n        piVar4 = *0x418168;\n        do {\n            if (*piVar2 == param_1) {\n                piVar5 = piVar2;\n            }\n            piVar2 = piVar2 + 5;\n            piVar4 = piVar4 + -1;\n            piVar1 = piVar5;\n        } while (piVar4 != NULL);\n    }\n    if (piVar1 != NULL) {\n        return 0;\n    }\ncode_r0x0040d879:\n    iVar3 = *0x418168 + 1;\n    *(*0x418168 * 0x14 + 0x418170) = param_1;\n    *0x418168 = iVar3;\n    return iVar3 * 0x14 + 0x41815c;\n}\n",
        "token_count": 296
    },
    "0040e660": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0040e660(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*0x417168 == -1) {\n        fcn.0040e4d0();\n        uVar1 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*0x417168);\n        fcn.00412722(fcn.0040e620, uVar1);\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*0x417168);\n        if (iVar2 == 0) {\n            fcn.0040ed40();\n            uVar1 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*0x417168);\n            fcn.00412722(fcn.0040e620, uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 184
    },
    "00412104": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.00412104(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    iVar2 = 0;\n    if (param_1 != NULL) {\ncode_r0x00412147:\n        do {\n            do {\n                piVar3 = param_1;\n                iVar1 = *piVar3;\n                if (iVar1 == -1) {\n                    return iVar2;\n                }\n                param_1 = piVar3 + 1;\n            } while (iVar1 < -7);\n            if (iVar1 < -3) {\n                iVar2 = 1;\n            }\n            else {\n                if (iVar1 == -3) {\n                    iVar2 = piVar3[3];\n                    param_1 = piVar3 + 4;\n                }\n                else {\n                    if (iVar1 != -2) goto code_r0x00412147;\n                    iVar2 = piVar3[4];\n                    param_1 = piVar3 + 5;\n                }\n                iVar2 = fcn.00412104(iVar2);\n            }\n        } while (iVar2 == 0);\n    }\n    return iVar2;\n}\n",
        "token_count": 266
    },
    "0041252f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0041252f(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t *piVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t *var_4h;\n    \n    iVar8 = *param_2;\n    while (iVar8 != -1) {\n        piVar7 = param_2 + 1;\n        if (iVar8 == -7) {\n            iVar8 = *piVar7;\n            iVar1 = param_2[2];\n            iVar2 = param_2[3];\n            iVar3 = param_2[4];\n            iVar4 = param_2[5];\n            piVar7 = param_2 + 6;\n            if (0 < iVar1) {\n                piVar6 = param_1 + 4 + iVar8;\n                iVar9 = iVar1;\n                do {\n                    iVar5 = *piVar7;\n                    piVar7 = piVar7 + 1;\n                    *piVar6 = iVar5;\n                    piVar6 = piVar6 + 1;\n                    iVar9 = iVar9 + -1;\n                } while (iVar9 != 0);\n            }\n            (**0x4186b8)(iVar1, iVar2, iVar3, iVar4, iVar8 + param_1);\n        }\n        else if (iVar8 == -6) {\n            (**0x4186c4)(param_2[2], param_2[3], param_2[4], *piVar7 + param_1, param_2[5]);\n            piVar7 = param_2 + 6;\n        }\n        else if (iVar8 == -5) {\n            (**0x4186c0)(param_2[2], *piVar7 + param_1, param_2[3], param_2[4]);\n            piVar7 = param_2 + 5;\n        }\n        else if (iVar8 == -4) {\n            (**0x4186bc)(param_2[2], param_2[3], param_2[4], param_2[5], *piVar7 + param_1);\n            piVar7 = param_2 + 6;\n        }\n        else if (iVar8 == -3) {\n            fcn.0041252f(*piVar7 + param_1, param_2[3]);\n            piVar7 = param_2 + 4;\n        }\n        else if (iVar8 == -2) {\n            iVar8 = *piVar7;\n            iVar1 = param_2[4];\n            piVar7 = param_2 + 5;\n            if (0 < iVar8) {\n                do {\n                    fcn.0041252f();\n                    iVar8 = iVar8 + -1;\n                    piVar7 = var_4h;\n                    param_1 = iVar1;\n                } while (iVar8 != 0);\n            }\n        }\n        param_2 = piVar7;\n        iVar8 = *piVar7;\n    }\n    return;\n}\n",
        "token_count": 704
    },
    "004061e0": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid fcn.004061e0(uint param_1, uint param_2)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    int16_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iStack4;\n    \n    piVar3 = fcn.0040e900(0x20, param_2);\n    if (iStack4 == 0) {\n        *piVar3 = 0x30;\n        piVar4 = piVar3 + 1;\n    }\n    else {\n        piVar4 = piVar3;\n        if (iStack4 < 0) {\n            *piVar3 = 0x2d;\n            piVar4 = piVar3 + 1;\n            if (iStack4 == -0x80000000) {\n                piVar4 = 0x41302c;\n                do {\n                    iVar1 = *piVar4;\n                    piVar4 = piVar4 + 1;\n                    *(piVar3 + -0x209816 + piVar4) = iVar1;\n                } while (iVar1 != 0);\n                piVar4 = piVar3 + 0xb;\n                goto code_r0x004062a2;\n            }\n            iStack4 = -iStack4;\n        }\n        iVar5 = 0;\n        if (iStack4 != 0) {\n            do {\n                iVar6 = iVar5 + 1;\n                iVar2 = iStack4 / 10;\n                (&stack0xffffffe9)[iVar5] = iStack4 + iVar2 * -10 + '0';\n                iStack4 = iVar2;\n                iVar5 = iVar6;\n            } while (iVar2 != 0);\n            for (; 0 < iVar6; iVar6 = iVar6 + -1) {\n                *piVar4 = (&stack0xffffffe8)[iVar6];\n                piVar4 = piVar4 + 1;\n            }\n        }\n    }\ncode_r0x004062a2:\n    fcn.0040ea90(0x20 - (piVar4 - piVar3 >> 1));\n    *piVar4 = 0;\n    return;\n}\n",
        "token_count": 490
    },
    "004062c0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.004062c0(uint32_t param_1, uint param_2)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    \n    param_1 = (param_1 < 0) - 1 & param_1;\n    puVar1 = fcn.0040e900(param_1, param_2);\n    if (param_1 != 0) {\n        puVar3 = puVar1;\n        for (uVar2 = param_1 >> 1; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *puVar3 = 0x200020;\n            puVar3 = puVar3 + 1;\n        }\n        for (uVar2 = (param_1 & 1) != 0; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *puVar3 = 0x20;\n            puVar3 = puVar3 + 2;\n        }\n        *(puVar1 + param_1 * 2) = 0;\n        return;\n    }\n    *puVar1 = 0;\n    return;\n}\n",
        "token_count": 263
    },
    "0040b8b6": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid fcn.0040b8b6(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uchar auStack8 [8];\n    \n    uVar1 = 0;\n    do {\n        auStack8[uVar1] = *(param_2 + 0x14 + (uVar1 < 4) * 4) >> (('\\x03' - (uVar1 & 3)) * '\\b' & 0x1f);\n        uVar1 = uVar1 + 1;\n    } while (uVar1 < 8);\n    fcn.0040ccb6(param_2, 0x4136f0, 1);\n    while ((*(param_2 + 0x14) & 0x1f8) != 0x1c0) {\n        fcn.0040ccb6(param_2, 0x4136f4, 1);\n    }\n    fcn.0040ccb6(param_2, auStack8, 8);\n    uVar1 = 0;\n    do {\n        *(uVar1 + param_1) = *(param_2 + (uVar1 & 0xfffffffc)) >> (('\\x03' - (uVar1 & 3)) * '\\b' & 0x1f);\n        uVar1 = uVar1 + 1;\n    } while (uVar1 < 0x14);\n    sub.MSVCRT.dll_memset(param_2 + 0x1c, 0, 0x40);\n    sub.MSVCRT.dll_memset(param_2, 0, 0x14);\n    sub.MSVCRT.dll_memset(param_2 + 0x14, 0, 8);\n    sub.MSVCRT.dll_memset(auStack8, 0, 8);\n    sub.MSVCRT.dll_memset(param_2 + 0x60, 0, 0x40);\n    return;\n}\n",
        "token_count": 441
    },
    "0040ce4f": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid fcn.0040ce4f(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    \n    if (param_3 != 0) {\n        iVar3 = (param_3 - 1U >> 2) + 1;\n        puVar1 = param_1 + 1;\n        puVar2 = param_2 + 2;\n        do {\n            puVar1[-1] = puVar2[-2];\n            *puVar1 = puVar2[-1];\n            puVar1[1] = *puVar2;\n            puVar1[2] = puVar2[1];\n            iVar3 = iVar3 + -1;\n            puVar1 = puVar1 + 4;\n            puVar2 = puVar2 + 4;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 215
    },
    "0040ce8a": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ce8a(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_8h;\n    \n    fcn.0040ce4f(&var_8h, arg_ch + 0x10, 8);\n    uVar2 = *(arg_ch + 0x10) >> 3 & 0x3f;\n    iVar1 = 0x38;\n    if (0x37 < uVar2) {\n        iVar1 = 0x78;\n    }\n    fcn.0040d632(arg_ch, 0x417128, iVar1 - uVar2);\n    fcn.0040d632(arg_ch, &var_8h, 8);\n    fcn.0040ce4f(arg_8h, arg_ch, 0x10);\n    sub.MSVCRT.dll_memset(arg_ch, 0, 0x58);\n    return;\n}\n",
        "token_count": 220
    },
    "0040d632": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.0040d632(int32_t param_1, int32_t param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = *(param_1 + 0x10) >> 3 & 0x3f;\n    uVar2 = *(param_1 + 0x10) + param_3 * 8;\n    *(param_1 + 0x10) = uVar2;\n    if (uVar2 < param_3 << 3) {\n        *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + (param_3 >> 0x1d);\n    uVar2 = -uVar1 + 0x40;\n    if (param_3 < uVar2) {\n        uVar2 = 0;\n    }\n    else {\n        fcn.0040d6cd(param_1 + 0x18 + uVar1, param_2, uVar2);\n        fcn.0040cf18(param_1, param_1 + 0x18);\n        for (uVar1 = -uVar1 + 0x7f; uVar1 < param_3; uVar1 = uVar1 + 0x40) {\n            fcn.0040cf18(param_1, param_2 + -0x3f + uVar1);\n            uVar2 = uVar2 + 0x40;\n        }\n        uVar1 = 0;\n    }\n    fcn.0040d6cd(param_1 + 0x18 + uVar1, param_2 + uVar2, param_3 - uVar2);\n    return;\n}\n",
        "token_count": 414
    },
    "0040cf18": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid fcn.0040cf18(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    ushort *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t aiStack64 [4];\n    int32_t iStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    int32_t iStack12;\n    int32_t iStack8;\n    int32_t iStack4;\n    \n    iVar1 = *param_1;\n    uVar4 = param_1[1];\n    uVar8 = param_1[2];\n    uVar6 = param_1[3];\n    piVar5 = aiStack64;\n    iVar7 = 0x10;\n    puVar2 = param_2 + 2;\n    do {\n        *piVar5 = CONCAT31(CONCAT21(*puVar2, *(puVar2 + -1)), *(puVar2 + -1));\n        piVar5 = piVar5 + 1;\n        iVar7 = iVar7 + -1;\n        puVar2 = puVar2 + 2;\n    } while (iVar7 != 0);\n    uVar3 = iVar1 + -0x28955b88 + (~uVar4 & uVar6 | uVar8 & uVar4) + aiStack64[0];\n    uVar3 = (uVar3 * 0x80 | uVar3 >> 0x19) + uVar4;\n    uVar6 = uVar6 + 0xe8c7b756 + (~uVar3 & uVar8 | uVar4 & uVar3) + aiStack64[1];\n    uVar6 = (uVar6 * 0x1000 | uVar6 >> 0x14) + uVar3;\n    uVar8 = uVar8 + 0x242070db + (~uVar6 & uVar4 | uVar6 & uVar3) + aiStack64[2];\n    uVar9 = (uVar8 >> 0xf | uVar8 * 0x20000) + uVar6;\n    uVar4 = uVar4 + 0xc1bdceee + (~uVar9 & uVar3 | uVar6 & uVar9) + aiStack64[3];\n    uVar8 = (uVar4 >> 10 | uVar4 * 0x400000) + uVar9;\n    uVar3 = uVar3 + (~uVar8 & uVar6 | uVar9 & uVar8) + 0xf57c0faf + iStack48;\n    uVar4 = (uVar3 * 0x80 | uVar3 >> 0x19) + uVar8;\n    uVar6 = uVar6 + (~uVar4 & uVar9 | uVar8 & uVar4) + 0x4787c62a + iStack44;\n    uVar6 = (uVar6 * 0x1000 | uVar6 >> 0x14) + uVar4;\n    uVar9 = uVar9 + (~uVar6 & uVar8 | uVar6 & uVar4) + 0xa8304613 + iStack40;\n    uVar9 = (uVar9 >> 0xf | uVar9 * 0x20000) + uVar6;\n    uVar8 = uVar8 + (~uVar9 & uVar4 | uVar6 & uVar9) + 0xfd469501 + iStack36;\n    uVar8 = (uVar8 >> 10 | uVar8 * 0x400000) + uVar9;\n    uVar4 = uVar4 + (~uVar8 & uVar6 | uVar9 & uVar8) + 0x698098d8 + iStack32;\n    uVar4 = (uVar4 * 0x80 | uVar4 >> 0x19) + uVar8;\n    uVar6 = uVar6 + (~uVar4 & uVar9 | uVar8 & uVar4) + 0x8b44f7af + iStack28;\n    uVar3 = (uVar6 * 0x1000 | uVar6 >> 0x14) + uVar4;\n    uVar6 = (uVar9 - 0xa44f) + (~uVar3 & uVar8 | uVar3 & uVar4) + iStack24;\n    uVar6 = (uVar6 >> 0xf | uVar6 * 0x20000) + uVar3;\n    uVar8 = uVar8 + (~uVar6 & uVar4 | uVar3 & uVar6) + 0x895cd7be + iStack20;\n    uVar8 = (uVar8 >> 10 | uVar8 * 0x400000) + uVar6;\n    uVar4 = uVar4 + 0x6b901122 + (~uVar8 & uVar3 | uVar6 & uVar8) + iStack16;\n    uVar9 = (uVar4 * 0x80 | uVar4 >> 0x19) + uVar8;\n    uVar4 = uVar3 + 0xfd987193 + (~uVar9 & uVar6 | uVar8 & uVar9) + iStack12;\n    uVar4 = (uVar4 * 0x1000 | uVar4 >> 0x14) + uVar9;\n    uVar6 = uVar6 + 0xa679438e + (~uVar4 & uVar8 | uVar4 & uVar9) + iStack8;\n    uVar6 = (uVar6 >> 0xf | uVar6 * 0x20000) + uVar4;\n    uVar8 = uVar8 + 0x49b40821 + (~uVar6 & uVar9 | uVar4 & uVar6) + iStack4;\n    uVar10 = (uVar8 >> 10 | uVar8 * 0x400000) + uVar6;\n    uVar8 = (~uVar4 & uVar6 | uVar4 & uVar10) + aiStack64[1] + uVar9 + 0xf61e2562;\n    uVar3 = (uVar8 * 0x20 | uVar8 >> 0x1b) + uVar10;\n    uVar4 = (~uVar6 & uVar10 | uVar6 & uVar3) + 0xc040b340 + iStack40 + uVar4;\n    uVar4 = (uVar4 * 0x200 | uVar4 >> 0x17) + uVar3;\n    uVar6 = uVar6 + (~uVar10 & uVar3 | uVar4 & uVar10) + 0x265e5a51 + iStack20;\n    uVar8 = (uVar6 * 0x4000 | uVar6 >> 0x12) + uVar4;\n    uVar10 = uVar10 + (~uVar3 & uVar4 | uVar8 & uVar3) + 0xe9b6c7aa + aiStack64[0];\n    uVar9 = (uVar10 >> 0xc | uVar10 * 0x100000) + uVar8;\n    uVar3 = uVar3 + (~uVar4 & uVar8 | uVar4 & uVar9) + 0xd62f105d + iStack44;\n    uVar6 = (uVar3 * 0x20 | uVar3 >> 0x1b) + uVar9;\n    uVar4 = uVar4 + (~uVar8 & uVar9 | uVar8 & uVar6) + 0x2441453 + iStack24;\n    uVar4 = (uVar4 * 0x200 | uVar4 >> 0x17) + uVar6;\n    uVar8 = uVar8 + (~uVar9 & uVar6 | uVar4 & uVar9) + 0xd8a1e681 + iStack4;\n    uVar8 = (uVar8 * 0x4000 | uVar8 >> 0x12) + uVar4;\n    uVar9 = uVar9 + (~uVar6 & uVar4 | uVar8 & uVar6) + 0xe7d3fbc8 + iStack48;\n    uVar9 = (uVar9 >> 0xc | uVar9 * 0x100000) + uVar8;\n    uVar6 = uVar6 + (~uVar4 & uVar8 | uVar4 & uVar9) + 0x21e1cde6 + iStack28;\n    uVar3 = (uVar6 * 0x20 | uVar6 >> 0x1b) + uVar9;\n    uVar4 = (~uVar8 & uVar9 | uVar8 & uVar3) + 0xc33707d6 + iStack8 + uVar4;\n    uVar6 = (uVar4 * 0x200 | uVar4 >> 0x17) + uVar3;\n    uVar8 = uVar8 + (~uVar9 & uVar3 | uVar6 & uVar9) + 0xf4d50d87 + aiStack64[3];\n    uVar8 = (uVar8 * 0x4000 | uVar8 >> 0x12) + uVar6;\n    uVar9 = uVar9 + (~uVar3 & uVar6 | uVar8 & uVar3) + 0x455a14ed + iStack32;\n    uVar9 = (uVar9 >> 0xc | uVar9 * 0x100000) + uVar8;\n    uVar4 = uVar3 + 0xa9e3e905 + (~uVar6 & uVar8 | uVar6 & uVar9) + iStack12;\n    uVar4 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar9;\n    uVar6 = (~uVar8 & uVar9 | uVar8 & uVar4) + 0xfcefa3f8 + aiStack64[2] + uVar6;\n    uVar6 = (uVar6 * 0x200 | uVar6 >> 0x17) + uVar4;\n    uVar8 = uVar8 + 0x676f02d9 + (~uVar9 & uVar4 | uVar6 & uVar9) + iStack36;\n    uVar3 = (uVar8 * 0x4000 | uVar8 >> 0x12) + uVar6;\n    uVar8 = uVar9 + 0x8d2a4c8a + (~uVar4 & uVar6 | uVar3 & uVar4) + iStack16;\n    uVar8 = (uVar8 >> 0xc | uVar8 * 0x100000) + uVar3;\n    uVar4 = uVar4 + ((uVar6 ^ uVar3 ^ uVar8) - 0x5c6be) + iStack44;\n    uVar4 = (uVar4 * 0x10 | uVar4 >> 0x1c) + uVar8;\n    uVar6 = uVar6 + (uVar3 ^ uVar8 ^ uVar4) + 0x8771f681 + iStack32;\n    uVar6 = (uVar6 * 0x800 | uVar6 >> 0x15) + uVar4;\n    uVar3 = uVar3 + (uVar6 ^ uVar8 ^ uVar4) + 0x6d9d6122 + iStack20;\n    uVar3 = (uVar3 * 0x10000 | uVar3 >> 0x10) + uVar6;\n    uVar8 = uVar8 + (uVar6 ^ uVar3 ^ uVar4) + 0xfde5380c + iStack8;\n    uVar8 = (uVar8 >> 9 | uVar8 * 0x800000) + uVar3;\n    uVar4 = uVar4 + (uVar6 ^ uVar3 ^ uVar8) + 0xa4beea44 + aiStack64[1];\n    uVar4 = (uVar4 * 0x10 | uVar4 >> 0x1c) + uVar8;\n    uVar6 = uVar6 + (uVar3 ^ uVar8 ^ uVar4) + 0x4bdecfa9 + iStack48;\n    uVar6 = (uVar6 * 0x800 | uVar6 >> 0x15) + uVar4;\n    uVar3 = uVar3 + (uVar6 ^ uVar8 ^ uVar4) + 0xf6bb4b60 + iStack36;\n    uVar3 = (uVar3 * 0x10000 | uVar3 >> 0x10) + uVar6;\n    uVar8 = uVar8 + (uVar6 ^ uVar3 ^ uVar4) + 0xbebfbc70 + iStack24;\n    uVar8 = (uVar8 >> 9 | uVar8 * 0x800000) + uVar3;\n    uVar4 = uVar4 + 0x289b7ec6 + (uVar6 ^ uVar3 ^ uVar8) + iStack12;\n    uVar4 = (uVar4 * 0x10 | uVar4 >> 0x1c) + uVar8;\n    uVar6 = uVar6 + (uVar3 ^ uVar8 ^ uVar4) + 0xeaa127fa + aiStack64[0];\n    uVar6 = (uVar6 * 0x800 | uVar6 >> 0x15) + uVar4;\n    uVar3 = uVar3 + (uVar6 ^ uVar8 ^ uVar4) + 0xd4ef3085 + aiStack64[3];\n    uVar3 = (uVar3 * 0x10000 | uVar3 >> 0x10) + uVar6;\n    uVar8 = (uVar6 ^ uVar3 ^ uVar4) + 0x4881d05 + iStack40 + uVar8;\n    uVar8 = (uVar8 >> 9 | uVar8 * 0x800000) + uVar3;\n    uVar4 = (uVar6 ^ uVar3 ^ uVar8) + 0xd9d4d039 + iStack28 + uVar4;\n    uVar4 = (uVar4 * 0x10 | uVar4 >> 0x1c) + uVar8;\n    uVar6 = uVar6 + (uVar3 ^ uVar8 ^ uVar4) + 0xe6db99e5 + iStack16;\n    uVar6 = (uVar6 * 0x800 | uVar6 >> 0x15) + uVar4;\n    uVar3 = uVar3 + (uVar6 ^ uVar8 ^ uVar4) + 0x1fa27cf8 + iStack4;\n    uVar3 = (uVar3 * 0x10000 | uVar3 >> 0x10) + uVar6;\n    uVar8 = uVar8 + (uVar6 ^ uVar3 ^ uVar4) + 0xc4ac5665 + aiStack64[2];\n    uVar8 = (uVar8 >> 9 | uVar8 * 0x800000) + uVar3;\n    uVar4 = uVar4 + ((~uVar6 | uVar8) ^ uVar3) + 0xf4292244 + aiStack64[0];\n    uVar4 = (uVar4 * 0x40 | uVar4 >> 0x1a) + uVar8;\n    uVar6 = uVar6 + ((~uVar3 | uVar4) ^ uVar8) + 0x432aff97 + iStack36;\n    uVar6 = (uVar6 * 0x400 | uVar6 >> 0x16) + uVar4;\n    uVar3 = uVar3 + ((~uVar8 | uVar6) ^ uVar4) + 0xab9423a7 + iStack8;\n    uVar3 = (uVar3 * 0x8000 | uVar3 >> 0x11) + uVar6;\n    uVar8 = uVar8 + ((~uVar4 | uVar3) ^ uVar6) + 0xfc93a039 + iStack44;\n    uVar8 = (uVar8 >> 0xb | uVar8 * 0x200000) + uVar3;\n    uVar4 = uVar4 + ((~uVar6 | uVar8) ^ uVar3) + 0x655b59c3 + iStack16;\n    uVar4 = (uVar4 * 0x40 | uVar4 >> 0x1a) + uVar8;\n    uVar6 = uVar6 + ((~uVar3 | uVar4) ^ uVar8) + 0x8f0ccc92 + aiStack64[3];\n    uVar6 = (uVar6 * 0x400 | uVar6 >> 0x16) + uVar4;\n    uVar3 = uVar3 + (((~uVar8 | uVar6) ^ uVar4) - 0x100b83) + iStack24;\n    uVar3 = (uVar3 * 0x8000 | uVar3 >> 0x11) + uVar6;\n    uVar8 = uVar8 + ((~uVar4 | uVar3) ^ uVar6) + 0x85845dd1 + aiStack64[1];\n    uVar8 = (uVar8 >> 0xb | uVar8 * 0x200000) + uVar3;\n    uVar4 = uVar4 + ((~uVar6 | uVar8) ^ uVar3) + 0x6fa87e4f + iStack32;\n    uVar4 = (uVar4 * 0x40 | uVar4 >> 0x1a) + uVar8;\n    uVar6 = uVar6 + 0xfe2ce6e0 + ((~uVar3 | uVar4) ^ uVar8) + iStack4;\n    uVar6 = (uVar6 * 0x400 | uVar6 >> 0x16) + uVar4;\n    uVar3 = uVar3 + ((~uVar8 | uVar6) ^ uVar4) + 0xa3014314 + iStack40;\n    uVar10 = (uVar3 * 0x8000 | uVar3 >> 0x11) + uVar6;\n    uVar8 = uVar8 + 0x4e0811a1 + ((~uVar4 | uVar10) ^ uVar6) + iStack12;\n    uVar3 = (uVar8 >> 0xb | uVar8 * 0x200000) + uVar10;\n    uVar4 = uVar4 + 0xf7537e82 + ((~uVar6 | uVar3) ^ uVar10) + iStack48;\n    uVar9 = (uVar4 * 0x40 | uVar4 >> 0x1a) + uVar3;\n    uVar4 = uVar6 + 0xbd3af235 + ((~uVar10 | uVar9) ^ uVar3) + iStack20;\n    uVar6 = (uVar4 * 0x400 | uVar4 >> 0x16) + uVar9;\n    uVar4 = uVar10 + 0x2ad7d2bb + ((~uVar3 | uVar6) ^ uVar9) + aiStack64[2];\n    uVar8 = (uVar4 * 0x8000 | uVar4 >> 0x11) + uVar6;\n    *param_1 = iVar1 + uVar9;\n    param_1[2] = param_1[2] + uVar8;\n    uVar4 = uVar3 + 0xeb86d391 + ((~uVar9 | uVar8) ^ uVar6) + iStack28;\n    param_1[3] = param_1[3] + uVar6;\n    param_1[1] = (uVar4 >> 0xb | uVar4 * 0x200000) + param_1[1] + uVar8;\n    return;\n}\n",
        "token_count": 4756
    },
    "0040ea90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ea90(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*0x417168);\n    *(iVar1 + 8) = *(iVar1 + 8) + arg_8h * -2;\n    return;\n}\n",
        "token_count": 85
    },
    "0040eac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040eac0(uint8_t *arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puVar2 = arg_8h;\n    var_8h = 0;\n    puVar3 = arg_8h;\n    while ((arg_8h = puVar3,  *arg_8h != 0 && (var_8h < arg_ch))) {\n        uVar1 = *arg_8h;\n        if ((uVar1 & 0x80) == 0) {\n            var_8h = var_8h + 1;\n            puVar3 = arg_8h + 1;\n        }\n        else if ((uVar1 & 0xe0) == 0xc0) {\n            puVar3 = arg_8h + 1;\n            if ((arg_8h[1] & 0xc0) == 0x80) {\n                var_8h = var_8h + 1;\n                puVar3 = arg_8h + 2;\n            }\n        }\n        else if (((uVar1 & 0xf0) == 0xe0) && (arg_8h[1] != 0)) {\n            if (((arg_8h[1] & 0xc0) == 0x80) && ((arg_8h[2] & 0xc0) == 0x80)) {\n                var_8h = var_8h + 1;\n                puVar3 = arg_8h + 3;\n            }\n            else if ((arg_8h[1] & 0xc0) == 0x80) {\n                puVar3 = arg_8h + 2;\n            }\n            else {\n                puVar3 = arg_8h + 1;\n            }\n        }\n        else if (((uVar1 & 0xf8) == 0xf0) && ((arg_8h[1] != 0 && (arg_8h[2] != 0)))) {\n            if ((((arg_8h[1] & 0xc0) == 0x80) && ((arg_8h[2] & 0xc0) == 0x80)) && ((arg_8h[3] & 0xc0) == 0x80)) {\n                var_8h = var_8h + 1;\n                puVar3 = arg_8h + 4;\n            }\n            else if (((arg_8h[1] & 0xc0) == 0x80) && ((arg_8h[2] & 0xc0) == 0x80)) {\n                puVar3 = arg_8h + 3;\n            }\n            else if ((arg_8h[1] & 0xc0) == 0x80) {\n                puVar3 = arg_8h + 2;\n            }\n            else {\n                puVar3 = arg_8h + 1;\n            }\n        }\n        else {\n            puVar3 = arg_8h + 1;\n        }\n    }\n    return arg_8h - puVar2;\n}\n",
        "token_count": 738
    },
    "0040196c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040196c(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint extraout_EDX;\n    uint extraout_EDX_00;\n    uint extraout_EDX_01;\n    uint extraout_EDX_02;\n    int32_t arg_ch;\n    uint *arg_8h;\n    uchar *puVar5;\n    uchar *arg_8h_00;\n    int32_t iVar6;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0;\n    uStack12 = 0;\n    uStack16 = 0;\n    iVar6 = 0;\n    fcn.0040e660();\n    *0x41808c = 0x4170ff;\n    puVar5 = NULL;\n    do {\n        if (3 < puVar5) break;\n        iVar6 = **0x41808c;\n        *0x41808c = *0x41808c + 1;\n        uVar1 = fcn.0040e520();\n        fcn.0040e520();\n        arg_ch = -iVar6;\n        fcn.00405dc0();\n        fcn.0040e560(&stack0xffffffe4, arg_ch);\n        fcn.0040e520();\n        fcn.0040e6c0(uVar1);\n        fcn.0040e6c0(arg_ch);\n        arg_8h_00 = &stack0xffffffd8;\n        fcn.0040e560(arg_8h_00, arg_ch);\n        puVar5 = arg_8h_00 + 1;\n    } while (!SCARRY4(arg_8h_00, 1));\n    uStack16 = fcn.0040a220();\n    fcn.0040e520();\n    uVar1 = fcn.0040e520();\n    fcn.0040add6();\n    arg_8h = &uStack16;\n    fcn.0040e560(arg_8h, uVar1);\n    sub.KERNEL32.dll_GetTempFileNameW(iVar6, 0x417024, 0, puVar5);\n    uVar1 = extraout_EDX;\n    uVar2 = fcn.0040e520(extraout_EDX);\n    uVar1 = fcn.0040e520(uVar1, uVar2);\n    fcn.0040a240(arg_8h, uVar1);\n    fcn.0040e560(0x4180d0, arg_8h);\n    fcn.0040ae67(*0x4180d0);\n    uVar2 = *0x4180d0;\n    fcn.0040ad45(*0x4180d0);\n    sub.KERNEL32.dll_GetTempFileNameW(*0x4180d0, 0x417024, 0, uVar1);\n    uVar1 = extraout_EDX_00;\n    uVar3 = fcn.0040e520(extraout_EDX_00);\n    uVar4 = fcn.0040e520(uVar1, uVar3);\n    fcn.0040a240();\n    fcn.0040e560(0x418084, uVar2);\n    fcn.0040ae67(*0x418084);\n    fcn.0040ad45(*0x418084);\n    sub.KERNEL32.dll_GetTempFileNameW(*0x418084, 0x417024, 0);\n    sub.SHLWAPI.DLL_PathAddBackslashW(*0x418084);\n    uVar1 = extraout_EDX_01;\n    uVar2 = fcn.0040e520(extraout_EDX_01);\n    uVar1 = fcn.0040e520(uVar1, uVar2);\n    fcn.0040a240(uVar4, uVar1);\n    fcn.0040e560(0x418098, uVar4);\n    fcn.0040ae67(*0x418098);\n    uVar3 = *0x418098;\n    sub.SHLWAPI.DLL_PathRenameExtensionW(*0x418098, uVar1);\n    uVar2 = *0x418084;\n    sub.KERNEL32.dll_GetTempFileNameW(*0x418084, 0x417024, 0, uVar4);\n    uVar1 = extraout_EDX_02;\n    uVar4 = fcn.0040e520(extraout_EDX_02);\n    uVar1 = fcn.0040e520(uVar1, uVar4);\n    fcn.0040a240(uVar3, uVar1);\n    uVar1 = 0x4180c8;\n    fcn.0040e560(0x4180c8, uVar3);\n    fcn.0040a200(uVar2);\n    fcn.0040e5f0(uVar2);\n    fcn.0040e5f0(uVar1);\n    fcn.0040e5f0(uVar1);\n    return;\n}\n",
        "token_count": 1131
    },
    "00401e66": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401e66(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    uint extraout_EDX;\n    uchar *puVar2;\n    uchar *arg_8h;\n    uchar *puStack32;\n    uint uStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0;\n    uStack12 = 0;\n    iStack16 = 0x401e70;\n    fcn.0040e660();\n    iStack16 = param_2;\n    uStack20 = 0x401e79;\n    fcn.004051a0();\n    uStack20 = extraout_EDX;\n    uStack20 = fcn.0040e520();\n    uVar1 = fcn.0040e520();\n    fcn.00409698();\n    puStack32 = 0x401e98;\n    puVar2 = &stack0xffffffec;\n    fcn.0040e560(&stack0xffffffec, uVar1);\n    puStack32 = puVar2;\n    sub.SHLWAPI.DLL_PathQuoteSpacesW();\n    if (iStack16 < 1) {\n        puVar2 = puStack32;\n        fcn.0040e520();\n        fcn.0040e6c0(puVar2);\n        fcn.0040e560(&stack0xffffffe0, puVar2);\n    }\n    else {\n        uVar1 = fcn.0040e520();\n        fcn.0040249d();\n        arg_8h = &stack0xffffffe4;\n        fcn.0040e560(arg_8h, uVar1);\n        puVar2 = arg_8h;\n        uVar1 = fcn.0040e520();\n        fcn.0040e6c0(arg_8h);\n        fcn.0040e6c0(0x41702a);\n        fcn.0040e6c0(uVar1);\n        fcn.0040e560(&stack0xffffffd0, uVar1);\n    }\n    uVar1 = fcn.0040e520();\n    fcn.0040e6c0(puVar2);\n    fcn.00405170(puVar2);\n    fcn.0040e5f0(uVar1);\n    fcn.0040e5f0(uVar1);\n    return;\n}\n",
        "token_count": 540
    },
    "00402068": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00402068(void)\n\n{\n    *0x4180c0 = fcn.00405100();\n    *0x418088 = fcn.00405100();\n    *0x4180a4 = fcn.00405100();\n    *0x4180dc = fcn.00405100();\n    *0x4180d4 = fcn.00405100();\n    return 0;\n}\n",
        "token_count": 94
    },
    "00402664": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00402664(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint unaff_retaddr;\n    uint uVar2;\n    \n    uVar2 = 0;\n    fcn.0040e660(0, 0);\n    uVar1 = sub.KERNEL32.dll_LoadResource(param_1, param_2);\n    uVar1 = sub.KERNEL32.dll_SizeofResource(uVar2, unaff_retaddr, uVar1);\n    *0x418078 = uVar1;\n    uVar2 = fcn.0040a220();\n    fcn.0040a300(uVar1, uVar2, *0x418078);\n    sub.KERNEL32.dll_FreeResource(uVar1);\n    return uVar1;\n}\n",
        "token_count": 172
    },
    "00402ba6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00402ba6(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint arg_8h;\n    uint extraout_EDX;\n    uint uVar2;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0;\n    uStack8 = 0;\n    uStack12 = 0;\n    uStack16 = 0x402bb0;\n    fcn.0040e660();\n    uStack16 = param_2;\n    uStack20 = 0x402bb9;\n    fcn.004051a0();\n    uStack20 = 0x402bc5;\n    fcn.00405060();\n    uStack20 = 10000;\n    uStack24 = 0x402bcf;\n    uStack28 = fcn.0040a220();\n    uStack24 = 10000;\n    uStack32 = uStack20;\n    uStack36 = 0x402be5;\n    uStack16 = uStack28;\n    sub.KERNEL32.dll_GetShortPathNameW();\n    uStack36 = extraout_EDX;\n    uVar1 = fcn.0040e520();\n    uVar2 = uStack36;\n    uStack36 = uVar1;\n    uVar1 = fcn.0040e520(uVar2);\n    uVar2 = uStack28;\n    fcn.0040a290(uStack28, 0xffffffff, uVar1);\n    fcn.0040e560(&stack0xffffffdc, uVar2);\n    uVar1 = uVar2;\n    fcn.0040a200();\n    arg_8h = fcn.0040e520();\n    fcn.0040e6c0(uVar1);\n    fcn.00405170(uVar1);\n    fcn.0040e5f0(arg_8h);\n    fcn.0040e5f0(uVar2);\n    return;\n}\n",
        "token_count": 475
    },
    "00402eed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * fcn.00402eed(uint param_1)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint extraout_EDX;\n    int32_t extraout_EDX_00;\n    uchar *puVar4;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0;\n    uStack12 = 0;\n    uStack16 = 0;\n    uStack20 = 0;\n    uStack24 = 0x402ef9;\n    fcn.0040e660();\n    uStack24 = param_1;\n    fcn.004051a0();\n    uStack24 = *0x41707c;\n    uStack20 = *0x417080;\n    *0x41808c = 0x417084;\n    fcn.00405110(*0x41707c);\n    fcn.00405110(uStack24);\n    uVar2 = extraout_EDX;\n    uVar1 = fcn.0040e520(extraout_EDX);\n    uVar1 = fcn.0040e520(uVar2, uVar1);\n    uVar1 = fcn.0040e520(uVar2, uVar1);\n    uVar2 = fcn.0040e520(uVar2, uVar1);\n    puVar4 = &stack0xffffffe8;\n    fcn.0040d7a0(puVar4, 8, 1, uVar2);\n    fcn.00405182();\n    puVar4 = puVar4 + extraout_EDX_00;\n    fcn.00405eb0();\n    iVar3 = fcn.00405170();\n    return puVar4 + iVar3;\n}\n",
        "token_count": 401
    },
    "00402fad": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x004011b6: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x004011bb)\n\nvoid fcn.00402fad(void)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    uint uVar3;\n    uint extraout_EDX;\n    int32_t extraout_EDX_00;\n    uint extraout_EDX_01;\n    int32_t extraout_EDX_02;\n    uint extraout_EDX_03;\n    uint extraout_EDX_04;\n    int32_t extraout_EDX_05;\n    uint extraout_EDX_06;\n    int32_t extraout_EDX_07;\n    uint extraout_EDX_08;\n    uint extraout_EDX_09;\n    uint extraout_EDX_10;\n    int32_t extraout_EDX_11;\n    bool bVar4;\n    ulong uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uStack172;\n    uint uStack144;\n    uint uStack120;\n    uint uStack116;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uchar *puVar9;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0;\n    uStack8 = 0;\n    uStack12 = 0;\n    uStack16 = 0;\n    uStack20 = 0;\n    uStack24 = 0;\n    uStack28 = 0x402fba;\n    fcn.0040e660();\n    uStack32 = 0x402fc0;\n    uStack28 = extraout_EDX;\n    uVar2 = fcn.0040e520();\n    uStack32 = uStack28;\n    uStack36 = 0x402fc8;\n    uStack28 = uVar2;\n    uVar2 = fcn.0040e520();\n    uStack36 = uStack32;\n    uStack40 = 0x402fd0;\n    uStack32 = uVar2;\n    uVar2 = fcn.0040e520();\n    uStack40 = uStack36;\n    uStack44 = 0x402fd8;\n    uStack36 = uVar2;\n    uStack40 = fcn.0040e520();\n    uStack44 = 1;\n    iVar6 = *0x4180a0;\n    fcn.0040d780();\n    fcn.00405182();\n    iVar6 = iVar6 + extraout_EDX_00;\n    fcn.00405eb0();\n    puVar9 = &stack0xffffffd4;\n    uStack56 = 0x403001;\n    fcn.0040e560(puVar9, iVar6);\n    uStack60 = 0x403007;\n    uStack56 = extraout_EDX_01;\n    uVar2 = fcn.0040e520();\n    uStack60 = uStack56;\n    uStack64 = 0x40300f;\n    uStack56 = uVar2;\n    uVar2 = fcn.0040e520();\n    uStack64 = uStack60;\n    uStack68 = 0x403017;\n    uStack60 = uVar2;\n    uVar2 = fcn.0040e520();\n    uStack68 = uStack64;\n    uStack72 = 0x40301f;\n    uStack64 = uVar2;\n    uStack68 = fcn.0040e520();\n    uStack72 = 1;\n    fcn.0040d780();\n    fcn.00405182();\n    puVar9 = puVar9 + extraout_EDX_02;\n    fcn.00405eb0();\n    puStack84 = 0x403046;\n    puVar1 = &stack0xffffffb8;\n    fcn.0040e560(&stack0xffffffb8, puVar9);\n    puStack84 = puVar1;\n    uStack88 = 0x40304e;\n    uVar5 = fcn.00402e49();\n    uStack92 = 0x403058;\n    uVar2 = fcn.0040e520();\n    uStack88 = uVar5 >> 0x20;\n    uStack92 = uVar5;\n    uStack96 = 0x403063;\n    uStack88 = uVar2;\n    fcn.00402150();\n    uStack96 = 0x403068;\n    fcn.004051a0();\n    uStack96 = extraout_EDX_03;\n    uStack96 = fcn.0040e520();\n    fcn.0040e520();\n    uVar2 = *0x418080;\n    fcn.00409355();\n    uStack116 = 0x403093;\n    fcn.0040e560(&stack0xffffffa0, uVar2);\n    bVar4 = true;\n    uStack116 = 0x40309e;\n    fcn.00405120();\n    if (bVar4) {\n        uStack120 = 0x4030aa;\n        uStack116 = extraout_EDX_04;\n        uVar2 = fcn.0040e520();\n        uStack120 = uStack116;\n        uStack116 = uVar2;\n        uStack120 = fcn.0040e520();\n        fcn.0040e520();\n        fcn.0040e520();\n        iVar6 = *0x4180a0;\n        fcn.0040d780();\n        fcn.00405182();\n        iVar6 = iVar6 + extraout_EDX_05;\n        fcn.00405eb0();\n        uStack144 = 0x4030eb;\n        fcn.0040e560(&stack0xffffff88, iVar6);\n        uStack144 = extraout_EDX_06;\n        uStack144 = fcn.0040e520();\n        fcn.0040e520();\n        uVar2 = fcn.0040e520();\n        fcn.0040e520();\n        iVar6 = *0x4180a0;\n        fcn.0040d780();\n        fcn.00405182();\n        iVar6 = iVar6 + extraout_EDX_07;\n        fcn.00405eb0();\n        uStack172 = 0x403132;\n        fcn.0040e560(&stack0xffffff70, iVar6);\n        uStack172 = extraout_EDX_08;\n        uStack172 = fcn.0040e520();\n        fcn.00403e37(uVar2, 0);\n        uVar8 = 0x4180b4;\n        fcn.0040e560(0x4180b4, uVar2);\n        uVar3 = fcn.0040e520(extraout_EDX_09);\n        uVar7 = 0;\n        uVar2 = uStack172;\n        fcn.00403e37(uStack172, 0, uVar3);\n        fcn.0040e560(&stack0xffffff54, uVar2);\n        sub.SHLWAPI.DLL_PathAddBackslashW(uVar7);\n        uVar3 = fcn.0040e520(extraout_EDX_10);\n        uVar3 = fcn.0040e520(uVar2, uVar8, uVar3);\n        fcn.0040e6c0(uVar2);\n        iVar6 = *0x4180b4;\n        fcn.0040e6c0(*0x4180b4);\n        fcn.00405182();\n        fcn.004023b8(iVar6 + extraout_EDX_11);\n        fcn.004051a0();\n        uVar7 = fcn.0040e520();\n        fcn.0040e6c0(uVar3);\n        uVar8 = 0x4180a8;\n        fcn.0040e560(0x4180a8, uVar3);\n        uVar2 = *0x4180a8;\n        sub.SHLWAPI.DLL_PathRemoveBackslashW(*0x4180a8, uVar8, uVar3, uVar7);\n        fcn.00402c55(uVar2);\n    }\n    fcn.00405373(0x4011bb, 0);\n    fcn.00409fd0();\n    fcn.0040ad35();\n    fcn.0040b110();\n    fcn.0040d944();\n    fcn.0040a1b0();\n    return;\n}\n",
        "token_count": 1986
    },
    "00403539": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403539(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint extraout_EDX;\n    bool bVar4;\n    int32_t unaff_retaddr;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0;\n    uStack12 = 0;\n    uStack16 = 0x403543;\n    fcn.0040e660();\n    uStack16 = param_3;\n    uStack20 = 0x40354c;\n    fcn.004051a0();\n    uStack20 = 0x403558;\n    fcn.00405060();\n    uStack24 = extraout_EDX;\n    if (unaff_retaddr == 0) {\n        uVar1 = fcn.0040e520();\n        uVar2 = uStack24;\n        uStack24 = uVar1;\n        uVar2 = fcn.0040e520(uVar2);\n        fcn.0040ae75();\n        fcn.0040e560(&stack0xfffffff0, uVar2);\n    }\n    else if (unaff_retaddr == 1) {\n        uStack24 = *0x4180d0;\n        uVar1 = fcn.0040e520();\n        uVar2 = uStack24;\n        uStack24 = uVar1;\n        fcn.0040e6c0(uVar2);\n        fcn.0040e560(&stack0xfffffff0, uVar2);\n    }\n    else if (unaff_retaddr == 2) {\n        uVar1 = fcn.0040e520();\n        uVar2 = uStack24;\n        uStack24 = uVar1;\n        uVar2 = fcn.0040e520(uVar2);\n        uVar1 = 4;\n        fcn.0040aeba();\n        fcn.0040e560(&stack0xffffffec, uVar1);\n    }\n    else if (unaff_retaddr == 3) {\n        uVar1 = fcn.0040e520();\n        uVar2 = uStack24;\n        uStack24 = uVar1;\n        uVar2 = fcn.0040e520(uVar2);\n        uVar1 = 0;\n        fcn.0040aeba();\n        fcn.0040e560(&stack0xffffffec, uVar1);\n    }\n    else if (unaff_retaddr == 4) {\n        uVar1 = fcn.0040e520();\n        uVar2 = uStack24;\n        uStack24 = uVar1;\n        uVar2 = fcn.0040e520(uVar2);\n        uVar1 = 3;\n        fcn.0040aeba();\n        fcn.0040e560(&stack0xffffffec, uVar1);\n    }\n    else if (unaff_retaddr == 5) {\n        uVar1 = fcn.0040e520();\n        uVar2 = uStack24;\n        uStack24 = uVar1;\n        uVar2 = fcn.0040e520(uVar2);\n        uVar1 = 8;\n        fcn.0040aeba();\n        fcn.0040e560(&stack0xffffffec, uVar1);\n    }\n    else if (unaff_retaddr == 6) {\n        uVar1 = fcn.0040e520();\n        uVar2 = uStack24;\n        uStack24 = uVar1;\n        uVar2 = fcn.0040e520(uVar2);\n        uVar1 = 7;\n        fcn.0040aeba();\n        fcn.0040e560(&stack0xffffffec, uVar1);\n    }\n    else if (unaff_retaddr == 7) {\n        uVar1 = fcn.0040e520();\n        uVar2 = uStack24;\n        uStack24 = uVar1;\n        uVar2 = fcn.0040e520(uVar2);\n        uVar1 = 6;\n        fcn.0040aeba();\n        fcn.0040e560(&stack0xffffffec, uVar1);\n    }\n    else if (unaff_retaddr == 8) {\n        uVar1 = fcn.0040e520();\n        uVar2 = uStack24;\n        uStack24 = uVar1;\n        uVar2 = fcn.0040e520(uVar2);\n        uVar1 = 2;\n        fcn.0040aeba();\n        fcn.0040e560(&stack0xffffffec, uVar1);\n    }\n    else if (unaff_retaddr == 9) {\n        uVar1 = fcn.0040e520();\n        uVar2 = uStack24;\n        uStack24 = uVar1;\n        uVar2 = fcn.0040e520(uVar2);\n        uVar1 = 1;\n        fcn.0040aeba();\n        fcn.0040e560(&stack0xffffffec, uVar1);\n    }\n    else if (unaff_retaddr == 10) {\n        uVar1 = fcn.0040e520();\n        uVar2 = uStack24;\n        uStack24 = uVar1;\n        uVar2 = fcn.0040e520(uVar2);\n        uVar1 = uStack16;\n        fcn.00409355(uStack16, 0x417024);\n        fcn.0040e560(&stack0xffffffe8, uVar1);\n        bVar4 = true;\n        fcn.00405120();\n        if (bVar4) {\n            fcn.004056d8(1);\n        }\n        else {\n            fcn.00401fba(0);\n        }\n    }\n    else {\n        uVar1 = fcn.0040e520();\n        uVar2 = uStack24;\n        uStack24 = uVar1;\n        uVar2 = fcn.0040e520(uVar2);\n        fcn.0040ae75();\n        fcn.0040e560(&stack0xfffffff0, uVar2);\n    }\n    uVar1 = uStack24;\n    uVar3 = fcn.0040e520();\n    fcn.0040e6c0(uVar1);\n    fcn.00405170(uVar1, uVar3);\n    fcn.0040e5f0(uVar2);\n    fcn.0040e5f0(uVar2);\n    return;\n}\n",
        "token_count": 1469
    },
    "00403c83": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00403c83(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t extraout_EDX_01;\n    int32_t extraout_EDX_02;\n    uchar *puVar6;\n    uint uVar7;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0;\n    uStack12 = 0;\n    uStack16 = 0;\n    fcn.0040e660();\n    fcn.00405060();\n    fcn.00405060();\n    fcn.00405060();\n    fcn.00405060();\n    uVar3 = *0x418098;\n    fcn.0040e520();\n    fcn.0040e6c0(uVar3);\n    fcn.0040e560(&uStack16, uVar3);\n    sub.SHLWAPI.DLL_PathQuoteSpacesW();\n    fcn.0040e520();\n    uVar7 = 0;\n    fcn.0040e6c0(0);\n    puVar6 = &stack0xffffffc8;\n    fcn.0040e6c0(0x41702a);\n    fcn.0040e6c0(uVar7);\n    fcn.0040e560(&stack0xffffffc8, uVar7);\n    sub.SHLWAPI.DLL_PathQuoteSpacesW(puVar6);\n    uVar3 = extraout_EDX;\n    uVar1 = fcn.0040e520(extraout_EDX);\n    iVar2 = fcn.0040e520(uVar3, 0x44, uVar1);\n    uVar3 = fcn.0040e520(uVar3);\n    fcn.0040ae75(uVar3);\n    fcn.0040e720();\n    fcn.0040e520();\n    fcn.0040e6c0(uVar7);\n    fcn.0040e6c0(0x41702a);\n    fcn.0040e6c0(iVar2);\n    fcn.0040e720();\n    iVar5 = iVar2;\n    iVar4 = fcn.0040e520();\n    fcn.0040e6c0(iVar2);\n    fcn.0040e6c0(iVar5);\n    fcn.00405182();\n    iVar5 = iVar5 + extraout_EDX_00;\n    fcn.00405182(iVar5);\n    iVar2 = iVar2 + extraout_EDX_01;\n    fcn.00405182(iVar5, iVar2);\n    fcn.00409a05(iVar5, iVar2, iVar4 + extraout_EDX_02);\n    *0x4180cc = fcn.004051a0();\n    while( true ) {\n        iVar5 = fcn.004098f7(*0x4180cc);\n        uVar3 = *0x4180cc;\n        if (iVar5 == 0) break;\n        fcn.004056d8();\n    }\n    fcn.0040993e();\n    uVar7 = *0x4180cc;\n    fcn.00409f4c(*0x4180cc);\n    uVar1 = *0x4180cc;\n    fcn.0040994f();\n    fcn.0040e5f0(uVar1);\n    fcn.0040e5f0(uVar7);\n    fcn.0040e5f0(uVar3);\n    fcn.0040e5f0(uVar7);\n    fcn.0040e5f0(uVar1);\n    return;\n}\n",
        "token_count": 845
    },
    "0040469c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.0040469c(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint arg_ch;\n    uint *arg_8h;\n    uchar *puVar3;\n    uchar *arg_8h_00;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0;\n    uStack12 = 0;\n    uStack16 = 0;\n    fcn.0040e660();\n    *0x41808c = 0x4170ac;\n    puVar3 = NULL;\n    do {\n        if (0x1b < puVar3) break;\n        iVar1 = **0x41808c;\n        *0x41808c = *0x41808c + 1;\n        uVar2 = fcn.0040e520();\n        fcn.0040e520();\n        iVar1 = -iVar1;\n        fcn.00405dc0();\n        fcn.0040e560(&stack0xffffffe8, iVar1);\n        fcn.0040e520();\n        fcn.0040e6c0(uVar2);\n        fcn.0040e6c0(iVar1);\n        arg_8h_00 = &stack0xffffffdc;\n        fcn.0040e560(arg_8h_00, iVar1);\n        puVar3 = arg_8h_00 + 1;\n    } while (!SCARRY4(arg_8h_00, 1));\n    fcn.0040e520();\n    uVar2 = uStack12;\n    arg_ch = fcn.00405100();\n    fcn.00403539();\n    arg_8h = &uStack16;\n    fcn.0040e560(arg_8h, arg_ch);\n    fcn.0040afda(puVar3);\n    fcn.0040e5f0(uVar2);\n    fcn.0040e5f0(arg_8h);\n    fcn.0040e5f0(arg_ch);\n    return;\n}\n",
        "token_count": 456
    },
    "00405120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405120(int16_t *param_1, int16_t *param_2)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    \n    if (param_2 == NULL) {\n        param_2 = 0x417062;\n    }\n    if (param_1 == NULL) {\n        param_1 = 0x417062;\n    }\n    do {\n        iVar1 = *param_2;\n        param_2 = param_2 + 1;\n        iVar2 = *param_1;\n        param_1 = param_1 + 1;\n        if (iVar1 != iVar2) {\n            return 0;\n        }\n    } while (iVar1 != 0);\n    return 1;\n}\n",
        "token_count": 166
    },
    "00405430": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405430(int32_t param_1)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    \n    uVar1 = fcn.004053e4(param_1, 0);\n    (*_sym.imp.KERNEL32.dll_TerminateThread)(uVar1);\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x418708);\n    puVar2 = *0x41811c;\n    do {\n        if (puVar2 == NULL) {\ncode_r0x0040547f:\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x418708);\n            return;\n        }\n        if (puVar2[3] == param_1) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(puVar2[2]);\n            fcn.0040e1b2(0x41811c, puVar2 + 2);\n            goto code_r0x0040547f;\n        }\n        puVar2 = *puVar2;\n    } while( true );\n}\n",
        "token_count": 228
    },
    "0040552c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nbool fcn.0040552c(uint *param_1)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    \n    sub.MSVCRT.dll_memset(param_1, 0, 0x11c);\n    *param_1 = 0x11c;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(L\"ntdll.dll\");\n    if ((iVar1 != 0) && (pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"RtlGetVersion\"),  pcVar2 != NULL)) {\n        iVar1 = (*pcVar2)(param_1);\n        return iVar1 == 0;\n    }\n    return false;\n}\n",
        "token_count": 159
    },
    "00405de0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00405de0(int16_t *param_1)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    \n    if (param_1 != NULL) {\n        piVar1 = param_1 + 1;\n        do {\n            iVar2 = *param_1;\n            param_1 = param_1 + 1;\n        } while (iVar2 != 0);\n        return param_1 - piVar1 >> 1;\n    }\n    return 0;\n}\n",
        "token_count": 114
    },
    "00405e10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405e10(int16_t *param_1)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    int32_t iVar5;\n    int16_t *arg_8h;\n    int32_t unaff_EDI;\n    int32_t arg_8h_00;\n    \n    arg_8h = param_1;\n    if (param_1 == NULL) {\n        arg_8h = 0x413024;\n    }\n    piVar4 = arg_8h;\n    do {\n        iVar1 = *piVar4;\n        piVar4 = piVar4 + 1;\n    } while (iVar1 != 0);\n    arg_8h_00 = piVar4 - (arg_8h + 1) >> 1;\n    iVar2 = fcn.0040e880(arg_8h);\n    iVar3 = fcn.0040e900(arg_8h_00, param_1);\n    if (arg_8h_00 != 0) {\n        if (iVar2 != 0) {\n            arg_8h = fcn.0040ea10(iVar2);\n        }\n        piVar4 = arg_8h + arg_8h_00 + -1;\n        if (arg_8h <= piVar4) {\n            iVar5 = iVar3 - arg_8h;\n            iVar2 = (iVar3 + (arg_8h_00 + -1) * 2) - piVar4;\n            do {\n                iVar1 = *arg_8h;\n                *(arg_8h + iVar5) = *piVar4;\n                arg_8h = arg_8h + 1;\n                *(iVar2 + piVar4) = iVar1;\n                piVar4 = piVar4 + -1;\n                arg_8h_00 = unaff_EDI;\n            } while (arg_8h <= piVar4);\n        }\n    }\n    *(iVar3 + arg_8h_00 * 2) = 0;\n    return;\n}\n",
        "token_count": 464
    },
    "00405f90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405f90(int16_t *param_1, int16_t *param_2)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    int32_t arg_8h;\n    ushort *arg_8h_00;\n    int16_t *piVar3;\n    int16_t *piVar4;\n    int32_t unaff_EBP;\n    int16_t *piVar5;\n    int16_t iVar6;\n    \n    iVar6 = 0x20;\n    if (param_2 != NULL) {\n        iVar6 = *param_2;\n    }\n    arg_8h = fcn.00405de0(param_1);\n    if (param_1 == NULL) {\n        piVar3 = NULL;\n        piVar5 = param_1;\n    }\n    else {\n        iVar2 = *param_1;\n        piVar5 = param_1;\n        while (iVar2 == iVar6) {\n            piVar3 = piVar5 + 1;\n            piVar5 = piVar5 + 1;\n            iVar2 = *piVar3;\n        }\n        piVar5 = piVar5 - param_1 >> 1;\n        piVar3 = param_1;\n        if (piVar5 < arg_8h) {\n            piVar4 = param_1 + arg_8h + -1;\n            iVar2 = *piVar4;\n            while (iVar2 == iVar6) {\n                piVar1 = piVar4 + -1;\n                piVar4 = piVar4 + -1;\n                iVar2 = *piVar1;\n            }\n            arg_8h = arg_8h - ((param_1 + (arg_8h * 2 - piVar4) + -2 >> 1) + piVar5);\n        }\n        else {\n            arg_8h = arg_8h - piVar5;\n        }\n    }\n    fcn.0040e880(piVar3);\n    arg_8h_00 = fcn.0040e900(arg_8h, param_1);\n    if (unaff_EBP != 0) {\n        piVar3 = fcn.0040ea10(unaff_EBP);\n    }\n    if (piVar3 == NULL) {\n        *arg_8h_00 = 0;\n        return;\n    }\n    fcn.0040ea40(arg_8h_00, piVar3 + piVar5, arg_8h);\n    return;\n}\n",
        "token_count": 546
    },
    "00406110": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406110(int16_t *param_1, int32_t param_2, uint param_3)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    \n    if (param_1 != NULL) {\n        piVar2 = param_1;\n        do {\n            iVar1 = *piVar2;\n            piVar2 = piVar2 + 1;\n        } while (iVar1 != 0);\n        fcn.00406080(param_1, param_2, ((piVar2 - (param_1 + 1) >> 1) - param_2) + 1, param_3);\n        return;\n    }\n    fcn.0040e9e0(param_3);\n    return;\n}\n",
        "token_count": 167
    },
    "00406670": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint16_t * fcn.00406670(int16_t *param_1, int16_t *param_2)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    int16_t iVar4;\n    int16_t *piVar5;\n    int32_t iVar6;\n    int16_t *piVar7;\n    int32_t iVar8;\n    code *pcVar9;\n    int16_t *unaff_retaddr;\n    \n    pcVar9 = _sym.imp.USER32.DLL_CharLowerW;\n    piVar7 = param_2 + 1;\n    if (*param_2 == 0) {\n        return param_1;\n    }\n    iVar1 = (*_sym.imp.USER32.DLL_CharLowerW)(*param_2);\n    do {\n        iVar2 = *piVar7;\n        piVar7 = piVar7 + 1;\n    } while (iVar2 != 0);\n    iVar8 = piVar7 - (param_2 + 2) >> 1;\n    do {\n        do {\n            piVar7 = unaff_retaddr;\n            unaff_retaddr = piVar7 + 1;\n            if (*piVar7 == 0) {\n                return NULL;\n            }\n            iVar2 = (*pcVar9)(*piVar7);\n        } while (iVar2 != iVar1);\n        if (iVar8 == 0) {\n            return piVar7;\n        }\n        piVar5 = param_1;\n        iVar6 = iVar8;\n        while( true ) {\n            iVar2 = *((unaff_retaddr - param_1) + piVar5);\n            iVar3 = *piVar5;\n            piVar5 = piVar5 + 1;\n            iVar3 = (*pcVar9)(iVar3);\n            iVar4 = (*_sym.imp.USER32.DLL_CharLowerW)(iVar2);\n            pcVar9 = _sym.imp.USER32.DLL_CharLowerW;\n            if (iVar4 != iVar3) break;\n            if (iVar2 == 0) {\n                return piVar7;\n            }\n            iVar6 = iVar6 + -1;\n            if (iVar6 == 0) {\n                return piVar7;\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 489
    },
    "00408dee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00408dee(void)\n\n{\n    uint picce;\n    uint var_4h;\n    \n    sub.MSVCRT.dll_memset(&picce, 0, 8);\n    picce = 8;\n    var_4h = 0xb48;\n    (*_sym.imp.COMCTL32.DLL_InitCommonControlsEx)(&picce);\n    (*_sym.imp.OLE32.DLL_CoInitialize)(0);\n    return;\n}\n",
        "token_count": 100
    },
    "004096f9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004096f9(int16_t *param_1, int16_t *param_2, int32_t param_3)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    iVar1 = *param_1;\n    for (; (iVar1 != 0 && (param_3 != 0)); param_3 = param_3 + -1) {\n        if (iVar1 == 0x22) {\n            iVar2 = iVar2 + 1;\n        }\n        else {\n            *param_2 = iVar1;\n            param_2 = param_2 + 1;\n        }\n        param_1 = param_1 + 1;\n        iVar1 = *param_1;\n    }\n    *param_2 = 0;\n    return iVar2;\n}\n",
        "token_count": 184
    },
    "0040973a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.0040973a(void)\n\n{\n    bool bVar1;\n    int32_t **ppiVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    int16_t iVar6;\n    int32_t *piVar7;\n    int32_t *piVar8;\n    int32_t *unaff_retaddr;\n    \n    ppiVar2 = fcn.0040d968(*0x41872c);\n    piVar7 = 0xffffffff;\n    piVar3 = (*_sym.imp.KERNEL32.dll_GetCommandLineW)();\n    iVar6 = *piVar3;\n    piVar4 = unaff_retaddr;\n    do {\n        if (iVar6 == 0) {\n            if (unaff_retaddr != NULL) {\ncode_r0x00409853:\n                piVar7 = piVar3;\n                *unaff_retaddr = 0;\n            }\n            return piVar7;\n        }\n        piVar8 = NULL;\n        while (iVar6 == 0x20) {\n            piVar3 = piVar3 + 2;\n            iVar6 = *piVar3;\n        }\n        iVar6 = *piVar3;\n        if (iVar6 == 0x22) {\n            piVar3 = piVar3 + 2;\n            iVar6 = *piVar3;\n            piVar4 = piVar3;\n            piVar5 = piVar3;\n            piVar8 = piVar3;\n            if (iVar6 != 0) {\n                do {\n                    if (iVar6 == 0x22) break;\n                    piVar4 = piVar4 + 2;\n                    iVar6 = *piVar4;\n                } while (iVar6 != 0);\ncode_r0x004097c2:\n                piVar5 = piVar4;\n                piVar8 = piVar3;\n                if (*piVar4 != 0) {\n                    piVar5 = piVar4 + 2;\n                }\n            }\ncode_r0x00409814:\n            bVar1 = true;\n            piVar3 = piVar5;\n        }\n        else {\n            piVar5 = piVar3;\n            if (iVar6 != 0) {\n                do {\n                    piVar4 = piVar5;\n                    if (iVar6 == 0x20) break;\n                    piVar4 = piVar5 + 2;\n                    if (*piVar4 == 0x22) {\n                        piVar4 = piVar5 + 1;\n                        iVar6 = *piVar4;\n                        piVar5 = piVar4;\n                        piVar8 = piVar3;\n                        if (iVar6 == 0) goto code_r0x00409814;\n                        do {\n                            if (iVar6 == 0x22) break;\n                            piVar4 = piVar4 + 2;\n                            iVar6 = *piVar4;\n                        } while (iVar6 != 0);\n                    }\n                    iVar6 = *piVar4;\n                    piVar5 = piVar4;\n                } while (iVar6 != 0);\n                goto code_r0x004097c2;\n            }\n            bVar1 = false;\n        }\n        if ((*ppiVar2 == piVar7) && (unaff_retaddr != NULL)) {\n            if (piVar8 != NULL) {\n                *unaff_retaddr = piVar4 - piVar8 >> 1;\n                *ppiVar2 = *ppiVar2 + 1;\n                return piVar8;\n            }\n            goto code_r0x00409853;\n        }\n        if (bVar1) {\n            piVar7 = piVar7 + 1;\n        }\n        iVar6 = *piVar3;\n    } while( true );\n}\n",
        "token_count": 816
    },
    "00409872": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409872(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    var_4h = 0;\n    piVar1 = fcn.0040d968(*0x41872c);\n    if (-1 < arg_8h) {\n        *piVar1 = arg_8h;\n    }\n    uVar2 = fcn.0040973a(&var_4h);\n    uVar3 = fcn.0040e900(var_4h, arg_ch);\n    uVar2 = fcn.004096f9(uVar2, uVar3, var_4h);\n    fcn.0040ea90(uVar2);\n    return;\n}\n",
        "token_count": 183
    },
    "0040a240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a240(int16_t *param_1, uint param_2)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h;\n    int16_t *piVar3;\n    \n    arg_8h = 0;\n    if (param_1 != NULL) {\n        piVar3 = param_1;\n        do {\n            iVar1 = *piVar3;\n            piVar3 = piVar3 + 1;\n        } while (iVar1 != 0);\n        arg_8h = piVar3 - (param_1 + 1) >> 1;\n    }\n    iVar2 = fcn.0040e900(arg_8h, param_2);\n    if (arg_8h != 0) {\n        sub.MSVCRT.dll_memcpy(iVar2, param_1, arg_8h * 2);\n    }\n    *(iVar2 + arg_8h * 2) = 0;\n    return;\n}\n",
        "token_count": 221
    },
    "0040a300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nint32_t fcn.0040a300(uint param_1, int32_t param_2, int32_t param_3)\n\n{\n    sub.MSVCRT.dll_memcpy(param_2, param_1, param_3);\n    return param_2 + param_3;\n}\n",
        "token_count": 62
    },
    "0040a460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.0040a460(int32_t param_1, uint param_2, uint param_3, uint *param_4)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar4 = *param_4;\n    fcn.0040a54f();\n    pcVar1 = _sym.imp.KERNEL32.dll_HeapAlloc;\n    puVar2 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x418068);\n    if (puVar2 != NULL) {\n        if (param_1 < 1) {\n            param_1 = 1;\n        }\n        iVar3 = (*pcVar1)(*0x418068, 8, param_1 << 2);\n        puVar2[1] = iVar3;\n        if (iVar3 == 0) {\n            (*_sym.imp.KERNEL32.dll_HeapFree)(*0x418068, 0, puVar2);\n            puVar2 = NULL;\n        }\n        else {\n            puVar2[8] = 0x3c;\n            puVar2[9] = param_1;\n            *puVar2 = 0;\n            puVar2[7] = 0;\n            puVar2[4] = uVar4;\n            puVar2[10] = 0;\n            puVar2[0xb] = 0;\n            puVar2[0xc] = param_4;\n            puVar2[0xd] = 0;\n            iVar3 = fcn.00412104(uVar4);\n            if (iVar3 != 0) {\n                puVar2[0xb] = puVar2[0xb] | 2;\n            }\n            uVar4 = fcn.0040de99(8, 0x10, 0x10000, 4);\n            puVar2[0xe] = uVar4;\n            iVar3 = (*pcVar1)(*0x418068, 8, 8);\n            puVar2[3] = iVar3;\n            *(iVar3 + 4) = 0x413024;\n            *param_4 = puVar2;\n        }\n    }\n    return puVar2;\n}\n",
        "token_count": 494
    },
    "0040a79a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a79a(int32_t *arg_8h)\n\n{\n    int32_t arg_ch;\n    int32_t arg_8h_00;\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint var_8h;\n    \n    arg_ch = arg_8h[4];\n    piVar2 = arg_8h;\n    fcn.0040a81c(arg_8h);\n    while( true ) {\n        piVar1 = arg_8h;\n        arg_8h_00 = fcn.0040a8e8(arg_8h);\n        if (arg_8h_00 == 0) break;\n        if ((*(arg_8h + 0xb) & 4) == 0) {\n            (*_sym.imp.KERNEL32.dll_HeapFree)(*0x418068, 0, *(arg_8h_00 + -4));\n        }\n        if (arg_ch != 0) {\n            fcn.0041242a(arg_8h_00, arg_ch);\n        }\n        var_8h = *(arg_8h_00 + -8);\n        piVar2 = arg_8h[0xe];\n        *arg_8h = &var_8h;\n        fcn.0040ddcb();\n    }\n    sub.MSVCRT.dll_memset(arg_8h[1], 0, arg_8h[9] << 2, piVar1, piVar2);\n    fcn.0040a81c(arg_8h);\n    arg_8h[10] = 0;\n    return;\n}\n",
        "token_count": 362
    },
    "0040a92f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040a92f(uint16_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    for (; *param_1 != 0; param_1 = param_1 + 1) {\n        iVar1 = iVar1 * 0x1003f + *param_1;\n    }\n    return iVar1;\n}\n",
        "token_count": 86
    },
    "0040a94a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040a94a(ushort *param_1)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    uVar1 = *param_1;\n    while( true ) {\n        iVar2 = sub.MSVCRT.dll_tolower(uVar1);\n        if (iVar2 == 0) break;\n        param_1 = param_1 + 1;\n        uVar1 = *param_1;\n        iVar3 = iVar3 * 0x1003f + iVar2;\n    }\n    return iVar3;\n}\n",
        "token_count": 138
    },
    "0040a976": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.0040a976(uint *param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    \n    puVar1 = *(param_1[1] + (param_2 % param_1[9]) * 4);\n    while( true ) {\n        if (puVar1 == NULL) {\n            return NULL;\n        }\n        if (puVar1[1] == param_2) break;\n        param_1[2] = puVar1;\n        puVar1 = *puVar1;\n    }\n    *param_1 = puVar1;\n    param_1[5] = param_2 % param_1[9];\n    return puVar1 + 2;\n}\n",
        "token_count": 160
    },
    "0040a9c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.0040a9c8(uint param_1)\n\n{\n    code *pcVar1;\n    uchar uVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint *unaff_EBX;\n    int32_t unaff_ESI;\n    uint unaff_retaddr;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_HeapAlloc;\n    puVar3 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x418068, 0, 0x34);\n    if (unaff_EBX == NULL) {\n        unaff_EBX = (*pcVar1)(*0x418068, 0, 8);\n        *(puVar3 + 0x32) = 1;\n    }\n    else {\n        *(puVar3 + 0x32) = 0;\n    }\n    puVar3[3] = unaff_EBX + 1;\n    puVar3[2] = 0;\n    *puVar3 = 0;\n    puVar3[1] = 0;\n    puVar3[10] = unaff_ESI + 8;\n    puVar3[6] = unaff_retaddr;\n    puVar3[4] = 0;\n    *(puVar3 + 0xc) = 1;\n    puVar3[0xb] = param_1;\n    uVar2 = fcn.00412104(unaff_retaddr);\n    puVar3[8] = 0;\n    *(puVar3 + 0x31) = uVar2;\n    puVar3[9] = unaff_EBX;\n    *unaff_EBX = puVar3;\n    uVar4 = fcn.0040de99(unaff_ESI + 8, 0x10, 0x10000, 4);\n    puVar3[7] = uVar4;\n    return puVar3;\n}\n",
        "token_count": 419
    },
    "0040aae2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040aae2(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1[2] == NULL) {\n        iVar1 = *param_1;\n        param_1[5] = 0;\n        param_1[2] = iVar1;\n        if (iVar1 == 0) goto code_r0x0040ab0b;\n    }\n    else {\n        iVar1 = *param_1[2];\n        if (iVar1 == 0) goto code_r0x0040ab0b;\n        param_1[5] = param_1[5] + 1;\n        param_1[2] = iVar1;\n    }\n    iVar1 = iVar1 + 8;\ncode_r0x0040ab0b:\n    *param_1[3] = param_1[2];\n    return iVar1;\n}\n",
        "token_count": 201
    },
    "0040ab74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t ** fcn.0040ab74(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    \n    ppiVar2 = fcn.0040dbff(param_1[7]);\n    if (ppiVar2 != NULL) {\n        sub.MSVCRT.dll_memset(ppiVar2, 0, param_1[10]);\n        if (*(param_1 + 0x31) != '\\0') {\n            fcn.0041252f(ppiVar2 + 2, param_1[6]);\n        }\n        param_1[4] = param_1[4] + 1;\n        if (param_1[2] == NULL) {\n            if (*param_1 != NULL) {\n                (*param_1)[1] = ppiVar2;\n            }\n            param_1[2] = ppiVar2;\n            *ppiVar2 = *param_1;\n            ppiVar2[1] = NULL;\n            param_1[5] = NULL;\n            *(param_1 + 0xc) = 0;\n        }\n        else {\n            ppiVar2[1] = param_1[2];\n            *ppiVar2 = *param_1[2];\n            if (*param_1[2] != 0) {\n                *(*param_1[2] + 4) = ppiVar2;\n            }\n            *param_1[2] = ppiVar2;\n            param_1[5] = param_1[5] + 1;\n            param_1[2] = ppiVar2;\n        }\n        piVar1 = param_1[2];\n        if (piVar1[1] == 0) {\n            *param_1 = piVar1;\n        }\n        if (*piVar1 == 0) {\n            param_1[1] = piVar1;\n        }\n        *param_1[3] = piVar1;\n        ppiVar2 = ppiVar2 + 2;\n    }\n    return ppiVar2;\n}\n",
        "token_count": 460
    },
    "0040b330": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b330(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.0040b140(param_1, param_2, 3, param_3);\n    return;\n}\n",
        "token_count": 52
    },
    "0040b420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b420(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.0040b140(param_1, param_2, 1, param_3);\n    return;\n}\n",
        "token_count": 52
    },
    "0040b9c7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b9c7(uint32_t *param_1, uint32_t *param_2, uint32_t *param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    uint32_t uVar21;\n    uint32_t uVar22;\n    \n    if (param_3 == NULL) {\n        param_3 = param_2;\n    }\n    else {\n        sub.MSVCRT.dll_memcpy(param_3, param_2, 0x40);\n    }\n    uVar9 = *param_3;\n    uVar1 = uVar9 >> 8 & 0xff00ff00 | uVar9 << 0x18 | (uVar9 & 0xff00) << 8 | uVar9 >> 0x18;\n    uVar9 = param_1[1];\n    uVar3 = *param_1;\n    uVar4 = param_1[3];\n    uVar5 = param_1[2];\n    uVar10 = uVar9 >> 2 | uVar9 << 0x1e;\n    uVar6 = param_1[4] + 0x5a827999 + ((uVar4 ^ uVar5) & uVar9 ^ uVar4) + (uVar3 << 5 | uVar3 >> 0x1b) + uVar1;\n    uVar9 = param_3[1];\n    uVar2 = uVar9 >> 8 & 0xff00ff00 | uVar9 << 0x18 | (uVar9 & 0xff00) << 8 | uVar9 >> 0x18;\n    uVar13 = uVar3 >> 2 | uVar3 << 0x1e;\n    uVar16 = uVar4 + 0x5a827999 + ((uVar5 ^ uVar10) & uVar3 ^ uVar5) + (uVar6 * 0x20 | uVar6 >> 0x1b) + uVar2;\n    uVar9 = param_3[2];\n    uVar3 = uVar9 >> 8 & 0xff00ff00 | uVar9 << 0x18 | (uVar9 & 0xff00) << 8 | uVar9 >> 0x18;\n    uVar7 = uVar6 >> 2 | uVar6 * 0x40000000;\n    uVar6 = uVar5 + 0x5a827999 + ((uVar10 ^ uVar13) & uVar6 ^ uVar10) + (uVar16 * 0x20 | uVar16 >> 0x1b) + uVar3;\n    uVar9 = param_3[3];\n    uVar4 = uVar9 >> 8 & 0xff00ff00 | uVar9 << 0x18 | (uVar9 & 0xff00) << 8 | uVar9 >> 0x18;\n    uVar17 = uVar16 >> 2 | uVar16 * 0x40000000;\n    uVar10 = uVar10 + 0x5a827999 + ((uVar7 ^ uVar13) & uVar16 ^ uVar13) + (uVar6 * 0x20 | uVar6 >> 0x1b) + uVar4;\n    uVar9 = param_3[4];\n    uVar5 = uVar9 >> 8 & 0xff00ff00 | uVar9 << 0x18 | (uVar9 & 0xff00) << 8 | uVar9 >> 0x18;\n    uVar19 = uVar6 >> 2 | uVar6 * 0x40000000;\n    uVar13 = uVar13 + 0x5a827999 + ((uVar7 ^ uVar17) & uVar6 ^ uVar7) + (uVar10 * 0x20 | uVar10 >> 0x1b) + uVar5;\n    uVar9 = param_3[5];\n    uVar6 = uVar9 >> 8 & 0xff00ff00 | uVar9 << 0x18 | (uVar9 & 0xff00) << 8 | uVar9 >> 0x18;\n    uVar11 = uVar10 >> 2 | uVar10 * 0x40000000;\n    uVar7 = uVar7 + ((uVar17 ^ uVar19) & uVar10 ^ uVar17) + (uVar13 * 0x20 | uVar13 >> 0x1b) + 0x5a827999 + uVar6;\n    uVar9 = param_3[6];\n    uVar10 = uVar9 >> 8 & 0xff00ff00 | uVar9 << 0x18 | (uVar9 & 0xff00) << 8 | uVar9 >> 0x18;\n    uVar14 = uVar13 >> 2 | uVar13 * 0x40000000;\n    uVar17 = uVar17 + ((uVar19 ^ uVar11) & uVar13 ^ uVar19) + (uVar7 * 0x20 | uVar7 >> 0x1b) + 0x5a827999 + uVar10;\n    uVar9 = param_3[7];\n    uVar13 = uVar9 >> 8 & 0xff00ff00 | uVar9 << 0x18 | (uVar9 & 0xff00) << 8 | uVar9 >> 0x18;\n    uVar8 = uVar7 >> 2 | uVar7 * 0x40000000;\n    uVar19 = uVar19 + ((uVar11 ^ uVar14) & uVar7 ^ uVar11) + (uVar17 * 0x20 | uVar17 >> 0x1b) + 0x5a827999 + uVar13;\n    uVar9 = param_3[8];\n    uVar7 = uVar9 >> 8 & 0xff00ff00 | uVar9 << 0x18 | (uVar9 & 0xff00) << 8 | uVar9 >> 0x18;\n    uVar18 = uVar17 >> 2 | uVar17 * 0x40000000;\n    uVar11 = uVar11 + ((uVar8 ^ uVar14) & uVar17 ^ uVar14) + (uVar19 * 0x20 | uVar19 >> 0x1b) + 0x5a827999 + uVar7;\n    uVar9 = param_3[9];\n    uVar16 = uVar9 >> 8 & 0xff00ff00 | uVar9 << 0x18 | (uVar9 & 0xff00) << 8 | uVar9 >> 0x18;\n    uVar20 = uVar19 >> 2 | uVar19 * 0x40000000;\n    uVar14 = uVar14 + ((uVar8 ^ uVar18) & uVar19 ^ uVar8) + (uVar11 * 0x20 | uVar11 >> 0x1b) + 0x5a827999 + uVar16;\n    uVar9 = param_3[10];\n    uVar17 = uVar9 >> 8 & 0xff00ff00 | uVar9 << 0x18 | (uVar9 & 0xff00) << 8 | uVar9 >> 0x18;\n    uVar12 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar8 = (uVar14 * 0x20 | uVar14 >> 0x1b) + uVar17 + ((uVar18 ^ uVar20) & uVar11 ^ uVar18) + uVar8 + 0x5a827999;\n    uVar9 = param_3[0xb];\n    uVar19 = uVar9 >> 8 & 0xff00ff00 | uVar9 << 0x18 | (uVar9 & 0xff00) << 8 | uVar9 >> 0x18;\n    uVar15 = uVar14 >> 2 | uVar14 * 0x40000000;\n    uVar14 = uVar19 + (uVar8 * 0x20 | uVar8 >> 0x1b) + ((uVar20 ^ uVar12) & uVar14 ^ uVar20) + uVar18 + 0x5a827999;\n    uVar9 = param_3[0xc];\n    uVar11 = uVar9 >> 8 & 0xff00ff00 | uVar9 << 0x18 | (uVar9 & 0xff00) << 8 | uVar9 >> 0x18;\n    uVar18 = (uVar12 ^ (uVar12 ^ uVar15) & uVar8) + (uVar14 * 0x20 | uVar14 >> 0x1b) + uVar11 + uVar20 + 0x5a827999;\n    uVar20 = uVar8 >> 2 | uVar8 * 0x40000000;\n    uVar9 = param_3[0xd];\n    uVar21 = uVar9 >> 8 & 0xff00ff00 | uVar9 << 0x18 | (uVar9 & 0xff00) << 8 | uVar9 >> 0x18;\n    uVar8 = uVar14 >> 2 | uVar14 * 0x40000000;\n    uVar12 = (uVar15 ^ (uVar20 ^ uVar15) & uVar14) + (uVar18 * 0x20 | uVar18 >> 0x1b) + uVar21 + uVar12 + 0x5a827999;\n    uVar9 = param_3[0xe];\n    uVar22 = uVar9 >> 8 & 0xff00ff00 | uVar9 << 0x18 | (uVar9 & 0xff00) << 8 | uVar9 >> 0x18;\n    uVar14 = uVar18 >> 2 | uVar18 * 0x40000000;\n    uVar18 = (uVar20 ^ (uVar20 ^ uVar8) & uVar18) + (uVar12 * 0x20 | uVar12 >> 0x1b) + uVar22 + uVar15 + 0x5a827999;\n    uVar9 = param_3[0xf];\n    uVar15 = uVar9 >> 8 & 0xff00ff00 | uVar9 << 0x18 | (uVar9 & 0xff00) << 8 | uVar9 >> 0x18;\n    uVar20 = uVar15 + (uVar18 * 0x20 | uVar18 >> 0x1b) + ((uVar8 ^ uVar14) & uVar12 ^ uVar8) + uVar20 + 0x5a827999;\n    uVar9 = uVar3 ^ uVar1 ^ uVar21 ^ uVar7;\n    uVar9 = uVar9 << 1 | uVar9 < 0;\n    uVar12 = uVar12 >> 2 | uVar12 * 0x40000000;\n    *param_3 = uVar9;\n    uVar1 = uVar4 ^ uVar2 ^ uVar22 ^ uVar16;\n    uVar2 = (uVar14 ^ (uVar14 ^ uVar12) & uVar18) + (uVar20 * 0x20 | uVar20 >> 0x1b) + uVar9 + uVar8 + 0x5a827999;\n    uVar9 = uVar1 << 1 | uVar1 < 0;\n    uVar18 = uVar18 >> 2 | uVar18 * 0x40000000;\n    param_3[1] = uVar9;\n    uVar3 = uVar5 ^ uVar3 ^ uVar15 ^ uVar17;\n    uVar3 = uVar3 << 1 | uVar3 < 0;\n    uVar8 = (uVar12 ^ (uVar12 ^ uVar18) & uVar20) + (uVar2 * 0x20 | uVar2 >> 0x1b) + uVar9 + uVar14 + 0x5a827999;\n    uVar20 = uVar20 >> 2 | uVar20 * 0x40000000;\n    param_3[2] = uVar3;\n    uVar1 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar3 = uVar3 + (uVar8 * 0x20 | uVar8 >> 0x1b) + ((uVar20 ^ uVar18) & uVar2 ^ uVar18) + uVar12 + 0x5a827999;\n    uVar9 = uVar4 ^ *param_3 ^ uVar19 ^ uVar6;\n    uVar9 = uVar9 << 1 | uVar9 < 0;\n    param_3[3] = uVar9;\n    uVar14 = uVar8 >> 2 | uVar8 * 0x40000000;\n    uVar18 = uVar18 + ((uVar20 ^ uVar1) & uVar8 ^ uVar20) + (uVar3 * 0x20 | uVar3 >> 0x1b) + 0x5a827999 + uVar9;\n    uVar9 = uVar5 ^ param_3[1] ^ uVar11 ^ uVar10;\n    uVar9 = uVar9 << 1 | uVar9 < 0;\n    param_3[4] = uVar9;\n    uVar4 = uVar3 >> 2 | uVar3 * 0x40000000;\n    uVar20 = uVar20 + (uVar1 ^ uVar14 ^ uVar3) + (uVar18 * 0x20 | uVar18 >> 0x1b) + 0x6ed9eba1 + uVar9;\n    uVar6 = param_3[2] ^ uVar21 ^ uVar13 ^ uVar6;\n    uVar9 = uVar6 << 1 | uVar6 < 0;\n    param_3[5] = uVar9;\n    uVar8 = uVar18 >> 2 | uVar18 * 0x40000000;\n    uVar1 = uVar1 + (uVar14 ^ uVar4 ^ uVar18) + (uVar20 * 0x20 | uVar20 >> 0x1b) + uVar9 + 0x6ed9eba1;\n    uVar9 = param_3[3];\n    uVar10 = uVar9 ^ uVar22 ^ uVar7 ^ uVar10;\n    uVar3 = uVar10 << 1 | uVar10 < 0;\n    param_3[6] = uVar3;\n    uVar10 = uVar20 >> 2 | uVar20 * 0x40000000;\n    uVar14 = uVar14 + (uVar20 ^ uVar4 ^ uVar8) + (uVar1 * 0x20 | uVar1 >> 0x1b) + uVar3 + 0x6ed9eba1;\n    uVar3 = param_3[4];\n    uVar13 = uVar3 ^ uVar15 ^ uVar16 ^ uVar13;\n    uVar5 = uVar13 << 1 | uVar13 < 0;\n    param_3[7] = uVar5;\n    uVar2 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar4 = uVar4 + 0x6ed9eba1 + (uVar10 ^ uVar1 ^ uVar8) + (uVar14 * 0x20 | uVar14 >> 0x1b) + uVar5;\n    uVar5 = *param_3 ^ uVar17 ^ uVar7 ^ param_3[5];\n    uVar5 = uVar5 << 1 | uVar5 < 0;\n    param_3[8] = uVar5;\n    uVar6 = uVar14 >> 2 | uVar14 * 0x40000000;\n    uVar5 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar5 + (uVar10 ^ uVar2 ^ uVar14) + uVar8 + 0x6ed9eba1;\n    uVar1 = param_3[1] ^ uVar19 ^ uVar16 ^ param_3[6];\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    param_3[9] = uVar1;\n    uVar13 = uVar4 >> 2 | uVar4 * 0x40000000;\n    uVar4 = (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar1 + (uVar2 ^ uVar6 ^ uVar4) + uVar10 + 0x6ed9eba1;\n    uVar1 = param_3[2] ^ uVar11 ^ uVar17 ^ param_3[7];\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    param_3[10] = uVar1;\n    uVar7 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar5 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar1 + (uVar6 ^ uVar13 ^ uVar5) + uVar2 + 0x6ed9eba1;\n    uVar1 = uVar9 ^ uVar21 ^ uVar19 ^ param_3[8];\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    param_3[0xb] = uVar1;\n    uVar2 = uVar4 >> 2 | uVar4 * 0x40000000;\n    uVar4 = uVar6 + 0x6ed9eba1 + (uVar4 ^ uVar13 ^ uVar7) + (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar1;\n    uVar1 = uVar3 ^ uVar22 ^ uVar11 ^ param_3[9];\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    param_3[0xc] = uVar1;\n    uVar10 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar5 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar1 + (uVar2 ^ uVar5 ^ uVar7) + uVar13 + 0x6ed9eba1;\n    uVar1 = uVar15 ^ uVar21 ^ param_3[10] ^ param_3[5];\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    param_3[0xd] = uVar1;\n    uVar13 = uVar4 >> 2 | uVar4 * 0x40000000;\n    uVar4 = (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar1 + (uVar2 ^ uVar10 ^ uVar4) + uVar7 + 0x6ed9eba1;\n    uVar1 = *param_3 ^ uVar22 ^ param_3[0xb] ^ param_3[6];\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    param_3[0xe] = uVar1;\n    uVar7 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar5 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar1 + (uVar10 ^ uVar13 ^ uVar5) + uVar2 + 0x6ed9eba1;\n    uVar1 = param_3[1] ^ uVar15 ^ param_3[0xc] ^ param_3[7];\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    param_3[0xf] = uVar1;\n    uVar6 = uVar4 >> 2 | uVar4 * 0x40000000;\n    uVar4 = uVar10 + 0x6ed9eba1 + (uVar13 ^ uVar7 ^ uVar4) + (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar1;\n    uVar1 = param_3[2] ^ *param_3 ^ param_3[0xd] ^ param_3[8];\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    *param_3 = uVar1;\n    uVar1 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar1 + (uVar5 ^ uVar7 ^ uVar6) + uVar13 + 0x6ed9eba1;\n    uVar2 = uVar9 ^ param_3[1] ^ param_3[0xe] ^ param_3[9];\n    uVar2 = uVar2 << 1 | uVar2 < 0;\n    param_3[1] = uVar2;\n    uVar10 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar13 = uVar4 >> 2 | uVar4 * 0x40000000;\n    uVar4 = (uVar1 * 0x20 | uVar1 >> 0x1b) + uVar2 + (uVar10 ^ uVar4 ^ uVar6) + uVar7 + 0x6ed9eba1;\n    uVar5 = uVar3 ^ param_3[2] ^ param_3[0xf] ^ param_3[10];\n    uVar5 = uVar5 << 1 | uVar5 < 0;\n    param_3[2] = uVar5;\n    uVar7 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar5 = uVar5 + (uVar4 * 0x20 | uVar4 >> 0x1b) + (uVar10 ^ uVar13 ^ uVar1) + uVar6 + 0x6ed9eba1;\n    uVar9 = uVar9 ^ *param_3 ^ param_3[0xb] ^ param_3[5];\n    uVar9 = uVar9 << 1 | uVar9 < 0;\n    param_3[3] = uVar9;\n    uVar2 = uVar4 >> 2 | uVar4 * 0x40000000;\n    uVar4 = uVar10 + 0x6ed9eba1 + (uVar13 ^ uVar7 ^ uVar4) + (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar9;\n    uVar9 = uVar3 ^ param_3[1] ^ param_3[0xc] ^ param_3[6];\n    uVar9 = uVar9 << 1 | uVar9 < 0;\n    param_3[4] = uVar9;\n    uVar1 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar3 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar9 + (uVar7 ^ uVar2 ^ uVar5) + uVar13 + 0x6ed9eba1;\n    uVar9 = param_3[2] ^ param_3[0xd] ^ param_3[7] ^ param_3[5];\n    uVar9 = uVar9 << 1 | uVar9 < 0;\n    param_3[5] = uVar9;\n    uVar10 = uVar4 >> 2 | uVar4 * 0x40000000;\n    uVar5 = (uVar3 * 0x20 | uVar3 >> 0x1b) + uVar9 + (uVar4 ^ uVar2 ^ uVar1) + uVar7 + 0x6ed9eba1;\n    uVar9 = param_3[3];\n    uVar4 = uVar9 ^ param_3[0xe] ^ param_3[8] ^ param_3[6];\n    uVar4 = uVar4 << 1 | uVar4 < 0;\n    param_3[6] = uVar4;\n    uVar13 = uVar3 >> 2 | uVar3 * 0x40000000;\n    uVar4 = (uVar10 ^ uVar3 ^ uVar1) + (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar4 + uVar2 + 0x6ed9eba1;\n    uVar3 = param_3[4];\n    uVar2 = uVar3 ^ param_3[0xf] ^ param_3[9] ^ param_3[7];\n    uVar2 = uVar2 << 1 | uVar2 < 0;\n    param_3[7] = uVar2;\n    uVar6 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar5 = (uVar10 ^ uVar13 ^ uVar5) + (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar2 + uVar1 + 0x6ed9eba1;\n    uVar1 = *param_3 ^ param_3[10] ^ param_3[8] ^ param_3[5];\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    param_3[8] = uVar1;\n    uVar1 = (uVar5 * 0x20 | uVar5 >> 0x1b) + 0x8f1bbcdc + ((uVar6 | uVar4) & uVar13 | uVar6 & uVar4) + uVar1 + uVar10;\n    uVar10 = uVar4 >> 2 | uVar4 * 0x40000000;\n    uVar4 = param_3[1] ^ param_3[0xb] ^ param_3[9] ^ param_3[6];\n    uVar4 = uVar4 << 1 | uVar4 < 0;\n    param_3[9] = uVar4;\n    uVar7 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar4 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0x8f1bbcdc + ((uVar10 | uVar5) & uVar6 | uVar10 & uVar5) + uVar4 + uVar13;\n    uVar5 = param_3[2] ^ param_3[0xc] ^ param_3[10] ^ param_3[7];\n    uVar5 = uVar5 << 1 | uVar5 < 0;\n    param_3[10] = uVar5;\n    uVar5 = (uVar4 * 0x20 | uVar4 >> 0x1b) + 0x8f1bbcdc + ((uVar1 | uVar7) & uVar10 | uVar1 & uVar7) + uVar5 + uVar6;\n    uVar2 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar1 = uVar9 ^ param_3[0xd] ^ param_3[0xb] ^ param_3[8];\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    param_3[0xb] = uVar1;\n    uVar1 = (uVar5 * 0x20 | uVar5 >> 0x1b) + 0x8f1bbcdc + ((uVar2 | uVar4) & uVar7 | uVar2 & uVar4) + uVar1 + uVar10;\n    uVar6 = uVar4 >> 2 | uVar4 * 0x40000000;\n    uVar4 = uVar3 ^ param_3[0xe] ^ param_3[0xc] ^ param_3[9];\n    uVar4 = uVar4 << 1 | uVar4 < 0;\n    param_3[0xc] = uVar4;\n    uVar4 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0x8f1bbcdc + ((uVar6 | uVar5) & uVar2 | uVar6 & uVar5) + uVar4 + uVar7;\n    uVar10 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar5 = param_3[0xf] ^ param_3[0xd] ^ param_3[10] ^ param_3[5];\n    uVar5 = uVar5 << 1 | uVar5 < 0;\n    param_3[0xd] = uVar5;\n    uVar5 = (uVar4 * 0x20 | uVar4 >> 0x1b) + 0x8f1bbcdc + ((uVar10 | uVar1) & uVar6 | uVar10 & uVar1) + uVar5 + uVar2;\n    uVar2 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar1 = *param_3 ^ param_3[0xe] ^ param_3[0xb] ^ param_3[6];\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    param_3[0xe] = uVar1;\n    uVar1 = (uVar5 * 0x20 | uVar5 >> 0x1b) + 0x8f1bbcdc + ((uVar2 | uVar4) & uVar10 | uVar2 & uVar4) + uVar1 + uVar6;\n    uVar6 = uVar4 >> 2 | uVar4 * 0x40000000;\n    uVar4 = param_3[1] ^ param_3[0xf] ^ param_3[0xc] ^ param_3[7];\n    uVar4 = uVar4 << 1 | uVar4 < 0;\n    param_3[0xf] = uVar4;\n    uVar4 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0x8f1bbcdc + ((uVar5 | uVar6) & uVar2 | uVar5 & uVar6) + uVar4 + uVar10;\n    uVar10 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar5 = param_3[2] ^ *param_3 ^ param_3[0xd] ^ param_3[8];\n    uVar5 = uVar5 << 1 | uVar5 < 0;\n    *param_3 = uVar5;\n    uVar5 = (uVar4 * 0x20 | uVar4 >> 0x1b) + 0x8f1bbcdc + ((uVar10 | uVar1) & uVar6 | uVar10 & uVar1) + uVar5 + uVar2;\n    uVar2 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar1 = uVar9 ^ param_3[1] ^ param_3[0xe] ^ param_3[9];\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    param_3[1] = uVar1;\n    uVar1 = (uVar5 * 0x20 | uVar5 >> 0x1b) + 0x8f1bbcdc + ((uVar2 | uVar4) & uVar10 | uVar2 & uVar4) + uVar1 + uVar6;\n    uVar6 = uVar4 >> 2 | uVar4 * 0x40000000;\n    uVar4 = uVar3 ^ param_3[2] ^ param_3[0xf] ^ param_3[10];\n    uVar4 = uVar4 << 1 | uVar4 < 0;\n    param_3[2] = uVar4;\n    uVar4 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0x8f1bbcdc + ((uVar6 | uVar5) & uVar2 | uVar6 & uVar5) + uVar4 + uVar10;\n    uVar9 = uVar9 ^ *param_3 ^ param_3[0xb] ^ param_3[5];\n    uVar9 = uVar9 << 1 | uVar9 < 0;\n    param_3[3] = uVar9;\n    uVar10 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar5 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar9 = (uVar4 * 0x20 | uVar4 >> 0x1b) + 0x8f1bbcdc + ((uVar10 | uVar1) & uVar6 | uVar10 & uVar1) + uVar9 + uVar2;\n    uVar3 = uVar3 ^ param_3[1] ^ param_3[0xc] ^ param_3[6];\n    uVar3 = uVar3 << 1 | uVar3 < 0;\n    param_3[4] = uVar3;\n    uVar3 = (uVar4 & uVar5 | (uVar4 | uVar5) & uVar10) + uVar3 + uVar6 + 0x8f1bbcdc + (uVar9 * 0x20 | uVar9 >> 0x1b);\n    uVar6 = uVar4 >> 2 | uVar4 * 0x40000000;\n    uVar4 = param_3[2] ^ param_3[0xd] ^ param_3[7] ^ param_3[5];\n    uVar4 = uVar4 << 1 | uVar4 < 0;\n    param_3[5] = uVar4;\n    uVar4 = (uVar3 * 0x20 | uVar3 >> 0x1b) + 0x8f1bbcdc + ((uVar6 | uVar9) & uVar5 | uVar6 & uVar9) + uVar4 + uVar10;\n    uVar13 = uVar9 >> 2 | uVar9 * 0x40000000;\n    uVar9 = param_3[3];\n    uVar1 = uVar9 ^ param_3[0xe] ^ param_3[8] ^ param_3[6];\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    param_3[6] = uVar1;\n    uVar5 = (uVar4 * 0x20 | uVar4 >> 0x1b) + 0x8f1bbcdc + ((uVar13 | uVar3) & uVar6 | uVar13 & uVar3) + uVar1 + uVar5;\n    uVar2 = uVar3 >> 2 | uVar3 * 0x40000000;\n    uVar3 = param_3[4];\n    uVar1 = uVar3 ^ param_3[0xf] ^ param_3[9] ^ param_3[7];\n    uVar10 = uVar1 << 1 | uVar1 < 0;\n    param_3[7] = uVar10;\n    uVar1 = uVar4 >> 2 | uVar4 * 0x40000000;\n    uVar6 = (uVar5 * 0x20 | uVar5 >> 0x1b) + 0x8f1bbcdc + ((uVar2 | uVar4) & uVar13 | uVar2 & uVar4) + uVar10 + uVar6;\n    uVar4 = *param_3 ^ param_3[10] ^ param_3[8] ^ param_3[5];\n    uVar10 = uVar4 << 1 | uVar4 < 0;\n    param_3[8] = uVar10;\n    uVar4 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar13 = (uVar6 * 0x20 | uVar6 >> 0x1b) + 0x8f1bbcdc + ((uVar1 | uVar5) & uVar2 | uVar1 & uVar5) + uVar10 + uVar13;\n    uVar5 = param_3[1] ^ param_3[0xb] ^ param_3[9] ^ param_3[6];\n    uVar5 = uVar5 << 1 | uVar5 < 0;\n    param_3[9] = uVar5;\n    uVar10 = uVar6 >> 2 | uVar6 * 0x40000000;\n    uVar5 = (uVar13 * 0x20 | uVar13 >> 0x1b) + 0x8f1bbcdc + ((uVar6 | uVar4) & uVar1 | uVar6 & uVar4) + uVar5 + uVar2;\n    uVar2 = param_3[2] ^ param_3[0xc] ^ param_3[10] ^ param_3[7];\n    uVar2 = uVar2 << 1 | uVar2 < 0;\n    param_3[10] = uVar2;\n    uVar6 = uVar9 ^ param_3[0xd] ^ param_3[0xb] ^ param_3[8];\n    uVar7 = uVar13 >> 2 | uVar13 * 0x40000000;\n    uVar6 = uVar6 << 1 | uVar6 < 0;\n    param_3[0xb] = uVar6;\n    uVar2 = (uVar5 * 0x20 | uVar5 >> 0x1b) + 0x8f1bbcdc + ((uVar10 | uVar13) & uVar4 | uVar10 & uVar13) + uVar2 + uVar1;\n    uVar1 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar5 = (uVar2 * 0x20 | uVar2 >> 0x1b) + 0x8f1bbcdc + ((uVar7 | uVar5) & uVar10 | uVar7 & uVar5) + uVar6 + uVar4;\n    uVar4 = uVar3 ^ param_3[0xe] ^ param_3[0xc] ^ param_3[9];\n    uVar4 = uVar4 << 1 | uVar4 < 0;\n    param_3[0xc] = uVar4;\n    uVar6 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar10 = (uVar5 * 0x20 | uVar5 >> 0x1b) + 0xca62c1d6 + (uVar7 ^ uVar1 ^ uVar2) + uVar4 + uVar10;\n    uVar4 = param_3[0xf] ^ param_3[0xd] ^ param_3[10] ^ param_3[5];\n    uVar4 = uVar4 << 1 | uVar4 < 0;\n    param_3[0xd] = uVar4;\n    uVar16 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar2 = (uVar10 * 0x20 | uVar10 >> 0x1b) + 0xca62c1d6 + (uVar1 ^ uVar6 ^ uVar5) + uVar4 + uVar7;\n    uVar4 = *param_3 ^ param_3[0xe] ^ param_3[0xb] ^ param_3[6];\n    uVar4 = uVar4 << 1 | uVar4 < 0;\n    param_3[0xe] = uVar4;\n    uVar17 = uVar10 >> 2 | uVar10 * 0x40000000;\n    uVar13 = (uVar2 * 0x20 | uVar2 >> 0x1b) + 0xca62c1d6 + (uVar10 ^ uVar6 ^ uVar16) + uVar4 + uVar1;\n    uVar4 = param_3[0xc];\n    uVar5 = param_3[1] ^ param_3[0xf] ^ uVar4 ^ param_3[7];\n    uVar5 = uVar5 << 1 | uVar5 < 0;\n    param_3[0xf] = uVar5;\n    uVar1 = (uVar13 * 0x20 | uVar13 >> 0x1b) + (uVar17 ^ uVar2 ^ uVar16) + uVar5 + 0xca62c1d6 + uVar6;\n    uVar10 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar5 = param_3[0xd];\n    uVar2 = param_3[2] ^ *param_3 ^ uVar5 ^ param_3[8];\n    uVar2 = uVar2 << 1 | uVar2 < 0;\n    *param_3 = uVar2;\n    uVar7 = uVar13 >> 2 | uVar13 * 0x40000000;\n    uVar2 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0xca62c1d6 + (uVar17 ^ uVar10 ^ uVar13) + uVar2 + uVar16;\n    uVar6 = uVar9 ^ param_3[1] ^ param_3[0xe] ^ param_3[9];\n    uVar6 = uVar6 << 1 | uVar6 < 0;\n    param_3[1] = uVar6;\n    uVar16 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar1 = (uVar2 * 0x20 | uVar2 >> 0x1b) + (uVar10 ^ uVar7 ^ uVar1) + uVar6 + uVar17 + 0xca62c1d6;\n    uVar6 = uVar3 ^ param_3[2] ^ param_3[0xf] ^ param_3[10];\n    uVar6 = uVar6 << 1 | uVar6 < 0;\n    param_3[2] = uVar6;\n    uVar17 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar2 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0xca62c1d6 + (uVar7 ^ uVar16 ^ uVar2) + uVar6 + uVar10;\n    uVar9 = uVar9 ^ *param_3 ^ param_3[0xb] ^ param_3[5];\n    uVar9 = uVar9 << 1 | uVar9 < 0;\n    param_3[3] = uVar9;\n    uVar13 = (uVar2 * 0x20 | uVar2 >> 0x1b) + 0xca62c1d6 + (uVar1 ^ uVar16 ^ uVar17) + uVar9 + uVar7;\n    uVar10 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar9 = param_3[1];\n    uVar3 = uVar3 ^ uVar9 ^ param_3[0xc] ^ param_3[6];\n    uVar3 = uVar3 << 1 | uVar3 < 0;\n    param_3[4] = uVar3;\n    uVar6 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar3 = (uVar10 ^ uVar2 ^ uVar17) + uVar3 + uVar16 + (uVar13 * 0x20 | uVar13 >> 0x1b) + 0xca62c1d6;\n    uVar1 = param_3[2] ^ param_3[0xd] ^ param_3[7] ^ param_3[5];\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    param_3[5] = uVar1;\n    uVar7 = uVar13 >> 2 | uVar13 * 0x40000000;\n    uVar1 = (uVar10 ^ uVar6 ^ uVar13) + uVar1 + uVar17 + (uVar3 * 0x20 | uVar3 >> 0x1b) + 0xca62c1d6;\n    uVar2 = param_3[3] ^ param_3[0xe] ^ param_3[8] ^ param_3[6];\n    uVar2 = uVar2 << 1 | uVar2 < 0;\n    param_3[6] = uVar2;\n    uVar13 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0xca62c1d6 + (uVar6 ^ uVar7 ^ uVar3) + uVar2 + uVar10;\n    uVar2 = param_3[4] ^ param_3[0xf] ^ param_3[9] ^ param_3[7];\n    uVar10 = uVar3 >> 2 | uVar3 * 0x40000000;\n    uVar3 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar2 = uVar2 << 1 | uVar2 < 0;\n    param_3[7] = uVar2;\n    uVar2 = (uVar10 ^ uVar7 ^ uVar1) + uVar2 + uVar6 + 0xca62c1d6 + (uVar13 * 0x20 | uVar13 >> 0x1b);\n    uVar1 = *param_3 ^ param_3[10] ^ param_3[8] ^ param_3[5];\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    param_3[8] = uVar1;\n    uVar7 = (uVar2 * 0x20 | uVar2 >> 0x1b) + (uVar13 ^ uVar10 ^ uVar3) + uVar1 + 0xca62c1d6 + uVar7;\n    uVar13 = uVar13 >> 2 | uVar13 * 0x40000000;\n    uVar1 = uVar9 ^ param_3[0xb] ^ param_3[9] ^ param_3[6];\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    param_3[9] = uVar1;\n    uVar6 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar10 = (uVar7 * 0x20 | uVar7 >> 0x1b) + (uVar13 ^ uVar2 ^ uVar3) + uVar1 + 0xca62c1d6 + uVar10;\n    uVar1 = param_3[2] ^ uVar4 ^ param_3[10] ^ param_3[7];\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    param_3[10] = uVar1;\n    uVar16 = uVar7 >> 2 | uVar7 * 0x40000000;\n    uVar2 = (uVar10 * 0x20 | uVar10 >> 0x1b) + 0xca62c1d6 + (uVar13 ^ uVar6 ^ uVar7) + uVar1 + uVar3;\n    uVar3 = param_3[3] ^ uVar5 ^ param_3[0xb] ^ param_3[8];\n    uVar3 = uVar3 << 1 | uVar3 < 0;\n    param_3[0xb] = uVar3;\n    uVar7 = uVar10 >> 2 | uVar10 * 0x40000000;\n    uVar1 = (uVar2 * 0x20 | uVar2 >> 0x1b) + 0xca62c1d6 + (uVar6 ^ uVar16 ^ uVar10) + uVar3 + uVar13;\n    uVar4 = param_3[9] ^ param_3[4] ^ param_3[0xe] ^ uVar4;\n    uVar3 = uVar4 << 1 | uVar4 < 0;\n    param_3[0xc] = uVar3;\n    uVar10 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar2 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0xca62c1d6 + (uVar16 ^ uVar7 ^ uVar2) + uVar3 + uVar6;\n    uVar3 = param_3[10] ^ param_3[0xf] ^ uVar5 ^ param_3[5];\n    uVar3 = uVar3 << 1 | uVar3 < 0;\n    param_3[0xd] = uVar3;\n    uVar4 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar5 = (uVar2 * 0x20 | uVar2 >> 0x1b) + 0xca62c1d6 + (uVar1 ^ uVar7 ^ uVar10) + uVar3 + uVar16;\n    uVar3 = param_3[0xb] ^ *param_3 ^ param_3[0xe] ^ param_3[6];\n    uVar3 = uVar3 << 1 | uVar3 < 0;\n    param_3[0xe] = uVar3;\n    uVar1 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar3 = (uVar5 * 0x20 | uVar5 >> 0x1b) + 0xca62c1d6 + (uVar4 ^ uVar2 ^ uVar10) + uVar3 + uVar7;\n    uVar9 = uVar9 ^ param_3[0xf] ^ param_3[7] ^ param_3[0xc];\n    uVar9 = uVar9 << 1 | uVar9 < 0;\n    param_3[0xf] = uVar9;\n    param_1[3] = param_1[3] + uVar1;\n    param_1[2] = param_1[2] + (uVar5 >> 2 | uVar5 * 0x40000000);\n    *param_1 = *param_1 + (uVar4 ^ uVar1 ^ uVar5) + uVar9 + (uVar3 * 0x20 | uVar3 >> 0x1b) + uVar10 + 0xca62c1d6;\n    param_1[1] = param_1[1] + uVar3;\n    param_1[4] = param_1[4] + uVar4;\n    return;\n}\n",
        "token_count": 11998
    },
    "0040d968": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040d968(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t unaff_retaddr;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*0x418678);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x418068, 8, *0x418674);\n        (*_sym.imp.KERNEL32.dll_TlsSetValue)(*0x418678, iVar1);\n        for (puVar2 = *0x418670; puVar2 != NULL; puVar2 = *puVar2) {\n            if (puVar2[3] != NULL) {\n                (*puVar2[3])(puVar2[2] + iVar1);\n            }\n        }\n        fcn.00412722(0x40d906, iVar1);\n    }\n    return unaff_retaddr + iVar1;\n}\n",
        "token_count": 214
    },
    "0040d9d3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040d9d3(uint32_t param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t unaff_EDI;\n    code *pcVar6;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_TlsSetValue;\n    if ((param_1 & 3) != 0) {\n        param_1 = param_1 + (4 - (param_1 & 3));\n    }\n    iVar3 = *0x418674;\n    if (*0x418674 == NULL) {\n        *0x418678 = (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n        uVar2 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x418068, 8, param_1);\n        (*pcVar1)(*0x418678, uVar2);\n        iVar3 = *0x418674;\n    }\n    *0x418674 = iVar3 + param_1;\n    pcVar6 = *0x418674;\n    uVar2 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*0x418678);\n    iVar4 = (*_sym.imp.KERNEL32.dll_HeapReAlloc)(*0x418068, 8, uVar2);\n    (*pcVar1)(*0x418678, iVar4);\n    if ((pcVar6 != NULL) || (unaff_EDI != 0)) {\n        piVar5 = fcn.0040e1f2(0x418670, 0x14);\n        *piVar5 = iVar3;\n        piVar5[1] = pcVar6;\n        piVar5[2] = unaff_EDI;\n        if (pcVar6 != NULL) {\n            (*pcVar6)(iVar3 + iVar4);\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 424
    },
    "0040dbff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t ** fcn.0040dbff(int32_t **param_1)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    \n    ppiVar3 = NULL;\n    if (param_1[7] != NULL) {\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(param_1 + 8);\n    }\n    ppiVar1 = param_1[1];\n    if (ppiVar1 == NULL) {\n        piVar2 = param_1[3] >> 4 & 0xfffffff0;\n        if (piVar2 < param_1[5]) {\n            piVar2 = param_1[5];\n        }\n        else if (param_1[6] < piVar2) {\n            piVar2 = param_1[6];\n        }\n        ppiVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x418068, 0, param_1[4] * piVar2 + 0x18);\n        if (ppiVar1 == NULL) {\n            ppiVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x418068, 0, param_1[4] + 6);\n            if (ppiVar1 == NULL) goto code_r0x0040dd3a;\n            ppiVar1[3] = 0x1;\n        }\n        else {\n            ppiVar1[3] = piVar2;\n        }\n        param_1[3] = param_1[3] + ppiVar1[3];\n        ppiVar1[4] = 0x1;\n        ppiVar1[5] = NULL;\n        ppiVar1[2] = NULL;\n        if (ppiVar1[3] < 2) {\n            *ppiVar1 = *param_1;\n            ppiVar1[1] = NULL;\n            *param_1 = ppiVar1;\n        }\n        else {\n            *ppiVar1 = param_1[1];\n            ppiVar1[1] = NULL;\n            param_1[1] = ppiVar1;\n        }\n        if (*ppiVar1 != NULL) {\n            (*ppiVar1)[1] = ppiVar1;\n        }\n        ppiVar3 = ppiVar1 + 6;\n    }\n    else {\n        if (ppiVar1[5] < 1) {\n            ppiVar3 = ppiVar1 + param_1[4] * ppiVar1[4] + 0x18;\n            ppiVar1[4] = ppiVar1[4] + 1;\n        }\n        else {\n            ppiVar3 = ppiVar1[2];\n            ppiVar1[2] = *ppiVar3;\n            ppiVar1[5] = ppiVar1[5] + -1;\n        }\n        if ((ppiVar1[5] == NULL) && (ppiVar1[3] <= ppiVar1[4])) {\n            if (*ppiVar1 != NULL) {\n                *(*ppiVar1 + 4) = ppiVar1[1];\n            }\n            if (ppiVar1 == param_1[1]) {\n                param_1[1] = *ppiVar1;\n            }\n            else {\n                *ppiVar1[1] = *ppiVar1;\n            }\n            *ppiVar1 = *param_1;\n            ppiVar1[1] = NULL;\n            *param_1 = ppiVar1;\n            if (*ppiVar1 != NULL) {\n                *(*ppiVar1 + 4) = ppiVar1;\n            }\n        }\n    }\ncode_r0x0040dd3a:\n    if (param_1[7] != NULL) {\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1 + 8);\n    }\n    if (ppiVar3 == NULL) {\n        ppiVar3 = NULL;\n    }\n    else {\n        *ppiVar3 = ppiVar1;\n        ppiVar3 = ppiVar3 + 1;\n    }\n    return ppiVar3;\n}\n",
        "token_count": 917
    },
    "0040de99": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint * fcn.0040de99(int32_t param_1, uint param_2, uint param_3, uint32_t param_4)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint unaff_EBX;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint unaff_retaddr;\n    int32_t iVar5;\n    \n    uVar3 = param_1 + 4;\n    puVar4 = NULL;\n    if ((uVar3 & 3) != 0) {\n        uVar3 = uVar3 + (4 - (uVar3 & 3));\n    }\n    if ((param_4 & 4) == 0) {\n        puVar4 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x418068, 0, 0x38);\n        if (puVar4 != NULL) {\n            puVar4[5] = unaff_EBX;\n            puVar4[6] = unaff_retaddr;\n            *puVar4 = 0;\n            puVar4[1] = 0;\n            puVar4[2] = 0;\n            puVar4[4] = uVar3;\n            if (((param_4 & 3) == 1) || ((param_4 & 3) == 0)) {\n                puVar4[7] = 1;\n                (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(puVar4 + 8);\n            }\n            else {\n                puVar4[7] = 0;\n            }\n        }\n    }\n    else {\n        fcn.0040e0c3(0x41867c, 0x40e062);\n        iVar5 = 0x418684;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x418684);\n        for (puVar1 = *0x418680; puVar1 != NULL; puVar1 = *puVar1) {\n            if ((puVar1[3] == uVar3) && (puVar1[4] == param_1)) {\n                puVar1[5] = puVar1[5] + 1;\n                puVar4 = puVar1[2];\n                puVar1 = *0x418680;\n                if (puVar4 != NULL) goto code_r0x0040df65;\n                break;\n            }\n        }\n        puVar2 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x418068, 0, 0x18);\n        puVar1 = *0x418680;\n        if (puVar2 != NULL) {\n            iVar5 = uVar3 - 4;\n            puVar4 = fcn.0040de99();\n            puVar1 = *0x418680;\n            if (puVar4 != NULL) {\n                puVar4[2] = puVar2;\n                puVar2[1] = 0;\n                puVar2[2] = puVar4;\n                puVar2[3] = uVar3;\n                puVar2[4] = param_1;\n                puVar2[5] = 1;\n                *puVar2 = *0x418680;\n                puVar1 = puVar2;\n                if (*0x418680 != NULL) {\n                    (*0x418680)[1] = puVar2;\n                }\n            }\n        }\ncode_r0x0040df65:\n        *0x418680 = puVar1;\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x418684, iVar5);\n    }\n    return puVar4;\n}\n",
        "token_count": 792
    },
    "0040e266": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * fcn.0040e266(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint unaff_EBP;\n    uint *unaff_ESI;\n    uint unaff_EDI;\n    int32_t unaff_retaddr;\n    int32_t *in_stack_00000014;\n    uint *puVar4;\n    int32_t iVar5;\n    \n    iVar5 = *in_stack_00000014;\n    fcn.0040e3b9(iVar5);\n    puVar1 = NULL;\n    if (0 < param_1) {\n        iVar2 = unaff_retaddr * param_1;\n        puVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x418068, 0, iVar2 + 0x18);\n        if (puVar1 != NULL) {\n            puVar1[1] = unaff_EDI;\n            puVar1[2] = unaff_retaddr;\n            puVar1[4] = param_1;\n            puVar1[5] = unaff_EBP;\n            puVar1[3] = in_stack_00000014;\n            *puVar1 = 1;\n            puVar3 = puVar1 + 6;\n            puVar4 = puVar3;\n            sub.MSVCRT.dll_memset(puVar3, 0, iVar2);\n            *in_stack_00000014 = puVar3;\n            iVar2 = fcn.00412104(unaff_retaddr);\n            puVar1 = puVar3;\n            if ((iVar2 != 0) && (0 < param_1)) {\n                do {\n                    puVar1 = unaff_ESI;\n                    fcn.0041252f(puVar4, unaff_retaddr, puVar3);\n                    puVar3 = puVar3 + iVar5;\n                    param_1 = param_1 + -1;\n                    unaff_ESI = puVar1;\n                } while (param_1 != 0);\n            }\n        }\n    }\n    return puVar1;\n}\n",
        "token_count": 460
    },
    "0040e3b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040e3b9(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    \n    if (param_1 != 0) {\n        if ((*(param_1 + -0x10) != 0) && (iVar1 = 0,  arg_8h = param_1,  0 < *(param_1 + -8))) {\n            do {\n                fcn.0041242a(arg_8h, *(param_1 + -0x10));\n                arg_8h = arg_8h + *(param_1 + -0x14);\n                iVar1 = iVar1 + 1;\n            } while (iVar1 < *(param_1 + -8));\n        }\n        **(param_1 + -0xc) = 0;\n        (*_sym.imp.KERNEL32.dll_HeapFree)(*0x418068, 0, param_1 + -0x18);\n    }\n    return;\n}\n",
        "token_count": 220
    },
    "0040e720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get thread local storage value"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.0040e720(uint param_1)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*0x417168, param_1);\n    *(iVar1 + 8) = *(iVar1 + 8) + 2;\n    return;\n}\n",
        "token_count": 97
    },
    "0040e750": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get thread local storage value"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __fastcall fcn.0040e750(uint param_1)\n\n{\n    int32_t *piVar1;\n    uint var_4h;\n    \n    piVar1 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*0x417168, param_1);\n    return *piVar1 + piVar1[2];\n}\n",
        "token_count": 92
    },
    "0040e880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040e880(uint32_t arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    puVar1 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*0x417168);\n    if ((arg_8h < *puVar1) || (*puVar1 + puVar1[2] < arg_8h)) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = (arg_8h - *puVar1) + 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 139
    },
    "0040e8d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get thread local storage value"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040e8d0(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint var_4h;\n    \n    piVar1 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*0x417168);\n    return *piVar1 + arg_8h;\n}\n",
        "token_count": 76
    },
    "0040ede0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get thread local storage value"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040ede0(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar1 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*0x417168);\n    piVar1[2] = arg_8h;\n    return *piVar1 + piVar1[2];\n}\n",
        "token_count": 95
    },
    "0040ee60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ee60(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.0040ee80(param_1, param_2, param_3, &stack0x00000010);\n    return;\n}\n",
        "token_count": 57
    },
    "004108d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004108d0(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.00410810(param_1, 0xf, param_2, param_3);\n    return;\n}\n",
        "token_count": 52
    },
    "0041206c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nushort * fcn.0041206c(ushort *param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    ushort *puVar2;\n    \n    puVar2 = param_1;\n    if ((param_3 < 1) && (param_3 < 0)) {\n        uVar1 = ~param_2;\n        param_2 = uVar1 + 1;\n        *param_1 = 0x2d;\n        param_3 = ~param_3 + (0xfffffffe < uVar1);\n        puVar2 = param_1 + 1;\n    }\n    fcn.004120a6(puVar2, param_2, param_3);\n    return param_1;\n}\n",
        "token_count": 172
    },
    "004120a6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * fcn.004120a6(int16_t *param_1, uint param_2)\n\n{\n    int16_t extraout_CX;\n    int16_t *piVar1;\n    int16_t *piVar2;\n    int64_t iVar3;\n    int16_t aiStack64 [30];\n    uint uStack4;\n    \n    piVar2 = aiStack64;\n    do {\n        iVar3 = fcn.00405260();\n        uStack4 = param_2;\n        *piVar2 = extraout_CX + 0x30;\n        piVar2 = piVar2 + 1;\n        param_2 = iVar3;\n        piVar1 = param_1;\n    } while (iVar3 != 0);\n    do {\n        piVar2 = piVar2 + -1;\n        *piVar1 = *piVar2;\n        piVar1 = piVar1 + 1;\n    } while (piVar2 != &stack0xffffffb0);\n    *piVar1 = 0;\n    return param_1;\n}\n",
        "token_count": 233
    },
    "00412840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * fcn.00412840(int16_t *param_1)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    \n    if (param_1 != NULL) {\n        piVar5 = param_1;\n        do {\n            iVar1 = *piVar5;\n            piVar5 = piVar5 + 1;\n        } while (iVar1 != 0);\n        iVar4 = (piVar5 - (param_1 + 1) >> 1) + 1;\n        iVar2 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0xfde9, 0, param_1, iVar4, 0, 0, 0, 0);\n        if (iVar2 != 0) {\n            puVar3 = sub.MSVCRT.dll_malloc(iVar2 + 1);\n            if (puVar3 != NULL) {\n                iVar4 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0xfde9, 0, param_1, iVar4, puVar3, iVar2, 0, 0);\n                puVar3[iVar4] = 0;\n                return puVar3;\n            }\n        }\n    }\n    puVar3 = sub.MSVCRT.dll_malloc(1);\n    *puVar3 = 0;\n    return puVar3;\n}\n",
        "token_count": 320
    },
    "00408e27": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint fcn.00408e27(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = fcn.004094d1();\n    fcn.00409588(1);\n    uVar1 = (*_sym.imp.USER32.DLL_MessageBoxW)(uVar1, param_1, unaff_retaddr, param_2);\n    fcn.00409588(0);\n    return uVar1;\n}\n",
        "token_count": 108
    },
    "0040b991": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "hash data using SHA1"
        ],
        "decompiled_code": "\nvoid fcn.0040b991(uint *param_1, uint param_2)\n\n{\n    param_1[6] = 0;\n    param_1[5] = 0;\n    *param_1 = 0x67452301;\n    param_1[1] = 0xefcdab89;\n    param_1[2] = 0x98badcfe;\n    param_1[3] = 0x10325476;\n    param_1[4] = 0xc3d2e1f0;\n    param_1[0x17] = param_2;\n    return;\n}\n",
        "token_count": 139
    },
    "0040cef0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "hash data with MD5"
        ],
        "decompiled_code": "\nvoid fcn.0040cef0(uint *param_1)\n\n{\n    param_1[5] = 0;\n    param_1[4] = 0;\n    *param_1 = 0x67452301;\n    param_1[1] = 0xefcdab89;\n    param_1[2] = 0x98badcfe;\n    param_1[3] = 0x10325476;\n    return;\n}\n",
        "token_count": 101
    },
    "0040dbac": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * fcn.0040dbac(void)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EDI;\n    uint unaff_retaddr;\n    \n    puVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x418068, 8);\n    puVar1[4] = 0;\n    *puVar1 = 0x38;\n    puVar1[5] = unaff_retaddr;\n    puVar1[1] = unaff_EDI;\n    puVar1[2] = unaff_EDI;\n    uVar2 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x418068, 8, unaff_EDI << 2);\n    puVar1[3] = uVar2;\n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(puVar1 + 8);\n    return puVar1;\n}\n",
        "token_count": 201
    },
    "00405b20": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00405b20(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    ushort *arg_8h;\n    uint32_t uVar2;\n    uint32_t arg_8h_00;\n    int32_t unaff_ESI;\n    \n    uVar1 = fcn.00405de0(param_1);\n    uVar2 = (param_1 < 0) - 1 & param_1;\n    arg_8h_00 = uVar1;\n    if (uVar2 < uVar1) {\n        arg_8h_00 = uVar2;\n    }\n    fcn.0040e880(param_1);\n    arg_8h = fcn.0040e900(arg_8h_00, param_1);\n    if (unaff_ESI != 0) {\n        param_1 = fcn.0040ea10(unaff_ESI);\n    }\n    if (param_1 != 0) {\n        fcn.0040ea40(arg_8h, param_1 + (uVar1 - arg_8h_00) * 2, arg_8h_00);\n        return;\n    }\n    *arg_8h = 0;\n    return;\n}\n",
        "token_count": 274
    },
    "00405f20": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00405f20(uint32_t param_1)\n\n{\n    uint32_t arg_8h;\n    int32_t arg_8h_00;\n    ushort *arg_8h_01;\n    uint32_t uVar1;\n    \n    arg_8h = fcn.00405de0(param_1);\n    uVar1 = (param_1 < 0) - 1 & param_1;\n    if (uVar1 < arg_8h) {\n        arg_8h = uVar1;\n    }\n    arg_8h_00 = fcn.0040e880(param_1);\n    arg_8h_01 = fcn.0040e900(arg_8h, param_1);\n    if (arg_8h_00 != 0) {\n        param_1 = fcn.0040ea10(arg_8h_00);\n    }\n    if ((param_1 != 0) && (0 < arg_8h)) {\n        fcn.0040ea40(arg_8h_01, param_1, arg_8h);\n        return;\n    }\n    *arg_8h_01 = 0;\n    return;\n}\n",
        "token_count": 262
    },
    "004053c1": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nbool fcn.004053c1(uint param_1)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    \n    iVar1 = fcn.004053e4(param_1);\n    if (iVar1 == 0) {\n        bVar2 = false;\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(iVar1, 0);\n        bVar2 = iVar1 != 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 110
    },
    "004053e4": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nuint fcn.004053e4(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_retaddr;\n    \n    uVar3 = 0;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x418708);\n    puVar1 = *0x41811c;\n    do {\n        if (puVar1 == NULL) {\ncode_r0x00405421:\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x418708);\n            return uVar3;\n        }\n        if (puVar1[3] == unaff_retaddr) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(puVar1[2], 0);\n            if (iVar2 != 0) {\n                uVar3 = puVar1[2];\n            }\n            goto code_r0x00405421;\n        }\n        puVar1 = *puVar1;\n    } while( true );\n}\n",
        "token_count": 221
    },
    "0040548c": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nint32_t fcn.0040548c(uint param_1, uint param_2)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uchar auStack4 [4];\n    \n    iVar5 = 0;\n    iVar3 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0x1000, param_1, param_2, 0, auStack4);\n    if (iVar3 != 0) {\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x418708);\n        iVar5 = *0x417108;\n        puVar2 = *0x41811c;\n        while (puVar2 != NULL) {\n            puVar1 = puVar2 + 2;\n            *0x417108 = iVar5;\n            iVar5 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*puVar1, 0);\n            if (iVar5 == 0) {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(*puVar1);\n                puVar2 = *puVar2;\n                fcn.0040e1b2(0x41811c, puVar1);\n                iVar5 = *0x417108;\n            }\n            else {\n                puVar2 = *puVar2;\n                iVar5 = *0x417108;\n            }\n        }\n        *0x417108 = iVar5 + 1;\n        piVar4 = fcn.0040e1f2(0x41811c, 0x10);\n        *piVar4 = iVar3;\n        piVar4[1] = iVar5;\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x418708);\n    }\n    return iVar5;\n}\n",
        "token_count": 400
    },
    "004098f7": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004098f7(uint *lpTotalBytesAvail)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    bool bVar3;\n    \n    puVar1 = lpTotalBytesAvail;\n    iVar2 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*lpTotalBytesAvail, 0);\n    if (iVar2 == 0) {\n        if (puVar1[3] == 0) {\n            bVar3 = false;\n        }\n        else {\n            lpTotalBytesAvail = NULL;\n            (*_sym.imp.KERNEL32.dll_PeekNamedPipe)(puVar1[3], 0, 0, 0, &lpTotalBytesAvail, 0);\n            bVar3 = lpTotalBytesAvail != NULL;\n        }\n    }\n    else {\n        bVar3 = true;\n    }\n    return bVar3;\n}\n",
        "token_count": 200
    },
    "0040e1b2": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0040e1b2(int32_t **param_1, int32_t param_2)\n\n{\n    int32_t **ppiVar1;\n    \n    ppiVar1 = param_2 + -8;\n    if (*param_1 == ppiVar1) {\n        *param_1 = *ppiVar1;\n        if (*ppiVar1 != NULL) {\n            (*ppiVar1)[1] = 0;\n        }\n    }\n    else {\n        **(param_2 + -4) = *ppiVar1;\n        if (*ppiVar1 != NULL) {\n            (*ppiVar1)[1] = *(param_2 + -4);\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_HeapFree)(*0x418068, 0, ppiVar1);\n    return;\n}\n",
        "token_count": 180
    },
    "0040d8a0": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.0040d8a0(int32_t *param_1, uint param_2)\n\n{\n    int16_t *piVar1;\n    int16_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    \n    iVar4 = 0;\n    if (param_1 != NULL) {\n        iVar4 = (*param_1 >> 0x1f & 7U) + *param_1 >> 3;\n    }\n    piVar1 = fcn.0040e900(iVar4 * 2, param_2);\n    if (0 < iVar4) {\n        piVar2 = piVar1;\n        piVar3 = param_1 + 1;\n        do {\n            piVar1 = piVar2 + 2;\n            *piVar2 = \"0123456789abcdefK\"[*piVar3 >> 4];\n            piVar2[1] = \"0123456789abcdefK\"[*piVar3 & 0xf];\n            iVar4 = iVar4 + -1;\n            piVar2 = piVar1;\n            piVar3 = piVar3 + 1;\n        } while (iVar4 != 0);\n    }\n    *piVar1 = 0;\n    return;\n}\n",
        "token_count": 278
    },
    "0040adc5": {
        "rules": [
            "set file attributes"
        ],
        "decompiled_code": "\nvoid fcn.0040adc5(int32_t param_1)\n\n{\n    if (param_1 != 0) {\n    // WARNING: Could not recover jumptable at 0x0040adcd. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.KERNEL32.dll_SetFileAttributesW)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "00405373": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405373(void)\n\n{\n    uint *puVar1;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x418708);\n    while (*0x41811c != 0) {\n        puVar1 = *0x41811c + 8;\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*puVar1);\n        fcn.0040e1b2(0x41811c, puVar1);\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x418708);\n    return;\n}\n",
        "token_count": 125
    },
    "00405eb0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405eb0(int16_t *param_1)\n\n{\n    int16_t iVar1;\n    uint arg_8h;\n    int32_t arg_8h_00;\n    ushort *puVar2;\n    int16_t *piVar3;\n    uint unaff_retaddr;\n    \n    arg_8h = fcn.00405de0(param_1);\n    arg_8h_00 = fcn.0040e880(param_1);\n    puVar2 = fcn.0040e900(arg_8h, unaff_retaddr);\n    if (arg_8h_00 != 0) {\n        param_1 = fcn.0040ea10(arg_8h_00);\n    }\n    if (param_1 != NULL) {\n        piVar3 = param_1;\n        do {\n            iVar1 = *piVar3;\n            piVar3 = piVar3 + 1;\n            *(puVar2 + (-2 - param_1) + piVar3) = iVar1;\n        } while (iVar1 != 0);\n        (*_sym.imp.USER32.DLL_CharUpperW)(puVar2);\n        return;\n    }\n    *puVar2 = 0;\n    return;\n}\n",
        "token_count": 270
    },
    "0040a54f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040a54f(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    code *pcVar3;\n    \n    if (param_1 != 0) {\n        fcn.0040a79a(param_1);\n        fcn.0040dfc6(*(param_1 + 0x38));\n        pcVar3 = _sym.imp.KERNEL32.dll_HeapFree;\n        (*_sym.imp.KERNEL32.dll_HeapFree)(*0x418068, 0, *(param_1 + 4));\n        (*pcVar3)(*0x418068, 0, *(param_1 + 0xc));\n        puVar2 = *(param_1 + 0x34);\n        while (puVar2 != NULL) {\n            puVar1 = *puVar2;\n            (*pcVar3)(*0x418068, 0, puVar2);\n            puVar2 = puVar1;\n        }\n        **(param_1 + 0x30) = 0;\n        (*pcVar3)(*0x418068, 0, param_1);\n    }\n    return;\n}\n",
        "token_count": 255
    },
    "0040ab16": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040ab16(uint *param_1)\n\n{\n    int32_t arg_ch;\n    uint *puVar1;\n    uint *puVar2;\n    \n    arg_ch = param_1[6];\n    puVar2 = *param_1;\n    if (arg_ch == 0) {\n        while (puVar2 != NULL) {\n            puVar2 = *puVar2;\n            fcn.0040ddcb();\n        }\n    }\n    else {\n        while (puVar2 != NULL) {\n            puVar1 = *puVar2;\n            fcn.0041242a(puVar2 + 2, arg_ch);\n            fcn.0040ddcb();\n            puVar2 = puVar1;\n        }\n    }\n    param_1[2] = 0;\n    *param_1[3] = 0;\n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[4] = 0;\n    *(param_1 + 0xc) = 1;\n    return;\n}\n",
        "token_count": 237
    },
    "0040ace4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ace4(uint *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0;\n    if ((arg_8h != NULL) && (arg_ch != 0)) {\n        if (arg_10h != 0) {\n            fcn.0040ab16(arg_ch);\n        }\n        for (arg_8h = *arg_8h; arg_8h != NULL; arg_8h = *arg_8h) {\n            fcn.0040ab74(arg_ch);\n            fcn.00412154();\n        }\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 163
    },
    "0040d6cd": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040d6cd(uchar *param_1, int32_t param_2, int32_t param_3)\n\n{\n    if (param_3 != 0) {\n        param_2 = param_2 - param_1;\n        do {\n            *param_1 = param_1[param_2];\n            param_1 = param_1 + 1;\n            param_3 = param_3 + -1;\n        } while (param_3 != 0);\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "0040d700": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040d700(int32_t param_1, uint param_2, uint param_3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    \n    iVar5 = 0;\n    iVar2 = fcn.0040d7f0(param_2);\n    if (iVar2 != 0) {\n        if (param_1 == 0) {\n            param_1 = 0x413024;\n        }\n        iVar5 = (**(iVar2 + 4))(param_2, 1);\n        if (iVar5 != 0) {\n            pcVar3 = fcn.00412840(param_1);\n            pcVar4 = pcVar3;\n            do {\n                cVar1 = *pcVar4;\n                pcVar4 = pcVar4 + 1;\n            } while (cVar1 != '\\0');\n            (**(iVar2 + 8))(iVar5, pcVar3, pcVar4 - (pcVar3 + 1));\n            (**(iVar2 + 0xc))(iVar5);\n            fcn.00412830(pcVar3);\n        }\n    }\n    fcn.0040d8a0(iVar5, param_3);\n    if (iVar5 != 0) {\n        (**(iVar2 + 0x10))(iVar5);\n    }\n    return;\n}\n",
        "token_count": 313
    },
    "0040dd5d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040dd5d(uint *param_1)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    \n    if (param_1[7] != 0) {\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(param_1 + 8);\n    }\n    puVar2 = param_1[1];\n    while (puVar2 != NULL) {\n        puVar1 = *puVar2;\n        (*_sym.imp.KERNEL32.dll_HeapFree)(*0x418068, 0, puVar2);\n        puVar2 = puVar1;\n    }\n    puVar2 = *param_1;\n    while (puVar2 != NULL) {\n        puVar1 = *puVar2;\n        (*_sym.imp.KERNEL32.dll_HeapFree)(*0x418068, 0, puVar2);\n        puVar2 = puVar1;\n    }\n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[3] = 0;\n    if (param_1[7] != 0) {\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1 + 8);\n    }\n    return;\n}\n",
        "token_count": 271
    },
    "0040e221": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0040e221(uint *param_1, int32_t param_2)\n\n{\n    while( true ) {\n        if (param_1 == NULL) {\n            return 0;\n        }\n        if (param_1 == param_2 + -8) break;\n        param_1 = *param_1;\n    }\n    return param_2;\n}\n",
        "token_count": 83
    },
    "004126a4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004126a4(int32_t *param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    (*_sym.imp.KERNEL32.dll_UnregisterWait)(param_1[3]);\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(param_1[4]);\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x4186e8);\n    iVar2 = param_1[1];\n    if (*param_1 != 0) {\n        *(*param_1 + 4) = param_1[1];\n        iVar2 = *0x4186e4;\n    }\n    *0x4186e4 = iVar2;\n    if (param_1[1] != NULL) {\n        *param_1[1] = *param_1;\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4186e8);\n    puVar3 = param_1[2];\n    while (puVar3 != NULL) {\n        puVar1 = *puVar3;\n        (*puVar3[1])(puVar3[2]);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(*0x418068, 0, puVar3);\n        puVar3 = puVar1;\n    }\n    (*_sym.imp.KERNEL32.dll_HeapFree)(*0x418068, 0, param_1);\n    return;\n}\n",
        "token_count": 318
    },
    "0040add6": {
        "rules": [
            "get common file path",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0040add6(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    \n    iVar1 = fcn.0040e900(0x104, param_1);\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetTempPathW)(0x104, iVar1);\n    iVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(L\"Kernel32.DLL\");\n    if (iVar3 != 0) {\n        pcVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"GetLongPathNameW\");\n        if (pcVar4 != NULL) {\n            iVar2 = (*pcVar4)(iVar1, iVar1, 0x104);\n        }\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar3);\n    }\n    fcn.0040ea90(0x104 - iVar2);\n    *(iVar1 + iVar2 * 2) = 0;\n    return;\n}\n",
        "token_count": 231
    },
    "0040ae75": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nvoid fcn.0040ae75(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.0040e900(0x104, param_1);\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)(0x104, iVar1);\n    if (iVar2 != 0) {\n        if (*(iVar1 + -2 + iVar2 * 2) != 0x5c) {\n            *(iVar1 + iVar2 * 2) = 0x5c;\n            iVar2 = iVar2 + 1;\n        }\n    }\n    fcn.0040ea90(0x104 - iVar2);\n    *(iVar1 + iVar2 * 2) = 0;\n    return;\n}\n",
        "token_count": 174
    },
    "0040afec": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040afec(uint nFolder, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint ppidl;\n    \n    iVar2 = 0;\n    iVar1 = (*_sym.imp.SHELL32.DLL_SHGetFolderLocation)(0, nFolder, 0, 0, &ppidl);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.SHELL32.DLL_SHGetPathFromIDListW)(ppidl, arg_ch);\n        if (iVar1 != 0) {\n            iVar2 = sub.MSVCRT.dll_wcslen(arg_ch);\n            if (iVar2 != 0) {\n                if (*(arg_ch + -2 + iVar2 * 2) != 0x5c) {\n                    *(arg_ch + iVar2 * 2) = 0x5c;\n                    iVar2 = iVar2 + 1;\n                }\n            }\n        }\n        (*_sym.imp.OLE32.DLL_CoTaskMemFree)(ppidl);\n    }\n    *(arg_ch + iVar2 * 2) = 0;\n    return iVar2;\n}\n",
        "token_count": 257
    },
    "00405170": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00405170(uint param_1, uint param_2)\n\n{\n    uint *puVar1;\n    \n    puVar1 = sub.KERNEL32.dll_TlsGetValue(*0x417168, param_1, param_2);\n    return CONCAT44(param_1, *puVar1);\n}\n",
        "token_count": 70
    },
    "00405182": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nulong fcn.00405182(void)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    \n    uVar1 = *0x417168;\n    puVar2 = sub.KERNEL32.dll_TlsGetValue();\n    return CONCAT44(*puVar2, uVar1);\n}\n",
        "token_count": 64
    },
    "0040e520": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nuint fcn.0040e520(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint dwErrCode;\n    uint var_4h;\n    \n    uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    iVar3 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*0x417168);\n    uVar1 = *(iVar3 + 8);\n    (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n    return uVar1;\n}\n",
        "token_count": 122
    },
    "0040e9e0": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e9e0(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint var_4h;\n    \n    piVar1 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*0x417168);\n    piVar1[2] = arg_8h;\n    *(*piVar1 + arg_8h) = 0;\n    return;\n}\n",
        "token_count": 93
    },
    "0040ea10": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040ea10(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint var_4h;\n    \n    piVar1 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*0x417168);\n    return *piVar1 + -1 + arg_8h;\n}\n",
        "token_count": 77
    },
    "0040eda0": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.0040eda0(uint param_1)\n\n{\n    uint *puVar1;\n    uint var_4h;\n    \n    puVar1 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*0x417168, param_1);\n    (*_sym.imp.KERNEL32.dll_HeapFree)(*0x418788, 0, *puVar1);\n    (*_sym.imp.KERNEL32.dll_HeapFree)(*0x418788, 0, puVar1);\n    return;\n}\n",
        "token_count": 129
    },
    "0040ee20": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: dwErrCode\n\nvoid __cdecl fcn.0040ee20(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint dwErrCode;\n    uint var_4h;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    iVar2 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*0x417168, uVar1);\n    *(iVar2 + 8) = arg_8h;\n    (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n    return;\n}\n",
        "token_count": 135
    },
    "00408eb4": {
        "rules": [
            "get graphical window text"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408eb4(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    if (arg_ch == 2) {\n        (*_sym.imp.USER32.DLL_UnregisterClassW)(*0x41710c, *0x41806c);\n        *0x418128 = 1;\n        return 0;\n    }\n    if (arg_ch != 0x10) {\n        if (arg_ch != 0x111) {\n    // WARNING: Could not recover jumptable at 0x00408ecf. Too many branches\n    // WARNING: Treating indirect jump as call\n            uVar1 = (*_sym.imp.USER32.DLL_DefWindowProcW)();\n            return uVar1;\n        }\n        if (arg_10h == 1000) {\n            puVar2 = (*_sym.imp.USER32.DLL_GetWindowLongW)(arg_8h, 0xffffffeb);\n            iVar3 = (*_sym.imp.USER32.DLL_GetWindowTextLengthW)(*0x418130);\n            uVar4 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x418068, 0, (iVar3 + 1) * 2);\n            uVar1 = *0x418130;\n            *puVar2 = uVar4;\n            (*_sym.imp.USER32.DLL_GetWindowTextW)(uVar1, uVar4, iVar3 + 1);\n            fcn.004092f2();\n            (*_sym.imp.USER32.DLL_DestroyWindow)(arg_8h);\n            return 0;\n        }\n        if (arg_10h != 0x3e9) {\n            return 0;\n        }\n    }\n    fcn.004092f2();\n    (*_sym.imp.USER32.DLL_DestroyWindow)(arg_8h);\n    return 0;\n}\n",
        "token_count": 432
    },
    "0040993e": {
        "rules": [
            "terminate process"
        ],
        "decompiled_code": "\nvoid fcn.0040993e(uint *param_1)\n\n{\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(*param_1, 0xffffffff);\n    return;\n}\n",
        "token_count": 42
    },
    "0040ed40": {
        "rules": [
            "set thread local storage value"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpTlsValue\n\nvoid __fastcall fcn.0040ed40(uint param_1)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint lpTlsValue;\n    \n    puVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x418788, 0, 0xc, param_1);\n    uVar2 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x418788, 0, 0x10);\n    *puVar1 = uVar2;\n    puVar1[1] = 0x10;\n    puVar1[2] = 0;\n    (*_sym.imp.KERNEL32.dll_TlsSetValue)(*0x417168, puVar1);\n    return;\n}\n",
        "token_count": 177
    },
    "0040e4d0": {
        "rules": [
            "allocate thread local storage"
        ],
        "decompiled_code": "\nvoid fcn.0040e4d0(void)\n\n{\n    *0x418788 = (*_sym.imp.KERNEL32.dll_HeapCreate)(0, 0x1000, 0);\n    *0x417168 = (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n    fcn.0040ed40();\n    return;\n}\n",
        "token_count": 76
    }
}