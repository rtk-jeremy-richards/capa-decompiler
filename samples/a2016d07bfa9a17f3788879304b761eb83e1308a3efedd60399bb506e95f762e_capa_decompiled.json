{
    "0040100f": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8ch\n\nuint * __cdecl fcn.0040100f(char *TokenHandle, uint *lpnLengthNeeded, uint32_t pcbBuffer)\n\n{\n    char cVar1;\n    uint *arg_8h;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint unaff_EBX;\n    uint *puVar6;\n    char *pcVar7;\n    char *pcVar8;\n    uint *puVar9;\n    uint var_8ch;\n    uchar var_80h;\n    uint var_7fh;\n    uchar lpBuffer;\n    uint var_3fh;\n    \n    arg_8h = lpnLengthNeeded;\n    if (lpnLengthNeeded == NULL) {\n        (*_sym.imp.KERNEL32.dll_SetLastError)(0x57);\n        return NULL;\n    }\n    if (TokenHandle == NULL) {\n        *lpnLengthNeeded = 0;\n    }\n    else {\n        uVar3 = 0xffffffff;\n        pcVar7 = TokenHandle;\n        do {\n            pcVar8 = pcVar7;\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            pcVar8 = pcVar7 + 1;\n            cVar1 = *pcVar7;\n            pcVar7 = pcVar8;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar3;\n        puVar6 = pcVar8 + -uVar3;\n        puVar9 = lpnLengthNeeded;\n        for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar9 = *puVar6;\n            puVar6 = puVar6 + 1;\n            puVar9 = puVar9 + 1;\n        }\n        for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar9 = *puVar6;\n            puVar6 = puVar6 + 1;\n            puVar9 = puVar9 + 1;\n        }\n    }\n    if ((pcbBuffer & 2) != 0) {\n        uVar3 = 0xffffffff;\n        pcVar7 = 0x45b0e0;\n        do {\n            pcVar8 = pcVar7;\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            pcVar8 = pcVar7 + 1;\n            cVar1 = *pcVar7;\n            pcVar7 = pcVar8;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar3;\n        iVar5 = -1;\n        puVar6 = lpnLengthNeeded;\n        do {\n            puVar9 = puVar6;\n            if (iVar5 == 0) break;\n            iVar5 = iVar5 + -1;\n            puVar9 = puVar6 + 1;\n            cVar1 = *puVar6;\n            puVar6 = puVar9;\n        } while (cVar1 != '\\0');\n        puVar6 = pcVar8 + -uVar3;\n        puVar9 = puVar9 + -1;\n        for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar9 = *puVar6;\n            puVar6 = puVar6 + 1;\n            puVar9 = puVar9 + 1;\n        }\n        for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar9 = *puVar6;\n            puVar6 = puVar6 + 1;\n            puVar9 = puVar9 + 1;\n        }\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        uVar2 = (*_sym.imp.USER32.dll_GetThreadDesktop)(uVar2);\n        uVar3 = 0xffffffff;\n        puVar6 = arg_8h;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *puVar6;\n            puVar6 = puVar6 + 1;\n        } while (cVar1 != '\\0');\n        lpnLengthNeeded = 0x103 - (~uVar3 - 1);\n        uVar3 = 0xffffffff;\n        puVar6 = arg_8h;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *puVar6;\n            puVar6 = puVar6 + 1;\n        } while (cVar1 != '\\0');\n        iVar5 = (*_sym.imp.USER32.dll_GetUserObjectInformationA)\n                          (uVar2, 2, (~uVar3 - 1) + arg_8h, lpnLengthNeeded, &lpnLengthNeeded);\n        if (iVar5 == 0) {\n            fcn.0040c77f(arg_8h, \"Win9x\", lpnLengthNeeded);\n        }\n    }\n    if ((pcbBuffer & 1) != 0) {\n        TokenHandle = NULL;\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(8, &TokenHandle);\n        iVar5 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar2);\n        if (iVar5 != 0) {\n            uVar3 = 0xffffffff;\n            puVar6 = arg_8h;\n            do {\n                if (uVar3 == 0) break;\n                uVar3 = uVar3 - 1;\n                cVar1 = *puVar6;\n                puVar6 = puVar6 + 1;\n            } while (cVar1 != '\\0');\n            if (9 < 0x104 - (~uVar3 - 1)) {\n                lpnLengthNeeded = NULL;\n                iVar5 = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)(TokenHandle, 10, 0, 0, &lpnLengthNeeded);\n                if (iVar5 == 0) {\n                    iVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                    puVar6 = lpnLengthNeeded;\n                    if (iVar5 == 0x7a) {\n                        fcn.0040c750();\n                        iVar5 = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)\n                                          (TokenHandle, 10, &var_8ch, puVar6, &lpnLengthNeeded);\n                        if (iVar5 != 0) {\n                            uVar3 = 0xffffffff;\n                            puVar6 = arg_8h;\n                            do {\n                                if (uVar3 == 0) break;\n                                uVar3 = uVar3 - 1;\n                                cVar1 = *puVar6;\n                                puVar6 = puVar6 + 1;\n                            } while (cVar1 != '\\0');\n                            (*_sym.imp.USER32.dll_wsprintfA)((~uVar3 - 1) + arg_8h, \"-%08x%08x\", _var_80h, unaff_EBX);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if ((pcbBuffer & 4) != 0) {\n        lpBuffer = 0;\n        puVar6 = &var_3fh;\n        for (iVar5 = 0xf; iVar5 != 0; iVar5 = iVar5 + -1) {\n            *puVar6 = 0;\n            puVar6 = puVar6 + 1;\n        }\n        *puVar6 = 0;\n        *(puVar6 + 2) = 0;\n        _var_80h = _var_80h & 0xffffff00;\n        puVar6 = &var_7fh;\n        for (iVar5 = 0xf; iVar5 != 0; iVar5 = iVar5 + -1) {\n            *puVar6 = 0;\n            puVar6 = puVar6 + 1;\n        }\n        *puVar6 = 0;\n        *(puVar6 + 2) = 0;\n        pcbBuffer = 0x40;\n        iVar5 = (*_sym.imp.ADVAPI32.dll_GetUserNameA)(&lpBuffer, &pcbBuffer);\n        if (iVar5 != 0) {\n            iVar5 = (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableA)(\"USERDOMAIN\", &var_80h, 0x40);\n            uVar3 = 0xffffffff;\n            puVar6 = arg_8h;\n            do {\n                if (uVar3 == 0) break;\n                uVar3 = uVar3 - 1;\n                cVar1 = *puVar6;\n                puVar6 = puVar6 + 1;\n            } while (cVar1 != '\\0');\n            if (iVar5 + 3 + pcbBuffer < 0x104 - (~uVar3 - 1)) {\n                (*_sym.imp.USER32.dll_wsprintfA)((~uVar3 - 1) + arg_8h, \"-%s-%s\", &var_80h, &lpBuffer);\n            }\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 2082
    },
    "0040103c": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040103c(int32_t param_1)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    char *pcVar8;\n    uint *puVar9;\n    char *pcVar10;\n    uchar uStack520;\n    uint uStack519;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_CloseHandle;\n    uStack520 = '\\0';\n    puVar7 = &uStack520 + 1;\n    for (iVar4 = 0x81; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    if (*(param_1 + 0x228) != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n    }\n    *(param_1 + 0x228) = 0;\n    if (*(param_1 + 0x22c) != 0) {\n        (*pcVar2)();\n    }\n    *(param_1 + 0x22c) = 0;\n    if (*(param_1 + 0x230) != 0) {\n        (*pcVar2)();\n    }\n    *(param_1 + 0x230) = 0;\n    uVar5 = 0xffffffff;\n    pcVar10 = \"XQueue_Write_\";\n    do {\n        pcVar8 = pcVar10;\n        if (uVar5 == 0) break;\n        uVar5 = uVar5 - 1;\n        pcVar8 = pcVar10 + 1;\n        cVar1 = *pcVar10;\n        pcVar10 = pcVar8;\n    } while (cVar1 != '\\0');\n    uVar5 = ~uVar5;\n    puVar7 = pcVar8 + -uVar5;\n    puVar9 = &uStack520;\n    for (uVar6 = uVar5 >> 2; uVar6 != 0; uVar6 = uVar6 - 1) {\n        *puVar9 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    iVar4 = param_1 + 0x238;\n    for (uVar5 = uVar5 & 3; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar9 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    uVar5 = 0xffffffff;\n    pcVar10 = &uStack520;\n    do {\n        if (uVar5 == 0) break;\n        uVar5 = uVar5 - 1;\n        cVar1 = *pcVar10;\n        pcVar10 = pcVar10 + 1;\n    } while (cVar1 != '\\0');\n    fcn.0040c77f(&uStack520, iVar4, 0x207 - (~uVar5 - 1));\n    iVar3 = (*_sym.imp.KERNEL32.dll_CreateMutexA)();\n    *(param_1 + 0x228) = iVar3;\n    if (iVar3 == 0) {\n        return 3;\n    }\n    uVar5 = 0xffffffff;\n    pcVar10 = \"XQueue_ServerNotify_\";\n    do {\n        pcVar8 = pcVar10;\n        if (uVar5 == 0) break;\n        uVar5 = uVar5 - 1;\n        pcVar8 = pcVar10 + 1;\n        cVar1 = *pcVar10;\n        pcVar10 = pcVar8;\n    } while (cVar1 != '\\0');\n    uVar5 = ~uVar5;\n    puVar7 = pcVar8 + -uVar5;\n    puVar9 = &stack0xfffffdec;\n    for (uVar6 = uVar5 >> 2; uVar6 != 0; uVar6 = uVar6 - 1) {\n        *puVar9 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    for (uVar5 = uVar5 & 3; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar9 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    uVar5 = 0xffffffff;\n    pcVar10 = &stack0xfffffdec;\n    do {\n        if (uVar5 == 0) break;\n        uVar5 = uVar5 - 1;\n        cVar1 = *pcVar10;\n        pcVar10 = pcVar10 + 1;\n    } while (cVar1 != '\\0');\n    fcn.0040c77f(&stack0xfffffdec, iVar4, 0x207 - (~uVar5 - 1));\n    iVar3 = (*_sym.imp.KERNEL32.dll_CreateEventA)(0, 0, 0, &stack0xfffffdec);\n    *(param_1 + 0x230) = iVar3;\n    if (iVar3 == 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*(param_1 + 0x228));\n        *(param_1 + 0x228) = 0;\n        return 3;\n    }\n    uVar5 = 0xffffffff;\n    pcVar10 = \"XQueue_ClientWrite_\";\n    do {\n        pcVar8 = pcVar10;\n        if (uVar5 == 0) break;\n        uVar5 = uVar5 - 1;\n        pcVar8 = pcVar10 + 1;\n        cVar1 = *pcVar10;\n        pcVar10 = pcVar8;\n    } while (cVar1 != '\\0');\n    uVar5 = ~uVar5;\n    puVar7 = pcVar8 + -uVar5;\n    puVar9 = &stack0xfffffddc;\n    for (uVar6 = uVar5 >> 2; uVar6 != 0; uVar6 = uVar6 - 1) {\n        *puVar9 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    for (uVar5 = uVar5 & 3; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar9 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    uVar5 = 0xffffffff;\n    pcVar10 = &stack0xfffffddc;\n    do {\n        if (uVar5 == 0) break;\n        uVar5 = uVar5 - 1;\n        cVar1 = *pcVar10;\n        pcVar10 = pcVar10 + 1;\n    } while (cVar1 != '\\0');\n    fcn.0040c77f(&stack0xfffffddc, iVar4, 0x207 - (~uVar5 - 1));\n    iVar4 = (*_sym.imp.KERNEL32.dll_CreateEventA)(0, 0, 1, &stack0xfffffddc);\n    *(param_1 + 0x22c) = iVar4;\n    pcVar2 = _sym.imp.KERNEL32.dll_CloseHandle;\n    if (iVar4 != 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(*(param_1 + 0x228));\n    *(param_1 + 0x228) = 0;\n    (*pcVar2)(*(param_1 + 0x230));\n    *(param_1 + 0x230) = 0;\n    return 3;\n}\n",
        "token_count": 1814
    },
    "00401078": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00401078(uint *param_1, uint *param_2, uint32_t param_3)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint unaff_EBX;\n    uint *unaff_ESI;\n    uint *puVar5;\n    uint *puVar6;\n    uint *puStack8;\n    uint *puStack4;\n    \n    if (((param_2 == NULL) || (param_3 == 0)) ||\n       (iVar1 = (*_sym.imp.KERNEL32.dll_IsBadReadPtr)(param_2, param_3),  iVar1 != 0)) {\n        return 0x8;\n    }\n    puVar6 = NULL;\n    puStack8 = param_1;\n    if (param_3 != 0) {\n        while (puVar2 = fcn.00401181(),  puVar2 != NULL) {\n            fcn.004011a9();\n            uVar3 = param_1[0x116];\n            if (param_3 <= param_1[0x116]) {\n                uVar3 = param_3;\n            }\n            puVar5 = puVar2 + 6;\n            for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n                *puVar5 = *param_2;\n                param_2 = param_2 + 1;\n                puVar5 = puVar5 + 1;\n            }\n            for (uVar4 = uVar3 & 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n                *puVar5 = *param_2;\n                param_2 = param_2 + 1;\n                puVar5 = puVar5 + 1;\n            }\n            param_2 = puStack8 + uVar3;\n            puVar2[5] = unaff_EBX;\n            param_3 = param_3 - uVar3;\n            puVar2[4] = uVar3;\n            if (param_3 != 0) {\n                puVar2[4] = uVar3 | 0x80000000;\n            }\n            if (puStack4 != NULL) {\n                puStack4[2] = *puVar2;\n            }\n            param_1 = puVar6;\n            puStack8 = param_2;\n            puStack4 = puVar2;\n            if (param_3 == 0) {\n                return unaff_ESI;\n            }\n        }\n        puVar6 = 0x4;\n    }\n    return puVar6;\n}\n",
        "token_count": 594
    },
    "004010b4": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint fcn.004010b4(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    uint *puVar7;\n    char *pcVar8;\n    char *unaff_retaddr;\n    \n    uVar6 = 0;\n    iVar2 = (*_sym.imp.USER32.dll_OpenClipboard)(0);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    (*_sym.imp.USER32.dll_EmptyClipboard)();\n    uVar4 = 0xffffffff;\n    pcVar8 = unaff_retaddr;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar8;\n        pcVar8 = pcVar8 + 1;\n    } while (cVar1 != '\\0');\n    iVar2 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, ~uVar4);\n    if (iVar2 != 0) {\n        puVar3 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar2);\n        if (puVar3 != NULL) {\n            uVar4 = 0xffffffff;\n            do {\n                pcVar8 = unaff_retaddr;\n                if (uVar4 == 0) break;\n                uVar4 = uVar4 - 1;\n                pcVar8 = unaff_retaddr + 1;\n                cVar1 = *unaff_retaddr;\n                unaff_retaddr = pcVar8;\n            } while (cVar1 != '\\0');\n            uVar4 = ~uVar4;\n            puVar7 = pcVar8 + -uVar4;\n            for (uVar5 = uVar4 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n                *puVar3 = *puVar7;\n                puVar7 = puVar7 + 1;\n                puVar3 = puVar3 + 1;\n            }\n            for (uVar4 = uVar4 & 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n                *puVar3 = *puVar7;\n                puVar7 = puVar7 + 1;\n                puVar3 = puVar3 + 1;\n            }\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(iVar2);\n            (*_sym.imp.USER32.dll_SetClipboardData)(1, iVar2);\n            uVar6 = 1;\n        }\n    }\n    (*_sym.imp.USER32.dll_CloseClipboard)();\n    return uVar6;\n}\n",
        "token_count": 589
    },
    "0040113b": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040113b(int32_t *param_1, int32_t *param_2, uint32_t *param_3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBX;\n    uint32_t uVar5;\n    int32_t unaff_EBP;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int32_t *piVar8;\n    int32_t *piVar9;\n    uint32_t *unaff_retaddr;\n    int32_t *piStack4;\n    \n    iVar6 = 0;\n    if ((((param_2 == NULL) || (param_3 == NULL)) || (*param_3 == 0)) ||\n       (iVar1 = (*_sym.imp.KERNEL32.dll_IsBadWritePtr)(param_2, *param_3),  iVar1 != 0)) {\n        *param_3 = 0;\n        return 8;\n    }\n    iVar1 = *(param_1[0x111] + 0x40);\n    if (iVar1 == -1) {\n        *param_3 = 0;\n        return 5;\n    }\n    uVar3 = *param_3;\n    piVar4 = NULL;\n    uVar5 = 0;\n    piVar9 = param_2;\n    piStack4 = param_1;\n    if (uVar3 != 0) {\n        while (iVar1 != -1) {\n            piVar4 = *(unaff_EBX + 0x454) * iVar1 + *(unaff_EBX + 0x448);\n            if (*piVar4 != iVar1) {\n                uVar5 = 0;\n                iVar6 = 3;\n                break;\n            }\n            uVar2 = piVar4[4] & 0x7fffffff;\n            iVar6 = unaff_EBP;\n            if (uVar3 < uVar2 + uVar5) {\n                uVar2 = uVar3 - uVar5;\n                iVar6 = 6;\n            }\n            uVar5 = uVar5 + uVar2;\n            if (uVar2 != 0) {\n                piVar7 = piVar4 + 6;\n                for (uVar3 = uVar2 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n                    *piVar9 = *piVar7;\n                    piVar7 = piVar7 + 1;\n                    piVar9 = piVar9 + 1;\n                }\n                piVar8 = piVar9;\n                for (uVar3 = uVar2 & 3; param_3 = unaff_retaddr,  piVar9 = piStack4,  uVar3 != 0; uVar3 = uVar3 - 1) {\n                    *piVar8 = *piVar7;\n                    piVar7 = piVar7 + 1;\n                    piVar8 = piVar8 + 1;\n                }\n            }\n            piVar9 = piVar9 + uVar2;\n            if ((iVar6 == 6) || ((piVar4[4] & 0x80000000U) == 0)) break;\n            uVar3 = *param_3;\n            iVar1 = piVar4[2];\n            unaff_EBP = iVar6;\n            piStack4 = piVar9;\n            if (uVar3 <= uVar5) break;\n        }\n    }\n    uVar3 = uVar5;\n    if (uVar5 < *param_3) {\n        do {\n            if (3 < uVar3 - uVar5) break;\n            *piVar9 = 0;\n            piVar9 = piVar9 + 1;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < *param_3);\n    }\n    if (iVar6 == 6) {\n        uVar3 = fcn.004010b9(piVar4);\n        *param_3 = uVar3;\n        return 6;\n    }\n    if (iVar6 != 3) {\n        *param_3 = uVar5;\n        iVar6 = fcn.00401370(param_2);\n        if (iVar6 == 0) {\n            fcn.004010cd();\n        }\n        *(*(unaff_EBX + 0x444) + 0x2c) = *(*(unaff_EBX + 0x444) + 0x2c) + 1;\n        fcn.0040124e();\n        return iVar6;\n    }\n    *param_3 = 0;\n    return 3;\n}\n",
        "token_count": 1038
    },
    "004011b8": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nint32_t fcn.004011b8(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    char *pcVar7;\n    uint *puVar8;\n    uint uStack284;\n    uint uStack280;\n    uchar *puStack276;\n    uchar auStack268 [244];\n    uint *puStack24;\n    \n    puStack276 = auStack268;\n    uStack280 = 1;\n    uStack284 = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)();\n    if (iVar2 != 0) {\n        return iVar2;\n    }\n    puVar8 = &uStack284;\n    uStack284 = 0x104;\n    (*_sym.imp.ADVAPI32.dll_RegQueryValueA)(param_2, 0, &uStack280, puVar8);\n    uVar3 = 0xffffffff;\n    pcVar6 = &stack0xfffffed8;\n    do {\n        pcVar7 = pcVar6;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar7 = pcVar6 + 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar7;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    puVar5 = pcVar7 + -uVar3;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puStack24 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puStack24 = puStack24 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puStack24 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puStack24 = puStack24 + 1;\n    }\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(puVar8);\n    return 0;\n}\n",
        "token_count": 513
    },
    "004011f9": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint32_t fcn.004011f9(char *param_1, uint param_2, int32_t param_3)\n\n{\n    char cVar1;\n    char *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    char *pcVar8;\n    char *pcVar9;\n    char *pcVar10;\n    uint *puVar11;\n    uint uStack544;\n    uint uStack540;\n    uint uStack16;\n    \n    if ((param_1 == NULL) || (*param_1 == '\\0')) {\n        return 0x24;\n    }\n    pcVar2 = \"open\";\n    if (param_3 != 0) {\n        pcVar2 = 0x45b140;\n    }\n    uStack540 = param_2;\n    uStack544 = 0;\n    uVar3 = (*_sym.imp.SHELL32.dll_ShellExecuteA)(0, pcVar2, param_1, 0);\n    if (0x20 < uVar3) {\n        return uVar3;\n    }\n    iVar4 = fcn.004011b8(0x80000000, \".htm\", &uStack544);\n    if (iVar4 != 0) {\n        return uVar3;\n    }\n    uVar5 = 0xffffffff;\n    pcVar2 = \"\\\\shell\\\\open\\\\command\";\n    do {\n        pcVar9 = pcVar2;\n        if (uVar5 == 0) break;\n        uVar5 = uVar5 - 1;\n        pcVar9 = pcVar2 + 1;\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar9;\n    } while (cVar1 != '\\0');\n    uVar5 = ~uVar5;\n    iVar4 = -1;\n    puVar7 = &uStack544;\n    do {\n        puVar11 = puVar7;\n        if (iVar4 == 0) break;\n        iVar4 = iVar4 + -1;\n        puVar11 = puVar7 + 1;\n        cVar1 = *puVar7;\n        puVar7 = puVar11;\n    } while (cVar1 != '\\0');\n    puVar7 = pcVar9 + -uVar5;\n    puVar11 = puVar11 + -1;\n    for (uVar6 = uVar5 >> 2; uVar6 != 0; uVar6 = uVar6 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    for (uVar5 = uVar5 & 3; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    iVar4 = fcn.004011b8(0x80000000, &uStack544, &uStack544);\n    if (iVar4 != 0) {\n        return uVar3;\n    }\n    pcVar2 = fcn.0040c847(&uStack544, \"\\\"%1\\\"\");\n    if ((pcVar2 == NULL) && (pcVar2 = fcn.0040c847(&uStack544, 0x45b114),  pcVar2 == NULL)) {\n        uVar3 = 0xffffffff;\n        puVar7 = &uStack544;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *puVar7;\n            puVar7 = puVar7 + 1;\n        } while (cVar1 != '\\0');\n        pcVar2 = &stack0xfffffdde + ~uVar3;\n    }\n    else {\n        *pcVar2 = '\\0';\n    }\n    uVar3 = 0xffffffff;\n    pcVar9 = 0x45b110;\n    do {\n        pcVar10 = pcVar9;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar10 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar10;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar4 = -1;\n    pcVar9 = pcVar2;\n    do {\n        pcVar8 = pcVar9;\n        if (iVar4 == 0) break;\n        iVar4 = iVar4 + -1;\n        pcVar8 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar8;\n    } while (cVar1 != '\\0');\n    puVar7 = pcVar10 + -uVar3;\n    puVar11 = pcVar8 + -1;\n    for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = param_1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar9 = param_1 + 1;\n        cVar1 = *param_1;\n        param_1 = pcVar9;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar4 = -1;\n    do {\n        pcVar10 = pcVar2;\n        if (iVar4 == 0) break;\n        iVar4 = iVar4 + -1;\n        pcVar10 = pcVar2 + 1;\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar10;\n    } while (cVar1 != '\\0');\n    puVar7 = pcVar9 + -uVar3;\n    puVar11 = pcVar10 + -1;\n    for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    uVar3 = (*_sym.imp.KERNEL32.dll_WinExec)(&uStack544, uStack16);\n    return uVar3;\n}\n",
        "token_count": 1633
    },
    "0040121c": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nint32_t fcn.0040121c(char *param_1, uint *param_2, uint32_t param_3, int32_t param_4)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    \n    if ((((param_1 == NULL) || (*param_1 == '\\0')) || (param_2 == NULL)) || (param_3 < 3)) {\n        return 0;\n    }\n    puVar5 = param_2;\n    for (uVar2 = param_3 >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    for (uVar2 = param_3 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    if (param_4 != 0) {\n        fcn.0040c9bc(param_2, param_1, param_3 - 1);\n        iVar3 = -1;\n        uVar2 = 0;\n        pcVar6 = param_1;\n        do {\n            if (iVar3 == 0) break;\n            iVar3 = iVar3 + -1;\n            cVar1 = *pcVar6;\n            pcVar6 = pcVar6 + 1;\n        } while (cVar1 != '\\0');\n        if (iVar3 != -2) {\n            do {\n                if (*(uVar2 + param_2) == '\\\\') {\n                    *(uVar2 + param_2) = 0x5f;\n                }\n                uVar4 = 0xffffffff;\n                uVar2 = uVar2 + 1;\n                pcVar6 = param_1;\n                do {\n                    if (uVar4 == 0) break;\n                    uVar4 = uVar4 - 1;\n                    cVar1 = *pcVar6;\n                    pcVar6 = pcVar6 + 1;\n                } while (cVar1 != '\\0');\n            } while (uVar2 < ~uVar4 - 1);\n        }\n        fcn.0040caa8(param_2);\n    }\n    uVar2 = 0xffffffff;\n    do {\n        if (uVar2 == 0) break;\n        uVar2 = uVar2 - 1;\n        cVar1 = *param_2;\n        param_2 = param_2 + 1;\n    } while (cVar1 != '\\0');\n    return ~uVar2 - 1;\n}\n",
        "token_count": 611
    },
    "null": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00401415": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00401415(int32_t param_1, char *param_2, int32_t param_3, uint32_t param_4)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t *puVar8;\n    uint *puVar9;\n    char *pcVar10;\n    char *pcVar11;\n    uint *puVar12;\n    uint *puVar13;\n    \n    if (*(param_1 + 0x220) != 0) {\n        return 10;\n    }\n    if ((param_2 != NULL) && (*param_2 != '\\0')) {\n        puVar13 = param_1 + 0x238;\n        puVar9 = puVar13;\n        for (iVar4 = 0x82; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar9 = 0;\n            puVar9 = puVar9 + 1;\n        }\n        uVar5 = 0xffffffff;\n        pcVar10 = \"XQueue_\";\n        do {\n            pcVar11 = pcVar10;\n            if (uVar5 == 0) break;\n            uVar5 = uVar5 - 1;\n            pcVar11 = pcVar10 + 1;\n            cVar1 = *pcVar10;\n            pcVar10 = pcVar11;\n        } while (cVar1 != '\\0');\n        uVar5 = ~uVar5;\n        puVar9 = pcVar11 + -uVar5;\n        puVar12 = puVar13;\n        for (uVar6 = uVar5 >> 2; uVar6 != 0; uVar6 = uVar6 - 1) {\n            *puVar12 = *puVar9;\n            puVar9 = puVar9 + 1;\n            puVar12 = puVar12 + 1;\n        }\n        for (uVar5 = uVar5 & 3; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar12 = *puVar9;\n            puVar9 = puVar9 + 1;\n            puVar12 = puVar12 + 1;\n        }\n        uVar5 = 0xffffffff;\n        puVar9 = puVar13;\n        do {\n            if (uVar5 == 0) break;\n            uVar5 = uVar5 - 1;\n            cVar1 = *puVar9;\n            puVar9 = puVar9 + 1;\n        } while (cVar1 != '\\0');\n        fcn.0040c77f(puVar13, param_2, 0x207 - (~uVar5 - 1));\n        *(param_1 + 0x44c) = param_3;\n        if (param_3 == 0) {\n            *(param_1 + 0x44c) = 0x400;\n        }\n        uVar5 = *(param_1 + 0x44c);\n        if ((uVar5 < 0x10001) && (0x3f < uVar5)) {\n            *(param_1 + 0x454) = param_4;\n            if (param_4 < 0x80) {\n                *(param_1 + 0x454) = 0x80;\n            }\n            uVar6 = *(param_1 + 0x454) + 0x7fU & 0xffffff80;\n            *(param_1 + 0x450) = uVar5 + 1;\n            *(param_1 + 0x454) = uVar6;\n            *(param_1 + 0x458) = uVar6 - 0x18;\n            *(param_1 + 0x234) = 0;\n            iVar4 = fcn.004013a2(puVar13, (uVar5 + 1) * uVar6, 0, 0);\n            if (iVar4 == 0) {\n                iVar4 = 10;\n            }\n            else {\n                fcn.004012e9();\n                iVar4 = fcn.0040103c();\n                if (iVar4 == 0) {\n                    puVar13 = *(param_1 + 0x14);\n                    *(param_1 + 0x440) = puVar13;\n                    if (puVar13 != NULL) {\n                        uVar5 = *(param_1 + 0x454);\n                        *(param_1 + 0x444) = puVar13;\n                        for (uVar6 = uVar5 >> 2; uVar6 != 0; uVar6 = uVar6 - 1) {\n                            *puVar13 = 0;\n                            puVar13 = puVar13 + 1;\n                        }\n                        for (uVar5 = uVar5 & 3; uVar5 != 0; uVar5 = uVar5 - 1) {\n                            *puVar13 = 0;\n                            puVar13 = puVar13 + 1;\n                        }\n                        *(param_1 + 0x448) = *(param_1 + 0x440) + *(param_1 + 0x454);\n                        **(param_1 + 0x444) = *(param_1 + 0x454);\n                        *(*(param_1 + 0x444) + 4) = *(param_1 + 0x454) + -0x18;\n                        *(*(param_1 + 0x444) + 8) = *(param_1 + 0x450);\n                        *(*(param_1 + 0x444) + 0xc) = *(param_1 + 0x44c);\n                        *(*(param_1 + 0x444) + 0x10) = *(param_1 + 0x44c);\n                        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n                        *(*(param_1 + 0x444) + 0x20) = uVar2;\n                        *(*(param_1 + 0x444) + 0x34) = 1;\n                        uVar5 = 0;\n                        puVar8 = NULL;\n                        uVar6 = 0xffffffff;\n                        if (*(param_1 + 0x44c) != 0) {\n                            do {\n                                uVar7 = uVar5;\n                                puVar3 = uVar7 * *(param_1 + 0x454) + *(param_1 + 0x448);\n                                puVar3[1] = uVar6;\n                                *puVar3 = uVar7;\n                                puVar3[2] = 0xffffffff;\n                                puVar3[3] = 0;\n                                puVar3[4] = 0;\n                                puVar3[5] = 0;\n                                *(puVar3 + 6) = 0;\n                                *(puVar3 + 0x19) = 0;\n                                if (puVar8 != NULL) {\n                                    puVar8[2] = uVar7;\n                                }\n                                uVar5 = uVar7 + 1;\n                                puVar8 = puVar3;\n                                uVar6 = uVar7;\n                            } while (uVar7 + 1 < *(param_1 + 0x44c));\n                        }\n                        *(*(param_1 + 0x444) + 0x38) = 0;\n                        *(*(param_1 + 0x444) + 0x3c) = *(param_1 + 0x44c) + -1;\n                        *(*(param_1 + 0x444) + 0x40) = 0xffffffff;\n                        *(*(param_1 + 0x444) + 0x44) = 0xffffffff;\n                        *(*(param_1 + 0x444) + 0x1c) = *(*(param_1 + 0x444) + 0x1c) + 1;\n                        return iVar4;\n                    }\n                    iVar4 = 3;\n                    fcn.00401168();\n                    return iVar4;\n                }\n            }\n            fcn.00401168();\n            return iVar4;\n        }\n    }\n    return 8;\n}\n",
        "token_count": 1834
    },
    "004211d0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint fcn.004211d0(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint uVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    uint32_t unaff_EBX;\n    uint32_t unaff_EBP;\n    uint32_t unaff_ESI;\n    uint32_t unaff_EDI;\n    uint *puVar8;\n    uint32_t uStack4;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_FindResourceA)(param_1, param_2);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_SizeofResource)(param_1, iVar1);\n    puVar3 = (*_sym.imp.KERNEL32.dll_LoadResource)(param_1, iVar1);\n    if (puVar3 == NULL) {\n        return 0;\n    }\n    puVar4 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, uVar2);\n    if (puVar4 == NULL) {\n        return 0;\n    }\n    puVar8 = puVar4;\n    for (uVar7 = uVar2 >> 2; uVar7 != 0; uVar7 = uVar7 - 1) {\n        *puVar8 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *puVar8 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    puVar4[10] = 0x20000;\n    puVar4[0x11] = (unaff_EDI >> 8 & 0xff) << 8 | unaff_EDI >> 0x10 & 0xff | (unaff_EDI & 0xff) << 0x10;\n    puVar4[0x12] = (unaff_EBP >> 8 & 0xff) << 8 | unaff_EBP >> 0x10 & 0xff | (unaff_EBP & 0xff) << 0x10;\n    puVar4[0x19] = (unaff_ESI >> 8 & 0xff) << 8 | (unaff_ESI & 0xff) << 0x10 | unaff_ESI >> 0x10 & 0xff;\n    puVar4[0x15] = (unaff_EBX >> 8 & 0xff) << 8 | (unaff_EBX & 0xff) << 0x10 | unaff_EBX >> 0x10 & 0xff;\n    puVar4[0x14] = (uStack4 >> 8 & 0xff) << 8 | (uStack4 & 0xff) << 0x10 | uStack4 >> 0x10 & 0xff;\n    uVar5 = (*_sym.imp.USER32.dll_GetDC)(0);\n    uVar6 = (*_sym.imp.GDI32.dll_CreateDIBitmap)(uVar5, puVar4, 4, puVar4 + 0x1a, puVar4, 0);\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar5);\n    (*_sym.imp.KERNEL32.dll_GlobalFree)(puVar4);\n    return uVar6;\n}\n",
        "token_count": 815
    },
    "0040114a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040114a(int32_t param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t *in_FS_OFFSET;\n    int32_t unaff_retaddr;\n    uchar *puStack124;\n    uint uStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uchar *puStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uchar auStack64 [16];\n    uchar auStack48 [4];\n    uint32_t uStack44;\n    uchar auStack40 [16];\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    uchar *puStack12;\n    int32_t iStack8;\n    int32_t iStack4;\n    \n    puStack12 = *in_FS_OFFSET;\n    iStack4 = -1;\n    iStack8 = 0x44c968;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    iVar3 = (*_sym.imp.USER32.dll_IsWindow)();\n    if ((iVar3 != 0) && (*(param_1 + 0x60) != 0)) {\n        uStack96 = *(param_1 + 0x1c);\n        puStack92 = &stack0xffffffd0;\n        puStack100 = 0x4050a2;\n        (*_sym.imp.USER32.dll_GetWindowRect)();\n        uStack104 = *(param_1 + 0x1c);\n        puStack100 = &stack0xffffffd8;\n        puStack108 = 0x4050b1;\n        (*_sym.imp.USER32.dll_GetClientRect)();\n        puStack108 = &stack0xffffffd0;\n        uStack112 = 0x4050bd;\n        fcn.0043cd3e();\n        uStack112 = *(param_1 + 0x1c);\n        uStack116 = 0x4050c7;\n        uStack116 = (*_sym.imp.USER32.dll_GetParent)();\n        iVar3 = fcn.004308de();\n        if (iVar3 != 0) {\n            fcn.0043cd02(&stack0xffffffb4);\n            puStack124 = &stack0xffffffc0;\n            fcn.0043cd02();\n        }\n        puStack108 = *0x45b93c;\n        uStack44 = 0;\n        fcn.004312d5();\n        iVar3 = *(param_1 + 0x1c);\n        uVar4 = (*_sym.imp.USER32.dll_GetDC)();\n        piVar5 = fcn.0043c2a0(uVar4);\n        (**(*piVar5 + 0x28))(param_1 + 0x68);\n        (*_sym.imp.GDI32.dll_GetTextExtentPoint32A)(piVar5[2], puStack124, *(puStack124 + -8), &stack0xffffff8c);\n        (**(*piVar5 + 0x28))(uVar4);\n        (*_sym.imp.USER32.dll_ReleaseDC)(*(param_1 + 0x1c), piVar5[1]);\n        puVar2 = puStack12;\n        iVar6 = ((iVar3 - unaff_retaddr) - iStack24) + iStack16 + iStack8;\n        iVar3 = (iStack4 - param_2) - iStack20;\n        uStack44 = fcn.00433c44();\n        pcVar1 = _sym.imp.USER32.dll_InflateRect;\n        if ((uStack44 & 0x200) == 0) {\n            puStack12 = &stack0xffffff94 + puVar2 + iStack20 + iVar3;\n        }\n        else {\n            (*_sym.imp.USER32.dll_InflateRect)();\n        }\n        if ((uStack44 & 1) == 0) {\n            if ((uStack44 & 2) == 0) {\n                iStack16 = iVar6 + iStack24;\n            }\n            else {\n                iStack24 = iStack16 - iVar6;\n            }\n        }\n        else {\n            (*pcVar1)();\n        }\n        puStack92 = 0x405242;\n        fcn.00433dd0(0, iStack24, iStack20, iStack16 - iStack24, puStack12 - iStack20, 4);\n        iStack8 = 0xffffffff;\n        puStack92 = 0x405253;\n        fcn.004347d0();\n    }\n    *in_FS_OFFSET = iStack16;\n    return;\n}\n",
        "token_count": 1036
    },
    "004011f4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004011f4(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    double dVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t *piVar6;\n    uint uVar7;\n    int32_t in_ECX;\n    int32_t *piVar8;\n    uint *puVar9;\n    uint *in_FS_OFFSET;\n    unkbyte10 extraout_ST0;\n    float10 extraout_ST0_00;\n    unkbyte10 extraout_ST0_01;\n    float10 extraout_ST0_02;\n    float10 fVar10;\n    float10 fVar11;\n    int32_t iStack940;\n    int32_t iStack936;\n    uchar *puStack932;\n    int32_t iStack928;\n    uint uStack924;\n    int32_t iStack920;\n    uint uStack916;\n    uint uStack912;\n    uint uStack908;\n    uint uStack904;\n    uint uStack900;\n    uint uStack896;\n    uint uStack892;\n    uint uStack888;\n    uint uStack884;\n    uint uStack880;\n    uint uStack876;\n    uint uStack872;\n    char *pcStack868;\n    uchar *puStack864;\n    uint uStack860;\n    uint uStack856;\n    uint uStack852;\n    uint uStack848;\n    uchar *puStack844;\n    uint uStack840;\n    int32_t iStack836;\n    uint uStack832;\n    uint uStack828;\n    uchar *puStack824;\n    uint uStack820;\n    uint uStack816;\n    uint uStack812;\n    uint uStack808;\n    uchar *arg_8h_00;\n    uint uStack688;\n    uint uStack684;\n    uint uStack680;\n    uchar *puStack676;\n    uint uStack672;\n    uint uStack668;\n    uint uStack664;\n    uint uStack660;\n    uint uStack656;\n    uchar *puStack652;\n    uint uStack648;\n    double dStack644;\n    uint uStack636;\n    uint uStack632;\n    int32_t *piStack628;\n    uint uStack624;\n    uchar *puStack620;\n    uint uStack616;\n    uint uStack612;\n    uint uStack608;\n    uint uStack604;\n    uint uStack600;\n    uint uStack596;\n    uint uStack592;\n    uint uStack588;\n    int32_t iStack584;\n    uint uStack580;\n    uint uStack576;\n    int32_t iStack552;\n    uint uStack460;\n    int32_t aiStack404 [26];\n    int32_t aiStack300 [21];\n    int32_t iStack216;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack16 = 0x44c6d7;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    uStack12 = 2;\n    fVar11 = fpatan(*0x450278, 1);\n    iStack552 = 0x3c;\n    *(in_ECX + 0x3c) = (*arg_ch + arg_ch[2]) / 2;\n    iVar3 = arg_ch[3] - arg_ch[1];\n    *(in_ECX + 0x40) = arg_ch[3] - (iVar3 + (iVar3 >> 0x1f & 0xfU) >> 4);\n    puVar9 = in_ECX + 0x8c;\n    iVar3 = (arg_ch[3] - arg_ch[1]) * 6;\n    iVar3 = iVar3 + (iVar3 >> 0x1f & 7U);\n    iVar4 = iVar3 >> 3;\n    *(in_ECX + 0x48) = iVar4;\n    *(in_ECX + 0x44) = iVar4 - (iVar3 >> 0x1f) >> 1;\n    fVar11 = fVar11 * *0x450268;\n    *(in_ECX + 0x58) = fVar11 * *0x450258;\n    *(in_ECX + 0x60) = fVar11 * *0x450248;\n    do {\n        fcos(iStack552 * fVar11);\n        uStack576 = 0x4025f7;\n        uVar5 = fcn.0040c670();\n        puVar9[-1] = uVar5;\n        fsin(extraout_ST0);\n        uStack576 = 0x402632;\n        uVar5 = fcn.0040c670();\n        *puVar9 = uVar5;\n        iStack552 = iStack552 + 5;\n        puVar9 = puVar9 + 2;\n        fVar11 = extraout_ST0_00;\n    } while (iStack552 < 0x79);\n    iStack552 = 0x78;\n    puVar9 = in_ECX + 0xf4;\n    do {\n        fcos(iStack552 * fVar11);\n        uStack576 = 0x402695;\n        uVar5 = fcn.0040c670();\n        puVar9[-1] = uVar5;\n        fsin(extraout_ST0_01);\n        uStack576 = 0x4026d0;\n        uVar5 = fcn.0040c670();\n        *puVar9 = uVar5;\n        iStack552 = iStack552 + -5;\n        puVar9 = puVar9 + 2;\n        fVar11 = extraout_ST0_02;\n    } while (0x3b < iStack552);\n    piVar8 = &stack0xfffffe70;\n    iVar3 = 0x1a;\n    piVar6 = in_ECX + 0x8c;\n    do {\n        piVar8[-1] = piVar6[-1];\n        *piVar8 = *piVar6 + -1;\n        piVar8 = piVar8 + 2;\n        iVar3 = iVar3 + -1;\n        piVar6 = piVar6 + 2;\n    } while (iVar3 != 0);\n    piVar8 = &stack0xfffffed8;\n    iVar3 = 0xd;\n    piVar6 = in_ECX + 0xf4;\n    do {\n        piVar8[-1] = piVar6[-1];\n        *piVar8 = *piVar6 + 1;\n        piVar8 = piVar8 + 2;\n        iVar3 = iVar3 + -1;\n        piVar6 = piVar6 + 2;\n    } while (iVar3 != 0);\n    uStack576 = 0x402746;\n    fcn.0043d5f3();\n    iStack584 = in_ECX + 0x88;\n    uStack576 = 1;\n    uStack580 = 0x1a;\n    uStack588 = 0x402757;\n    uStack588 = (*_sym.imp.GDI32.dll_CreatePolygonRgn)();\n    uStack592 = 0x40275f;\n    fcn.0043d59c();\n    uStack592 = 5;\n    *(in_ECX + 0x78) = (arg_ch[2] - *arg_ch) / 0x14 + *arg_ch;\n    *(in_ECX + 0x80) = arg_ch[2] - (arg_ch[2] - *arg_ch) / 0x14;\n    *(in_ECX + 0x84) = arg_ch[3] - (arg_ch[2] - *arg_ch) / 0x14;\n    pcVar2 = _sym.imp.USER32.dll_GetSysColor;\n    *(in_ECX + 0x7c) = ((iStack216 - arg_ch[3]) * 0x3c) / 100 + arg_ch[3];\n    uStack596 = 0x4027f4;\n    uVar5 = (*pcVar2)();\n    uStack596 = 0xf;\n    *(in_ECX + 0x218) = uVar5;\n    uStack600 = 0x4027fe;\n    uVar5 = (*pcVar2)();\n    uStack600 = 0x10;\n    *(in_ECX + 0x224) = uVar5;\n    uStack604 = 0x402808;\n    uVar5 = (*pcVar2)();\n    uStack604 = 0x14;\n    *(in_ECX + 0x220) = uVar5;\n    uStack608 = 0x402812;\n    uVar5 = (*pcVar2)();\n    uStack608 = 0x12;\n    *(in_ECX + 0x21c) = uVar5;\n    uStack612 = 0x40281c;\n    uVar5 = (*pcVar2)();\n    *(in_ECX + 0x228) = uVar5;\n    uStack612 = 0x40282b;\n    fcn.0043d5f3();\n    uStack612 = *(in_ECX + 0x224);\n    uStack616 = 0x402838;\n    uStack616 = (*_sym.imp.GDI32.dll_CreateSolidBrush)();\n    puStack620 = 0x402842;\n    fcn.0043d59c();\n    puStack620 = &stack0xfffffdcc;\n    uStack624 = 0x402851;\n    uStack600 = fcn.0043c4c7();\n    uStack624 = *(in_ECX + 0x224);\n    piStack628 = arg_ch;\n    uStack632 = 0x402864;\n    fcn.004435e5();\n    uStack632 = uStack608;\n    uStack636 = 0x402870;\n    fcn.0043c4c7();\n    uStack636 = 0x402879;\n    fcn.0043d5f3();\n    uStack636 = *(in_ECX + 0x220);\n    dStack644 = 2.121995790965272e-314;\n    uStack648 = 0x40288a;\n    uStack648 = (*_sym.imp.GDI32.dll_CreatePen)();\n    puStack652 = 0x402894;\n    fcn.0043d59c();\n    puStack652 = &stack0xfffffda0;\n    uStack656 = 0x4028a0;\n    uStack656 = fcn.0043c481();\n    uStack660 = 0x4028a8;\n    fcn.0043c481();\n    uStack660 = 0x4028b1;\n    fcn.0043d5f3();\n    uStack660 = *(in_ECX + 0x21c);\n    uStack664 = 1;\n    uStack668 = 0;\n    uStack672 = 0x4028c2;\n    uStack672 = (*_sym.imp.GDI32.dll_CreatePen)();\n    puStack676 = 0x4028cc;\n    fcn.0043d59c();\n    puStack676 = &stack0xfffffd88;\n    uStack680 = 0x4028d8;\n    uStack680 = fcn.0043c481();\n    uStack684 = 0x4028e0;\n    fcn.0043c481();\n    uStack684 = 0x4028e9;\n    fcn.0043d5f3();\n    uStack684 = *(in_ECX + 0x228);\n    uStack688 = 1;\n    (*_sym.imp.GDI32.dll_CreatePen)();\n    fcn.0043d59c();\n    uStack684 = fcn.0043c481();\n    fcn.0043d5f3();\n    (*_sym.imp.GDI32.dll_CreateSolidBrush)();\n    fcn.0043d59c();\n    fcn.0043c4c7();\n    (*_sym.imp.GDI32.dll_Polygon)();\n    fcn.0043c4c7();\n    dStack644 = *(in_ECX + 0x48) - (*(in_ECX + 0x48) - *(in_ECX + 0x44)) * *0x450238;\n    do {\n        fVar11 = 0x5a * CONCAT44(uStack632, uStack636);\n        fVar10 = fcos(fVar11);\n        dVar1 = fVar10;\n        puStack652 = SUB84(dVar1, 0);\n        uStack648 = dVar1 >> 0x20;\n        dVar1 = *(in_ECX + 0x48) * dVar1 + *(in_ECX + 0x3c);\n        uStack668 = SUB84(dVar1, 0);\n        uStack664 = dVar1 >> 0x20;\n        fVar11 = fsin(fVar11);\n        uStack660 = SUB84(fVar11, 0);\n        uStack656 = fVar11 >> 0x20;\n        uVar5 = fcn.0040c670();\n        uVar7 = fcn.0040c670();\n        fcn.0043cb3a(&stack0xfffffd90, uVar7, uVar5);\n        fcn.0040c670();\n        iVar3 = fcn.0040c670();\n        fcn.0043cb86();\n    } while (0x3c < iVar3 + -0xf);\n    fVar11 = CONCAT44(puStack652, uStack656) * *0x450228;\n    fVar10 = fcos(fVar11);\n    dVar1 = fVar10;\n    uStack672 = SUB84(dVar1, 0);\n    uStack668 = dVar1 >> 0x20;\n    dVar1 = *(in_ECX + 0x48) * dVar1 + *(in_ECX + 0x3c);\n    uStack688 = SUB84(dVar1, 0);\n    uStack684 = dVar1 >> 0x20;\n    fVar11 = fsin(fVar11);\n    uStack680 = SUB84(fVar11, 0);\n    puStack676 = fVar11 >> 0x20;\n    uVar5 = fcn.0040c670();\n    uVar7 = fcn.0040c670();\n    fcn.0043cb3a(&stack0xfffffd7c, uVar7, uVar5);\n    fcn.0040c670();\n    fcn.0040c670();\n    fcn.0043cb86();\n    fcn.0043c481();\n    fcn.0043d5f3();\n    (*_sym.imp.GDI32.dll_CreatePen)();\n    fcn.0043d59c();\n    fcn.0043c481();\n    arg_8h_00 = &stack0xfffffd50;\n    uStack808 = 0x402c38;\n    fcn.0043cb3a(arg_8h_00, *(in_ECX + 0x78), *(in_ECX + 0x84));\n    uStack808 = *(in_ECX + 0x7c);\n    uStack812 = *(in_ECX + 0x78);\n    uStack816 = 0x402c47;\n    fcn.0043cb86();\n    uStack816 = *(in_ECX + 0x7c);\n    uStack820 = *(in_ECX + 0x80);\n    puStack824 = 0x402c59;\n    fcn.0043cb86();\n    puStack824 = arg_8h_00;\n    uStack828 = 0x402c65;\n    fcn.0043c481();\n    uStack828 = 0x402c6e;\n    fcn.0043d5f3();\n    uStack828 = *(in_ECX + 0x21c);\n    uStack832 = 1;\n    iStack836 = 0;\n    uStack840 = 0x402c7f;\n    uStack840 = (*_sym.imp.GDI32.dll_CreatePen)();\n    puStack844 = 0x402c89;\n    fcn.0043d59c();\n    puStack844 = &stack0xfffffce0;\n    uStack848 = 0x402c95;\n    uStack828 = fcn.0043c481();\n    uStack852 = *(in_ECX + 0x80);\n    uStack848 = *(in_ECX + 0x84);\n    uStack856 = 0x402cae;\n    fcn.0043cb86();\n    uStack856 = *(in_ECX + 0x84);\n    uStack860 = *(in_ECX + 0x78);\n    puStack864 = 0x402cc0;\n    fcn.0043cb86();\n    puStack864 = puStack844;\n    pcStack868 = 0x402ccc;\n    fcn.0043c481();\n    iStack836 = ((*(in_ECX + 0x84) - *(in_ECX + 0x7c)) * 0x55) / 100;\n    pcStack868 = 0x402d01;\n    fcn.0043d5f3();\n    pcStack868 = \"Arial\";\n    uStack872 = 0x20;\n    uStack876 = 0;\n    uStack880 = 0;\n    uStack884 = 0;\n    uStack888 = 0;\n    uStack892 = 0;\n    uStack896 = 0;\n    uStack900 = 0;\n    uStack904 = 400;\n    uStack908 = 0;\n    uStack912 = 0;\n    uStack916 = 0;\n    iStack920 = iStack836;\n    uStack924 = 0x402d2c;\n    uStack924 = (*_sym.imp.GDI32.dll_CreateFontA)();\n    iStack928 = 0x402d38;\n    fcn.0043d59c();\n    iStack928 = in_ECX + 0x210;\n    puStack932 = 0x402d46;\n    uStack904 = (**(*arg_8h + 0x28))();\n    iStack936 = arg_8h[2];\n    puStack932 = &stack0xfffffcd0;\n    iStack940 = 0x402d59;\n    (*_sym.imp.GDI32.dll_GetTextMetricsA)();\n    *(in_ECX + 0x4c) = puStack824;\n    *(in_ECX + 0x50) = *(in_ECX + 0x84) - (puStack824 + (puStack824 >> 0x1f & 3) >> 2);\n    iStack940 = *(in_ECX + 0x228);\n    *(in_ECX + 0x54) = (*(in_ECX + 0x80) - *(in_ECX + 0x78)) / 2 + *(in_ECX + 0x78);\n    (**(*arg_8h + 0x30))();\n    (**(*arg_8h + 0x2c))(*(in_ECX + 0x224));\n    fcn.0043cbbb(0x1e);\n    (**(*arg_8h + 0x5c))\n              (*(in_ECX + 0x54), *(in_ECX + 0x7c) - (*(in_ECX + 0x4c) + (*(in_ECX + 0x4c) >> 0x1f & 3U) >> 2), \n               *(in_ECX + 0x26c), *(*(in_ECX + 0x26c) + -8));\n    fcn.0043cbbb(0x18);\n    fcn.00429c21(&stack0xfffffc68, \"%.*lf\", *(in_ECX + 0x248), *(in_ECX + 0x260), *(in_ECX + 0x264));\n    iVar3 = *(in_ECX + 0xbc) - (*(in_ECX + 0x4c) * 0x19) / 100;\n    iStack940 = (*(in_ECX + 0xe8) + *arg_ch) / 2;\n    (**(*arg_8h + 0x5c))(iStack940, iVar3, iStack920, *(iStack920 + -8));\n    fcn.0043cbbb(0x1a);\n    fcn.00429c21(&stack0xfffffc54, \"%.*lf\", *(in_ECX + 0x248), *(in_ECX + 600), *(in_ECX + 0x25c));\n    (**(*arg_8h + 0x5c))\n              ((*(in_ECX + 0x88) + arg_ch[2]) / 2, *(in_ECX + 0xbc) - (*(in_ECX + 0x4c) * 0x19) / 100, iStack940, \n               *(iStack940 + -8));\n    (**(*arg_8h + 0x28))(iVar3);\n    (**(*arg_8h + 0x2c))(*(in_ECX + 0x218));\n    fcn.0043d5f3();\n    fcn.0043d5f3();\n    fcn.004347d0();\n    *in_FS_OFFSET = uStack460;\n    return;\n}\n",
        "token_count": 4731
    },
    "00401285": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401285(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    float10 fVar3;\n    unkbyte10 extraout_ST1;\n    int32_t iStack88;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack16 = 0x44c680;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    uStack12 = 1;\n    fVar3 = ((*(in_ECX + 0x60) - *(in_ECX + 0x58)) * (*(in_ECX + 0x250) - *(in_ECX + 0x260))) /\n            (*(in_ECX + 600) - *(in_ECX + 0x260)) + *(in_ECX + 0x58);\n    if (((fVar3 < *(in_ECX + 0x60)) << 8 | (fVar3 == *(in_ECX + 0x60)) << 0xe) != 0) {\n        fVar3 = *(in_ECX + 0x60);\n    }\n    if (*(in_ECX + 0x58) <= fVar3) {\n        fVar3 = *(in_ECX + 0x58);\n    }\n    fcos(fVar3);\n    iStack88 = 0x40233d;\n    fcn.0040c670();\n    fsin(extraout_ST1);\n    iStack88 = 0x402377;\n    fcn.0040c670();\n    iStack88 = in_ECX + 0x208;\n    fcn.0043c986();\n    uVar1 = (*_sym.imp.GDI32.dll_CreateSolidBrush)(*(in_ECX + 0x268));\n    fcn.0043d59c(uVar1);\n    uVar1 = (*_sym.imp.GDI32.dll_CreatePen)(0, 1, *(in_ECX + 0x268));\n    fcn.0043d59c(uVar1);\n    uVar1 = fcn.0043c481(&stack0xffffffa8);\n    uVar2 = fcn.0043c4c7(&stack0xffffffac);\n    (*_sym.imp.GDI32.dll_Polygon)(*(arg_8h + 4), &stack0xffffffb0, 3);\n    fcn.0043c986(0);\n    fcn.0043c481(uVar1);\n    fcn.0043c4c7(uVar2);\n    fcn.0043d5f3();\n    fcn.0043d5f3();\n    *in_FS_OFFSET = unaff_ESI;\n    return;\n}\n",
        "token_count": 624
    },
    "0040f9a0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f9a0(uint8_t *arg_8h, int32_t arg_ch, uint8_t **arg_10h, uint32_t *arg_14h, int32_t arg_18h)\n\n{\n    uint8_t uVar1;\n    uint8_t **arg_10h_00;\n    uint32_t *arg_14h_00;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint var_4h;\n    \n    arg_14h_00 = arg_14h;\n    arg_10h_00 = arg_10h;\n    uVar1 = *arg_8h;\n    do {\n        if ((uVar1 == 0) || (*arg_14h_00 == 0)) {\n            return;\n        }\n        *0x461f74 = 0;\n        uVar1 = *arg_8h;\n        uVar5 = 0;\n        puVar3 = arg_8h + 1;\n        do {\n            arg_10h = puVar3;\n            uVar4 = uVar5;\n            uVar5 = uVar4 + 1;\n            puVar3 = arg_10h + 1;\n        } while (*arg_10h == uVar1);\n        arg_14h._1_3_ = arg_14h >> 8;\n        if (uVar1 < 'e') {\n            if (uVar1 == 100) {\n                if (uVar4 == 0) {\n                    *0x461f74 = 1;\n                }\n                else if (uVar4 != 1) {\n                    if (uVar4 == 2) {\n                        arg_14h = CONCAT31(arg_14h._1_3_, 0x61);\n                    }\n                    else {\n                        if (uVar4 != 3) goto code_r0x0040fa24;\n                        arg_14h = CONCAT31(arg_14h._1_3_, 0x41);\n                    }\n                    goto code_r0x0040fc5a;\n                }\n                arg_14h = CONCAT31(arg_14h._1_3_, 100);\n                goto code_r0x0040fc5a;\n            }\n            if (uVar1 != 0x27) {\n                if (uVar1 != 0x41) {\n                    if (uVar1 == 0x48) {\n                        if (uVar4 == 0) {\n                            *0x461f74 = 1;\n                        }\n                        else if (uVar5 != 2) goto code_r0x0040fa24;\n                        arg_14h = CONCAT31(arg_14h._1_3_, 0x48);\n                        goto code_r0x0040fc5a;\n                    }\n                    if (uVar1 == 0x4d) {\n                        if (uVar4 == 0) {\n                            *0x461f74 = 1;\n                        }\n                        else if (uVar4 != 1) {\n                            if (uVar4 == 2) {\n                                arg_14h = CONCAT31(arg_14h._1_3_, 0x62);\n                            }\n                            else {\n                                if (uVar4 != 3) goto code_r0x0040fa24;\n                                arg_14h = CONCAT31(arg_14h._1_3_, 0x42);\n                            }\n                            goto code_r0x0040fc5a;\n                        }\n                        arg_14h = CONCAT31(arg_14h._1_3_, 0x6d);\n                        goto code_r0x0040fc5a;\n                    }\n                    if (uVar1 != 0x61) goto code_r0x0040fa24;\n                }\n                iVar2 = fcn.00414f90(arg_8h, \"am/pm\");\n                if (iVar2 == 0) {\n                    arg_10h = arg_8h + 5;\n                }\n                else {\n                    iVar2 = fcn.00414f90(arg_8h, 0x452e60);\n                    if (iVar2 == 0) {\n                        arg_10h = arg_8h + 3;\n                    }\n                }\n                arg_14h = CONCAT31(arg_14h._1_3_, 0x70);\n                goto code_r0x0040fc5a;\n            }\n            if ((uVar5 & 1) == 0) {\n                arg_10h = arg_8h + uVar5;\n            }\n            else {\n                arg_10h = arg_8h + uVar5;\n                while( true ) {\n                    uVar1 = *arg_10h;\n                    if ((uVar1 == 0) || (*arg_14h_00 == 0)) goto code_r0x0040fa4a;\n                    if (uVar1 == 0x27) break;\n                    if (((*(*0x45c420 + 1 + uVar1 * 2) & 0x80) != 0) && (1 < *arg_14h_00)) {\n                        **arg_10h_00 = uVar1;\n                        *arg_10h_00 = *arg_10h_00 + 1;\n                        arg_10h = arg_10h + 1;\n                        *arg_14h_00 = *arg_14h_00 - 1;\n                    }\n                    **arg_10h_00 = *arg_10h;\n                    *arg_10h_00 = *arg_10h_00 + 1;\n                    arg_10h = arg_10h + 1;\n                    *arg_14h_00 = *arg_14h_00 - 1;\n                }\n                arg_10h = arg_10h + 1;\n            }\n        }\n        else {\n            if (uVar1 == 0x68) {\n                if (uVar4 == 0) {\n                    *0x461f74 = 1;\n                }\n                else if (uVar5 != 2) goto code_r0x0040fa24;\n                arg_14h = CONCAT31(arg_14h._1_3_, 0x49);\n            }\n            else if (uVar1 == 0x6d) {\n                if (uVar4 == 0) {\n                    *0x461f74 = 1;\n                }\n                else if (uVar5 != 2) goto code_r0x0040fa24;\n                arg_14h = CONCAT31(arg_14h._1_3_, 0x4d);\n            }\n            else if (uVar1 == 0x73) {\n                if (uVar4 == 0) {\n                    *0x461f74 = 1;\n                }\n                else if (uVar5 != 2) goto code_r0x0040fa24;\n                arg_14h = CONCAT31(arg_14h._1_3_, 0x53);\n            }\n            else {\n                if (uVar1 == 0x74) {\n                    if (*(arg_ch + 8) < 0xc) {\n                        puVar3 = *(arg_18h + 0x98);\n                    }\n                    else {\n                        puVar3 = *(arg_18h + 0x9c);\n                    }\n                    while ((0 < uVar5 && (*arg_14h_00 != 0))) {\n                        if (((*(*0x45c420 + 1 + *puVar3 * 2) & 0x80) != 0) && (1 < *arg_14h_00)) {\n                            **arg_10h_00 = *puVar3;\n                            *arg_10h_00 = *arg_10h_00 + 1;\n                            puVar3 = puVar3 + 1;\n                            *arg_14h_00 = *arg_14h_00 - 1;\n                        }\n                        **arg_10h_00 = *puVar3;\n                        *arg_10h_00 = *arg_10h_00 + 1;\n                        puVar3 = puVar3 + 1;\n                        *arg_14h_00 = *arg_14h_00 - 1;\n                        uVar5 = uVar5 - 1;\n                    }\n                    goto code_r0x0040fa4a;\n                }\n                if (uVar1 != 0x79) {\ncode_r0x0040fa24:\n                    if ((*(*0x45c420 + 1 + uVar1 * 2) & 0x80) != 0) {\n                        **arg_10h_00 = uVar1;\n                        *arg_10h_00 = *arg_10h_00 + 1;\n                        *arg_14h_00 = *arg_14h_00 - 1;\n                        arg_8h = arg_8h + 1;\n                    }\n                    **arg_10h_00 = *arg_8h;\n                    *arg_10h_00 = *arg_10h_00 + 1;\n                    arg_10h = arg_8h + 1;\n                    *arg_14h_00 = *arg_14h_00 - 1;\n                    goto code_r0x0040fa4a;\n                }\n                if (uVar4 == 1) {\n                    arg_14h = CONCAT31(arg_14h._1_3_, 0x79);\n                }\n                else {\n                    if (uVar4 != 3) goto code_r0x0040fa24;\n                    arg_14h = CONCAT31(arg_14h._1_3_, 0x59);\n                }\n            }\ncode_r0x0040fc5a:\n            fcn.0040f4d2(arg_14h, arg_ch, arg_10h_00, arg_14h_00, arg_18h);\n        }\ncode_r0x0040fa4a:\n        uVar1 = *arg_10h;\n        arg_8h = arg_10h;\n    } while( true );\n}\n",
        "token_count": 2213
    },
    "0041112c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0041112c(uint arg_8h, uint8_t *arg_ch, uint *arg_10h)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint arg_ch_00;\n    int16_t *piVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    uint var_248h;\n    uint var_49h;\n    uint var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uchar var_16h;\n    char var_15h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint *var_8h;\n    uint32_t var_4h;\n    \n    var_30h = 0;\n    uVar8 = *arg_ch;\n    arg_ch = arg_ch + 1;\n    var_ch = 0;\n    var_14h = 0;\n    do {\n        if ((uVar8 == 0) || (var_14h < 0)) {\n            return var_14h;\n        }\n        if ((uVar8 < ' ') || ('x' < uVar8)) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = *(uVar8 + 0x452f08) & 0xf;\n        }\n        var_30h = *(var_30h + 0x452f28 + uVar2 * 8) >> 4;\n    // switch table (8 cases) at 0x41184d\n        switch(var_30h) {\n        case 0:\ncode_r0x004112cb:\n            var_24h = 0;\n            if ((*(*0x45c420 + 1 + uVar8 * 2) & 0x80) != 0) {\n                fcn.0041186d(uVar8, arg_8h, &var_14h);\n                uVar8 = *arg_ch;\n                arg_ch = arg_ch + 1;\n            }\n            fcn.0041186d(uVar8, arg_8h, &var_14h);\n            break;\n        case 1:\n            var_10h = -1;\n            var_34h = 0;\n            var_28h = 0;\n            var_20h = 0;\n            var_1ch = 0;\n            var_4h = 0;\n            var_24h = 0;\n            break;\n        case 2:\n            if (uVar8 == 0x20) {\n                var_4h = var_4h | 2;\n            }\n            else if (uVar8 == 0x23) {\n                var_4h = var_4h | 0x80;\n            }\n            else if (uVar8 == 0x2b) {\n                var_4h = var_4h | 1;\n            }\n            else if (uVar8 == 0x2d) {\n                var_4h = var_4h | 4;\n            }\n            else if (uVar8 == 0x30) {\n                var_4h = var_4h | 8;\n            }\n            break;\n        case 3:\n            if (uVar8 == 0x2a) {\n                var_20h = fcn.0041190b(&arg_10h);\n                if (var_20h < 0) {\n                    var_4h = var_4h | 4;\n                    var_20h = -var_20h;\n                }\n            }\n            else {\n                var_20h = uVar8 + -0x30 + var_20h * 10;\n            }\n            break;\n        case 4:\n            var_10h = 0;\n            break;\n        case 5:\n            if (uVar8 == 0x2a) {\n                var_10h = fcn.0041190b(&arg_10h);\n                if (var_10h < 0) {\n                    var_10h = -1;\n                }\n            }\n            else {\n                var_10h = uVar8 + -0x30 + var_10h * 10;\n            }\n            break;\n        case 6:\n            if (uVar8 == 0x49) {\n                if ((*arg_ch != 0x36) || (arg_ch[1] != 0x34)) {\n                    var_30h = 0;\n                    goto code_r0x004112cb;\n                }\n                arg_ch = arg_ch + 2;\n                var_4h = var_4h | 0x8000;\n            }\n            else if (uVar8 == 0x68) {\n                var_4h = var_4h | 0x20;\n            }\n            else if (uVar8 == 0x6c) {\n                var_4h = var_4h | 0x10;\n            }\n            else if (uVar8 == 0x77) {\n                var_4h = var_4h | 0x800;\n            }\n            break;\n        case 7:\n            puVar4 = var_8h;\n            if (uVar8 < 'h') {\n                if (uVar8 < 'e') {\n                    if (uVar8 < 'Y') {\n                        if (uVar8 == 0x58) {\ncode_r0x004115ab:\n                            var_2ch = 7;\ncode_r0x004115b2:\n                            var_ch = 0x10;\n                            if ((var_4h & 0x80) != 0) {\n                                var_16h = 0x30;\n                                var_15h = var_2ch + 'Q';\n                                var_1ch = 2;\n                            }\n                            goto code_r0x0041161c;\n                        }\n                        if (uVar8 != 0x43) {\n                            if ((uVar8 != 0x45) && (uVar8 != 0x47)) {\n                                if (uVar8 == 0x53) {\n                                    if ((var_4h & 0x830) == 0) {\n                                        var_4h = var_4h | 0x800;\n                                    }\n                                    goto code_r0x00411359;\n                                }\n                                goto code_r0x00411736;\n                            }\n                            var_34h = 1;\n                            uVar8 = uVar8 + 0x20;\n                            goto code_r0x004113ba;\n                        }\n                        if ((var_4h & 0x830) == 0) {\n                            var_4h = var_4h | 0x800;\n                        }\ncode_r0x004113e7:\n                        if ((var_4h & 0x810) == 0) {\n                            var_248h._0_1_ = fcn.0041190b(&arg_10h);\n                            var_ch = 1;\n                        }\n                        else {\n                            arg_ch_00 = fcn.00411928();\n                            var_ch = fcn.00415ef5(&var_248h, arg_ch_00);\n                            if (var_ch < 0) {\n                                var_28h = 1;\n                            }\n                        }\n                        puVar4 = &var_248h;\n                    }\n                    else if (uVar8 == 0x5a) {\n                        piVar5 = fcn.0041190b(&arg_10h);\n                        if ((piVar5 == NULL) || (puVar4 = *(piVar5 + 2),  puVar4 == NULL)) {\n                            var_8h = *0x45c170;\n                            puVar4 = *0x45c170;\n                            goto code_r0x0041152c;\n                        }\n                        if ((var_4h & 0x800) == 0) {\n                            var_24h = 0;\n                            var_ch = *piVar5;\n                        }\n                        else {\n                            var_ch = *piVar5 >> 1;\n                            var_24h = 1;\n                        }\n                    }\n                    else {\n                        if (uVar8 == 99) goto code_r0x004113e7;\n                        if (uVar8 == 100) goto code_r0x00411611;\n                    }\n                }\n                else {\ncode_r0x004113ba:\n                    var_4h = var_4h | 0x40;\n                    puVar4 = &var_248h;\n                    if (var_10h < 0) {\n                        var_10h = 6;\n                    }\n                    else if ((var_10h == 0) && (uVar8 == 0x67)) {\n                        var_10h = 1;\n                    }\n                    unique0x00007a00 = *arg_10h;\n                    var_44h = arg_10h[1];\n                    arg_10h = arg_10h + 2;\n                    var_8h = puVar4;\n                    (**0x45c098)(&var_49h + 1, &var_248h, uVar8, var_10h, var_34h);\n                    uVar2 = var_4h & 0x80;\n                    if ((uVar2 != 0) && (var_10h == 0)) {\n                        (**0x45c0a4)(&var_248h);\n                    }\n                    if ((uVar8 == 0x67) && (uVar2 == 0)) {\n                        (**0x45c09c)(&var_248h);\n                    }\n                    if (var_248h == '-') {\n                        var_4h = var_4h | 0x100;\n                        puVar4 = &var_248h + 1;\n                        var_8h = puVar4;\n                    }\ncode_r0x0041152c:\n                    var_ch = fcn.00410e90(puVar4);\n                    puVar4 = var_8h;\n                }\n            }\n            else {\n                if (uVar8 == 0x69) {\ncode_r0x00411611:\n                    var_4h = var_4h | 0x40;\n                }\n                else {\n                    if (uVar8 == 0x6e) {\n                        piVar6 = fcn.0041190b(&arg_10h);\n                        if ((var_4h & 0x20) == 0) {\n                            *piVar6 = var_14h;\n                        }\n                        else {\n                            *piVar6 = var_14h;\n                        }\n                        var_28h = 1;\n                        break;\n                    }\n                    if (uVar8 == 0x6f) {\n                        var_ch = 8;\n                        if ((var_4h & 0x80) != 0) {\n                            var_4h = var_4h | 0x200;\n                        }\n                        goto code_r0x0041161c;\n                    }\n                    if (uVar8 == 0x70) {\n                        var_10h = 8;\n                        goto code_r0x004115ab;\n                    }\n                    if (uVar8 == 0x73) {\ncode_r0x00411359:\n                        iVar9 = var_10h;\n                        if (var_10h == -1) {\n                            iVar9 = 0x7fffffff;\n                        }\n                        puVar3 = fcn.0041190b(&arg_10h);\n                        if ((var_4h & 0x810) == 0) {\n                            puVar4 = puVar3;\n                            if (puVar3 == NULL) {\n                                puVar3 = *0x45c170;\n                                puVar4 = *0x45c170;\n                            }\n                            for (; (iVar9 != 0 && (*puVar3 != '\\0')); puVar3 = puVar3 + 1) {\n                                iVar9 = iVar9 + -1;\n                            }\n                            var_ch = puVar3 - puVar4;\n                        }\n                        else {\n                            if (puVar3 == NULL) {\n                                puVar3 = *0x45c174;\n                            }\n                            var_24h = 1;\n                            for (puVar4 = puVar3; (iVar9 != 0 && (*puVar4 != 0)); puVar4 = puVar4 + 2) {\n                                iVar9 = iVar9 + -1;\n                            }\n                            var_ch = puVar4 - puVar3 >> 1;\n                            puVar4 = puVar3;\n                        }\n                        goto code_r0x00411736;\n                    }\n                    if (uVar8 != 0x75) {\n                        if (uVar8 != 0x78) goto code_r0x00411736;\n                        var_2ch = 0x27;\n                        goto code_r0x004115b2;\n                    }\n                }\n                var_ch = 10;\ncode_r0x0041161c:\n                if ((var_4h & 0x8000) == 0) {\n                    if ((var_4h & 0x20) == 0) {\n                        if ((var_4h & 0x40) == 0) {\n                            uVar2 = fcn.0041190b(&arg_10h);\n                            uVar11 = uVar2;\n                            goto code_r0x0041166f;\n                        }\n                        uVar2 = fcn.0041190b(&arg_10h);\n                    }\n                    else if ((var_4h & 0x40) == 0) {\n                        uVar2 = fcn.0041190b(&arg_10h);\n                        uVar2 = uVar2 & 0xffff;\n                    }\n                    else {\n                        iVar1 = fcn.0041190b(&arg_10h);\n                        uVar2 = iVar1;\n                    }\n                    uVar11 = uVar2;\n                }\n                else {\n                    uVar11 = fcn.00411918(&arg_10h);\n                }\ncode_r0x0041166f:\n                if ((((var_4h & 0x40) != 0) && (uVar11 < 0x100000000)) && (uVar11 < 0)) {\n                    uVar11 = CONCAT44(-((uVar11 >> 0x20) + (uVar11 != 0)), -uVar11);\n                    var_4h = var_4h | 0x100;\n                }\n                uVar2 = uVar11 >> 0x20;\n                if ((var_4h & 0x8000) == 0) {\n                    uVar2 = 0;\n                }\n                uVar12 = uVar11 & 0xffffffff | uVar2 << 0x20;\n                if (var_10h < 0) {\n                    var_10h = 1;\n                }\n                else {\n                    var_4h = var_4h & 0xfffffff7;\n                }\n                if ((uVar11 | uVar2) == 0) {\n                    var_1ch = 0;\n                }\n                var_8h = &var_49h;\n                while ((iVar9 = var_10h + -1,  0 < var_10h || (uVar12 != 0))) {\n                    var_3ch = var_ch >> 0x1f;\n                    var_40h = var_ch;\n                    var_10h = iVar9;\n                    iVar9 = fcn.00415fc0(uVar12, var_ch, var_3ch);\n                    iVar9 = iVar9 + 0x30;\n                    uVar12 = fcn.0040c6a0();\n                    if (0x39 < iVar9) {\n                        iVar9 = iVar9 + var_2ch;\n                    }\n                    puVar4 = var_8h + -1;\n                    *var_8h = iVar9;\n                    var_8h = puVar4;\n                }\n                var_ch = &var_49h + -var_8h;\n                puVar4 = var_8h + 1;\n                var_10h = iVar9;\n                if (((var_4h & 0x200) != 0) && ((*puVar4 != '0' || (var_ch == 0)))) {\n                    var_ch = &var_49h + -var_8h + 1;\n                    *var_8h = '0';\n                    puVar4 = var_8h;\n                }\n            }\ncode_r0x00411736:\n            var_8h = puVar4;\n            uVar2 = var_4h;\n            if (var_28h == 0) {\n                if ((var_4h & 0x40) != 0) {\n                    if ((var_4h & 0x100) == 0) {\n                        if ((var_4h & 1) == 0) {\n                            if ((var_4h & 2) == 0) goto code_r0x0041176e;\n                            var_16h = 0x20;\n                        }\n                        else {\n                            var_16h = 0x2b;\n                        }\n                    }\n                    else {\n                        var_16h = 0x2d;\n                    }\n                    var_1ch = 1;\n                }\ncode_r0x0041176e:\n                iVar9 = (var_20h - var_1ch) - var_ch;\n                if ((var_4h & 0xc) == 0) {\n                    fcn.004118a2(0x20, iVar9, arg_8h, &var_14h);\n                }\n                fcn.004118d3(&var_16h, var_1ch, arg_8h, &var_14h);\n                if (((uVar2 & 8) != 0) && ((uVar2 & 4) == 0)) {\n                    fcn.004118a2(0x30, iVar9, arg_8h, &var_14h);\n                }\n                if ((var_24h == 0) || (uVar2 = var_ch,  puVar4 = var_8h,  var_ch < 1)) {\n                    fcn.004118d3(var_8h, var_ch, arg_8h, &var_14h);\n                }\n                else {\n                    do {\n                        uVar10 = uVar2 - 1;\n                        iVar7 = fcn.00415ef5(&var_38h, uVar2 & 0xffff0000 | *puVar4);\n                        if (iVar7 < 1) break;\n                        fcn.004118d3(&var_38h, iVar7, arg_8h, &var_14h);\n                        uVar2 = uVar10;\n                        puVar4 = puVar4 + 2;\n                    } while (uVar10 != 0);\n                }\n                if ((var_4h & 4) != 0) {\n                    fcn.004118a2(0x20, iVar9, arg_8h, &var_14h);\n                }\n            }\n        }\n        uVar8 = *arg_ch;\n        arg_ch = arg_ch + 1;\n    } while( true );\n}\n",
        "token_count": 4331
    },
    "00412842": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412842(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    char *pcVar1;\n    uint32_t *puVar2;\n    int32_t *piVar3;\n    char cVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    code *pcVar8;\n    uint8_t uVar9;\n    int32_t *piVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar5 = arg_8h[4];\n    iVar6 = *(arg_ch - 4);\n    piVar10 = arg_ch - 4;\n    uVar11 = arg_ch - arg_8h[3] >> 0xf;\n    uVar7 = *(arg_ch - 8);\n    var_ch = iVar6 + -1;\n    piVar3 = uVar11 * 0x204 + 0x144 + uVar5;\n    uVar13 = *(var_ch + piVar10);\n    if ((uVar13 & 1) == 0) {\n        arg_ch = (uVar13 >> 4) - 1;\n        if (0x3f < arg_ch) {\n            arg_ch = 0x3f;\n        }\n        if (*(iVar6 + 3 + piVar10) == *(iVar6 + 7 + piVar10)) {\n            if (arg_ch < 0x20) {\n                pcVar1 = arg_ch + 4 + uVar5;\n                uVar12 = ~(0x80000000U >> (arg_ch & 0x1f));\n                puVar2 = uVar5 + 0x44 + uVar11 * 4;\n                *puVar2 = *puVar2 & uVar12;\n                *pcVar1 = *pcVar1 + -1;\n                if (*pcVar1 == '\\0') {\n                    *arg_8h = *arg_8h & uVar12;\n                }\n            }\n            else {\n                pcVar1 = arg_ch + 4 + uVar5;\n                uVar12 = ~(0x80000000U >> (arg_ch - 0x20 & 0x1f));\n                puVar2 = uVar5 + 0xc4 + uVar11 * 4;\n                *puVar2 = *puVar2 & uVar12;\n                *pcVar1 = *pcVar1 + -1;\n                if (*pcVar1 == '\\0') {\n                    arg_8h[1] = arg_8h[1] & uVar12;\n                }\n            }\n        }\n        *(*(iVar6 + 7 + piVar10) + 4) = *(iVar6 + 3 + piVar10);\n        var_ch = var_ch + uVar13;\n        *(*(iVar6 + 3 + piVar10) + 8) = *(iVar6 + 7 + piVar10);\n    }\n    uVar13 = (var_ch >> 4) - 1;\n    if (0x3f < uVar13) {\n        uVar13 = 0x3f;\n    }\n    if ((uVar7 & 1) == 0) {\n        piVar10 = piVar10 - uVar7;\n        arg_ch = (uVar7 >> 4) - 1;\n        if (0x3f < arg_ch) {\n            arg_ch = 0x3f;\n        }\n        var_ch = var_ch + uVar7;\n        uVar13 = (var_ch >> 4) - 1;\n        if (0x3f < uVar13) {\n            uVar13 = 0x3f;\n        }\n        if (arg_ch != uVar13) {\n            if (piVar10[1] == piVar10[2]) {\n                if (arg_ch < 0x20) {\n                    pcVar1 = arg_ch + 4 + uVar5;\n                    uVar12 = ~(0x80000000U >> (arg_ch & 0x1f));\n                    puVar2 = uVar5 + 0x44 + uVar11 * 4;\n                    *puVar2 = *puVar2 & uVar12;\n                    *pcVar1 = *pcVar1 + -1;\n                    if (*pcVar1 == '\\0') {\n                        *arg_8h = *arg_8h & uVar12;\n                    }\n                }\n                else {\n                    pcVar1 = arg_ch + 4 + uVar5;\n                    uVar12 = ~(0x80000000U >> (arg_ch - 0x20 & 0x1f));\n                    puVar2 = uVar5 + 0xc4 + uVar11 * 4;\n                    *puVar2 = *puVar2 & uVar12;\n                    *pcVar1 = *pcVar1 + -1;\n                    if (*pcVar1 == '\\0') {\n                        arg_8h[1] = arg_8h[1] & uVar12;\n                    }\n                }\n            }\n            *(piVar10[2] + 4) = piVar10[1];\n            *(piVar10[1] + 8) = piVar10[2];\n        }\n    }\n    if (((uVar7 & 1) != 0) || (arg_ch != uVar13)) {\n        piVar10[1] = piVar3[uVar13 * 2 + 1];\n        piVar10[2] = piVar3 + uVar13 * 2;\n        (piVar3 + uVar13 * 2)[1] = piVar10;\n        *(piVar10[1] + 8) = piVar10;\n        if (piVar10[1] == piVar10[2]) {\n            cVar4 = *(uVar13 + 4 + uVar5);\n            *(uVar13 + 4 + uVar5) = cVar4 + '\\x01';\n            uVar9 = uVar13;\n            if (uVar13 < 0x20) {\n                if (cVar4 == '\\0') {\n                    *arg_8h = *arg_8h | 0x80000000U >> (uVar9 & 0x1f);\n                }\n                puVar2 = uVar5 + 0x44 + uVar11 * 4;\n                *puVar2 = *puVar2 | 0x80000000U >> (uVar9 & 0x1f);\n            }\n            else {\n                if (cVar4 == '\\0') {\n                    arg_8h[1] = arg_8h[1] | 0x80000000U >> (uVar9 - 0x20 & 0x1f);\n                }\n                puVar2 = uVar5 + 0xc4 + uVar11 * 4;\n                *puVar2 = *puVar2 | 0x80000000U >> (uVar9 - 0x20 & 0x1f);\n            }\n        }\n    }\n    *piVar10 = var_ch;\n    *(var_ch + -4 + piVar10) = var_ch;\n    *piVar3 = *piVar3 + -1;\n    pcVar8 = _sym.imp.KERNEL32.dll_VirtualFree;\n    uVar5 = *0x461f30;\n    puVar2 = *0x461f38;\n    if ((*piVar3 == 0) && (uVar5 = uVar11,  puVar2 = arg_8h,  *0x461f38 != NULL)) {\n        (*_sym.imp.KERNEL32.dll_VirtualFree)(*0x461f30 * 0x8000 + (*0x461f38)[3], 0x8000, 0x4000);\n        (*0x461f38)[2] = (*0x461f38)[2] | 0x80000000U >> (*0x461f30 & 0x1f);\n        *((*0x461f38)[4] + 0xc4 + *0x461f30 * 4) = 0;\n        *((*0x461f38)[4] + 0x43) = *((*0x461f38)[4] + 0x43) + -1;\n        if (*((*0x461f38)[4] + 0x43) == '\\0') {\n            (*0x461f38)[1] = (*0x461f38)[1] & 0xfffffffe;\n        }\n        puVar2 = arg_8h;\n        if ((*0x461f38)[2] == 0xffffffff) {\n            (*pcVar8)((*0x461f38)[3], 0, 0x8000);\n            (*_sym.imp.KERNEL32.dll_HeapFree)(*0x461f44, 0, (*0x461f38)[4]);\n            fcn.0040d6c0(*0x461f38, *0x461f38 + 5, (*0x461f3c * 0x14 - *0x461f38) + -0x14 + *0x461f40);\n            *0x461f3c = *0x461f3c + -1;\n            if (*0x461f38 < arg_8h) {\n                arg_8h = arg_8h + -5;\n            }\n            *0x461f34 = *0x461f40;\n            puVar2 = arg_8h;\n        }\n    }\n    *0x461f38 = puVar2;\n    *0x461f30 = uVar5;\n    return;\n}\n",
        "token_count": 2167
    },
    "0041de50": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0041de50(uint param_1, uint16_t param_2, uint32_t param_3)\n\n{\n    uint uVar1;\n    \n    uVar1 = (*_sym.imp.GDI32.dll_SetBkColor)(param_1, *((param_3 & 0xffff) * 4 + 0x4624e4));\n    if ((param_3 & 2) != 0) {\n        (*_sym.imp.GDI32.dll_ExtTextOutA)(param_1, 0, 0, 2, &stack0xffffffe8, 0, 0, 0);\n    }\n    if ((param_3 & 1) != 0) {\n        (*_sym.imp.GDI32.dll_ExtTextOutA)(param_1, 0, 0, 2, &stack0xffffffe8, 0, 0, 0);\n    }\n    if (param_1 != param_2) {\n        (*_sym.imp.GDI32.dll_SetBkColor)(param_1, *(param_2 * 4 + 0x4624e4));\n    }\n    if ((param_3 & 4) != 0) {\n        (*_sym.imp.GDI32.dll_ExtTextOutA)(param_1, 0, 0, 2, &stack0xffffffe8, 0, 0, 0);\n    }\n    if ((param_3 & 8) != 0) {\n        (*_sym.imp.GDI32.dll_ExtTextOutA)(param_1, 0, 0, 2, &stack0xffffffe8, 0, 0, 0);\n    }\n    (*_sym.imp.GDI32.dll_SetBkColor)(param_1, uVar1);\n    return;\n}\n",
        "token_count": 397
    },
    "0041f920": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0041f920(uint param_1)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uchar *puStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uchar auStack16 [8];\n    int32_t iStack8;\n    \n    puStack32 = &stack0xfffffff0;\n    uStack36 = param_1;\n    uStack40 = 0x41f936;\n    (*_sym.imp.USER32.dll_GetWindowRect)();\n    uStack40 = 0xfffffff0;\n    uStack44 = param_1;\n    uStack48 = 0x41f93f;\n    uVar3 = (*_sym.imp.USER32.dll_GetWindowLongA)();\n    if (((uVar3 & 0x10000000) != 0) &&\n       ((((iStack8 == 0 || (uVar1 = *(iStack8 + 0x18),  (uVar1 & 0xc0) != 0)) || ((uVar1 & 2) == 0)) ||\n        ((uVar1 & 1) == 0)))) {\n        puStack56 = &stack0xffffffe0;\n        uStack48 = 1;\n        uStack52 = 1;\n        uStack60 = 0x41f99e;\n        (*_sym.imp.USER32.dll_InflateRect)();\n        uStack60 = param_1;\n        puStack64 = 0x41f9a5;\n        uVar4 = (*_sym.imp.USER32.dll_GetParent)();\n        pcVar2 = _sym.imp.USER32.dll_ScreenToClient;\n        puStack64 = &stack0xffffffd0;\n        (*_sym.imp.USER32.dll_ScreenToClient)(uVar4);\n        (*pcVar2)(uVar4, &stack0xffffffd0);\n        if ((uVar3 & 0x200000) != 0) {\n            puStack56 = puStack56 + 1;\n        }\n        (*_sym.imp.USER32.dll_InvalidateRect)(uVar4, &stack0xffffffc0, 0);\n    }\n    return;\n}\n",
        "token_count": 516
    },
    "0043332e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00433386)\n// WARNING: Removing unreachable block (ram,0x00433395)\n// WARNING: Removing unreachable block (ram,0x0043339b)\n// WARNING: Removing unreachable block (ram,0x004333ad)\n// WARNING: Removing unreachable block (ram,0x004333b4)\n// WARNING: Removing unreachable block (ram,0x004333ba)\n// WARNING: Removing unreachable block (ram,0x004333c0)\n// WARNING: Removing unreachable block (ram,0x004333d3)\n// WARNING: Removing unreachable block (ram,0x004333da)\n// WARNING: Removing unreachable block (ram,0x004333f6)\n\nint32_t __thiscall fcn.0043332e(int32_t *param_1, uint8_t param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t unaff_EBX;\n    \n    if ((param_2 & 4) != 0) {\n        fcn.00433c44();\n    }\n    (*_sym.imp.USER32.dll_GetParent)(param_1[7]);\n    param_1[9] = param_1[9] | 0x18;\n    iVar2 = fcn.00435e7c();\n    pcVar1 = _sym.imp.USER32.dll_UpdateWindow;\n    while( true ) {\n        piVar3 = fcn.00435e7c();\n        iVar4 = (**(*piVar3 + 0x5c))();\n        if (iVar4 == 0) {\n            fcn.0044b325(0);\n            return -1;\n        }\n        if ((unaff_EBX != 0) && ((*(iVar2 + 0x34) == 0x118 || (*(iVar2 + 0x34) == 0x104)))) {\n            fcn.00433e1f(1);\n            (*pcVar1)(param_1[7]);\n            unaff_EBX = 0;\n        }\n        iVar4 = (**(*param_1 + 0x70))();\n        if (iVar4 == 0) break;\n        piVar3 = fcn.00435e7c();\n        iVar4 = (**(*piVar3 + 100))(iVar2 + 0x30);\n        if (iVar4 != 0) {\n            unaff_EBX = 0;\n        }\n        (*_sym.imp.USER32.dll_PeekMessageA)(iVar2 + 0x30, 0, 0, 0, 0);\n    }\n    param_1[9] = param_1[9] & 0xffffffe7;\n    return param_1[0xb];\n}\n",
        "token_count": 609
    },
    "00433575": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n\nbool __cdecl fcn.00433575(uint32_t arg_8h)\n\n{\n    uint noname_8;\n    uint noname_11;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint32_t uVar3;\n    uint unaff_EDI;\n    bool bVar4;\n    uint *noname_0;\n    uint32_t var_34h;\n    uint var_30h;\n    uint in_stack_ffffffd0;\n    uint in_stack_ffffffd4;\n    uint var_24h;\n    uint in_stack_ffffffdc;\n    uint var_1ch;\n    uint var_18h;\n    uint in_stack_ffffffe8;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00447f81();\n    arg_8h = arg_8h & ~*(var_4h + 0x18);\n    if (arg_8h == 0) {\n        bVar4 = true;\n    }\n    else {\n        uVar3 = 0;\n        fcn.0040cfc0(&var_34h, 0, 0x28);\n        var_30h = _sym.imp.USER32.dll_DefWindowProcA;\n        iVar1 = fcn.00447f81();\n        noname_11 = *0x45fff8;\n        noname_8 = *(iVar1 + 8);\n        noname_0 = 0x8;\n        var_ch = 8;\n        if ((arg_8h & 1) != 0) {\n            noname_0 = &var_34h;\n            var_34h = 0xb;\n            iVar1 = fcn.004315c7(noname_0, unaff_EDI, unaff_ESI, unaff_EBX, 0xb, var_30h, in_stack_ffffffd0, \n                                 in_stack_ffffffd4, noname_8, in_stack_ffffffdc, *0x45fff8, var_18h, in_stack_ffffffe8, \n                                 \"AfxWnd42s\", 8, var_8h);\n            if (iVar1 != 0) {\n                uVar3 = 1;\n            }\n        }\n        if ((arg_8h & 0x20) != 0) {\n            var_34h = var_34h | 0x8b;\n            iVar1 = fcn.004315c7(&var_34h, noname_0, unaff_EDI, unaff_ESI, unaff_EBX, var_34h, var_30h, \n                                 in_stack_ffffffd0, in_stack_ffffffd4, noname_8, in_stack_ffffffdc, noname_11, var_18h, \n                                 in_stack_ffffffe8, \"AfxOleControl42s\", var_ch);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 0x20;\n            }\n        }\n        if ((arg_8h & 2) != 0) {\n            var_34h = 0;\n            iVar1 = fcn.004315c7(&var_34h, noname_0, unaff_EDI, unaff_ESI, unaff_EBX, 0, var_30h, in_stack_ffffffd0, \n                                 in_stack_ffffffd4, noname_8, in_stack_ffffffdc, noname_11, 0x10, in_stack_ffffffe8, \n                                 \"AfxControlBar42s\", var_ch);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 2;\n            }\n        }\n        if ((arg_8h & 4) != 0) {\n            var_34h = 8;\n            iVar1 = fcn.004334bd(&var_34h, \"AfxMDIFrame42s\", 0x7a01);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 4;\n            }\n        }\n        if ((arg_8h & 8) != 0) {\n            var_34h = 0xb;\n            iVar1 = fcn.004334bd(&var_34h, \"AfxFrameOrView42s\", 0x7a02);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 8;\n            }\n        }\n        if ((arg_8h & 0x10) != 0) {\n            var_8h = 0xff;\n            uVar2 = fcn.004334fe(&var_ch, 0x3fc0);\n            uVar3 = uVar3 | uVar2;\n            arg_8h = arg_8h & 0xffffc03f;\n        }\n        if ((arg_8h & 0x40) != 0) {\n            var_8h = 0x10;\n            uVar2 = fcn.004334fe(&var_ch, 0x40);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x80) != 0) {\n            var_8h = 2;\n            uVar2 = fcn.004334fe(&var_ch, 0x80);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x100) != 0) {\n            var_8h = 8;\n            uVar2 = fcn.004334fe(&var_ch, 0x100);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x200) != 0) {\n            var_8h = 0x20;\n            uVar2 = fcn.004334fe(&var_ch, 0x200);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x400) != 0) {\n            var_8h = 1;\n            uVar2 = fcn.004334fe(&var_ch, 0x400);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x800) != 0) {\n            var_8h = 0x40;\n            uVar2 = fcn.004334fe(&var_ch, 0x800);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x1000) != 0) {\n            var_8h = 4;\n            uVar2 = fcn.004334fe(&var_ch, 0x1000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x2000) != 0) {\n            var_8h = 0x80;\n            uVar2 = fcn.004334fe(&var_ch, 0x2000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x4000) != 0) {\n            var_8h = 0x800;\n            uVar2 = fcn.004334fe(&var_ch, 0x4000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x8000) != 0) {\n            var_8h = 0x400;\n            uVar2 = fcn.004334fe(&var_ch, 0x8000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x10000) != 0) {\n            var_8h = 0x200;\n            uVar2 = fcn.004334fe(&var_ch, 0x10000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x20000) != 0) {\n            var_8h = 0x100;\n            uVar2 = fcn.004334fe(&var_ch, 0x20000);\n            uVar3 = uVar3 | uVar2;\n        }\n        *(var_4h + 0x18) = *(var_4h + 0x18) | uVar3;\n        if ((*(var_4h + 0x18) & 0x3fc0) == 0x3fc0) {\n            uVar3 = uVar3 | 0x10;\n            *(var_4h + 0x18) = *(var_4h + 0x18) | 0x10;\n        }\n        bVar4 = (uVar3 & arg_8h) == arg_8h;\n    }\n    return bVar4;\n}\n",
        "token_count": 2125
    },
    "00433bc2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00433bc2(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch, uint32_t arg_20h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    if (arg_18h != 0) {\n        arg_18h = *(arg_18h + 4);\n    }\n    uVar1 = (*_sym.imp.USER32.dll_ScrollWindowEx)\n                      (*(in_ECX + 0x1c), arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    if ((*(in_ECX + 0x34) != NULL) && ((arg_20h & 1) != 0)) {\n        (**(**(in_ECX + 0x34) + 0x58))(arg_8h, arg_ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 229
    },
    "00433c11": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00433c11(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    if ((*(param_1 + 0x25) & 1) == 0) {\n        (*_sym.imp.USER32.dll_IsDialogMessageA)(*(param_1 + 0x1c), param_2);\n    }\n    else {\n        iVar1 = fcn.00447f81();\n        (**(**(iVar1 + 0x1038) + 0x24))(param_1, param_2);\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "00435536": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: hWnd\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nint32_t fcn.00435536(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint noname_1;\n    uint32_t uVar4;\n    int32_t *extraout_ECX;\n    uint unaff_EBX;\n    uint uVar5;\n    int32_t unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    uint var_10h;\n    int32_t *noname_4;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint hWnd;\n    uint in_stack_ffffffec;\n    uint var_ch;\n    uint in_stack_fffffff4;\n    uint var_4h;\n    uint noname_13;\n    \n    noname_13 = 0x435540;\n    fcn.0040d018();\n    *(unaff_EBP + -0x10) = &fcn.00435536::var_20h;\n    *(unaff_EBP + -0x1c) = extraout_ECX;\n    iVar2 = extraout_ECX[0x11];\n    *(unaff_EBP + -0x18) = extraout_ECX[0x12];\n    var_20h = unaff_EDI;\n    var_1ch = unaff_ESI;\n    var_18h = unaff_EBX;\n    iVar1 = fcn.00447f81();\n    uVar5 = *(iVar1 + 0xc);\n    if (extraout_ECX[0x10] != 0) {\n        iVar2 = fcn.00447f81();\n        uVar5 = *(iVar2 + 0xc);\n        uVar3 = (*_sym.imp.KERNEL32.dll_FindResourceA)(uVar5, extraout_ECX[0x10], 5);\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar5, uVar3);\n    }\n    if (iVar2 != 0) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar2);\n        *(unaff_EBP + -0x18) = uVar3;\n    }\n    if (*(unaff_EBP + -0x18) == 0) {\n        iVar2 = -1;\n    }\n    else {\n        uVar3 = fcn.004354ba();\n        *(unaff_EBP + -0x14) = uVar3;\n        fcn.00430ddd();\n        *(unaff_EBP + -0x20) = 0;\n        if (*(unaff_EBP + -0x14) != 0) {\n            iVar2 = (*_sym.imp.USER32.dll_IsWindowEnabled)(*(unaff_EBP + -0x14));\n            if (iVar2 != 0) {\n                (*_sym.imp.USER32.dll_EnableWindow)(*(unaff_EBP + -0x14), 0);\n                *(unaff_EBP + -0x20) = 1;\n            }\n        }\n        *(unaff_EBP + -4) = 0;\n        noname_4 = extraout_ECX;\n        fcn.00430d91();\n        uVar3 = *(unaff_EBP + -0x14);\n        noname_1 = fcn.004308de();\n        iVar2 = fcn.004351ca(*(unaff_EBP + -0x18), noname_1, uVar5, uVar3, noname_4, var_20h, var_1ch, var_18h, hWnd, \n                             in_stack_ffffffec, var_ch, in_stack_fffffff4, var_4h, noname_13, unaff_retaddr, param_1, \n                             param_2, param_3, var_10h);\n        if (iVar2 != 0) {\n            if ((*(extraout_ECX + 9) & 0x10) != 0) {\n                uVar5 = 4;\n                uVar4 = fcn.00433c44();\n                if ((uVar4 & 0x100) != 0) {\n                    uVar5 = 5;\n                }\n                fcn.0043332e(uVar5);\n            }\n            if (extraout_ECX[7] != 0) {\n                fcn.00433dd0(0, 0, 0, 0, 0, 0x97);\n            }\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*(unaff_EBP + -0x20) != 0) {\n            (*_sym.imp.USER32.dll_EnableWindow)(*(unaff_EBP + -0x14), 1);\n        }\n        if (*(unaff_EBP + -0x14) != 0) {\n            iVar2 = (*_sym.imp.USER32.dll_GetActiveWindow)();\n            if (iVar2 == extraout_ECX[7]) {\n                (*_sym.imp.USER32.dll_SetActiveWindow)(*(unaff_EBP + -0x14));\n            }\n        }\n        (**(*extraout_ECX + 0x58))();\n        fcn.004354f4();\n        iVar2 = extraout_ECX[0xb];\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar2;\n}\n",
        "token_count": 1305
    },
    "00436deb": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00436deb(int32_t *param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    uint32_t *arg_8h;\n    uint32_t uVar2;\n    \n    param_1[1] = param_3;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40);\n    *param_1 = iVar1;\n    if (iVar1 != 0) {\n        arg_8h = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar1);\n        fcn.0040d130(arg_8h, param_3 + 0x40, param_1[1]);\n        if (*(arg_8h + 2) == -1) {\n            uVar2 = arg_8h[3];\n        }\n        else {\n            uVar2 = *arg_8h;\n        }\n        param_1[2] = ~uVar2 >> 6 & 1;\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*param_1);\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 254
    },
    "004374ba": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.004374ba(uint *param_1, uint8_t param_2)\n\n{\n    uint *puVar1;\n    \n    if ((param_2 & 2) == 0) {\n        fcn.004347d0();\n        puVar1 = param_1;\n        if ((param_2 & 1) != 0) {\n            fcn.00434eca(param_1);\n        }\n    }\n    else {\n        puVar1 = param_1 + -1;\n        fcn.0040e9a8(param_1, 4, *puVar1, fcn.004347d0);\n        if ((param_2 & 1) != 0) {\n            fcn.00434eca(puVar1);\n        }\n    }\n    return puVar1;\n}\n",
        "token_count": 180
    },
    "0043819e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_178h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0043819e(int32_t arg_8h, uint32_t arg_ch, uchar *arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uchar *puVar4;\n    int32_t *piStack432;\n    int32_t *piStack428;\n    uint uStack424;\n    uint *puStack420;\n    uint var_178h;\n    uint var_16ch;\n    uint var_162h;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    uVar3 = 0;\n    *arg_10h = 0;\n    iVar1 = (*_sym.imp.SHELL32.dll_SHGetFileInfoA)();\n    if ((iVar1 != 0) && ((var_162h & 1) != 0)) {\n        puStack420 = 0x4381f8;\n        iVar1 = fcn.00437fa4(0x452bb8, 0, 0x452ba8, &fcn.0043819e::var_4h);\n        if (-1 < iVar1) {\n            puStack420 = &fcn.0043819e::var_8h;\n            uStack424 = 0x453ac8;\n            piStack428 = var_4h;\n            piStack432 = 0x438211;\n            iVar1 = (***var_4h)();\n            if (-1 < iVar1) {\n                if (arg_ch == 0) {\n                    puVar4 = NULL;\n                }\n                else {\n                    piStack432 = arg_ch;\n                    puVar4 = &stack0xfffffe50;\n                    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n                    fcn.0040c750();\n                    piStack432 = piStack432 & 0xffff0000;\n                    (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, arg_ch, 0xffffffff, &stack0xfffffe50, iVar1 + 1);\n                }\n                piStack432 = NULL;\n                iVar1 = (**(*var_8h + 0x14))(var_8h, puVar4);\n                if (-1 < iVar1) {\n                    if (arg_8h == 0) {\n                        uVar2 = 0;\n                    }\n                    else {\n                        uVar2 = *(arg_8h + 0x1c);\n                    }\n                    iVar1 = (**(*var_4h + 0x4c))(var_4h, uVar2, 2);\n                    if (-1 < iVar1) {\n                        (**(*var_4h + 0xc))(var_4h, arg_10h, arg_14h, 0, 0);\n                        (**(*var_8h + 8))(var_8h);\n                        uVar3 = 1;\n                        goto code_r0x004382a4;\n                    }\n                }\n                (**(*var_8h + 8))(var_8h);\n            }\ncode_r0x004382a4:\n            piStack432 = var_4h;\n            (**(*var_4h + 8))();\n            return uVar3;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 747
    },
    "0043893b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043893b(uint arg_8h, int32_t *arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_24h;\n    uint var_1ch;\n    uint var_14h;\n    uint *var_ch;\n    uint *var_8h;\n    uint32_t var_4h;\n    \n    var_ch = NULL;\n    var_8h = NULL;\n    var_4h = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(arg_8h);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (var_4h == 0xffffffff) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(0);\n        fcn.00438a88(uVar2);\n    }\n    if (((*(arg_ch + 4) != var_4h) && ((var_4h & 1) != 0)) &&\n       (iVar3 = (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(arg_8h, *(arg_ch + 4)),  iVar3 == 0)) {\n        uVar2 = (*pcVar1)(0);\n        fcn.00438a88(uVar2);\n    }\n    if (arg_ch[1] != 0) {\n        fcn.00438888(arg_ch + 1, &var_24h);\n        if (arg_ch[2] != 0) {\n            fcn.00438888(arg_ch + 2, &var_14h);\n            var_8h = &var_14h;\n        }\n        if (*arg_ch != 0) {\n            fcn.00438888(arg_ch, &var_1ch);\n            var_ch = &var_1ch;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0xc0000000, 1, 0, 3, 0x80, 0);\n        if (iVar3 == -1) {\n            uVar2 = (*pcVar1)(0);\n            fcn.00438a88(uVar2);\n        }\n        iVar4 = (*_sym.imp.KERNEL32.dll_SetFileTime)(iVar3, var_ch, var_8h, &var_24h);\n        if (iVar4 == 0) {\n            uVar2 = (*pcVar1)(0);\n            fcn.00438a88(uVar2);\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n        if (iVar3 == 0) {\n            uVar2 = (*pcVar1)(0);\n            fcn.00438a88(uVar2);\n        }\n    }\n    if (((*(arg_ch + 4) != var_4h) && ((var_4h & 1) == 0)) &&\n       (iVar3 = (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(arg_8h, *(arg_ch + 4)),  iVar3 == 0)) {\n        uVar2 = (*pcVar1)(0);\n        fcn.00438a88(uVar2);\n    }\n    return;\n}\n",
        "token_count": 711
    },
    "0043d972": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043d972(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    if ((~*(arg_8h + 0x14) & 1) == 0) {\n        if (arg_10h != 0) {\n            do {\n                fcn.0043d8da(arg_8h, arg_ch);\n                arg_ch = arg_ch + 4;\n                arg_10h = arg_10h + -1;\n            } while (arg_10h != 0);\n        }\n    }\n    else if (arg_10h != 0) {\n        do {\n            fcn.0043d80a(arg_8h, arg_ch);\n            arg_ch = arg_ch + 4;\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n    }\n    return;\n}\n",
        "token_count": 205
    },
    "0043dd94": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043dd94(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((*(param_1 + 0x14) & 1) == 0) {\n        iVar1 = *(param_1 + 0x24);\n        iVar2 = *(param_1 + 0x2c);\n        if (*(param_1 + 8) == 0) {\n            if (iVar1 != iVar2) {\n                (**(**(param_1 + 0x20) + 0x38))(iVar2, iVar1 - iVar2);\n            }\n        }\n        else {\n            if (iVar1 != iVar2) {\n                (**(**(param_1 + 0x20) + 0x50))(2, iVar1 - iVar2, 0, 0);\n            }\n            (**(**(param_1 + 0x20) + 0x50))(1, *(param_1 + 0x1c), param_1 + 0x2c, param_1 + 0x28);\n        }\n        *(param_1 + 0x24) = *(param_1 + 0x2c);\n    }\n    else {\n        if (*(param_1 + 0x28) != *(param_1 + 0x24)) {\n            (**(**(param_1 + 0x20) + 0x28))(*(param_1 + 0x24) - *(param_1 + 0x28), 1);\n        }\n        *(param_1 + 0x24) = *(param_1 + 0x28);\n    }\n    return;\n}\n",
        "token_count": 368
    },
    "0044326e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.0044326e(void)\n\n{\n    uint8_t uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint lpvBits;\n    \n    fcn.0044939a(8);\n    if (*0x45fdd4 == 0) {\n        iVar3 = 0;\n        puVar2 = &lpvBits;\n        do {\n            uVar1 = iVar3;\n            iVar3 = iVar3 + 1;\n            *puVar2 = 0x5555 << (uVar1 & 1);\n            puVar2 = puVar2 + 2;\n        } while (iVar3 < 8);\n        iVar3 = (*_sym.imp.GDI32.dll_CreateBitmap)(8, 8, 1, 1, &lpvBits);\n        if (iVar3 != 0) {\n            *0x45fdd4 = (*_sym.imp.GDI32.dll_CreatePatternBrush)(iVar3);\n            (*_sym.imp.GDI32.dll_DeleteObject)(iVar3);\n        }\n    }\n    fcn.0044940a(8);\n    fcn.0043d587(*0x45fdd4);\n    return;\n}\n",
        "token_count": 261
    },
    "00448a89": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00448a89(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    code *pcVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    \n    iVar6 = param_1 + 0x1c;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(iVar6);\n    iVar7 = *(param_1 + 4);\n    iVar8 = *(param_1 + 8);\n    if ((iVar7 <= iVar8) || ((*(*(param_1 + 0x10) + iVar8 * 8) & 1) != 0)) {\n        iVar8 = 1;\n        if (1 < iVar7) {\n            puVar3 = *(param_1 + 0x10);\n            do {\n                puVar3 = puVar3 + 8;\n                if ((*puVar3 & 1) == 0) break;\n                iVar8 = iVar8 + 1;\n            } while (iVar8 < iVar7);\n            if (iVar8 < iVar7) goto code_r0x00448b6e;\n        }\n        iVar7 = iVar7 + 0x20;\n        if (*(param_1 + 0x10) == 0) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x2002, iVar7 * 8);\n        }\n        else {\n            uVar5 = (*_sym.imp.KERNEL32.dll_GlobalHandle)(*(param_1 + 0x10));\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar5);\n            iVar4 = (*_sym.imp.KERNEL32.dll_GlobalReAlloc)(uVar5, iVar7 * 8, 0x2002);\n        }\n        pcVar2 = _sym.imp.KERNEL32.dll_GlobalLock;\n        if (iVar4 == 0) {\n            uVar5 = (*_sym.imp.KERNEL32.dll_GlobalHandle)(*(param_1 + 0x10));\n            (*pcVar2)(uVar5);\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(iVar6);\n            fcn.0042a04b();\n        }\n        iVar6 = (*pcVar2)(iVar4);\n        fcn.0040cfc0(iVar6 + *(param_1 + 4) * 8, 0, (*(param_1 + 4) * 0x1fffffff + iVar7) * 8);\n        *(param_1 + 0x10) = iVar6;\n        *(param_1 + 4) = iVar7;\n    }\ncode_r0x00448b6e:\n    if (*(param_1 + 0xc) <= iVar8) {\n        *(param_1 + 0xc) = iVar8 + 1;\n    }\n    puVar1 = *(param_1 + 0x10) + iVar8 * 8;\n    *puVar1 = *puVar1 | 1;\n    *(param_1 + 8) = iVar8 + 1;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1);\n    return iVar8;\n}\n",
        "token_count": 712
    },
    "00448cfe": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00448cfe(int32_t param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    uint unaff_retaddr;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(param_1 + 0x1c);\n    iVar2 = 1;\n    if (1 < *(param_1 + 0xc)) {\n        do {\n            puVar1 = *(param_1 + 0x10) + iVar2 * 8;\n            if ((*(*(param_1 + 0x10) + 4 + iVar2 * 8) == 0) && ((*puVar1 & 1) != 0)) {\n                *(puVar1 + 4) = unaff_retaddr;\n            }\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < *(param_1 + 0xc));\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1 + 0x1c);\n    return;\n}\n",
        "token_count": 225
    },
    "0041fd90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nvoid fcn.0041fd90(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    uint uVar7;\n    int32_t iVar8;\n    uint uVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iStack460;\n    int32_t iStack456;\n    int32_t iStack452;\n    int32_t iStack448;\n    int32_t iStack444;\n    uint32_t uStack440;\n    int32_t iStack436;\n    int32_t iStack432;\n    int32_t iStack428;\n    int32_t iStack424;\n    int32_t iStack420;\n    int32_t iStack416;\n    int32_t iStack412;\n    int32_t iStack408;\n    uint32_t uStack404;\n    int32_t iStack400;\n    int32_t iStack396;\n    int32_t iStack392;\n    int32_t iStack388;\n    int32_t iStack384;\n    uchar *puStack380;\n    int32_t iStack376;\n    uint uStack372;\n    int32_t iStack368;\n    int32_t iStack364;\n    uint uStack360;\n    uchar auStack308 [208];\n    uint32_t uStack100;\n    int32_t iStack4;\n    \n    uStack360 = 0xfffffff0;\n    iStack364 = param_1;\n    iStack368 = 0x41fdaa;\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)();\n    iStack368 = param_1;\n    uVar2 = uVar2 & 0x1f;\n    uStack372 = 0x41fdbf;\n    (*_sym.imp.USER32.dll_GetParent)();\n    uStack372 = 2;\n    iStack376 = iStack4;\n    puStack380 = 0x41fdd3;\n    (*_sym.imp.GDI32.dll_SetBkMode)();\n    puStack380 = &stack0xfffffecc;\n    iStack384 = param_1;\n    iStack388 = 0x41fde1;\n    (*_sym.imp.USER32.dll_GetClientRect)();\n    iStack388 = 0;\n    iStack392 = 0;\n    iStack396 = 0x31;\n    iStack400 = param_1;\n    uStack404 = 0x41fe0d;\n    uStack404 = (*_sym.imp.USER32.dll_SendMessageA)();\n    iStack384 = uStack404;\n    if (uStack404 != 0) {\n        iStack408 = iStack4;\n        iStack412 = 0x41fe1d;\n        iStack384 = (*_sym.imp.GDI32.dll_SelectObject)();\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetSysColor;\n    uStack404 = 0xf;\n    iStack408 = 0x41fe2b;\n    iStack408 = (*_sym.imp.USER32.dll_GetSysColor)();\n    iStack412 = iStack4;\n    iStack416 = 0x41fe33;\n    (*_sym.imp.GDI32.dll_SetBkColor)();\n    iStack416 = 0x12;\n    iStack420 = 0x41fe37;\n    iStack420 = (*pcVar1)();\n    iStack424 = iStack4;\n    iStack428 = 0x41fe3f;\n    (*_sym.imp.GDI32.dll_SetTextColor)();\n    iStack428 = param_1;\n    iStack432 = iStack4;\n    iStack436 = 0x135;\n    uStack440 = iStack396;\n    iStack444 = 0x41fe51;\n    iStack444 = (*_sym.imp.USER32.dll_SendMessageA)();\n    iStack448 = iStack4;\n    iStack452 = 0x41fe59;\n    uStack404 = (*_sym.imp.GDI32.dll_SelectObject)();\n    iStack452 = iStack384;\n    iStack456 = iStack388;\n    iStack460 = iStack392;\n    (*_sym.imp.GDI32.dll_IntersectClipRect)(iStack4, iStack396);\n    if (((uStack100 & 0x10) != 0) && (uVar2 != 7)) {\n        (*_sym.imp.GDI32.dll_PatBlt)\n                  (iStack4, iStack416, iStack412, iStack408 - iStack416, uStack404 - iStack412, 0xf00021);\n    }\n    iVar10 = param_1;\n    iStack432 = (*_sym.imp.USER32.dll_IsWindowEnabled)(param_1);\n    uVar9 = 0;\n    iVar8 = 0;\n    uVar7 = 0xf2;\n    uStack404 = (*_sym.imp.USER32.dll_SendMessageA)(param_1, 0xf2, 0, 0);\n    iVar11 = 0;\n    uStack440 = uStack404 & 3;\n    uStack404 = uStack404 & 4;\n    if ((((uStack100 & 10) != 0) || (uVar2 == 0)) || (uVar2 == 1)) {\n        iStack452 = (*_sym.imp.USER32.dll_GetWindowTextA)(param_1, &stack0xfffffe7c, 0x100);\n    }\n    // switch table (10 cases) at 0x4202b4\n    switch(uVar2) {\n    case 0:\n    case 1:\n        fcn.0041fa50(param_1, iStack4, &stack0xfffffe5c, &stack0xfffffe7c, iStack452, uVar2, uStack404);\n        goto code_r0x00420289;\n    case 2:\n    case 3:\n        break;\n    case 4:\n    case 9:\n        iVar11 = 0xd;\n        break;\n    case 5:\n    case 6:\n        if (uStack440 == 2) {\n            iVar11 = 0x1a;\n        }\n        break;\n    case 7:\n        if ((uStack100 & 6) != 0) {\n            fcn.0041e040(iStack4, &stack0xfffffe7c, &stack0xfffffe48, &stack0xfffffe38);\n            if (iStack456 == 0) {\n                fcn.0041e040(iStack4, 0x45d8c8, &stack0xfffffe6c, &stack0xfffffe38);\n            }\n            pcVar1 = _sym.imp.USER32.dll_ClientToScreen;\n            iStack436 = iStack436 + 4;\n            iStack428 = uStack440 + iStack436 + 4;\n            iStack424 = iStack456 + iStack432;\n            if ((uStack100 & 0x20) != 0) {\n                puVar6 = &stack0xfffffe6c;\n                iStack400 = iStack432;\n                iStack396 = iStack412;\n                uStack404 = iStack436;\n                iStack392 = iStack424;\n                (*_sym.imp.USER32.dll_ClientToScreen)(param_1, puVar6);\n                (*pcVar1)(param_1, &stack0xfffffe6c);\n                pcVar1 = _sym.imp.USER32.dll_ScreenToClient;\n                (*_sym.imp.USER32.dll_ScreenToClient)(uVar9, &stack0xfffffe5c);\n                (*pcVar1)(uVar7, &stack0xfffffe5c);\n                (*_sym.imp.USER32.dll_InvalidateRect)(puVar6, &stack0xfffffe4c, 1);\n                return;\n            }\n            iStack412 = iStack412 + -1;\n            iStack408 = iStack408 + -1;\n            iStack416 = iStack416 + iStack456 / 2;\n            fcn.0041de50(iStack4, &stack0xfffffe5c, 2, 2, 0xf);\n            (*_sym.imp.USER32.dll_OffsetRect)(&stack0xfffffe5c, 1, 1);\n            fcn.0041de50(iStack4, &stack0xfffffe50, 0, 0, 0xf);\n            if (iStack460 == 0) {\n                (*_sym.imp.GDI32.dll_SetTextColor)(iStack4, *0x4624fc);\n            }\n            (*_sym.imp.USER32.dll_DrawTextA)(iStack4, &stack0xfffffe70, iVar11, &stack0xfffffe40, 0x20);\n        }\n    default:\n        goto code_r0x00420289;\n    }\n    if (((uStack100 & 4) != 0) && (iVar3 = (*_sym.imp.GDI32.dll_CreateCompatibleDC)(iStack4),  iVar3 != 0)) {\n        iVar4 = (*_sym.imp.GDI32.dll_SelectObject)(iVar3, *0x462510);\n        if (iVar4 != 0) {\n            iVar5 = iStack444;\n            if (iVar11 != 0) {\n                iVar5 = iStack436 + -0xe;\n            }\n            (*_sym.imp.GDI32.dll_BitBlt)\n                      (iStack4, iVar5, uStack440 + ((iStack432 - uStack440) + -0xd) / 2, 0xe, 0xd, iVar3, uVar9, iVar10\n                       , 0xcc0020);\n            (*_sym.imp.GDI32.dll_SelectObject)(iVar3, iVar4);\n        }\n        (*_sym.imp.GDI32.dll_DeleteDC)(iVar3);\n    }\n    if ((uStack100 & 2) != 0) {\n        if (iStack456 == 0) {\n            iStack436 = iStack420 + 0x12;\n        }\n        else {\n            iStack428 = iStack412 + -0x12;\n        }\n        if (iStack448 == 0) {\n            (*_sym.imp.GDI32.dll_SetTextColor)(iStack4, *0x4624fc);\n        }\n        (*_sym.imp.USER32.dll_DrawTextA)(iStack4, &stack0xfffffe7c, iStack452, &stack0xfffffe4c, 0x24);\n    }\n    if ((uStack100 & 8) != 0) {\n        fcn.0041e040(iStack4, &stack0xfffffe7c, &stack0xfffffe6c, &stack0xfffffe48);\n        iStack432 = ((iStack424 - iStack432) - uStack440) / 2;\n        iStack424 = uStack440 + iStack432;\n        if (iStack456 == 0) {\n            iStack436 = iStack420 + 0x12;\n        }\n        else {\n            iStack412 = iStack412 + -0x12;\n            iStack436 = iStack420;\n        }\n        iStack428 = uStack404 + iStack436;\n        (*_sym.imp.USER32.dll_InflateRect)(&stack0xfffffe4c, 1, 1);\n        (*_sym.imp.USER32.dll_IntersectRect)(&stack0xfffffe40, &stack0xfffffe40, &stack0xfffffe50);\n        (*_sym.imp.USER32.dll_DrawFocusRect)(iStack4, &stack0xfffffe34);\n    }\ncode_r0x00420289:\n    (*_sym.imp.GDI32.dll_SelectObject)(iStack4, iStack444);\n    if (iVar8 != 0) {\n        (*_sym.imp.GDI32.dll_SelectObject)(iStack4, iVar8);\n    }\n    return;\n}\n",
        "token_count": 2582
    },
    "0043fd88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043fd88(char *arg_8h, int32_t arg_ch, int32_t **arg_10h)\n\n{\n    char cVar1;\n    bool bVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    \n    pcVar3 = arg_ch + 1;\n    bVar2 = false;\n    if (*pcVar3 != 'l') {\n        if (*pcVar3 != 's') goto code_r0x0043fda6;\n        bVar2 = true;\n    }\n    pcVar3 = arg_ch + 2;\ncode_r0x0043fda6:\n    for (; (*arg_8h == ' ' || (*arg_8h == '\\t')); arg_8h = arg_8h + 1) {\n    }\n    cVar1 = *arg_8h;\n    if (*pcVar3 == 'd') {\n        iVar4 = fcn.0040df91(arg_8h, &arg_8h, 10);\n    }\n    else {\n        if (cVar1 == '-') {\n            return 0;\n        }\n        iVar4 = fcn.0040e1ad(arg_8h, &arg_8h, 10);\n    }\n    if ((iVar4 != 0) || (cVar1 == '0')) {\n        for (; (*arg_8h == ' ' || (*arg_8h == '\\t')); arg_8h = arg_8h + 1) {\n        }\n        if (*arg_8h == '\\0') {\n            if (bVar2) {\n                if (iVar4 != iVar4) {\n                    return 0;\n                }\n                **arg_10h = iVar4;\n            }\n            else {\n                **arg_10h = iVar4;\n            }\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 409
    },
    "004010b9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.004010b9(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    if (param_2 != 0) {\n        uVar1 = *(param_2 + 0x10);\n        uVar2 = uVar1 & 0x7fffffff;\n        while (((uVar1 & 0x80000000) != 0 && (*(param_2 + 8) != -1))) {\n            param_2 = *(param_1 + 0x454) * *(param_2 + 8) + *(param_1 + 0x448);\n            uVar1 = *(param_2 + 0x10);\n            uVar2 = uVar2 + (uVar1 & 0x7fffffff);\n        }\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 204
    },
    "004010c8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004010c8(int32_t param_1, int32_t *param_2, int32_t *param_3, uint32_t *param_4, int32_t *param_5)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    \n    if ((param_5 != NULL) && (*param_4 < *(*(param_1 + 0x444) + 0xc))) {\n        if ((*param_3 == -1) || (piVar3 = *(param_1 + 0x454) * *param_3 + *(param_1 + 0x448),  piVar3 == NULL)) {\n            *param_2 = *param_5;\n            *param_3 = *param_5;\n            param_5[2] = -1;\n            param_5[1] = -1;\n        }\n        else {\n            piVar3[2] = *param_5;\n            param_5[1] = *piVar3;\n            param_5[2] = -1;\n            *param_3 = *param_5;\n        }\n        uVar1 = *param_4;\n        *param_4 = uVar1 + 1;\n        uVar2 = *(*(param_1 + 0x444) + 0xc);\n        if (uVar2 < uVar1 + 1) {\n            *param_4 = uVar2;\n        }\n    }\n    return;\n}\n",
        "token_count": 336
    },
    "00401131": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00401131(int32_t param_1, int32_t *param_2, uint *param_3, int32_t *param_4)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    if (*param_4 == 0) {\n        return NULL;\n    }\n    iVar1 = *param_2;\n    if (iVar1 == -1) {\n        return NULL;\n    }\n    piVar2 = *(param_1 + 0x454) * iVar1 + *(param_1 + 0x448);\n    if (*piVar2 != iVar1) {\n        return NULL;\n    }\n    iVar1 = piVar2[2];\n    *param_2 = iVar1;\n    if (iVar1 == -1) {\n        *param_3 = 0xffffffff;\n    }\n    else {\n        *(*(param_1 + 0x454) * iVar1 + 4 + *(param_1 + 0x448)) = 0xffffffff;\n    }\n    if (*param_4 != 0) {\n        *param_4 = *param_4 + -1;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    piVar2[3] = iVar1;\n    return piVar2;\n}\n",
        "token_count": 290
    },
    "00401208": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401208(int32_t *param_1)\n\n{\n    code *pcVar1;\n    \n    fcn.00401320();\n    if (param_1[4] != 0) {\n        (*_sym.imp.KERNEL32.dll_FlushViewOfFile)(param_1[4], 0);\n        (*_sym.imp.KERNEL32.dll_UnmapViewOfFile)(param_1[4]);\n        param_1[4] = 0;\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n    if (param_1[1] != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(param_1[1]);\n        param_1[1] = 0;\n    }\n    if (*param_1 != -1) {\n        (*pcVar1)(*param_1);\n        *param_1 = -1;\n    }\n    param_1[2] = 1;\n    *(param_1 + 5) = 0;\n    param_1[0x88] = 0;\n    return;\n}\n",
        "token_count": 238
    },
    "004012b7": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __thiscall\nfcn.004012b7(int32_t param_1, int32_t param_2, uint *param_3, uint *param_4, uint *param_5, uint param_6)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if (param_3 == NULL) {\n        return 8;\n    }\n    if (param_4 != NULL) {\n        if (*(param_1 + 0x444) == 0) {\n            return 1;\n        }\n        *param_4 = 0;\n        iVar2 = *(param_1 + 0x444);\n        iVar1 = 5;\n        if (((iVar2 != 0) && (*(iVar2 + 0x10) < *(iVar2 + 0xc))) && (*(iVar2 + 0x40) != -1)) {\n            iVar2 = *(param_1 + 0x454) * *(iVar2 + 0x40);\n            iVar1 = iVar2 + *(param_1 + 0x448);\n            *param_4 = *(iVar2 + 0x14 + *(param_1 + 0x448));\n            if (param_5 != NULL) {\n                *param_5 = *(iVar1 + 0xc);\n            }\n            if (param_2 == 0) {\n                uVar3 = fcn.004010b9(iVar1);\n                *param_3 = uVar3;\n                return 0;\n            }\n            iVar1 = fcn.0040113b(param_2, param_3, param_6);\n            if (iVar1 != 5) {\n                return iVar1;\n            }\n        }\n        *param_3 = 0;\n        return iVar1;\n    }\n    return 8;\n}\n",
        "token_count": 397
    },
    "0040136b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __thiscall fcn.0040136b(int32_t param_1, uint param_2, uint param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    uint uVar4;\n    uint uVar5;\n    uint uStack16;\n    uint uStack12;\n    uint32_t uStack8;\n    uint32_t uStack4;\n    \n    uStack12 = *in_FS_OFFSET;\n    uStack4 = 0xffffffff;\n    uStack8 = 0x44ca30;\n    *in_FS_OFFSET = &uStack12;\n    uVar5 = *(param_1 + 0x1c);\n    iVar2 = (*_sym.imp.USER32.dll_IsWindow)(uVar5);\n    if (iVar2 == 0) goto code_r0x004064b2;\n    uStack8 = 0;\n    fcn.0043475b();\n    fcn.00434959(param_3);\n    if (*(param_1 + 0x44) == 0) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = uStack4;\n        if (0xf < uStack4) {\n            uVar3 = 0;\n        }\n    }\n    uVar4 = 0x45b198;\n    iVar2 = fcn.00434d2c(0x45b198);\n    while (iVar2 != -1) {\n        fcn.00434d82(iVar2, 0x20);\n        uVar4 = 0x45b198;\n        iVar2 = fcn.00434d2c();\n    }\n    uStack16 = CONCAT31(uStack16._1_3_, 1);\n    fcn.0043475b(uVar4);\n    fcn.00434bd3(uVar3 & 0xffffff00 | uVar3 + 1);\n    fcn.00434bd3(uStack8 & 0xffffff00 | uStack8 + 1);\n    fcn.00434be8(&stack0xffffffdc);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    iVar2 = (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x1c), 0x180, 0, param_3);\n    if (iVar2 == -2) {\n        iVar2 = (*pcVar1)(*(param_1 + 0x1c), 0x18b, 0, 0);\n        if ((iVar2 != -1) && (1 < iVar2)) {\n            if (iVar2 < 0x14) {\n                iVar2 = iVar2 + -1;\n                if (iVar2 < 1) {\n                    iVar2 = 1;\n                }\n            }\n            else {\n                iVar2 = 0x14;\n            }\n            (*pcVar1)(*(param_1 + 0x1c), 0xb, 0, 0);\n            if (0 < iVar2) {\n                do {\n                    (*pcVar1)(*(param_1 + 0x1c), 0x182, 0, 0);\n                    iVar2 = iVar2 + -1;\n                } while (iVar2 != 0);\n            }\n            iVar2 = (*pcVar1)(*(param_1 + 0x1c), 0x180, 0, uVar5);\n            (*pcVar1)(*(param_1 + 0x1c), 0xb, 1, 0);\n            goto code_r0x00406477;\n        }\n    }\n    else {\ncode_r0x00406477:\n        if (-1 < iVar2) {\n            (*pcVar1)(*(param_1 + 0x1c), 0x197, iVar2, 0);\n        }\n        (*pcVar1)(*(param_1 + 0x1c), 0x186, 0xffffffff, 0);\n    }\n    uStack8 = uStack8 & 0xffffff00;\n    fcn.004347d0();\n    uStack8 = 0xffffffff;\n    fcn.004347d0();\ncode_r0x004064b2:\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 948
    },
    "0040c5c2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0040c5c2(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    int32_t iStack16;\n    \n    iStack16 = param_1;\n    uStack24 = 0x40c5a0;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    while( true ) {\n        iVar1 = *(param_1 + 8);\n        iVar2 = *(param_1 + 0xc);\n        if ((iVar2 == -1) || (iVar2 == param_2)) break;\n        uStack20 = *(iVar1 + iVar2 * 0xc);\n        *(param_1 + 0xc) = uStack20;\n        if (*(iVar1 + 4 + iVar2 * 0xc) == 0) {\n            fcn.0040c656(0x101);\n            (**(iVar1 + 8 + iVar2 * 0xc))();\n        }\n    }\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 269
    },
    "0040ffc4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0040ffc4(int32_t param_1, uint param_2, int32_t param_3, int32_t param_4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    int32_t var_8h;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_1ch;\n    uint var_10h;\n    code *pcStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x452e70;\n    pcStack16 = fcn.00413f38;\n    var_10h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h;\n    for (iVar2 = *(var_8h + 8); var_4h = 0xffffffff,  iVar2 != var_14h; iVar2 = *(*(var_18h + 8) + iVar2 * 8)) {\n        if ((iVar2 < 0) || (*(var_18h + 4) <= iVar2)) {\n            fcn.004106ed();\n        }\n        var_4h = 0;\n        iVar1 = *(*(var_18h + 8) + 4 + iVar2 * 8);\n        if (iVar1 != 0) {\n            fcn.00410490(iVar1, var_8h, 0x103);\n        }\n    }\n    *(var_8h + 8) = iVar2;\n    *in_FS_OFFSET = var_10h;\n    return;\n}\n",
        "token_count": 352
    },
    "0042bbc2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042bbc2(uint arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t *in_ECX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_2ch;\n    int32_t var_ch;\n    int32_t var_8h;\n    \n    puVar1 = arg_ch;\n    puVar3 = &var_2ch;\n    for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = *puVar1;\n        puVar1 = puVar1 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    if (((var_ch == 0) && (var_8h != -1)) && (var_8h != 0)) {\n        iVar2 = fcn.0042f0b1(var_8h, &arg_ch);\n        if (iVar2 == 0) {\n            puVar1 = fcn.0042f0f5(var_8h);\n            *puVar1 = 0;\n        }\n        fcn.0042f0d3(var_8h, &var_8h);\n    }\n    (**(*in_ECX + 0xa0))(0x404, arg_8h, &var_2ch);\n    return;\n}\n",
        "token_count": 305
    },
    "0042c110": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_80h\n// WARNING: Variable defined which should be unmapped: var_7ch\n\nvoid __cdecl fcn.0042c110(uint arg_8h)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t *extraout_ECX;\n    uint32_t uVar8;\n    int32_t unaff_EBP;\n    uint *puVar9;\n    int32_t *piVar10;\n    uint *puVar11;\n    uint *in_FS_OFFSET;\n    uint var_80h;\n    uint var_7ch;\n    uint var_60h;\n    uint var_5ch;\n    uint lParam;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint lpPoint;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    puVar9 = *(unaff_EBP + 8);\n    uVar8 = puVar9[1];\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *(unaff_EBP + -0x1c) = uVar8;\n    pcVar1 = _sym.imp.USER32.dll_GetKeyState;\n    if ((((uVar8 == 0x200) || (uVar8 == 0xa0)) || (uVar8 == 0x202)) || ((uVar8 == 0x205 || (uVar8 == 0x208)))) {\n        iVar2 = (*_sym.imp.USER32.dll_GetKeyState)(1);\n        if (-1 < iVar2) {\n            iVar2 = (*pcVar1)(2);\n            if (-1 < iVar2) {\n                iVar2 = (*pcVar1)(4);\n                if (-1 < iVar2) {\n                    var_80h = *puVar9;\n                    while( true ) {\n                        piVar3 = fcn.004308de(var_80h);\n                        if ((piVar3 == NULL) || ((*(piVar3 + 9) & 0x401) != 0)) break;\n                        var_80h = (*_sym.imp.USER32.dll_GetParent)(piVar3[7]);\n                    }\n                    if (piVar3 != extraout_ECX) {\n                        if (piVar3 == NULL) {\n                            iVar4 = fcn.00448e31(0x447881);\n                            *(iVar4 + 0xd0) = 0;\n                            *(iVar4 + 0xd4) = 0xffffffff;\n                        }\n                        goto code_r0x0042c56b;\n                    }\n                    iVar4 = fcn.00448e31(0x447881);\n                    *(unaff_EBP + -0x18) = iVar4;\n                    piVar3 = *(iVar4 + 0xcc);\n                    uVar5 = fcn.00432069();\n                    *(unaff_EBP + -0x14) = uVar5;\n                    if (piVar3 == NULL) {\ncode_r0x0042c224:\n                        iVar6 = fcn.00434ea1(0x58);\n                        *(unaff_EBP + -0x1c) = iVar6;\n                        piVar3 = NULL;\n                        *(unaff_EBP + -4) = 0;\n                        if (iVar6 != 0) {\n                            piVar3 = fcn.0042bab7();\n                        }\n                        *(unaff_EBP + -4) = 0xffffffff;\n                        iVar6 = fcn.0042bb0c(*(unaff_EBP + -0x14), 1);\n                        if (iVar6 == 0) {\n                            if (piVar3 != NULL) {\n                                (**(*piVar3 + 4))(1);\n                            }\n                            goto code_r0x0042c56b;\n                        }\n                        (*_sym.imp.USER32.dll_SendMessageA)(piVar3[7], 0x401, 0, 0);\n                        piVar10 = *(unaff_EBP + -0x10);\n                        *(iVar4 + 0xcc) = piVar3;\n                    }\n                    else {\n                        iVar6 = fcn.0040bcb5();\n                        if (iVar6 != *(unaff_EBP + -0x14)) {\n                            (**(*piVar3 + 0x58))();\n                            (**(*piVar3 + 4))(1);\n                            piVar3 = NULL;\n                            *(iVar4 + 0xcc) = 0;\n                        }\n                        piVar10 = extraout_ECX;\n                        if (piVar3 == NULL) goto code_r0x0042c224;\n                    }\n                    fcn.0040cfc0(unaff_EBP + -0x54, 0, 0x2c);\n                    iVar6 = piVar10[7];\n                    *(unaff_EBP + -0x4c) = iVar6;\n                    *(unaff_EBP + -0x48) = iVar6;\n                    *(unaff_EBP + -0x54) = 0x28;\n                    *(unaff_EBP + -0x50) = 1;\n                    iVar6 = (*_sym.imp.USER32.dll_SendMessageA)(piVar3[7], 0x408, 0, unaff_EBP + -0x54);\n                    if (iVar6 == 0) {\n                        (*_sym.imp.USER32.dll_SendMessageA)(piVar3[7], 0x404, 0, unaff_EBP + -0x54);\n                    }\n                    uVar5 = *(*(unaff_EBP + 8) + 0x14);\n                    *(unaff_EBP + -0x24) = *(*(unaff_EBP + 8) + 0x18);\n                    *(unaff_EBP + -0x28) = uVar5;\n                    (*_sym.imp.USER32.dll_ScreenToClient)(piVar10[7], unaff_EBP + -0x28);\n                    fcn.0040cfc0(unaff_EBP + -0x80, 0, 0x2c);\n                    iVar6 = *piVar10;\n                    *(unaff_EBP + -0x80) = 0x28;\n                    iVar7 = (**(iVar6 + 100))(*(unaff_EBP + -0x28), *(unaff_EBP + -0x24), unaff_EBP + -0x80);\n                    *(unaff_EBP + -0x1c) = iVar7;\n                    uVar8 = -(iVar7 != -1) & piVar10;\n                    iVar6 = *(iVar4 + 0xd4);\n                    *(unaff_EBP + -0x14) = uVar8;\n                    if ((iVar6 == iVar7) && (*(iVar4 + 0xd0) == uVar8)) {\n                        if ((*(piVar10 + 0x25) & 4) == 0) {\n                            if (iVar7 != -1) {\n                                fcn.0042c07e(piVar3, *(unaff_EBP + 8));\n                            }\n                        }\n                        else {\n                            (*_sym.imp.USER32.dll_GetCursorPos)(unaff_EBP + -0x20);\n                            (*_sym.imp.USER32.dll_SendMessageA)\n                                      (piVar3[7], 0x412, 0, CONCAT22(*(unaff_EBP + -0x1c), *(unaff_EBP + -0x20)));\n                        }\n                    }\n                    else {\n                        if (iVar7 == -1) {\n                            (*_sym.imp.USER32.dll_SendMessageA)(piVar3[7], 0x401, 0, 0);\n                        }\n                        else {\n                            uVar8 = *(unaff_EBP + -0x7c) & 0x3fffffff;\n                            puVar9 = unaff_EBP + -0x80;\n                            puVar11 = unaff_EBP + -0x54;\n                            for (iVar4 = 0xb; iVar4 != 0; iVar4 = iVar4 + -1) {\n                                *puVar11 = *puVar9;\n                                puVar9 = puVar9 + 1;\n                                puVar11 = puVar11 + 1;\n                            }\n                            *(unaff_EBP + -0x50) = uVar8;\n                            if ((*(*(unaff_EBP + -0x10) + 0x24) & 0x400) != 0) {\n                                *(unaff_EBP + -0x50) = uVar8 | 0x20;\n                            }\n                            (*_sym.imp.USER32.dll_SendMessageA)(piVar3[7], 0x404, 0, unaff_EBP + -0x54);\n                            if ((*(unaff_EBP + -0x79) & 0x40) == 0) {\n                                iVar4 = fcn.004320ad();\n                                if (iVar4 != 0) goto code_r0x0042c3de;\n                            }\n                            else {\ncode_r0x0042c3de:\n                                (*_sym.imp.USER32.dll_SendMessageA)(piVar3[7], 0x401, 1, 0);\n                                if ((*(*(unaff_EBP + -0x10) + 0x24) & 0x400) != 0) {\n                                    (*_sym.imp.USER32.dll_SendMessageA)(piVar3[7], 0x411, 1, unaff_EBP + -0x54);\n                                }\n                                (*_sym.imp.USER32.dll_SetWindowPos)(piVar3[7], 0, 0, 0, 0, 0, 0x213);\n                            }\n                            iVar4 = *(unaff_EBP + -0x18);\n                        }\n                        fcn.0042c07e(piVar3, *(unaff_EBP + 8));\n                        if (0x27 < *(iVar4 + 0xd8)) {\n                            (*_sym.imp.USER32.dll_SendMessageA)(piVar3[7], 0x405, 0, iVar4 + 0xd8);\n                        }\n                        *(iVar4 + 0xd0) = *(unaff_EBP + -0x14);\n                        *(iVar4 + 0xd4) = *(unaff_EBP + -0x1c);\n                        puVar9 = unaff_EBP + -0x80;\n                        puVar11 = iVar4 + 0xd8;\n                        for (iVar6 = 0xb; iVar6 != 0; iVar6 = iVar6 + -1) {\n                            *puVar11 = *puVar9;\n                            puVar9 = puVar9 + 1;\n                            puVar11 = puVar11 + 1;\n                        }\n                    }\n                    if ((*(unaff_EBP + -0x5c) != -1) && (*(unaff_EBP + -0x60) == 0)) {\n                        fcn.0040df49(*(unaff_EBP + -0x5c));\n                    }\n                    goto code_r0x0042c56b;\n                }\n            }\n        }\n        uVar8 = *(unaff_EBP + -0x1c);\n    }\n    if ((*(extraout_ECX + 9) & 0x401) != 0) {\n        var_80h = *puVar9;\n        while( true ) {\n            piVar3 = fcn.004308de(var_80h);\n            if (piVar3 == NULL) break;\n            if (piVar3 == extraout_ECX) goto code_r0x0042c4d4;\n            if ((*(piVar3 + 9) & 0x401) != 0) break;\n            var_80h = (*_sym.imp.USER32.dll_GetParent)(piVar3[7]);\n        }\n        if (piVar3 == extraout_ECX) {\ncode_r0x0042c4d4:\n            if (((uVar8 < 0x100) || (0x108 < uVar8)) && ((uVar8 < 0x104 || (0x107 < uVar8)))) {\n                iVar4 = 0;\n            }\n            else {\n                iVar4 = 1;\n            }\n            if (((*(extraout_ECX + 0x25) & 4) == 0) &&\n               ((((((iVar4 != 0 || (uVar8 == 0x201)) || (uVar8 == 0x203)) || ((uVar8 == 0x204 || (uVar8 == 0x206)))) ||\n                 ((((uVar8 == 0x207 || ((uVar8 == 0x209 || (uVar8 == 0xa1)))) || (uVar8 == 0xa3)) ||\n                  (((uVar8 == 0xa4 || (uVar8 == 0xa6)) || (uVar8 == 0xa7)))))) || (uVar8 == 0xa9)))) {\n                fcn.0043120d(iVar4);\n            }\n        }\n    }\ncode_r0x0042c56b:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 2944
    },
    "0042ee5b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042ee5b(int32_t param_1, int32_t **param_2, int32_t *param_3, int32_t *param_4)\n\n{\n    int32_t **ppiVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    \n    piVar3 = *param_2;\n    if (piVar3 == 0xffffffff) {\n        uVar4 = 0;\n        if (*(param_1 + 8) != 0) {\n            ppiVar1 = *(param_1 + 4);\n            do {\n                piVar3 = *ppiVar1;\n                if (piVar3 != NULL) break;\n                uVar4 = uVar4 + 1;\n                ppiVar1 = ppiVar1 + 1;\n            } while (uVar4 < *(param_1 + 8));\n        }\n    }\n    piVar5 = *piVar3;\n    if (piVar5 == NULL) {\n        uVar4 = *(param_1 + 8);\n        uVar2 = (piVar3[1] >> 4) % uVar4 + 1;\n        if (uVar2 < uVar4) {\n            ppiVar1 = *(param_1 + 4) + uVar2 * 4;\n            do {\n                piVar5 = *ppiVar1;\n                if (piVar5 != NULL) break;\n                uVar2 = uVar2 + 1;\n                ppiVar1 = ppiVar1 + 1;\n            } while (uVar2 < uVar4);\n        }\n    }\n    *param_2 = piVar5;\n    *param_3 = piVar3[1];\n    *param_4 = piVar3[2];\n    return;\n}\n",
        "token_count": 413
    },
    "00432de9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00432de9(int32_t hdc, uint arg_ch, int32_t arg_10h, int32_t hgdiobj, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint lpvObject;\n    uint crColor;\n    \n    if ((((hdc == 0) || (hgdiobj == 0)) || (arg_10h == 1)) || ((arg_10h == 0 || (arg_10h == 5)))) {\ncode_r0x00432e58:\n        uVar2 = 0;\n    }\n    else {\n        if (arg_10h == 2) {\n            iVar1 = fcn.0043e112(arg_ch, 2);\n            if (iVar1 == 0) goto code_r0x00432e58;\n        }\n        (*_sym.imp.GDI32.dll_GetObjectA)(hgdiobj, 0xc, &lpvObject);\n        (*_sym.imp.GDI32.dll_SetBkColor)(hdc, crColor);\n        if (arg_18h == -1) {\n            arg_18h = (*_sym.imp.USER32.dll_GetSysColor)(8);\n        }\n        (*_sym.imp.GDI32.dll_SetTextColor)(hdc, arg_18h);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 305
    },
    "00433127": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00433127(int16_t *arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint *puVar5;\n    uint *puVar6;\n    uint var_28h;\n    uint var_24h;\n    uint *var_20h;\n    int32_t var_4h;\n    \n    pcVar2 = _sym.imp.USER32.dll_SendDlgItemMessageA;\n    var_4h = 1;\n    if (arg_8h != NULL) {\n        do {\n            if (*arg_8h == 0) break;\n            iVar3 = arg_8h[1];\n            iVar1 = *(arg_8h + 2);\n            puVar5 = arg_8h + 4;\n            if (iVar3 == 0x1234) {\ncode_r0x00433189:\n                var_24h = 0xffffffff;\n                var_28h = 1;\n                iVar3 = 0x401;\n                puVar6 = &var_28h;\n                var_20h = puVar5;\ncode_r0x004331b7:\n                iVar4 = (*pcVar2)(*(in_ECX + 0x1c), *arg_8h, iVar3, 0, puVar6);\n                if (iVar4 == -1) {\n                    var_4h = 0;\n                }\n            }\n            else {\n                puVar6 = puVar5;\n                if (iVar3 == 0x401) {\n                    iVar3 = 0x180;\n                    goto code_r0x004331b7;\n                }\n                if (iVar3 == 0x403) {\n                    iVar3 = 0x143;\n                }\n                if (iVar3 == 0x401) goto code_r0x00433189;\n                if ((iVar3 == 0x180) || (iVar3 == 0x143)) goto code_r0x004331b7;\n            }\n            arg_8h = puVar5 + iVar1;\n        } while (var_4h != 0);\n        if (var_4h == 0) {\n            return 0;\n        }\n    }\n    fcn.00432228(*(in_ECX + 0x1c), 0x364, 0, 0, 0, 0);\n    return var_4h;\n}\n",
        "token_count": 542
    },
    "0043413f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043413f(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t *in_ECX;\n    uint32_t arg_ch_00;\n    int32_t *piVar5;\n    \n    if (arg_ch == 0xfffffffe) {\n        iVar1 = fcn.00447f81();\n        iVar1 = (**(**(iVar1 + 0x1038) + 4))();\n        return iVar1;\n    }\n    if (arg_ch == 0xfffffffd) {\n        arg_ch = 0;\n        iVar1 = *(arg_10h + 0x30);\n        puVar2 = (**(*in_ECX + 0x2c))();\n        do {\n            if (puVar2 == NULL) {\n                return arg_ch;\n            }\n            if (arg_ch != 0) {\n                return arg_ch;\n            }\n            piVar5 = puVar2[1];\n            while (((piVar5[1] != 0 && (piVar5[2] != 0)) && (arg_ch == 0))) {\n                if (arg_8h == piVar5[1]) {\n                    if (iVar1 == 0) {\n                        iVar3 = *piVar5;\n                    }\n                    else {\n                        if (*piVar5 == 0) goto code_r0x004341e2;\n                        iVar3 = fcn.0040d080(iVar1, *piVar5, 0x10);\n                    }\n                    if (iVar3 == 0) {\n                        arg_ch = 1;\n                        *(arg_10h + 4) = piVar5[2];\n                    }\n                }\ncode_r0x004341e2:\n                piVar5 = piVar5 + 3;\n            }\n            puVar2 = *puVar2;\n        } while( true );\n    }\n    if (arg_ch != 0xffffffff) {\n        uVar4 = arg_ch & 0xffff;\n        arg_ch_00 = arg_ch >> 0x10;\n        arg_ch = uVar4;\n        if (arg_ch_00 != 0) goto code_r0x00434207;\n    }\n    arg_ch_00 = 0x111;\ncode_r0x00434207:\n    puVar2 = (**(*in_ECX + 0x28))();\n    while( true ) {\n        if (puVar2 == NULL) {\n            return 0;\n        }\n        iVar1 = fcn.0043184a(puVar2[1], arg_ch_00, arg_ch, arg_8h);\n        if (iVar1 != 0) break;\n        puVar2 = *puVar2;\n    }\n    iVar1 = fcn.00434038(in_ECX, arg_8h, arg_ch, *(iVar1 + 0x14), arg_10h, *(iVar1 + 0x10), arg_14h);\n    return iVar1;\n}\n",
        "token_count": 685
    },
    "00434c4f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00434c4f(int32_t *param_1, int32_t param_2)\n\n{\n    fcn.00434779();\n    if (param_2 == -1) {\n        param_2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*param_1);\n    }\n    *(*param_1 + -8) = param_2;\n    *(*param_1 + param_2) = 0;\n    return;\n}\n",
        "token_count": 103
    },
    "004368e2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004368e2(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    \n    iVar1 = fcn.00447fa7();\n    if ((*(iVar1 + 0x10) != 0) && (iVar2 = *(iVar1 + 0x10) + -1,  *(iVar1 + 0x10) = iVar2,  iVar2 == 0)) {\n        if (arg_8h != 0) {\n            if (arg_8h != -1) {\n                iVar2 = fcn.00435e7c();\n                if ((iVar2 != 0) && (*(iVar2 + 0x54) != NULL)) {\n                    (**(iVar2 + 0x54))(0, 0);\n                }\n            }\n            fcn.00436b00();\n            fcn.00436b00();\n            fcn.00436b00();\n            fcn.00436b00();\n            fcn.00436b00();\n        }\n        iVar2 = fcn.00447f81();\n        iVar2 = *(iVar2 + 4);\n        iVar3 = fcn.00448e31(0x447881);\n        if (iVar2 != 0) {\n            if (*(iVar3 + 0xc) != 0) {\n                uVar4 = fcn.0040e466(*(iVar3 + 0xc));\n                if (*(iVar2 + 0xb8) <= uVar4) goto code_r0x004369cd;\n            }\n            if (*(iVar2 + 0xb8) != 0) {\n                arg_8h = 0;\n                if (*(iVar3 + 0xc) != 0) {\n                    arg_8h = fcn.0040e466(*(iVar3 + 0xc));\n                    fcn.0040df49(*(iVar3 + 0xc));\n                }\n                iVar2 = fcn.0040cd2e(*(iVar2 + 0xb8));\n                *(iVar3 + 0xc) = iVar2;\n                if ((iVar2 == 0) && (arg_8h != 0)) {\n                    uVar5 = fcn.0040cd2e(arg_8h);\n                    *(iVar3 + 0xc) = uVar5;\n                }\n            }\n        }\n    }\ncode_r0x004369cd:\n    return *(iVar1 + 0x10) != 0;\n}\n",
        "token_count": 560
    },
    "0043760e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043760e(uint arg_8h, int32_t arg_ch, uint lpString1, int32_t arg_14h, uint arg_18h)\n\n{\n    uchar uVar1;\n    int32_t lpString;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint lpString2;\n    int32_t var_4h;\n    \n    if (*(*(*(in_ECX + 8) + arg_ch * 4) + -8) == 0) {\n        return 0;\n    }\n    var_4h = in_ECX;\n    lpString = fcn.00434c00(0x104);\n    (*_sym.imp.KERNEL32.dll_lstrcpyA)(lpString, *(*(var_4h + 8) + arg_ch * 4));\n    iVar2 = fcn.004499eb(lpString, 0, 0);\n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n    iVar3 = (1 - iVar2) + iVar3;\n    if (iVar3 == arg_14h) {\n        uVar1 = *(iVar3 + lpString);\n        *(arg_14h + lpString) = 0;\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(lpString1, lpString);\n        *(iVar3 + lpString) = uVar1;\n        if (iVar2 == 0) {\n            fcn.00438519(arg_14h + lpString, &lpString2, 0x104);\n            (*_sym.imp.KERNEL32.dll_lstrcpynA)(lpString, &lpString2, 0x104);\n            goto code_r0x00437700;\n        }\n    }\n    if (*(var_4h + 0x18) != -1) {\n        fcn.00438519(iVar3 + lpString, &lpString2, 0x104);\n        (*_sym.imp.KERNEL32.dll_lstrcpynA)(iVar3 + lpString, &lpString2, 0x104 - iVar3);\n        fcn.00437315(lpString, *(var_4h + 0x18), arg_18h);\n    }\ncode_r0x00437700:\n    fcn.00434c4f(0xffffffff);\n    return 1;\n}\n",
        "token_count": 523
    },
    "00437b7b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00437b7b(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CFile.0;\n    pcVar1 = extraout_ECX[1];\n    *(unaff_EBP + -4) = 1;\n    if ((pcVar1 != 0xffffffff) && (extraout_ECX[2] != NULL)) {\n        fcn.00437e53();\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.004347d0();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 225
    },
    "00437c38": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00437c38(uint lpFileName, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint uVar3;\n    uint uVar4;\n    char cVar5;\n    uint uVar6;\n    uint var_110h;\n    uint lpSecurityAttributes;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    *(in_ECX + 8) = 0;\n    *(in_ECX + 4) = 0xffffffff;\n    fcn.0043475b();\n    fcn.004382c0(&var_110h, lpFileName);\n    fcn.00434959(&var_110h);\n    uVar3 = 0;\n    uVar1 = arg_ch & 3;\n    if (uVar1 == 0) {\n        uVar3 = 0x80000000;\n    }\n    else if (uVar1 == 1) {\n        uVar3 = 0x40000000;\n    }\n    else if (uVar1 == 2) {\n        uVar3 = 0xc0000000;\n    }\n    uVar1 = arg_ch & 0x70;\n    uVar4 = 1;\n    if ((uVar1 != 0) && (uVar1 != 0x10)) {\n        uVar6 = uVar4;\n        if (uVar1 == 0x20) goto code_r0x00437ccf;\n        if (uVar1 == 0x30) {\n            uVar6 = 2;\n            goto code_r0x00437ccf;\n        }\n        if (uVar1 == 0x40) {\n            uVar6 = 3;\n            goto code_r0x00437ccf;\n        }\n    }\n    uVar6 = 0;\ncode_r0x00437ccf:\n    var_8h = 0;\n    var_4h = ~(arg_ch & 0xffff7fff) >> 7 & 1;\n    lpSecurityAttributes = 0xc;\n    if ((arg_ch & 0x1000) == 0) {\n        cVar5 = '\\x03';\n    }\n    else {\n        cVar5 = (-((arg_ch & 0x2000) != 0) & 2U) + 2;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_CreateFileA)(lpFileName, uVar3, uVar6, &lpSecurityAttributes, cVar5, 0x80, 0);\n    if (iVar2 == -1) {\n        if (arg_10h != 0) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            *(arg_10h + 0xc) = uVar3;\n            uVar3 = fcn.00438c2e(uVar3);\n            *(arg_10h + 8) = uVar3;\n            fcn.00434959(lpFileName);\n        }\n        uVar4 = 0;\n    }\n    else {\n        *(in_ECX + 4) = iVar2;\n        *(in_ECX + 8) = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 723
    },
    "00437e53": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00437e53(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    bool bVar3;\n    \n    bVar3 = false;\n    if (*(param_1 + 4) != -1) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_CloseHandle)(*(param_1 + 4));\n        bVar3 = iVar1 == 0;\n    }\n    *(param_1 + 4) = 0xffffffff;\n    *(param_1 + 8) = 0;\n    fcn.0043475b();\n    if (bVar3) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(0);\n        fcn.00438a88(uVar2);\n    }\n    return;\n}\n",
        "token_count": 177
    },
    "004382c0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpFindFileData\n\nuint __cdecl fcn.004382c0(uint lpRootPathName, uint lpFileName)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint lpFindFileData;\n    uint lpString2;\n    uint var_18h;\n    uint lpFilePart;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    uVar1 = *(unaff_EBP + 8);\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetFullPathNameA)(*(unaff_EBP + 0xc), 0x104, uVar1, unaff_EBP + -0x14);\n    if (iVar2 == 0) {\n        (*_sym.imp.KERNEL32.dll_lstrcpynA)(uVar1, *(unaff_EBP + 0xc), 0x104);\n        uVar3 = 0;\n    }\n    else {\n        *(unaff_EBP + 8) = *0x45b93c;\n        uVar3 = 0;\n        *(unaff_EBP + -4) = 0;\n        fcn.00438390(uVar1, unaff_EBP + 8);\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetVolumeInformationA)\n                          (*(unaff_EBP + 8), 0, 0, 0, unaff_EBP + -0x18, unaff_EBP + -0x10, 0, 0);\n        if (iVar2 != 0) {\n            if ((*(unaff_EBP + -0x10) & 2) == 0) {\n                (*_sym.imp.USER32.dll_CharUpperA)(uVar1);\n            }\n            if ((*(unaff_EBP + -0x10) & 4) == 0) {\n                iVar2 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(*(unaff_EBP + 0xc), unaff_EBP + -0x158);\n                if (iVar2 != -1) {\n                    (*_sym.imp.KERNEL32.dll_FindClose)(iVar2);\n                    (*_sym.imp.KERNEL32.dll_lstrcpyA)(*(unaff_EBP + -0x14), unaff_EBP + -300);\n                }\n            }\n            uVar3 = 1;\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.004347d0();\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar3;\n}\n",
        "token_count": 598
    },
    "0043d8da": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043d8da(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    bool bVar4;\n    int32_t var_4h;\n    \n    var_4h = fcn.0043d883(arg_8h);\n    bVar4 = var_4h == -1;\n    if (bVar4) {\n        var_4h = fcn.0043d883(arg_8h);\n    }\n    uVar2 = bVar4;\n    iVar3 = (uVar2 + 1) * var_4h;\n    if (var_4h == 0) {\n        fcn.00434c77(0);\n    }\n    else {\n        fcn.00434c77(iVar3 + uVar2);\n        iVar1 = fcn.0043dbf5(*arg_ch, iVar3);\n        if (iVar1 != iVar3) {\n            fcn.0043e40c(3, 0);\n        }\n        if (uVar2 != 0) {\n            iVar3 = *arg_ch;\n            *(iVar3 + var_4h * 2) = 0;\n            *arg_ch = *0x45b93c;\n            fcn.00434980(iVar3);\n            fcn.00434eca(iVar3 + -0xc);\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 327
    },
    "00440178": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00440178(int32_t *arg_8h, uint arg_ch, uint *lParam)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar2 = fcn.0043fd24(arg_ch);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (*arg_8h == 0) {\n        (*_sym.imp.USER32.dll_SendMessageA)(uVar2, 0x18c, 0xffffffff, *lParam);\n    }\n    else {\n        iVar3 = (*_sym.imp.USER32.dll_SendMessageA)(uVar2, 0x188, 0, 0);\n        if (iVar3 == -1) {\n            fcn.0043475b();\n        }\n        else {\n            uVar4 = (*pcVar1)(uVar2, 0x18a, iVar3, 0);\n            uVar4 = fcn.00434c77(uVar4);\n            (*pcVar1)(uVar2, 0x189, iVar3, uVar4);\n        }\n        fcn.00434c4f(0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 272
    },
    "00440249": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00440249(int32_t *arg_8h, uint arg_ch, uint *lParam)\n\n{\n    uint hWnd;\n    int32_t iVar1;\n    uint uVar2;\n    \n    hWnd = fcn.0043fd24(arg_ch);\n    if (*arg_8h == 0) {\n        iVar1 = (*_sym.imp.USER32.dll_SendMessageA)(hWnd, 0x14d, 0xffffffff, *lParam);\n        if (iVar1 == -1) {\n            fcn.0043e1fc(hWnd, *lParam);\n        }\n    }\n    else {\n        iVar1 = (*_sym.imp.USER32.dll_GetWindowTextLengthA)(hWnd);\n        if (iVar1 < 1) {\n            uVar2 = fcn.00434c00(0xff, 0x100);\n        }\n        else {\n            uVar2 = fcn.00434c77(iVar1, iVar1 + 1);\n        }\n        (*_sym.imp.USER32.dll_GetWindowTextA)(hWnd, uVar2);\n        fcn.00434c4f(0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 253
    },
    "00440b1d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00440b1d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_10h_00;\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    *(unaff_EBP + -0x10) = *0x45b93c;\n    *(unaff_EBP + -4) = 0;\n    fcn.00435926(*(unaff_EBP + 8));\n    arg_10h_00 = *(unaff_EBP + 0x10);\n    if (arg_10h_00 == -1) {\n        arg_10h_00 = *(unaff_EBP + 8);\n    }\n    uVar1 = fcn.00440ae5(*(unaff_EBP + -0x10), *(unaff_EBP + 0xc), arg_10h_00);\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004347d0();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar1;\n}\n",
        "token_count": 327
    },
    "00440f14": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440f14(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint lpMsg;\n    uint lpPoint;\n    uint var_14h;\n    int32_t *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (((*(param_1 + 0x50) != 1) && (iVar3 = fcn.00440eba(),  iVar3 != 0)) &&\n       (iVar3 = (*_sym.imp.USER32.dll_PeekMessageA)(&lpMsg, *(param_1 + 0x1c), 0x367, 0x367, 3),  iVar3 == 0)) {\n        iVar3 = *(param_1 + 0x50);\n        *(param_1 + 0x50) = 1;\n        if (((iVar3 == 2) || (*(param_1 + 0x68) == NULL)) || (iVar4 = (**(**(param_1 + 0x68) + 0x60))(1),  iVar4 != 0))\n        {\n            if (iVar3 == 0) {\n                (*_sym.imp.USER32.dll_PostMessageA)(*(param_1 + 0x1c), 0x111, 0xe145);\n                *(param_1 + 0x50) = 2;\n            }\n            else {\n                var_ch = (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x1c), 0x362, 0xe002, 0);\n                if (var_ch == 0) {\n                    var_ch = 0xe001;\n                }\n                var_8h = 0;\n                (*_sym.imp.USER32.dll_GetCursorPos)(&lpPoint);\n                fcn.004410bc(lpPoint, var_14h, 0);\n                var_4h = 0;\n                iVar3 = fcn.00447f81();\n                piVar1 = *(iVar3 + 4);\n                var_10h = piVar1;\n                do {\n                    while( true ) {\n                        if (*(param_1 + 0x50) == 0) goto code_r0x0044103d;\n                        iVar4 = (*_sym.imp.USER32.dll_PeekMessageA)(&lpMsg, 0, 0, 0, 0);\n                        iVar3 = var_4h;\n                        if (iVar4 != 0) break;\n                        var_4h = var_4h + 1;\n                        iVar3 = (**(*piVar1 + 0x60))(iVar3);\n                        if (iVar3 == 0) {\n                            var_4h = 0;\n                            (*_sym.imp.USER32.dll_WaitMessage)();\n                        }\n                    }\n                    iVar3 = fcn.00441285(&lpMsg, &var_8h);\n                } while (iVar3 != 0);\ncode_r0x0044103d:\n                pcVar2 = _sym.imp.USER32.dll_ReleaseCapture;\n                *(param_1 + 0x50) = 0;\n                (*pcVar2)();\n                uVar5 = (*_sym.imp.USER32.dll_SetCapture)(*(param_1 + 0x1c));\n                fcn.004308de(uVar5);\n                (*pcVar2)();\n                pcVar2 = _sym.imp.USER32.dll_SendMessageA;\n                (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x1c), 0x362, var_ch, 0);\n                if (*(param_1 + 0x68) != NULL) {\n                    (**(**(param_1 + 0x68) + 0x60))(0);\n                }\n                if (var_8h != 0) {\n                    if (var_8h == -1) {\n                        (*pcVar2)(*(param_1 + 0x1c), 0x111, 0xe147, 0);\n                    }\n                    else {\n                        (**(*var_10h + 0x98))(var_8h, 1);\n                    }\n                }\n                (*_sym.imp.USER32.dll_PostMessageA)(*(param_1 + 0x1c), 0x36a, 0, 0);\n            }\n        }\n        else {\n            (**(**(param_1 + 0x68) + 0x60))(0);\n            *(param_1 + 0x50) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 1024
    },
    "00444318": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00444318(int32_t *param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00430845();\n    if ((iVar1 != -1) && (iVar1 = (**(*param_1 + 0xdc))(param_2, param_3),  iVar1 != 0)) {\n        (*_sym.imp.USER32.dll_PostMessageA)(param_1[7], 0x362, 0xe001, 0);\n        (**(*param_1 + 200))(1);\n        return 0;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 146
    },
    "00444e30": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444e30(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t in_ECX;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0043e26d(*(in_ECX + 0x1c));\n    if ((arg_10h == 0) &&\n       ((*(in_ECX + 0x68) == NULL || (iVar2 = (**(**(in_ECX + 0x68) + 0x74))(arg_8h, arg_ch, 0),  iVar2 == 0)))) {\n        fcn.00434319();\n        iVar2 = fcn.00447cf1();\n        pcVar1 = _sym.imp.USER32.dll_GetMenu;\n        if ((*(iVar2 + 0x54) != *(arg_8h + 4)) &&\n           (((iVar2 = (*_sym.imp.USER32.dll_GetMenu)(*(in_ECX + 0x1c)),  iVar2 != 0 &&\n             (iVar2 = fcn.00432011(),  iVar2 != 0)) && (iVar2 = (*pcVar1)(*(iVar2 + 0x1c)),  iVar2 != 0)))) {\n            iVar3 = (*_sym.imp.USER32.dll_GetMenuItemCount)(iVar2);\n            iVar8 = 0;\n            if (0 < iVar3) {\n                do {\n                    iVar9 = iVar8;\n                    iVar4 = (*_sym.imp.USER32.dll_GetSubMenu)(iVar2, iVar8);\n                    if (iVar4 == *(arg_8h + 4)) {\n                        fcn.00435abb(iVar9, iVar2);\n                        break;\n                    }\n                    iVar8 = iVar8 + 1;\n                } while (iVar8 < iVar3);\n            }\n        }\n        var_ch = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(arg_8h + 4));\n        pcVar1 = _sym.imp.USER32.dll_GetMenuItemID;\n        var_24h = 0;\n        if (var_ch != 0) {\n            do {\n                var_28h = (*pcVar1)(*(arg_8h + 4), var_24h);\n                uVar6 = var_ch;\n                if (var_28h != 0) {\n                    if (var_28h == 0xffffffff) {\n                        uVar5 = (*_sym.imp.USER32.dll_GetSubMenu)(*(arg_8h + 4), var_24h);\n                        iVar2 = fcn.00435abb(uVar5);\n                        if (((iVar2 == 0) || (var_28h = (*pcVar1)(*(iVar2 + 4), 0),  var_28h == 0)) ||\n                           (var_28h == 0xffffffff)) goto code_r0x00444f9b;\n                        uVar5 = 0;\n                    }\n                    else if ((*(in_ECX + 0x3c) == 0) || (0xefff < var_28h)) {\n                        uVar5 = 0;\n                    }\n                    else {\n                        uVar5 = 1;\n                    }\n                    fcn.004344de(in_ECX, uVar5);\n                    uVar6 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(arg_8h + 4));\n                    if (uVar6 < var_ch) {\n                        var_24h = var_24h + (uVar6 - var_ch);\n                        while ((var_24h < uVar6 && (uVar7 = (*pcVar1)(*(arg_8h + 4), var_24h),  uVar7 == var_28h))) {\n                            var_24h = var_24h + 1;\n                        }\n                    }\n                }\ncode_r0x00444f9b:\n                var_ch = uVar6;\n                var_24h = var_24h + 1;\n            } while (var_24h < var_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 992
    },
    "004489f0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.004489f0(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[6] = 4;\n    param_1[1] = 0;\n    param_1[2] = 1;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n    *param_1 = iVar1;\n    if (iVar1 == -1) {\n        fcn.0042a04b();\n    }\n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(param_1 + 7);\n    return param_1;\n}\n",
        "token_count": 182
    },
    "00448a32": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00448a32(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    uint uVar2;\n    \n    if (*param_1 != -1) {\n        (*_sym.imp.KERNEL32.dll_TlsFree)(*param_1);\n    }\n    arg_8h = param_1[5];\n    while (arg_8h != 0) {\n        iVar1 = *(arg_8h + 4);\n        fcn.00448d3f(arg_8h, 0);\n        arg_8h = iVar1;\n    }\n    if (param_1[4] != 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GlobalHandle)(param_1[4]);\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar2);\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(uVar2);\n    }\n    (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(param_1 + 7);\n    return;\n}\n",
        "token_count": 231
    },
    "00430810": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nint32_t fcn.00430810(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00448e31(0x447881);\n    uVar2 = (*_sym.imp.USER32.dll_GetMessageTime)();\n    *(iVar1 + 0x44) = uVar2;\n    uVar2 = (*_sym.imp.USER32.dll_GetMessagePos)();\n    *(iVar1 + 0x48) = uVar2;\n    *(iVar1 + 0x4c) = uVar2 >> 0x10;\n    return iVar1 + 0x34;\n}\n",
        "token_count": 138
    },
    "004309c0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004309c0(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint hWnd)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint arg_8h;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    bool bVar4;\n    uint Msg;\n    uint wParam;\n    uint lParam;\n    uint var_10h;\n    uint var_30h;\n    uint var_1ch;\n    uint lpPrevWndFunc;\n    uint var_14h;\n    uint var_ch_2;\n    uint var_4h;\n    \n    fcn.0040d018();\n    uVar2 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = &stack0xffffffb4;\n    uVar1 = (*_sym.imp.USER32.dll_GetPropA)(uVar2, \"AfxOldWndProc423\");\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x18) = uVar1;\n    iVar3 = *(unaff_EBP + 0xc);\n    bVar4 = true;\n    if (iVar3 == 6) {\n        uVar1 = fcn.004308de(*(unaff_EBP + 0x14));\n        arg_8h = fcn.004308de(uVar2);\n        fcn.00430646(arg_8h, *(unaff_EBP + 0x10), uVar1);\ncode_r0x00430ac4:\n        if (!bVar4) goto code_r0x00430a51;\n    }\n    else {\n        if (iVar3 == 0x20) {\n            uVar1 = fcn.004308de(uVar2);\n            iVar3 = fcn.004306a7(uVar1, *(unaff_EBP + 0x14), *(unaff_EBP + 0x14) >> 0x10);\n            bVar4 = iVar3 == 0;\n            goto code_r0x00430ac4;\n        }\n        if (iVar3 == 0x82) {\n            (*_sym.imp.USER32.dll_SetWindowLongA)(uVar2, 0xfffffffc, *(unaff_EBP + -0x18));\n            (*_sym.imp.USER32.dll_RemovePropA)(uVar2, \"AfxOldWndProc423\");\n            uVar1 = (*_sym.imp.KERNEL32.dll_GlobalFindAtomA)(\"AfxOldWndProc423\");\n            (*_sym.imp.KERNEL32.dll_GlobalDeleteAtom)(uVar1);\n        }\n        else if (iVar3 == 0x110) {\n            uVar1 = fcn.004308de(uVar2);\n            fcn.004305aa(uVar1, unaff_EBP + -0x30, unaff_EBP + -0x1c);\n            uVar2 = (*_sym.imp.USER32.dll_CallWindowProcA)\n                              (*(unaff_EBP + -0x18), uVar2, 0x110, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n            *(unaff_EBP + -0x14) = uVar2;\n            fcn.004305cd(uVar1, unaff_EBP + -0x30);\n            goto code_r0x00430a51;\n        }\n    }\n    uVar2 = (*_sym.imp.USER32.dll_CallWindowProcA)\n                      (*(unaff_EBP + -0x18), uVar2, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n    *(unaff_EBP + -0x14) = uVar2;\ncode_r0x00430a51:\n    uVar2 = *(unaff_EBP + -0x14);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 998
    },
    "00430b9b": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00430b9b(int32_t arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int32_t iVar8;\n    code *pcVar9;\n    uint32_t var_10h;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00448e31(0x447881);\n    if (arg_8h != 3) {\n        uVar2 = (*_sym.imp.USER32.dll_CallNextHookEx)(*(var_4h + 0x2c), arg_8h, arg_ch, arg_10h);\n        return uVar2;\n    }\n    piVar1 = *(var_4h + 0x14);\n    iVar6 = *arg_10h;\n    iVar3 = fcn.00447f81();\n    var_8h = *(iVar3 + 0x14);\n    if ((piVar1 == NULL) && (((*(iVar6 + 0x23) & 0x40) != 0 || (var_8h != 0)))) goto code_r0x00430d64;\n    if (*0x460024 != 0) {\n        uVar4 = (*_sym.imp.USER32.dll_GetClassLongA)(arg_ch, 0xffffffe6);\n        if ((uVar4 & 0x10000) != 0) goto code_r0x00430d64;\n        puVar5 = *(iVar6 + 0x28);\n        if (puVar5 >> 0x10 == 0) {\n            var_10h = var_10h & 0xffffff00 | var_10h & puVar5 >> 0x10;\n            (*_sym.imp.KERNEL32.dll_GlobalGetAtomNameA)(&var_10h & 0xffff0000 | *(iVar6 + 0x28), &var_10h, 5);\n            puVar5 = &var_10h;\n        }\n        iVar6 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(puVar5, 0x450f18);\n        if (iVar6 == 0) goto code_r0x00430d64;\n    }\n    if (piVar1 == NULL) {\n        iVar6 = (*_sym.imp.USER32.dll_GetWindowLongA)(arg_ch, 0xfffffffc);\n        pcVar9 = _sym.imp.USER32.dll_GetPropA;\n        if ((iVar6 != 0) && (iVar3 = (*_sym.imp.USER32.dll_GetPropA)(arg_ch, \"AfxOldWndProc423\"),  iVar3 == 0)) {\n            (*_sym.imp.USER32.dll_SetPropA)(arg_ch, \"AfxOldWndProc423\", iVar6);\n            iVar3 = (*pcVar9)(arg_ch, \"AfxOldWndProc423\");\n            if (iVar3 == iVar6) {\n                (*_sym.imp.KERNEL32.dll_GlobalAddAtomA)(\"AfxOldWndProc423\");\n                pcVar9 = fcn.00430b1f;\n                if (*(var_4h + 0x28) == 0) {\n                    pcVar9 = fcn.004309c0;\n                }\n                (*_sym.imp.USER32.dll_SetWindowLongA)(arg_ch, 0xfffffffc, pcVar9);\n            }\n        }\n        goto code_r0x00430d64;\n    }\n    fcn.00430923(arg_ch);\n    (**(*piVar1 + 0x50))();\n    piVar7 = (**(*piVar1 + 0x80))();\n    iVar6 = *0x45ffb0;\n    if ((((*0x460014 == 0) && (var_8h == 0)) && (*0x45ffb0 != 0)) &&\n       ((*(*0x45ffb0 + 0x20) != 0 && (var_10h = fcn.0043071d(piVar1, arg_ch, 0x36f, 0, 0),  var_10h != 0)))) {\n        iVar3 = fcn.004309ba();\n        iVar8 = (*_sym.imp.USER32.dll_GetWindowLongA)(arg_ch, 0xfffffffc);\n        (**(iVar6 + 0x20))(arg_ch, var_10h);\n        if (iVar8 != iVar3) {\n            iVar3 = (*_sym.imp.USER32.dll_SetWindowLongA)(arg_ch, 0xfffffffc, iVar3);\ncode_r0x00430cf8:\n            *piVar7 = iVar3;\n        }\n    }\n    else {\n        iVar6 = fcn.004309ba();\n        iVar3 = (*_sym.imp.USER32.dll_SetWindowLongA)(arg_ch, 0xfffffffc, iVar6);\n        if (iVar3 != iVar6) goto code_r0x00430cf8;\n    }\n    *(var_4h + 0x14) = 0;\ncode_r0x00430d64:\n    iVar6 = var_4h;\n    uVar2 = (*_sym.imp.USER32.dll_CallNextHookEx)(*(var_4h + 0x2c), 3, arg_ch, arg_10h);\n    if (var_8h != 0) {\n        (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(*(iVar6 + 0x2c));\n        *(iVar6 + 0x2c) = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 1267
    },
    "004318e3": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_60h\n\nuint __cdecl fcn.004318e3(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint8_t uVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t *arg_8h_00;\n    uint *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    code *pcVar10;\n    int32_t unaff_EBP;\n    int16_t iVar11;\n    uint *in_FS_OFFSET;\n    uint uVar12;\n    uint var_60h;\n    uint var_44h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    *(unaff_EBP + -0x10) = 0;\n    iVar4 = *(unaff_EBP + 8);\n    if (iVar4 == 0x111) {\n        iVar4 = (**(*arg_8h_00 + 0x78))(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n        if (iVar4 != 0) {\ncode_r0x00431d39:\n            *(unaff_EBP + -0x10) = 1;\n            goto code_r0x00431d7d;\n        }\ncode_r0x00431a6c:\n        uVar12 = 0;\n        goto code_r0x00431a6e;\n    }\n    if (iVar4 == 0x4e) {\n        if (**(unaff_EBP + 0x10) != 0) {\n            iVar4 = (**(*arg_8h_00 + 0x7c))(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10), unaff_EBP + -0x10);\ncode_r0x0043193c:\n            if (iVar4 != 0) goto code_r0x00431d7d;\n        }\n        goto code_r0x00431a6c;\n    }\n    puVar7 = *(unaff_EBP + 0x10);\n    if (iVar4 == 6) {\n        uVar12 = fcn.004308de(puVar7);\n        fcn.00430646(arg_8h_00, *(unaff_EBP + 0xc), uVar12);\n    }\n    iVar11 = puVar7;\n    if ((iVar4 == 0x20) && (iVar4 = fcn.004306a7(arg_8h_00, iVar11, puVar7 >> 0x10),  iVar4 != 0))\n    goto code_r0x00431d39;\n    uVar5 = (**(*arg_8h_00 + 0x28))();\n    *(unaff_EBP + -0x14) = uVar5;\n    uVar9 = uVar5 & 0x1ff ^ *(unaff_EBP + 8) & 0x1ff;\n    fcn.0044939a(7);\n    uVar5 = *(unaff_EBP + 8);\n    iVar4 = uVar9 * 0xc;\n    iVar6 = *(unaff_EBP + -0x14);\n    if ((uVar5 != *(uVar9 * 0xc + 0x45e260)) || (iVar6 != *(iVar4 + 0x45e268))) {\n        *(iVar4 + 0x45e260) = uVar5;\n        *(iVar4 + 0x45e268) = iVar6;\n        if (iVar6 != 0) {\n            while( true ) {\n                if (uVar5 < 0xc000) {\n                    iVar6 = fcn.0043184a(*(iVar6 + 4), uVar5, 0, 0);\n                    *(unaff_EBP + 0x10) = iVar6;\n                    if (iVar6 != 0) {\n                        *(iVar4 + 0x45e264) = iVar6;\n                        fcn.0044940a(7);\n                        iVar4 = *(unaff_EBP + 0x10);\n                        goto code_r0x00431a8c;\n                    }\n                }\n                else {\n                    iVar6 = fcn.0043184a(*(iVar6 + 4), 0xc000, 0, 0);\n                    *(unaff_EBP + 0x10) = iVar6;\n                    if (iVar6 != 0) {\n                        while( true ) {\n                            if (**(iVar6 + 0x10) == *(unaff_EBP + 8)) {\n                                *(iVar4 + 0x45e264) = iVar6;\n                                fcn.0044940a(7);\n                                iVar4 = *(unaff_EBP + 0x10);\n                                goto code_r0x00431d6f;\n                            }\n                            iVar6 = fcn.0043184a(iVar6 + 0x18, 0xc000, 0, 0);\n                            *(unaff_EBP + 0x10) = iVar6;\n                            if (iVar6 == 0) break;\n                            iVar6 = *(unaff_EBP + 0x10);\n                        }\n                    }\n                }\n                iVar6 = **(unaff_EBP + -0x14);\n                *(unaff_EBP + -0x14) = iVar6;\n                if (iVar6 == 0) break;\n                iVar6 = *(unaff_EBP + -0x14);\n                uVar5 = *(unaff_EBP + 8);\n            }\n        }\n        *(iVar4 + 0x45e264) = 0;\n        fcn.0044940a(7);\n        goto code_r0x00431a6c;\n    }\n    iVar4 = *(iVar4 + 0x45e264);\n    *(unaff_EBP + 0x10) = iVar4;\n    fcn.0044940a(7);\n    if (iVar4 == 0) goto code_r0x00431a6c;\n    if (0xbfff < *(unaff_EBP + 8)) {\ncode_r0x00431d6f:\n        pcVar10 = *(iVar4 + 0x14);\ncode_r0x00431d72:\n        uVar5 = *(unaff_EBP + 0xc);\n        goto code_r0x00431d76;\n    }\ncode_r0x00431a8c:\n    iVar6 = *(unaff_EBP + 0x10);\n    pcVar10 = *(iVar4 + 0x14);\n    iVar4 = *(iVar6 + 0x10);\n    if (*(iVar6 + 8) == 0x1a) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n        iVar6 = *(unaff_EBP + 0x10);\n        iVar4 = (-(uVar2 < 4) & 0xfffffff0) + 0x2f;\n    }\n    iVar3 = puVar7 >> 0x10;\n    // switch table (49 cases) at 0x431d91\n    switch(iVar4) {\n    case 1:\n        puVar7 = *(unaff_EBP + 0xc);\n        fcn.0043c2a0(puVar7);\n        goto code_r0x00431bc7;\n    case 2:\n        puVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x00431bc7;\n    case 3:\n    case 8:\n        uVar9 = puVar7 >> 0x10;\n        puVar7 = iVar11;\n        uVar5 = *(unaff_EBP + 0xc);\n        uVar9 = fcn.004308de(uVar5, puVar7, uVar9);\n        goto code_r0x00431be2;\n    case 4:\n        fcn.0043c1fe();\n        uVar12 = puVar7[1];\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x20) = uVar12;\n        fcn.004304bd();\n        uVar12 = *puVar7;\n        uVar1 = puVar7[2];\n        *(unaff_EBP + -4) = 1;\n        *(unaff_EBP + -0x44) = uVar12;\n        iVar4 = fcn.00430905(uVar12);\n        if (iVar4 == 0) {\n            if ((arg_8h_00[0xd] != 0) && (iVar4 = fcn.0042ed74(*(unaff_EBP + -0x44)),  iVar4 != 0)) {\n                *(unaff_EBP + -0x28) = iVar4;\n            }\n            iVar4 = unaff_EBP + -0x60;\n        }\n        uVar12 = (*pcVar10)(unaff_EBP + -0x24, iVar4, uVar1);\n        *(unaff_EBP + -0x20) = 0;\n        *(unaff_EBP + -0x44) = 0;\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x10) = uVar12;\n        fcn.00430f98();\n        *(unaff_EBP + -4) = 0xffffffff;\n        goto code_r0x00431b9d;\n    case 5:\n        fcn.0043c1fe();\n        uVar12 = puVar7[2];\n        *(unaff_EBP + -0x20) = puVar7[1];\n        *(unaff_EBP + -4) = 2;\n        uVar12 = (*pcVar10)(unaff_EBP + -0x24, uVar12);\n        *(unaff_EBP + -0x20) = 0;\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(unaff_EBP + -0x10) = uVar12;\ncode_r0x00431b9d:\n        fcn.0043c333();\n        break;\n    case 6:\n        uVar5 = fcn.004308de(puVar7, *(unaff_EBP + 0xc) >> 0x10);\n        goto code_r0x00431bdd;\n    case 7:\n        puVar7 = *(unaff_EBP + 0xc) >> 0x10;\n        uVar5 = *(unaff_EBP + 0xc);\n        goto code_r0x00431d76;\n    case 9:\n    case 0x2a:\ncode_r0x00431bc7:\n        uVar12 = (*pcVar10)(puVar7);\ncode_r0x00431d7a:\n        *(unaff_EBP + -0x10) = uVar12;\n        break;\n    case 10:\n    case 0x21:\n        goto code_r0x00431d72;\n    case 0xb:\n        puVar7 = fcn.00435abb(puVar7);\n        uVar5 = *(unaff_EBP + 0xc) >> 0x10;\ncode_r0x00431bdd:\n        uVar9 = *(unaff_EBP + 0xc);\ncode_r0x00431be2:\n        uVar12 = (*pcVar10)(uVar9, uVar5, puVar7);\n        goto code_r0x00431d7a;\n    case 0xc:\n        (*pcVar10)();\n        break;\n    case 0xd:\n        puVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x00431d06;\n    case 0xe:\n    case 0x12:\n    case 0x25:\n    case 0x2f:\n        goto code_r0x00431ce6;\n    case 0xf:\n        puVar8 = iVar3;\n        iVar4 = iVar11;\n        goto code_r0x00431ce9;\n    case 0x10:\n    case 0x11:\n        puVar8 = puVar7 >> 0x10;\n        uVar5 = puVar7 & 0xffff;\n        goto code_r0x00431d27;\n    case 0x13:\n        puVar8 = *(unaff_EBP + 0xc);\n        uVar5 = fcn.004308de(puVar8);\n        fcn.004308de(puVar7, uVar5);\n        uVar9 = arg_8h_00[7] == puVar7;\n        goto code_r0x00431d2b;\n    case 0x14:\n        puVar7 = *(unaff_EBP + 0xc);\n        fcn.0043c2a0(puVar7);\n        goto code_r0x00431d06;\n    case 0x15:\n        puVar7 = *(unaff_EBP + 0xc);\n        fcn.00435abb(puVar7);\n        goto code_r0x00431d06;\n    case 0x16:\n        puVar8 = puVar7 >> 0x10;\n        uVar5 = puVar7 & 0xffff;\n        uVar9 = fcn.00435abb(*(unaff_EBP + 0xc), uVar5, puVar8);\n        goto code_r0x00431d2b;\n    case 0x17:\n        puVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x00431c6d;\n    case 0x18:\n        puVar8 = puVar7 >> 0x10;\n        uVar5 = puVar7 & 0xffff;\n        goto code_r0x00431c89;\n    case 0x19:\n        uVar5 = iVar11;\n        puVar8 = iVar3;\ncode_r0x00431c89:\n        uVar9 = fcn.004308de(*(unaff_EBP + 0xc), uVar5, puVar8);\n        goto code_r0x00431d2b;\n    case 0x1a:\n        iVar4 = fcn.004308de(*(unaff_EBP + 0xc), puVar7);\n        puVar8 = puVar7;\n        goto code_r0x00431ce9;\n    case 0x1b:\n        fcn.004308de(puVar7);\ncode_r0x00431ce6:\n        iVar4 = *(unaff_EBP + 0xc);\n        puVar8 = puVar7;\n        goto code_r0x00431ce9;\n    case 0x1c:\n        puVar8 = *(unaff_EBP + 0xc) >> 0x10;\n        uVar5 = fcn.004308de(puVar7, puVar8);\n        goto code_r0x00431d13;\n    case 0x1d:\n    case 0x1e:\n        iVar4 = *(unaff_EBP + 0xc);\n        iVar6 = *(iVar6 + 0x10);\n        *(unaff_EBP + 8) = iVar4;\n        puVar8 = *(unaff_EBP + 0xc) >> 0x10;\n        *(unaff_EBP + 0xc) = puVar8;\n        if (iVar6 == 0x1d) {\n            uVar5 = fcn.004308de(puVar7);\n            uVar9 = *(unaff_EBP + 0xc);\n            puVar8 = puVar7;\n            goto code_r0x00431d2b;\n        }\ncode_r0x00431ce9:\n        (*pcVar10)(iVar4, puVar8);\n        break;\n    case 0x1f:\n    case 0x24:\n        goto code_r0x00431d06;\n    case 0x20:\n    case 0x2b:\n        (*pcVar10)(*(unaff_EBP + 0xc), puVar7);\n        goto code_r0x00431d39;\n    case 0x22:\n        uVar5 = iVar11;\n        puVar7 = iVar3;\n        goto code_r0x00431d76;\n    case 0x23:\n        uVar12 = (*pcVar10)();\n        goto code_r0x00431d7a;\n    case 0x2c:\ncode_r0x00431c6d:\n        fcn.004308de(puVar7);\ncode_r0x00431d06:\n        (*pcVar10)(puVar7);\n        break;\n    case 0x2d:\n        uVar5 = fcn.004308de(*(unaff_EBP + 0xc), puVar7);\ncode_r0x00431d76:\n        uVar12 = (*pcVar10)(uVar5, puVar7);\n        goto code_r0x00431d7a;\n    case 0x2e:\n        iVar4 = (*pcVar10)(*(unaff_EBP + 0xc), *(unaff_EBP + 0xc) >> 0x10, puVar7 & 0xffff, puVar7 >> 0x10);\n        *(unaff_EBP + -0x10) = iVar4;\n        goto code_r0x0043193c;\n    case 0x30:\n        uVar5 = *(unaff_EBP + 0xc) >> 0x10;\n        puVar8 = puVar7;\ncode_r0x00431d13:\n        uVar9 = *(unaff_EBP + 0xc);\n        goto code_r0x00431d2b;\n    case 0x31:\n        uVar5 = iVar11;\n        puVar8 = iVar3;\ncode_r0x00431d27:\n        uVar9 = *(unaff_EBP + 0xc);\ncode_r0x00431d2b:\n        (*pcVar10)(uVar9, uVar5, puVar8);\n    }\ncode_r0x00431d7d:\n    if (*(unaff_EBP + 0x14) != NULL) {\n        **(unaff_EBP + 0x14) = *(unaff_EBP + -0x10);\n    }\n    uVar12 = 1;\ncode_r0x00431a6e:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar12;\n}\n",
        "token_count": 4140
    },
    "00431e88": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00431e88(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint32_t uVar3;\n    uint var_2ch;\n    uint32_t var_28h;\n    int32_t var_4h;\n    \n    uVar3 = arg_8h & 0xffff;\n    arg_8h = arg_8h >> 0x10;\n    if (arg_ch == 0) {\n        if (uVar3 == 0) {\n            return 0;\n        }\n        fcn.00431e55();\n        var_28h = uVar3;\n        (**(*in_ECX + 0xc))(uVar3, 0xffffffff, &var_2ch, 0);\n        if (var_4h != 0) {\n            arg_8h = 0;\ncode_r0x00431ecc:\n            uVar1 = (**(*in_ECX + 0xc))(uVar3, arg_8h, 0, 0);\n            return uVar1;\n        }\n    }\n    else {\n        iVar2 = fcn.00448e31(0x447881);\n        if ((*(iVar2 + 0xb8) != in_ECX[7]) && (iVar2 = fcn.0043285f(arg_ch, 0),  iVar2 == 0)) {\n            if (uVar3 == 0) {\n                return 0;\n            }\n            goto code_r0x00431ecc;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 359
    },
    "0043295e": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043295e(uint32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h < 0x112) {\n        if (arg_8h == 0x111) {\n            iVar2 = fcn.0043413f(0, arg_ch >> 0x10 | 0xbd110000, 0, 0);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            if (arg_14h != NULL) {\n                *arg_14h = 1;\n                return 1;\n            }\n            return 1;\n        }\n        if (0x2a < arg_8h) {\n            if ((arg_8h < 0x30) || (arg_8h == 0x39)) goto code_r0x004329f2;\n            if (arg_8h == 0x4e) {\n                var_8h = arg_14h;\n                var_4h = arg_10h;\n                uVar1 = fcn.0043413f(0, *(arg_10h + 8) & 0xffff | 0xbc4e0000, &var_8h, 0);\n                return uVar1;\n            }\n        }\n    }\n    else if ((0x113 < arg_8h) && ((arg_8h < 0x116 || (arg_8h == 0x210)))) {\ncode_r0x004329f2:\n        uVar1 = fcn.004318e3(arg_8h + 0xbc00, arg_ch, arg_10h, arg_14h);\n        return uVar1;\n    }\n    if ((0x131 < arg_8h) && (arg_8h < 0x139)) {\n        var_4h = arg_8h - 0x132;\n        var_8h = arg_ch;\n        uVar1 = fcn.004318e3(0xbc19, 0, &var_ch, arg_14h);\n        if (*arg_14h != 0) {\n            return uVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 535
    },
    "0043483e": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0043483e(uint *param_1, uint32_t param_2)\n\n{\n    int32_t arg_10h;\n    \n    *param_1 = *0x45b93c;\n    if (param_2 != 0) {\n        if (param_2 >> 0x10 == 0) {\n            fcn.00435926(param_2 & 0xffff);\n        }\n        else {\n            arg_10h = (*_sym.imp.KERNEL32.dll_lstrlenA)(param_2);\n            if (arg_10h != 0) {\n                fcn.0043463d(arg_10h);\n                fcn.0040d130(*param_1, param_2, arg_10h);\n            }\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 180
    },
    "004364b8": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint fcn.004364b8(int32_t param_1)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetKeyState;\n    if ((((*(param_1 + 4) == 0x100) && (*(param_1 + 8) == 0x70)) && ((*(param_1 + 0xc) >> 0x10 & 0x4000) == 0)) &&\n       (((iVar2 = (*_sym.imp.USER32.dll_GetKeyState)(0x10),  -1 < iVar2 && (iVar2 = (*pcVar1)(0x11),  -1 < iVar2)) &&\n        (iVar2 = (*pcVar1)(0x12),  -1 < iVar2)))) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 190
    },
    "00436c42": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00436c42(uint lpString2, uint nNumber, uint arg_10h, uint arg_14h, uint *arg_18h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t var_80h;\n    uint var_70h;\n    uint var_69h;\n    uint lpString1;\n    int32_t lptm;\n    int32_t var_34h;\n    int32_t var_ch;\n    uint32_t var_4h;\n    \n    uVar3 = (*_sym.imp.USER32.dll_GetDC)(0);\n    fcn.0040cfc0(&var_80h, 0, 0x3c);\n    uVar4 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar3, 0x5a, 0x48);\n    var_80h = (*_sym.imp.KERNEL32.dll_MulDiv)(nNumber, uVar4);\n    var_70h = 400;\n    var_80h = -var_80h;\n    var_69h._0_1_ = 1;\n    (*_sym.imp.KERNEL32.dll_lstrcpyA)(&lpString1, lpString2);\n    iVar5 = (*_sym.imp.GDI32.dll_CreateFontIndirectA)(&var_80h);\n    pcVar2 = _sym.imp.USER32.dll_GetDialogBaseUnits;\n    pcVar1 = _sym.imp.GDI32.dll_SelectObject;\n    if (iVar5 == 0) {\n        uVar6 = (*_sym.imp.USER32.dll_GetDialogBaseUnits)();\n        uVar6 = uVar6 & 0xffff;\n        uVar7 = (*pcVar2)();\n        uVar7 = uVar7 >> 0x10;\n    }\n    else {\n        uVar4 = (*_sym.imp.GDI32.dll_SelectObject)(uVar3, iVar5);\n        (*_sym.imp.GDI32.dll_GetTextMetricsA)(uVar3, &lptm);\n        uVar7 = var_34h + lptm;\n        (*_sym.imp.GDI32.dll_GetTextExtentPoint32A)\n                  (uVar3, \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\", 0x34, &var_ch);\n        var_4h = (var_ch + 0x1a) / 0x34;\n        (*pcVar1)(uVar3, uVar4);\n        (*_sym.imp.GDI32.dll_DeleteObject)(iVar5);\n        uVar6 = var_4h;\n    }\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar3);\n    uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(arg_10h, uVar6, 4);\n    *arg_18h = uVar3;\n    uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(arg_14h, uVar7, 8);\n    arg_18h[1] = uVar3;\n    return;\n}\n",
        "token_count": 702
    },
    "00444b12": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00444b12(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int16_t iVar5;\n    uint var_108h;\n    int32_t var_4h;\n    \n    uVar4 = fcn.00447f81();\n    pcVar2 = _sym.imp.KERNEL32.dll_GlobalGetAtomNameA;\n    iVar1 = *(uVar4 + 4);\n    if ((((iVar1 != 0) && (arg_ch != 0)) && (iVar5 = arg_ch >> 0x10,  iVar5 != 0)) &&\n       ((arg_ch == *(iVar1 + 0xb0) && (iVar5 == *(iVar1 + 0xb2))))) {\n        (*_sym.imp.KERNEL32.dll_GlobalGetAtomNameA)(uVar4 & 0xffff0000 | *(iVar1 + 0xb0), &var_108h, 0x103);\n        pcVar3 = _sym.imp.KERNEL32.dll_GlobalAddAtomA;\n        (*_sym.imp.KERNEL32.dll_GlobalAddAtomA)(&var_108h);\n        (*pcVar2)(&var_108h & 0xffff0000 | *(iVar1 + 0xb2), &var_108h, 0x103);\n        (*pcVar3)(&var_108h);\n        (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x3e4, *(var_4h + 0x1c), *(iVar1 + 0xb0));\n    }\n    return 0;\n}\n",
        "token_count": 371
    },
    "00447b35": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.00447b35(void)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint lpvBits;\n    int32_t nHeight;\n    int32_t var_8h;\n    uint8_t *var_4h;\n    \n    uVar2 = (*_sym.imp.USER32.dll_GetMenuCheckMarkDimensions)();\n    iVar5 = uVar2;\n    nHeight = uVar2 >> 0x10;\n    if (0x20 < iVar5) {\n        iVar5 = 0x20;\n    }\n    iVar6 = iVar5 + 0xf >> 4;\n    iVar7 = ((iVar5 + -4) / 2 + iVar6 * 0x10) - iVar5;\n    if (0xc < iVar7) {\n        iVar7 = 0xc;\n    }\n    if (0x20 < nHeight) {\n        nHeight = 0x20;\n    }\n    fcn.0040cfc0(&lpvBits, 0xff, 0x80);\n    var_4h = 0x451574;\n    var_8h = 5;\n    puVar4 = &lpvBits + (nHeight + -6 >> 1) * iVar6 * 2;\n    do {\n        uVar1 = *var_4h;\n        uVar3 = var_4h & 0xffff0000;\n        var_4h = var_4h + 1;\n        uVar3 = ~((uVar3 | uVar1) << (iVar7 & 0x1f));\n        puVar4[1] = uVar3;\n        *puVar4 = uVar3 >> 8;\n        puVar4 = puVar4 + iVar6 * 2;\n        var_8h = var_8h + -1;\n    } while (var_8h != 0);\n    *0x460008 = (*_sym.imp.GDI32.dll_CreateBitmap)(iVar5, nHeight, 1, 1, &lpvBits);\n    if (*0x460008 == 0) {\n        *0x460008 = (*_sym.imp.USER32.dll_LoadBitmapA)(0, 0x7fe3);\n    }\n    return;\n}\n",
        "token_count": 526
    },
    "00401186": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401186(int32_t param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (*(param_1 + 0x5c) != param_2) {\n        if (param_1 == 0) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = *(param_1 + 0x1c);\n        }\n        iVar2 = (*_sym.imp.USER32.dll_IsWindow)(uVar1);\n        if (iVar2 != 0) {\n            if (param_2 == 1) {\n                iVar2 = param_1 + 0x68;\n                if (iVar2 == 0) {\n                    uVar1 = *(param_1 + 0x1c);\n                    iVar3 = param_2;\n                }\n                else {\n                    iVar2 = *(param_1 + 0x6c);\n                    iVar3 = 1;\n                    uVar1 = *(param_1 + 0x1c);\n                }\n            }\n            else {\n                iVar2 = param_1 + 0x70;\n                if (iVar2 != 0) {\n                    iVar2 = *(param_1 + 0x74);\n                }\n                uVar1 = *(param_1 + 0x1c);\n                iVar3 = 1;\n            }\n            (*_sym.imp.USER32.dll_SendMessageA)(uVar1, 0x30, iVar2, iVar3);\n            (*_sym.imp.USER32.dll_InvalidateRect)(*(param_1 + 0x1c), 0, 1);\n        }\n        *(param_1 + 0x5c) = param_2;\n    }\n    return;\n}\n",
        "token_count": 389
    },
    "0040129e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __fastcall fcn.0040129e(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint unaff_retaddr;\n    uint uVar3;\n    int32_t iStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x44c9b0;\n    iStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack12;\n    uVar3 = *(param_1 + 0x1c);\n    iVar1 = (*_sym.imp.USER32.dll_IsWindow)(uVar3);\n    if (iVar1 != 0) {\n        uStack8 = 0;\n        fcn.0043475b();\n        fcn.00442ebd(unaff_retaddr);\n        if ((*0x10 == 0x14) || (&stack0xffffffec < 3)) {\n            fcn.0043475b();\n        }\n        else {\n            uVar2 = fcn.004296bb(&uStack8, 2);\n            uVar3 = 1;\n            fcn.00434909(uVar2);\n            fcn.004347d0();\n        }\n        uStack8 = 0xffffffff;\n        fcn.004347d0(uVar3);\n    }\n    *in_FS_OFFSET = param_1;\n    return;\n}\n",
        "token_count": 331
    },
    "00401384": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00401384(int32_t param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint unaff_ESI;\n    \n    if (((param_2 == 0) || (param_3 == 0)) || ((*(param_1 + 0x44c) + -1) * *(param_1 + 0x454) <= param_3)) {\n        iVar4 = 8;\n    }\n    else {\n        if (*(param_1 + 0x444) == 0) {\n            return 1;\n        }\n        if (*(*(param_1 + 0x444) + 0x1c) == 0) {\n            return 0xb;\n        }\n        iVar4 = fcn.00401041(0xffffffff);\n        if (iVar4 == 0) {\n            uVar5 = fcn.004012c1(param_3);\n            pcVar3 = _sym.imp.KERNEL32.dll_Sleep;\n            if (*(*(param_1 + 0x444) + 0x10) < uVar5) {\n                uVar6 = param_2;\n                if (param_2 != 0) {\n                    do {\n                        (*pcVar3)(1);\n                        if (uVar5 <= *(*(param_1 + 0x444) + 0x10)) goto code_r0x00407d57;\n                    } while ((1 < uVar6) && (uVar6 = uVar6 - 1,  uVar6 != 0));\n                }\n                iVar4 = 7;\n            }\n            else {\ncode_r0x00407d57:\n                iVar4 = fcn.00401370(param_2);\n                if (iVar4 == 0) {\n                    iVar4 = fcn.00401078(unaff_ESI, param_3);\n                    if (iVar4 == 0) {\n                        *(*(param_1 + 0x444) + 0x28) = *(*(param_1 + 0x444) + 0x28) + 1;\n                        puVar1 = *(param_1 + 0x444) + 0x30;\n                        if (*puVar1 <= param_3 && param_3 != *puVar1) {\n                            *(*(param_1 + 0x444) + 0x30) = param_3;\n                        }\n                        piVar2 = *(param_1 + 0x444) + 0x34;\n                        *piVar2 = *piVar2 + 1;\n                    }\n                    fcn.0040124e();\n                    if ((iVar4 == 0) && (*(param_1 + 0x230) != 0)) {\n                        (*_sym.imp.KERNEL32.dll_SetEvent)(*(param_1 + 0x230));\n                    }\n                }\n            }\n            (*_sym.imp.KERNEL32.dll_SetEvent)(*(param_1 + 0x22c));\n            return iVar4;\n        }\n    }\n    return iVar4;\n}\n",
        "token_count": 709
    },
    "0040ba1a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ba1a(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = fcn.0040b8f4();\n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    if (iVar2 == 0) {\n        if (((arg_10h & 3) == 0) &&\n           ((((arg_8h < 0 || (iVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0),  iVar2 <= arg_8h)) || (arg_ch < 0)) ||\n            (iVar2 = (*pcVar1)(1),  iVar2 <= arg_ch)))) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = 0x12340042;\n        }\n        return uVar3;\n    }\n    uVar3 = (**0x45fb94)(arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 243
    },
    "0040c0a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_14h\n\nint32_t * fcn.0040c0a4(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *extraout_ECX;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    *(unaff_EBP + -0x10) = &var_14h;\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(extraout_ECX + 4);\n    if (extraout_ECX[3] == 0) {\n        iVar3 = *extraout_ECX;\n        *(unaff_EBP + -4) = 0;\n        iVar1 = fcn.0042d82e(extraout_ECX + 2, extraout_ECX[1], iVar3);\n        iVar3 = extraout_ECX[1];\n        piVar2 = (iVar3 + -1) * *extraout_ECX + 4 + iVar1;\n        if (-1 < iVar3 + -1) {\n            do {\n                *piVar2 = extraout_ECX[3];\n                extraout_ECX[3] = piVar2;\n                piVar2 = piVar2 - *extraout_ECX;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    piVar2 = extraout_ECX[3];\n    extraout_ECX[3] = *piVar2;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(extraout_ECX + 4);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return piVar2;\n}\n",
        "token_count": 444
    },
    "0040cec2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040cec2(uint param_1)\n\n{\n    if (*0x460250 == 1) {\n        fcn.00414010();\n    }\n    fcn.00414049(param_1);\n    (**0x45bd40)(0xff);\n    return;\n}\n",
        "token_count": 63
    },
    "0040e990": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e990(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint arg_18h)\n\n{\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x20) == 0) {\n        fcn.0040ea28(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x1c), *(unaff_EBP + 0x18));\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "0040ea10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ea10(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) == 0) {\n        fcn.0040ea28(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "0040f3d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040f3d8(uint8_t *arg_8h, uint32_t arg_ch, uint8_t *arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    int32_t arg_18h_00;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    bool bVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_18h_00 = arg_18h;\n    if (arg_18h == 0) {\n        arg_18h_00 = *0x45bfd0;\n    }\n    arg_18h = arg_ch;\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(0x461f60);\n    pcVar2 = _sym.imp.KERNEL32.dll_InterlockedDecrement;\n    bVar5 = *0x461f50 == 0;\n    puVar3 = arg_10h;\n    if (!bVar5) {\n        (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(0x461f60);\n        fcn.00410c77(0x13);\n        puVar3 = arg_10h;\n    }\n    while ((arg_18h != 0 && (uVar1 = *puVar3,  uVar1 != 0))) {\n        if (uVar1 == 0x25) {\n            puVar4 = puVar3 + 1;\n            uVar1 = *puVar4;\n            if (uVar1 == 0x23) {\n                puVar4 = puVar3 + 2;\n            }\n            *0x461f64 = uVar1 == 0x23;\n            fcn.0040f4d2(*0x10 | *puVar4, arg_14h, &arg_8h, &arg_18h, arg_18h_00);\n        }\n        else {\n            if (((*(*0x45c420 + 1 + uVar1 * 2) & 0x80) != 0) && (1 < arg_18h)) {\n                *arg_8h = uVar1;\n                arg_8h = arg_8h + 1;\n                puVar3 = puVar3 + 1;\n                arg_18h = arg_18h - 1;\n            }\n            *arg_8h = *puVar3;\n            arg_8h = arg_8h + 1;\n            arg_18h = arg_18h - 1;\n            puVar4 = puVar3;\n        }\n        puVar3 = puVar4 + 1;\n    }\n    if (bVar5) {\n        (*pcVar2)(0x461f60);\n    }\n    else {\n        fcn.00410cd8(0x13);\n    }\n    if (arg_18h == 0) {\n        return 0;\n    }\n    *arg_8h = 0;\n    return arg_ch - arg_18h;\n}\n",
        "token_count": 681
    },
    "004101c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.004101c0(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t unaff_ESI;\n    int32_t *unaff_EDI;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    *(unaff_ESI + -4) = *(unaff_EBP + -0x28);\n    iVar1 = fcn.00410561();\n    *(iVar1 + 0x6c) = *(unaff_EBP + -0x1c);\n    iVar1 = fcn.00410561();\n    *(iVar1 + 0x70) = *(unaff_EBP + -0x20);\n    if ((((*unaff_EDI == -0x1f928c9d) && (unaff_EDI[4] == 3)) && (unaff_EDI[5] == 0x19930520)) &&\n       ((*(unaff_EBP + -0x24) == 0 && (*(unaff_EBP + -0x2c) != 0)))) {\n        fcn.0040c62a();\n        fcn.004103fc();\n    }\n    return;\n}\n",
        "token_count": 281
    },
    "00411c8d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00411c8d(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (arg_8h == 0) {\n        iVar1 = fcn.0040cd2e(arg_ch);\n    }\n    else {\n        if (arg_ch == 0) {\n            fcn.0040df49(arg_8h);\n        }\n        else {\n            do {\n                iVar1 = 0;\n                if (arg_ch < 0xffffffe1) {\n                    fcn.00410c77(9);\n                    arg_8h_00 = fcn.00412817(arg_8h);\n                    if (arg_8h_00 == 0) {\n                        fcn.00410cd8(9);\n                        if (arg_ch == 0) {\n                            arg_ch = 1;\n                        }\n                        arg_ch = arg_ch + 0xf & 0xfffffff0;\n                        iVar1 = (*_sym.imp.KERNEL32.dll_HeapReAlloc)(*0x461f44, 0, arg_8h, arg_ch);\n                    }\n                    else {\n                        if (*0x45c2dc < arg_ch) {\ncode_r0x00411d2c:\n                            if (arg_ch == 0) {\n                                arg_ch = 1;\n                            }\n                            arg_ch = arg_ch + 0xf & 0xfffffff0;\n                            iVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x461f44, 0, arg_ch);\n                            if (iVar1 != 0) {\n                                uVar3 = *(arg_8h + -4) - 1;\n                                if (arg_ch <= uVar3) {\n                                    uVar3 = arg_ch;\n                                }\n                                fcn.0040d130(iVar1, arg_8h, uVar3);\n                                fcn.00412842(arg_8h_00, arg_8h);\n                            }\n                        }\n                        else {\n                            iVar2 = fcn.00413022(arg_8h_00, arg_8h, arg_ch);\n                            iVar1 = arg_8h;\n                            if (iVar2 == 0) {\n                                iVar1 = fcn.00412b6d(arg_ch);\n                                if (iVar1 == 0) goto code_r0x00411d2c;\n                                uVar3 = *(arg_8h + -4) - 1;\n                                if (arg_ch <= uVar3) {\n                                    uVar3 = arg_ch;\n                                }\n                                fcn.0040d130(iVar1, arg_8h, uVar3);\n                                fcn.00412842(arg_8h_00, arg_8h);\n                            }\n                            if (iVar1 == 0) goto code_r0x00411d2c;\n                        }\n                        fcn.00410cd8(9);\n                    }\n                    if (iVar1 != 0) {\n                        return iVar1;\n                    }\n                }\n                if (*0x460374 == 0) {\n                    return iVar1;\n                }\n                iVar1 = fcn.004126f0(arg_ch);\n            } while (iVar1 != 0);\n        }\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 734
    },
    "00414049": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414049(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint var_1a4h;\n    uint var_a0h;\n    \n    iVar2 = 0;\n    piVar1 = 0x45c390;\n    do {\n        if (arg_8h == *piVar1) break;\n        piVar1 = piVar1 + 2;\n        iVar2 = iVar2 + 1;\n    } while (piVar1 < 0x45c420);\n    if (arg_8h == *(iVar2 * 8 + 0x45c390)) {\n        if ((*0x460250 == 1) || ((*0x460250 == 0 && (*0x45bd44 == 1)))) {\n            fcn.00410e90();\n            (*_sym.imp.KERNEL32.dll_GetStdHandle)();\n            (*_sym.imp.KERNEL32.dll_WriteFile)();\n        }\n        else if (arg_8h != 0xfc) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)();\n            if (iVar2 == 0) {\n                fcn.00414770();\n            }\n            iVar2 = fcn.00410e90();\n            if (0x3c < iVar2 + 1U) {\n                fcn.00410e90();\n                fcn.00411940();\n            }\n            fcn.00414770();\n            fcn.00414780();\n            fcn.00414780();\n            fcn.00414780();\n            fcn.0041761f(&var_a0h, \"Microsoft Visual C++ Runtime Library\");\n        }\n    }\n    return;\n}\n",
        "token_count": 377
    },
    "00414860": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00414860(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t arg_8h;\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    arg_8h = param_1 * param_2;\n    uVar1 = arg_8h;\n    if (arg_8h < 0xffffffe1) {\n        if (arg_8h == 0) {\n            uVar1 = 1;\n        }\n        uVar1 = uVar1 + 0xf & 0xfffffff0;\n    }\n    do {\n        iVar2 = 0;\n        if (uVar1 < 0xffffffe1) {\n            if (arg_8h < *0x45c2dc || arg_8h - *0x45c2dc == 0) {\n                fcn.00410c77(9);\n                iVar2 = fcn.00412b6d(arg_8h);\n                fcn.00410cd8(9);\n                if (iVar2 != 0) {\n                    fcn.0040cfc0(iVar2, 0, arg_8h);\n                    return iVar2;\n                }\n            }\n            iVar2 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x461f44, 8, uVar1);\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n        if (*0x460374 == 0) {\n            return iVar2;\n        }\n        iVar2 = fcn.004126f0(uVar1);\n    } while (iVar2 != 0);\n    return 0;\n}\n",
        "token_count": 366
    },
    "0041816d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041816d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint var_ch;\n    \n    uVar1 = fcn.00417c9c(&var_ch, arg_ch, arg_10h, arg_14h, 0, 0, 0);\n    iVar2 = fcn.00415788(&var_ch, arg_8h);\n    if (iVar2 == 1) {\n        uVar1 = uVar1 | 2;\n    }\n    return uVar1;\n}\n",
        "token_count": 146
    },
    "0041ad7c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0041ad7c(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.std::basic_filebuf_char__struct_std::char_traits_char__.0;\n    cVar1 = *(extraout_ECX + 0x12);\n    *(unaff_EBP + -4) = 1;\n    if (cVar1 != '\\0') {\n        fcn.0041b4a0();\n    }\n    pcVar2 = extraout_ECX[0x11];\n    if (pcVar2 != NULL) {\n        fcn.0041b3ba(1);\n        fcn.00434eca(pcVar2);\n    }\n    fcn.0041aba5();\n    *extraout_ECX = vtable.std::basic_streambuf_char__struct_std::char_traits_char__.0;\n    fcn.0041aba5();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 334
    },
    "0041cb1f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0041cb1f(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.std::ios_base.0;\n    pcVar1 = extraout_ECX[9];\n    *(unaff_EBP + -4) = 0;\n    if ((pcVar1 == NULL) || (pcVar1 = pcVar1 + 0x460a1c,  *pcVar1 = *pcVar1 + -1,  extraout_ECX[9][0x460a1c] < '\\x01'))\n    {\n        fcn.0041cd04();\n    }\n    fcn.0041aba5();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 252
    },
    "0041bf60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0041bf60(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.std::basic_filebuf_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n    cVar1 = *(extraout_ECX + 0x12);\n    *(unaff_EBP + -4) = 1;\n    if (cVar1 != '\\0') {\n        fcn.0041c5aa();\n    }\n    pcVar2 = extraout_ECX[0x11];\n    if (pcVar2 != NULL) {\n        fcn.0041b3ba(1);\n        fcn.00434eca(pcVar2);\n    }\n    fcn.0041aba5();\n    *extraout_ECX = vtable.std::basic_streambuf_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n    fcn.0041aba5();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 340
    },
    "00421c07": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421c07(code **param_1)\n\n{\n    *param_1 = vtable.exception.0;\n    if (param_1[2] != NULL) {\n        fcn.00434eca(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "0041db90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041db90(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uStack76;\n    uint uStack72;\n    uint32_t uStack68;\n    uint uStack64;\n    uint32_t uStack60;\n    uint uStack56;\n    uint32_t uStack52;\n    uint uStack48;\n    uint32_t uStack44;\n    uint uStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint32_t uStack28;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetPropA;\n    uStack28 = *0x4624c8;\n    uStack32 = param_1;\n    uStack36 = 0x41dbab;\n    iVar2 = (*_sym.imp.USER32.dll_GetPropA)();\n    if (iVar2 == 0) {\n        uStack36 = *0x4624ce;\n        uStack40 = param_1;\n        uStack44 = 0x41dbbf;\n        iVar2 = (*pcVar1)();\n        if (iVar2 == 0) {\n            uStack44 = *0x4624d2;\n            uStack48 = param_1;\n            uStack52 = 0x41dbd3;\n            iVar2 = (*pcVar1)();\n            if (iVar2 == 0) {\n                uStack52 = *0x4624cc;\n                uStack56 = param_1;\n                uStack60 = 0x41dbe7;\n                iVar2 = (*pcVar1)();\n                if (iVar2 == 0) {\n                    uStack60 = *0x4624d0;\n                    uStack64 = param_1;\n                    uStack68 = 0x41dbfb;\n                    iVar2 = (*pcVar1)();\n                    if (iVar2 == 0) {\n                        uStack68 = *0x4624ca;\n                        uStack72 = param_1;\n                        uStack76 = 0x41dc0b;\n                        iVar2 = (*pcVar1)();\n                        if (iVar2 == 0) {\n                            uStack76 = param_1;\n                            iVar2 = fcn.0041db20();\n                            if (iVar2 == 0) {\n                                if (*0x462fc5 != '\\0') {\n                                    uStack76 = param_1;\n                                    iVar2 = (*_sym.imp.USER32.dll_IsWindowUnicode)();\n                                    if (iVar2 == 0) {\n                                        uStack76 = 0x10;\n                                        (*_sym.imp.USER32.dll_GetClassNameA)(param_1, &stack0xffffffc0);\n                                        (*_sym.imp.KERNEL32.dll_lstrcmpiA)(&stack0xffffffb4, \"edit\");\n                                    }\n                                }\n                                uStack76 = uStack40;\n                                uVar3 = (*_sym.imp.USER32.dll_SetWindowLongA)(param_1, 0xfffffffc);\n                                (*_sym.imp.USER32.dll_SetPropA)(param_1, *0x4624ce, uVar3);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 683
    },
    "0041e040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041e040(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint uVar3;\n    char *pcVar4;\n    uint unaff_retaddr;\n    uchar *puVar5;\n    uchar auStack264 [4];\n    uchar auStack260 [4];\n    char acStack256 [248];\n    char **ppcStack8;\n    int32_t *piStack4;\n    \n    pcVar2 = _sym.imp.USER32.dll_CharNextA;\n    pcVar4 = acStack256;\n    cVar1 = *param_2;\n    while (cVar1 != '\\0') {\n        cVar1 = *param_2;\n        if (cVar1 == '&') {\n            param_2 = param_2 + 1;\n            if (*param_2 == '\\0') break;\ncode_r0x0041e097:\n            cVar1 = *param_2;\n            param_2 = param_2 + 1;\n            *pcVar4 = cVar1;\n            pcVar4 = pcVar4 + 1;\n        }\n        else {\n            if (*0x462fc5 == '\\0') goto code_r0x0041e097;\n            if (cVar1 == *0x462fc4) {\n                param_2 = param_2 + 1;\n                if (*param_2 != '\\0') goto code_r0x0041e097;\n                break;\n            }\n            if ((cVar1 != '\\x1e') && (cVar1 != '\\x1f')) goto code_r0x0041e097;\n            if (param_2[1] == '\\0') break;\n            param_2 = (*pcVar2)(param_2 + 1);\n        }\n        cVar1 = *param_2;\n    }\n    puVar5 = auStack264;\n    *pcVar4 = '\\0';\n    uVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n    (*_sym.imp.GDI32.dll_GetTextExtentPointA)(unaff_retaddr, auStack260, uVar3);\n    *ppcStack8 = acStack256;\n    *piStack4 = puVar5;\n    return;\n}\n",
        "token_count": 491
    },
    "0041e230": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0041e230(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint unaff_retaddr;\n    \n    if (*0x4624e0 < 0x30a) {\n        return 0;\n    }\n    if (*0x4624c0 == 0) {\n        return 0;\n    }\n    uVar4 = param_2 | 1;\n    if ((param_2 & 2) != 0) {\n        uVar4 = param_2 & 0xfffffffc;\n    }\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x462260);\n    if (*0x46251c != 0x80) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        iVar2 = 0;\n        if (0 < *0x46251c) {\n            piVar3 = 0x462524;\n            do {\n                if (*piVar3 == iVar1) {\n                    piVar3 = iVar2 * 0x14 + 0x46252c;\n                    *piVar3 = *piVar3 + 1;\n                    goto code_r0x0041e336;\n                }\n                piVar3 = piVar3 + 5;\n                iVar2 = iVar2 + 1;\n            } while (iVar2 < *0x46251c);\n        }\n        iVar2 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(5, 0x41f450, *0x4624dc, iVar1);\n        if (iVar2 != 0) {\n            *(*0x46251c * 0x14 + 0x462520) = unaff_retaddr;\n            *(*0x46251c * 0x14 + 0x462524) = iVar1;\n            *(*0x46251c * 0x14 + 0x462528) = iVar2;\n            *(*0x46251c * 0x14 + 0x46252c) = 1;\n            *(*0x46251c * 0x14 + 0x462530) = uVar4;\n            *0x462518 = *0x46251c;\n            *0x46251c = *0x46251c + 1;\n            *0x462514 = iVar1;\ncode_r0x0041e336:\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x462260);\n            return 1;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x462260);\n    return 0;\n}\n",
        "token_count": 594
    },
    "0041e4a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0041e4a0(uint param_1)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    \n    if (*0x4624c0 != 0) {\n        iVar4 = (*_sym.imp.USER32.dll_GetWindowLongA)(param_1, 0xfffffffc);\n        pcVar3 = _sym.imp.USER32.dll_SetWindowLongA;\n        pcVar2 = _sym.imp.USER32.dll_RemovePropA;\n        iVar6 = 0;\n        do {\n            if (*(iVar6 * 0x18 + 0x462f20) == iVar4) {\n                uVar5 = fcn.0041db40(param_1, iVar6);\n                (*pcVar2)(param_1, *0x4624ce);\n                (*pcVar3)(param_1, 0xfffffffc, uVar5);\n                iVar4 = 0;\n                iVar6 = 0x10;\n            }\n            pcVar1 = _sym.imp.USER32.dll_GetPropA;\n            iVar6 = iVar6 + 1;\n        } while (iVar6 < 6);\n        if (iVar6 == 6) {\n            if (iVar4 == 0x41f0e0) {\n                uVar5 = fcn.0041db40(param_1, 6);\n                (*pcVar2)(param_1, *0x4624ce);\n                (*pcVar3)(param_1, 0xfffffffc, uVar5);\n            }\n            else {\n                iVar4 = (*_sym.imp.USER32.dll_GetPropA)(param_1, *0x4624ce);\n                if (((iVar4 != 0) || (iVar4 = (*pcVar1)(param_1, *0x4624d2),  iVar4 != 0)) ||\n                   (iVar4 = (*pcVar1)(param_1, *0x4624d0),  iVar4 != 0)) {\n                    (*_sym.imp.USER32.dll_SetPropA)(param_1, *0x4624d4, 1);\n                }\n            }\n        }\n        pcVar2 = _sym.imp.USER32.dll_GetWindow;\n        for (iVar4 = (*_sym.imp.USER32.dll_GetWindow)(param_1, 5); iVar4 != 0; iVar4 = (*pcVar2)(iVar4, 2)) {\n            fcn.0041e4a0(iVar4);\n        }\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 571
    },
    "0041e750": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0041e750(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t unaff_ESI;\n    uint32_t uVar4;\n    uint16_t unaff_retaddr;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    if (*0x4624c0 != 0) {\n        iVar2 = (*_sym.imp.USER32.dll_GetWindow)(param_1, 5);\n        if (iVar2 != 0) {\n            uVar4 = unaff_ESI & 0xffff0000 | unaff_retaddr;\n            do {\n                fcn.0041e6a0(iVar2, uVar4, 0);\n                for (iVar3 = (*pcVar1)(iVar2, 5); iVar3 != 0; iVar3 = (*pcVar1)(iVar3, 2)) {\n                    fcn.0041e6a0(iVar3, uVar4, iVar2);\n                }\n                iVar2 = (*pcVar1)(iVar2, 2);\n            } while (iVar2 != 0);\n        }\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 268
    },
    "0041e850": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0041e850(uint32_t param_1, uint param_2, uint param_3)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    if (((*0x4624c0 == 0) || (param_1 < 0x134)) || (param_1 == 0x137)) {\n        return 0;\n    }\n    if (param_1 == 0x134) {\n        if (*0x4624e0 < 0x35f) {\n            iVar2 = (*_sym.imp.USER32.dll_GetWindow)(param_3, 5);\n            if (iVar2 != 0) {\n                uVar1 = (*_sym.imp.USER32.dll_GetWindowLongA)(param_3, 0xfffffff0);\n                if ((uVar1 & 3) != 3) goto code_r0x0041e8a4;\n            }\n        }\n        return 0;\n    }\ncode_r0x0041e8a4:\n    (*_sym.imp.GDI32.dll_SetTextColor)(param_2, *0x4624f0);\n    (*_sym.imp.GDI32.dll_SetBkColor)(param_2, *0x4624e8);\n    return *0x462508;\n}\n",
        "token_count": 282
    },
    "0041e930": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuchar * fcn.0041e930(int32_t param_1, uint param_2, uchar *param_3, uint param_4, int32_t param_5)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    bool bVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uchar *puVar8;\n    int32_t iVar9;\n    int32_t iStack136;\n    uchar *puStack132;\n    int32_t iStack128;\n    uchar *puStack124;\n    int32_t iStack120;\n    uchar *puStack116;\n    int32_t iStack112;\n    uchar *puStack108;\n    uchar *puStack104;\n    int32_t iStack100;\n    int32_t iStack96;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uchar *puStack80;\n    \n    if (param_5 == 0) {\n        puStack80 = 0x6;\n        puStack84 = param_1;\n        uStack88 = 0x41e952;\n        iStack96 = fcn.0041db40();\n    }\n    else {\n        iStack96 = 0;\n    }\n    puStack80 = param_4;\n    if (iStack96 == 0) {\n        puStack84 = param_3;\n        uStack88 = param_2;\n        iStack92 = param_1;\n        iStack96 = 0x41e983;\n        puStack80 = (*_sym.imp.USER32.dll_DefWindowProcA)();\n    }\n    else {\n        puStack84 = param_3;\n        uStack88 = param_2;\n        iStack92 = param_1;\n        iStack100 = 0x41e970;\n        puStack80 = (*_sym.imp.USER32.dll_CallWindowProcA)();\n    }\n    if (*0x4624c0 == 0) {\n        return puStack80;\n    }\n    iStack100 = param_1;\n    puStack104 = 0x41e9a5;\n    iVar1 = (*_sym.imp.USER32.dll_IsIconic)();\n    if (iVar1 != 0) {\n        return puStack84;\n    }\n    puStack80 = 0x1;\n    puStack104 = &stack0xffffffb0;\n    puStack108 = NULL;\n    iStack112 = 0x11ef;\n    puStack116 = param_1;\n    iStack120 = 0x41e9d2;\n    (*_sym.imp.USER32.dll_SendMessageA)();\n    iStack120 = 0xfffffff0;\n    puStack124 = param_1;\n    iStack128 = 0x41e9dd;\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)();\n    if ((puStack104 != NULL) && ((uVar2 & 0x10400080) == 0x10400080)) {\n        bVar5 = (uVar2 & 0xc00000) == 0xc00000;\n        iStack128 = param_1;\n        iVar4 = *0x462fb8 - bVar5;\n        puStack132 = 0x41ea22;\n        uVar3 = (*_sym.imp.USER32.dll_GetWindowDC)();\n        puStack132 = &stack0xffffff9c;\n        iStack136 = param_1;\n        (*_sym.imp.USER32.dll_GetWindowRect)();\n        iStack100 = iStack100 - puStack108;\n        iStack96 = iStack96 - puStack104;\n        puStack104 = NULL;\n        puStack108 = NULL;\n        fcn.0041de50(uVar3, &stack0xffffff94, 2, 7, 0xf);\n        puVar8 = &stack0xffffff94;\n        iVar9 = -1;\n        (*_sym.imp.USER32.dll_InflateRect)(puVar8, 0xffffffff, 0xffffffff);\n        fcn.0041de50(uVar3, &stack0xffffff88, 0, 2, 0xf);\n        iVar7 = -1;\n        uVar6 = 0xffffffff;\n        (*_sym.imp.USER32.dll_InflateRect)(&stack0xffffff88, 0xffffffff, 0xffffffff);\n        iVar1 = (*_sym.imp.GDI32.dll_SelectObject)(uVar3, *0x462508);\n        iStack120 = iStack136;\n        iStack112 = iStack128;\n        puStack116 = iVar9 + *0x462fb4;\n        puStack124 = iVar9;\n        fcn.0041de20(uVar3, &stack0xffffff84);\n        (*_sym.imp.USER32.dll_OffsetRect)(&stack0xffffff84, puStack132 + (-*0x462fb4 - iVar9), 0);\n        fcn.0041de20(uVar3, &stack0xffffff78);\n        iStack136 = iVar7 + *0x462fb4;\n        iStack128 = iVar1 - *0x462fb4;\n        puStack124 = puStack132 + iVar4;\n        fcn.0041de20(uVar3, &stack0xffffff78);\n        if (bVar5) {\n            puStack116 = puStack132 + iVar4;\n            iStack120 = iStack136;\n            iStack112 = iStack128;\n            puStack108 = puStack116 + *0x462fbc;\n            fcn.0041de50(uVar3, &stack0xffffff88, 2, 0, 0xf);\n        }\n        puStack132 = puStack132 + ((iVar9 - puVar8) - *0x462fb4);\n        puStack124 = puStack132 + *0x462fb8;\n        fcn.0041de20(uVar3, &stack0xffffff78);\n        (*_sym.imp.GDI32.dll_SelectObject)(uVar3, uVar6);\n        (*_sym.imp.USER32.dll_ReleaseDC)(param_1, uVar3);\n    }\n    return puStack108;\n}\n",
        "token_count": 1333
    },
    "0041ebe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041ebe0(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    char *pcStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uchar *puStack52;\n    char *pcStack48;\n    char *pcStack44;\n    char *pcStack40;\n    char *pcStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    \n    if (*0x462fc5 != '\\0') {\n        uStack24 = 0x462260;\n        uStack28 = 0x41ebfd;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProfileStringA;\n        puStack32 = &stack0xfffffff0;\n        uStack28 = 9;\n        *0x462fc4 = 0x1e;\n        pcStack36 = \"roman\";\n        pcStack40 = \"kanjimenu\";\n        pcStack44 = \"windows\";\n        pcStack48 = 0x41ec22;\n        (*_sym.imp.KERNEL32.dll_GetProfileStringA)();\n        pcVar2 = _sym.imp.KERNEL32.dll_lstrcmpiA;\n        puStack52 = &stack0xffffffdc;\n        pcStack48 = \"kanji\";\n        uStack56 = 0x41ec34;\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)();\n        if (iVar3 == 0) {\n            *0x462fc4 = 0x1f;\n        }\n        puStack60 = &stack0xffffffd4;\n        uStack56 = 9;\n        pcStack64 = \"english\";\n        (*pcVar1)(\"windows\", \"hangeulmenu\");\n        iVar3 = (*pcVar2)(&stack0xffffffc0, \"hangeul\");\n        if (iVar3 == 0) {\n            *0x462fc4 = 0x1f;\n        }\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x462260);\n    }\n    return;\n}\n",
        "token_count": 466
    },
    "0041ec80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.0041ec80(void)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uint *puVar8;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    \n    uStack56 = 0x462260;\n    uStack60 = 0x41ec91;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n    uStack60 = 0;\n    uStack64 = 0x41ec99;\n    uVar4 = (*_sym.imp.USER32.dll_GetDC)();\n    pcVar2 = _sym.imp.GDI32.dll_GetDeviceCaps;\n    uStack64 = 0xc;\n    uStack72 = 0x41eca6;\n    uStack68 = uVar4;\n    iVar5 = (*_sym.imp.GDI32.dll_GetDeviceCaps)();\n    uStack72 = 0xe;\n    uStack76 = uVar4;\n    iVar6 = (*pcVar2)();\n    pcVar2 = _sym.imp.USER32.dll_GetSystemMetrics;\n    *0x4624c0 = 3 < iVar5 * iVar6;\n    iVar5 = (*_sym.imp.USER32.dll_GetSystemMetrics)(1);\n    if ((iVar5 == 0x15e) && (iVar5 = (*pcVar2)(0),  iVar5 == 0x280)) {\n        *0x4624c0 = 0;\n    }\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar4);\n    pcVar3 = _sym.imp.KERNEL32.dll_GlobalAddAtomA;\n    if (*0x4624c0 != 0) {\n        *0x4624c8 = (*_sym.imp.KERNEL32.dll_GlobalAddAtomA)(0x45d8b4);\n        if ((*0x4624c8 != 0) && (*0x4624ce = (*pcVar3)(\"C3dNew\"),  *0x4624ce != 0)) {\n            *0x4624cc = (*pcVar3)(\"C3dL\");\n            *0x4624ca = (*pcVar3)(\"C3dH\");\n            if ((*0x4624cc == 0) || (*0x4624ca == 0)) {\n                *0x4624c0 = 0;\n                return 0;\n            }\n            *0x4624d2 = (*pcVar3)(\"C3dLNew\");\n            *0x4624d0 = (*pcVar3)(\"C3dHNew\");\n            if ((*0x4624d2 == 0) || (*0x4624d0 == 0)) {\n                *0x4624c0 = 0;\n                return 0;\n            }\n            *0x4624d4 = (*pcVar3)(\"C3dD\");\n            if (*0x4624d4 != 0) {\n                *0x462fc5 = (*pcVar2)(0x2a);\n                fcn.0041ebe0();\n                iVar5 = fcn.0041ef50(1);\n                pcVar2 = _sym.imp.USER32.dll_GetClassInfoA;\n                if (iVar5 != 0) {\n                    puVar8 = 0x453d44;\n                    puVar7 = 0x462f20;\n                    do {\n                        puVar1 = puVar8 + -5;\n                        *puVar7 = *puVar8;\n                        puVar8 = puVar8 + 8;\n                        (*pcVar2)(0, puVar1, &stack0xffffffb4);\n                        puVar7[1] = uStack72;\n                        puVar7 = puVar7 + 6;\n                    } while (puVar8 < vtable.exception.0);\n                    iVar5 = (*pcVar2)(0, 0x8002, &stack0xffffffb4);\n                    if (iVar5 == 0) {\n                        *0x462fb0 = _sym.imp.USER32.dll_DefDlgProcA;\n                    }\n                    else {\n                        *0x462fb0 = uStack72;\n                    }\n                    goto code_r0x0041ed1b;\n                }\n            }\n        }\n        *0x4624c0 = 0;\n    }\ncode_r0x0041ed1b:\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x462260);\n    return *0x4624c0;\n}\n",
        "token_count": 1011
    },
    "0041ee70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041ee70(void)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    ushort uVar4;\n    ushort extraout_var;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x462260);\n    piVar2 = 0x462f20;\n    do {\n        if (*piVar2 != 0) {\n            *piVar2 = 0;\n        }\n        piVar2 = piVar2 + 6;\n    } while (piVar2 < 0x462fb0);\n    uVar3 = fcn.0041ddf0();\n    pcVar1 = _sym.imp.KERNEL32.dll_GlobalDeleteAtom;\n    if (*0x4624c8 != 0) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_GlobalDeleteAtom)(uVar3 & 0xffff0000 | *0x4624c8);\n    }\n    if (*0x4624ce != 0) {\n        uVar3 = (*pcVar1)(uVar3 & 0xffff0000 | *0x4624ce);\n    }\n    if (*0x4624cc != 0) {\n        uVar3 = (*pcVar1)(uVar3 & 0xffff0000 | *0x4624cc);\n    }\n    if (*0x4624ca != 0) {\n        uVar3 = (*pcVar1)(uVar3 & 0xffff0000 | *0x4624ca);\n    }\n    if (*0x4624d2 != 0) {\n        uVar3 = (*pcVar1)(uVar3 & 0xffff0000 | *0x4624d2);\n    }\n    uVar4 = uVar3 >> 0x10;\n    if (*0x4624d0 != 0) {\n        (*pcVar1)(uVar3 & 0xffff0000 | *0x4624d0);\n        uVar4 = extraout_var;\n    }\n    if (*0x4624d4 != 0) {\n        (*pcVar1)(CONCAT22(uVar4, *0x4624d4));\n    }\n    *0x4624c0 = 0;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x462260);\n    return;\n}\n",
        "token_count": 514
    },
    "0041ef50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0041ef50(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint16_t uVar5;\n    char *pcVar6;\n    uint *puVar7;\n    char *pcVar8;\n    uint *puVar9;\n    bool bVar10;\n    int32_t iStack80;\n    int32_t aiStack76 [4];\n    int32_t aiStack32 [4];\n    uint uStack16;\n    uint uStack12;\n    int32_t iStack8;\n    uint uStack4;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetSysColor;\n    if (*0x4624c0 == 0) {\n        return 0;\n    }\n    uVar3 = 0;\n    do {\n        uVar5 = uVar3 + 1;\n        aiStack76[3] = *(uVar3 * 2 + 0x453df0);\n        aiStack76[2] = 0x41ef83;\n        uVar2 = (*pcVar1)();\n        *(&stack0xffffffe0 + uVar3 * 4) = uVar2;\n        uVar3 = uVar5;\n    } while (uVar5 < 8);\n    if (*0x4624e0 == 0x300) {\n        aiStack32[0] = 0xffffff;\n    }\n    if (((iStack8 == 0) || (aiStack32[1] == iStack8)) && (iStack8 = 0xc0c0c0,  aiStack32[1] != 0x808080)) {\n        iStack8 = 0x808080;\n    }\n    bVar10 = param_1 == 0;\n    if (bVar10) {\n        iVar4 = 0x20;\n        pcVar6 = 0x4624e4;\n        pcVar8 = &stack0xffffffe0;\n        do {\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            bVar10 = *pcVar6 == *pcVar8;\n            pcVar6 = pcVar6 + 1;\n            pcVar8 = pcVar8 + 1;\n        } while (bVar10);\n        if (bVar10) {\n            return 1;\n        }\n    }\n    aiStack76[3] = uStack4;\n    aiStack76[2] = uStack16;\n    aiStack76[1] = aiStack32[0];\n    aiStack76[0] = aiStack32[2];\n    iStack80 = aiStack32[1];\n    iStack80 = fcn.004211d0(*0x4624d8, 0x67c7, uStack12);\n    pcVar1 = _sym.imp.GDI32.dll_CreateSolidBrush;\n    uVar3 = 0;\n    do {\n        uVar5 = uVar3 + 1;\n        uVar2 = (*pcVar1)(*(&stack0xffffffc0 + uVar3 * 4));\n        *(&stack0xffffffb4 + uVar3 * 4) = uVar2;\n        uVar3 = uVar5;\n    } while (uVar5 < 3);\n    uVar5 = 0;\n    do {\n        if (*(&stack0xffffffb4 + uVar5 * 4) == 0) goto code_r0x0041f0a8;\n        uVar5 = uVar5 + 1;\n    } while (uVar5 < 3);\n    if (iStack80 != 0) {\n        fcn.0041ddf0();\n        *0x462504 = aiStack76[0];\n        *0x462508 = aiStack76[1];\n        *0x46250c = aiStack76[2];\n        puVar7 = &stack0xffffffc0;\n        puVar9 = 0x4624e4;\n        for (iVar4 = 8; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar9 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar9 = puVar9 + 1;\n        }\n        *0x462510 = iStack80;\n        return 1;\n    }\ncode_r0x0041f0a8:\n    uVar5 = 0;\n    do {\n        uVar3 = uVar5;\n        uVar5 = uVar5 + 1;\n        fcn.0041ddd0(&stack0xffffffb4 + uVar3 * 4);\n    } while (uVar5 < 3);\n    fcn.0041ddd0(&stack0xffffffb0);\n    return 0;\n}\n",
        "token_count": 1055
    },
    "0041f830": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool fcn.0041f830(uint param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint16_t *puVar5;\n    uint32_t unaff_EDI;\n    uchar auStack16 [8];\n    uint16_t uStack8;\n    uint32_t uStack4;\n    \n    iVar2 = fcn.0041db20(param_1);\n    if (iVar2 != 0) {\n        return false;\n    }\n    iVar2 = 0;\n    puVar5 = 0x453d4c;\n    (*_sym.imp.USER32.dll_GetClassNameA)(param_1, auStack16, 0x10);\n    uVar1 = uStack4 & 0xffff;\n    do {\n        if ((*puVar5 & uVar1) != 0) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(puVar5 + -0xe, &stack0xffffffe4);\n            if (iVar3 == 0) {\n                uVar4 = (*_sym.imp.USER32.dll_GetWindowLongA)(param_1, 0xfffffff0);\n                iVar3 = (**(iVar2 * 0x20 + 0x453d48))\n                                  (param_1, uVar4, unaff_EDI & 0xffff0000 | uVar1, puVar5 & 0xffff0000 | uStack8, \n                                   uStack4);\n                if (iVar3 == 1) {\n                    if ((uStack8 == 1) && (*0x4624e2 == 0x10)) {\n                        fcn.0041dd30(param_1, *(iVar2 * 0x18 + 0x462f20));\n                        return true;\n                    }\n                    fcn.0041db90(param_1, *(iVar2 * 0x18 + 0x462f20));\n                }\n                return iVar3 != 0;\n            }\n        }\n        puVar5 = puVar5 + 0x10;\n        iVar2 = iVar2 + 1;\n        if (0x453e0b < puVar5) {\n            return false;\n        }\n    } while( true );\n}\n",
        "token_count": 491
    },
    "0041fa50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0041fa50(uint param_1, int32_t param_2, uint *param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    bool bVar4;\n    int32_t iStack260;\n    uchar *puStack256;\n    uchar *puStack252;\n    uchar *puStack248;\n    int32_t iStack244;\n    int32_t iStack240;\n    int32_t iStack236;\n    int32_t iStack232;\n    int32_t iStack228;\n    int32_t iStack224;\n    uchar *puStack220;\n    int32_t iStack216;\n    int32_t iStack212;\n    int32_t iStack208;\n    int32_t iStack204;\n    int32_t iStack200;\n    int32_t iStack196;\n    int32_t iStack192;\n    int32_t iStack188;\n    int32_t iStack184;\n    int32_t iStack180;\n    int32_t iStack176;\n    int32_t iStack172;\n    int32_t iStack168;\n    uint uStack164;\n    int32_t iStack160;\n    int32_t iStack156;\n    int32_t iStack152;\n    int32_t iStack148;\n    int32_t iStack144;\n    uint uStack140;\n    int32_t iStack136;\n    int32_t iStack132;\n    int32_t iStack128;\n    uint uStack124;\n    int32_t iStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    int32_t iStack104;\n    int32_t iStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    int32_t iStack80;\n    int32_t iStack76;\n    uchar *puStack72;\n    uchar *puStack68;\n    int32_t iStack64;\n    uint *puStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar auStack28 [12];\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack16 = *param_3;\n    uStack12 = param_3[1];\n    uStack8 = param_3[2];\n    uStack48 = 0xf;\n    uStack52 = 7;\n    uStack4 = param_3[3];\n    puStack56 = 0x7;\n    puStack60 = param_3;\n    iStack64 = param_2;\n    puStack68 = 0x41fa86;\n    fcn.0041de50();\n    puStack56 = &stack0xfffffff0;\n    uStack48 = 0xffffffff;\n    uStack52 = 0xffffffff;\n    puStack60 = 0x41fa98;\n    (*_sym.imp.USER32.dll_InflateRect)();\n    if (param_3 == 1) {\n        puStack60 = uStack8;\n        iStack64 = 0x41faab;\n        iVar1 = (*_sym.imp.USER32.dll_IsWindowEnabled)();\n        if (iVar1 != 0) {\n            puStack72 = &stack0xffffffe4;\n            puStack60 = 0xf;\n            iStack64 = 7;\n            puStack68 = 0x7;\n            iStack76 = param_2;\n            iStack80 = 0x41fac0;\n            fcn.0041de50();\n            puStack68 = &stack0xffffffe4;\n            puStack60 = 0xffffffff;\n            iStack64 = 0xffffffff;\n            puStack72 = 0x41fad2;\n            (*_sym.imp.USER32.dll_InflateRect)();\n        }\n    }\n    puStack60 = 0xf00021;\n    puStack72 = param_3[1];\n    iStack64 = 1;\n    iStack76 = *param_3;\n    puStack68 = 0x1;\n    iStack80 = param_2;\n    uStack84 = 0x41fae9;\n    (*_sym.imp.GDI32.dll_PatBlt)();\n    uStack84 = 0xf00021;\n    uStack96 = param_3[1];\n    uStack88 = 1;\n    uStack92 = 1;\n    iStack100 = param_3[2] + -1;\n    iStack104 = param_2;\n    uStack108 = 0x41fb02;\n    (*_sym.imp.GDI32.dll_PatBlt)();\n    uStack108 = 0xf00021;\n    uStack112 = 1;\n    iStack120 = param_3[3] + -1;\n    uStack116 = 1;\n    uStack124 = *param_3;\n    iStack128 = param_2;\n    iStack132 = 0x41fb1a;\n    (*_sym.imp.GDI32.dll_PatBlt)();\n    iStack132 = 0xf00021;\n    iStack136 = 1;\n    iStack144 = param_3[3] + -1;\n    uStack140 = 1;\n    iStack148 = param_3[2] + -1;\n    iStack152 = param_2;\n    iStack156 = 0x41fb34;\n    (*_sym.imp.GDI32.dll_PatBlt)();\n    bVar4 = iStack80 == 0;\n    iVar1 = bVar4 + 1;\n    iStack156 = *0x462504;\n    if (iStack80 != 0) {\n        iStack156 = *0x46250c;\n    }\n    iStack160 = param_2;\n    uStack164 = 0x41fb59;\n    iStack144 = (*_sym.imp.GDI32.dll_SelectObject)();\n    uStack164 = 0xf00021;\n    iStack168 = iStack120 - iStack128;\n    iStack176 = iStack128;\n    iStack180 = iStack132;\n    iStack184 = param_2;\n    iStack188 = 0x41fb7d;\n    iStack172 = iVar1;\n    (*_sym.imp.GDI32.dll_PatBlt)();\n    iStack188 = 0xf00021;\n    iStack196 = iStack148 - iStack156;\n    iStack200 = iStack152;\n    iStack204 = iStack156;\n    iStack208 = param_2;\n    iStack212 = 0x41fb9d;\n    iStack192 = iVar1;\n    (*_sym.imp.GDI32.dll_PatBlt)();\n    if (iStack136 == 0) {\n        iVar3 = 0;\n        iStack212 = *0x46250c;\n        iStack216 = param_2;\n        puStack220 = 0x41fbb3;\n        (*_sym.imp.GDI32.dll_SelectObject)();\n        iStack168 = iStack168 + -1;\n        iStack172 = iStack172 + -1;\n        if (iVar1 != 0) {\n            do {\n                iStack212 = 0xf00021;\n                iStack216 = 1;\n                puStack220 = (iStack172 - iStack180) + 1;\n                iStack224 = iStack168;\n                iStack228 = iStack180;\n                iStack232 = param_2;\n                iStack236 = 0x41fbe1;\n                (*_sym.imp.GDI32.dll_PatBlt)();\n                iStack236 = 0xf00021;\n                iStack240 = iStack192 - iStack200;\n                iStack244 = 1;\n                puStack248 = iStack200;\n                puStack252 = iStack196;\n                puStack256 = param_2;\n                iStack260 = 0x41fc02;\n                (*_sym.imp.GDI32.dll_PatBlt)();\n                if (iVar3 < bVar4) {\n                    puStack220 = &stack0xffffff4c;\n                    iStack212 = 0xffffffff;\n                    iStack216 = 0xffffffff;\n                    iStack224 = 0x41fc18;\n                    (*_sym.imp.USER32.dll_InflateRect)();\n                }\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < iVar1);\n        }\n    }\n    iStack180 = iStack180 + 1;\n    iStack176 = iStack176 + 1;\n    iStack212 = *0x462508;\n    iStack216 = param_2;\n    puStack220 = 0x41fc32;\n    (*_sym.imp.GDI32.dll_SelectObject)();\n    puStack220 = 0xf00021;\n    iStack224 = iStack176 - iStack184;\n    iStack228 = iStack180 - iStack188;\n    iStack232 = iStack184;\n    iStack236 = iStack188;\n    iStack240 = param_2;\n    iStack244 = 0x41fc5a;\n    (*_sym.imp.GDI32.dll_PatBlt)();\n    iStack244 = iStack192;\n    puStack248 = 0x41fc65;\n    iVar1 = (*_sym.imp.USER32.dll_IsWindowEnabled)();\n    if (iVar1 == 0) {\n        puStack248 = *0x4624fc;\n        puStack252 = param_2;\n        puStack256 = 0x41fc76;\n        (*_sym.imp.GDI32.dll_SetTextColor)();\n    }\n    iVar1 = iStack184;\n    puStack248 = &stack0xffffff24;\n    puStack252 = &stack0xffffff20;\n    puStack256 = iStack184;\n    iStack260 = param_2;\n    fcn.0041e040();\n    iStack212 = iStack212 + ((iStack204 - iStack212) - puStack220) / 2;\n    iStack216 = iStack216 + ((iStack208 - iStack216) - iStack224) / 2;\n    iVar3 = iStack212 + puStack220;\n    if (iStack204 <= iStack212 + puStack220) {\n        iVar3 = iStack204;\n    }\n    iVar2 = iStack216 + iStack224;\n    if (iStack208 <= iStack216 + iStack224) {\n        iVar2 = iStack208;\n    }\n    iStack208 = iVar2;\n    if (iStack172 != 0) {\n        puStack256 = &stack0xffffff28;\n        puStack248 = 0x1;\n        puStack252 = 0x1;\n        iStack260 = 0x41fcfe;\n        iStack204 = iVar3;\n        (*_sym.imp.USER32.dll_OffsetRect)();\n        iVar3 = param_3[2] + -3;\n        if (iStack208 <= param_3[2] + -3) {\n            iVar3 = iStack208;\n        }\n        iStack208 = iVar3;\n        iVar3 = param_3[3] + -3;\n        if (iStack204 <= param_3[3] + -3) {\n            iVar3 = iStack204;\n        }\n    }\n    iStack204 = iVar3;\n    puStack252 = &stack0xffffff28;\n    puStack248 = 0x20;\n    puStack256 = iStack180;\n    iStack260 = iVar1;\n    (*_sym.imp.USER32.dll_DrawTextA)(param_2);\n    iVar1 = (*_sym.imp.USER32.dll_GetFocus)();\n    if (iVar1 == iStack216) {\n        (*_sym.imp.USER32.dll_InflateRect)(&stack0xffffff14, 1, 1);\n        (*_sym.imp.USER32.dll_IntersectRect)(&stack0xffffff08, &stack0xffffff08, param_3);\n        (*_sym.imp.USER32.dll_DrawFocusRect)(param_2, &stack0xfffffefc);\n    }\n    if (puStack248 != NULL) {\n        (*_sym.imp.GDI32.dll_SelectObject)(param_2, puStack248);\n    }\n    return;\n}\n",
        "token_count": 2638
    },
    "004205c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.004205c0(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t unaff_EDI;\n    int32_t unaff_retaddr;\n    uint uVar8;\n    int32_t iStack124;\n    int32_t iStack120;\n    uchar *puStack116;\n    int32_t iStack112;\n    uchar *puStack108;\n    int32_t iStack104;\n    int32_t iStack100;\n    uchar *puStack96;\n    uint32_t uStack92;\n    int32_t iStack88;\n    uchar auStack68 [4];\n    uint32_t uStack64;\n    uchar auStack56 [8];\n    int32_t iStack48;\n    int32_t iStack40;\n    int32_t iStack36;\n    \n    iStack88 = -0x10;\n    uStack92 = param_1;\n    puStack96 = 0x4205d4;\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)();\n    if ((uVar2 & 0x10000000) != 0) {\n        if ((param_1 == 3) && ((uVar2 & 3) == 3)) {\n            puStack96 = NULL;\n            iStack100 = 0;\n            iStack104 = 0x157;\n            puStack108 = param_1;\n            iStack112 = 0x420600;\n            iVar3 = (*_sym.imp.USER32.dll_SendMessageA)();\n            if (iVar3 != 0) {\n                return;\n            }\n        }\n        if (unaff_retaddr != 0) {\n            puStack96 = param_1;\n            iStack100 = 0x420616;\n            (*_sym.imp.USER32.dll_HideCaret)();\n        }\n        puStack96 = &stack0xffffffc8;\n        iStack100 = param_1;\n        iStack104 = 0x420622;\n        (*_sym.imp.USER32.dll_GetWindowRect)();\n        iStack104 = param_1;\n        puStack108 = 0x420629;\n        iVar3 = (*_sym.imp.USER32.dll_GetParent)();\n        pcVar1 = _sym.imp.USER32.dll_ScreenToClient;\n        puStack108 = &stack0xffffffbc;\n        puStack116 = 0x420639;\n        iStack112 = iVar3;\n        (*_sym.imp.USER32.dll_ScreenToClient)();\n        puStack116 = &stack0xffffffbc;\n        uVar2 = 0xf;\n        iStack124 = 0x420645;\n        iStack120 = iVar3;\n        (*pcVar1)();\n        iStack124 = iVar3;\n        uVar4 = (*_sym.imp.USER32.dll_GetDC)();\n        puStack96 = puStack108 & 0x100000;\n        if (puStack96 != NULL) {\n            uVar2 = 7;\n        }\n        uStack92 = puStack108 & 0x200000;\n        if (uStack92 != 0) {\n            uVar2 = uVar2 & 0xfffffffb;\n        }\n        iVar5 = (*_sym.imp.USER32.dll_GetWindowLongA)(param_1, 0xfffffff4);\n        if (iStack40 - iVar5 == -1000) {\n            puStack108 = 0x29a;\n            puStack96 = (*_sym.imp.USER32.dll_SendMessageA)(iVar3, 0x1944, 0, &stack0xffffff94);\n            if (iStack124 == 0x29a) {\n                puStack96 = (*_sym.imp.USER32.dll_SendMessageA)(iVar3, 0x1943, 0, &stack0xffffff84);\n            }\n            (*_sym.imp.USER32.dll_GetClassNameA)(iVar3, &stack0xffffffb0, 0x10);\n            iVar5 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(&stack0xffffffa4, \"ComboBox\");\n            if ((iVar5 == 0) || ((puStack108 == 0x1 && (unaff_EDI == 0x3eb)))) {\n                puStack116 = (*_sym.imp.USER32.dll_GetParent)(iVar3);\n                uVar8 = 2;\n                (*_sym.imp.USER32.dll_MapWindowPoints)(iVar3, puStack116, &stack0xffffff9c, 2);\n                (*_sym.imp.USER32.dll_ReleaseDC)(iVar3, uVar4);\n                uVar4 = (*_sym.imp.USER32.dll_GetDC)(uVar8);\n                if (iStack40 == 0) {\n                    uVar2 = uVar2 & 0xfffffffd;\n                    uStack92 = uStack92 + 1;\n                    iVar3 = iStack112;\n                }\n                else {\n                    uVar6 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar3, 0xfffffff0);\n                    if (((uVar6 & 3) == 2) || ((uVar6 & 3) == 3)) {\n                        iVar5 = (*_sym.imp.USER32.dll_SendMessageA)(iVar3, 0x157, 0, 0);\n                        iVar3 = iStack112;\n                        if (iVar5 != 0) {\n                            (*_sym.imp.USER32.dll_ReleaseDC)(iStack112, uVar4);\n                            (*_sym.imp.USER32.dll_ShowCaret)(param_1);\n                            return;\n                        }\n                    }\n                    else {\n                        uVar2 = uVar2 & 0xfffffff7;\n                        uVar8 = (*_sym.imp.USER32.dll_GetWindow)(iVar3, 5);\n                        (*_sym.imp.USER32.dll_GetWindowRect)(uVar8, &stack0xffffffa0);\n                        iStack88 = iStack88 + (unaff_EDI - unaff_EBX);\n                        fcn.0041df90(uVar4, &stack0xffffffa0, 0x1008);\n                        iStack88 = iStack88 + (unaff_EBX - unaff_EDI);\n                        iVar3 = iStack112;\n                    }\n                }\n            }\n        }\n        fcn.0041df90(uVar4, &stack0xffffffa0, uVar2);\n        iVar5 = iStack88;\n        if ((iStack36 == 3) && ((puStack116 & 3) == 3)) {\n            iVar7 = (*_sym.imp.USER32.dll_GetSystemMetrics)(2);\n            puStack96 = iVar5 - iVar7;\n            fcn.0041de50(uVar4, &stack0xffffffa0, 7, 7, 0xc);\n            fcn.0041f9e0(param_1);\n        }\n        else {\n            if (iStack100 != 0) {\n                iStack88 = iStack88 + 1;\n                fcn.0041de50(uVar4, &stack0xffffffa0, 0, 0, 4);\n                iVar5 = iStack88 + -1;\n                uStack64 = puStack96;\n                iStack88 = iVar5;\n                iVar7 = (*_sym.imp.USER32.dll_GetSystemMetrics)(2);\n                puStack96 = iVar5 - iVar7;\n                fcn.0041de50(uVar4, &stack0xffffffa0, 7, 7, 8);\n                puStack96 = uStack64;\n            }\n            if (iStack104 != 0) {\n                unaff_EBP = unaff_EBP + 1;\n                fcn.0041de50(uVar4, &stack0xffffffa0, 0, 0, 8);\n                iVar5 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x15);\n                uStack92 = (unaff_EBP + -1) - iVar5;\n                fcn.0041de50(uVar4, &stack0xffffffa0, 7, 7, 4);\n            }\n        }\n        (*_sym.imp.USER32.dll_ReleaseDC)(iVar3, uVar4);\n        if (iStack48 != 0) {\n            (*_sym.imp.USER32.dll_ShowCaret)(param_1);\n        }\n    }\n    return;\n}\n",
        "token_count": 1835
    },
    "00420900": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint32_t fcn.00420900(uint param_1, uint *param_2, int32_t param_3, uint param_4, uint param_5)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t unaff_EDI;\n    \n    if (param_2 == 0x82) {\n        uVar1 = fcn.0041dd70(param_1, 0x82, param_3, param_4, param_5);\n        return uVar1;\n    }\n    iVar2 = (*_sym.imp.USER32.dll_GetPropA)(param_1, *0x4624d4);\n    if (iVar2 == 0) {\n        uVar3 = fcn.0041db40(param_1, param_3, param_1, param_2, param_1, param_2);\n        uVar4 = (*_sym.imp.USER32.dll_CallWindowProcA)(uVar3);\n        uVar1 = uVar4;\n        if ((param_3 == 3) && (uVar4 = (*_sym.imp.USER32.dll_GetWindowLongA)(param_1, 0xfffffff0),  (uVar4 & 3) == 2)) {\n            return uVar1;\n        }\n        if (param_2 < 0x19) {\n            if (param_2 == 0x18) {\n                if ((*0x4624e0 < 0x30a) && (unaff_EDI == 0)) {\n                    fcn.0041f920(param_1, 0);\n                }\n            }\n            else if ((param_2 == 0xf) && (((param_3 != 3 || ((uVar4 & 3) == 2)) || ((uVar4 & 3) == 3)))) {\n                fcn.004205c0(param_1, 1, param_3);\n            }\n        }\n        else if (param_2 == 0x46) {\n            if (0x309 < *0x4624e0) {\n                fcn.0041f920(param_1, 0x46);\n            }\n        }\n        else if ((0x1942 < param_2) && (param_2 < 0x1945)) {\n            *param_2 = 1;\n            return 0x3ea;\n        }\n        return uVar1;\n    }\n    uVar3 = fcn.0041db40(param_1, param_3, param_1, param_2, param_1, param_2);\n    uVar1 = (*_sym.imp.USER32.dll_CallWindowProcA)(uVar3);\n    return uVar1;\n}\n",
        "token_count": 605
    },
    "00420a80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00420a80(int32_t param_1, uint *param_2, uint param_3, uint param_4, uint param_5)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uchar *puStack100;\n    int32_t iStack96;\n    uchar *puStack92;\n    uint uStack88;\n    int32_t iStack84;\n    int32_t iStack80;\n    int32_t iStack76;\n    uint *puStack72;\n    int32_t iStack68;\n    uint *puStack64;\n    uint *puStack60;\n    uint *puStack56;\n    int32_t iStack52;\n    uint32_t uStack48;\n    uchar auStack24 [4];\n    int32_t *piStack20;\n    uint uStack4;\n    \n    if (param_2 == 0x82) {\n        uStack48 = param_5;\n        iStack52 = param_4;\n        puStack56 = param_3;\n        puStack60 = param_2;\n        puStack64 = param_1;\n        iStack68 = 0x420aac;\n        uVar2 = fcn.0041dd70();\n        return uVar2;\n    }\n    uStack48 = *0x4624d4;\n    iStack52 = param_1;\n    puStack56 = 0x420aca;\n    iVar3 = (*_sym.imp.USER32.dll_GetPropA)();\n    if (iVar3 == 0) {\n        if (param_2 < 0x19) {\n            if (param_2 == 0x18) {\n                if ((*0x4624e0 < 0x30a) && (param_1 == 0)) {\n                    puStack56 = NULL;\n                    puStack60 = param_1;\n                    puStack64 = 0x420bb3;\n                    fcn.0041f920();\n                }\n            }\n            else if (param_2 == 0xf) {\n                puStack56 = param_2;\n                puStack60 = param_1;\n                puStack64 = param_2;\n                iStack68 = param_1;\n                puStack72 = param_3;\n                iStack76 = param_1;\n                iStack80 = 0x420b70;\n                puStack72 = fcn.0041db40();\n                iStack76 = 0x420b7a;\n                uVar2 = (*_sym.imp.USER32.dll_CallWindowProcA)();\n                iStack76 = param_3;\n                iStack80 = 0;\n                iStack84 = param_1;\n                uStack88 = 0x420b85;\n                fcn.004205c0();\n                return uVar2;\n            }\n        }\n        else if (param_2 < 0x84) {\n            if (param_2 == 0x83) {\n                if (*0x4624e0 < 0x30a) {\n                    puStack56 = &stack0xffffffe8;\n                    puStack60 = param_1;\n                    puStack64 = 0x420bf8;\n                    (*_sym.imp.USER32.dll_GetWindowRect)();\n                    iStack68 = uStack4;\n                    puStack72 = param_2;\n                    iStack76 = param_1;\n                    iStack80 = param_1;\n                    iStack84 = param_1;\n                    uStack88 = 0x420c0f;\n                    iStack80 = fcn.0041db40();\n                    iStack84 = 0x420c19;\n                    uVar2 = (*_sym.imp.USER32.dll_CallWindowProcA)();\n                    iStack68 = *piStack20;\n                    puStack64 = piStack20[1];\n                    iStack84 = 1;\n                    uStack88 = 2;\n                    puStack60 = piStack20[2];\n                    puStack56 = piStack20[3];\n                    puStack92 = &stack0xffffffbc;\n                    iStack96 = 0x420c48;\n                    (*_sym.imp.USER32.dll_InflateRect)();\n                    if (iStack68 < iStack52) {\n                        iStack96 = param_1;\n                        iStack76 = iStack68 + 1;\n                        iStack68 = iStack52 + 1;\n                        puStack100 = 0x420c69;\n                        uVar4 = (*_sym.imp.USER32.dll_GetParent)();\n                        pcVar1 = _sym.imp.USER32.dll_ScreenToClient;\n                        puStack100 = &stack0xffffffac;\n                        (*_sym.imp.USER32.dll_ScreenToClient)(uVar4);\n                        (*pcVar1)(uVar4, &stack0xffffffac);\n                        (*_sym.imp.USER32.dll_InvalidateRect)(uVar4, &stack0xffffff9c, 1);\n                    }\n                    return uVar2;\n                }\n            }\n            else if ((param_2 == 0x46) && (0x309 < *0x4624e0)) {\n                puStack56 = param_2;\n                puStack60 = param_1;\n                puStack64 = 0x420bd5;\n                fcn.0041f920();\n            }\n        }\n        else if ((0x1942 < param_2) && (param_2 < 0x1945)) {\n            *param_2 = 1;\n            return 0x3e9;\n        }\n        puStack56 = param_2;\n        puStack60 = param_1;\n        puStack64 = param_2;\n        iStack68 = param_1;\n        puStack72 = param_3;\n        iStack76 = param_1;\n        iStack80 = 0x420b1d;\n        puStack72 = fcn.0041db40();\n        iStack76 = 0x420b27;\n        uVar2 = (*_sym.imp.USER32.dll_CallWindowProcA)();\n        return uVar2;\n    }\n    puStack56 = param_2;\n    puStack60 = param_1;\n    puStack64 = param_2;\n    iStack68 = param_1;\n    puStack72 = param_3;\n    iStack76 = param_1;\n    iStack80 = 0x420ae5;\n    puStack72 = fcn.0041db40();\n    iStack76 = 0x420aef;\n    uVar2 = (*_sym.imp.USER32.dll_CallWindowProcA)();\n    return uVar2;\n}\n",
        "token_count": 1414
    },
    "00420d30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl\nfcn.00420d30(uint noname_0, uint noname_1, int32_t *noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint hWnd, uint hdc, \n            uint nXLeft)\n\n{\n    int32_t iVar1;\n    uint16_t uVar2;\n    uint var_ch;\n    uint32_t var_14h_2;\n    uint var_4h;\n    uint uStack52;\n    uint uStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    uint uStack28;\n    uint var_14h;\n    uint crColor;\n    uint lpchText;\n    \n    uStack28 = 0xf00021;\n    iStack40 = noname_2[1];\n    iStack44 = *noname_2;\n    iStack32 = noname_2[3] - iStack40;\n    iStack36 = noname_2[2] - iStack44;\n    uStack48 = var_ch;\n    uStack52 = 0x420d5e;\n    (*_sym.imp.GDI32.dll_PatBlt)();\n    uStack52 = noname_0;\n    iVar1 = (*_sym.imp.USER32.dll_GetWindowTextLengthA)();\n    fcn.0040c750();\n    if (*0x10 != 0x34) {\n        iVar1 = (*_sym.imp.USER32.dll_GetWindowTextA)(noname_0, &stack0xffffffcc, iVar1 + 2);\n        if (iVar1 != 0) {\n            uVar2 = 0x140;\n            if ((var_14h_2 & 0xf) != 0xc) {\n                uVar2 = var_14h_2 & 0xf | 0x150;\n            }\n            if ((var_14h_2 & 0x80) != 0) {\n                uVar2 = uVar2 | 0x800;\n            }\n            if ((var_14h_2 & 0x8000000) != 0) {\n                crColor = (*_sym.imp.GDI32.dll_SetTextColor)(var_ch, *0x4624fc);\n            }\n            (*_sym.imp.USER32.dll_DrawTextA)(var_ch, &stack0xffffffcc, 0xffffffff, noname_2, uVar2);\n            if ((var_14h_2 & 0x8000000) != 0) {\n                (*_sym.imp.GDI32.dll_SetTextColor)(var_ch, crColor);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 640
    },
    "00421100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00421100(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint unaff_ESI;\n    \n    if (param_2 == 1) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"KERNEL32.DLL\");\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1, \"DisableThreadLibraryCalls\");\n        if (pcVar2 != NULL) {\n            (*pcVar2)(unaff_ESI);\n        }\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x462260);\n        *0x4624d8 = unaff_ESI;\n        *0x4624dc = unaff_ESI;\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n        pcVar2 = _sym.imp.USER32.dll_GetSystemMetrics;\n        *0x4624e0 = CONCAT11(uVar3, uVar3 >> 8);\n        if (((uVar3 & 0x80000000) == 0) || (*0x4624e2 = 0x10,  0x35e < *0x4624e0)) {\n            *0x4624e2 = 0x20;\n        }\n        *0x462fb4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(7);\n        *0x462fb4 = *0x462fb4 + -1;\n        *0x462fb8 = (*pcVar2)(8);\n        *0x462fb8 = *0x462fb8 + -1;\n        *0x462fbc = (*pcVar2)(4);\n        *0x462fc0 = (*pcVar2)(0x1e);\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x462260);\n    }\n    return 1;\n}\n",
        "token_count": 425
    },
    "00429339": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00429339(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    if (arg_8h < 0) {\n        arg_8h = 0;\n    }\n    iVar1 = *(*in_ECX + -8);\n    if ((0 < arg_ch) && (arg_8h < iVar1)) {\n        fcn.00434779();\n        fcn.0040d130(*in_ECX + arg_8h, *in_ECX + arg_8h + arg_ch, ((iVar1 - arg_8h) - arg_ch) + 1);\n        *(*in_ECX + -8) = iVar1 - arg_ch;\n    }\n    return iVar1;\n}\n",
        "token_count": 178
    },
    "00429391": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00429391(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t arg_ch_00;\n    int32_t *in_ECX;\n    int32_t iVar1;\n    uint var_4h;\n    \n    fcn.00434779();\n    if (arg_8h < 0) {\n        arg_8h = 0;\n    }\n    arg_ch_00 = *in_ECX;\n    iVar1 = *(arg_ch_00 + -8);\n    if (iVar1 < arg_8h) {\n        arg_8h = iVar1;\n    }\n    iVar1 = iVar1 + 1;\n    if (*(arg_ch_00 + -4) < iVar1) {\n        fcn.0043463d(iVar1);\n        fcn.0040d130(*in_ECX, arg_ch_00, *(arg_ch_00 + -8) + 1);\n        fcn.00434738(arg_ch_00 + -0xc);\n    }\n    fcn.0040d130(*in_ECX + arg_8h + 1, *in_ECX + arg_8h, iVar1 - arg_8h);\n    *(*in_ECX + arg_8h) = arg_ch;\n    *(*in_ECX + -8) = iVar1;\n    return iVar1;\n}\n",
        "token_count": 296
    },
    "00429507": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00429507(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t *in_ECX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t arg_10h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_lstrlenA;\n    if ((arg_8h == 0) || (iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_8h),  iVar2 == 0)) {\n        var_8h = 0;\n    }\n    else {\n        if (arg_ch == 0) {\n            var_4h = 0;\n        }\n        else {\n            var_4h = (*pcVar1)(arg_ch);\n        }\n        uVar6 = *in_ECX;\n        var_8h = 0;\n        uVar5 = *(uVar6 - 8) + uVar6;\n        if (uVar6 < uVar5) {\n            do {\n                while (iVar3 = fcn.0040c847(uVar6, arg_8h),  iVar3 != 0) {\n                    var_8h = var_8h + 1;\n                    uVar6 = iVar3 + iVar2;\n                }\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(uVar6);\n                uVar6 = uVar6 + 1 + iVar3;\n            } while (uVar6 < uVar5);\n            if (0 < var_8h) {\n                fcn.00434779();\n                uVar6 = *in_ECX;\n                iVar3 = *(uVar6 - 8);\n                iVar7 = (var_4h - iVar2) * var_8h + iVar3;\n                if ((*(uVar6 - 4) < iVar7) || (1 < *(uVar6 - 0xc))) {\n                    fcn.0043463d(iVar7);\n                    fcn.0040d130(*in_ECX, uVar6, *(uVar6 - 8));\n                    fcn.00434738(uVar6 - 0xc);\n                }\n                uVar6 = *in_ECX;\n                uVar5 = *(uVar6 - 8) + uVar6;\n                for (; uVar6 < uVar5; uVar6 = uVar6 + 1 + iVar4) {\n                    iVar4 = fcn.0040c847(uVar6, arg_8h);\n                    while (iVar4 != 0) {\n                        uVar6 = iVar4 + var_4h;\n                        arg_10h = ((*in_ECX - iVar4) - iVar2) + iVar3;\n                        fcn.0040d6c0(uVar6, iVar2 + iVar4, arg_10h);\n                        fcn.0040d130(iVar4, arg_ch, var_4h);\n                        *(arg_10h + uVar6) = 0;\n                        iVar3 = iVar3 + (var_4h - iVar2);\n                        iVar4 = fcn.0040c847(uVar6, arg_8h);\n                    }\n                    iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(uVar6);\n                }\n                *(*in_ECX - 8) = iVar7;\n            }\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 827
    },
    "00429919": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00429919(uint *param_1, char *param_2, int32_t *param_3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint unaff_retaddr;\n    int32_t iStack16;\n    uint32_t uStack12;\n    \n    iStack16 = 0;\n    cVar1 = *param_2;\n    piVar6 = param_3;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.00434c00(iStack16);\n            fcn.0040db85(*param_1, unaff_retaddr, param_1);\n            fcn.00434c4f(0xffffffff);\n            return;\n        }\n        if (*param_2 == '%') {\n            param_2 = fcn.0040d6a2(param_2);\n            cVar1 = *param_2;\n            if (cVar1 == '%') goto code_r0x00429bd4;\n            iVar7 = 0;\n            param_3 = NULL;\n            if (cVar1 == '\\0') {\ncode_r0x004299a6:\n                param_3 = fcn.0040ddf5(param_2);\n                while ((piVar5 = piVar6,  *param_2 != '\\0' && (iVar2 = fcn.0040dcdb(*param_2),  iVar2 != 0))) {\n                    param_2 = fcn.0040d6a2(param_2);\n                }\n            }\n            else {\n                do {\n                    if (cVar1 == '#') {\n                        iStack16 = iStack16 + 2;\n                    }\n                    else if (cVar1 == '*') {\n                        param_3 = *piVar6;\n                        piVar6 = piVar6 + 1;\n                    }\n                    else if ((((cVar1 != '-') && (cVar1 != '+')) && (cVar1 != '0')) && (cVar1 != ' ')) break;\n                    param_2 = fcn.0040d6a2(param_2);\n                    cVar1 = *param_2;\n                } while (cVar1 != '\\0');\n                piVar5 = piVar6;\n                if (param_3 == NULL) goto code_r0x004299a6;\n            }\n            iVar2 = 0;\n            if (*param_2 == '.') {\n                param_2 = fcn.0040d6a2(param_2);\n                if (*param_2 == '*') {\n                    iVar2 = *piVar5;\n                    piVar5 = piVar5 + 1;\n                    param_2 = fcn.0040d6a2(param_2);\n                }\n                else {\n                    iVar2 = fcn.0040ddf5(param_2);\n                    while ((*param_2 != '\\0' && (iVar3 = fcn.0040dcdb(*param_2),  iVar3 != 0))) {\n                        param_2 = fcn.0040d6a2(param_2);\n                    }\n                }\n            }\n            uStack12 = 0;\n            iVar3 = fcn.0040dbec(param_2, 0x451bfc, 3);\n            if (iVar3 == 0) {\n                param_2 = param_2 + 3;\n                uStack12 = 0x40000;\n            }\n            else {\n                cVar1 = *param_2;\n                if (((cVar1 != 'F') && (cVar1 != 'L')) && (cVar1 != 'N')) {\n                    if (cVar1 == 'h') {\n                        uStack12 = 0x10000;\n                    }\n                    else {\n                        if (cVar1 != 'l') goto code_r0x00429a78;\n                        uStack12 = 0x20000;\n                    }\n                }\n                param_2 = fcn.0040d6a2(param_2);\n            }\ncode_r0x00429a78:\n            uVar4 = *param_2 | uStack12;\n            piVar6 = piVar5;\n            if (uVar4 < 0x10064) {\n                if ((uVar4 == 0x10063) || (uVar4 == 0x43)) {\ncode_r0x00429b30:\n                    iVar7 = 2;\n                }\n                else {\n                    if (uVar4 == 0x53) goto code_r0x00429b1d;\n                    if (uVar4 == 99) goto code_r0x00429b30;\n                    if (uVar4 != 0x73) {\n                        if (uVar4 == 0x10043) goto code_r0x00429b30;\n                        if (uVar4 != 0x10053) goto code_r0x00429ab9;\n                    }\ncode_r0x00429b38:\n                    if (*piVar5 == 0) goto code_r0x00429b42;\n                    iVar7 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*piVar5);\ncode_r0x00429b4e:\n                    if (iVar7 < 1) {\n                        iVar7 = 1;\n                    }\n                    piVar6 = piVar5 + 1;\n                    if (iVar7 == 0) goto code_r0x00429ab9;\n                }\ncode_r0x00429b60:\n                piVar6 = piVar5 + 1;\n                if ((iVar2 != 0) && (iVar2 <= iVar7)) {\n                    iVar7 = iVar2;\n                }\n                if (iVar7 <= param_3) {\n                    iVar7 = param_3;\n                }\n            }\n            else {\n                if (uVar4 == 0x10073) goto code_r0x00429b38;\n                if (uVar4 == 0x20043) goto code_r0x00429b30;\n                if (uVar4 == 0x20053) {\ncode_r0x00429b1d:\n                    if (*piVar5 != 0) {\n                        iVar7 = fcn.0040d465(*piVar5);\n                        goto code_r0x00429b4e;\n                    }\ncode_r0x00429b42:\n                    iVar7 = 6;\n                    goto code_r0x00429b60;\n                }\n                if (uVar4 == 0x20063) goto code_r0x00429b30;\n                if (uVar4 == 0x20073) goto code_r0x00429b1d;\ncode_r0x00429ab9:\n                cVar1 = *param_2;\n                if (cVar1 < 'j') {\n                    if (cVar1 == 'i') goto code_r0x00429bbb;\n                    if (cVar1 == 'G') goto code_r0x00429b86;\n                    if ((cVar1 == 'X') || (cVar1 == 'd')) goto code_r0x00429bbb;\n                    if (cVar1 == 'e') {\ncode_r0x00429b86:\n                        piVar6 = piVar6 + 2;\n                        iVar7 = 0x80;\n                        goto code_r0x00429bad;\n                    }\n                    if (cVar1 != 'f') {\n                        if (cVar1 != 'g') goto code_r0x00429bca;\n                        goto code_r0x00429b86;\n                    }\n                    piVar6 = piVar6 + 2;\n                    iVar7 = 0x80;\n                    iVar2 = iVar2 + 0x138;\n                }\n                else {\n                    if (cVar1 == 'n') {\n                        piVar6 = piVar6 + 1;\n                        goto code_r0x00429bca;\n                    }\n                    if (cVar1 == 'o') {\ncode_r0x00429bbb:\n                        if ((uStack12 & 0x40000) == 0) goto code_r0x00429ba7;\n                        piVar6 = piVar6 + 2;\n                    }\n                    else {\n                        if (cVar1 != 'p') {\n                            if ((cVar1 != 'u') && (cVar1 != 'x')) goto code_r0x00429bca;\n                            goto code_r0x00429bbb;\n                        }\ncode_r0x00429ba7:\n                        piVar6 = piVar6 + 1;\n                    }\n                    iVar7 = 0x20;\ncode_r0x00429bad:\n                    iVar2 = param_3 + iVar2;\n                }\n                if (iVar7 <= iVar2) {\n                    iVar7 = iVar2;\n                }\n            }\ncode_r0x00429bca:\n            iStack16 = iStack16 + iVar7;\n        }\n        else {\ncode_r0x00429bd4:\n            iVar7 = fcn.0040dbd6(param_2);\n            iStack16 = iStack16 + iVar7;\n        }\n        param_2 = fcn.0040d6a2(param_2);\n        cVar1 = *param_2;\n    } while( true );\n}\n",
        "token_count": 2026
    },
    "00429c7d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429c7d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    var_8h = &arg_10h;\n    iVar1 = (*_sym.imp.KERNEL32.dll_FormatMessageA)(0x500, arg_ch, 0, 0, &var_4h, 0, &var_8h);\n    if ((iVar1 == 0) || (var_4h == 0)) {\n        fcn.0042a04b();\n    }\n    fcn.00434959(var_4h);\n    (*_sym.imp.KERNEL32.dll_LocalFree)(var_4h);\n    return;\n}\n",
        "token_count": 175
    },
    "0042bcd7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042bcd7(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t in_ECX;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_8h;\n    \n    fcn.0042bf69(&var_2ch, arg_8h, arg_14h);\n    if (arg_10h != 0) {\n        fcn.0040d130(&var_1ch, arg_10h, 0x10);\n    }\n    var_8h = arg_ch;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x1c), 0x404, 0, &var_2ch);\n    return;\n}\n",
        "token_count": 178
    },
    "0042bd25": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042bd25(uint arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    uint32_t var_8h;\n    \n    fcn.0042bf69(&var_2ch, arg_8h, arg_14h);\n    if (arg_10h != 0) {\n        fcn.0040d130(&var_1ch, arg_10h, 0x10);\n    }\n    iVar1 = fcn.00447f81();\n    var_ch = *(iVar1 + 0xc);\n    var_8h = arg_ch & 0xffff;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x1c), 0x404, 0, &var_2ch);\n    return;\n}\n",
        "token_count": 222
    },
    "0042bfbc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042bfbc(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    \n    iVar1 = fcn.00447cf1();\n    iVar2 = *(iVar1 + 0xcc);\n    if (arg_8h == 0) {\n        if ((*(in_ECX + 0x24) & arg_ch) != 0) {\n            if (*(iVar1 + 0xd0) == in_ECX) {\n                fcn.0043120d(1);\n            }\n            if ((iVar2 != 0) && (*(iVar2 + 0x1c) != 0)) {\n                fcn.0040cfc0(&var_2ch, 0, 0x2c);\n                var_24h = *(in_ECX + 0x1c);\n                var_2ch = 0x28;\n                var_28h = 1;\n                var_20h = var_24h;\n                (*_sym.imp.USER32.dll_SendMessageA)(*(iVar2 + 0x1c), 0x405, 0, &var_2ch);\n            }\n            *(in_ECX + 0x24) = *(in_ECX + 0x24) & ~arg_ch;\n        }\n    }\n    else if ((*(in_ECX + 0x24) & arg_ch) == 0) {\n        iVar2 = fcn.00447f81();\n        *(iVar2 + 0x1034) = 0x42c100;\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) | arg_ch;\n    }\n    return 1;\n}\n",
        "token_count": 419
    },
    "0042d8ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042d8ec(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    uint uStack8;\n    \n    if (*(param_1 + 0x10) == 0) {\n        uStack8 = 0xc;\n        iVar1 = fcn.0042d82e(param_1 + 0x14, *(param_1 + 0x18));\n        iVar3 = *(param_1 + 0x18);\n        puVar2 = iVar1 + -8 + iVar3 * 0xc;\n        if (-1 < iVar3 + -1) {\n            do {\n                *puVar2 = *(param_1 + 0x10);\n                *(param_1 + 0x10) = puVar2;\n                puVar2 = puVar2 + -3;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    puVar2 = *(param_1 + 0x10);\n    *(param_1 + 0x10) = *puVar2;\n    puVar2[1] = uStack8;\n    *puVar2 = unaff_ESI;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    puVar2[2] = 0;\n    return;\n}\n",
        "token_count": 321
    },
    "0042ec43": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042ec43(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) != 0) {\n        fcn.00434eca(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    if (param_3 != 0) {\n        uVar1 = fcn.00434ea1(param_2 << 2);\n        *(param_1 + 4) = uVar1;\n        fcn.0040cfc0(uVar1, 0, param_2 << 2);\n    }\n    *(param_1 + 8) = param_2;\n    return;\n}\n",
        "token_count": 173
    },
    "0042ecdc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042ecdc(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    \n    if (*(param_1 + 0x10) == 0) {\n        iVar2 = fcn.0042d82e(param_1 + 0x14, *(param_1 + 0x18), 0xc);\n        iVar4 = *(param_1 + 0x18);\n        puVar3 = iVar2 + -8 + iVar4 * 0xc;\n        if (-1 < iVar4 + -1) {\n            do {\n                *puVar3 = *(param_1 + 0x10);\n                *(param_1 + 0x10) = puVar3;\n                puVar3 = puVar3 + -3;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n    }\n    puVar3 = *(param_1 + 0x10);\n    uVar1 = *puVar3;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    *(param_1 + 0x10) = uVar1;\n    puVar3[1] = 0;\n    puVar3[2] = 0;\n    return;\n}\n",
        "token_count": 305
    },
    "0042ef10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042ef10(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) != 0) {\n        fcn.00434eca(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    if (param_3 != 0) {\n        uVar1 = fcn.00434ea1(param_2 << 2);\n        *(param_1 + 4) = uVar1;\n        fcn.0040cfc0(uVar1, 0, param_2 << 2);\n    }\n    *(param_1 + 8) = param_2;\n    return;\n}\n",
        "token_count": 173
    },
    "0042efd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0042efd0(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    \n    if (*(param_1 + 0x10) == 0) {\n        iVar2 = fcn.0042d82e(param_1 + 0x14, *(param_1 + 0x18), 0x10);\n        iVar4 = *(param_1 + 0x18);\n        puVar3 = iVar2 + -0xc + iVar4 * 0x10;\n        if (-1 < iVar4 + -1) {\n            do {\n                *puVar3 = *(param_1 + 0x10);\n                *(param_1 + 0x10) = puVar3;\n                puVar3 = puVar3 + -4;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n    }\n    puVar3 = *(param_1 + 0x10);\n    uVar1 = *puVar3;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    *(param_1 + 0x10) = uVar1;\n    fcn.0040d130(puVar3 + 2, 0x45b93c, 4);\n    puVar3[3] = 0;\n    return puVar3;\n}\n",
        "token_count": 328
    },
    "00430f98": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00430f98(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CWnd.0;\n    *(unaff_EBP + -4) = 0;\n    if ((((extraout_ECX[7] != NULL) && (extraout_ECX != 0x45fb48)) && (extraout_ECX != 0x45fb08)) &&\n       ((extraout_ECX != 0x45fac8 && (extraout_ECX != 0x45fa88)))) {\n        fcn.00431156();\n    }\n    if (extraout_ECX[0xd] != NULL) {\n        (**(*extraout_ECX[0xd] + 4))(1);\n    }\n    pcVar1 = extraout_ECX[0xe];\n    if ((pcVar1 != NULL) && (*(pcVar1 + 0x24) == extraout_ECX)) {\n        *(pcVar1 + 0x24) = 0;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0043400d();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 349
    },
    "0043071d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n\nuint fcn.0043071d(void)\n\n{\n    int32_t *arg_8h;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *puVar4;\n    uint *puVar5;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h_2;\n    uint var_14h_2;\n    uint var_18h;\n    uint var_10h;\n    uint var_40h;\n    uint var_24h;\n    uint var_14h;\n    uint var_ch_2;\n    uint var_4h;\n    \n    fcn.0040d018();\n    *(unaff_EBP + -0x10) = &stack0xffffffc0;\n    iVar1 = fcn.00448e31(0x447881);\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x14) = iVar1;\n    puVar4 = iVar1 + 0x34;\n    puVar5 = unaff_EBP + -0x40;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    iVar3 = *(unaff_EBP + 0x10);\n    arg_8h = *(unaff_EBP + 8);\n    *(iVar1 + 0x34) = *(unaff_EBP + 0xc);\n    *(iVar1 + 0x3c) = *(unaff_EBP + 0x14);\n    uVar2 = *(unaff_EBP + 0x18);\n    *(iVar1 + 0x38) = iVar3;\n    *(iVar1 + 0x40) = uVar2;\n    if ((iVar3 == 2) && (arg_8h[0xd] != NULL)) {\n        (**(*arg_8h[0xd] + 0x5c))(0);\n    }\n    *(unaff_EBP + 8) = 0;\n    if (iVar3 == 0x110) {\n        fcn.004305aa(arg_8h, unaff_EBP + -0x24, unaff_EBP + 8);\n    }\n    uVar2 = (**(*arg_8h + 0x98))(iVar3, *(unaff_EBP + 0x14), *(unaff_EBP + 0x18));\n    *(unaff_EBP + 0x18) = uVar2;\n    if (iVar3 == 0x110) {\n        fcn.004305cd(arg_8h, unaff_EBP + -0x24);\n    }\n    uVar2 = *(unaff_EBP + 0x18);\n    puVar4 = unaff_EBP + -0x40;\n    puVar5 = iVar1 + 0x34;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 780
    },
    "0043086c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0043086c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    iVar1 = fcn.00447fa7();\n    if ((*(iVar1 + 0x14) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.00434e8f(0x43e31a);\n        iVar3 = fcn.00434ea1(0x48);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.004369dc(0x450a68, 0x1c, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x14) = uVar4;\n        fcn.00434e8f(uVar2);\n    }\n    uVar2 = *(iVar1 + 0x14);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 354
    },
    "00430d91": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00430d91(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    iVar1 = fcn.00448e31(0x447881);\n    if (*(iVar1 + 0x14) != unaff_retaddr) {\n        if (*(iVar1 + 0x2c) == 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            iVar3 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(5, fcn.00430b9b, 0, uVar2);\n            *(iVar1 + 0x2c) = iVar3;\n            if (iVar3 == 0) {\n                fcn.0042a04b();\n            }\n        }\n        *(iVar1 + 0x14) = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 207
    },
    "00430ddd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00430ddd(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00448e31(0x447881);\n    iVar2 = fcn.00447f81();\n    if ((*(iVar2 + 0x14) != '\\0') && (*(iVar1 + 0x2c) != 0)) {\n        (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(*(iVar1 + 0x2c));\n        *(iVar1 + 0x2c) = 0;\n    }\n    if (*(iVar1 + 0x14) != 0) {\n        *(iVar1 + 0x14) = 0;\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 171
    },
    "00431032": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431032(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    \n    iVar2 = fcn.00435e7c();\n    if (iVar2 == 0) goto code_r0x0043107d;\n    if (*(iVar2 + 0x1c) == param_1) {\n        iVar3 = fcn.00447f81();\n        if (*(iVar3 + 0x14) == '\\0') {\n            iVar3 = fcn.00447f81();\n            if (iVar2 == *(iVar3 + 4)) {\n                iVar3 = fcn.0044391b();\n                if (iVar3 == 0) goto code_r0x00431072;\n            }\n            fcn.0044b325(0);\n        }\ncode_r0x00431072:\n        *(iVar2 + 0x1c) = 0;\n    }\n    if (*(iVar2 + 0x20) == param_1) {\n        *(iVar2 + 0x20) = 0;\n    }\ncode_r0x0043107d:\n    if (param_1[0xc] != NULL) {\n        (**(*param_1[0xc] + 0x50))();\n        param_1[0xc] = 0;\n    }\n    if (param_1[0xd] != NULL) {\n        (**(*param_1[0xd] + 4))(1);\n    }\n    param_1[0xd] = 0;\n    if ((*(param_1 + 9) & 1) != 0) {\n        iVar2 = fcn.00447cf1();\n        iVar2 = *(iVar2 + 0xcc);\n        if ((iVar2 != 0) && (*(iVar2 + 0x1c) != 0)) {\n            fcn.0040cfc0(&var_2ch, 0, 0x2c);\n            var_24h = param_1[7];\n            var_2ch = 0x28;\n            var_28h = 1;\n            var_20h = var_24h;\n            (*_sym.imp.USER32.dll_SendMessageA)(*(iVar2 + 0x1c), 0x405, 0, &var_2ch);\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetWindowLongA;\n    iVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(param_1[7], 0xfffffffc);\n    fcn.00430845();\n    iVar3 = (*pcVar1)(param_1[7], 0xfffffffc);\n    if (iVar3 == iVar2) {\n        piVar4 = (**(*param_1 + 0x80))();\n        if (*piVar4 != 0) {\n            (*_sym.imp.USER32.dll_SetWindowLongA)(param_1[7], 0xfffffffc, *piVar4);\n        }\n    }\n    fcn.0043095c();\n    (**(*param_1 + 0xa4))();\n    return;\n}\n",
        "token_count": 731
    },
    "00431156": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00431156(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x1c) == 0) {\n        return 0;\n    }\n    fcn.0043086c(0);\n    iVar1 = fcn.0042ed74(*(param_1 + 0x1c));\n    if (*(param_1 + 0x38) == NULL) {\n        uVar2 = (*_sym.imp.USER32.dll_DestroyWindow)(*(param_1 + 0x1c));\n    }\n    else {\n        uVar2 = (**(**(param_1 + 0x38) + 0x50))();\n    }\n    if (iVar1 == 0) {\n        fcn.0043095c();\n    }\n    return uVar2;\n}\n",
        "token_count": 191
    },
    "0043120d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043120d(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = fcn.00447cf1();\n    if ((*(iVar4 + 0xcc) != 0) && (iVar1 = *(*(iVar4 + 0xcc) + 0x1c),  iVar1 != 0)) {\n        (*_sym.imp.USER32.dll_SendMessageA)(iVar1, 0x401, 0, 0);\n    }\n    piVar2 = *(iVar4 + 0x108);\n    if ((param_1 != 0) && (piVar2 != NULL)) {\n        iVar3 = (*_sym.imp.USER32.dll_GetKeyState)(1);\n        if (-1 < iVar3) {\n            (**(*piVar2 + 0xdc))(0xffffffff);\n        }\n    }\n    return;\n}\n",
        "token_count": 213
    },
    "0043184a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0043184a(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    while( true ) {\n        if (arg_8h[4] == 0) {\n            return NULL;\n        }\n        if ((((arg_ch == *arg_8h) && (arg_10h == arg_8h[1])) && (arg_8h[2] <= arg_14h)) &&\n           (arg_14h < arg_8h[3] || arg_14h == arg_8h[3])) break;\n        arg_8h = arg_8h + 6;\n    }\n    return arg_8h;\n}\n",
        "token_count": 168
    },
    "0043211e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0043211e(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    if ((param_1 != NULL) && (param_1[7] != 0)) {\n        iVar2 = (**(*param_1 + 0xb0))();\n        piVar3 = param_1;\n        if (iVar2 == 0) {\n            param_1 = fcn.00431f8e();\n            piVar3 = param_1;\n        }\n        while (piVar1 = piVar3,  piVar1 != NULL) {\n            piVar3 = fcn.00431f8e();\n            param_1 = piVar1;\n        }\n        return param_1;\n    }\n    return NULL;\n}\n",
        "token_count": 188
    },
    "004321af": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004321af(uint hDlg, uint nIDDlgItem, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (*_sym.imp.USER32.dll_GetDlgItem)(hDlg, nIDDlgItem);\n    pcVar1 = _sym.imp.USER32.dll_GetTopWindow;\n    if (iVar2 != 0) {\n        iVar3 = (*_sym.imp.USER32.dll_GetTopWindow)(iVar2);\n        if ((iVar3 != 0) && (iVar3 = fcn.004321af(iVar2, nIDDlgItem, arg_10h),  iVar3 != 0)) {\n            return iVar3;\n        }\n        if (arg_10h == 0) {\n            iVar2 = fcn.004308de();\n            return iVar2;\n        }\n        iVar2 = fcn.00430905(iVar2);\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    iVar2 = (*pcVar1)(hDlg);\n    while( true ) {\n        if (iVar2 == 0) {\n            return 0;\n        }\n        iVar3 = fcn.004321af(iVar2, nIDDlgItem, arg_10h);\n        if (iVar3 != 0) break;\n        iVar2 = (*_sym.imp.USER32.dll_GetWindow)(iVar2, 2);\n    }\n    return iVar3;\n}\n",
        "token_count": 328
    },
    "00432228": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00432228(uint arg_8h, uint Msg, uint wParam, uint lParam, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    code *pcVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetTopWindow;\n    for (arg_8h_00 = (*_sym.imp.USER32.dll_GetTopWindow)(arg_8h); arg_8h_00 != 0;\n        arg_8h_00 = (*_sym.imp.USER32.dll_GetWindow)(arg_8h_00, 2)) {\n        if (arg_1ch == 0) {\n            (*_sym.imp.USER32.dll_SendMessageA)(arg_8h_00, Msg, wParam, lParam);\n        }\n        else {\n            iVar2 = fcn.00430905(arg_8h_00);\n            if (iVar2 != 0) {\n                fcn.0043071d(iVar2, *(iVar2 + 0x1c), Msg, wParam, lParam);\n            }\n        }\n        if (arg_18h != 0) {\n            iVar2 = (*pcVar1)(arg_8h_00);\n            if (iVar2 != 0) {\n                fcn.00432228(arg_8h_00, Msg, wParam, lParam, arg_18h, arg_1ch);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 327
    },
    "004323f5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004323f5(int32_t *param_1, int32_t param_2, uint *param_3, uint param_4)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (*0x46000c < 0x333) {\n        uVar1 = 0;\n    }\n    else {\n        iVar3 = param_1[7];\n        if (param_2 != 2) {\n            iVar2 = (**(*param_1 + 0x68))(param_2);\n            if (iVar2 != 0) {\n                iVar3 = *(iVar2 + 0x1c);\n                param_2 = 2;\n            }\n        }\n        *param_3 = 0x1c;\n        param_3[1] = param_4;\n        uVar1 = (*_sym.imp.USER32.dll_GetScrollInfo)(iVar3, param_2, param_3);\n    }\n    return uVar1;\n}\n",
        "token_count": 224
    },
    "00432489": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00432489(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint uVar3;\n    int32_t var_10h;\n    int32_t var_ch;\n    \n    iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(in_ECX + 0x1c));\n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    if (((iVar2 == 0) && (arg_10h == 0)) && (arg_14h == 0)) {\n        uVar3 = 5;\n        iVar2 = *(in_ECX + 0x1c);\n        while( true ) {\n            iVar2 = (*pcVar1)(iVar2, uVar3);\n            if (iVar2 == 0) break;\n            (*_sym.imp.USER32.dll_GetWindowRect)(iVar2, &var_10h);\n            fcn.0043cd02(&var_10h);\n            (*_sym.imp.USER32.dll_SetWindowPos)(iVar2, 0, var_10h + arg_8h, var_ch + arg_ch, 0, 0, 0x15);\n            uVar3 = 2;\n        }\n    }\n    else {\n        (*_sym.imp.USER32.dll_ScrollWindow)(*(in_ECX + 0x1c), arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    if ((*(in_ECX + 0x34) != NULL) && (arg_10h == 0)) {\n        (**(**(in_ECX + 0x34) + 0x58))(arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 410
    },
    "0043252f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0043252f(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t arg_14h, int32_t *lprcDst, int32_t *arg_1ch, \n            int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t in_ECX;\n    int32_t hWinPosInfo;\n    int32_t lprcSrc;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = arg_20h;\n    var_ch = 0;\n    var_10h = 0;\n    if (arg_1ch == NULL) {\n        (*_sym.imp.USER32.dll_GetClientRect)(*(in_ECX + 0x1c), &lprcSrc);\n    }\n    else {\n        lprcSrc = *arg_1ch;\n        var_1ch = arg_1ch[1];\n        var_18h = arg_1ch[2];\n        var_14h = arg_1ch[3];\n    }\n    if (arg_14h == 1) {\n        hWinPosInfo = 0;\n    }\n    else {\n        hWinPosInfo = (*_sym.imp.USER32.dll_BeginDeferWindowPos)(8);\n    }\n    for (iVar2 = (*_sym.imp.USER32.dll_GetTopWindow)(*(in_ECX + 0x1c)); iVar2 != 0;\n        iVar2 = (*_sym.imp.USER32.dll_GetWindow)(iVar2, 2)) {\n        uVar3 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(iVar2);\n        uVar3 = uVar3 & 0xffff;\n        iVar4 = fcn.00430905(iVar2);\n        iVar1 = iVar2;\n        if ((((uVar3 != arg_10h) && (iVar1 = var_4h,  arg_8h <= uVar3)) && (uVar3 <= arg_ch)) && (iVar4 != 0)) {\n            (*_sym.imp.USER32.dll_SendMessageA)(iVar2, 0x361, 0, &hWinPosInfo);\n            iVar1 = var_4h;\n        }\n        var_4h = iVar1;\n    }\n    if (arg_14h == 1) {\n        if (arg_20h == 0) {\n            lprcDst[2] = var_10h;\n            lprcDst[1] = 0;\n            *lprcDst = 0;\n            lprcDst[3] = var_ch;\n        }\n        else {\n            (*_sym.imp.USER32.dll_CopyRect)(lprcDst, &lprcSrc);\n        }\n    }\n    else {\n        if ((arg_10h != 0) && (var_4h != 0)) {\n            piVar5 = fcn.004308de(var_4h);\n            if (arg_14h == 2) {\n                lprcSrc = lprcSrc + *lprcDst;\n                var_1ch = var_1ch + lprcDst[1];\n                var_18h = var_18h - lprcDst[2];\n                var_14h = var_14h - lprcDst[3];\n            }\n            (**(*piVar5 + 0x60))(&lprcSrc, 0);\n            fcn.00432669(&hWinPosInfo, var_4h, &lprcSrc);\n        }\n        if (hWinPosInfo != 0) {\n            (*_sym.imp.USER32.dll_EndDeferWindowPos)(hWinPosInfo);\n        }\n    }\n    return;\n}\n",
        "token_count": 903
    },
    "00432669": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00432669(int32_t *arg_8h, uint hWnd, int32_t *lprc2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint lpRect;\n    uint var_8h;\n    \n    uVar3 = (*_sym.imp.USER32.dll_GetParent)(hWnd);\n    if ((arg_8h == NULL) || (*arg_8h != 0)) {\n        (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n        pcVar2 = _sym.imp.USER32.dll_ScreenToClient;\n        (*_sym.imp.USER32.dll_ScreenToClient)(uVar3, &lpRect);\n        (*pcVar2)(uVar3, &var_8h);\n        iVar4 = (*_sym.imp.USER32.dll_EqualRect)(&lpRect, lprc2);\n        if (iVar4 == 0) {\n            iVar4 = lprc2[1];\n            iVar1 = *lprc2;\n            if (arg_8h == NULL) {\n                (*_sym.imp.USER32.dll_SetWindowPos)(hWnd, 0, iVar1, iVar4, lprc2[2] - iVar1, lprc2[3] - iVar4, 0x14);\n            }\n            else {\n                iVar4 = (*_sym.imp.USER32.dll_DeferWindowPos)\n                                  (*arg_8h, hWnd, 0, iVar1, iVar4, lprc2[2] - iVar1, lprc2[3] - iVar4);\n                *arg_8h = iVar4;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 381
    },
    "0043272e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043272e(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t in_ECX;\n    uint32_t uVar7;\n    uint var_4h;\n    \n    iVar4 = fcn.00432011();\n    uVar7 = arg_8h & 0xfff0;\n    if ((uVar7 == 0xf040) || (uVar7 == 0xf050)) {\n        if (arg_ch != 0x75) {\n            return 0;\n        }\n        if (iVar4 == 0) {\n            return 0;\n        }\n        fcn.00433e88();\n    }\n    else {\n        if ((uVar7 != 0xf060) && (uVar7 != 0xf100)) {\n            return 0;\n        }\n        if (((uVar7 == 0xf060) || (arg_ch != 0)) && (iVar4 != 0)) {\n            uVar1 = *(in_ECX + 0x1c);\n            uVar5 = (*_sym.imp.USER32.dll_GetFocus)();\n            pcVar2 = _sym.imp.USER32.dll_SetActiveWindow;\n            uVar6 = (*_sym.imp.USER32.dll_SetActiveWindow)(*(iVar4 + 0x1c));\n            fcn.004308de(uVar6);\n            (*_sym.imp.USER32.dll_SendMessageA)(*(iVar4 + 0x1c), 0x112, arg_8h, arg_ch);\n            pcVar3 = _sym.imp.USER32.dll_IsWindow;\n            iVar4 = (*_sym.imp.USER32.dll_IsWindow)(uVar1);\n            if (iVar4 != 0) {\n                (*pcVar2)(uVar1);\n            }\n            iVar4 = (*pcVar3)(uVar5);\n            if (iVar4 != 0) {\n                (*_sym.imp.USER32.dll_SetFocus)(uVar5);\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 471
    },
    "00432903": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00432903(uint32_t arg_8h, uint wParam, uint lParam, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x38) == 0) {\n        iVar1 = fcn.0043295e(arg_8h, wParam, lParam, arg_14h);\n    }\n    else {\n        iVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x1c), arg_8h + 0x2000, wParam, lParam);\n        if (((arg_8h < 0x132) || (0x138 < arg_8h)) || (iVar1 != 0)) {\n            if (arg_14h != NULL) {\n                *arg_14h = iVar1;\n            }\n            iVar1 = 1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 213
    },
    "00432a73": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00432a73(int16_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 == 0) {\n        iVar1 = fcn.00447cf1();\n        if ((*(iVar1 + 0xdf) & 0x40) == 0) {\n            fcn.0043120d(1);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 91
    },
    "004338e1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004338e1(int32_t *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    uint unaff_retaddr;\n    \n    iVar1 = fcn.00430923(param_2);\n    if (iVar1 != 0) {\n        (**(*param_1 + 0x50))();\n        piVar2 = (**(*param_1 + 0x80))();\n        uVar3 = fcn.004309ba();\n        iVar1 = (*_sym.imp.USER32.dll_SetWindowLongA)(unaff_retaddr, 0xfffffffc, uVar3);\n        if (*piVar2 == 0) {\n            *piVar2 = iVar1;\n        }\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 191
    },
    "00433f69": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00433f69(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if ((param_1 != 0) && (*(param_1 + 0x38) == 0)) {\n        uVar1 = (*_sym.imp.USER32.dll_GetParent)(*(param_1 + 0x1c));\n        iVar2 = fcn.0042ed74(uVar1);\n        if ((iVar2 != 0) && (*(iVar2 + 0x34) != NULL)) {\n            (**(**(iVar2 + 0x34) + 0x8c))(param_1);\n        }\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "00433fa6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00433fa6(int32_t param_1, int32_t param_2)\n\n{\n    if ((*(param_1 + 0x38) == 0) && (*(param_2 + 0x34) != NULL)) {\n        (**(**(param_2 + 0x34) + 0x8c))(param_1);\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "00434545": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00434545(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *param_2;\n    if (*(iVar1 + -0xc) < 0) {\n        *param_1 = *0x45b93c;\n        fcn.00434959(*param_2);\n    }\n    else {\n        *param_1 = iVar1;\n        (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(iVar1 + -0xc);\n    }\n    return param_1;\n}\n",
        "token_count": 132
    },
    "0043475b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043475b(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*(*param_1 + -8) != 0) {\n        if (-1 < *(*param_1 + -0xc)) {\n            if (*param_1 + -0xc != *0x45b940) {\n                iVar1 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(*param_1 + -0xc);\n                if (iVar1 < 1) {\n                    fcn.004346bf();\n                }\n                *param_1 = *0x45b93c;\n            }\n            return;\n        }\n        fcn.00434959(0x45fdd0);\n    }\n    return;\n}\n",
        "token_count": 165
    },
    "00434779": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434779(int32_t *param_1)\n\n{\n    int32_t arg_ch;\n    \n    arg_ch = *param_1;\n    if (1 < *(arg_ch + -0xc)) {\n        fcn.00434707();\n        fcn.0043463d(*(arg_ch + -8));\n        fcn.0040d130(*param_1, arg_ch, *(arg_ch + -8) + 1);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "004347a7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004347a7(int32_t *param_1, int32_t param_2)\n\n{\n    if ((1 < *(*param_1 + -0xc)) || (*(*param_1 + -4) < param_2)) {\n        fcn.00434707();\n        fcn.0043463d(param_2);\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "00434909": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00434909(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = *param_1;\n    iVar2 = *param_2;\n    if (iVar1 != iVar2) {\n        if (((*(iVar1 + -0xc) < 0) && (iVar1 + -0xc != *0x45b940)) || (*(iVar2 + -0xc) < 0)) {\n            fcn.004348dc(*(iVar2 + -8), iVar2);\n        }\n        else {\n            fcn.00434707();\n            iVar1 = *param_2;\n            *param_1 = iVar1;\n            (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(iVar1 + -0xc);\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 198
    },
    "00434b4d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00434b4d(int32_t *param_1, int32_t param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    if (param_2 != 0) {\n        iVar1 = *param_1;\n        if ((*(iVar1 + -0xc) < 2) && (*(iVar1 + -8) + param_2 <= *(iVar1 + -4))) {\n            fcn.0040d130(*(iVar1 + -8) + iVar1, param_3, param_2);\n            *(*param_1 + -8) = *(*param_1 + -8) + param_2;\n            *(*(*param_1 + -8) + *param_1) = 0;\n        }\n        else {\n            fcn.004349c1(*(iVar1 + -8), iVar1, param_2, param_3);\n            fcn.00434738(iVar1 + -0xc);\n        }\n    }\n    return;\n}\n",
        "token_count": 222
    },
    "00434c00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00434c00(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t arg_ch;\n    int32_t iVar1;\n    \n    arg_ch = *param_1;\n    if ((1 < *(arg_ch + -0xc)) || (*(arg_ch + -4) < param_2)) {\n        iVar1 = *(arg_ch + -8);\n        if (param_2 < iVar1) {\n            param_2 = iVar1;\n        }\n        fcn.0043463d(param_2);\n        fcn.0040d130(*param_1, arg_ch, iVar1 + 1);\n        *(*param_1 + -8) = iVar1;\n        fcn.00434738(arg_ch + -0xc);\n    }\n    return *param_1;\n}\n",
        "token_count": 184
    },
    "00434df9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00434df9(int32_t param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    \n    if ((param_3 == 0) && (param_1 != 0)) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, param_2, 0xffffffff, param_1, param_3);\n    if (0 < iVar1) {\n        *(param_1 + -2 + iVar1 * 2) = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 142
    },
    "00435071": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00435071(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CDialog.0;\n    *(unaff_EBP + -4) = 0;\n    if (extraout_ECX[7] != NULL) {\n        fcn.00431156();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00430f98();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 194
    },
    "00435926": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00435926(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_104h;\n    uint var_4h;\n    \n    iVar1 = fcn.004359aa(arg_8h, &var_104h, 0x100);\n    if (0x100U - iVar1 < 3) {\n        iVar2 = 0x100;\n        do {\n            iVar3 = iVar2 + 0x100;\n            fcn.00434c00(iVar2 + 0xff, iVar3);\n            iVar1 = fcn.004359aa();\n            iVar2 = iVar3;\n        } while (iVar3 - iVar1 < 3);\n        fcn.00434c4f(0xffffffff);\n    }\n    else {\n        fcn.00434959(&var_104h);\n    }\n    return 0 < iVar1;\n}\n",
        "token_count": 210
    },
    "00435a49": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00435a49(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    iVar1 = fcn.00447fa7();\n    if ((*(iVar1 + 0x18) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.00434e8f(0x43e31a);\n        iVar3 = fcn.00434ea1(0x48);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.004369dc(0x451fd0, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x18) = uVar4;\n        fcn.00434e8f(uVar2);\n    }\n    uVar2 = *(iVar1 + 0x18);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 351
    },
    "00435b45": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00435b45(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.00435b1b();\n    uVar1 = (*_sym.imp.USER32.dll_DestroyMenu)(uVar1);\n    return uVar1;\n}\n",
        "token_count": 88
    },
    "00435ca1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00435ca1(uint lpString2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GlobalLock;\n    if (*(in_ECX + 0x98) != 0) {\n        var_4h = in_ECX;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*(in_ECX + 0x98));\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(*(iVar2 + 2) + iVar2, lpString2);\n        if (iVar2 == 0) {\n            iVar2 = sub.WINSPOOL.DRV_OpenPrinterA(lpString2, &var_4h, 0);\n            if (iVar2 != 0) {\n                if (*(in_ECX + 0x94) != 0) {\n                    fcn.0043e2e4(*(in_ECX + 0x94));\n                }\n                uVar3 = sub.WINSPOOL.DRV_DocumentPropertiesA(0, var_4h, lpString2, 0, 0, 0);\n                uVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x42, uVar3);\n                *(in_ECX + 0x94) = uVar3;\n                uVar3 = (*pcVar1)(uVar3);\n                iVar2 = sub.WINSPOOL.DRV_DocumentPropertiesA(0, var_4h, lpString2, uVar3, 0, 2);\n                if (iVar2 != 1) {\n                    fcn.0043e2e4(*(in_ECX + 0x94));\n                    *(in_ECX + 0x94) = 0;\n                }\n                sub.WINSPOOL.DRV_ClosePrinter(var_4h);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 435
    },
    "00435f71": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00435f71(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint unaff_retaddr;\n    \n    iVar2 = fcn.00447fa7();\n    piVar1 = *(iVar2 + 4);\n    if (piVar1 != NULL) {\n        if (piVar1[0x15] != NULL) {\n            (*piVar1[0x15])(1, 0);\n        }\n        if (param_2 != 0) {\n            (**(*piVar1 + 0x78))();\n        }\n        *(iVar2 + 4) = 0;\n    }\n    fcn.00436015(0);\n    fcn.0040e434(unaff_retaddr);\n    return;\n}\n",
        "token_count": 179
    },
    "00435fb6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00435fb6(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.00447f81();\n    if (*(iVar1 + 0x14) == '\\0') {\n        iVar1 = fcn.00447cf1();\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        uVar2 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(0xffffffff, 0x436460, 0, uVar2);\n        *(iVar1 + 0x30) = uVar2;\n        iVar1 = fcn.00448ef3(0x4478e6);\n        if (*(iVar1 + 0x14) != 0) {\n            iVar3 = fcn.00447f81();\n            (**(iVar1 + 0x14))(*(iVar3 + 8));\n        }\n        fcn.00448e31(0x44880e);\n    }\n    return;\n}\n",
        "token_count": 227
    },
    "00436015": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00436015(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_retaddr;\n    \n    fcn.004368d9();\n    fcn.004368e2(0xffffffff);\n    if (unaff_retaddr == 0) {\n        iVar1 = fcn.00448ea8();\n        if ((iVar1 != 0) && (*(iVar1 + 0xcc) != NULL)) {\n            (**(**(iVar1 + 0xcc) + 0x58))();\n            if (*(iVar1 + 0xcc) != NULL) {\n                (**(**(iVar1 + 0xcc) + 4))(1);\n            }\n            *(iVar1 + 0xcc) = 0;\n        }\n    }\n    if (*0x45ff74 != 0) {\n        fcn.00448dd8(unaff_retaddr, 0);\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "0043643b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0043643b(uint param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (param_2[1] == 1) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        if (param_2[1] == 0xf) {\n            (*_sym.imp.USER32.dll_ValidateRect)(*param_2, 0);\n        }\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 109
    },
    "004366eb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.004366eb(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_2 != 0) {\n        iVar1 = fcn.004366d9(param_1);\n        if (iVar1 != 0) {\n            return param_1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 81
    },
    "004367e5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004367e5(int32_t *param_1)\n\n{\n    if ((0 < param_1[1]) && (param_1 != NULL)) {\n        (**(*param_1 + 4))(1);\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "00436a41": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.00436a41(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_8h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    arg_8h_00 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = &stack0xffffffec;\n    if (arg_8h_00 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = fcn.0042ed74(arg_8h_00);\n        if (iVar2 == 0) {\n            iVar2 = fcn.0042ed74(arg_8h_00);\n            if (iVar2 == 0) {\n                uVar3 = fcn.00434e8f(0x43e31a);\n                *(unaff_EBP + -4) = 0;\n                *(unaff_EBP + 8) = uVar3;\n                iVar2 = fcn.0043670b();\n                if (iVar2 == 0) {\n                    fcn.0042a04b();\n                }\n                piVar4 = fcn.0042edc9(arg_8h_00);\n                uVar3 = *(unaff_EBP + 8);\n                *(unaff_EBP + -4) = 0xffffffff;\n                *piVar4 = iVar2;\n                fcn.00434e8f(uVar3);\n                iVar1 = *(extraout_ECX + 0x40);\n                *(iVar1 + iVar2) = arg_8h_00;\n                if (*(extraout_ECX + 0x44) == 2) {\n                    *(iVar1 + iVar2 + 4) = arg_8h_00;\n                }\n            }\n            else {\n                iVar1 = *(extraout_ECX + 0x40);\n                *(iVar1 + iVar2) = arg_8h_00;\n                if (*(extraout_ECX + 0x44) == 2) {\n                    *(iVar1 + iVar2 + 4) = arg_8h_00;\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar2;\n}\n",
        "token_count": 611
    },
    "00436b00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00436b00(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    if (param_1 != 0) {\n        var_8h = -(*(param_1 + 0x2c) != 0);\n        while (var_8h != 0) {\n            fcn.0042ee5b(&var_8h, &var_ch, &var_4h);\n            puVar1 = *(param_1 + 0x40) + var_4h;\n            *puVar1 = 0;\n            if (*(param_1 + 0x44) == 2) {\n                puVar1[1] = 0;\n            }\n            if (var_4h != NULL) {\n                (**(*var_4h + 4))(1);\n            }\n        }\n        fcn.0042ec88();\n    }\n    return;\n}\n",
        "token_count": 224
    },
    "00436bea": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00436bea(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    uVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0xb);\n    *(param_1 + 8) = uVar2;\n    uVar2 = (*pcVar1)(0xc);\n    *(param_1 + 0xc) = uVar2;\n    if (*(param_1 + 0x68) == 0) {\n        fcn.00449217();\n    }\n    else {\n        fcn.004491e7();\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetDC)(0);\n    pcVar1 = _sym.imp.GDI32.dll_GetDeviceCaps;\n    uVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar2, 0x58);\n    *(param_1 + 0x18) = uVar3;\n    uVar3 = (*pcVar1)(uVar2, 0x5a);\n    *(param_1 + 0x1c) = uVar3;\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar2);\n    return;\n}\n",
        "token_count": 289
    },
    "0043708a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043708a(uint lpMultiByteStr, uint arg_ch)\n\n{\n    uint uVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    ushort *puVar4;\n    uint *in_ECX;\n    int32_t iVar5;\n    int16_t iVar6;\n    int32_t iVar7;\n    uint32_t arg_8h;\n    uint lpWideCharStr;\n    ushort *var_10h;\n    uint32_t var_ch;\n    uint *hMem;\n    uint32_t var_4h;\n    \n    if (in_ECX[1] == 0) {\n        uVar1 = 0;\n    }\n    else {\n        hMem = in_ECX;\n        puVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*in_ECX);\n        var_4h = *(puVar2 + 2) == -1;\n        if (*(puVar2 + 2) == -1) {\n            var_ch = puVar2[3];\n        }\n        else {\n            var_ch = *puVar2;\n        }\n        var_ch = var_ch & 0x40;\n        iVar7 = (-(var_4h != 0) & 2) + 1;\n        if (var_4h == 0) {\n            *puVar2 = *puVar2 | 0x40;\n        }\n        else {\n            puVar2[3] = puVar2[3] | 0x40;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, lpMultiByteStr, 0xffffffff, &lpWideCharStr, 0x20);\n        iVar3 = iVar7 * 2 + iVar3 * 2;\n        puVar4 = fcn.00436edf(puVar2);\n        iVar5 = 0;\n        var_10h = puVar4;\n        if (var_ch != 0) {\n            iVar5 = fcn.0040d465(puVar4 + iVar7);\n            iVar5 = iVar7 * 2 + 2 + iVar5 * 2;\n        }\n        var_ch = iVar5 + 3 + puVar4 & 0xfffffffc;\n        arg_8h = puVar4 + iVar3 + 3 & 0xfffffffc;\n        if (var_4h == 0) {\n            iVar6 = *(puVar2 + 2);\n        }\n        else {\n            iVar6 = *(puVar2 + 4);\n        }\n        if ((iVar3 != iVar5) && (iVar6 != 0)) {\n            fcn.0040d6c0(arg_8h, var_ch, puVar2 + (hMem[1] - var_ch));\n        }\n        *var_10h = arg_ch;\n        fcn.0040d6c0(var_10h + iVar7, &lpWideCharStr, iVar3 + iVar7 * -2);\n        hMem[1] = hMem[1] + (arg_8h - var_ch);\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*hMem);\n        hMem[2] = 0;\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 715
    },
    "004371a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004371a4(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    char *lpMultiByteStr;\n    int32_t lpvObject;\n    uint var_24h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.GDI32.dll_GetStockObject;\n    uVar4 = 10;\n    lpMultiByteStr = \"System\";\n    iVar2 = (*_sym.imp.GDI32.dll_GetStockObject)(0x11);\n    if (iVar2 == 0) {\n        iVar2 = (*pcVar1)(0xd);\n        if (iVar2 == 0) goto code_r0x00437218;\n    }\n    iVar2 = (*_sym.imp.GDI32.dll_GetObjectA)(iVar2, 0x3c, &lpvObject);\n    if (iVar2 != 0) {\n        lpMultiByteStr = &var_24h;\n        uVar3 = (*_sym.imp.USER32.dll_GetDC)(0);\n        if (lpvObject < 0) {\n            lpvObject = -lpvObject;\n        }\n        uVar4 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar3, 0x5a);\n        uVar4 = (*_sym.imp.KERNEL32.dll_MulDiv)(lpvObject, 0x48, uVar4);\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar3);\n    }\ncode_r0x00437218:\n    if (arg_8h == 0) {\n        arg_8h = uVar4;\n    }\n    fcn.0043708a(lpMultiByteStr, arg_8h);\n    return;\n}\n",
        "token_count": 392
    },
    "00437315": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00437315(char *lpString, int32_t arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint var_4h;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n    iVar3 = fcn.004499eb(lpString, 0, 0);\n    iVar3 = iVar3 + -1;\n    pcVar5 = lpString + (iVar2 - iVar3);\n    if (arg_ch < iVar2) {\n        if (arg_ch < iVar3) {\n            if (arg_10h == 0) {\n                pcVar5 = 0x45fdd0;\n            }\n        }\n        else {\n            pcVar4 = lpString + 2;\n            if ((*lpString == '\\\\') && (lpString[1] == '\\\\')) {\n                for (; *pcVar4 != '\\\\'; pcVar4 = fcn.0040d6a2(pcVar4)) {\n                }\n            }\n            if (3 < iVar2 - iVar3) {\n                do {\n                    pcVar4 = fcn.0040d6a2(pcVar4);\n                } while (*pcVar4 != '\\\\');\n            }\n            iVar2 = pcVar4 - lpString;\n            if (iVar2 + 5 + iVar3 <= arg_ch) {\n                while (iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(pcVar4),  arg_ch < iVar3 + 4 + iVar2) {\n                    do {\n                        pcVar4 = fcn.0040d6a2(pcVar4);\n                    } while (*pcVar4 != '\\\\');\n                }\n                lpString[iVar2] = '\\0';\n                pcVar1 = _sym.imp.KERNEL32.dll_lstrcatA;\n                (*_sym.imp.KERNEL32.dll_lstrcatA)(lpString, \"\\\\...\");\n                (*pcVar1)(lpString, pcVar4);\n                return;\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(lpString, pcVar5);\n    }\n    return;\n}\n",
        "token_count": 483
    },
    "00438456": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00438456(char *lpString1, uint lpString2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_618h;\n    uint var_410h;\n    uint var_208h;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(lpString1, lpString2);\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x2a);\n        pcVar1 = _sym.imp.KERNEL32.dll_lstrlenA;\n        if (iVar2 != 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString1);\n            iVar3 = (*pcVar1)(lpString2);\n            if (iVar2 != iVar3) goto code_r0x00438515;\n            uVar4 = (*_sym.imp.KERNEL32.dll_GetThreadLocale)();\n            pcVar1 = _sym.imp.KERNEL32.dll_GetStringTypeExA;\n            (*_sym.imp.KERNEL32.dll_GetStringTypeExA)(uVar4, 1, lpString1, 0xffffffff, &var_208h);\n            (*pcVar1)(uVar4, 4, lpString1, 0xffffffff, &var_410h);\n            (*pcVar1)(uVar4, 1, lpString2, 0xffffffff, &var_618h);\n            if (*lpString1 != '\\0') {\n                iVar2 = 0;\n                do {\n                    if (((*(&var_410h + iVar2) & 0x80) != 0) && (*(&var_208h + iVar2) != *(&var_618h + iVar2)))\n                    goto code_r0x00438515;\n                    iVar2 = iVar2 + 2;\n                    lpString1 = fcn.0040d6a2(lpString1);\n                } while (*lpString1 != '\\0');\n            }\n        }\n        uVar4 = 1;\n    }\n    else {\ncode_r0x00438515:\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 485
    },
    "004386fc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004386fc(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    uint lpLastWriteTime;\n    uint lpLastAccessTime;\n    uint lpCreationTime;\n    \n    fcn.0040cfc0(arg_8h, 0, 0x118);\n    (*_sym.imp.KERNEL32.dll_lstrcpynA)(arg_8h + 0x12, *(in_ECX + 0xc), 0x104);\n    if (*(in_ECX + 4) == -1) {\ncode_r0x004387cc:\n        uVar2 = 1;\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetFileTime)\n                          (*(in_ECX + 4), &lpCreationTime, &lpLastAccessTime, &lpLastWriteTime);\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetFileSize)(*(in_ECX + 4), 0);\n            arg_8h[3] = iVar1;\n            if (iVar1 != -1) {\n                if (*(*(in_ECX + 0xc) + -8) == 0) {\ncode_r0x00438770:\n                    *(arg_8h + 4) = 0;\n                }\n                else {\n                    iVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(*(in_ECX + 0xc));\n                    if (iVar1 == -1) goto code_r0x00438770;\n                    *(arg_8h + 4) = iVar1;\n                }\n                piVar3 = fcn.0042a17e(&lpCreationTime, 0xffffffff);\n                *arg_8h = *piVar3;\n                piVar3 = fcn.0042a17e(&lpLastAccessTime, 0xffffffff);\n                arg_8h[2] = *piVar3;\n                piVar3 = fcn.0042a17e(&lpLastWriteTime, 0xffffffff);\n                iVar1 = *piVar3;\n                arg_8h[1] = iVar1;\n                if (*arg_8h == 0) {\n                    *arg_8h = iVar1;\n                }\n                if (arg_8h[2] == 0) {\n                    arg_8h[2] = arg_8h[1];\n                }\n                goto code_r0x004387cc;\n            }\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 579
    },
    "004387d6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004387d6(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint var_140h;\n    uint var_13ch;\n    uint var_134h;\n    uint var_12ch;\n    int32_t var_120h;\n    \n    iVar1 = fcn.004382c0(arg_ch + 0x12, arg_8h);\n    if (iVar1 == 0) {\n        *(arg_ch + 0x12) = 0;\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(arg_8h, &var_140h);\n        if (iVar1 != -1) {\n            (*_sym.imp.KERNEL32.dll_FindClose)(iVar1);\n            *(arg_ch + 4) = var_140h & 0x7f;\n            arg_ch[3] = var_120h;\n            piVar2 = fcn.0042a17e(&var_13ch, 0xffffffff);\n            *arg_ch = *piVar2;\n            piVar2 = fcn.0042a17e(&var_134h, 0xffffffff);\n            arg_ch[2] = *piVar2;\n            piVar2 = fcn.0042a17e(&var_12ch, 0xffffffff);\n            iVar1 = *piVar2;\n            arg_ch[1] = iVar1;\n            if (*arg_ch == 0) {\n                *arg_ch = iVar1;\n            }\n            if (arg_ch[2] == 0) {\n                arg_ch[2] = arg_ch[1];\n            }\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 399
    },
    "00438a88": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00438a88(int32_t param_1, uint param_2)\n\n{\n    uint arg_8h;\n    int32_t arg_10h;\n    \n    if (param_1 != 0) {\n        arg_10h = param_1;\n        arg_8h = fcn.00438c2e(param_1, param_1, param_2);\n        fcn.00438b6d(arg_8h, param_1, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "0043c22e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0043c22e(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    iVar1 = fcn.00447fa7();\n    if ((*(iVar1 + 0x1c) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.00434e8f(0x43e31a);\n        iVar3 = fcn.00434ea1(0x48);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.004369dc(0x451068, 4, 2);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x1c) = uVar4;\n        fcn.00434e8f(uVar2);\n    }\n    uVar2 = *(iVar1 + 0x1c);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 354
    },
    "0043c31d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043c31d(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.0043c2ec();\n    uVar1 = (*_sym.imp.GDI32.dll_DeleteDC)(uVar1);\n    return uVar1;\n}\n",
        "token_count": 90
    },
    "0043c333": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0043c333(void)\n\n{\n    uint uVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CDC.0;\n    *(unaff_EBP + -4) = 0;\n    if (extraout_ECX[1] != NULL) {\n        uVar1 = fcn.0043c2ec(extraout_ECX);\n        (*_sym.imp.GDI32.dll_DeleteDC)(uVar1);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 203
    },
    "0043d515": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0043d515(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    iVar1 = fcn.00447fa7();\n    if ((*(iVar1 + 0x20) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.00434e8f(0x43e31a);\n        iVar3 = fcn.00434ea1(0x48);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.004369dc(0x451040, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x20) = uVar4;\n        fcn.00434e8f(uVar2);\n    }\n    uVar2 = *(iVar1 + 0x20);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 350
    },
    "0043d5f3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043d5f3(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.0043d5c9();\n    uVar1 = (*_sym.imp.GDI32.dll_DeleteObject)(uVar1);\n    return uVar1;\n}\n",
        "token_count": 92
    },
    "0043dbf5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043dbf5(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    if (arg_ch == 0) {\n        iVar1 = 0;\n    }\n    else {\n        uVar3 = *(in_ECX + 0x28) - *(in_ECX + 0x24);\n        if (arg_ch < uVar3) {\n            uVar3 = arg_ch;\n        }\n        fcn.0040d130(arg_8h, *(in_ECX + 0x24), uVar3);\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + uVar3;\n        arg_8h = arg_8h + uVar3;\n        uVar3 = arg_ch - uVar3;\n        if (uVar3 != 0) {\n            iVar1 = uVar3 - uVar3 % *(in_ECX + 0x1c);\n            var_8h = 0;\n            var_4h = iVar1;\n            do {\n                iVar2 = (**(**(in_ECX + 0x20) + 0x34))(arg_8h, var_4h);\n                arg_8h = arg_8h + iVar2;\n                var_8h = var_8h + iVar2;\n                var_4h = var_4h - iVar2;\n                if (iVar2 == 0) break;\n            } while (var_4h != 0);\n            uVar3 = uVar3 - var_8h;\n            if (var_8h == iVar1) {\n                uVar4 = 0;\n                if (*(in_ECX + 8) == 0) {\n                    var_4h = uVar3;\n                    if (uVar3 <= *(in_ECX + 0x1c)) {\n                        var_4h = *(in_ECX + 0x1c);\n                    }\n                    var_8h = *(in_ECX + 0x2c);\n                    do {\n                        iVar1 = (**(**(in_ECX + 0x20) + 0x34))(var_8h, var_4h);\n                        var_8h = var_8h + iVar1;\n                        var_4h = var_4h - iVar1;\n                        uVar4 = uVar4 + iVar1;\n                        if ((iVar1 == 0) || (var_4h == 0)) break;\n                    } while (uVar4 < uVar3);\n                    iVar1 = *(in_ECX + 0x2c);\n                    *(in_ECX + 0x24) = iVar1;\n                    *(in_ECX + 0x28) = iVar1 + uVar4;\n                }\n                else {\n                    (**(**(in_ECX + 0x20) + 0x50))(0, *(in_ECX + 0x1c), in_ECX + 0x2c, in_ECX + 0x28);\n                    iVar1 = *(in_ECX + 0x2c);\n                    *(in_ECX + 0x24) = iVar1;\n                }\n                uVar4 = *(in_ECX + 0x28) - iVar1;\n                if (uVar3 < uVar4) {\n                    uVar4 = uVar3;\n                }\n                fcn.0040d130(arg_8h, iVar1, uVar4);\n                *(in_ECX + 0x24) = *(in_ECX + 0x24) + uVar4;\n                uVar3 = uVar3 - uVar4;\n            }\n        }\n        iVar1 = arg_ch - uVar3;\n    }\n    return iVar1;\n}\n",
        "token_count": 872
    },
    "0043dd04": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043dd04(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    uint32_t arg_10h;\n    int32_t iVar1;\n    \n    if (arg_ch != 0) {\n        arg_10h = *(in_ECX + 0x28) - *(in_ECX + 0x24);\n        if (arg_ch < arg_10h) {\n            arg_10h = arg_ch;\n        }\n        fcn.0040d130(*(in_ECX + 0x24), arg_8h, arg_10h);\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + arg_10h;\n        arg_ch = arg_ch - arg_10h;\n        if (arg_ch != 0) {\n            fcn.0043dd94();\n            iVar1 = arg_ch - arg_ch % *(in_ECX + 0x1c);\n            (**(**(in_ECX + 0x20) + 0x38))(arg_8h + arg_10h, iVar1);\n            if (*(in_ECX + 8) != 0) {\n                (**(**(in_ECX + 0x20) + 0x50))(1, *(in_ECX + 0x1c), in_ECX + 0x2c, in_ECX + 0x28);\n                *(in_ECX + 0x24) = *(in_ECX + 0x2c);\n            }\n            fcn.0040d130(*(in_ECX + 0x24), arg_8h + arg_10h + iVar1, arg_ch - iVar1);\n            *(in_ECX + 0x24) = *(in_ECX + 0x24) + (arg_ch - iVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 417
    },
    "0043de10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043de10(uint32_t arg_8h)\n\n{\n    uint32_t arg_ch;\n    uint32_t uVar1;\n    uint32_t arg_8h_00;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    arg_ch = *(in_ECX + 0x24);\n    var_4h = *(in_ECX + 0x28) - arg_ch;\n    uVar1 = arg_8h + var_4h;\n    if (*(in_ECX + 8) == 0) {\n        arg_8h_00 = *(in_ECX + 0x2c);\n        if (arg_8h_00 < arg_ch) {\n            if (0 < var_4h) {\n                fcn.0040d6c0(arg_8h_00, arg_ch, var_4h);\n                arg_8h_00 = *(in_ECX + 0x2c);\n                *(in_ECX + 0x24) = arg_8h_00;\n                *(in_ECX + 0x28) = arg_8h_00 + var_4h;\n            }\n            iVar3 = *(in_ECX + 0x1c) - var_4h;\n            iVar4 = var_4h + arg_8h_00;\n            do {\n                iVar2 = (**(**(in_ECX + 0x20) + 0x34))(iVar4, iVar3);\n                var_4h = var_4h + iVar2;\n                iVar4 = iVar4 + iVar2;\n                iVar3 = iVar3 - iVar2;\n                if ((iVar2 == 0) || (iVar3 == 0)) break;\n            } while (var_4h < arg_8h);\n            *(in_ECX + 0x24) = *(in_ECX + 0x2c);\n            *(in_ECX + 0x28) = *(in_ECX + 0x2c) + var_4h;\n        }\n    }\n    else {\n        if (var_4h != 0) {\n            (**(**(in_ECX + 0x20) + 0x28))(-var_4h, 1);\n        }\n        (**(**(in_ECX + 0x20) + 0x50))(0, *(in_ECX + 0x1c), in_ECX + 0x2c, in_ECX + 0x28);\n        *(in_ECX + 0x24) = *(in_ECX + 0x2c);\n    }\n    if (*(in_ECX + 0x28) - *(in_ECX + 0x24) < uVar1) {\n        fcn.0043e40c(3, 0);\n    }\n    return;\n}\n",
        "token_count": 651
    },
    "0043e112": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0043e112(int32_t hWnd, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint lpClassName;\n    \n    if ((hWnd != 0) && (uVar1 = (*_sym.imp.USER32.dll_GetWindowLongA)(hWnd, 0xfffffff0),  (uVar1 & 0xf) == arg_ch)) {\n        (*_sym.imp.USER32.dll_GetClassNameA)(hWnd, &lpClassName, 10);\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(&lpClassName, \"combobox\");\n        return iVar2 == 0;\n    }\n    return false;\n}\n",
        "token_count": 157
    },
    "0043fd24": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043fd24(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.00433a6d(arg_8h, &arg_8h);\n    if (arg_8h == 0) {\n        fcn.0042a064();\n    }\n    *(in_ECX + 0xc) = 0;\n    *(in_ECX + 8) = arg_8h;\n    return;\n}\n",
        "token_count": 105
    },
    "0043fd53": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043fd53(int32_t *param_1)\n\n{\n    if ((*param_1 != 0) && (param_1[2] != 0)) {\n        (*_sym.imp.USER32.dll_SetFocus)(param_1[2]);\n        if (param_1[3] != 0) {\n            (*_sym.imp.USER32.dll_SendMessageA)(param_1[2], 0xb1, 0, 0xffffffff);\n        }\n    }\n    fcn.0043d7de();\n    return;\n}\n",
        "token_count": 122
    },
    "0043fe2d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043fe2d(int32_t *arg_8h, uint arg_ch, uint ARG_1, uint arg_14h, uint arglist)\n\n{\n    uint hWnd;\n    int32_t iVar1;\n    uint lpString;\n    \n    hWnd = fcn.0043fd0d(arg_ch);\n    if (*arg_8h == 0) {\n        (*_sym.imp.USER32.dll_wvsprintfA)(&lpString, ARG_1, &arglist);\n        fcn.0043e1fc(hWnd, &lpString);\n    }\n    else {\n        (*_sym.imp.USER32.dll_GetWindowTextA)(hWnd, &lpString, 0x20);\n        iVar1 = fcn.0043fd88(&lpString, ARG_1, &arglist);\n        if (iVar1 == 0) {\n            fcn.00440b1d(arg_14h, 0, 0xffffffff);\n            fcn.0043fd53();\n        }\n    }\n    return;\n}\n",
        "token_count": 224
    },
    "0043fe9d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043fe9d(int32_t *arg_8h, uint arg_ch, uint8_t *arg_10h)\n\n{\n    uint8_t *puVar1;\n    \n    puVar1 = arg_10h;\n    arg_10h = *arg_10h;\n    if (*arg_8h == 0) {\n        fcn.0043fe2d(arg_8h, arg_ch, 0x451e1c, 0xf116, arg_10h);\n    }\n    else {\n        fcn.0043fe2d(arg_8h, arg_ch, 0x451e1c, 0xf116, &arg_10h);\n        if (0xff < arg_10h) {\n            fcn.00440b1d(0xf116, 0, 0xffffffff);\n            fcn.0043fd53();\n        }\n        *puVar1 = arg_10h;\n    }\n    return;\n}\n",
        "token_count": 216
    },
    "0043ff0e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ff0e(int32_t *arg_8h, uint arg_ch, int16_t *arg_10h)\n\n{\n    uint ARG_1;\n    \n    if (*arg_8h == 0) {\n        arg_10h = *arg_10h;\n        ARG_1 = 0x451e20;\n    }\n    else {\n        ARG_1 = 0x451e24;\n    }\n    fcn.0043fe2d(arg_8h, arg_ch, ARG_1, 0xf110, arg_10h);\n    return;\n}\n",
        "token_count": 132
    },
    "0043ff49": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ff49(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        arg_10h = *arg_10h;\n    }\n    fcn.0043fe2d(arg_8h, arg_ch, 0x45b550, 0xf110, arg_10h);\n    return;\n}\n",
        "token_count": 96
    },
    "0043ff78": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ff78(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        arg_10h = *arg_10h;\n    }\n    fcn.0043fe2d(arg_8h, arg_ch, 0x451e1c, 0xf117, arg_10h);\n    return;\n}\n",
        "token_count": 97
    },
    "0043ffa7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ffa7(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        arg_10h = *arg_10h;\n    }\n    fcn.0043fe2d(arg_8h, arg_ch, 0x451e28, 0xf110, arg_10h);\n    return;\n}\n",
        "token_count": 96
    },
    "0043ffd6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ffd6(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        arg_10h = *arg_10h;\n    }\n    fcn.0043fe2d(arg_8h, arg_ch, 0x451e2c, 0xf117, arg_10h);\n    return;\n}\n",
        "token_count": 97
    },
    "00440005": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00440005(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    uint hWnd;\n    int32_t iVar1;\n    uint uVar2;\n    \n    hWnd = fcn.0043fd0d(arg_ch);\n    if (*arg_8h == 0) {\n        fcn.0043e1fc(hWnd, *arg_10h);\n    }\n    else {\n        iVar1 = (*_sym.imp.USER32.dll_GetWindowTextLengthA)(hWnd);\n        uVar2 = fcn.00434c77(iVar1, iVar1 + 1);\n        (*_sym.imp.USER32.dll_GetWindowTextA)(hWnd, uVar2);\n        fcn.00434c4f(0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "00440057": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00440057(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint hWnd;\n    \n    hWnd = fcn.0043fd0d(arg_ch);\n    if (*arg_8h == 0) {\n        fcn.0043e1fc(hWnd, arg_10h);\n    }\n    else {\n        (*_sym.imp.USER32.dll_GetWindowTextLengthA)(hWnd);\n        (*_sym.imp.USER32.dll_GetWindowTextA)(hWnd, arg_10h, arg_14h);\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "004401f8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004401f8(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    uVar2 = fcn.0043fd24(arg_ch);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (*arg_8h == 0) {\n        iVar3 = (*_sym.imp.USER32.dll_SendMessageA)(uVar2, 0x1a2, 0xffffffff, *arg_10h);\n        if (-1 < iVar3) {\n            (*pcVar1)(uVar2, 0x186, iVar3, 0);\n        }\n    }\n    else {\n        fcn.00440178(arg_8h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "004402c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004402c8(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    code *pcVar1;\n    uint hWnd;\n    int32_t iVar2;\n    \n    hWnd = fcn.0043fd24(arg_ch);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (*arg_8h == 0) {\n        iVar2 = (*_sym.imp.USER32.dll_SendMessageA)(hWnd, 0x158, 0xffffffff, *arg_10h);\n        if (iVar2 < 0) {\n            fcn.0043e1fc(hWnd, *arg_10h);\n        }\n        else {\n            (*pcVar1)(hWnd, 0x14e, iVar2, 0);\n        }\n    }\n    else {\n        fcn.00440249(arg_8h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 210
    },
    "00440428": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4ch\n\nvoid __cdecl fcn.00440428(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_4ch;\n    uint var_2ch;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    pcVar1 = _sym.imp.USER32.dll_wsprintfA;\n    if (**(unaff_EBP + 8) != 0) {\n        (*_sym.imp.USER32.dll_wsprintfA)(unaff_EBP + -0x4c, *(unaff_EBP + 0x14), *(unaff_EBP + 0xc));\n        (*pcVar1)(unaff_EBP + -0x2c, *(unaff_EBP + 0x14), *(unaff_EBP + 0x10));\n        *(unaff_EBP + 8) = *0x45b93c;\n        *(unaff_EBP + -4) = 0;\n        fcn.00440d7a(unaff_EBP + 8, *(unaff_EBP + 0x18), unaff_EBP + -0x4c, unaff_EBP + -0x2c);\n        fcn.00440ae5(*(unaff_EBP + 8), 0x30, *(unaff_EBP + 0x18));\n        fcn.0043475b();\n        fcn.0043fd53();\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.004347d0();\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 409
    },
    "004405cb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004405cb(int32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if ((*arg_8h != 0) || ((arg_10h <= arg_ch && (arg_ch <= arg_14h)))) {\n        (*_sym.imp.USER32.dll_SendMessageA)(arg_8h[2], 0x407, 0, arg_10h);\n        (*pcVar1)(arg_8h[2], 0x407, 1, arg_14h);\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "004406ba": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004406ba(int32_t param_1, uint param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (*(param_3 + 0x1c) == 0) {\n        uVar1 = fcn.0043fd24(param_2);\n        iVar2 = fcn.004338e1(uVar1);\n        if (iVar2 == 0) {\n            fcn.0042a064();\n        }\n        else {\n            iVar2 = *(param_1 + 4);\n            iVar3 = (*_sym.imp.USER32.dll_GetParent)(*(param_3 + 0x1c));\n            if (*(iVar2 + 0x1c) != iVar3) {\n                fcn.00433fa6(iVar2);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "004409fe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004409fe(uint lpText, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint *puVar4;\n    uint var_114h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t hWnd;\n    \n    fcn.004409d0(0);\n    var_ch = fcn.00440b76(0, &hWnd);\n    if (((var_ch == 0) || (piVar1 = (*_sym.imp.USER32.dll_SendMessageA)(hWnd, 0x376, 0, 0),  piVar1 == NULL)) &&\n       (piVar1 = NULL,  in_ECX != 0)) {\n        piVar1 = in_ECX + 0x9c;\n    }\n    var_8h = 0;\n    if ((piVar1 != NULL) && (var_8h = *piVar1,  arg_10h != 0)) {\n        *piVar1 = arg_10h + 0x30000;\n    }\n    if (((arg_ch & 0xf0) == 0) && ((uVar2 = arg_ch & 0xf,  uVar2 < 2 || ((2 < uVar2 && (uVar2 < 5)))))) {\n        arg_ch = arg_ch | 0x30;\n    }\n    if (in_ECX == 0) {\n        puVar4 = &var_114h;\n        (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, &var_114h, 0x104);\n    }\n    else {\n        puVar4 = *(in_ECX + 0x78);\n    }\n    uVar3 = (*_sym.imp.USER32.dll_MessageBoxA)(var_ch, lpText, puVar4, arg_ch);\n    if (piVar1 != NULL) {\n        *piVar1 = var_8h;\n    }\n    if (hWnd != 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(hWnd, 1);\n    }\n    fcn.004409d0(1);\n    return uVar3;\n}\n",
        "token_count": 511
    },
    "00440c64": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00440c64(int32_t *arg_8h, uint8_t *arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    \n    iVar4 = 0;\n    uVar1 = *arg_ch;\n    puVar5 = arg_ch;\n    while (uVar1 != 0) {\n        if (*puVar5 == 0x25) {\n            uVar1 = puVar5[1];\n            if ((uVar1 < '0') || ('9' < uVar1)) {\n                if ((uVar1 < 'A') || ('Z' < uVar1)) goto code_r0x00440cbd;\n                if (uVar1 < ':') goto code_r0x00440c9b;\n                iVar3 = uVar1 + -0x38;\n            }\n            else {\ncode_r0x00440c9b:\n                iVar3 = uVar1 + -0x31;\n            }\n            puVar5 = puVar5 + 2;\n            if (arg_14h <= iVar3) goto code_r0x00440ccc;\n            iVar3 = *(arg_10h + iVar3 * 4);\n            if (iVar3 != 0) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(iVar3);\n                iVar4 = iVar4 + iVar3;\n            }\n        }\n        else {\ncode_r0x00440cbd:\n            if ((*(*puVar5 + 0x462101) & 4) != 0) {\n                iVar4 = iVar4 + 1;\n                puVar5 = puVar5 + 1;\n            }\n            puVar5 = puVar5 + 1;\ncode_r0x00440ccc:\n            iVar4 = iVar4 + 1;\n        }\n        uVar1 = *puVar5;\n    }\n    puVar5 = fcn.00434c00(iVar4);\n    do {\n        while( true ) {\n            if (*arg_ch == 0) {\n                fcn.00434c4f(puVar5 - *arg_8h);\n                return;\n            }\n            uVar1 = *arg_ch;\n            if (uVar1 == 0x25) break;\ncode_r0x00440d3a:\n            if ((*(uVar1 + 0x462101) & 4) != 0) {\n                *puVar5 = uVar1;\n                puVar5 = puVar5 + 1;\n                arg_ch = arg_ch + 1;\n            }\n            *puVar5 = *arg_ch;\n            puVar5 = puVar5 + 1;\n            arg_ch = arg_ch + 1;\n        }\n        uVar2 = arg_ch[1];\n        if ((uVar2 < '0') || ('9' < uVar2)) {\n            if ((uVar2 < 'A') || ('Z' < uVar2)) goto code_r0x00440d3a;\n            if (uVar2 < ':') goto code_r0x00440d0a;\n            iVar4 = uVar2 + -0x38;\n        }\n        else {\ncode_r0x00440d0a:\n            iVar4 = uVar2 + -0x31;\n        }\n        arg_ch = arg_ch + 2;\n        if (iVar4 < arg_14h) {\n            iVar4 = *(arg_10h + iVar4 * 4);\n            if (iVar4 != 0) {\n                (*_sym.imp.KERNEL32.dll_lstrcpyA)(puVar5, iVar4);\n                iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(puVar5);\n                puVar5 = puVar5 + iVar4;\n            }\n        }\n        else {\n            *puVar5 = 0x3f;\n            puVar5 = puVar5 + 1;\n        }\n    } while( true );\n}\n",
        "token_count": 894
    },
    "00440eba": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440eba(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piStack8;\n    int32_t *piStack4;\n    \n    pcVar1 = _sym.imp.USER32.dll_LoadCursorA;\n    piStack8 = param_1;\n    piStack4 = param_1;\n    if ((*0x45fffc == 0) && (*0x45fffc = (*_sym.imp.USER32.dll_LoadCursorA)(0, 0x7f8b),  *0x45fffc == 0)) {\n        iVar2 = fcn.00447f81();\n        *0x45fffc = (*pcVar1)(*(iVar2 + 0xc), 0x7901);\n        if (*0x45fffc == 0) {\n            return;\n        }\n    }\n    (**(*param_1 + 0xc))(0xe145, 0, 0, &piStack8);\n    return;\n}\n",
        "token_count": 227
    },
    "004411d2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004411d2(int32_t arg_8h, uint32_t lpPoint, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    pcVar1 = _sym.imp.USER32.dll_ScreenToClient;\n    (*_sym.imp.USER32.dll_ScreenToClient)(arg_8h, &lpPoint);\n    pcVar2 = _sym.imp.USER32.dll_SendMessageA;\n    uVar3 = lpPoint & 0xffff | arg_10h << 0x10;\n    while( true ) {\n        iVar4 = (*pcVar2)(arg_8h, 0x366, 0, uVar3);\n        (*_sym.imp.USER32.dll_ClientToScreen)(arg_8h, &lpPoint);\n        uVar3 = (*_sym.imp.USER32.dll_GetWindowLongA)(arg_8h, 0xfffffff0);\n        if (((uVar3 & 0x40000000) == 0) || (arg_8h = (*_sym.imp.USER32.dll_GetParent)(arg_8h),  arg_8h == 0)) break;\n        if (iVar4 != 0) {\n            return iVar4;\n        }\n        (*pcVar1)(arg_8h, &lpPoint);\n        uVar3 = lpPoint & 0xffff | arg_10h << 0x10;\n    }\n    if (iVar4 == 0) {\n        iVar4 = -1;\n    }\n    return iVar4;\n}\n",
        "token_count": 354
    },
    "00441285": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00441285(int32_t arg_8h, uint *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    uint var_28h;\n    uint lpPoint;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    iVar2 = arg_8h;\n    uVar7 = *(arg_8h + 4);\n    if ((uVar7 == 0x367) || ((uVar7 == 0x100 && (*(arg_8h + 8) == 0x1b)))) {\ncode_r0x0044148a:\n        (*_sym.imp.USER32.dll_PeekMessageA)(iVar2, 0, uVar7, uVar7, 1);\n        return 0;\n    }\n    if (((uVar7 < 0x200) || (0x209 < uVar7)) && ((uVar7 < 0xa0 || (0xa9 < uVar7)))) {\n        if ((uVar7 == 0x112) || ((0xff < uVar7 && (uVar7 < 0x109)))) {\n            iVar3 = (*_sym.imp.USER32.dll_GetCapture)();\n            pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n            if (iVar3 != 0) {\n                (*_sym.imp.USER32.dll_ReleaseCapture)();\n                do {\n                    iVar3 = (*pcVar1)(&var_28h, 0, 0x200, 0x209, 3);\n                } while (iVar3 != 0);\n            }\n            iVar3 = (*pcVar1)(iVar2, 0, *(iVar2 + 4), *(iVar2 + 4), 0);\n            if (iVar3 != 0) {\n                (*_sym.imp.USER32.dll_GetMessageA)(iVar2, 0, *(iVar2 + 4), *(iVar2 + 4));\n                iVar3 = (**(*var_4h + 0x90))(iVar2);\n                if (iVar3 == 0) {\n                    (*_sym.imp.USER32.dll_TranslateMessage)(iVar2);\n                    uVar7 = *(iVar2 + 4);\n                    if ((uVar7 == 0x112) || ((0x103 < uVar7 && (uVar7 < 0x108)))) {\n                        (*_sym.imp.USER32.dll_DispatchMessageA)(iVar2);\n                    }\n                }\n            }\n            (*_sym.imp.USER32.dll_GetCursorPos)(&lpPoint);\ncode_r0x00441471:\n            fcn.004410bc(lpPoint, var_8h, 0);\n            return 1;\n        }\n        iVar3 = (*_sym.imp.USER32.dll_PeekMessageA)(arg_8h, 0, uVar7, uVar7, 1);\n        if (iVar3 == 0) {\n            return 1;\n        }\n    }\n    else {\n        iVar3 = fcn.004410bc(*(arg_8h + 0x14), *(arg_8h + 0x18), &arg_8h);\n        if (iVar3 == 0) {\n            return 1;\n        }\n        iVar4 = *(iVar2 + 4);\n        if (arg_8h != 0) {\n            if (iVar4 == 0x201) {\n                iVar4 = (*_sym.imp.USER32.dll_SendMessageA)(iVar3, 0x84, 0, CONCAT22(*(iVar2 + 0x18), *(iVar2 + 0x14)));\n                if ((iVar4 == 5) || (iVar4 == 3)) {\n                    (*_sym.imp.USER32.dll_ReleaseCapture)();\n                    (*_sym.imp.USER32.dll_GetMessageA)(iVar2, 0, 0xa1, 0xa1);\n                    (*_sym.imp.USER32.dll_DispatchMessageA)(iVar2);\n                    (*_sym.imp.USER32.dll_GetCursorPos)(&lpPoint);\n                    goto code_r0x00441471;\n                }\n                if (iVar4 != 1) {\n                    uVar6 = fcn.0044126b(iVar4);\n                    *arg_ch = uVar6;\n                    uVar7 = *(iVar2 + 4);\n                    goto code_r0x0044148a;\n                }\n                uVar5 = fcn.004411d2(iVar3, *(iVar2 + 0x14), *(iVar2 + 0x18));\n                uVar6 = 0;\n                *arg_ch = uVar5;\n                iVar4 = *(iVar2 + 4);\n            }\n            else {\n                uVar6 = 1;\n            }\n            (*_sym.imp.USER32.dll_PeekMessageA)(iVar2, 0, iVar4, iVar4, 1);\n            return uVar6;\n        }\n        (*_sym.imp.USER32.dll_PeekMessageA)(iVar2, 0, iVar4, iVar4, 1);\n    }\n    (*_sym.imp.USER32.dll_DispatchMessageA)(iVar2);\n    return 1;\n}\n",
        "token_count": 1141
    },
    "0044149a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0044149a(uint lpAppName, uint lpValueName, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint lpString;\n    \n    if (*(in_ECX + 0x7c) == 0) {\n        (*_sym.imp.USER32.dll_wsprintfA)(&lpString, 0x45b550, arg_10h);\n        uVar1 = (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(lpAppName, lpValueName, &lpString, *(in_ECX + 0x90))\n        ;\n    }\n    else {\n        uVar1 = fcn.00449539(lpAppName);\n        if (uVar1 != 0) {\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(uVar1, lpValueName, 0, 4, &arg_10h, 4);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(uVar1);\n            uVar1 = iVar2 == 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 257
    },
    "0044150f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0044150f(uint lpAppName, int32_t lpValueName, int32_t lpString)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x7c) == 0) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(lpAppName, lpValueName, lpString, *(in_ECX + 0x90));\n        return uVar3;\n    }\n    if (lpValueName == 0) {\n        iVar1 = fcn.004494a5();\n        if (iVar1 != 0) {\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)(iVar1, lpAppName);\n            goto code_r0x00441582;\n        }\n    }\n    else if (lpString == 0) {\n        iVar1 = fcn.00449539(lpAppName);\n        if (iVar1 != 0) {\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueA)(iVar1, lpValueName);\ncode_r0x00441582:\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n            return iVar2 == 0;\n        }\n    }\n    else {\n        iVar1 = fcn.00449539(lpAppName);\n        if (iVar1 != 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(iVar1, lpValueName, 0, 1, lpString, iVar2 + 1);\n            goto code_r0x00441582;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 399
    },
    "004415af": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004415af(uint arg_8h, uint arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    char *lpString;\n    uint8_t *puVar3;\n    int32_t in_ECX;\n    char *pcVar4;\n    uint var_4h;\n    \n    if (*(in_ECX + 0x7c) == 0) {\n        lpString = fcn.00434ea1(arg_14h * 2 + 1);\n        uVar1 = 0;\n        pcVar4 = lpString;\n        if (arg_14h != 0) {\n            do {\n                puVar3 = arg_10h + uVar1;\n                *pcVar4 = (*puVar3 & 0xf) + 0x41;\n                uVar1 = uVar1 + 1;\n                pcVar4[1] = (*puVar3 >> 4) + 0x41;\n                pcVar4 = pcVar4 + 2;\n            } while (uVar1 < arg_14h);\n        }\n        lpString[uVar1 * 2] = '\\0';\n        uVar1 = fcn.0044150f(arg_8h, arg_ch, lpString);\n        fcn.00434eca(lpString);\n    }\n    else {\n        uVar1 = fcn.00449539(arg_8h);\n        if (uVar1 != 0) {\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(uVar1, arg_ch, 0, 3, arg_10h, arg_14h);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(uVar1);\n            uVar1 = iVar2 == 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 419
    },
    "0044311c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044311c(uint *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    uVar4 = *0x45ffd4;\n    uVar3 = *0x45ffd0;\n    if (in_ECX != NULL) {\n        iVar2 = (*_sym.imp.GDI32.dll_GetMapMode)(in_ECX[2]);\n        pcVar1 = _sym.imp.GDI32.dll_GetDeviceCaps;\n        if ((iVar2 < 7) && (iVar2 != 1)) {\n            (**(*in_ECX + 0x34))(3);\n            fcn.0043d28b(arg_8h);\n            (**(*in_ECX + 0x34))(iVar2);\n            return;\n        }\n        uVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(in_ECX[2], 0x58);\n        uVar4 = (*pcVar1)(in_ECX[2], 0x5a);\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_MulDiv;\n    uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(*arg_8h, 0x9ec, uVar3);\n    *arg_8h = uVar3;\n    uVar4 = (*pcVar1)(arg_8h[1], 0x9ec, uVar4);\n    arg_8h[1] = uVar4;\n    return;\n}\n",
        "token_count": 355
    },
    "004431aa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004431aa(uint *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    uVar4 = *0x45ffd4;\n    uVar3 = *0x45ffd0;\n    if (in_ECX != NULL) {\n        iVar2 = (*_sym.imp.GDI32.dll_GetMapMode)(in_ECX[2]);\n        pcVar1 = _sym.imp.GDI32.dll_GetDeviceCaps;\n        if ((iVar2 < 7) && (iVar2 != 1)) {\n            (**(*in_ECX + 0x34))(3);\n            fcn.0043d222(arg_8h);\n            (**(*in_ECX + 0x34))(iVar2);\n            return;\n        }\n        uVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(in_ECX[2], 0x58);\n        uVar4 = (*pcVar1)(in_ECX[2], 0x5a);\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_MulDiv;\n    uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(*arg_8h, uVar3, 0x9ec);\n    *arg_8h = uVar3;\n    uVar4 = (*pcVar1)(arg_8h[1], uVar4, 0x9ec);\n    arg_8h[1] = uVar4;\n    return;\n}\n",
        "token_count": 353
    },
    "00443f9b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00443ff3)\n// WARNING: Removing unreachable block (ram,0x00443fff)\n\nvoid fcn.00443f9b(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    \n    uVar3 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n    pcVar2 = _sym.imp.USER32.dll_GetWindow;\n    iVar4 = (*_sym.imp.USER32.dll_GetWindow)(uVar3);\n    pcVar1 = _sym.imp.USER32.dll_ShowWindow;\n    for (; iVar4 != 0; iVar4 = (*pcVar2)(iVar4, 2)) {\n        iVar5 = fcn.00430905(iVar4);\n        if ((((iVar5 != 0) && (*0x21 != iVar4)) && (iVar6 = fcn.00443df0(*0x21, iVar4),  iVar6 != 0)) &&\n           ((uVar7 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar4, 0xfffffff0),  (uVar7 & 0x18000000) == 0 &&\n            ((*(iVar5 + 0x24) & 2) != 0)))) {\n            (*pcVar1)(iVar4, 4);\n            *(iVar5 + 0x24) = *(iVar5 + 0x24) & 0xfffffffd;\n        }\n    }\n    return;\n}\n",
        "token_count": 350
    },
    "00444367": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00444367(uint arg_8h, uint lpIconName)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    uint var_58h;\n    uint var_38h;\n    int32_t lpClassName;\n    uint lpWndClass;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    iVar1 = fcn.00447f81();\n    iVar1 = (*_sym.imp.USER32.dll_LoadIconA)(*(iVar1 + 0xc), lpIconName);\n    if (iVar1 != 0) {\n        fcn.0040cfc0(&var_58h, 0, 0x30);\n        var_38h = arg_8h;\n        (**(*in_ECX + 0x5c))(&var_58h);\n        if (lpClassName != 0) {\n            iVar2 = fcn.00447f81();\n            iVar2 = (*_sym.imp.USER32.dll_GetClassInfoA)(*(iVar2 + 8), lpClassName, &lpWndClass);\n            if ((iVar2 != 0) && (var_14h != iVar1)) {\n                uVar3 = fcn.00431668(lpWndClass, var_10h, var_ch, iVar1);\n                return uVar3;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 319
    },
    "004445b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004445b0(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t *var_4h;\n    \n    var_4h = param_1;\n    if ((param_1[0x27] != NULL) && (iVar1 = (*param_1[0x27])(param_1),  iVar1 == 0)) {\n        return;\n    }\n    piVar2 = (**(*param_1 + 0xbc))();\n    if ((piVar2 != NULL) && (iVar1 = (**(*piVar2 + 0x8c))(param_1),  iVar1 == 0)) {\n        return;\n    }\n    iVar1 = fcn.00447f81();\n    piVar3 = *(iVar1 + 4);\n    if ((piVar3 != NULL) && (piVar3[7] == param_1)) {\n        if ((piVar2 == NULL) && (iVar1 = (**(*piVar3 + 0x88))(),  iVar1 == 0)) {\n            return;\n        }\n        fcn.0044087f();\n        fcn.0044094b();\n        iVar1 = fcn.0044391b();\n        if (iVar1 == 0) {\n            fcn.00443954(0);\n            return;\n        }\n        iVar1 = fcn.00447f81();\n        if ((*(iVar1 + 0x14) == '\\0') && (piVar3[7] == 0)) {\n            fcn.0044b325(0);\n            return;\n        }\n    }\n    if ((piVar2 != NULL) && (piVar2[0x12] != 0)) {\n        var_4h = (**(*piVar2 + 0x60))();\n        do {\n            if (var_4h == NULL) {\n                (**(*piVar2 + 0x7c))();\n                return;\n            }\n            (**(*piVar2 + 100))(&var_4h);\n            piVar3 = fcn.00431f8e();\n        } while (piVar3 == param_1);\n        (**(*piVar2 + 0x94))(param_1);\n    }\n    (**(*param_1 + 0x58))();\n    return;\n}\n",
        "token_count": 522
    },
    "004448a3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004448a3(int32_t arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t *in_ECX;\n    \n    fcn.00430845();\n    uVar2 = fcn.00433c44();\n    piVar5 = in_ECX;\n    if ((uVar2 & 0x40000000) == 0) {\n        piVar5 = fcn.0043211e();\n    }\n    if (arg_8h != 0) {\n        arg_ch = in_ECX;\n    }\n    if ((piVar5 == arg_ch) ||\n       ((piVar3 = fcn.0043211e(),  piVar5 == piVar3 &&\n        (iVar4 = (*_sym.imp.USER32.dll_SendMessageA)(arg_ch[7], 0x36d, 0x40, 0),  iVar4 != 0)))) {\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n    }\n    piVar5[9] = piVar5[9] & 0xffffffdf;\n    if (bVar1) {\n        piVar5[9] = piVar5[9] | 0x20;\n    }\n    fcn.004440e9((-bVar1 & 0xfffffffc) + 8);\n    piVar5 = fcn.00444c8b();\n    if (piVar5 == NULL) {\n        (**(*in_ECX + 0xc0))();\n        piVar5 = fcn.00444c8b();\n        if (piVar5 == NULL) {\n            return;\n        }\n    }\n    if ((arg_8h != 0) && (arg_10h == 0)) {\n        (**(*piVar5 + 0xe4))(1, piVar5, piVar5);\n    }\n    (**(*piVar5 + 0xe8))(arg_8h);\n    return;\n}\n",
        "token_count": 475
    },
    "00444c92": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00444c92(int32_t param_1, int32_t *param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = *(param_1 + 0x98);\n    if (param_2 != piVar1) {\n        *(param_1 + 0x98) = 0;\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 0xe4))(0, param_2, piVar1);\n        }\n        if (((*(param_1 + 0x98) == 0) && (*(param_1 + 0x98) = param_2,  param_2 != NULL)) && (param_3 != 0)) {\n            (**(*param_2 + 0xe4))(1, param_2, piVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 201
    },
    "00444d17": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444d17(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    \n    piVar1 = fcn.00445b97();\n    if (arg_10h == 0) {\n        fcn.00433dd0(0, 0, 0, 0, 0, (-(arg_ch != 0) & 0xffffffc0) + 0x80 | 0x17);\n        (**(*arg_8h + 0xc4))(arg_ch);\n        if ((arg_ch != 0) || (iVar2 = fcn.00445ba8(),  iVar2 == 0)) {\n            (**(*piVar1 + 200))(0);\n        }\n    }\n    else {\n        (**(*arg_8h + 0xc4))(arg_ch);\n        piVar1[0x2e] = piVar1[0x2e] | 0xc;\n    }\n    iVar2 = fcn.00445ba8();\n    if (iVar2 == 0) {\n        return;\n    }\n    if (arg_8h[0x1c] == NULL) {\n        uVar3 = arg_ch != 0;\n    }\n    else {\n        uVar3 = (**(*arg_8h[0x1c] + 0xe0))();\n    }\n    if (uVar3 == 1) {\n        if (arg_ch != 0) {\n            piVar1[0x22] = -1;\n            if (arg_10h == 0) {\n                uVar4 = 8;\n                goto code_r0x00444dd5;\n            }\n            piVar1[0x22] = 8;\n            goto code_r0x00444e00;\n        }\n    }\n    else if (uVar3 == 0) {\n        piVar1[0x22] = -1;\n        if (arg_10h != 0) {\n            piVar1[0x22] = 0;\n            return;\n        }\n        uVar4 = 0;\ncode_r0x00444dd5:\n        fcn.00433e1f(uVar4);\n        return;\n    }\n    if (arg_10h != 0) {\n        return;\n    }\ncode_r0x00444e00:\n    (**(*piVar1 + 200))(0);\n    return;\n}\n",
        "token_count": 561
    },
    "00444fb1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444fb1(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    \n    iVar1 = fcn.0043211e();\n    if ((in_ECX[0x1a] != NULL) && (iVar2 = (**(*in_ECX[0x1a] + 0x7c))(arg_8h, arg_ch, arg_10h),  iVar2 != 0)) {\n        return;\n    }\n    if (arg_ch == 0xffff) {\n        in_ECX[9] = in_ECX[9] & 0xffffffbf;\n        if (*(iVar1 + 0x50) == 0) {\n            in_ECX[0x24] = 0xe001;\n        }\n        else {\n            in_ECX[0x24] = 0xe002;\n        }\n        (*_sym.imp.USER32.dll_SendMessageA)(in_ECX[7], 0x362, in_ECX[0x24], 0);\n        iVar1 = (**(*in_ECX + 0xd4))();\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_UpdateWindow)(*(iVar1 + 0x1c));\n        }\n        goto code_r0x00445088;\n    }\n    if ((arg_8h == 0) || ((arg_ch & 0x810) != 0)) {\n        in_ECX[0x24] = 0;\n    }\n    else {\n        if ((arg_8h < 0xf000) || (0xf1ef < arg_8h)) {\n            if (0xfeff < arg_8h) {\n                in_ECX[0x24] = 0xef1f;\n                goto code_r0x00445084;\n            }\n        }\n        else {\n            arg_8h = (arg_8h - 0xf000 >> 4) + 0xef00;\n        }\n        in_ECX[0x24] = arg_8h;\n    }\ncode_r0x00445084:\n    *(iVar1 + 0x24) = *(iVar1 + 0x24) | 0x40;\ncode_r0x00445088:\n    if (in_ECX[0x24] != in_ECX[0x25]) {\n        uVar3 = (*_sym.imp.USER32.dll_GetParent)(in_ECX[7]);\n        iVar1 = fcn.004308de(uVar3);\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_PostMessageA)(in_ECX[7], 0x36a, 0, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 624
    },
    "00445263": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n\nvoid fcn.00445263(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint var_28h;\n    uint var_24h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    fcn.0042d864(10);\n    puVar4 = *(extraout_ECX + 0x70);\n    *(unaff_EBP + -4) = 0;\n    while (puVar4 != NULL) {\n        puVar1 = *puVar4;\n        iVar2 = (**(*puVar4[2] + 0xd0))();\n        puVar4 = puVar1;\n        if (iVar2 != 0) {\n            fcn.0042d987();\n        }\n    }\n    puVar4 = *(unaff_EBP + -0x24);\n    while (puVar4 != NULL) {\n        puVar1 = *puVar4;\n        if (puVar4[2][0x1e] == 0) {\n            (**(*puVar4[2] + 0x58))();\n            puVar4 = puVar1;\n        }\n        else {\n            piVar3 = fcn.00431f8e();\n            (**(*piVar3 + 0x58))();\n            puVar4 = puVar1;\n        }\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0042d8c3();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 401
    },
    "004452ee": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004452ee(int32_t param_1, uint32_t param_2)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    if (param_2 == 0) {\ncode_r0x0044531b:\n        iVar3 = 0;\n    }\n    else {\n        puVar4 = *(param_1 + 0x70);\n        do {\n            if (puVar4 == NULL) goto code_r0x0044531b;\n            puVar1 = *puVar4;\n            iVar3 = puVar4[2];\n            uVar2 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(iVar3 + 0x1c));\n            puVar4 = puVar1;\n        } while ((uVar2 & 0xffff) != param_2);\n    }\n    return iVar3;\n}\n",
        "token_count": 208
    },
    "0044553b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044553b(int32_t lpString2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint lpString1;\n    \n    uVar2 = fcn.00433c44();\n    pcVar1 = _sym.imp.KERNEL32.dll_lstrcatA;\n    if ((uVar2 & 0x4000) == 0) {\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(&lpString1, *(in_ECX + 0xac));\n        pcVar1 = _sym.imp.KERNEL32.dll_lstrcatA;\n        if (lpString2 != 0) {\n            (*_sym.imp.KERNEL32.dll_lstrcatA)(&lpString1, 0x452b70);\n            (*pcVar1)(&lpString1, lpString2);\n            if (0 < *(in_ECX + 0x40)) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(&lpString1, 0x452b74, *(in_ECX + 0x40));\n                (*_sym.imp.USER32.dll_wsprintfA)(&lpString1 + iVar3);\n            }\n        }\n    }\n    else {\n        lpString1._0_1_ = 0;\n        if (lpString2 != 0) {\n            (*_sym.imp.KERNEL32.dll_lstrcpyA)(&lpString1, lpString2);\n            if (0 < *(in_ECX + 0x40)) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(&lpString1, 0x452b74, *(in_ECX + 0x40));\n                (*_sym.imp.USER32.dll_wsprintfA)(&lpString1 + iVar3);\n            }\n            (*pcVar1)(&lpString1, 0x452b70);\n        }\n        (*pcVar1)(&lpString1, *(in_ECX + 0xac));\n    }\n    fcn.0043e1fc(*(in_ECX + 0x1c), &lpString1);\n    return;\n}\n",
        "token_count": 476
    },
    "00445ba8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00445ba8(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (**(*param_1 + 0xd0))();\n    if (iVar1 != 0) {\n        return param_1[0x1e];\n    }\n    if ((param_1[0x1c] != 0) && (*(param_1[0x1c] + 0x78) != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 120
    },
    "00447e1f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00447e1f(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = *(in_ECX + 0xc);\n    while (iVar1 != 0) {\n        fcn.0042ee5b();\n        if (var_8h != arg_8h) {\n            fcn.00434eca(var_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "00447e9d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00447e9d(void)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    code **extraout_ECX;\n    code *pcVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.AFX_MODULE_THREAD_STATE.0;\n    puVar1 = extraout_ECX[5];\n    *(unaff_EBP + -4) = 0;\n    if (puVar1 != NULL) {\n        (***puVar1)(1);\n    }\n    if (extraout_ECX[6] != NULL) {\n        (***extraout_ECX[6])(1);\n    }\n    if (extraout_ECX[7] != NULL) {\n        (***extraout_ECX[7])(1);\n    }\n    if (extraout_ECX[8] != NULL) {\n        (***extraout_ECX[8])(1);\n    }\n    if (extraout_ECX[9] != NULL) {\n        (***extraout_ECX[9])(1);\n    }\n    pcVar3 = extraout_ECX[0xe];\n    if (pcVar3 != NULL) {\n        while (*(pcVar3 + 0xc) != 0) {\n            uVar2 = fcn.0042d9f9();\n            fcn.00434eca(uVar2);\n            pcVar3 = extraout_ECX[0xe];\n        }\n    }\n    if (extraout_ECX[0xc] != NULL) {\n        (**(*extraout_ECX[0xc] + 4))(1);\n    }\n    if (extraout_ECX[0xd] != NULL) {\n        (**(*extraout_ECX[0xd] + 4))(1);\n    }\n    if (extraout_ECX[0xe] != NULL) {\n        (**(*extraout_ECX[0xe] + 4))(1);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 514
    },
    "00448f4e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00448f4e(int32_t *param_1)\n\n{\n    uint var_4h;\n    \n    if (*param_1 != 0) {\n        if (*param_1 != NULL) {\n            (****param_1)(1);\n        }\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "004484f2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004484f2(int32_t param_1, uint param_2)\n\n{\n    if ((*(*(param_1 + 0x14) + -8) == 0) ||\n       ((*(param_1 + 0x10) == 3 &&\n        (((*(*(param_1 + 0x18) + -8) == 0 || (*(*(param_1 + 0x1c) + -8) == 0)) || (*(*(param_1 + 0x20) + -8) == 0))))))\n    {\n        fcn.00434959(param_2);\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "004489dc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004489dc(int32_t param_1)\n\n{\n    if (param_1 != 0) {\n        (*_sym.imp.KERNEL32.dll_LocalFree)(param_1);\n    }\n    return;\n}\n",
        "token_count": 49
    },
    "00448bf8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00448bf8(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code **ppcVar1;\n    code *pcVar2;\n    uint *in_ECX;\n    code **ppcVar3;\n    uint var_4h;\n    \n    ppcVar1 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*in_ECX);\n    if (ppcVar1 == NULL) {\n        ppcVar1 = fcn.004489be(0x10);\n        if (ppcVar1 == NULL) {\n            ppcVar1 = NULL;\n        }\n        else {\n            *ppcVar1 = vtable.CThreadData.0;\n        }\n        ppcVar1[2] = NULL;\n        ppcVar1[3] = NULL;\n        ppcVar3 = ppcVar1 + 2;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 7);\n        fcn.00448965(ppcVar1);\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 7);\n    }\n    else {\n        ppcVar3 = ppcVar1 + 2;\n        if ((arg_8h < *ppcVar3) || (arg_ch == 0)) goto code_r0x00448ccf;\n    }\n    if (ppcVar1[3] == NULL) {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0, in_ECX[3] << 2);\n    }\n    else {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_LocalReAlloc)(ppcVar1[3], in_ECX[3] << 2, 2);\n    }\n    ppcVar1[3] = pcVar2;\n    if (pcVar2 == NULL) {\n        fcn.0042a04b();\n    }\n    fcn.0040cfc0(ppcVar1[3] + *ppcVar3 * 4, 0, (*ppcVar3 * 0x3fffffff + in_ECX[3]) * 4);\n    *ppcVar3 = in_ECX[3];\n    (*_sym.imp.KERNEL32.dll_TlsSetValue)(*in_ECX, ppcVar1);\ncode_r0x00448ccf:\n    *(ppcVar1[3] + arg_8h * 4) = arg_ch;\n    return;\n}\n",
        "token_count": 537
    },
    "00448d3f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00448d3f(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    bool bVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = 1;\n    bVar2 = true;\n    if (1 < arg_8h[2]) {\n        do {\n            if ((arg_ch == 0) || (*(in_ECX[4] + 4 + iVar3 * 8) == arg_ch)) {\n                puVar1 = *(arg_8h[3] + iVar3 * 4);\n                if (puVar1 != NULL) {\n                    (***puVar1)(1);\n                }\n                *(arg_8h[3] + iVar3 * 4) = 0;\n            }\n            else if (*(arg_8h[3] + iVar3 * 4) != 0) {\n                bVar2 = false;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < arg_8h[2]);\n        if (!bVar2) {\n            return;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 7);\n    fcn.00448978(arg_8h);\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 7);\n    (*_sym.imp.KERNEL32.dll_LocalFree)(arg_8h[3]);\n    if (arg_8h != NULL) {\n        (***arg_8h)(1);\n    }\n    (*_sym.imp.KERNEL32.dll_TlsSetValue)(*in_ECX, 0);\n    return;\n}\n",
        "token_count": 374
    },
    "00448dd8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00448dd8(uint *param_1, int32_t param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint unaff_retaddr;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(param_1 + 7);\n    if (param_2 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*param_1);\n        if (iVar2 != 0) {\n            fcn.00448d3f(iVar2, unaff_retaddr);\n        }\n    }\n    else {\n        iVar2 = param_1[5];\n        while (iVar2 != 0) {\n            iVar1 = *(iVar2 + 4);\n            fcn.00448d3f(iVar2, param_3);\n            iVar2 = iVar1;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1 + 7);\n    return;\n}\n",
        "token_count": 221
    },
    "00448e31": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00448e58)\n\nint32_t __fastcall fcn.00448e31(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    code *unaff_retaddr;\n    \n    if (*param_1 == 0) {\n        if (*0x45ff74 == NULL) {\n            *0x45ff74 = fcn.004489f0();\n        }\n        iVar1 = fcn.00448a89();\n        *param_1 = iVar1;\n    }\n    iVar1 = *param_1;\n    iVar2 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(**0x45ff74);\n    if ((iVar2 == 0) || (*(iVar2 + 8) <= iVar1)) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = *(*(iVar2 + 0xc) + iVar1 * 4);\n    }\n    if (iVar1 == 0) {\n        iVar1 = (*unaff_retaddr)();\n        fcn.00448bf8(*param_1, iVar1);\n    }\n    return iVar1;\n}\n",
        "token_count": 257
    },
    "004491e7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004491e7(void)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    if (*0x460014 != 0) {\n        *0x45ffb8 = (*_sym.imp.USER32.dll_GetSystemMetrics)(2);\n        *0x45ffb8 = *0x45ffb8 + 1;\n        *0x45ffbc = (*pcVar1)(3);\n        *0x45ffbc = *0x45ffbc + 1;\n        *0x460020 = 1;\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "00449307": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "get OS version"
        ],
        "decompiled_code": "\nint32_t fcn.00449307(void)\n\n{\n    uint32_t uVar1;\n    \n    if (*0x460224 == 0) {\n        *0x460224 = 1;\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n        if ((uVar1 < 4) && ((uVar1 & 0x80000000) != 0)) {\n            *0x460220 = 1;\n        }\n        else {\n            *0x460220 = 0;\n            (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x460070);\n        }\n    }\n    return *0x460224;\n}\n",
        "token_count": 144
    },
    "0044934c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044934c(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_DeleteCriticalSection;\n    if ((*0x460224 != 0) && (*0x460224 = *0x460224 + -1,  *0x460220 == 0)) {\n        (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(0x460070);\n        piVar3 = 0x460028;\n        iVar2 = 0x460088;\n        do {\n            if (*piVar3 != 0) {\n                (*pcVar1)(iVar2);\n                *piVar3 = *piVar3 + -1;\n            }\n            iVar2 = iVar2 + 0x18;\n            piVar3 = piVar3 + 1;\n        } while (iVar2 < 0x460220);\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "0044939a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044939a(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    \n    if (*0x460224 == 0) {\n        fcn.00449307();\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_EnterCriticalSection;\n    if (*0x460220 == 0) {\n        piVar1 = param_1 * 4 + 0x460028;\n        if (*(param_1 * 4 + 0x460028) == 0) {\n            (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x460070);\n            if (*piVar1 == 0) {\n                (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(param_1 * 0x18 + 0x460088);\n                *piVar1 = *piVar1 + 1;\n            }\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x460070);\n        }\n        (*pcVar2)(param_1 * 0x18 + 0x460088);\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "0044940a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044940a(int32_t param_1)\n\n{\n    if (*0x460220 == 0) {\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1 * 0x18 + 0x460088);\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "0044957f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044957f(uint lpAppName, uint lpValueName, int32_t nDefault)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (*(in_ECX + 0x7c) == 0) {\n        nDefault = (*_sym.imp.KERNEL32.dll_GetPrivateProfileIntA)(lpAppName, lpValueName, nDefault, *(in_ECX + 0x90));\n    }\n    else {\n        var_4h = in_ECX;\n        iVar1 = fcn.00449539(lpAppName);\n        if (iVar1 != 0) {\n            lpAppName = 4;\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(iVar1, lpValueName, 0, &var_8h, &var_4h, &lpAppName);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n            if (iVar2 == 0) {\n                return var_4h;\n            }\n        }\n    }\n    return nDefault;\n}\n",
        "token_count": 260
    },
    "0044986b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0044986b(uint param_1, uint param_2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_SetErrorMode;\n    uVar2 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(0);\n    (*pcVar1)(uVar2 | 0x8001);\n    iVar3 = fcn.00447f81();\n    *(iVar3 + 8) = unaff_ESI;\n    *(iVar3 + 0xc) = unaff_ESI;\n    iVar3 = fcn.00447f81();\n    iVar3 = *(iVar3 + 4);\n    if (iVar3 != 0) {\n        *(iVar3 + 0x68) = unaff_ESI;\n        *(iVar3 + 0x6c) = unaff_retaddr;\n        *(iVar3 + 0x70) = param_1;\n        *(iVar3 + 0x74) = param_2;\n        fcn.004498ce();\n    }\n    iVar3 = fcn.00447f81();\n    if (*(iVar3 + 0x14) == '\\0') {\n        fcn.00435fb6();\n    }\n    return 1;\n}\n",
        "token_count": 300
    },
    "004498ce": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004498ce(int32_t param_1)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint var_30ch;\n    uint lpFilename;\n    uint var_108h;\n    uchar *var_4h;\n    \n    iVar2 = fcn.00447f81();\n    *(iVar2 + 8) = *(param_1 + 0x68);\n    *(iVar2 + 0xc) = *(param_1 + 0x68);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(*(param_1 + 0x68), &lpFilename, 0x104);\n    var_4h = fcn.0040db13(&lpFilename, 0x2e);\n    *var_4h = 0;\n    fcn.004499eb(&lpFilename, &var_108h, 0x104);\n    if (*(param_1 + 0x88) == 0) {\n        uVar3 = fcn.0040e1c4(&var_108h);\n        *(param_1 + 0x88) = uVar3;\n    }\n    if (*(param_1 + 0x78) == 0) {\n        iVar4 = fcn.004359aa(0xe000, &var_30ch, 0x100);\n        if (iVar4 == 0) {\n            puVar5 = *(param_1 + 0x88);\n        }\n        else {\n            puVar5 = &var_30ch;\n        }\n        uVar3 = fcn.0040e1c4(puVar5);\n        *(param_1 + 0x78) = uVar3;\n    }\n    puVar1 = var_4h;\n    *(iVar2 + 0x10) = *(param_1 + 0x78);\n    if (*(param_1 + 0x8c) == 0) {\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(var_4h, \".HLP\");\n        uVar3 = fcn.0040e1c4(&lpFilename);\n        *(param_1 + 0x8c) = uVar3;\n        *puVar1 = 0;\n    }\n    if (*(param_1 + 0x90) == 0) {\n        (*_sym.imp.KERNEL32.dll_lstrcatA)(&var_108h, \".INI\");\n        uVar3 = fcn.0040e1c4(&var_108h);\n        *(param_1 + 0x90) = uVar3;\n    }\n    return;\n}\n",
        "token_count": 596
    },
    "004499eb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.004499eb(char *param_1, int32_t param_2, uint param_3)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    \n    pcVar2 = param_1;\n    for (; *param_1 != '\\0'; param_1 = fcn.0040d6a2(param_1)) {\n        cVar1 = *param_1;\n        if (((cVar1 == '\\\\') || (cVar1 == '/')) || (cVar1 == ':')) {\n            pcVar2 = fcn.0040d6a2(param_1);\n        }\n    }\n    if (param_2 == 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(pcVar2);\n        iVar3 = iVar3 + 1;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_lstrcpynA)(param_2, pcVar2, param_3);\n        iVar3 = 0;\n    }\n    return iVar3;\n}\n",
        "token_count": 234
    },
    "0041c747": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0041c747(void)\n\n{\n    if (*0x4609f0 == 2) {\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4609d8);\n    }\n    return;\n}\n",
        "token_count": 52
    },
    "00401104": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint fcn.00401104(uint param_1, uint param_2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uchar auStack780 [780];\n    \n    if (*0x45e130 != 0) {\n        return 0;\n    }\n    uVar2 = fcn.0040100f(param_1, auStack780, param_2);\n    *0x45e130 = (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 0, uVar2);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if (iVar3 != 0xb7) {\n        iVar3 = (*pcVar1)();\n        if (iVar3 != 5) {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 197
    },
    "0041db40": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nint32_t fcn.0041db40(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0041db20(param_1);\n    if (iVar1 == 0) {\n        iVar1 = *0x462fb0;\n        if (param_2 != 6) {\n            iVar1 = *(param_2 * 0x18 + 0x462f24);\n        }\n        (*_sym.imp.USER32.dll_SetPropA)(param_1, *0x4624ce, iVar1);\n    }\n    return iVar1;\n}\n",
        "token_count": 136
    },
    "0043cfa9": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043cfa9(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, int32_t *arg_18h)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uint var_40h;\n    uint var_38h;\n    uint var_30h;\n    uint var_28h;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = *(arg_10h + 4);\n    if (uVar1 < 0x20c) {\n        if (uVar1 == 0x20b) {\n            fcn.0043c83a(&var_10h, *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x1e) {\n            (**(*arg_18h + 0x1c))();\n            return 1;\n        }\n        if (uVar1 == 0x103) {\n            (**(*arg_18h + 0x34))(*(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x127) {\n            (**(*arg_18h + 0x20))(*(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x12d) {\n            uVar5 = *(arg_ch + *(arg_10h + 6) * 4);\n            iVar3 = (*_sym.imp.GDI32.dll_GetObjectType)(uVar5);\n            if (iVar3 == 0) {\n                var_4h = (*_sym.imp.GDI32.dll_GetStockObject)(0xd);\n                pcVar2 = _sym.imp.GDI32.dll_SelectObject;\n                uVar4 = (*_sym.imp.GDI32.dll_SelectObject)(arg_18h[1], var_4h);\n                var_8h = (*pcVar2)(arg_18h[1], uVar5);\n                if (var_8h == var_4h) {\n                    iVar3 = *arg_18h;\n                    uVar5 = fcn.0043d587(uVar5);\n                    (**(iVar3 + 0x28))(uVar5);\n                    return 1;\n                }\n                (*pcVar2)(arg_18h[1], uVar4);\n                (*pcVar2)(arg_18h[1], var_8h);\n            }\n            else if (iVar3 == 6) {\n                iVar3 = *arg_18h;\n                uVar5 = fcn.0043d587(uVar5);\n                (**(iVar3 + 0x28))(uVar5);\n                return 1;\n            }\n        }\n        else {\n            if (uVar1 == 0x201) {\n                (**(*arg_18h + 0x2c))(*(arg_10h + 6));\n                return 1;\n            }\n            if (uVar1 == 0x209) {\n                (**(*arg_18h + 0x30))(*(arg_10h + 6));\n                return 1;\n            }\n        }\n    }\n    else {\n        if (uVar1 == 0x20c) {\n            (**(*arg_18h + 0x48))(&var_40h, *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x20d) {\n            (**(*arg_18h + 0x38))(&var_38h, *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x20e) {\n            (**(*arg_18h + 0x40))(&var_30h, *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x211) {\n            (**(*arg_18h + 0x3c))(&var_28h, *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x410) {\n            (**(*arg_18h + 0x4c))(&var_20h, *(arg_10h + 0xc), *(arg_10h + 10), *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x412) {\n            (**(*arg_18h + 0x44))(&var_18h, *(arg_10h + 0xc), *(arg_10h + 10), *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n    }\n    (*_sym.imp.GDI32.dll_PlayMetaFileRecord)(arg_8h, arg_ch, arg_10h, arg_14h);\n    return 1;\n}\n",
        "token_count": 1183
    },
    "00445b68": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00445b68(int32_t param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    if ((((param_2 != 0) && (param_2 != 6)) && (param_2 != 7)) && ((param_2 != 8 && (param_2 != 4)))) {\n        uVar1 = (*_sym.imp.USER32.dll_GetLastActivePopup)(*(param_1 + 0x1c));\n        (*_sym.imp.USER32.dll_BringWindowToTop)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "0042a0c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a0c9(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_4h;\n    \n    var_24h = (arg_ch & 0x1f) << 1;\n    var_1ch = arg_ch >> 0xb;\n    var_20h = arg_ch >> 5 & 0xf83f;\n    var_18h = arg_8h & 0x1f;\n    var_10h = (arg_8h >> 9) + 0x50;\n    var_4h = arg_10h;\n    var_14h = (arg_8h >> 5 & 0xf80f) - 1;\n    uVar1 = fcn.0040eb21(&var_24h);\n    *in_ECX = uVar1;\n    return;\n}\n",
        "token_count": 266
    },
    "00401267": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nint32_t fcn.00401267(char *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *param_1;\n    if (iVar1 == 0) {\n        return param_2;\n    }\n    do {\n        param_1 = param_1 + 1;\n        param_2 = iVar1 + param_2 * 0x21;\n        iVar1 = *param_1;\n    } while (iVar1 != 0);\n    return param_2;\n}\n",
        "token_count": 117
    },
    "004013ca": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nint32_t fcn.004013ca(uint16_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *param_1;\n    if (uVar1 == 0) {\n        return param_2;\n    }\n    do {\n        param_1 = param_1 + 1;\n        param_2 = uVar1 + param_2 * 0x21;\n        uVar1 = *param_1;\n    } while (uVar1 != 0);\n    return param_2;\n}\n",
        "token_count": 125
    },
    "0040128f": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.0040128f(int32_t param_1, uint32_t param_2, uint32_t param_3, int32_t param_4)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uchar *puVar7;\n    uint8_t *puVar8;\n    \n    iVar2 = fcn.0040cd2e(*0x45b25c);\n    puVar3 = fcn.0040cd2e(*0x45b260);\n    uVar6 = 0;\n    uVar5 = 0;\n    if (*0x45b264 != 0) {\n        do {\n            puVar7 = iVar2 + uVar5;\n            puVar7[puVar3 - iVar2] = uVar5;\n            uVar4 = uVar5 % **0x45b258;\n            uVar5 = uVar5 + 1;\n            *puVar7 = *(uVar4 + param_3);\n        } while (uVar5 < *0x45b264);\n    }\n    uVar5 = 0;\n    if (*0x45b268 != 0) {\n        puVar8 = puVar3;\n        do {\n            uVar6 = (*puVar8 + uVar6 + puVar8[iVar2 - puVar3]) % *0x45b26c;\n            uVar5 = uVar5 + 1;\n            uVar1 = puVar3[uVar6];\n            puVar3[uVar6] = *puVar8;\n            *puVar8 = uVar1;\n            puVar8 = puVar8 + 1;\n        } while (uVar5 < *0x45b268);\n    }\n    uVar6 = 0;\n    *0x45e240 = 0;\n    if (param_2 != 0) {\n        do {\n            uVar5 = (uVar5 + 1) % *0x45b270;\n            uVar6 = (puVar3[uVar5] + uVar6) % *0x45b274;\n            uVar1 = puVar3[uVar6];\n            puVar3[uVar6] = puVar3[uVar5];\n            param_3 = uVar1;\n            puVar3[uVar5] = uVar1;\n            *(**0x45b27c + param_4) = puVar3[(puVar3[uVar6] + param_3) % *0x45b278] ^ *(**0x45b27c + param_1);\n            *0x45e240 = *0x45e240 + 1;\n        } while (*0x45e240 < param_2);\n    }\n    return;\n}\n",
        "token_count": 628
    },
    "0043e2e4": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.0043e2e4(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    if (param_1 != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GlobalFlags)(param_1);\n        for (uVar1 = uVar1 & 0xff; uVar1 != 0; uVar1 = uVar1 - 1) {\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(param_1);\n        }\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(param_1);\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "00420e10": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00420e10(uint param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint noname_4;\n    int32_t iVar4;\n    uint unaff_EBX;\n    uint32_t unaff_EBP;\n    uint noname_5;\n    uint noname_6;\n    uint noname_7;\n    uint noname_3;\n    uint noname_9;\n    uint noname_10;\n    uint noname_11;\n    uint hWnd;\n    uint hdc;\n    uint nXLeft;\n    uint uStack44;\n    uint uStack40;\n    uint uStack8;\n    \n    uStack40 = 0xfffffff0;\n    uStack44 = param_1;\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)();\n    if ((uVar2 & 0x10000000) != 0) {\n        (*_sym.imp.USER32.dll_GetClientRect)();\n        pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    // switch table (10 cases) at 0x420f74\n        switch(unaff_EBP & 0x1f) {\n        case 0:\n        case 1:\n        case 2:\n        case 0xc:\n            nXLeft = 0;\n            hdc = 0;\n            hWnd = 0x31;\n            noname_11 = param_1;\n            iVar3 = (*_sym.imp.USER32.dll_SendMessageA)();\n            if (iVar3 != 0) {\n                iVar3 = (*_sym.imp.GDI32.dll_SelectObject)();\n            }\n            noname_10 = 2;\n            noname_9 = unaff_EBX;\n            (*_sym.imp.GDI32.dll_SetBkMode)();\n            noname_6 = 0x138;\n            noname_5 = param_1;\n            noname_7 = unaff_EBX;\n            noname_3 = param_1;\n            noname_4 = (*_sym.imp.USER32.dll_GetParent)();\n            iVar4 = (*pcVar1)();\n            if (iVar4 != 0) {\n                iVar4 = (*_sym.imp.GDI32.dll_SelectObject)(unaff_EBX, iVar4);\n            }\n            fcn.00420d30(param_1, unaff_EBX, &stack0xffffffb4, noname_3, noname_4, noname_5, noname_6, noname_7, \n                         noname_3, noname_9, noname_10, noname_11, hWnd, hdc, nXLeft);\n            if (iVar3 != 0) {\n                (*_sym.imp.GDI32.dll_SelectObject)(unaff_EBX, iVar3);\n            }\n            if (iVar4 != 0) {\n                (*_sym.imp.GDI32.dll_SelectObject)(unaff_EBX, iVar4);\n                return;\n            }\n            break;\n        case 4:\n        case 7:\n            fcn.0041de50();\n            return;\n        case 5:\n        case 8:\n        case 0x10:\n        case 0x11:\n        case 0x12:\n            fcn.0041de50();\n            (*_sym.imp.USER32.dll_OffsetRect)();\n            fcn.0041de50(uStack8, &uStack44);\n            return;\n        case 6:\n        case 9:\n            fcn.0041de50();\n        }\n    }\n    return;\n}\n",
        "token_count": 761
    },
    "00401398": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nbool __thiscall fcn.00401398(int32_t param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    bool bVar3;\n    int32_t iVar4;\n    \n    iVar2 = *(param_1 + 0x220);\n    if (*(param_1 + 0xc) != 0) {\n        iVar2 = iVar2 + 2;\n    }\n    iVar4 = param_1 + 0x14;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileMappingA)\n                      (param_2, param_3, (-(*(param_1 + 8) != 0) & 0xfffffffe) + 4, 0, iVar2, iVar4);\n    *(param_1 + 4) = iVar1;\n    if (iVar1 == 0) {\n        fcn.00401208();\n        return false;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_MapViewOfFile)(iVar1, (-(*(param_1 + 8) != 0) & 2U) + 2, 0, iVar4, iVar2);\n    *(param_1 + 0x10) = iVar2;\n    if ((*(param_1 + 0xc) != 0) && (iVar2 != 0)) {\n        *(iVar2 + *(param_1 + 0x220)) = 0;\n        *(iVar2 + 1 + *(param_1 + 0x220)) = 0;\n    }\n    bVar3 = *(param_1 + 0x10) != 0;\n    if (bVar3) {\n        *(param_1 + 0x21c) = 1;\n    }\n    return bVar3;\n}\n",
        "token_count": 393
    },
    "004012df": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nbool __thiscall fcn.004012df(int32_t param_1, uint param_2, uint param_3, int32_t param_4)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    *(param_1 + 0x220) = param_3;\n    *(param_1 + 8) = param_4;\n    cVar1 = (-(param_4 != 0) & 2U) + 2;\n    fcn.0040121c(param_2, param_1 + 0x14, 0x208, 1);\n    iVar2 = (*_sym.imp.KERNEL32.dll_OpenFileMappingA)(cVar1, 0, param_1 + 0x14);\n    *(param_1 + 4) = iVar2;\n    if (iVar2 == 0) {\n        fcn.00401208();\n        return false;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_MapViewOfFile)(iVar2, cVar1, 0, 0, *(param_1 + 0x220));\n    *(param_1 + 0x10) = iVar2;\n    if (iVar2 != 0) {\n        *(param_1 + 0x21c) = 1;\n    }\n    return iVar2 != 0;\n}\n",
        "token_count": 293
    },
    "00436f35": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nint32_t fcn.00436f35(uint32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    uint16_t uVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    \n    bVar6 = *(param_1 + 2) == -1;\n    iVar1 = fcn.00436edf(param_1);\n    if (*(param_1 + 2) == -1) {\n        uVar5 = param_1[3];\n    }\n    else {\n        uVar5 = *param_1;\n    }\n    if ((uVar5 & 0x40) != 0) {\n        iVar1 = iVar1 + ((-bVar6 & 2) + 1) * 2;\n        iVar2 = fcn.0040d465(iVar1);\n        iVar1 = iVar1 + 2 + iVar2 * 2;\n    }\n    if (bVar6) {\n        uVar4 = *(param_1 + 4);\n    }\n    else {\n        uVar4 = *(param_1 + 2);\n    }\n    if (uVar4 != 0) {\n        uVar5 = uVar4;\n        do {\n            puVar3 = (iVar1 + 3U & 0xfffffffc) + (-bVar6 & 6) + 0x12;\n            uVar4 = *puVar3;\n            if (uVar4 == 0xffff) {\n                puVar3 = puVar3 + 2;\n            }\n            else {\n                while (puVar3 = puVar3 + 1,  uVar4 != 0) {\n                    uVar4 = *puVar3;\n                }\n            }\n            uVar4 = *puVar3;\n            if (uVar4 == 0xffff) {\n                puVar3 = puVar3 + 2;\n            }\n            else {\n                while (puVar3 = puVar3 + 1,  uVar4 != 0) {\n                    uVar4 = *puVar3;\n                }\n            }\n            uVar5 = uVar5 - 1;\n            iVar1 = puVar3 + *puVar3 + 2;\n        } while (uVar5 != 0);\n    }\n    return iVar1 - param_1;\n}\n",
        "token_count": 515
    },
    "00436fed": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nuint fcn.00436fed(uint32_t *param_1, uint param_2, ushort *param_3)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    ushort *puVar3;\n    uint uVar4;\n    \n    if (*(param_1 + 2) == -1) {\n        uVar2 = param_1[3];\n    }\n    else {\n        uVar2 = *param_1;\n    }\n    if ((uVar2 & 0x40) == 0) {\n        return 0;\n    }\n    puVar3 = fcn.00436edf(param_1);\n    *param_3 = *puVar3;\n    iVar1 = *(param_1 + 2);\n    uVar4 = fcn.00434c77(0x20, 0x20, 0, 0);\n    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, puVar3 + ((iVar1 != -1) - 1 & 2) + 1, 0xffffffff, uVar4);\n    fcn.00434c4f(0xffffffff);\n    return 1;\n}\n",
        "token_count": 261
    },
    "004346bf": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004346bf(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(param_1 + 8);\n    if ((((iVar1 != 0x40) && (iVar1 != 0x80)) && (iVar1 != 0x100)) && (iVar1 != 0x200)) {\n        fcn.00434eca(param_1);\n        return;\n    }\n    fcn.0040c133(param_1);\n    return;\n}\n",
        "token_count": 112
    },
    "0041d350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3ch\n\ncode ** fcn.0041d350(void)\n\n{\n    uchar *arg_8h;\n    uint uVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_3ch;\n    uint var_20h;\n    uint var_dh;\n    uint var_4h;\n    \n    fcn.0040d018();\n    *(unaff_EBP + -0x20) = *(unaff_EBP + -0xd);\n    fcn.0041b3ba(0);\n    uVar1 = fcn.00410e90(\"string too long\");\n    fcn.0041b620(\"string too long\", uVar1);\n    *(unaff_EBP + -4) = 0;\n    fcn.0041d3aa(unaff_EBP + -0x20);\n    *(unaff_EBP + -0x3c) = vtable.std::length_error.0;\n    fcn.0040d037(unaff_EBP + -0x3c, 0x458e58);\n    fcn.0040d018();\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0x45e128;\n    fcn.00421b61(unaff_EBP + -0x10);\n    arg_8h = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    *(extraout_ECX + 3) = *arg_8h;\n    fcn.0041b3ba(0);\n    fcn.0041cd4e(arg_8h, 0, *0x453b70);\n    uVar1 = *(unaff_EBP + -0xc);\n    *extraout_ECX = vtable.std::logic_error.0;\n    *in_FS_OFFSET = uVar1;\n    return extraout_ECX;\n}\n",
        "token_count": 451
    },
    "0041d57c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3ch\n\nvoid fcn.0041d57c(void)\n\n{\n    uint uVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    int32_t arg_8h;\n    uint var_3ch;\n    uint var_20h;\n    uint var_dh;\n    uint var_4h;\n    \n    fcn.0040d018();\n    *(unaff_EBP + -0x20) = *(unaff_EBP + -0xd);\n    fcn.0041b3ba(0);\n    uVar1 = fcn.00410e90(\"invalid string position\");\n    fcn.0041b620(\"invalid string position\", uVar1);\n    *(unaff_EBP + -4) = 0;\n    fcn.0041d3aa(unaff_EBP + -0x20);\n    arg_8h = unaff_EBP + -0x3c;\n    *(unaff_EBP + -0x3c) = vtable.std::out_of_range.0;\n    fcn.0040d037(arg_8h, 0x458f80);\n    fcn.0040d018();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.std::logic_error.0;\n    *(unaff_EBP + -4) = 0;\n    fcn.0041b3ba(1, arg_8h, extraout_ECX);\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00421c07();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 391
    },
    "00430e66": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nbool __cdecl\nfcn.00430e66(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    bool bVar3;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint lpWindowName;\n    uint lpClassName;\n    uint dwExStyle;\n    \n    dwExStyle = arg_8h;\n    lpClassName = arg_ch;\n    lpWindowName = arg_10h;\n    var_10h = arg_14h;\n    var_14h = arg_18h;\n    var_18h = arg_1ch;\n    var_1ch = arg_20h;\n    var_20h = arg_24h;\n    var_24h = arg_28h;\n    var_28h = arg_2ch;\n    iVar1 = fcn.00447f81();\n    var_2ch = *(iVar1 + 8);\n    var_30h = arg_30h;\n    iVar1 = (**(*in_ECX + 0x5c))(&var_30h);\n    if (iVar1 == 0) {\n        (**(*in_ECX + 0xa4))();\n        bVar3 = false;\n    }\n    else {\n        fcn.00430d91();\n        iVar1 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                          (dwExStyle, lpClassName, lpWindowName, var_10h, var_14h, var_18h, var_1ch, var_20h, var_24h, \n                           var_28h, var_2ch, var_30h);\n        iVar2 = fcn.00430ddd();\n        if (iVar2 == 0) {\n            (**(*in_ECX + 0xa4))();\n        }\n        bVar3 = iVar1 != 0;\n    }\n    return bVar3;\n}\n",
        "token_count": 526
    },
    "004315c7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004315c7(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint lpWndClass;\n    uint var_ah;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    iVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = &stack0xffffffc4;\n    iVar4 = (*_sym.imp.USER32.dll_GetClassInfoA)(*(iVar1 + 0x10), *(iVar1 + 0x24), unaff_EBP + -0x38);\n    if (iVar4 == 0) {\n        iVar3 = (*_sym.imp.USER32.dll_RegisterClassA)(iVar1);\n        if (iVar3 == 0) {\n            uVar5 = 0;\n            goto code_r0x00431647;\n        }\n        iVar4 = fcn.00447f81();\n        if (*(iVar4 + 0x14) != '\\0') {\n            fcn.0044939a(1);\n            *(unaff_EBP + -4) = 0;\n            iVar4 = fcn.00447f81();\n            pcVar2 = _sym.imp.KERNEL32.dll_lstrcatA;\n            (*_sym.imp.KERNEL32.dll_lstrcatA)(iVar4 + 0x34, *(iVar1 + 0x24));\n            *(unaff_EBP + 10) = 10;\n            *(unaff_EBP + 0xb) = 0;\n            (*pcVar2)(iVar4 + 0x34, unaff_EBP + 10);\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0044940a(1);\n        }\n    }\n    uVar5 = 1;\ncode_r0x00431647:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar5;\n}\n",
        "token_count": 571
    },
    "0041e6a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041e6a0(uint32_t param_1, uint param_2, uint param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint16_t extraout_var;\n    uint32_t uVar3;\n    uint uVar4;\n    uchar *puVar5;\n    \n    iVar2 = fcn.0041db20(param_1);\n    if (iVar2 == 0) {\n        fcn.0041f830(param_1, param_2, 0, param_3);\n        return;\n    }\n    iVar2 = (*_sym.imp.USER32.dll_GetPropA)(param_1, *0x4624d4);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (iVar2 == 0) {\n        uVar4 = 0x1944;\n        uVar3 = param_1;\n        puVar5 = &stack0xfffffff4;\n        (*_sym.imp.USER32.dll_SendMessageA)(param_1, 0x1944, 0);\n        if (puVar5 == 0x29a) {\n            (*pcVar1)(param_1, 0x1943, 0);\n            if (&stack0xfffffff4 == 0x29a) {\n                (*_sym.imp.USER32.dll_RemovePropA)(param_1, *0x4624ce);\n                fcn.0041f830(param_1, uVar3 & 0xffff | extraout_var << 0x10, 0, uVar4);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 353
    },
    "00438bd8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.00438bd8(int32_t param_1)\n\n{\n    uint uStack4;\n    \n    if (param_1 < 0x17) {\n        if (param_1 == 0x16) {\n            return 10;\n        }\n        if (param_1 != 1) {\n            if (param_1 == 2) goto code_r0x00438c28;\n            if (param_1 == 5) {\n                return 10;\n            }\n            if (param_1 == 9) {\n                return 6;\n            }\n            if (param_1 != 0xd) {\n                return 1;\n            }\n        }\n        uStack4 = 5;\n    }\n    else {\n        if (param_1 != 0x17) {\n            if (param_1 == 0x18) {\n                return 4;\n            }\n            if (param_1 != 0x1c) {\n                if (param_1 != 0x24) {\n                    return 1;\n                }\n                return 0xb;\n            }\n            return 0xd;\n        }\ncode_r0x00438c28:\n        uStack4 = 2;\n    }\n    return uStack4;\n}\n",
        "token_count": 267
    },
    "0040c2ae": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c2ae(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.0040fc6f(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 106
    },
    "004491c7": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint fcn.004491c7(void)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    \n    uVar2 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n    *0x46000c = (uVar2 >> 8 & 0xff) + (uVar2 & 0xff) * 0x100;\n    *0x460010 = uVar2 >> 0x1f;\n    *0x460014 = 3 < uVar2;\n    *0x460018 = 1 - *0x460014;\n    *0x460020 = 0;\n    *0x46001c = *0x460014;\n    if (*0x460014 != 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessVersion)(0);\n        *0x460020 = 0x3ffff < uVar2;\n    }\n    fcn.00436bea();\n    *0x45ffdc = 0;\n    fcn.00436ba6();\n    pcVar1 = _sym.imp.USER32.dll_LoadCursorA;\n    *0x45fff4 = (*_sym.imp.USER32.dll_LoadCursorA)(0, 0x7f02);\n    *0x45fff8 = (*pcVar1)(0, 0x7f00);\n    *0x45ffc8 = (*0x460014 != 0) + 1;\n    *0x45ffcc = *0x45ffc8;\n    *0x45fffc = 0;\n    *0x460008 = 0;\n    return 0x45ffb8;\n}\n",
        "token_count": 362
    },
    "0042c07e": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c07e(int32_t arg_8h, uint *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_24h;\n    uint32_t var_20h;\n    uint32_t var_18h;\n    uint var_10h;\n    uint32_t lpPoint;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    puVar3 = arg_ch;\n    puVar4 = &var_24h;\n    for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    var_24h = (*_sym.imp.USER32.dll_SendMessageA)(*(arg_8h + 0x1c), 0x410, 0, &var_10h);\n    lpPoint = arg_ch[5];\n    var_4h = arg_ch[6];\n    if ((0x1ff < var_20h) && (var_20h < 0x20a)) {\n        (*_sym.imp.USER32.dll_ScreenToClient)(var_24h, &lpPoint);\n    }\n    var_18h = lpPoint & 0xffff | var_4h << 0x10;\n    (*pcVar1)(*(arg_8h + 0x1c), 0x407, 0, &var_24h);\n    return;\n}\n",
        "token_count": 372
    },
    "00445a75": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00445a75(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t in_ECX;\n    uint32_t uVar7;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetKeyState;\n    iVar2 = (*_sym.imp.USER32.dll_GetKeyState)(0x11);\n    if (iVar2 < 0) {\n        uVar7 = 8;\n    }\n    else {\n        uVar7 = 0;\n    }\n    iVar2 = (*pcVar1)(0x10);\n    if (iVar2 < 0) {\n        uVar3 = 4;\n    }\n    else {\n        uVar3 = 0;\n    }\n    iVar4 = (*_sym.imp.USER32.dll_GetFocus)();\n    iVar5 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n    if (iVar4 == 0) {\n        iVar6 = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x1c), 0x20a, arg_8h << 0x10 | uVar7 | uVar3, arg_ch);\n    }\n    else {\n        do {\n            iVar6 = (*_sym.imp.USER32.dll_SendMessageA)(iVar4, 0x20a, arg_8h << 0x10 | uVar7 | uVar3, arg_ch);\n            iVar4 = (*_sym.imp.USER32.dll_GetParent)(iVar4);\n            if (iVar6 != 0) {\n                return iVar6;\n            }\n            if (iVar4 == 0) {\n                return 0;\n            }\n        } while (iVar4 != iVar5);\n    }\n    return iVar6;\n}\n",
        "token_count": 420
    },
    "0042f05b": {
        "rules": [
            "hash data using djb2/6ad21e310d674441ba35d7276afbe57d",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0042f05b(int32_t param_1, char *param_2, uint32_t *param_3)\n\n{\n    char *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    char cVar4;\n    char *pcVar5;\n    uint *puVar6;\n    \n    uVar2 = 0;\n    cVar4 = *param_2;\n    pcVar5 = param_2;\n    while (cVar4 != '\\0') {\n        uVar2 = uVar2 * 0x21 + cVar4;\n        pcVar1 = pcVar5 + 1;\n        pcVar5 = pcVar5 + 1;\n        cVar4 = *pcVar1;\n    }\n    uVar2 = uVar2 % *(param_1 + 8);\n    *param_3 = uVar2;\n    if (*(param_1 + 4) != 0) {\n        for (puVar6 = *(*(param_1 + 4) + uVar2 * 4); puVar6 != NULL; puVar6 = *puVar6) {\n            iVar3 = fcn.0040c8bd(puVar6[2], param_2);\n            if (iVar3 == 0) {\n                return puVar6;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 303
    },
    "00401005": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401005(code **param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x44c788;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = vtable.CGdiObject.0;\n    uStack4 = 0;\n    fcn.0043d5f3(param_1);\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 126
    },
    "00401014": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00401014(int32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint32_t uStack8;\n    \n    iVar2 = param_1;\n    iVar3 = fcn.00401267(*0x45b250, *0x45b24c);\n    iVar4 = fcn.00401267(*0x45b250, *0x45b24c);\n    iVar5 = fcn.00401267(*0x45b250, *0x45b24c);\n    iVar6 = fcn.00401267(*0x45b250, *0x45b24c);\n    iVar7 = fcn.00401267(*0x45b250, *0x45b24c);\n    iVar8 = fcn.00401267(*0x45b250, *0x45b24c);\n    iVar3 = *(*(iVar3 + -0x1673f30 + param_1) + iVar4 + -0x1673ef4 + param_1) + param_1;\n    uVar1 = *(iVar3 + iVar5 + -0x1673f54);\n    iVar5 = *(iVar3 + iVar6 + -0x1673f50) + param_1;\n    iVar4 = *(iVar3 + iVar8 + -0x1673f48) + param_1;\n    uStack8 = 0;\n    uVar9 = 0;\n    param_1 = *(iVar3 + iVar7 + -0x1673f4c) + param_1;\n    if (uVar1 != 0) {\n        do {\n            iVar3 = fcn.00401267(*param_1 + iVar2, *0x45b24c);\n            uVar9 = uStack8;\n            if (iVar3 == param_2) break;\n            uVar9 = uStack8 + 1;\n            param_1 = param_1 + 1;\n            uStack8 = uVar9;\n        } while (uVar9 < uVar1);\n    }\n    if (uVar9 != uVar1) {\n        return *(iVar5 + *(iVar4 + uVar9 * 2) * 4) + iVar2;\n    }\n    return 0;\n}\n",
        "token_count": 563
    },
    "00401023": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401023(code **param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x44cab8;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = vtable.CMenu.0;\n    uStack4 = 0;\n    fcn.00435b45(param_1);\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 123
    },
    "00401028": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.00401028(void)\n\n{\n    ulong uVar1;\n    ulong uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    ulong uVar5;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = rdtsc();\n    uVar3 = uVar1 >> 0x20;\n    (*_sym.imp.KERNEL32.dll_Sleep)(1000);\n    uVar2 = rdtsc();\n    uVar4 = uVar2 >> 0x20;\n    uVar5 = fcn.0040c710(uVar4 - uVar3, -(uVar4 < uVar3), 0, 1);\n    uVar3 = uVar5 - uVar1;\n    fcn.0040c6a0(uVar3 + uVar2, ((uVar5 >> 0x20) - (uVar5 < uVar1)) + CARRY4(uVar3, uVar2), 1000000, 0);\n    return;\n}\n",
        "token_count": 243
    },
    "0040104b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040104b(uint *param_1)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x44cd48;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = 0x450a48;\n    puVar1 = param_1[1];\n    uStack4 = 0;\n    if (puVar1 != NULL) {\n        puVar3 = puVar1;\n        for (iVar4 = param_1[2]; iVar4 != 0; iVar4 = iVar4 + -1) {\n            for (puVar2 = *puVar3; puVar2 != NULL; puVar2 = *puVar2) {\n            }\n            puVar3 = puVar3 + 1;\n        }\n    }\n    fcn.00434eca(puVar1);\n    param_1[1] = 0;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    fcn.0042d84e();\n    param_1[5] = 0;\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 310
    },
    "0040105f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "validate payment card number using luhn algorithm with lookup table/f2e93a0d9a164553a93d71878df6b782"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __thiscall fcn.0040105f(uint *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x44cba1;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    fcn.00435446(0x66, param_2);\n    uStack12 = 0;\n    fcn.004304bd();\n    param_1[0x17] = vtable.CStatic.0;\n    uStack12._0_1_ = 1;\n    fcn.004304bd();\n    param_1[0x26] = vtable.CStatic.0;\n    uStack12._0_1_ = 2;\n    fcn.004304bd();\n    param_1[0x35] = vtable.CStatic.0;\n    uStack12._0_1_ = 3;\n    fcn.004304bd();\n    param_1[0x44] = vtable.CStatic.0;\n    uStack12._0_1_ = 4;\n    fcn.004304bd();\n    param_1[0x53] = vtable.CStatic.0;\n    uStack12._0_1_ = 5;\n    fcn.004304bd();\n    param_1[0x62] = vtable.CStatic.0;\n    uStack12._0_1_ = 6;\n    fcn.004304bd();\n    param_1[0x71] = vtable.CStatic.0;\n    uStack12._0_1_ = 7;\n    fcn.00401393();\n    uStack12._0_1_ = 8;\n    fcn.004010af();\n    param_1[0x1a2] = 0x450a48;\n    param_1[0x1a3] = 0;\n    param_1[0x1a4] = 0x11;\n    param_1[0x1a5] = 0;\n    param_1[0x1a6] = 0;\n    param_1[0x1a7] = 0;\n    param_1[0x1a8] = 10;\n    uStack12 = CONCAT31(uStack12._1_3_, 10);\n    *param_1 = 0x45094c;\n    fcn.00447f81();\n    iVar1 = fcn.00447f81();\n    uVar2 = (*_sym.imp.USER32.dll_LoadIconA)(*(iVar1 + 0xc), 0x80);\n    param_1[0x19a] = uVar2;\n    param_1[0x19b] = 0;\n    param_1[0x19c] = 0;\n    param_1[0x19d] = 0;\n    param_1[0x19f] = 0xffffffff;\n    param_1[0x1a0] = 0xffffffff;\n    param_1[0x19e] = 0;\n    param_1[0x1a1] = 0;\n    *in_FS_OFFSET = unaff_EDI;\n    return param_1;\n}\n",
        "token_count": 769
    },
    "00401064": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00401064(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x44c586;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = 0x450080;\n    iVar1 = param_1[0x8f];\n    uStack4 = 5;\n    if ((((iVar1 != 0) && (param_1 != 0xfffffdc0)) && (param_1[0x91] != 0)) &&\n       ((param_1 != 0xfffffdd4 && (param_1[0x8c] != 0)))) {\n        if (iVar1 == 0) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = *(iVar1 + 4);\n        }\n        fcn.0043c42e(param_1[0x8c], uVar2);\n    }\n    uStack12._0_1_ = 4;\n    fcn.004347d0();\n    param_1[0x90] = vtable.CGdiObject.0;\n    uStack12._0_1_ = 6;\n    fcn.0043d5f3();\n    uStack12._0_1_ = 2;\n    fcn.0043c333();\n    param_1[0x84] = vtable.CGdiObject.0;\n    uStack12._0_1_ = 7;\n    fcn.0043d5f3();\n    param_1[0x82] = vtable.CGdiObject.0;\n    uStack12 = CONCAT31(uStack12._1_3_, 8);\n    fcn.0043d5f3();\n    uStack12 = 0xffffffff;\n    fcn.00442cc2();\n    *in_FS_OFFSET = param_1;\n    return;\n}\n",
        "token_count": 464
    },
    "00401069": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\ncode ** __fastcall fcn.00401069(code **param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x44c87f;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    fcn.004304bd();\n    *param_1 = vtable.CStatic.0;\n    param_1[0x13] = vtable.CBrush.0;\n    param_1[0x14] = NULL;\n    param_1[0x19] = *0x45b93c;\n    param_1[0x1b] = NULL;\n    param_1[0x1a] = 0x45016c;\n    param_1[0x1d] = NULL;\n    param_1[0x1c] = 0x45016c;\n    uStack4._0_1_ = 4;\n    uStack4._1_3_ = 0;\n    fcn.0042bab7();\n    uStack4 = CONCAT31(uStack4._1_3_, 5);\n    *param_1 = 0x450484;\n    param_1[0x1e] = NULL;\n    param_1[0xf] = 0xee0000;\n    param_1[0x10] = 0x8b1a55;\n    param_1[0x11] = 0xff;\n    param_1[0x15] = NULL;\n    param_1[0x16] = NULL;\n    param_1[0x17] = 0xffffffff;\n    param_1[0x18] = 0x1;\n    fcn.00434959(0x45e128);\n    param_1[0x37] = NULL;\n    param_1[0x39] = NULL;\n    param_1[0x35] = 0x64;\n    param_1[0x36] = 0x1;\n    param_1[0x38] = 0x1;\n    param_1[0x12] = 0xffffffff;\n    *in_FS_OFFSET = param_1;\n    return param_1;\n}\n",
        "token_count": 520
    },
    "0040107d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0040107d(uint *param_1)\n\n{\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x44c7c8;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    fcn.00435446(100, 0);\n    uStack12 = 0;\n    fcn.00401069();\n    *param_1 = 0x4502b0;\n    *in_FS_OFFSET = unaff_ESI;\n    return param_1;\n}\n",
        "token_count": 157
    },
    "004010af": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\ncode ** __fastcall fcn.004010af(code **param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x44c4fe;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    fcn.004304bd();\n    *param_1 = vtable.CStatic.0;\n    param_1[0x82] = vtable.CRgn.0;\n    param_1[0x83] = NULL;\n    param_1[0x85] = NULL;\n    param_1[0x84] = 0x45016c;\n    uStack4._0_1_ = 2;\n    uStack4._1_3_ = 0;\n    fcn.0043c1fe();\n    param_1[0x91] = NULL;\n    param_1[0x90] = 0x45015c;\n    param_1[0x9b] = *0x45b93c;\n    param_1[0x94] = NULL;\n    param_1[0x96] = NULL;\n    param_1[0x98] = NULL;\n    uStack4 = CONCAT31(uStack4._1_3_, 5);\n    *param_1 = 0x450080;\n    param_1[0x95] = NULL;\n    param_1[0x97] = 0x40140000;\n    param_1[0x99] = 0xc0140000;\n    param_1[0x92] = 0x1;\n    param_1[0x93] = 0x3;\n    fcn.00429c21(param_1 + 0x9b, \"Volts\");\n    param_1[0x8f] = NULL;\n    param_1[0x9a] = 0xff;\n    *in_FS_OFFSET = uStack12;\n    return param_1;\n}\n",
        "token_count": 469
    },
    "0040112c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040112c(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    int32_t *piVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    \n    fcn.00401307(0x30);\n    pcVar4 = _sym.imp.USER32.dll_SendMessageA;\n    (*_sym.imp.USER32.dll_SendMessageA)(0, 0x234, 0, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    iVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    pcVar3 = _sym.imp.USER32.dll_InSendMessage;\n    pcVar2 = _sym.imp.USER32.dll_CreateWindowExA;\n    if (iVar5 == 0) {\n        (*_sym.imp.USER32.dll_CreateWindowExA)\n                  (0, \"MT97fXBfFEGMmgEX0EKSN9CG1z3q47RCOsSMKVf0dDHooQXQqLVjRcEj5R2krHVfdLAnUs\", \n                   \"Vl1gq5AbdzTImw0TNvtsOI2tXKryfgt8ISvVatYuZBdMEsarOFN2e56lpcQdom7o6nTETt\", 0x800000, 0x3c, 100, 0xcd, \n                   0xf, 0, 0, 0, 0);\n    }\n    else {\n        iVar5 = (*_sym.imp.USER32.dll_InSendMessage)();\n        if (iVar5 != 0) {\n            (*pcVar4)(0, 0x1992, 0, 0);\n        }\n    }\n    (*pcVar4)(0, 0x234, 0, 0);\n    iVar5 = (*pcVar1)();\n    if (iVar5 == 0) {\n        (*pcVar2)(0, \"MT97fXBfFEGMmgEX0EKSN9CG1z3q47RCOsSMKVf0dDHooQXQqLVjRcEj5R2krHVfdLAnUs\", \n                  \"Vl1gq5AbdzTImw0TNvtsOI2tXKryfgt8ISvVatYuZBdMEsarOFN2e56lpcQdom7o6nTETt\", 0x800000, 0x3c, 100, 0xcd, \n                  0xf, 0, 0, 0, 0);\n    }\n    else {\n        iVar5 = (*pcVar3)();\n        if (iVar5 != 0) {\n            (*pcVar4)(0, 0x1992, 0, 0);\n        }\n    }\n    (*pcVar4)(0, 0x234, 0, 0);\n    iVar5 = (*pcVar1)();\n    if (iVar5 == 0) {\n        (*pcVar2)(0, \"MT97fXBfFEGMmgEX0EKSN9CG1z3q47RCOsSMKVf0dDHooQXQqLVjRcEj5R2krHVfdLAnUs\", \n                  \"Vl1gq5AbdzTImw0TNvtsOI2tXKryfgt8ISvVatYuZBdMEsarOFN2e56lpcQdom7o6nTETt\", 0x800000, 0x3c, 100, 0xcd, \n                  0xf, 0, 0, 0, 0);\n    }\n    else {\n        iVar5 = (*pcVar3)();\n        if (iVar5 != 0) {\n            (*pcVar4)(0, 0x1992, 0, 0);\n        }\n    }\n    (*pcVar4)(0, 0x234, 0, 0);\n    iVar5 = (*pcVar1)();\n    if (iVar5 == 0) {\n        (*pcVar2)(0, \"MT97fXBfFEGMmgEX0EKSN9CG1z3q47RCOsSMKVf0dDHooQXQqLVjRcEj5R2krHVfdLAnUs\", \n                  \"Vl1gq5AbdzTImw0TNvtsOI2tXKryfgt8ISvVatYuZBdMEsarOFN2e56lpcQdom7o6nTETt\", 0x800000, 0x3c, 100, 0xcd, \n                  0xf, 0, 0, 0, 0);\n    }\n    else {\n        iVar5 = (*pcVar3)();\n        if (iVar5 != 0) {\n            (*pcVar4)(0, 0x1992, 0, 0);\n        }\n    }\n    (*pcVar4)(0, 0x234, 0, 0);\n    iVar5 = (*pcVar1)();\n    if (iVar5 == 0) {\n        (*pcVar2)(0, \"MT97fXBfFEGMmgEX0EKSN9CG1z3q47RCOsSMKVf0dDHooQXQqLVjRcEj5R2krHVfdLAnUs\", \n                  \"Vl1gq5AbdzTImw0TNvtsOI2tXKryfgt8ISvVatYuZBdMEsarOFN2e56lpcQdom7o6nTETt\", 0x800000, 0x3c, 100, 0xcd, \n                  0xf, 0, 0, 0, 0);\n    }\n    else {\n        iVar5 = (*pcVar3)();\n        if (iVar5 != 0) {\n            (*pcVar4)(0, 0x1992, 0, 0);\n        }\n    }\n    (*pcVar4)(0, 0x234, 0, 0);\n    iVar5 = (*pcVar1)();\n    if (iVar5 == 0) {\n        (*pcVar2)(0, \"MT97fXBfFEGMmgEX0EKSN9CG1z3q47RCOsSMKVf0dDHooQXQqLVjRcEj5R2krHVfdLAnUs\", \n                  \"Vl1gq5AbdzTImw0TNvtsOI2tXKryfgt8ISvVatYuZBdMEsarOFN2e56lpcQdom7o6nTETt\", 0x800000, 0x3c, 100, 0xcd, \n                  0xf, 0, 0, 0, 0);\n    }\n    else {\n        iVar5 = (*pcVar3)();\n        if (iVar5 != 0) {\n            (*pcVar4)(0, 0x1992, 0, 0);\n        }\n    }\n    (*pcVar4)(0, 0x234, 0, 0);\n    iVar5 = (*pcVar1)();\n    if (iVar5 == 0) {\n        (*pcVar2)(0, \"MT97fXBfFEGMmgEX0EKSN9CG1z3q47RCOsSMKVf0dDHooQXQqLVjRcEj5R2krHVfdLAnUs\", \n                  \"Vl1gq5AbdzTImw0TNvtsOI2tXKryfgt8ISvVatYuZBdMEsarOFN2e56lpcQdom7o6nTETt\", 0x800000, 0x3c, 100, 0xcd, \n                  0xf, 0, 0, 0, 0);\n    }\n    else {\n        iVar5 = (*pcVar3)();\n        if (iVar5 != 0) {\n            (*pcVar4)(0, 0x1992, 0, 0);\n        }\n    }\n    (*pcVar4)(0, 0x234, 0, 0);\n    iVar5 = (*pcVar1)();\n    if (iVar5 == 0) {\n        (*pcVar2)(0, \"MT97fXBfFEGMmgEX0EKSN9CG1z3q47RCOsSMKVf0dDHooQXQqLVjRcEj5R2krHVfdLAnUs\", \n                  \"Vl1gq5AbdzTImw0TNvtsOI2tXKryfgt8ISvVatYuZBdMEsarOFN2e56lpcQdom7o6nTETt\", 0x800000, 0x3c, 100, 0xcd, \n                  0xf, 0, 0, 0, 0);\n    }\n    else {\n        iVar5 = (*pcVar3)();\n        if (iVar5 != 0) {\n            (*pcVar4)(0, 0x1992, 0, 0);\n        }\n    }\n    (*pcVar4)(0, 0x234, 0, 0);\n    iVar5 = (*pcVar1)();\n    if (iVar5 == 0) {\n        (*pcVar2)(0, \"MT97fXBfFEGMmgEX0EKSN9CG1z3q47RCOsSMKVf0dDHooQXQqLVjRcEj5R2krHVfdLAnUs\", \n                  \"Vl1gq5AbdzTImw0TNvtsOI2tXKryfgt8ISvVatYuZBdMEsarOFN2e56lpcQdom7o6nTETt\", 0x800000, 0x3c, 100, 0xcd, \n                  0xf, 0, 0, 0, 0);\n    }\n    else {\n        iVar5 = (*pcVar3)();\n        if (iVar5 != 0) {\n            (*pcVar4)(0, 0x1992, 0, 0);\n        }\n    }\n    (*pcVar4)(0, 0x234, 0, 0);\n    iVar5 = (*pcVar1)();\n    if (iVar5 == 0) {\n        (*pcVar2)(0, \"MT97fXBfFEGMmgEX0EKSN9CG1z3q47RCOsSMKVf0dDHooQXQqLVjRcEj5R2krHVfdLAnUs\", \n                  \"Vl1gq5AbdzTImw0TNvtsOI2tXKryfgt8ISvVatYuZBdMEsarOFN2e56lpcQdom7o6nTETt\", 0x800000, 0x3c, 100, 0xcd, \n                  0xf, 0, 0, 0, 0);\n    }\n    else {\n        iVar5 = (*pcVar3)();\n        if (iVar5 != 0) {\n            (*pcVar4)(0, 0x1992, 0, 0);\n        }\n    }\n    (*pcVar4)(0, 0x234, 0, 0);\n    iVar5 = (*pcVar1)();\n    if (iVar5 == 0) {\n        (*pcVar2)(0, \"MT97fXBfFEGMmgEX0EKSN9CG1z3q47RCOsSMKVf0dDHooQXQqLVjRcEj5R2krHVfdLAnUs\", \n                  \"Vl1gq5AbdzTImw0TNvtsOI2tXKryfgt8ISvVatYuZBdMEsarOFN2e56lpcQdom7o6nTETt\", 0x800000, 0x3c, 100, 0xcd, \n                  0xf, 0, 0, 0, 0);\n    }\n    else {\n        iVar5 = (*pcVar3)();\n        if (iVar5 != 0) {\n            (*pcVar4)(0, 0x1992, 0, 0);\n        }\n    }\n    (*pcVar4)(0, 0x234, 0, 0);\n    iVar5 = (*pcVar1)();\n    if (iVar5 == 0) {\n        (*pcVar2)(0, \"MT97fXBfFEGMmgEX0EKSN9CG1z3q47RCOsSMKVf0dDHooQXQqLVjRcEj5R2krHVfdLAnUs\", \n                  \"Vl1gq5AbdzTImw0TNvtsOI2tXKryfgt8ISvVatYuZBdMEsarOFN2e56lpcQdom7o6nTETt\", 0x800000, 0x3c, 100, 0xcd, \n                  0xf, 0, 0, 0, 0);\n    }\n    else {\n        iVar5 = (*pcVar3)();\n        if (iVar5 != 0) {\n            (*pcVar4)(0, 0x1992, 0, 0);\n        }\n    }\n    (*pcVar4)(0, 0x234, 0, 0);\n    iVar5 = (*pcVar1)();\n    if (iVar5 == 0) {\n        (*pcVar2)(0, \"MT97fXBfFEGMmgEX0EKSN9CG1z3q47RCOsSMKVf0dDHooQXQqLVjRcEj5R2krHVfdLAnUs\", \n                  \"Vl1gq5AbdzTImw0TNvtsOI2tXKryfgt8ISvVatYuZBdMEsarOFN2e56lpcQdom7o6nTETt\", 0x800000, 0x3c, 100, 0xcd, \n                  0xf, 0, 0, 0, 0);\n    }\n    else {\n        iVar5 = (*pcVar3)();\n        if (iVar5 != 0) {\n            (*pcVar4)(0, 0x1992, 0, 0);\n        }\n    }\n    (*pcVar4)(0, 0x234, 0, 0);\n    iVar5 = (*pcVar1)();\n    if (iVar5 == 0) {\n        (*pcVar2)(0, \"MT97fXBfFEGMmgEX0EKSN9CG1z3q47RCOsSMKVf0dDHooQXQqLVjRcEj5R2krHVfdLAnUs\", \n                  \"Vl1gq5AbdzTImw0TNvtsOI2tXKryfgt8ISvVatYuZBdMEsarOFN2e56lpcQdom7o6nTETt\", 0x800000, 0x3c, 100, 0xcd, \n                  0xf, 0, 0, 0, 0);\n    }\n    else {\n        iVar5 = (*pcVar3)();\n        if (iVar5 != 0) {\n            (*pcVar4)(0, 0x1992, 0, 0);\n        }\n    }\n    (*pcVar4)(0, 0x234, 0, 0);\n    iVar5 = (*pcVar1)();\n    if (iVar5 == 0) {\n        (*pcVar2)(0, \"MT97fXBfFEGMmgEX0EKSN9CG1z3q47RCOsSMKVf0dDHooQXQqLVjRcEj5R2krHVfdLAnUs\", \n                  \"Vl1gq5AbdzTImw0TNvtsOI2tXKryfgt8ISvVatYuZBdMEsarOFN2e56lpcQdom7o6nTETt\", 0x800000, 0x3c, 100, 0xcd, \n                  0xf, 0, 0, 0, 0);\n    }\n    else {\n        iVar5 = (*pcVar3)();\n        if (iVar5 != 0) {\n            (*pcVar4)(0, 0x1992, 0, 0);\n        }\n    }\n    (*pcVar4)(0, 0x234, 0, 0);\n    iVar5 = (*pcVar1)();\n    if (iVar5 == 0) {\n        (*pcVar2)(0, \"MT97fXBfFEGMmgEX0EKSN9CG1z3q47RCOsSMKVf0dDHooQXQqLVjRcEj5R2krHVfdLAnUs\", \n                  \"Vl1gq5AbdzTImw0TNvtsOI2tXKryfgt8ISvVatYuZBdMEsarOFN2e56lpcQdom7o6nTETt\", 0x800000, 0x3c, 100, 0xcd, \n                  0xf, 0, 0, 0, 0);\n    }\n    else {\n        iVar5 = (*pcVar3)();\n        if (iVar5 != 0) {\n            (*pcVar4)(0, 0x1992, 0, 0);\n        }\n    }\n    (*pcVar4)(0, 0x234, 0, 0);\n    iVar5 = (*pcVar1)();\n    if (iVar5 == 0) {\n        (*pcVar2)(0, \"MT97fXBfFEGMmgEX0EKSN9CG1z3q47RCOsSMKVf0dDHooQXQqLVjRcEj5R2krHVfdLAnUs\", \n                  \"Vl1gq5AbdzTImw0TNvtsOI2tXKryfgt8ISvVatYuZBdMEsarOFN2e56lpcQdom7o6nTETt\", 0x800000, 0x3c, 100, 0xcd, \n                  0xf, 0, 0, 0, 0);\n    }\n    else {\n        iVar5 = (*pcVar3)();\n        if (iVar5 != 0) {\n            (*pcVar4)(0, 0x1992, 0, 0);\n        }\n    }\n    (*pcVar4)(0, 0x234, 0, 0);\n    iVar5 = (*pcVar1)();\n    if (iVar5 == 0) {\n        (*pcVar2)(0, \"MT97fXBfFEGMmgEX0EKSN9CG1z3q47RCOsSMKVf0dDHooQXQqLVjRcEj5R2krHVfdLAnUs\", \n                  \"Vl1gq5AbdzTImw0TNvtsOI2tXKryfgt8ISvVatYuZBdMEsarOFN2e56lpcQdom7o6nTETt\", 0x800000, 0x3c, 100, 0xcd, \n                  0xf, 0, 0, 0, 0);\n    }\n    else {\n        iVar5 = (*pcVar3)();\n        if (iVar5 != 0) {\n            (*pcVar4)(0, 0x1992, 0, 0);\n        }\n    }\n    (*pcVar4)(0, 0x234, 0, 0);\n    iVar5 = (*pcVar1)();\n    if (iVar5 == 0) {\n        (*pcVar2)(0, \"MT97fXBfFEGMmgEX0EKSN9CG1z3q47RCOsSMKVf0dDHooQXQqLVjRcEj5R2krHVfdLAnUs\", \n                  \"Vl1gq5AbdzTImw0TNvtsOI2tXKryfgt8ISvVatYuZBdMEsarOFN2e56lpcQdom7o6nTETt\", 0x800000, 0x3c, 100, 0xcd, \n                  0xf, 0, 0, 0, 0);\n    }\n    else {\n        iVar5 = (*pcVar3)();\n        if (iVar5 != 0) {\n            (*pcVar4)(0, 0x1992, 0, 0);\n        }\n    }\n    (*pcVar4)(0, 0x234, 0, 0);\n    iVar5 = (*pcVar1)();\n    if (iVar5 == 0) {\n        (*pcVar2)(0, \"MT97fXBfFEGMmgEX0EKSN9CG1z3q47RCOsSMKVf0dDHooQXQqLVjRcEj5R2krHVfdLAnUs\", \n                  \"Vl1gq5AbdzTImw0TNvtsOI2tXKryfgt8ISvVatYuZBdMEsarOFN2e56lpcQdom7o6nTETt\", 0x800000, 0x3c, 100, 0xcd, \n                  0xf, 0, 0, 0, 0);\n    }\n    else {\n        iVar5 = (*pcVar3)();\n        if (iVar5 != 0) {\n            (*pcVar4)(0, 0x1992, 0, 0);\n        }\n    }\n    (*pcVar4)(0, 0x234, 0, 0);\n    iVar5 = (*pcVar1)();\n    if (iVar5 == 0) {\n        (*pcVar2)(0, \"MT97fXBfFEGMmgEX0EKSN9CG1z3q47RCOsSMKVf0dDHooQXQqLVjRcEj5R2krHVfdLAnUs\", \n                  \"Vl1gq5AbdzTImw0TNvtsOI2tXKryfgt8ISvVatYuZBdMEsarOFN2e56lpcQdom7o6nTETt\", 0x800000, 0x3c, 100, 0xcd, \n                  0xf, 0, 0, 0, 0);\n    }\n    else {\n        iVar5 = (*pcVar3)();\n        if (iVar5 != 0) {\n            (*pcVar4)(0, 0x1992, 0, 0);\n        }\n    }\n    (*pcVar4)(0, 0x234, 0, 0);\n    iVar5 = (*pcVar1)();\n    if (iVar5 == 0) {\n        (*pcVar2)(0, \"MT97fXBfFEGMmgEX0EKSN9CG1z3q47RCOsSMKVf0dDHooQXQqLVjRcEj5R2krHVfdLAnUs\", \n                  \"Vl1gq5AbdzTImw0TNvtsOI2tXKryfgt8ISvVatYuZBdMEsarOFN2e56lpcQdom7o6nTETt\", 0x800000, 0x3c, 100, 0xcd, \n                  0xf, 0, 0, 0, 0);\n    }\n    else {\n        iVar5 = (*pcVar3)();\n        if (iVar5 != 0) {\n            (*pcVar4)(0, 0x1992, 0, 0);\n        }\n    }\n    (*pcVar4)(0, 0x234, 0, 0);\n    iVar5 = (*pcVar1)();\n    if (iVar5 == 0) {\n        (*pcVar2)(0, \"MT97fXBfFEGMmgEX0EKSN9CG1z3q47RCOsSMKVf0dDHooQXQqLVjRcEj5R2krHVfdLAnUs\", \n                  \"Vl1gq5AbdzTImw0TNvtsOI2tXKryfgt8ISvVatYuZBdMEsarOFN2e56lpcQdom7o6nTETt\", 0x800000, 0x3c, 100, 0xcd, \n                  0xf, 0, 0, 0, 0);\n    }\n    else {\n        iVar5 = (*pcVar3)();\n        if (iVar5 != 0) {\n            (*pcVar4)(0, 0x1992, 0, 0);\n        }\n    }\n    (*pcVar4)(0, 0x234, 0, 0);\n    iVar5 = (*pcVar1)();\n    if (iVar5 == 0) {\n        (*pcVar2)(0, \"MT97fXBfFEGMmgEX0EKSN9CG1z3q47RCOsSMKVf0dDHooQXQqLVjRcEj5R2krHVfdLAnUs\", \n                  \"Vl1gq5AbdzTImw0TNvtsOI2tXKryfgt8ISvVatYuZBdMEsarOFN2e56lpcQdom7o6nTETt\", 0x800000, 0x3c, 100, 0xcd, \n                  0xf, 0, 0, 0, 0);\n    }\n    else {\n        iVar5 = (*pcVar3)();\n        if (iVar5 != 0) {\n            (*pcVar4)(0, 0x1992, 0, 0);\n        }\n    }\n    (*pcVar4)(0, 0x234, 0, 0);\n    iVar5 = (*pcVar1)();\n    if (iVar5 == 0) {\n        (*pcVar2)(0, \"MT97fXBfFEGMmgEX0EKSN9CG1z3q47RCOsSMKVf0dDHooQXQqLVjRcEj5R2krHVfdLAnUs\", \n                  \"Vl1gq5AbdzTImw0TNvtsOI2tXKryfgt8ISvVatYuZBdMEsarOFN2e56lpcQdom7o6nTETt\", 0x800000, 0x3c, 100, 0xcd, \n                  0xf, 0, 0, 0, 0);\n    }\n    else {\n        iVar5 = (*pcVar3)();\n        if (iVar5 != 0) {\n            (*pcVar4)(0, 0x1992, 0, 0);\n        }\n    }\n    (*pcVar4)(0, 0x234, 0, 0);\n    iVar5 = (*pcVar1)();\n    if (iVar5 == 0) {\n        (*pcVar2)(0, \"MT97fXBfFEGMmgEX0EKSN9CG1z3q47RCOsSMKVf0dDHooQXQqLVjRcEj5R2krHVfdLAnUs\", \n                  \"Vl1gq5AbdzTImw0TNvtsOI2tXKryfgt8ISvVatYuZBdMEsarOFN2e56lpcQdom7o6nTETt\", 0x800000, 0x3c, 100, 0xcd, \n                  0xf, 0, 0, 0, 0);\n    }\n    else {\n        iVar5 = (*pcVar3)();\n        if (iVar5 != 0) {\n            (*pcVar4)(0, 0x1992, 0, 0);\n        }\n    }\n    (*pcVar4)(0, 0x234, 0, 0);\n    iVar5 = (*pcVar1)();\n    if (iVar5 == 0) {\n        (*pcVar2)(0, \"MT97fXBfFEGMmgEX0EKSN9CG1z3q47RCOsSMKVf0dDHooQXQqLVjRcEj5R2krHVfdLAnUs\", \n                  \"Vl1gq5AbdzTImw0TNvtsOI2tXKryfgt8ISvVatYuZBdMEsarOFN2e56lpcQdom7o6nTETt\", 0x800000, 0x3c, 100, 0xcd, \n                  0xf, 0, 0, 0, 0);\n    }\n    else {\n        iVar5 = (*pcVar3)();\n        if (iVar5 != 0) {\n            (*pcVar4)(0, 0x1992, 0, 0);\n        }\n    }\n    (*pcVar4)(0, 0x234, 0, 0);\n    iVar5 = (*pcVar1)();\n    if (iVar5 == 0) {\n        (*pcVar2)(0, \"MT97fXBfFEGMmgEX0EKSN9CG1z3q47RCOsSMKVf0dDHooQXQqLVjRcEj5R2krHVfdLAnUs\", \n                  \"Vl1gq5AbdzTImw0TNvtsOI2tXKryfgt8ISvVatYuZBdMEsarOFN2e56lpcQdom7o6nTETt\", 0x800000, 0x3c, 100, 0xcd, \n                  0xf, 0, 0, 0, 0);\n    }\n    else {\n        iVar5 = (*pcVar3)();\n        if (iVar5 != 0) {\n            (*pcVar4)(0, 0x1992, 0, 0);\n        }\n    }\n    (*pcVar4)(0, 0x234, 0, 0);\n    iVar5 = (*pcVar1)();\n    if (iVar5 == 0) {\n        (*pcVar2)(0, \"MT97fXBfFEGMmgEX0EKSN9CG1z3q47RCOsSMKVf0dDHooQXQqLVjRcEj5R2krHVfdLAnUs\", \n                  \"Vl1gq5AbdzTImw0TNvtsOI2tXKryfgt8ISvVatYuZBdMEsarOFN2e56lpcQdom7o6nTETt\", 0x800000, 0x3c, 100, 0xcd, \n                  0xf, 0, 0, 0, 0);\n    }\n    else {\n        iVar5 = (*pcVar3)();\n        if (iVar5 != 0) {\n            (*pcVar4)(0, 0x1992, 0, 0);\n        }\n    }\n    (*pcVar4)(0, 0x234, 0, 0);\n    iVar5 = (*pcVar1)();\n    if (iVar5 == 0) {\n        (*pcVar2)(0, \"MT97fXBfFEGMmgEX0EKSN9CG1z3q47RCOsSMKVf0dDHooQXQqLVjRcEj5R2krHVfdLAnUs\", \n                  \"Vl1gq5AbdzTImw0TNvtsOI2tXKryfgt8ISvVatYuZBdMEsarOFN2e56lpcQdom7o6nTETt\", 0x800000, 0x3c, 100, 0xcd, \n                  0xf, 0, 0, 0, 0);\n    }\n    else {\n        iVar5 = (*pcVar3)();\n        if (iVar5 != 0) {\n            (*pcVar4)(0, 0x1992, 0, 0);\n        }\n    }\n    (*pcVar4)(0, 0x234, 0, 0);\n    iVar5 = (*pcVar1)();\n    if (iVar5 == 0) {\n        (*pcVar2)(0, \"MT97fXBfFEGMmgEX0EKSN9CG1z3q47RCOsSMKVf0dDHooQXQqLVjRcEj5R2krHVfdLAnUs\", \n                  \"Vl1gq5AbdzTImw0TNvtsOI2tXKryfgt8ISvVatYuZBdMEsarOFN2e56lpcQdom7o6nTETt\", 0x800000, 0x3c, 100, 0xcd, \n                  0xf, 0, 0, 0, 0);\n    }\n    else {\n        iVar5 = (*pcVar3)();\n        if (iVar5 != 0) {\n            (*pcVar4)(0, 0x1992, 0, 0);\n        }\n    }\n    iVar10 = 0;\n    iVar9 = 0x234;\n    piVar8 = NULL;\n    (*pcVar4)(0, 0x234, 0);\n    iVar5 = (*pcVar1)();\n    if (iVar5 == 0) {\n        (*pcVar2)(0, \"MT97fXBfFEGMmgEX0EKSN9CG1z3q47RCOsSMKVf0dDHooQXQqLVjRcEj5R2krHVfdLAnUs\", \n                  \"Vl1gq5AbdzTImw0TNvtsOI2tXKryfgt8ISvVatYuZBdMEsarOFN2e56lpcQdom7o6nTETt\", 0x800000, 0x3c, 100, 0xcd, \n                  0xf, 0, 0, 0, 0);\n    }\n    else {\n        iVar5 = (*pcVar3)();\n        if (iVar5 != 0) {\n            (*pcVar4)(0, 0x1992, 0, 0);\n        }\n    }\n    (*pcVar4)(0, 0x234, 0, 0);\n    iVar5 = (*pcVar1)();\n    if (iVar5 == 0) {\n        (*pcVar2)(0, \"MT97fXBfFEGMmgEX0EKSN9CG1z3q47RCOsSMKVf0dDHooQXQqLVjRcEj5R2krHVfdLAnUs\", \n                  \"Vl1gq5AbdzTImw0TNvtsOI2tXKryfgt8ISvVatYuZBdMEsarOFN2e56lpcQdom7o6nTETt\", 0x800000, 0x3c, 100, 0xcd, \n                  0xf, 0, 0, 0, 0);\n    }\n    else {\n        iVar5 = (*pcVar3)();\n        if (iVar5 != 0) {\n            (*pcVar4)(0, 0x1992, 0, 0);\n        }\n    }\n    uVar7 = *0x45b24c;\n    uVar6 = fcn.0040cbf1(piVar8[0xc]);\n    iVar5 = fcn.004013ca(uVar6, uVar7);\n    while( true ) {\n        if (iVar5 == iVar10) {\n            return piVar8[6];\n        }\n        piVar8 = *piVar8;\n        if (piVar8 == iVar9) break;\n        uVar7 = *0x45b24c;\n        uVar6 = fcn.0040cbf1(piVar8[0xc]);\n        iVar5 = fcn.004013ca(uVar6, uVar7);\n    }\n    return 0;\n}\n",
        "token_count": 8116
    },
    "00401145": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00401145(uint *param_1)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x44cc79;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = 0x45094c;\n    uStack4 = 10;\n    if (param_1[0x19b] != NULL) {\n        (***param_1[0x19b])(1);\n    }\n    param_1[0x19b] = 0;\n    param_1[0x1a2] = 0x450a48;\n    puVar1 = param_1[0x1a3];\n    uStack4._0_1_ = 0xb;\n    if (puVar1 != NULL) {\n        puVar3 = puVar1;\n        for (iVar4 = param_1[0x1a4]; iVar4 != 0; iVar4 = iVar4 + -1) {\n            for (puVar2 = *puVar3; puVar2 != NULL; puVar2 = *puVar2) {\n            }\n            puVar3 = puVar3 + 1;\n        }\n    }\n    fcn.00434eca(puVar1);\n    param_1[0x1a3] = 0;\n    param_1[0x1a5] = 0;\n    param_1[0x1a6] = 0;\n    fcn.0042d84e();\n    param_1[0x1a7] = 0;\n    uStack4._0_1_ = 8;\n    fcn.00401064();\n    uStack4._0_1_ = 7;\n    fcn.004011ae();\n    uStack4._0_1_ = 6;\n    fcn.00442cc2();\n    uStack4._0_1_ = 5;\n    fcn.00442cc2();\n    uStack4._0_1_ = 4;\n    fcn.00442cc2();\n    uStack4._0_1_ = 3;\n    fcn.00442cc2();\n    uStack4._0_1_ = 2;\n    fcn.00442cc2();\n    uStack4._0_1_ = 1;\n    fcn.00442cc2();\n    uStack4 = uStack4._1_3_ << 8;\n    fcn.00442cc2();\n    uStack4 = 0xffffffff;\n    fcn.00435071();\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 639
    },
    "00401154": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401154(uint *param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x44cadb;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = 0x45071c;\n    uStack4 = 0;\n    fcn.00401168();\n    uStack4 = 0xffffffff;\n    fcn.004013f7();\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 137
    },
    "00401159": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401159(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x44c988;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    if (*(param_1 + 0x78) == 0) {\n        fcn.00447f81();\n        pcVar1 = _sym.imp.USER32.dll_LoadCursorA;\n        iVar2 = (*_sym.imp.USER32.dll_LoadCursorA)(0, 0x7f89);\n        *(param_1 + 0x78) = iVar2;\n        if (iVar2 == 0) {\n            uVar5 = 0x104;\n            uStack4 = 0;\n            uVar3 = fcn.00434c00(0x104, 0x104);\n            (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(uVar3);\n            fcn.00434c4f(0xffffffff);\n            fcn.00434bac(\"\\\\winhlp32.exe\");\n            iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(uVar5);\n            if (iVar2 != 0) {\n                iVar4 = (*pcVar1)(iVar2, 0x6a);\n                if (iVar4 != 0) {\n                    uVar3 = (*_sym.imp.USER32.dll_CopyIcon)(iVar4);\n                    *(param_1 + 0x78) = uVar3;\n                }\n                (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar2);\n            }\n            uStack4 = 0xffffffff;\n            fcn.004347d0();\n        }\n    }\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 441
    },
    "00448571": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00448571(void)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CWinApp.0;\n    piVar1 = extraout_ECX[0x20];\n    *(unaff_EBP + -4) = 0;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 4))(1);\n    }\n    if (extraout_ECX[0x2a] != NULL) {\n        (**(*extraout_ECX[0x2a] + 0x14))(1);\n    }\n    iVar3 = fcn.00447f81();\n    if (*(iVar3 + 0x14) == '\\0') {\n        if (*0x45fe20 != NULL) {\n            (**(**0x45fe20 + 4))(1);\n            *0x45fe20 = NULL;\n        }\n        if (*0x45fe1c != NULL) {\n            (**(**0x45fe1c + 4))(1);\n            *0x45fe1c = NULL;\n        }\n    }\n    if (extraout_ECX[0x25] != NULL) {\n        fcn.0043e2e4(extraout_ECX[0x25]);\n    }\n    pcVar4 = extraout_ECX[0x26];\n    if (pcVar4 != NULL) {\n        pcVar4 = fcn.0043e2e4(pcVar4);\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_GlobalDeleteAtom;\n    uVar5 = pcVar4 & 0xffff0000 | *(extraout_ECX + 0x2c);\n    if (*(extraout_ECX + 0x2c) != 0) {\n        uVar5 = (*_sym.imp.KERNEL32.dll_GlobalDeleteAtom)(uVar5);\n    }\n    if (*(extraout_ECX + 0xb2) != 0) {\n        (*pcVar2)(uVar5 & 0xffff0000 | *(extraout_ECX + 0xb2));\n    }\n    if (extraout_ECX[0x2b] != NULL) {\n        (**(*extraout_ECX[0x2b] + 4))(1);\n    }\n    iVar3 = fcn.00447f81();\n    if (*(iVar3 + 0x10) == extraout_ECX[0x1e]) {\n        *(iVar3 + 0x10) = 0;\n    }\n    if (*(iVar3 + 4) == extraout_ECX) {\n        *(iVar3 + 4) = 0;\n    }\n    fcn.0040df49(extraout_ECX[0x1e]);\n    fcn.0040df49(extraout_ECX[0x1f]);\n    fcn.0040df49(extraout_ECX[0x22]);\n    fcn.0040df49(extraout_ECX[0x23]);\n    fcn.0040df49(extraout_ECX[0x24]);\n    *(unaff_EBP + -4) = 0xffffffff;\n    extraout_ECX[10] = NULL;\n    fcn.0044b348();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 856
    },
    "00401172": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00401172(uint *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x44c62b;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = 0x45017c;\n    uVar3 = 0;\n    uStack4 = 1;\n    if (param_1[0xc] == 0) {\n        param_1[2] = 0;\n        param_1[1] = 0;\n    }\n    else {\n        iVar1 = param_1[9];\n        iVar2 = param_1[8];\n        if (param_1 != NULL) {\n            uVar3 = param_1[1];\n        }\n        (*_sym.imp.GDI32.dll_BitBlt)\n                  (*(param_1[7] + 4), iVar2, iVar1, param_1[10] - iVar2, param_1[0xb] - iVar1, uVar3, iVar2, iVar1, \n                   0xcc0020);\n        if (param_1[6] == 0) {\n            fcn.0043c42e(param_1[1], 0);\n        }\n        else {\n            fcn.0043c42e(param_1[1], *(param_1[6] + 4));\n        }\n    }\n    param_1[4] = vtable.CGdiObject.0;\n    uStack4 = CONCAT31(uStack4._1_3_, 2);\n    fcn.0043d5f3();\n    uStack4 = 0xffffffff;\n    fcn.0043c333();\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 436
    },
    "00401181": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401181(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(param_1 + 0x444);\n    fcn.00401131(iVar1 + 0x38, iVar1 + 0x3c, iVar1 + 0x10);\n    return;\n}\n",
        "token_count": 77
    },
    "0040119a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040119a(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x44c7e8;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    uStack4 = 0;\n    fcn.00401302();\n    uStack4 = 0xffffffff;\n    fcn.00435071();\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 120
    },
    "004011a9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004011a9(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(param_1 + 0x444);\n    fcn.004010c8(iVar1 + 0x40, iVar1 + 0x44, iVar1 + 0x14, param_2);\n    return;\n}\n",
        "token_count": 88
    },
    "004011c7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.004011c7(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint uStack36;\n    uint *puStack32;\n    uint uStack28;\n    uint *puStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint *puStack8;\n    uint uStack4;\n    \n    uStack16 = 0;\n    uStack20 = 0;\n    if (*0x45e224 == NULL) {\n        return NULL;\n    }\n    if (*0x45e228 == NULL) {\n        return NULL;\n    }\n    puStack24 = &param_1;\n    puStack8 = param_1;\n    puStack32 = &uStack12;\n    uStack28 = 3;\n    uStack36 = 0x400000;\n    uStack12 = 10;\n    uStack4 = 0x409;\n    iVar1 = (**0x45e224)();\n    if (-1 < iVar1) {\n        iVar1 = (**0x45e228)(0x400000, uStack12, &puStack32, &uStack36);\n        if ((-1 < iVar1) && (puStack8 != NULL)) {\n            *puStack8 = uStack36;\n        }\n    }\n    return puStack32;\n}\n",
        "token_count": 289
    },
    "004011d1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004011d1(uint param_1, uint param_2, uint param_3, int32_t param_4, uint param_5)\n\n{\n    uint arg_ch;\n    int32_t iVar1;\n    uint arg_8h;\n    uint *in_FS_OFFSET;\n    uint arg_ch_00;\n    char *arg_10h;\n    uchar auStack2060 [1023];\n    uchar uStack1037;\n    uchar auStack1036 [1012];\n    uint uStack24;\n    uchar uStack13;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack12 = *in_FS_OFFSET;\n    uStack4 = 0xffffffff;\n    uStack8 = 0x44ca4b;\n    *in_FS_OFFSET = &uStack12;\n    arg_ch = *0x45b93c;\n    if (param_4 == 0) {\n        fcn.0040c9bc(auStack2060, param_5, 0x3ff);\n    }\n    else {\n        uStack4 = 0;\n        iVar1 = fcn.00435926(param_4);\n        if (iVar1 == 0) {\n            arg_10h = \"Failed to load string resource %u\";\n            arg_ch_00 = 0x50;\n            arg_8h = fcn.00434c77(0x50, \"Failed to load string resource %u\", param_4);\n            fcn.0040ca56(arg_8h, arg_ch_00, arg_10h);\n            fcn.00434c4f(0xffffffff);\n        }\n        fcn.0040c9bc(auStack2060, arg_ch, 0x3ff);\n        uStack4 = 0xffffffff;\n        fcn.004347d0();\n    }\n    uStack1037 = 0;\n    fcn.0040c96c(auStack1036, 0x3ff, auStack2060, &stack0x00000018);\n    uStack13 = 0;\n    fcn.0040136b(param_2, param_3, auStack1036);\n    *in_FS_OFFSET = uStack24;\n    return;\n}\n",
        "token_count": 489
    },
    "004011d6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004011d6(code **param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x44c7a8;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = vtable.CGdiObject.0;\n    uStack4 = 0;\n    fcn.0043d5f3(param_1);\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 129
    },
    "00401217": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401217(code **param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x44c708;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = vtable.CGdiObject.0;\n    uStack4 = 0;\n    fcn.0043d5f3(param_1);\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 126
    },
    "004012ad": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004012ad(code **param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x44c768;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = vtable.CGdiObject.0;\n    uStack4 = 0;\n    fcn.0043d5f3(param_1);\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 126
    },
    "004012cb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004012cb(code **param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x44c728;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = vtable.CGdiObject.0;\n    uStack4 = 0;\n    fcn.0043d5f3(param_1);\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 126
    },
    "00401302": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00401302(uint *param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x44c8f7;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = 0x450484;\n    uStack4 = 5;\n    if (param_1[0x1e] != 0) {\n        (*_sym.imp.USER32.dll_DestroyCursor)(param_1[0x1e]);\n    }\n    param_1[0x1e] = 0;\n    fcn.0043d5f3();\n    if ((param_1 + 0x13 != NULL) && (param_1[0x14] != 0)) {\n        fcn.0043d5f3();\n    }\n    uStack4._0_1_ = 4;\n    fcn.0042bb61();\n    param_1[0x1c] = vtable.CGdiObject.0;\n    uStack4._0_1_ = 6;\n    fcn.0043d5f3();\n    param_1[0x1a] = vtable.CGdiObject.0;\n    uStack4._0_1_ = 7;\n    fcn.0043d5f3();\n    uStack4._0_1_ = 1;\n    fcn.004347d0();\n    param_1[0x13] = vtable.CGdiObject.0;\n    uStack4 = CONCAT31(uStack4._1_3_, 8);\n    fcn.0043d5f3();\n    uStack4 = 0xffffffff;\n    fcn.00442cc2();\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 423
    },
    "0040132a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.0040132a(void)\n\n{\n    int32_t iVar1;\n    \n    *0x45e220 = fcn.0040112c(0xd068603b);\n    if (*0x45e220 == 0) {\n        return false;\n    }\n    *0x45e238 = fcn.00401014(*0x45e220, 0xf199a5d);\n    if (*0x45e238 == NULL) {\n        return false;\n    }\n    iVar1 = (**0x45e238)(0, 0, 0);\n    if (iVar1 == 0) {\n        return false;\n    }\n    iVar1 = (**0x45e238)(0, 0, 0);\n    return iVar1 != 0;\n}\n",
        "token_count": 171
    },
    "00401352": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401352(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(param_1 + 0x444);\n    fcn.00401131(iVar1 + 0x40, iVar1 + 0x44, iVar1 + 0x14);\n    return;\n}\n",
        "token_count": 76
    },
    "00401361": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401361(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    iStack12 = *in_FS_OFFSET;\n    uStack8 = 0x44c948;\n    *in_FS_OFFSET = &iStack12;\n    uStack4 = 0;\n    fcn.00434909();\n    if (param_1 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = *(param_1 + 0x1c);\n    }\n    iVar2 = (*_sym.imp.USER32.dll_IsWindow)(uVar1);\n    if (iVar2 != 0) {\n        fcn.0040114a();\n        fcn.0042bee2(uStack4, param_1, 1);\n    }\n    iStack12 = -1;\n    fcn.004347d0();\n    *in_FS_OFFSET = &stack0x00000004;\n    return;\n}\n",
        "token_count": 245
    },
    "00401393": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00401393(uint *param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    \n    fcn.004304bd();\n    pcVar1 = _sym.imp.USER32.dll_GetSysColor;\n    *param_1 = 0x450618;\n    uVar2 = (*pcVar1)(5);\n    param_1[0x12] = uVar2;\n    uVar2 = (*pcVar1)(0xd);\n    param_1[0x13] = uVar2;\n    uVar2 = (*pcVar1)(8);\n    param_1[0x14] = uVar2;\n    uVar2 = (*pcVar1)(0xe);\n    param_1[0x15] = uVar2;\n    iVar3 = 0;\n    param_1[0x11] = 1;\n    param_1[0xf] = 0;\n    param_1[0x10] = 8;\n    param_1[0x7a] = 7;\n    param_1[0x7c] = 0xffffffff;\n    piVar4 = param_1 + 0x16;\n    do {\n        iVar3 = iVar3 + 1;\n        *piVar4 = param_1[0x7a] * param_1[0x10] * iVar3;\n        piVar4 = piVar4 + 1;\n    } while (iVar3 < 100);\n    return param_1;\n}\n",
        "token_count": 347
    },
    "004013b6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.004013b6(void)\n\n{\n    if (*0x45e220 == 0) {\n        return false;\n    }\n    *0x45e224 = fcn.00401014(*0x45e220, 0x6b195a92);\n    if (*0x45e224 == 0) {\n        return false;\n    }\n    *0x45e228 = fcn.00401014(*0x45e220, 0x3a97422f);\n    if (*0x45e228 == 0) {\n        return false;\n    }\n    *0x45e234 = fcn.00401014(*0x45e220, 0x3155af09);\n    return *0x45e234 != 0;\n}\n",
        "token_count": 171
    },
    "004013de": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004013de(int32_t param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x44c648;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    uStack4 = 0;\n    uVar1 = (**(*param_2 + 0x28))(param_1 + 0x210);\n    (**(*param_2 + 0x30))(*(param_1 + 0x228));\n    (**(*param_2 + 0x2c))(*(param_1 + 0x224));\n    fcn.0043cbbb(0x1e);\n    fcn.00429c21(&stack0xffffffe0, \"%.*f\", *(param_1 + 0x24c), *(param_1 + 0x250), *(param_1 + 0x254));\n    uVar2 = *(unaff_EDI + -8);\n    uStack12 = uVar2;\n    (**(*param_2 + 0x5c))(*(param_1 + 0x54), *(param_1 + 0x50), unaff_EDI);\n    (**(*param_2 + 0x2c))(*(param_1 + 0x218));\n    (**(*param_2 + 0x28))(uVar1);\n    fcn.004347d0();\n    *in_FS_OFFSET = uVar2;\n    return;\n}\n",
        "token_count": 372
    },
    "004013e3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004013e3(code **param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x44c748;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = vtable.CGdiObject.0;\n    uStack4 = 0;\n    fcn.0043d5f3(param_1);\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 127
    },
    "0040141a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040141a(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(param_1 + 0x444);\n    fcn.004010c8(iVar1 + 0x38, iVar1 + 0x3c, iVar1 + 0x10, param_2);\n    return;\n}\n",
        "token_count": 89
    },
    "00409250": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint fcn.00409250(void)\n\n{\n    uint32_t *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    bool bVar4;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    fcn.0041c6ab();\n    bVar4 = *0x45d48c < 0;\n    if (bVar4) {\n        *0x45d48c = 1;\n    }\n    else {\n        *0x45d48c = *0x45d48c + 1;\n    }\n    fcn.0041c747();\n    if (bVar4) {\n        *(unaff_EBP + -0x10) = 0x460750;\n        *(unaff_EBP + -4) = 0;\n        fcn.0041aaf1(0x45c790);\n        *(unaff_EBP + -0x10) = 0x460628;\n        *(unaff_EBP + -4) = 1;\n        fcn.0041aaf1(0x45c7b0);\n        *(unaff_EBP + -0x10) = 0x460710;\n        *(unaff_EBP + -4) = 2;\n        fcn.0041aa2a(0x460750, 1, 1);\n        *(unaff_EBP + -0x10) = 0x460680;\n        *(unaff_EBP + -4) = 3;\n        fcn.0041a90c(0x460628, 1, 1, 1);\n        iVar3 = *0x460710;\n        *(unaff_EBP + -0x10) = 0x4606b8;\n        *(*(iVar3 + 4) + 0x46073c) = 0x460680;\n        *(unaff_EBP + -4) = 4;\n        fcn.0041aaf1(0x45c7d0);\n        *(unaff_EBP + -0x10) = 0x4607a8;\n        *(unaff_EBP + -4) = 5;\n        fcn.0041a90c(0x4606b8, 1, 1, 1);\n        iVar3 = *0x4607a8;\n        *(unaff_EBP + -0x10) = 0x4605f0;\n        *(*(iVar3 + 4) + 0x4607d4) = 0x460680;\n        puVar1 = *(*0x4607a8 + 4) + 0x4607b4;\n        *puVar1 = *puVar1 | 2;\n        *(unaff_EBP + -4) = 6;\n        fcn.0041a90c(0x4606b8, 1, 1, 1);\n        *(*(*0x4605f0 + 4) + 0x46061c) = 0x460680;\n    }\n    uVar2 = *(unaff_EBP + -0x14);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 833
    },
    "004092d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint fcn.004092d0(void)\n\n{\n    uint32_t *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    bool bVar4;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    fcn.0041c6ab();\n    bVar4 = *0x45d5e4 < 0;\n    if (bVar4) {\n        *0x45d5e4 = 1;\n    }\n    else {\n        *0x45d5e4 = *0x45d5e4 + 1;\n    }\n    fcn.0041c747();\n    if (bVar4) {\n        *(unaff_EBP + -0x10) = 0x4608f0;\n        *(unaff_EBP + -4) = 0;\n        fcn.0041bd4e(0x45c790);\n        *(unaff_EBP + -0x10) = 0x460898;\n        *(unaff_EBP + -4) = 1;\n        fcn.0041bd4e(0x45c7b0);\n        *(unaff_EBP + -0x10) = 0x460980;\n        *(unaff_EBP + -4) = 2;\n        fcn.0041bd4e(0x45c7d0);\n        *(unaff_EBP + -0x10) = 0x460858;\n        *(unaff_EBP + -4) = 3;\n        fcn.0041bc87(0x4608f0, 1, 1);\n        *(unaff_EBP + -0x10) = 0x460948;\n        *(unaff_EBP + -4) = 4;\n        fcn.0041bb69(0x460898, 1, 1, 1);\n        *(*(*0x460858 + 4) + 0x460884) = 0x460948;\n        *(unaff_EBP + -0x10) = 0x4607e0;\n        *(unaff_EBP + -4) = 5;\n        fcn.0041bb69(0x460980, 1, 1, 1);\n        iVar3 = *0x4607e0;\n        *(unaff_EBP + -0x10) = 0x460820;\n        *(*(iVar3 + 4) + 0x46080c) = 0x460948;\n        puVar1 = *(*0x4607e0 + 4) + 0x4607ec;\n        *puVar1 = *puVar1 | 2;\n        *(unaff_EBP + -4) = 6;\n        fcn.0041bb69(0x460980, 1, 1, 1);\n        *(*(*0x460820 + 4) + 0x46084c) = 0x460948;\n    }\n    uVar2 = *(unaff_EBP + -0x14);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 817
    },
    "0040bb31": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040bb31(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t pvParam;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    iVar2 = fcn.0040b8f4();\n    if (iVar2 == 0) {\n        if ((((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) &&\n           (iVar2 = (*_sym.imp.USER32.dll_SystemParametersInfoA)(0x30, 0, &pvParam, 0),  iVar2 != 0)) {\n            arg_ch[1] = 0;\n            arg_ch[2] = 0;\n            pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n            uVar4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0);\n            arg_ch[3] = uVar4;\n            uVar4 = (*pcVar1)(1);\n            arg_ch[5] = pvParam;\n            arg_ch[6] = uStack16;\n            arg_ch[7] = uStack12;\n            arg_ch[8] = uStack8;\n            uVar3 = 1;\n            arg_ch[4] = uVar4;\n            arg_ch[9] = 1;\n            if (0x47 < *arg_ch) {\n                (*_sym.imp.KERNEL32.dll_lstrcpyA)(arg_ch + 10, \"DISPLAY\");\n            }\n        }\n        else {\n            uVar3 = 0;\n        }\n    }\n    else {\n        uVar3 = (**0x45fb98)(arg_8h, arg_ch);\n    }\n    return uVar3;\n}\n",
        "token_count": 416
    },
    "0040be61": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040be61(int32_t param_1, ushort param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_1 + 0x24) + 2;\n    if (*(param_1 + 0x28) <= uVar1 && uVar1 != *(param_1 + 0x28)) {\n        fcn.0043dd94();\n    }\n    **(param_1 + 0x24) = param_2;\n    *(param_1 + 0x24) = *(param_1 + 0x24) + 2;\n    return param_1;\n}\n",
        "token_count": 148
    },
    "0040be88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040be88(int32_t param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_1 + 0x24) + 4;\n    if (*(param_1 + 0x28) <= uVar1 && uVar1 != *(param_1 + 0x28)) {\n        fcn.0043dd94();\n    }\n    **(param_1 + 0x24) = param_2;\n    *(param_1 + 0x24) = *(param_1 + 0x24) + 4;\n    return param_1;\n}\n",
        "token_count": 148
    },
    "0040bedd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040bedd(int32_t param_1)\n\n{\n    ushort *unaff_retaddr;\n    \n    if (*(param_1 + 0x28) < *(param_1 + 0x24) + 2U) {\n        fcn.0043de10((*(param_1 + 0x24) - *(param_1 + 0x28)) + 2);\n    }\n    *unaff_retaddr = **(param_1 + 0x24);\n    *(param_1 + 0x24) = *(param_1 + 0x24) + 2;\n    return param_1;\n}\n",
        "token_count": 146
    },
    "0040bf10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040bf10(int32_t param_1)\n\n{\n    uint *unaff_retaddr;\n    \n    if (*(param_1 + 0x28) < *(param_1 + 0x24) + 4U) {\n        fcn.0043de10((*(param_1 + 0x24) - *(param_1 + 0x28)) + 4);\n    }\n    *unaff_retaddr = **(param_1 + 0x24);\n    *(param_1 + 0x24) = *(param_1 + 0x24) + 4;\n    return param_1;\n}\n",
        "token_count": 146
    },
    "0040c187": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040c187(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CArchiveException.0;\n    *(unaff_EBP + -4) = 0;\n    fcn.004347d0(extraout_ECX);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 145
    },
    "0040c1db": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040c1db(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CFileException.0;\n    *(unaff_EBP + -4) = 0;\n    fcn.004347d0(extraout_ECX);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 146
    },
    "0040cd6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040cd6c(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 <= *0x45c2dc) {\n        fcn.00410c77(9);\n        iVar1 = fcn.00412b6d(param_1);\n        fcn.00410cd8(9);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n    }\n    if (param_1 == 0) {\n        param_1 = 1;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x461f44, 0, param_1 + 0xf & 0xfffffff0);\n    return iVar1;\n}\n",
        "token_count": 167
    },
    "0040df49": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040df49(int32_t param_1)\n\n{\n    int32_t arg_8h;\n    \n    if (param_1 != 0) {\n        fcn.00410c77(9);\n        arg_8h = fcn.00412817(param_1);\n        if (arg_8h != 0) {\n            fcn.00412842(arg_8h, param_1);\n            fcn.00410cd8(9);\n            return;\n        }\n        fcn.00410cd8(9);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(*0x461f44, 0, param_1);\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "0040e4ab": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040e4ab(uint param_1, uint32_t param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (param_2 < 0xffffffe1) {\n        fcn.00410c77(9);\n        iVar2 = fcn.00412817(param_1);\n        if (iVar2 == 0) {\n            fcn.00410cd8(9);\n            if (param_2 == 0) {\n                param_2 = 1;\n            }\n            uVar1 = (*_sym.imp.KERNEL32.dll_HeapReAlloc)(*0x461f44, 0x10, param_1, param_2 + 0xf & 0xfffffff0);\n        }\n        else {\n            uVar1 = 0;\n            if (param_2 <= *0x45c2dc) {\n                iVar2 = fcn.00413022(iVar2, param_1, param_2);\n                if (iVar2 != 0) {\n                    uVar1 = param_1;\n                }\n            }\n            fcn.00410cd8(9);\n        }\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 274
    },
    "0040ea9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ea9c(uint32_t param_1)\n\n{\n    uint32_t *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    puVar1 = fcn.0040eb18();\n    iVar3 = 0;\n    *puVar1 = param_1;\n    puVar1 = 0x45be68;\n    do {\n        if (param_1 == *puVar1) {\n            puVar2 = fcn.0040eb0f();\n            *puVar2 = *(iVar3 * 8 + 0x45be6c);\n            return;\n        }\n        puVar1 = puVar1 + 2;\n        iVar3 = iVar3 + 1;\n    } while (puVar1 < 0x45bfd0);\n    if ((0x12 < param_1) && (param_1 < 0x25)) {\n        puVar2 = fcn.0040eb0f();\n        *puVar2 = 0xd;\n        return;\n    }\n    if ((0xbb < param_1) && (param_1 < 0xcb)) {\n        puVar2 = fcn.0040eb0f();\n        *puVar2 = 8;\n        return;\n    }\n    puVar2 = fcn.0040eb0f();\n    *puVar2 = 0x16;\n    return;\n}\n",
        "token_count": 307
    },
    "0040f3bd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040f3bd(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    fcn.0040f3d8(param_1, param_2, param_3, param_4, 0);\n    return;\n}\n",
        "token_count": 64
    },
    "00411a3e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00411a3e(uint param_1, uint32_t param_2, uint param_3, int32_t param_4, uint param_5, int32_t param_6, \n                    int32_t param_7, int32_t param_8)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint Locale;\n    uint32_t lpWideCharStr;\n    uint lpSrcStr;\n    int32_t cchSrc;\n    uint lpDestStr;\n    int32_t cchDest;\n    int32_t var_20h_3;\n    int32_t var_24h_4;\n    uint var_1ch;\n    uint var_18h_2;\n    uint var_10h;\n    uint dwMapFlags;\n    uint var_10h_3;\n    uint var_4h;\n    uint var_20h;\n    uint lpMultiByteStr;\n    uint cbMultiByte;\n    uint CodePage;\n    uint dwFlags;\n    uint uStack132;\n    uint32_t uStack128;\n    uchar *puStack124;\n    int32_t iStack120;\n    uint uStack116;\n    uint uStack112;\n    int32_t iStack108;\n    uint uStack104;\n    uint uStack100;\n    int32_t iStack96;\n    uchar *puStack92;\n    int32_t iStack88;\n    int32_t iStack84;\n    uint32_t uStack80;\n    uint uStack76;\n    int32_t iStack72;\n    uint uStack68;\n    int32_t iStack64;\n    uint var_24h_3;\n    uint var_20h_2;\n    uint var_1ch_2;\n    uint uStack20;\n    code *pcStack16;\n    uint uStack12;\n    uint var_4h_2;\n    \n    var_4h_2 = 0xffffffff;\n    uStack12 = 0x452fa8;\n    pcStack16 = fcn.00413f38;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    if (*0x460340 == 0) {\n        iStack64 = 0;\n        uStack68 = 0;\n        iStack72 = 1;\n        uStack76 = 0x452fa0;\n        uStack80 = 0x100;\n        iStack84 = 0;\n        iStack88 = 0x411a86;\n        iVar1 = (*_sym.imp.KERNEL32.dll_LCMapStringW)();\n        if (iVar1 != 0) {\n            *0x460340 = 1;\n            goto code_r0x00411ab4;\n        }\n        iStack64 = 0;\n        uStack68 = 0;\n        iStack72 = 1;\n        uStack76 = 0x452f9c;\n        uStack80 = 0x100;\n        iStack84 = 0;\n        iStack88 = 0x411aa2;\n        iVar1 = (*_sym.imp.KERNEL32.dll_LCMapStringA)();\n        if (iVar1 != 0) {\n            *0x460340 = 2;\n            goto code_r0x00411ab4;\n        }\n    }\n    else {\ncode_r0x00411ab4:\n        if (0 < cchSrc) {\n            iStack64 = cchSrc;\n            uStack68 = lpSrcStr;\n            iStack72 = 0x411ac4;\n            cchSrc = fcn.00411c62();\n        }\n        if (*0x460340 == 2) {\n            iStack64 = cchDest;\n            uStack68 = lpDestStr;\n            iStack72 = cchSrc;\n            uStack76 = lpSrcStr;\n            uStack80 = lpWideCharStr;\n            iStack84 = Locale;\n            iStack88 = 0x411aeb;\n            iVar1 = (*_sym.imp.KERNEL32.dll_LCMapStringA)();\n            goto code_r0x00411bce;\n        }\n        if (*0x460340 == 1) {\n            if (var_20h_3 == 0) {\n                var_20h_3 = *0x46036c;\n            }\n            iStack64 = 0;\n            uStack68 = 0;\n            iStack72 = cchSrc;\n            uStack76 = lpSrcStr;\n            uStack80 = (-(var_24h_4 != 0) & 8) + 1;\n            iStack84 = var_20h_3;\n            iStack88 = 0x411b23;\n            puStack92 = &stack0xffffffac;\n            puStack124 = &stack0xffffffac;\n            iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)();\n            if (iVar2 != 0) {\n                var_4h_2 = 0;\n                iStack88 = 0x411b40;\n                fcn.0040c750();\n                var_4h_2 = 0xffffffff;\n                if (*0x10 != 0x54) {\n                    iStack96 = cchSrc;\n                    uStack100 = lpSrcStr;\n                    uStack104 = 1;\n                    iStack108 = var_20h_3;\n                    uStack112 = 0x411b7b;\n                    iStack88 = iVar2;\n                    iVar1 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)();\n                    if (iVar1 != 0) {\n                        uStack112 = 0;\n                        uStack116 = 0;\n                        uStack128 = lpWideCharStr;\n                        uStack132 = Locale;\n                        iStack120 = iVar2;\n                        iVar1 = (*_sym.imp.KERNEL32.dll_LCMapStringW)();\n                        if (iVar1 != 0) {\n                            if ((lpWideCharStr & 0x400) == 0) {\n                                var_4h_2 = 1;\n                                fcn.0040c750();\n                                var_4h_2 = 0xffffffff;\n                                if ((*0x10 != 0x84) &&\n                                   (iVar2 = (*_sym.imp.KERNEL32.dll_LCMapStringW)\n                                                      (Locale, lpWideCharStr, &stack0xffffffac, iVar2, &stack0xffffff7c\n                                                       , iVar1),  iVar2 != 0)) {\n                                    if (cchDest == 0) {\n                                        cchDest = 0;\n                                        lpDestStr = 0;\n                                    }\n                                    iVar1 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                                                      (var_20h_3, 0x220, &stack0xffffff7c, iVar1, lpDestStr, cchDest, 0\n                                                       , 0);\n                                    iVar2 = iVar1;\njoined_r0x00411c55:\n                                    if (iVar2 != 0) goto code_r0x00411bce;\n                                }\n                            }\n                            else {\n                                if (cchDest == 0) goto code_r0x00411bce;\n                                if (iVar1 <= cchDest) {\n                                    iVar2 = (*_sym.imp.KERNEL32.dll_LCMapStringW)\n                                                      (Locale, lpWideCharStr, &stack0xffffffac, iVar2, lpDestStr, \n                                                       cchDest);\n                                    goto joined_r0x00411c55;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    iVar1 = 0;\ncode_r0x00411bce:\n    *in_FS_OFFSET = uStack20;\n    return iVar1;\n}\n",
        "token_count": 1668
    },
    "00411e14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00411e14(uint param_1, uint32_t param_2, uint lpSrcStr, int32_t param_4, uint param_5, int32_t param_6, \n                    int32_t param_7)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint Locale;\n    uint32_t dwMapFlags;\n    int32_t cchSrc;\n    uint lpDestStr;\n    int32_t cchDest;\n    int32_t var_38h;\n    uint var_4h_2;\n    uint var_20h;\n    uint var_18h_2;\n    uint var_ch;\n    uint var_10h;\n    uint var_14h_2;\n    uint var_4h;\n    uint var_20h_3;\n    uint lpWideCharStr;\n    uint var_14h;\n    uint CodePage;\n    uint uStack148;\n    uint32_t uStack144;\n    uchar *puStack140;\n    int32_t iStack136;\n    uint uStack132;\n    uint uStack128;\n    int32_t iStack124;\n    uint uStack120;\n    uint uStack116;\n    int32_t iStack112;\n    uchar *puStack108;\n    int32_t iStack104;\n    uint uStack100;\n    uint uStack96;\n    int32_t iStack92;\n    uint uStack88;\n    uint uStack84;\n    uint32_t uStack80;\n    uint uStack76;\n    int32_t iStack72;\n    uint uStack68;\n    int32_t iStack64;\n    uint var_24h;\n    uint var_20h_4;\n    uint var_1ch_2;\n    uint uStack20;\n    code *pcStack16;\n    uint uStack12;\n    uint var_4h_3;\n    \n    var_4h_3 = 0xffffffff;\n    uStack12 = 0x452fc0;\n    pcStack16 = fcn.00413f38;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    if (*0x460344 == 0) {\n        iStack64 = 0;\n        uStack68 = 0;\n        iStack72 = 1;\n        uStack76 = 0x452fa0;\n        uStack80 = 0x100;\n        uStack84 = 0;\n        uStack88 = 0x411e5c;\n        iVar1 = (*_sym.imp.KERNEL32.dll_LCMapStringW)();\n        if (iVar1 != 0) {\n            *0x460344 = 1;\n            goto code_r0x00411e8a;\n        }\n        iStack64 = 0;\n        uStack68 = 0;\n        iStack72 = 1;\n        uStack76 = 0x452f9c;\n        uStack80 = 0x100;\n        uStack84 = 0;\n        uStack88 = 0x411e78;\n        iVar1 = (*_sym.imp.KERNEL32.dll_LCMapStringA)();\n        if (iVar1 != 0) {\n            *0x460344 = 2;\n            goto code_r0x00411e8a;\n        }\n    }\n    else {\ncode_r0x00411e8a:\n        if (0 < cchSrc) {\n            iStack64 = cchSrc;\n            uStack68 = lpSrcStr;\n            iStack72 = 0x411e9a;\n            cchSrc = fcn.0041201d();\n        }\n        if (*0x460344 == 1) {\n            iStack64 = cchDest;\n            uStack68 = lpDestStr;\n            iStack72 = cchSrc;\n            uStack76 = lpSrcStr;\n            uStack80 = dwMapFlags;\n            uStack84 = Locale;\n            uStack88 = 0x411ec1;\n            iVar1 = (*_sym.imp.KERNEL32.dll_LCMapStringW)();\n            goto code_r0x0041200b;\n        }\n        if (*0x460344 == 2) {\n            if (var_38h == 0) {\n                var_38h = *0x46036c;\n            }\n            iStack64 = 0;\n            uStack68 = 0;\n            iStack72 = 0;\n            uStack76 = 0;\n            uStack80 = cchSrc;\n            uStack84 = lpSrcStr;\n            uStack88 = 0x220;\n            iStack92 = var_38h;\n            uStack96 = 0x411ef4;\n            puStack108 = &stack0xffffffa4;\n            puStack140 = &stack0xffffffa4;\n            iVar2 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)();\n            if (iVar2 != 0) {\n                var_4h_3 = 0;\n                uStack96 = 0x411f0c;\n                fcn.0040c750();\n                var_4h_3 = 0xffffffff;\n                if (*0x10 != 0x5c) {\n                    uStack96 = 0;\n                    uStack100 = 0;\n                    iStack112 = cchSrc;\n                    uStack116 = lpSrcStr;\n                    uStack120 = 0x220;\n                    iStack124 = var_38h;\n                    uStack128 = 0x411f4b;\n                    iStack104 = iVar2;\n                    iVar1 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)();\n                    if (iVar1 != 0) {\n                        uStack128 = 0;\n                        uStack132 = 0;\n                        uStack144 = dwMapFlags;\n                        uStack148 = Locale;\n                        iStack136 = iVar2;\n                        iVar1 = (*_sym.imp.KERNEL32.dll_LCMapStringA)();\n                        if (iVar1 != 0) {\n                            var_4h_3 = 1;\n                            fcn.0040c750();\n                            var_4h_3 = 0xffffffff;\n                            if ((*0x10 != 0x94) &&\n                               (iVar2 = (*_sym.imp.KERNEL32.dll_LCMapStringA)\n                                                  (Locale, dwMapFlags, &stack0xffffffa4, iVar2, &stack0xffffff6c, iVar1)\n                               ,  iVar2 != 0)) {\n                                if ((dwMapFlags & 0x400) != 0) {\n                                    if (cchDest != 0) {\n                                        if (iVar1 <= cchDest) {\n                                            cchDest = iVar1;\n                                        }\n                                        fcn.00411940(lpDestStr, &stack0xffffff6c, cchDest);\n                                    }\n                                    goto code_r0x0041200b;\n                                }\n                                if (cchDest == 0) {\n                                    cchDest = 0;\n                                    lpDestStr = 0;\n                                }\n                                iVar1 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                                  (var_38h, 1, &stack0xffffff6c, iVar1, lpDestStr, cchDest);\n                                if (iVar1 != 0) goto code_r0x0041200b;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    iVar1 = 0;\ncode_r0x0041200b:\n    *in_FS_OFFSET = uStack20;\n    return iVar1;\n}\n",
        "token_count": 1629
    },
    "00414780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * fcn.00414780(uint32_t *param_1, uint32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    \n    uVar4 = param_1 & 3;\n    puVar3 = param_1;\n    while (uVar4 != 0) {\n        uVar1 = *puVar3;\n        puVar3 = puVar3 + 1;\n        if (uVar1 == 0) goto code_r0x004147cf;\n        uVar4 = puVar3 & 3;\n    }\n    do {\n        do {\n            puVar5 = puVar3;\n            puVar3 = puVar5 + 1;\n        } while (((*puVar5 ^ 0xffffffff ^ *puVar5 + 0x7efefeff) & 0x81010100) == 0);\n        uVar4 = *puVar5;\n        if (uVar4 == '\\0') goto code_r0x004147e1;\n        if (uVar4 >> 8 == '\\0') {\n            puVar5 = puVar5 + 1;\n            goto code_r0x004147e1;\n        }\n        if ((uVar4 & 0xff0000) == 0) {\n            puVar5 = puVar5 + 2;\n            goto code_r0x004147e1;\n        }\n    } while ((uVar4 & 0xff000000) != 0);\ncode_r0x004147cf:\n    puVar5 = puVar3 + -1;\ncode_r0x004147e1:\n    uVar4 = param_2 & 3;\n    while (uVar4 != 0) {\n        uVar1 = *param_2;\n        uVar4 = uVar1;\n        param_2 = param_2 + 1;\n        if (uVar1 == 0) goto code_r0x00414858;\n        *puVar5 = uVar1;\n        puVar5 = puVar5 + 1;\n        uVar4 = param_2 & 3;\n    }\n    do {\n        uVar2 = *param_2;\n        uVar4 = *param_2;\n        param_2 = param_2 + 1;\n        if (((uVar2 ^ 0xffffffff ^ uVar2 + 0x7efefeff) & 0x81010100) != 0) {\n            if (uVar4 == '\\0') {\ncode_r0x00414858:\n                *puVar5 = uVar4;\n                return param_1;\n            }\n            if (uVar4 >> 8 == '\\0') {\n                *puVar5 = uVar4;\n                return param_1;\n            }\n            if ((uVar4 & 0xff0000) == 0) {\n                *puVar5 = uVar4;\n                *(puVar5 + 2) = 0;\n                return param_1;\n            }\n            if ((uVar4 & 0xff000000) == 0) {\n                *puVar5 = uVar4;\n                return param_1;\n            }\n        }\n        *puVar5 = uVar4;\n        puVar5 = puVar5 + 1;\n    } while( true );\n}\n",
        "token_count": 747
    },
    "00414770": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * fcn.00414770(uint32_t *param_1, uint32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    \n    uVar3 = param_2 & 3;\n    puVar4 = param_1;\n    while (uVar3 != 0) {\n        uVar1 = *param_2;\n        uVar3 = uVar1;\n        param_2 = param_2 + 1;\n        if (uVar1 == 0) goto code_r0x00414858;\n        *puVar4 = uVar1;\n        puVar4 = puVar4 + 1;\n        uVar3 = param_2 & 3;\n    }\n    do {\n        uVar2 = *param_2;\n        uVar3 = *param_2;\n        param_2 = param_2 + 1;\n        if (((uVar2 ^ 0xffffffff ^ uVar2 + 0x7efefeff) & 0x81010100) != 0) {\n            if (uVar3 == '\\0') {\ncode_r0x00414858:\n                *puVar4 = uVar3;\n                return param_1;\n            }\n            if (uVar3 >> 8 == '\\0') {\n                *puVar4 = uVar3;\n                return param_1;\n            }\n            if ((uVar3 & 0xff0000) == 0) {\n                *puVar4 = uVar3;\n                *(puVar4 + 2) = 0;\n                return param_1;\n            }\n            if ((uVar3 & 0xff000000) == 0) {\n                *puVar4 = uVar3;\n                return param_1;\n            }\n        }\n        *puVar4 = uVar3;\n        puVar4 = puVar4 + 1;\n    } while( true );\n}\n",
        "token_count": 436
    },
    "0041575c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041575c(uint param_1, uint param_2)\n\n{\n    fcn.004155f0(param_1, param_2, 0x45c760);\n    return;\n}\n",
        "token_count": 47
    },
    "00415772": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415772(uint param_1, uint param_2)\n\n{\n    fcn.004155f0(param_1, param_2, 0x45c778);\n    return;\n}\n",
        "token_count": 46
    },
    "00415802": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415802(uint arg_8h, uint arg_ch)\n\n{\n    uint var_ch;\n    \n    fcn.00417c9c(&var_ch, &arg_ch, arg_ch, 0, 0, 0, 0);\n    fcn.0041575c(&var_ch, arg_8h);\n    return;\n}\n",
        "token_count": 80
    },
    "0041585d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041585d(uint arg_8h, uint arg_ch)\n\n{\n    uint var_ch;\n    \n    fcn.00417c9c(&var_ch, &arg_ch, arg_ch, 0, 0, 0, 0);\n    fcn.00415772(&var_ch, arg_8h);\n    return;\n}\n",
        "token_count": 80
    },
    "00418ae9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00418ae9(uint param_1, uint param_2, int32_t param_3, uint param_4, int32_t param_5, int32_t param_6)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint dwInfoType;\n    uint lpSrcStr;\n    int32_t cchSrc;\n    uint var_14h;\n    int32_t var_28h;\n    int32_t var_4h_2;\n    uint var_18h_3;\n    uint var_ch_2;\n    uint var_10h;\n    uint var_18h_4;\n    uint var_4h;\n    uint lpWideCharStr;\n    uint var_10h_2;\n    uint CodePage;\n    uint var_18h;\n    int32_t iStack124;\n    uint uStack120;\n    uint uStack116;\n    int32_t iStack112;\n    uchar *puStack108;\n    uchar *puStack104;\n    uint uStack100;\n    int32_t iStack96;\n    int32_t iStack92;\n    uint uStack88;\n    uint uStack84;\n    int32_t iStack80;\n    uint uStack76;\n    uint uStack72;\n    int32_t iStack68;\n    uint *puStack64;\n    uchar *var_2ch_2;\n    int32_t var_28h_2;\n    uint var_24h;\n    uint var_20h;\n    uint lpCharType;\n    uchar *puStack28;\n    uint uStack20;\n    code *var_2ch;\n    uint uStack12;\n    uint var_4h_3;\n    \n    var_4h_3 = 0xffffffff;\n    uStack12 = 0x453a58;\n    var_2ch = fcn.00413f38;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    puStack28 = &stack0xffffffc4;\n    iVar4 = *0x4605e0;\n    puVar1 = &stack0xffffffc4;\n    if (*0x4605e0 == 0) {\n        puStack64 = &fcn.00418ae9::lpCharType;\n        iStack68 = 1;\n        uStack72 = 0x452fa0;\n        uStack76 = 1;\n        iStack80 = 0x418b2e;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetStringTypeW)();\n        iVar4 = 1;\n        puVar1 = puStack28;\n        if (iVar2 != 0) goto code_r0x00418b58;\n        puStack64 = &fcn.00418ae9::lpCharType;\n        iStack68 = 1;\n        uStack72 = 0x452f9c;\n        uStack76 = 1;\n        iStack80 = 0;\n        uStack84 = 0x418b48;\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetStringTypeA)();\n        if (iVar4 != 0) {\n            iVar4 = 2;\n            puVar1 = puStack28;\n            goto code_r0x00418b58;\n        }\n    }\n    else {\ncode_r0x00418b58:\n        puStack28 = puVar1;\n        *0x4605e0 = iVar4;\n        if (*0x4605e0 == 1) {\n            puStack64 = var_14h;\n            iStack68 = cchSrc;\n            uStack72 = lpSrcStr;\n            uStack76 = dwInfoType;\n            iStack80 = 0x418b6f;\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetStringTypeW)();\n            goto code_r0x00418c9c;\n        }\n        if (*0x4605e0 == 2) {\n            if (var_28h == 0) {\n                var_28h = *0x46036c;\n            }\n            puStack64 = NULL;\n            iStack68 = 0;\n            uStack72 = 0;\n            uStack76 = 0;\n            iStack80 = cchSrc;\n            uStack84 = lpSrcStr;\n            uStack88 = 0x220;\n            iStack92 = var_28h;\n            iStack96 = 0x418ba2;\n            var_2ch_2 = &stack0xffffffa4;\n            puStack104 = &stack0xffffffa4;\n            var_28h_2 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)();\n            if (var_28h_2 != 0) {\n                var_4h_3 = 0;\n                iStack96 = 0x418bbc;\n                fcn.0040c750();\n                uStack100 = 0;\n                puStack108 = 0x418bcc;\n                iStack96 = var_28h_2;\n                puStack28 = &stack0xffffffa4;\n                fcn.0040cfc0();\n                var_4h_3 = 0xffffffff;\n                if (*0x10 != 0x5c) {\n                    iStack96 = 0;\n                    uStack100 = 0;\n                    iStack112 = cchSrc;\n                    uStack116 = lpSrcStr;\n                    uStack120 = 0x220;\n                    iStack124 = var_28h;\n                    puStack108 = &stack0xffffffa4;\n                    puStack104 = var_28h_2;\n                    iVar4 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)();\n                    if (iVar4 != 0) {\n                        var_4h_3 = 1;\n                        fcn.0040c750();\n                        var_4h_3 = 0xffffffff;\n                        if (*0x10 != 0x7c) {\n                            if (var_4h_2 == 0) {\n                                var_4h_2 = *0x46035c;\n                            }\n                            cchSrc = cchSrc * 2;\n                            puStack28 = &stack0xffffff84;\n                            *(&stack0xffffff84 + cchSrc) = -1;\n                            *(&stack0xffffff82 + cchSrc) = 0xffff;\n                            uVar3 = (*_sym.imp.KERNEL32.dll_GetStringTypeA)\n                                              (var_4h_2, dwInfoType, var_2ch_2, var_28h_2, &stack0xffffff84);\n                            if ((*(&stack0xffffff82 + cchSrc) != -1) && (*(&stack0xffffff84 + cchSrc) == -1)) {\n                                fcn.0040d6c0(var_14h, &stack0xffffff84, cchSrc);\n                                goto code_r0x00418c9c;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    uVar3 = 0;\ncode_r0x00418c9c:\n    *in_FS_OFFSET = uStack20;\n    return uVar3;\n}\n",
        "token_count": 1563
    },
    "004195db": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.004195db(uint param_1, uint param_2, uint8_t *param_3, int32_t param_4, uint8_t *param_5, int32_t param_6, \n                   int32_t param_7)\n\n{\n    code *pcVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint *in_FS_OFFSET;\n    uint var_4ch;\n    uint Locale;\n    uint dwCmpFlags;\n    uint8_t *lpString1;\n    int32_t lpCPInfo;\n    uint8_t *lpString2;\n    int32_t cbMultiByte;\n    int32_t var_20h_4;\n    uint var_4h_2;\n    uint var_1ch_2;\n    uint var_18h_2;\n    uint var_10h;\n    uint var_18h_3;\n    uint var_4h;\n    uint var_20h_2;\n    uint lpMultiByteStr;\n    uint var_14h;\n    uint var_1ch;\n    uint CodePage;\n    uint var_18h;\n    int32_t iStack152;\n    uint uStack148;\n    uint8_t *puStack144;\n    int32_t iStack140;\n    uint uStack136;\n    uint uStack132;\n    int32_t iStack128;\n    uint uStack124;\n    uint8_t *puStack120;\n    int32_t iStack116;\n    uchar *puStack112;\n    int32_t iStack108;\n    int32_t iStack104;\n    uint uStack100;\n    uint8_t *puStack96;\n    int32_t iStack92;\n    uint8_t *puStack88;\n    uint *puStack84;\n    uint32_t var_3ch_2;\n    uint var_36h;\n    uchar *var_28h;\n    uchar *var_24h_2;\n    int32_t iStack36;\n    int32_t cchCount1;\n    uchar *puStack28;\n    uint uStack20;\n    code *pcStack16;\n    uint uStack12;\n    uint var_4h_3;\n    \n    var_4h_3 = 0xffffffff;\n    uStack12 = 0x453a90;\n    pcStack16 = fcn.00413f38;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    puStack28 = &stack0xffffffb0;\n    uVar6 = 1;\n    puVar2 = &stack0xffffffb0;\n    if (*0x4605ec == 0) {\n        puStack84 = 0x1;\n        puStack88 = 0x452fa0;\n        iStack92 = 1;\n        puStack96 = 0x452fa0;\n        uStack100 = 0;\n        iStack104 = 0;\n        iStack108 = 0x41961f;\n        iVar3 = (*_sym.imp.KERNEL32.dll_CompareStringW)();\n        if (iVar3 != 0) {\n            *0x4605ec = 1;\n            puVar2 = puStack28;\n            goto code_r0x0041964e;\n        }\n        puStack84 = 0x1;\n        puStack88 = 0x452f9c;\n        iStack92 = 1;\n        puStack96 = 0x452f9c;\n        uStack100 = 0;\n        iStack104 = 0;\n        iStack108 = 0x41963c;\n        iVar3 = (*_sym.imp.KERNEL32.dll_CompareStringA)();\n        if (iVar3 != 0) {\n            *0x4605ec = 2;\n            puVar2 = puStack28;\n            goto code_r0x0041964e;\n        }\n    }\n    else {\ncode_r0x0041964e:\n        puStack28 = puVar2;\n        if (0 < lpCPInfo) {\n            puStack84 = lpCPInfo;\n            puStack88 = lpString1;\n            iStack92 = 0x41965e;\n            lpCPInfo = fcn.00419858();\n        }\n        if (0 < cbMultiByte) {\n            puStack84 = cbMultiByte;\n            puStack88 = lpString2;\n            iStack92 = 0x419675;\n            cbMultiByte = fcn.00419858();\n        }\n        if (*0x4605ec == 2) {\n            puStack84 = cbMultiByte;\n            puStack88 = lpString2;\n            puStack96 = lpString1;\n            uStack100 = dwCmpFlags;\n            iStack104 = Locale;\n            iStack108 = 0x41969a;\n            iStack92 = lpCPInfo;\n            puStack84 = (*_sym.imp.KERNEL32.dll_CompareStringA)();\n            goto code_r0x00419846;\n        }\n        if (*0x4605ec == 1) {\n            if (var_20h_4 == 0) {\n                var_20h_4 = *0x46036c;\n            }\n            if ((lpCPInfo == 0) || (cbMultiByte == 0)) {\n                if (lpCPInfo == cbMultiByte) {\ncode_r0x004196c6:\n                    puStack84 = 0x2;\n                    goto code_r0x00419846;\n                }\n                puStack84 = uVar6;\n                if (1 < cbMultiByte) goto code_r0x00419846;\n                if (lpCPInfo < 2) {\n                    puStack84 = &fcn.004195db::var_3ch_2;\n                    puStack88 = var_20h_4;\n                    iStack92 = 0x4196eb;\n                    iVar3 = (*_sym.imp.KERNEL32.dll_GetCPInfo)();\n                    if (iVar3 == 0) goto code_r0x00419844;\n                    if (lpCPInfo < 1) {\n                        if (0 < cbMultiByte) {\n                            puStack84 = uVar6;\n                            if (1 < var_3ch_2) {\n                                puVar4 = &fcn.004195db::var_36h;\n                                while ((var_36h != 0 && (*(puVar4 + 1) != 0))) {\n                                    if ((*puVar4 <= *lpString2) && (*lpString2 <= *(puVar4 + 1))) goto code_r0x004196c6;\n                                    puVar4 = puVar4 + 2;\n                                    var_36h._0_1_ = *puVar4;\n                                }\n                            }\n                            goto code_r0x00419846;\n                        }\n                        goto code_r0x00419759;\n                    }\n                    if (1 < var_3ch_2) {\n                        puVar4 = &fcn.004195db::var_36h;\n                        while ((var_36h != 0 && (*(puVar4 + 1) != 0))) {\n                            if ((*puVar4 <= *lpString1) && (*lpString1 <= *(puVar4 + 1))) goto code_r0x004196c6;\n                            puVar4 = puVar4 + 2;\n                            var_36h._0_1_ = *puVar4;\n                        }\n                    }\n                }\n                puStack84 = 0x3;\n                goto code_r0x00419846;\n            }\ncode_r0x00419759:\n            puStack84 = NULL;\n            puStack88 = NULL;\n            puStack96 = lpString1;\n            uStack100 = 9;\n            iStack104 = var_20h_4;\n            iStack108 = 0x41976a;\n            puStack112 = &stack0xffffff98;\n            var_24h_2 = &stack0xffffff98;\n            iStack92 = lpCPInfo;\n            cchCount1 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)();\n            if (cchCount1 != 0) {\n                var_4h_3 = 0;\n                iStack108 = 0x419784;\n                fcn.0040c750();\n                pcVar1 = _sym.imp.KERNEL32.dll_MultiByteToWideChar;\n                var_4h_3 = 0xffffffff;\n                if (*0x10 != 0x68) {\n                    iStack108 = cchCount1;\n                    puStack120 = lpString1;\n                    uStack124 = 1;\n                    iStack128 = var_20h_4;\n                    uStack132 = 0x4197c7;\n                    iStack116 = lpCPInfo;\n                    puStack28 = &stack0xffffff98;\n                    iVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)();\n                    if (iVar3 != 0) {\n                        uStack132 = 0;\n                        uStack136 = 0;\n                        iStack140 = cbMultiByte;\n                        puStack144 = lpString2;\n                        uStack148 = 9;\n                        iStack152 = var_20h_4;\n                        var_28h = &stack0xffffff68;\n                        iVar3 = (*pcVar1)();\n                        if (iVar3 != 0) {\n                            var_4h_3 = 1;\n                            iStack36 = iVar3;\n                            fcn.0040c750();\n                            var_4h_3 = 0xffffffff;\n                            if ((*0x10 != 0x98) &&\n                               (puStack28 = &stack0xffffff68, \n                               iVar5 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                                 (var_20h_4, 1, lpString2, cbMultiByte, &stack0xffffff68, iVar3), \n                               iVar5 != 0)) {\n                                puStack84 = (*_sym.imp.KERNEL32.dll_CompareStringW)\n                                                      (Locale, dwCmpFlags, var_24h_2, cchCount1, &stack0xffffff68, iVar3\n                                                      );\n                                goto code_r0x00419846;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x00419844:\n    puStack84 = 0;\ncode_r0x00419846:\n    *in_FS_OFFSET = uStack20;\n    return puStack84;\n}\n",
        "token_count": 2264
    },
    "0041a665": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a665(int32_t *param_1)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    \n    *(*(*param_1 + 4) + -8 + param_1 + 2) = vtable.std::basic_istream_char__struct_std::char_traits_char__.0;\n    param_1[2] = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n    fcn.0040d018();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.std::ios_base.0;\n    pcVar1 = extraout_ECX[9];\n    *(unaff_EBP + -4) = 0;\n    if ((pcVar1 == NULL) || (pcVar1 = pcVar1 + 0x460a1c,  *pcVar1 = *pcVar1 + -1,  extraout_ECX[9][0x460a1c] < '\\x01'))\n    {\n        fcn.0041cd04();\n    }\n    fcn.0041aba5();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 289
    },
    "0041a6a9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a6a9(int32_t *param_1)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    \n    *(*(*param_1 + 4) + -4 + param_1 + 1) = vtable.std::basic_ostream_char__struct_std::char_traits_char__.0;\n    param_1[1] = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n    fcn.0040d018();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.std::ios_base.0;\n    pcVar1 = extraout_ECX[9];\n    *(unaff_EBP + -4) = 0;\n    if ((pcVar1 == NULL) || (pcVar1 = pcVar1 + 0x460a1c,  *pcVar1 = *pcVar1 + -1,  extraout_ECX[9][0x460a1c] < '\\x01'))\n    {\n        fcn.0041cd04();\n    }\n    fcn.0041aba5();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 291
    },
    "0041a90c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t * __cdecl fcn.0041a90c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    if (*(unaff_EBP + 0x14) != 0) {\n        *extraout_ECX = 0x453af0;\n        extraout_ECX[10] = 0;\n        extraout_ECX[1] = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n        *(unaff_EBP + -0x10) = 1;\n        *(unaff_EBP + -4) = 0;\n    }\n    cVar1 = *(unaff_EBP + 0x10);\n    *(*(*extraout_ECX + 4) + extraout_ECX) = vtable.std::basic_ostream_char__struct_std::char_traits_char__.0;\n    if (cVar1 != '\\0') {\n        fcn.0041b3f6(*(unaff_EBP + 8), *(unaff_EBP + 0xc));\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 390
    },
    "0041a976": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0041a976(uint noname_0, uint arg_ch)\n\n{\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    if (*(unaff_EBP + 0xc) != 0) {\n        *extraout_ECX = 0x453af0;\n        extraout_ECX[10] = 0;\n        extraout_ECX[1] = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n        *(unaff_EBP + -0x10) = 1;\n        *(unaff_EBP + -4) = 0;\n    }\n    *(*(*extraout_ECX + 4) + extraout_ECX) = vtable.std::basic_ostream_char__struct_std::char_traits_char__.0;\n    fcn.0041cc7e();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 292
    },
    "0041aa2a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t * __cdecl fcn.0041aa2a(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    if (*(unaff_EBP + 0x10) != 0) {\n        *extraout_ECX = 0x453af8;\n        extraout_ECX[0xb] = 0;\n        extraout_ECX[2] = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n        *(unaff_EBP + -0x10) = 1;\n        *(unaff_EBP + -4) = 0;\n    }\n    extraout_ECX[1] = 0;\n    uVar1 = *(unaff_EBP + 0xc);\n    uVar2 = *(unaff_EBP + 8);\n    *(*(*extraout_ECX + 4) + extraout_ECX) = vtable.std::basic_istream_char__struct_std::char_traits_char__.0;\n    fcn.0041b3f6(uVar2, uVar1);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 392
    },
    "0041aa92": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0041aa92(uint noname_0, uint arg_ch)\n\n{\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    if (*(unaff_EBP + 0xc) != 0) {\n        *extraout_ECX = 0x453af8;\n        extraout_ECX[0xb] = 0;\n        extraout_ECX[2] = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n        *(unaff_EBP + -0x10) = 1;\n        *(unaff_EBP + -4) = 0;\n    }\n    *(*(*extraout_ECX + 4) + extraout_ECX) = vtable.std::basic_istream_char__struct_std::char_traits_char__.0;\n    fcn.0041cc7e();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 293
    },
    "0041abf6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041abf6(code **param_1)\n\n{\n    uint *puVar1;\n    \n    *param_1 = vtable.std::basic_streambuf_char__struct_std::char_traits_char__.0;\n    if (param_1[0xd] != NULL) {\n        puVar1 = fcn.0041abbd();\n        if (puVar1 != NULL) {\n            (***puVar1)(1);\n        }\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "0041b697": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl\nfcn.0041b697(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint arg_8h)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint32_t uVar5;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    uVar5 = *(unaff_EBP + 8) | 0x1f;\n    *(unaff_EBP + -0x10) = &var_14h;\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    if (0xfffffffd < uVar5) {\n        uVar5 = *(unaff_EBP + 8);\n    }\n    *(unaff_EBP + -4) = 0;\n    iVar2 = uVar5 + 2;\n    if (iVar2 < 0) {\n        iVar2 = 0;\n    }\n    uVar3 = fcn.00434ea1(iVar2);\n    *(unaff_EBP + 8) = uVar3;\n    uVar4 = *(extraout_ECX + 8);\n    if (uVar4 != 0) {\n        if (uVar5 < uVar4) {\n            uVar4 = uVar5;\n        }\n        fcn.0040d130(*(unaff_EBP + 8) + 1, *(extraout_ECX + 4), uVar4);\n    }\n    uVar4 = *(extraout_ECX + 8);\n    fcn.0041b3ba(1);\n    puVar1 = *(unaff_EBP + 8);\n    *(extraout_ECX + 4) = puVar1 + 1;\n    *puVar1 = 0;\n    *(extraout_ECX + 0xc) = uVar5;\n    if (uVar4 <= uVar5) {\n        uVar5 = uVar4;\n    }\n    uVar3 = *(unaff_EBP + -0xc);\n    *(extraout_ECX + 8) = uVar5;\n    *(*(extraout_ECX + 4) + uVar5) = 0;\n    *in_FS_OFFSET = uVar3;\n    return;\n}\n",
        "token_count": 596
    },
    "0041b8ee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b8ee(int32_t *param_1)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    \n    *(*(*param_1 + 4) + -8 + param_1 + 2) =\n         vtable.std::basic_istream_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n    param_1[2] = vtable.std::basic_ios_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n    fcn.0040d018();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.std::ios_base.0;\n    pcVar1 = extraout_ECX[9];\n    *(unaff_EBP + -4) = 0;\n    if ((pcVar1 == NULL) || (pcVar1 = pcVar1 + 0x460a1c,  *pcVar1 = *pcVar1 + -1,  extraout_ECX[9][0x460a1c] < '\\x01'))\n    {\n        fcn.0041cd04();\n    }\n    fcn.0041aba5();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 299
    },
    "0041b932": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b932(int32_t *param_1)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    \n    *(*(*param_1 + 4) + -4 + param_1 + 1) =\n         vtable.std::basic_ostream_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n    param_1[1] = vtable.std::basic_ios_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n    fcn.0040d018();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.std::ios_base.0;\n    pcVar1 = extraout_ECX[9];\n    *(unaff_EBP + -4) = 0;\n    if ((pcVar1 == NULL) || (pcVar1 = pcVar1 + 0x460a1c,  *pcVar1 = *pcVar1 + -1,  extraout_ECX[9][0x460a1c] < '\\x01'))\n    {\n        fcn.0041cd04();\n    }\n    fcn.0041aba5();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 298
    },
    "0041bb69": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t * __cdecl fcn.0041bb69(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    if (*(unaff_EBP + 0x14) != 0) {\n        *extraout_ECX = 0x453b8c;\n        extraout_ECX[10] = 0;\n        extraout_ECX[1] = vtable.std::basic_ios_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n        *(unaff_EBP + -0x10) = 1;\n        *(unaff_EBP + -4) = 0;\n    }\n    cVar1 = *(unaff_EBP + 0x10);\n    *(*(*extraout_ECX + 4) + extraout_ECX) =\n         vtable.std::basic_ostream_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n    if (cVar1 != '\\0') {\n        fcn.0041c507(*(unaff_EBP + 8), *(unaff_EBP + 0xc));\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 397
    },
    "0041bbd3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0041bbd3(uint noname_0, uint arg_ch)\n\n{\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    if (*(unaff_EBP + 0xc) != 0) {\n        *extraout_ECX = 0x453b8c;\n        extraout_ECX[10] = 0;\n        extraout_ECX[1] = vtable.std::basic_ios_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n        *(unaff_EBP + -0x10) = 1;\n        *(unaff_EBP + -4) = 0;\n    }\n    *(*(*extraout_ECX + 4) + extraout_ECX) =\n         vtable.std::basic_ostream_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n    fcn.0041cc7e();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 303
    },
    "0041bc87": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t * __cdecl fcn.0041bc87(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    if (*(unaff_EBP + 0x10) != 0) {\n        *extraout_ECX = 0x453b94;\n        extraout_ECX[0xb] = 0;\n        extraout_ECX[2] = vtable.std::basic_ios_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n        *(unaff_EBP + -0x10) = 1;\n        *(unaff_EBP + -4) = 0;\n    }\n    extraout_ECX[1] = 0;\n    uVar1 = *(unaff_EBP + 0xc);\n    uVar2 = *(unaff_EBP + 8);\n    *(*(*extraout_ECX + 4) + extraout_ECX) =\n         vtable.std::basic_istream_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n    fcn.0041c507(uVar2, uVar1);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 398
    },
    "0041bcef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0041bcef(uint noname_0, uint arg_ch)\n\n{\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    if (*(unaff_EBP + 0xc) != 0) {\n        *extraout_ECX = 0x453b94;\n        extraout_ECX[0xb] = 0;\n        extraout_ECX[2] = vtable.std::basic_ios_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n        *(unaff_EBP + -0x10) = 1;\n        *(unaff_EBP + -4) = 0;\n    }\n    *(*(*extraout_ECX + 4) + extraout_ECX) =\n         vtable.std::basic_istream_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n    fcn.0041cc7e();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 302
    },
    "0041bdae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041bdae(code **param_1)\n\n{\n    uint *puVar1;\n    \n    *param_1 = vtable.std::basic_streambuf_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n    if (param_1[0xd] != NULL) {\n        puVar1 = fcn.0041abbd();\n        if (puVar1 != NULL) {\n            (***puVar1)(1);\n        }\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "0041c8df": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\ncode ** __cdecl fcn.0041c8df(uint arg_8h)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    iVar2 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.00421b9e(iVar2);\n    uVar1 = *(iVar2 + 0xc);\n    *(unaff_EBP + -4) = 0;\n    *(extraout_ECX + 3) = uVar1;\n    fcn.0041b3ba(0);\n    fcn.0041cd4e(iVar2 + 0xc, 0, *0x453b70);\n    uVar3 = *(unaff_EBP + -0xc);\n    *extraout_ECX = vtable.std::runtime_error.0;\n    *in_FS_OFFSET = uVar3;\n    return extraout_ECX;\n}\n",
        "token_count": 312
    },
    "0041d491": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\ncode ** __cdecl fcn.0041d491(uint arg_8h)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    iVar2 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.00421b9e(iVar2);\n    uVar1 = *(iVar2 + 0xc);\n    *(unaff_EBP + -4) = 0;\n    *(extraout_ECX + 3) = uVar1;\n    fcn.0041b3ba(0);\n    fcn.0041cd4e(iVar2 + 0xc, 0, *0x453b70);\n    uVar3 = *(unaff_EBP + -0xc);\n    *extraout_ECX = vtable.std::logic_error.0;\n    *in_FS_OFFSET = uVar3;\n    return extraout_ECX;\n}\n",
        "token_count": 311
    },
    "0041dd70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0041dd70(uint param_1, uint param_2, uint param_3, uint param_4, uint param_5)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    \n    uVar2 = fcn.0041db40(param_1, param_5);\n    uVar2 = (*_sym.imp.USER32.dll_CallWindowProcA)(uVar2, param_1, param_2, param_3, param_4);\n    pcVar1 = _sym.imp.USER32.dll_RemovePropA;\n    (*_sym.imp.USER32.dll_RemovePropA)(param_1, *0x4624ce);\n    (*pcVar1)(param_1, *0x4624d4);\n    return uVar2;\n}\n",
        "token_count": 169
    },
    "0041ddf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041ddf0(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0x462504;\n    do {\n        fcn.0041ddd0(uVar1);\n        uVar1 = uVar1 + 4;\n    } while (uVar1 < 0x462510);\n    fcn.0041ddd0(0x462510);\n    return;\n}\n",
        "token_count": 91
    },
    "0041df90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041df90(uint param_1, int32_t *param_2, uint16_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iStack16;\n    int32_t iStack12;\n    uint32_t uStack8;\n    uint32_t uStack4;\n    \n    iStack16 = *param_2;\n    iStack12 = param_2[1];\n    uStack8 = param_2[2];\n    uStack4 = param_2[3];\n    uVar1 = uStack8 & 0xffff0000;\n    fcn.0041de50(param_1, &iStack16, 7, 1, uStack4 & 0xffff0000 | param_3 & 0xffff000f);\n    iStack16 = iStack16 + -1;\n    iStack12 = iStack12 + -1;\n    uStack8 = uStack8 + 1;\n    uStack4 = uStack4 + 1;\n    fcn.0041de50(param_1, &iStack16, 2, 0, uVar1 | param_3);\n    return;\n}\n",
        "token_count": 255
    },
    "0041e000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041e000(uint param_1)\n\n{\n    uint unaff_retaddr;\n    uint *puVar1;\n    uint uStack16;\n    uint uStack12;\n    \n    puVar1 = &uStack16;\n    (*_sym.imp.USER32.dll_GetClientRect)(param_1, &uStack16);\n    (*_sym.imp.GDI32.dll_IntersectClipRect)(unaff_retaddr, param_1, puVar1, uStack16, uStack12);\n    return;\n}\n",
        "token_count": 111
    },
    "0041e370": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0041e370(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    iVar3 = 0;\n    if (0 < *0x46251c) {\n        piVar2 = 0x462524;\n        do {\n            if (*piVar2 == iVar1) {\n                return 1;\n            }\n            piVar2 = piVar2 + 5;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < *0x46251c);\n    }\n    return 0;\n}\n",
        "token_count": 148
    },
    "0041f410": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0041f410(uint param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.0041db20(param_1);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    if (0x35e < *0x4624e0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(param_1, 0xfffffff0);\n        if ((uVar2 & 4) != 0) {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 137
    },
    "0041f9e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041f9e0(uint param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uchar *puStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    \n    uStack32 = 0xfffffff0;\n    uStack36 = param_1;\n    puStack40 = 0x41f9f3;\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)();\n    puStack40 = &stack0xffffffe8;\n    uStack44 = param_1;\n    uStack48 = 0x41fa01;\n    (*_sym.imp.USER32.dll_GetWindowRect)();\n    puStack56 = &stack0xffffffe0;\n    uStack48 = 1;\n    uStack52 = 1;\n    uStack60 = 0x41fa10;\n    (*_sym.imp.USER32.dll_InflateRect)();\n    uStack60 = param_1;\n    puStack64 = 0x41fa17;\n    uVar3 = (*_sym.imp.USER32.dll_GetParent)();\n    pcVar1 = _sym.imp.USER32.dll_ScreenToClient;\n    puStack64 = &stack0xffffffd0;\n    (*_sym.imp.USER32.dll_ScreenToClient)(uVar3);\n    (*pcVar1)(uVar3, &stack0xffffffd0);\n    if ((uVar2 & 0x200000) != 0) {\n        puStack56 = puStack56 + 1;\n    }\n    (*_sym.imp.USER32.dll_ValidateRect)(uVar3, &stack0xffffffc0);\n    return;\n}\n",
        "token_count": 401
    },
    "004213d2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004213d2(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    \n    fcn.00415e51(arg_14h);\n    uVar1 = fcn.00421401(arg_8h, arg_ch, arg_10h, arg_14h);\n    fcn.00415ea3(arg_14h);\n    return uVar1;\n}\n",
        "token_count": 103
    },
    "00429415": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00429415(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_ch_00;\n    int32_t *in_ECX;\n    int32_t iVar1;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h < 0) {\n        arg_8h = 0;\n    }\n    if (arg_ch == 0) {\n        var_4h = 0;\n    }\n    else {\n        var_4h = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_ch);\n    }\n    iVar1 = *(*in_ECX + -8);\n    if (0 < var_4h) {\n        fcn.00434779();\n        if (iVar1 < arg_8h) {\n            arg_8h = iVar1;\n        }\n        iVar1 = iVar1 + var_4h;\n        arg_ch_00 = *in_ECX;\n        if (*(arg_ch_00 + -4) < iVar1) {\n            fcn.0043463d(iVar1);\n            fcn.0040d130(*in_ECX, arg_ch_00, *(arg_ch_00 + -8) + 1);\n            fcn.00434738(arg_ch_00 + -0xc);\n        }\n        fcn.0040d130(*in_ECX + var_4h + arg_8h, *in_ECX + arg_8h, ((iVar1 - var_4h) - arg_8h) + 1);\n        fcn.0040d130(*in_ECX + arg_8h, arg_ch, var_4h);\n        *(*in_ECX + -8) = iVar1;\n    }\n    return iVar1;\n}\n",
        "token_count": 392
    },
    "0042966a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042966a(uint arg_8h)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char **in_ECX;\n    char *pcVar3;\n    uint var_4h;\n    \n    fcn.00434779();\n    pcVar1 = *in_ECX;\n    pcVar3 = pcVar1 + *(pcVar1 + -8);\n    for (pcVar2 = pcVar1; pcVar2 < pcVar3; pcVar2 = fcn.0040d6a2(pcVar2)) {\n        if (*pcVar2 != arg_8h) {\n            *pcVar1 = *pcVar2;\n            pcVar1 = fcn.0040d6a2(pcVar1);\n        }\n    }\n    *pcVar1 = '\\0';\n    *(*in_ECX + -8) = *(*in_ECX + -8) - (pcVar2 - pcVar1);\n    return;\n}\n",
        "token_count": 213
    },
    "004298ee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004298ee(int32_t *param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    \n    if ((param_3 <= *(*param_1 + -8)) && (iVar1 = fcn.0040c847(*param_1 + param_3, param_2),  iVar1 != 0)) {\n        return iVar1 - *param_1;\n    }\n    return -1;\n}\n",
        "token_count": 108
    },
    "00429e2d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00429e2d(char **param_1, int32_t param_2)\n\n{\n    char *arg_8h;\n    int32_t iVar1;\n    char *arg_ch;\n    \n    if (param_2 != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(param_2);\n        if (iVar1 != 0) {\n            fcn.00434779();\n            for (arg_ch = *param_1; *arg_ch != '\\0'; arg_ch = fcn.0040d6a2(arg_ch)) {\n                iVar1 = fcn.0040d482(param_2, *arg_ch);\n                if (iVar1 == 0) break;\n            }\n            arg_8h = *param_1;\n            if (arg_ch != arg_8h) {\n                iVar1 = *(arg_8h + -8);\n                fcn.0040d6c0(arg_8h, arg_ch, arg_8h + (iVar1 - arg_ch) + 1);\n                *(*param_1 + -8) = arg_8h + (iVar1 - arg_ch);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 266
    },
    "00429f7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429f7c(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    if (arg_10h != 0) {\n        do {\n            fcn.00434909();\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "0042a04b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.0042a04b(void)\n\n{\n    uint uVar1;\n    uint *extraout_ECX;\n    uint var_4h;\n    uint uStack72;\n    uint uStack68;\n    uint *puStack64;\n    code *pcStack60;\n    int32_t iStack56;\n    int32_t iStack52;\n    code *pcStack36;\n    int32_t iStack24;\n    code *pcStack20;\n    uint uStack8;\n    \n    puStack64 = &uStack8;\n    uStack68 = 0x457f48;\n    uStack8 = 0x45fed8;\n    pcStack20 = fcn.0042a064;\n    fcn.0040d037(puStack64, 0x457f48);\n    iStack52 = 0x457f90;\n    iStack24 = 0x45fe40;\n    pcStack36 = fcn.0042a07d;\n    pcStack20 = &stack0xfffffffc;\n    fcn.0040d037(&iStack24, 0x457f90);\n    uStack72 = uStack8;\n    pcStack60 = pcStack20;\n    iStack56 = iStack24 + -1;\n    iStack52 = iStack52 + -0x76c;\n    pcStack36 = &pcStack20;\n    uVar1 = fcn.0040eb21(&uStack72);\n    *extraout_ECX = uVar1;\n    return extraout_ECX;\n}\n",
        "token_count": 333
    },
    "0042a064": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.0042a064(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    uint *extraout_ECX;\n    uint var_4h_2;\n    uint uStack56;\n    uint uStack52;\n    int32_t iStack40;\n    int32_t iStack36;\n    uint uStack24;\n    code *pcStack20;\n    int32_t iStack8;\n    \n    iStack36 = 0x457f90;\n    iStack8 = 0x45fe40;\n    pcStack20 = fcn.0042a07d;\n    fcn.0040d037(&iStack8, 0x457f90);\n    uStack56 = var_4h_2;\n    uStack52 = param_1;\n    iStack40 = iStack8 + -1;\n    iStack36 = iStack36 + -0x76c;\n    uStack24 = param_3;\n    pcStack20 = &stack0xfffffffc;\n    uVar1 = fcn.0040eb21(&uStack56);\n    *extraout_ECX = uVar1;\n    return extraout_ECX;\n}\n",
        "token_count": 261
    },
    "0042a07d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall\nfcn.0042a07d(uint *param_1, int32_t param_2, int32_t param_3, uint param_4, uint param_5, uint param_6, uint param_7, \n            uint param_8)\n\n{\n    uint uVar1;\n    int32_t var_8h;\n    int32_t var_4h_2;\n    uint var_10h;\n    uint var_14h;\n    uint var_18h;\n    uint var_4h;\n    uint var_20h_2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h_2;\n    int32_t var_14h_2;\n    int32_t var_10h_2;\n    uint var_4h_3;\n    \n    var_24h = var_4h;\n    var_20h = var_18h;\n    var_1ch = var_14h;\n    var_18h_2 = var_10h;\n    var_14h_2 = var_4h_2 + -1;\n    var_10h_2 = var_8h + -0x76c;\n    var_4h_3 = var_20h_2;\n    uVar1 = fcn.0040eb21(&var_24h);\n    *param_1 = uVar1;\n    return param_1;\n}\n",
        "token_count": 320
    },
    "0042a457": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0042a457(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint in_ECX;\n    uint var_84h;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.0040ef07(in_ECX);\n    if (iVar1 != 0) {\n        iVar1 = fcn.0040f3bd(&var_84h, 0x80, arg_ch, iVar1);\n        if (iVar1 != 0) goto code_r0x0042a492;\n    }\n    var_84h._0_1_ = 0;\ncode_r0x0042a492:\n    fcn.0043483e(&var_84h);\n    return arg_8h;\n}\n",
        "token_count": 189
    },
    "0042a4a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0042a4a8(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_84h;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.0040edfd();\n    if (iVar1 != 0) {\n        iVar1 = fcn.0040f3bd(&var_84h, 0x80, arg_ch, iVar1);\n        if (iVar1 != 0) goto code_r0x0042a4e3;\n    }\n    var_84h._0_1_ = 0;\ncode_r0x0042a4e3:\n    fcn.0043483e(&var_84h);\n    return arg_8h;\n}\n",
        "token_count": 186
    },
    "0042be2d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0042be2d(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    \n    fcn.0040cfc0(&var_38h, 0, 0x38);\n    var_2ch = 0x28;\n    if (arg_8h == 0) {\n        var_38h = 0;\n    }\n    else {\n        var_38h = *(arg_8h + 0x1c);\n    }\n    var_34h = arg_ch;\n    var_30h = arg_10h;\n    iVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x1c), 0x40a, 0, &var_38h);\n    if (iVar1 != 0) {\n        fcn.0040d130(arg_14h, &var_2ch, 0x28);\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 267
    },
    "0042bea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042bea0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    uint var_2ch;\n    uint var_1ch;\n    \n    fcn.0042bf69(&var_2ch, arg_8h, arg_ch);\n    fcn.0040d130(&var_1ch, arg_10h, 0x10);\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x1c), 0x406, 0, &var_2ch);\n    return;\n}\n",
        "token_count": 139
    },
    "0042bf69": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042bf69(uint *param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    uint uVar2;\n    \n    fcn.0040cfc0(param_1, 0, 0x28);\n    *param_1 = 0x28;\n    if (param_2 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = *(param_2 + 0x1c);\n    }\n    if (param_3 == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_GetParent)(uVar2);\n        param_1[2] = uVar1;\n        param_1[1] = 1;\n        param_1[3] = uVar2;\n    }\n    else {\n        param_1[1] = 0;\n        param_1[2] = uVar2;\n        param_1[3] = param_3;\n    }\n    return;\n}\n",
        "token_count": 228
    },
    "0042d82e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d82e(uint *param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint *puVar1;\n    \n    puVar1 = fcn.00434ea1(param_2 * param_3 + 4);\n    *puVar1 = *param_1;\n    *param_1 = puVar1;\n    return;\n}\n",
        "token_count": 87
    },
    "0042edc9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0042edc9(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    \n    iVar1 = arg_8h;\n    puVar2 = fcn.0042ed42(arg_8h, &arg_8h);\n    if (puVar2 == NULL) {\n        if (*(in_ECX + 4) == 0) {\n            fcn.0042ec43(*(in_ECX + 8), 1);\n        }\n        puVar2 = fcn.0042ecdc();\n        puVar2[1] = iVar1;\n        *puVar2 = *(*(in_ECX + 4) + arg_8h * 4);\n        *(*(in_ECX + 4) + arg_8h * 4) = puVar2;\n    }\n    return puVar2 + 2;\n}\n",
        "token_count": 207
    },
    "004304bd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.004304bd(code **param_1)\n\n{\n    fcn.00433ff3();\n    *param_1 = vtable.CWnd.0;\n    fcn.0040cfc0(param_1 + 7, 0, 0x20);\n    return param_1;\n}\n",
        "token_count": 71
    },
    "004304fb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.004304fb(code **param_1, code *param_2)\n\n{\n    fcn.00433ff3();\n    *param_1 = vtable.CWnd.0;\n    fcn.0040cfc0(param_1 + 7, 0, 0x20);\n    param_1[7] = param_2;\n    return param_1;\n}\n",
        "token_count": 90
    },
    "00430905": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00430905(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint unaff_retaddr;\n    \n    iVar1 = fcn.0043086c(0);\n    uVar2 = 0;\n    if (iVar1 != 0) {\n        uVar2 = fcn.0042ed74(unaff_retaddr);\n    }\n    return uVar2;\n}\n",
        "token_count": 90
    },
    "00431668": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpWndClass\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00431668(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint noname_1;\n    uint *noname_3;\n    uint lpWndClass;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00447cf1();\n    iVar1 = iVar1 + 0x58;\n    iVar2 = fcn.00447f81();\n    var_18h = *(iVar2 + 8);\n    if (((arg_ch == 0) && (arg_10h == 0)) && (arg_14h == 0)) {\n        (*_sym.imp.USER32.dll_wsprintfA)(iVar1, \"Afx:%x:%x\", var_18h, arg_8h);\n    }\n    else {\n        (*_sym.imp.USER32.dll_wsprintfA)(iVar1, \"Afx:%x:%x:%x:%x:%x\", var_18h, arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    noname_3 = &lpWndClass;\n    noname_1 = var_18h;\n    iVar2 = iVar1;\n    iVar3 = (*_sym.imp.USER32.dll_GetClassInfoA)();\n    if (iVar3 == 0) {\n        lpWndClass = arg_8h;\n        var_24h = _sym.imp.USER32.dll_DefWindowProcA;\n        var_1ch = 0;\n        var_20h = 0;\n        var_8h = 0;\n        var_14h = arg_14h;\n        var_10h = arg_ch;\n        var_ch = arg_10h;\n        var_4h = iVar1;\n        iVar2 = fcn.004315c7(&lpWndClass, noname_1, iVar2, noname_3, unaff_EDI, unaff_ESI, unaff_EBX, arg_8h, \n                             _sym.imp.USER32.dll_DefWindowProcA, 0, 0, var_18h, arg_14h, arg_ch, arg_10h, 0);\n        if (iVar2 == 0) {\n            fcn.0043d7c5();\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 753
    },
    "00432f1e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00432f1e(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_60h;\n    uint lprcSrc;\n    int32_t lpPoints;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t lprcDst;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = fcn.00433c44();\n    if (arg_8h == 0) {\n        if ((var_4h & 0x40000000) == 0) {\n            iVar5 = (*_sym.imp.USER32.dll_GetWindow)(*(in_ECX + 0x1c), 4);\n        }\n        else {\n            iVar5 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x1c));\n        }\n        if ((iVar5 != 0) && (iVar4 = (*_sym.imp.USER32.dll_SendMessageA)(iVar5, 0x36b, 0, 0),  iVar4 != 0)) {\n            iVar5 = iVar4;\n        }\n    }\n    else {\n        iVar5 = *(arg_8h + 0x1c);\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetWindowRect;\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(in_ECX + 0x1c), &var_28h);\n    if ((var_4h & 0x40000000) == 0) {\n        if ((iVar5 != 0) &&\n           ((uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar5, 0xfffffff0),  (uVar2 & 0x10000000) == 0 ||\n            ((uVar2 & 0x20000000) != 0)))) {\n            iVar5 = 0;\n        }\n        if (iVar5 == 0) {\n            iVar5 = fcn.0040bccc();\n            if (iVar5 != 0) {\n                iVar5 = *(iVar5 + 0x1c);\n            }\n            uVar3 = fcn.0040bac6(iVar5, 1);\n            fcn.0040bb31(uVar3, iVar5);\n            pcVar1 = _sym.imp.USER32.dll_CopyRect;\n            (*_sym.imp.USER32.dll_CopyRect)(&lpPoints, &lprcSrc);\n            (*pcVar1)(&lprcDst, &lprcSrc);\n        }\n        else {\n            (*pcVar1)(iVar5, &lpPoints);\n            uVar3 = fcn.0040bac6(iVar5, 2);\n            fcn.0040bb31(uVar3, iVar5);\n            (*_sym.imp.USER32.dll_CopyRect)(&lprcDst, &lprcSrc);\n        }\n    }\n    else {\n        uVar3 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x1c));\n        pcVar1 = _sym.imp.USER32.dll_GetClientRect;\n        (*_sym.imp.USER32.dll_GetClientRect)(uVar3, &lprcDst);\n        (*pcVar1)(iVar5, &lpPoints);\n        (*_sym.imp.USER32.dll_MapWindowPoints)(iVar5, uVar3, &lpPoints, 2);\n    }\n    iVar5 = (lpPoints + var_30h) / 2 - (var_20h - var_28h) / 2;\n    iVar4 = (var_34h + var_2ch) / 2 - (var_1ch - var_24h) / 2;\n    if ((lprcDst <= iVar5) && (lprcDst = iVar5,  var_10h < (var_20h - var_28h) + iVar5)) {\n        lprcDst = (var_10h - var_20h) + var_28h;\n    }\n    if ((var_14h <= iVar4) && (var_14h = iVar4,  var_ch < (var_1ch - var_24h) + iVar4)) {\n        var_14h = (var_24h - var_1ch) + var_ch;\n    }\n    fcn.00433dd0(0, lprcDst, var_14h, 0xffffffff, 0xffffffff, 0x15);\n    return;\n}\n",
        "token_count": 1085
    },
    "0043400d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043400d(void)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    iVar1 = *(extraout_ECX + 0x10);\n    *(unaff_EBP + -4) = 0;\n    if (iVar1 != 0) {\n        (**(iVar1 + 0x1c))(extraout_ECX);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 169
    },
    "0043463d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043463d(uint *param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        *param_1 = *0x45b93c;\n    }\n    else {\n        uVar2 = 0x40;\n        if ((((param_2 < 0x41) || (uVar2 = 0x80,  param_2 < 0x81)) || (uVar2 = 0x100,  param_2 < 0x101)) ||\n           (uVar2 = 0x200,  param_2 < 0x201)) {\n            puVar1 = fcn.0040c0a4();\n            puVar1[2] = uVar2;\n        }\n        else {\n            puVar1 = fcn.00434ea1(param_2 + 0xd);\n            puVar1[2] = param_2;\n        }\n        *puVar1 = 1;\n        *(puVar1 + param_2 + 0xc) = 0;\n        puVar1[1] = param_2;\n        *param_1 = puVar1 + 3;\n    }\n    return;\n}\n",
        "token_count": 281
    },
    "00434707": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434707(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*param_1 + -0xc != *0x45b940) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(*param_1 + -0xc);\n        if (iVar1 < 1) {\n            fcn.004346bf();\n        }\n        *param_1 = *0x45b93c;\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "004347d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004347d0(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*param_1 + -0xc != *0x45b940) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(*param_1 + -0xc);\n        if (iVar1 < 1) {\n            fcn.004346bf();\n        }\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "004347fa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004347fa(uint *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t *in_ECX;\n    \n    if (arg_14h + arg_ch == 0) {\n        *arg_8h = *0x45b93c;\n    }\n    else {\n        fcn.0043463d(arg_14h + arg_ch);\n        fcn.0040d130(*arg_8h, *in_ECX + arg_10h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 134
    },
    "004348dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004348dc(int32_t *param_1, int32_t param_2)\n\n{\n    fcn.004347a7(param_2);\n    fcn.0040d130(*param_1, param_2, param_2);\n    *(*param_1 + -8) = param_2;\n    *(*param_1 + param_2) = 0;\n    return;\n}\n",
        "token_count": 92
    },
    "00434980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00434980(uint *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_2 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.0040d465(param_2);\n    }\n    fcn.004347a7(iVar1 * 2);\n    fcn.00434dc3(*param_1, param_2, iVar1 * 2 + 1);\n    fcn.00434c4f(0xffffffff);\n    return param_1;\n}\n",
        "token_count": 135
    },
    "004349c1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004349c1(int32_t *param_1, int32_t param_2, uint param_3, int32_t param_4)\n\n{\n    if (param_2 + param_4 != 0) {\n        fcn.0043463d(param_2 + param_4);\n        fcn.0040d130(*param_1, param_2, param_2);\n        fcn.0040d130(*param_1 + param_2, param_4, param_4);\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "00434cff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00434cff(int32_t *param_1, uint8_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    \n    if ((param_3 < *(*param_1 + -8)) && (iVar1 = fcn.0040d482(*param_1 + param_3, param_2),  iVar1 != 0)) {\n        return iVar1 - *param_1;\n    }\n    return -1;\n}\n",
        "token_count": 110
    },
    "004351ca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_34h\n\nuint __cdecl\nfcn.004351ca(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint lpTemplate;\n    uint var_ch_2;\n    uint hInstance;\n    uint var_10h;\n    uint var_40h;\n    uint var_34h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint hWnd;\n    uint hMem;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    *(unaff_EBP + -0x10) = &stack0xffffffc0;\n    *(unaff_EBP + -0x24) = extraout_ECX;\n    if (*(unaff_EBP + 0x10) == 0) {\n        iVar2 = fcn.00447f81();\n        *(unaff_EBP + 0x10) = *(iVar2 + 8);\n    }\n    iVar2 = fcn.00447f81();\n    piVar1 = *(iVar2 + 0x1038);\n    *(unaff_EBP + -0x28) = piVar1;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -4) = 0;\n    fcn.00433575(0x10);\n    fcn.00433575(0x3c000);\n    if (piVar1 == NULL) {\ncode_r0x00435247:\n        if (*(unaff_EBP + 8) != 0) {\n            *(unaff_EBP + -0x1c) = *0x45b93c;\n            *(unaff_EBP + -4) = 1;\n            *(unaff_EBP + -0x20) = 0;\n            iVar2 = fcn.00436fed(*(unaff_EBP + 8), unaff_EBP + -0x1c, unaff_EBP + -0x20);\n            if (iVar2 == 0) {\ncode_r0x004352d2:\n                fcn.00436d7b(*(unaff_EBP + 8));\n                *(unaff_EBP + -4) = 2;\n                fcn.004371a4(*(unaff_EBP + -0x20));\n                uVar3 = fcn.00436eae();\n                *(unaff_EBP + -0x14) = uVar3;\n                *(unaff_EBP + -4) = 1;\n                fcn.00436e4b();\n                if (*(unaff_EBP + -0x14) != 0) {\n                    uVar3 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*(unaff_EBP + -0x14));\n                    *(unaff_EBP + 8) = uVar3;\n                }\n            }\n            else {\n                iVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x2a);\n                if (iVar2 != 0) {\n                    iVar2 = fcn.0040c8bd(*(unaff_EBP + -0x1c), \"MS Shell Dlg\");\n                    if (iVar2 != 0) {\n                        iVar2 = fcn.0040c8bd(*(unaff_EBP + -0x1c), 0x451dfc);\n                        if (iVar2 != 0) {\n                            iVar2 = fcn.0040c8bd(*(unaff_EBP + -0x1c), \"Helv\");\n                            if (iVar2 != 0) goto code_r0x00435314;\n                        }\n                    }\n                    if (*(unaff_EBP + -0x20) == 8) {\n                        *(unaff_EBP + -0x20) = 0;\n                    }\n                    goto code_r0x004352d2;\n                }\n            }\ncode_r0x00435314:\n            extraout_ECX[0xb] = -1;\n            extraout_ECX[9] = extraout_ECX[9] | 0x10;\n            fcn.00430d91(extraout_ECX);\n            if (*(unaff_EBP + 0xc) == 0) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = *(*(unaff_EBP + 0xc) + 0x1c);\n            }\n            uVar3 = (*_sym.imp.USER32.dll_CreateDialogIndirectParamA)\n                              (*(unaff_EBP + 0x10), *(unaff_EBP + 8), uVar3, 0x434ed5, 0);\n            *(unaff_EBP + -0x18) = uVar3;\n            *(unaff_EBP + -4) = 0;\n            fcn.004347d0();\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (piVar1 != NULL) {\n                (**(*piVar1 + 0x14))(unaff_EBP + -0x34);\n                if (*(unaff_EBP + -0x18) != 0) {\n                    (**(*extraout_ECX + 0xb4))(0);\n                }\n            }\n            iVar2 = fcn.00430ddd();\n            if (iVar2 == 0) {\n                (**(*extraout_ECX + 0xa4))();\n            }\n            if ((*(unaff_EBP + -0x18) != 0) && ((*(extraout_ECX + 9) & 0x10) == 0)) {\n                (*_sym.imp.USER32.dll_DestroyWindow)(*(unaff_EBP + -0x18));\n                *(unaff_EBP + -0x18) = 0;\n            }\n            if (*(unaff_EBP + -0x14) != 0) {\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*(unaff_EBP + -0x14));\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(*(unaff_EBP + -0x14));\n            }\n            if ((*(unaff_EBP + -0x18) != 0) || ((*(extraout_ECX + 9) & 0x10) == 0)) {\n                uVar3 = 1;\n                goto code_r0x004353e6;\n            }\n        }\n    }\n    else {\n        iVar2 = (**(*extraout_ECX + 0xb4))(unaff_EBP + -0x34);\n        if (iVar2 != 0) {\n            uVar3 = (**(*piVar1 + 0x10))(unaff_EBP + -0x34, *(unaff_EBP + 8));\n            *(unaff_EBP + 8) = uVar3;\n            goto code_r0x00435247;\n        }\n    }\n    uVar3 = 0;\ncode_r0x004353e6:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar3;\n}\n",
        "token_count": 1721
    },
    "00435446": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.00435446(code **param_1, code *param_2, code *param_3)\n\n{\n    fcn.004304bd();\n    *param_1 = vtable.CDialog.0;\n    fcn.0040cfc0(param_1 + 0xf, 0, 0x20);\n    param_1[0x14] = param_3;\n    param_1[0xf] = param_2;\n    param_1[0x10] = param_2 & 0xffff;\n    return param_1;\n}\n",
        "token_count": 129
    },
    "004359d1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004359d1(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (arg_ch == 0) {\ncode_r0x00435a25:\n        uVar2 = 0;\n    }\n    else {\n        if (arg_10h != 0) {\n            do {\n                arg_10h = arg_10h + -1;\n                arg_ch = fcn.0040d482(arg_ch, arg_14h);\n                if (arg_ch == 0) {\n                    fcn.0043475b();\n                    goto code_r0x00435a25;\n                }\n                arg_ch = arg_ch + 1;\n            } while (arg_10h != 0);\n        }\n        iVar1 = fcn.0040d482(arg_ch, arg_14h);\n        if (iVar1 == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_ch);\n        }\n        else {\n            iVar1 = iVar1 - arg_ch;\n        }\n        uVar2 = fcn.00434c77(iVar1, arg_ch, iVar1);\n        fcn.0040d130(uVar2, iVar1, arg_ch);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 310
    },
    "00435ad0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00435ad0(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint unaff_retaddr;\n    \n    iVar1 = fcn.00435a49(0);\n    uVar2 = 0;\n    if (iVar1 != 0) {\n        uVar2 = fcn.0042ed74(unaff_retaddr);\n    }\n    return uVar2;\n}\n",
        "token_count": 91
    },
    "00436079": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00436079(uint32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    int32_t hHandle;\n    int32_t hEvent;\n    int32_t var_4h;\n    \n    fcn.0040cfc0(&var_1ch, 0, 0x1c);\n    var_1ch = fcn.00447cf1();\n    pcVar1 = _sym.imp.KERNEL32.dll_CreateEventA;\n    hHandle = (*_sym.imp.KERNEL32.dll_CreateEventA)(0, 1, 0, 0);\n    hEvent = (*pcVar1)(0, 1, 0, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n    var_14h = arg_8h;\n    if (hHandle != 0) {\n        if (hEvent != 0) {\n            iVar2 = fcn.0040e32d(arg_10h, arg_ch, 0x435d4e, &var_1ch, arg_8h | 4, in_ECX + 0x2c);\n            *(in_ECX + 0x28) = iVar2;\n            if (iVar2 == 0) {\n                return 0;\n            }\n            (*_sym.imp.KERNEL32.dll_ResumeThread)(iVar2);\n            (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hHandle, 0xffffffff);\n            (*pcVar1)(hHandle);\n            if ((arg_8h & 4) != 0) {\n                (*_sym.imp.KERNEL32.dll_SuspendThread)(*(in_ECX + 0x28));\n            }\n            if (var_4h == 0) {\n                (*_sym.imp.KERNEL32.dll_SetEvent)(hEvent);\n                return 1;\n            }\n            (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*(in_ECX + 0x28), 0xffffffff);\n            (*pcVar1)(*(in_ECX + 0x28));\n            *(in_ECX + 0x28) = 0;\n            goto code_r0x0043614d;\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hHandle);\n    }\n    if (hEvent == 0) {\n        return 0;\n    }\ncode_r0x0043614d:\n    (*pcVar1)(hEvent);\n    return 0;\n}\n",
        "token_count": 582
    },
    "0043624c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __thiscall fcn.0043624c(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBX;\n    int32_t arg_8h;\n    \n    if (param_2 < 1) {\n        iVar3 = *(param_1 + 0x1c);\n        if ((iVar3 != 0) && (*(iVar3 + 0x1c) != 0)) {\n            iVar1 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar3 + 0x1c));\n            if (iVar1 != 0) {\n                fcn.0043071d(iVar3, *(iVar3 + 0x1c), 0x363, 1, 0);\n                fcn.00432228(*(iVar3 + 0x1c), 0x363, 1, 0, 1, 1);\n            }\n        }\n        fcn.00447f81();\n        arg_8h = 0x447ff3;\n        iVar1 = fcn.00448e31(0x447ff3);\n        for (iVar1 = *(iVar1 + 8); iVar1 != 0; iVar1 = *(iVar1 + 0x54)) {\n            if ((*(iVar1 + 0x1c) != 0) && (iVar1 != iVar3)) {\n                if (*(iVar1 + 0x88) == 0) {\n                    fcn.00433e1f(0, arg_8h);\n                }\n                iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar1 + 0x1c));\n                if ((iVar2 != 0) || (-1 < *(iVar1 + 0x88))) {\n                    fcn.0043071d(iVar1, *(iVar1 + 0x1c), 0x363, 1, 0);\n                    arg_8h = *(iVar1 + 0x1c);\n                    fcn.00432228(arg_8h, 0x363, 1, 0, 1, 1);\n                }\n                iVar2 = *(iVar1 + 0x88);\n                if (0 < iVar2) {\n                    fcn.00433e1f();\n                    arg_8h = iVar2;\n                }\n                *(iVar1 + 0x88) = 0xffffffff;\n            }\n        }\n    }\n    else {\n        fcn.00447f81();\n        iVar3 = fcn.00448e31(0x447ff3);\n        if (*(iVar3 + 0x10) == 0) {\n            fcn.004368d9();\n            fcn.004368e2(1);\n        }\n    }\n    return unaff_EBX < 0;\n}\n",
        "token_count": 630
    },
    "00436363": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00436363(int32_t *param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint arg_10h;\n    uint arg_14h;\n    \n    puVar1 = (**(*param_1 + 0x28))();\n    do {\n        if (puVar1 == NULL) {\n            return 0;\n        }\n        if (*(param_2 + 4) < 0xc000) {\n            iVar2 = fcn.0043184a(puVar1[1], *(param_2 + 4), 0, 0);\n            if (iVar2 != 0) {\ncode_r0x004363c2:\n                (**(iVar2 + 0x14))(*(param_2 + 8), *(param_2 + 0xc));\n                return 1;\n            }\n        }\n        else {\n            iVar2 = puVar1[1];\n            arg_14h = 0;\n            arg_10h = 0;\n            while (iVar2 = fcn.0043184a(iVar2, 0xc000, arg_10h, arg_14h),  iVar2 != 0) {\n                if (**(iVar2 + 0x10) == *(param_2 + 4)) goto code_r0x004363c2;\n                iVar2 = iVar2 + 0x18;\n            }\n        }\n        puVar1 = *puVar1;\n    } while( true );\n}\n",
        "token_count": 333
    },
    "00436edf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00436edf(int32_t param_1)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    \n    if (*(param_1 + 2) == -1) {\n        piVar1 = param_1 + 0x1a;\n    }\n    else {\n        piVar1 = param_1 + 0x12;\n    }\n    iVar2 = *piVar1;\n    if (iVar2 == -1) {\n        piVar1 = piVar1 + 2;\n    }\n    else {\n        while (piVar1 = piVar1 + 1,  iVar2 != 0) {\n            iVar2 = *piVar1;\n        }\n    }\n    iVar2 = *piVar1;\n    if (iVar2 == -1) {\n        piVar1 = piVar1 + 2;\n    }\n    else {\n        while (piVar1 = piVar1 + 1,  iVar2 != 0) {\n            iVar2 = *piVar1;\n        }\n    }\n    do {\n        iVar2 = *piVar1;\n        piVar1 = piVar1 + 1;\n    } while (iVar2 != 0);\n    return;\n}\n",
        "token_count": 265
    },
    "0043705c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0043705c(uint *param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*param_1);\n    uVar1 = fcn.00436fed(uVar1, unaff_retaddr, param_2);\n    (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*param_1);\n    return uVar1;\n}\n",
        "token_count": 105
    },
    "004373e6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\ncode ** __cdecl fcn.004373e6(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    code **ppcVar3;\n    code *pcVar4;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    pcVar1 = *0x45b93c;\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    extraout_ECX[3] = pcVar1;\n    pcVar1 = *0x45b93c;\n    *(unaff_EBP + -4) = 0;\n    extraout_ECX[4] = pcVar1;\n    extraout_ECX[7] = *0x45b93c;\n    pcVar1 = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -4) = 2;\n    *extraout_ECX = vtable.CRecentFileList.0;\n    ppcVar3 = fcn.00434ea1(pcVar1 * 4 + 4);\n    *(unaff_EBP + -0x14) = ppcVar3;\n    *(unaff_EBP + -4) = 3;\n    if (ppcVar3 == NULL) {\n        pcVar4 = NULL;\n    }\n    else {\n        *ppcVar3 = pcVar1;\n        *(unaff_EBP + 0x14) = ppcVar3 + 1;\n        fcn.0040e926(ppcVar3 + 1, 4, pcVar1, 0x40c15f);\n        pcVar4 = *(unaff_EBP + 0x14);\n    }\n    uVar2 = *(unaff_EBP + 0xc);\n    extraout_ECX[2] = pcVar4;\n    pcVar4 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 2;\n    extraout_ECX[1] = pcVar1;\n    extraout_ECX[5] = pcVar4;\n    fcn.00434959(uVar2);\n    fcn.00434959(*(unaff_EBP + 0x10));\n    uVar2 = *(unaff_EBP + -0xc);\n    extraout_ECX[6] = *(unaff_EBP + 0x18);\n    *in_FS_OFFSET = uVar2;\n    return extraout_ECX;\n}\n",
        "token_count": 645
    },
    "00438083": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00438083(uint arg_8h, uint *arg_ch)\n\n{\n    uint var_104h;\n    uint var_4h;\n    \n    var_4h = 0;\n    (*_sym.imp.USER32.dll_wsprintfA)\n              (&var_104h, \"{%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X}\", *arg_ch, *(arg_ch + 1), *(arg_ch + 6), \n               *(arg_ch + 2), *(arg_ch + 9), *(arg_ch + 10), *(arg_ch + 0xb), *(arg_ch + 3), *(arg_ch + 0xd), \n               *(arg_ch + 0xe), *(arg_ch + 0xf));\n    fcn.0043483e(&var_104h);\n    return arg_8h;\n}\n",
        "token_count": 204
    },
    "00438390": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00438390(void)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char cVar3;\n    uint unaff_retaddr;\n    \n    pcVar1 = fcn.00434c00(0x104);\n    fcn.0040cfc0(pcVar1, 0, 0x104);\n    (*_sym.imp.KERNEL32.dll_lstrcpynA)(pcVar1, unaff_retaddr, 0x104);\n    cVar3 = *pcVar1;\n    pcVar2 = pcVar1;\n    while ((cVar3 != '\\0' && (((cVar3 != '\\\\' && (cVar3 != '/')) || ((pcVar2[1] != '\\\\' && (pcVar2[1] != '/'))))))) {\n        pcVar2 = fcn.0040d6a2(pcVar2);\n        cVar3 = *pcVar2;\n    }\n    if (*pcVar2 == '\\0') {\n        cVar3 = *pcVar1;\n        while (((cVar3 != '\\0' && (cVar3 != '\\\\')) && (cVar3 != '/'))) {\n            pcVar1 = fcn.0040d6a2(pcVar1);\n            cVar3 = *pcVar1;\n        }\n    }\n    else {\n        for (pcVar1 = pcVar2 + 2; ((cVar3 = *pcVar1,  cVar3 != '\\0' && (cVar3 != '\\\\')) && (cVar3 != '/'));\n            pcVar1 = fcn.0040d6a2(pcVar1)) {\n        }\n        if (*pcVar1 == '\\0') goto code_r0x00438411;\n        do {\n            pcVar1 = fcn.0040d6a2(pcVar1);\ncode_r0x00438411:\n            cVar3 = *pcVar1;\n        } while (((cVar3 != '\\0') && (cVar3 != '\\\\')) && (cVar3 != '/'));\n    }\n    if (*pcVar1 != '\\0') {\n        pcVar1[1] = '\\0';\n    }\n    fcn.00434c4f(0xffffffff);\n    return;\n}\n",
        "token_count": 484
    },
    "00438888": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00438888(uint arg_8h, uint lpFileTime)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ushort *puVar3;\n    uint uVar4;\n    uint lpSystemTime;\n    uint var_12h;\n    ushort var_eh;\n    ushort var_ch;\n    uint var_ah;\n    \n    iVar2 = fcn.0042a209(0);\n    lpSystemTime._0_2_ = *(iVar2 + 0x14) + 0x76c;\n    iVar2 = fcn.0042a209(0);\n    lpSystemTime._2_2_ = *(iVar2 + 0x10) + 1;\n    iVar2 = fcn.0042a209(0);\n    var_12h._0_2_ = *(iVar2 + 0xc);\n    iVar2 = fcn.0042a209(0);\n    var_12h._2_2_ = *(iVar2 + 8);\n    iVar2 = fcn.0042a209(0);\n    var_eh = *(iVar2 + 4);\n    puVar3 = fcn.0042a209(0);\n    var_ch = *puVar3;\n    var_ah._0_2_ = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_SystemTimeToFileTime)(&lpSystemTime, &var_ah + 2);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar2 == 0) {\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)(0);\n        fcn.00438a88(uVar4);\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_LocalFileTimeToFileTime)(&var_ah + 2, lpFileTime);\n    if (iVar2 == 0) {\n        uVar4 = (*pcVar1)(0);\n        fcn.00438a88(uVar4);\n    }\n    return;\n}\n",
        "token_count": 452
    },
    "00438c2e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00438c2e(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (0x10b < param_1) {\n        if (param_1 == 0x3e3) {\n            return 10;\n        }\n        if (param_1 == 0x3e4) {\n            return 10;\n        }\n        if (param_1 == 0x3e5) {\n            return 10;\n        }\n        if (param_1 == 999) {\n            return 5;\n        }\n        return 1;\n    }\n    if (param_1 == 0x10b) {\n        return 3;\n    }\n    if (param_1 < 0x3f) {\n        if (param_1 == 0x3e) {\n            return 8;\n        }\n        if (param_1 < 0x1a) {\n    // switch table (25 cases) at 0x438e24\n            switch(param_1) {\n            case 0:\n                return 0;\n            case 1:\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 0xd:\n            case 0xe:\n                goto code_r0x00438d30;\n            case 2:\n            case 6:\n            case 0x12:\n                goto code_r0x00438d30;\n            case 3:\n            case 0xf:\n            case 0x11:\n                goto code_r0x00438d30;\n            case 4:\n                return 4;\n            case 5:\n            case 0xc:\n            case 0x13:\ncode_r0x00438d30:\n                return 5;\n            case 0xb:\ncode_r0x00438d30:\n                return 6;\n            case 0x10:\n                return 7;\n            case 0x14:\n            case 0x15:\n            case 0x16:\n            case 0x17:\ncode_r0x00438d30:\n                return 10;\n            default:\n                goto code_r0x00438d30;\n            }\n        }\n        if (0x27 < param_1) {\n    // switch table (9 cases) at 0x438e88\n            switch(param_1) {\n            case 0x34:\n            case 0x35:\n            case 0x37:\n                goto code_r0x00438d30;\n            case 0x36:\n            case 0x3a:\n                goto code_r0x00438d30;\n            default:\n                return 1;\n            case 0x39:\n            case 0x3b:\n                goto code_r0x00438d30;\n            case 0x3c:\n                goto code_r0x00438d30;\n            }\n        }\n        if (param_1 == 0x27) {\n            return 0xd;\n        }\n        if (0x20 < param_1) {\n            if (param_1 == 0x21) {\n                return 0xc;\n            }\n            if (param_1 == 0x22) {\n                return 3;\n            }\n            if (param_1 == 0x24) {\n                return 4;\n            }\n            if (param_1 == 0x26) {\n                return 0xe;\n            }\n            return 1;\n        }\n        if (param_1 == 0x20) {\n            return 0xb;\n        }\n        if (param_1 == 0x1a) {\n            return 6;\n        }\n        if (param_1 == 0x1b) {\n            return 9;\n        }\n        iVar1 = param_1 - 0x1d;\n        if (iVar1 == 0) {\n            return 5;\n        }\ncode_r0x00438ca6:\n        if (iVar1 == 1) {\ncode_r0x00438d30:\n            return 9;\n        }\n    }\n    else {\n        if (param_1 < 0x6c) {\n            if (param_1 == 0x6b) {\ncode_r0x00438d30:\n                return 2;\n            }\n            if (0x47 < param_1) {\n                if (param_1 == 0x50) {\n                    return 5;\n                }\n                if (param_1 == 0x52) {\n                    return 5;\n                }\n                if (param_1 == 0x55) {\n                    return 3;\n                }\n                if (param_1 != 0x56) {\n                    if (param_1 == 0x58) {\n                        return 10;\n                    }\n                    return 1;\n                }\n                return 5;\n            }\n            if (param_1 == 0x47) {\n                return 5;\n            }\n            if (param_1 == 0x40) {\n                return 5;\n            }\n            if (param_1 == 0x41) {\n                return 5;\n            }\n            if (param_1 == 0x42) {\n                return 6;\n            }\n            if (param_1 == 0x43) {\n                return 3;\n            }\n            iVar1 = param_1 - 0x44;\n            if (iVar1 == 0) {\n                return 4;\n            }\n        }\n        else {\n            if (param_1 < 0x91) {\n                if (param_1 == 0x90) {\n                    return 3;\n                }\n                if (param_1 < 0x76) {\n                    if (param_1 == 0x75) {\n                        return 10;\n                    }\n                    if (param_1 == 0x6c) {\n                        return 0xc;\n                    }\n                    if (param_1 == 0x6f) {\n                        return 3;\n                    }\n                    if (param_1 == 0x70) {\n                        return 0xd;\n                    }\n                    if (param_1 == 0x71) {\n                        return 4;\n                    }\n                    if (param_1 != 0x72) {\n                        return 1;\n                    }\n                    return 6;\n                }\n                if (param_1 == 0x7b) {\n                    return 3;\n                }\n                if (param_1 == 0x7c) {\n                    return 3;\n                }\n                if (param_1 == 0x7d) {\n                    return 3;\n                }\n                iVar1 = param_1 - 0x83;\n                if (iVar1 == 0) {\n                    return 9;\n                }\n                goto code_r0x00438ca6;\n            }\n            if (param_1 < 0xb7) {\n                if (param_1 == 0xb6) {\n                    return 6;\n                }\n                if (param_1 == 0x91) {\n                    return 7;\n                }\n                if (param_1 == 0x9a) {\n                    return 3;\n                }\n                if (param_1 != 0xa1) {\n                    if (param_1 == 0xa7) {\n                        return 0xc;\n                    }\n                    if (param_1 == 0xaa) {\n                        return 5;\n                    }\n                    return 1;\n                }\n                return 3;\n            }\n            if (param_1 == 0xb7) {\n                return 5;\n            }\n            if (param_1 == 0xbf) {\n                return 6;\n            }\n            if (param_1 == 0xc1) {\n                return 6;\n            }\n            iVar1 = param_1 - 0xce;\n            if (iVar1 == 0) {\n                return 3;\n            }\n        }\n        if (iVar1 == 2) {\ncode_r0x00438d30:\n            return 3;\n        }\n    }\ncode_r0x00438d30:\n    return 1;\n}\n",
        "token_count": 1733
    },
    "0043c387": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043c387(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_14h;\n    uint var_10h;\n    \n    fcn.0040cfc0(&var_14h, 0, 0x14);\n    var_10h = arg_8h;\n    var_14h = 0x14;\n    (*_sym.imp.GDI32.dll_StartDocA)(*(in_ECX + 4), &var_14h);\n    return;\n}\n",
        "token_count": 117
    },
    "0043e09a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043e09a(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uint uVar3;\n    uint var_100h;\n    \n    iVar1 = fcn.004359aa(arg_8h, &var_100h, 0x100);\n    if (iVar1 != 0) {\n        puVar2 = fcn.0040d482(&var_100h, 10);\n        if (puVar2 != NULL) {\n            uVar3 = fcn.0040ddf5(puVar2 + 1);\n            *arg_ch = uVar3;\n            uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(uVar3, *0x45ffd4, 0x48);\n            *arg_ch = uVar3;\n            *puVar2 = 0;\n        }\n        (*_sym.imp.KERNEL32.dll_lstrcpynA)(arg_ch + 7, &var_100h, 0x20);\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 250
    },
    "0044126b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0044126b(int32_t param_1)\n\n{\n    if ((param_1 < 0) || (0x15 < param_1)) {\n        param_1 = -1;\n    }\n    else {\n        param_1 = param_1 + 0x40000;\n    }\n    return param_1;\n}\n",
        "token_count": 77
    },
    "0044360f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044360f(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t Y, uint crColor)\n\n{\n    int32_t in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.GDI32.dll_SetBkColor)(*(in_ECX + 4), crColor);\n    var_10h = arg_8h;\n    var_8h = arg_8h + arg_10h;\n    var_ch = arg_ch;\n    var_4h = arg_ch + Y;\n    (*_sym.imp.GDI32.dll_ExtTextOutA)(*(in_ECX + 4), 0, 0, 2, &var_10h, 0, 0, 0);\n    return;\n}\n",
        "token_count": 207
    },
    "00443686": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00443686(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint var_4h;\n    \n    fcn.0044360f(arg_8h, arg_ch, arg_10h + -1, 1, arg_18h);\n    fcn.0044360f(arg_8h, arg_ch, 1, arg_14h + -1, arg_18h);\n    fcn.0044360f(arg_8h + arg_10h, arg_ch, 0xffffffff, arg_14h, arg_1ch);\n    fcn.0044360f(arg_8h, arg_ch + arg_14h, arg_10h, 0xffffffff, arg_1ch);\n    return;\n}\n",
        "token_count": 199
    },
    "004436f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004436f0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_3ch;\n    uint var_25h;\n    uint var_20h;\n    \n    fcn.0040cfc0(&var_3ch, 0, 0x3c);\n    var_3ch = arg_8h;\n    var_25h._0_1_ = 1;\n    (*_sym.imp.KERNEL32.dll_lstrcpynA)(&var_20h, arg_ch, 0x20);\n    fcn.00443735(&var_3ch, arg_10h);\n    return;\n}\n",
        "token_count": 160
    },
    "00443b24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00443b24(uint param_1)\n\n{\n    fcn.00447f81();\n    fcn.00448e31(0x447ff3);\n    fcn.00448965(param_1);\n    return;\n}\n",
        "token_count": 56
    },
    "00443b48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00443b48(uint param_1)\n\n{\n    fcn.00447f81();\n    fcn.00448e31(0x447ff3);\n    fcn.00448978(param_1);\n    return;\n}\n",
        "token_count": 56
    },
    "00447fa7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00447fa7(void)\n\n{\n    fcn.00447f81();\n    fcn.00448e31(0x447ff3);\n    return;\n}\n",
        "token_count": 40
    },
    "00449437": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00449437(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    fcn.0040df49(*(param_1 + 0x7c));\n    uVar1 = fcn.0040e1c4(param_2);\n    *(param_1 + 0x7c) = uVar1;\n    fcn.0040df49(*(param_1 + 0x90));\n    uVar1 = fcn.0040e1c4(*(param_1 + 0x78));\n    *(param_1 + 0x90) = uVar1;\n    return;\n}\n",
        "token_count": 147
    },
    "0044b2f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0044b2f8(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable._AFX_WIN_STATE.0;\n    *(unaff_EBP + -4) = 0;\n    fcn.0043e254(extraout_ECX + 1, extraout_ECX);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 172
    },
    "0044b3a1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "set application hook"
        ],
        "decompiled_code": "\nvoid fcn.0044b3a1(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    char *arg_8h;\n    \n    iVar2 = fcn.00447f81();\n    fcn.0044939a(1);\n    arg_8h = iVar2 + 0x34;\n    while (*arg_8h != '\\0') {\n        puVar3 = fcn.0040d482(arg_8h, 10);\n        *puVar3 = 0;\n        iVar4 = fcn.00447f81();\n        (*_sym.imp.USER32.dll_UnregisterClassA)(arg_8h, *(iVar4 + 8));\n        arg_8h = puVar3 + 1;\n    }\n    *(iVar2 + 0x34) = '\\0';\n    fcn.0044940a(1);\n    iVar2 = fcn.00447f81();\n    if ((*(iVar2 + 4) != 0) && (pcVar1 = *(*(iVar2 + 4) + 0x54),  pcVar1 != NULL)) {\n        (*pcVar1)(1, 0);\n    }\n    iVar2 = fcn.00447cf1();\n    if (*(iVar2 + 0xcc) != NULL) {\n        iVar4 = (**(**(iVar2 + 0xcc) + 0xb8))();\n        if (iVar4 != 0) {\n            *(iVar2 + 0xcc) = 0;\n        }\n    }\n    iVar4 = fcn.00447f81();\n    pcVar1 = _sym.imp.USER32.dll_UnhookWindowsHookEx;\n    if (*(iVar4 + 0x14) == '\\0') {\n        if (*(iVar2 + 0x30) != 0) {\n            (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(*(iVar2 + 0x30));\n            *(iVar2 + 0x30) = 0;\n        }\n        if (*(iVar2 + 0x2c) != 0) {\n            (*pcVar1)(*(iVar2 + 0x2c));\n            *(iVar2 + 0x2c) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 503
    },
    "00432442": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00432442(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_24h;\n    int32_t var_14h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.00432335(arg_8h, &var_8h, &var_4h);\n    iVar1 = fcn.004323f5(arg_8h, &var_24h, 2);\n    if (iVar1 != 0) {\n        var_4h = var_4h - (-(var_14h != 1) & var_14h - 1U);\n    }\n    return var_4h;\n}\n",
        "token_count": 159
    },
    "0043670b": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_14h\n\nuint fcn.0043670b(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    uVar2 = 0;\n    iVar1 = *(extraout_ECX + 0xc);\n    *(unaff_EBP + -0x10) = &var_14h;\n    if (iVar1 != 0) {\n        *(unaff_EBP + -0x14) = 0;\n        *(unaff_EBP + -4) = 0;\n        uVar2 = (**(extraout_ECX + 0xc))();\n        *(unaff_EBP + -0x14) = uVar2;\n        uVar2 = *(unaff_EBP + -0x14);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 272
    },
    "0043d9c0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.0043d9c0(uint arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_44h;\n    uint var_4h;\n    \n    fcn.0040bedd(&var_4h);\n    *arg_ch = var_4h;\n    fcn.0040bedd(&var_4h + 2);\n    if (var_4h._2_2_ < 0x40) {\n        uVar1 = fcn.0043dbf5(&var_44h, var_4h._2_2_);\n        if (uVar1 == var_4h._2_2_) {\n            *(&var_44h + var_4h._2_2_) = 0;\n            iVar2 = fcn.00447f81();\n            fcn.0044939a(0);\n            for (puVar3 = *(iVar2 + 0x1c); puVar3 != NULL; puVar3 = puVar3[5]) {\n                iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(&var_44h, *puVar3);\n                if (iVar2 == 0) goto code_r0x0043da39;\n            }\n            puVar3 = NULL;\ncode_r0x0043da39:\n            fcn.0044940a(0);\n            return puVar3;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 348
    },
    "0043e1fc": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get graphical window text"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043e1fc(uint hWnd, uint lpString2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint lpString1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString2);\n    if (((uVar1 < 0x101) && (uVar2 = (*_sym.imp.USER32.dll_GetWindowTextA)(hWnd, &lpString1, 0x100),  uVar2 == uVar1))\n       && (iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(&lpString1, lpString2),  iVar3 == 0)) {\n        return;\n    }\n    (*_sym.imp.USER32.dll_SetWindowTextA)(hWnd, lpString2);\n    return;\n}\n",
        "token_count": 186
    },
    "004410bc": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004410bc(uint Point, uint arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t in_ECX;\n    int32_t iVar8;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar8 = 0;\n    if (*(in_ECX + 0x50) == 0) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.USER32.dll_GetCapture)();\n    uVar2 = (*_sym.imp.USER32.dll_WindowFromPoint)(Point, arg_ch);\n    iVar3 = fcn.004308de(uVar2);\n    if (iVar3 == 0) {\n        iVar3 = 0;\n    }\n    else {\n        iVar3 = *(iVar3 + 0x1c);\n    }\n    iVar4 = fcn.00432011();\n    uVar2 = (*_sym.imp.USER32.dll_GetActiveWindow)();\n    fcn.004308de(uVar2);\n    iVar5 = fcn.00432011();\n    var_ch = 0;\n    iVar6 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    if (iVar3 != 0) {\n        iVar8 = (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(iVar3, 0);\n    }\n    if ((iVar5 == 0) || (iVar7 = (*_sym.imp.USER32.dll_GetDesktopWindow)(),  iVar3 == iVar7)) {\n        uVar2 = *0x45fff8;\n        if (iVar1 == *(in_ECX + 0x1c)) {\n            (*_sym.imp.USER32.dll_ReleaseCapture)();\n            uVar2 = *0x45fff8;\n        }\ncode_r0x004411b7:\n        (*_sym.imp.USER32.dll_SetCursor)(uVar2);\n        goto code_r0x004411bd;\n    }\n    if (iVar3 == 0) {\ncode_r0x00441186:\n        if (iVar6 != iVar8) goto code_r0x0044118b;\n    }\n    else {\n        if (iVar6 == iVar8) {\n            uVar2 = *(in_ECX + 0x1c);\n            iVar7 = fcn.00443df0();\n            if (iVar7 != 0) {\n                var_ch = 1;\n                if (iVar5 != iVar4) {\n                    iVar3 = 0;\n                    goto code_r0x004411bd;\n                }\n                uVar2 = *0x45fffc;\n                if (iVar1 != *(in_ECX + 0x1c)) {\n                    (*_sym.imp.USER32.dll_SetCapture)(*(in_ECX + 0x1c));\n                    uVar2 = *0x45fffc;\n                }\n                goto code_r0x004411b7;\n            }\n            goto code_r0x00441186;\n        }\ncode_r0x0044118b:\n        iVar3 = 0;\n    }\n    if (iVar1 == *(in_ECX + 0x1c)) {\n        (*_sym.imp.USER32.dll_ReleaseCapture)(uVar2);\n    }\ncode_r0x004411bd:\n    if (arg_10h != NULL) {\n        *arg_10h = var_ch;\n    }\n    return iVar3;\n}\n",
        "token_count": 774
    },
    "00443735": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00443735(uint *arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t var_50h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetDC)(0);\n    }\n    else {\n        uVar2 = *(arg_ch + 8);\n    }\n    puVar4 = &var_50h;\n    for (iVar3 = 0xf; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = *arg_8h;\n        arg_8h = arg_8h + 1;\n        puVar4 = puVar4 + 1;\n    }\n    iVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar2, 0x5a);\n    pcVar1 = _sym.imp.GDI32.dll_DPtoLP;\n    var_10h = (iVar3 * var_50h) / 0x2d0;\n    (*_sym.imp.GDI32.dll_DPtoLP)(uVar2, &var_14h, 1);\n    var_ch = 0;\n    var_8h = 0;\n    (*pcVar1)(uVar2, &var_ch, 1);\n    var_50h = fcn.0040d071(var_10h - var_8h);\n    var_50h = -var_50h;\n    if (arg_ch == 0) {\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar2);\n    }\n    uVar2 = (*_sym.imp.GDI32.dll_CreateFontIndirectA)(&var_50h);\n    fcn.0043d59c(uVar2);\n    return;\n}\n",
        "token_count": 451
    },
    "0044426f": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0044426f(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar1 = fcn.0043670b();\n    if (piVar1 != NULL) {\n        var_14h = 0;\n        var_10h = 0;\n        var_ch = 0;\n        var_8h = 0;\n        iVar2 = (**(*piVar1 + 0x54))(0, 0, 0x50800000, &var_14h, var_4h, arg_ch, arg_8h);\n        if (iVar2 != 0) {\n            if (*0x460014 == 0) {\n                return piVar1;\n            }\n            uVar3 = fcn.00433c5e();\n            if ((uVar3 & 0x200) == 0) {\n                return piVar1;\n            }\n            fcn.00433ca9(0x200, 0, 0x20);\n            return piVar1;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 291
    },
    "00444a43": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444a43(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    uVar3 = (*_sym.imp.USER32.dll_SetActiveWindow)(*(in_ECX + 0x1c));\n    fcn.004308de(uVar3);\n    pcVar2 = _sym.imp.SHELL32.dll_DragQueryFileA;\n    uVar5 = 0;\n    var_4h = (*_sym.imp.SHELL32.dll_DragQueryFileA)(arg_8h, 0xffffffff, 0, 0);\n    iVar4 = fcn.00447f81();\n    piVar1 = *(iVar4 + 4);\n    if (var_4h != 0) {\n        do {\n            (*pcVar2)(arg_8h, uVar5, &var_108h, 0x104);\n            (**(*piVar1 + 0x7c))(&var_108h);\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < var_4h);\n    }\n    (*_sym.imp.SHELL32.dll_DragFinish)(arg_8h);\n    return;\n}\n",
        "token_count": 312
    },
    "004492d4": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nbool fcn.004492d4(void)\n\n{\n    uint uVar1;\n    uint32_t var_14h;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetOEMCP)(&var_14h);\n    (*_sym.imp.KERNEL32.dll_GetCPInfo)(uVar1);\n    return 1 < var_14h;\n}\n",
        "token_count": 80
    },
    "0042d864": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042d864(code **param_1, code *param_2)\n\n{\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    param_1[5] = NULL;\n    *param_1 = vtable.CPtrList.0;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 105
    },
    "0042ec00": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042ec00(code **param_1, code *param_2)\n\n{\n    param_1[1] = NULL;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    *param_1 = vtable.CMapPtrToPtr.0;\n    param_1[2] = 0x11;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 110
    },
    "0042eecd": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042eecd(code **param_1, code *param_2)\n\n{\n    param_1[1] = NULL;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    *param_1 = vtable.CMapStringToPtr.0;\n    param_1[2] = 0x11;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 110
    },
    "00433ff3": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00433ff3(int32_t param_1)\n\n{\n    *(param_1 + 4) = 1;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 1;\n    *(param_1 + 0x18) = 0;\n    return;\n}\n",
        "token_count": 108
    },
    "00434319": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434319(code **param_1)\n\n{\n    *param_1 = vtable.CCmdUI.0;\n    param_1[8] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    param_1[9] = NULL;\n    param_1[4] = NULL;\n    param_1[3] = NULL;\n    param_1[5] = NULL;\n    param_1[7] = NULL;\n    param_1[6] = NULL;\n    return;\n}\n",
        "token_count": 125
    },
    "00447d27": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00447d27(code **param_1, uchar param_2)\n\n{\n    param_1[7] = NULL;\n    param_1[8] = NULL;\n    param_1[9] = NULL;\n    param_1[10] = NULL;\n    param_1[0x40f] = NULL;\n    param_1[0x410] = NULL;\n    param_1[0x413] = 0xffffffff;\n    param_1[0x414] = NULL;\n    param_1[0x419] = NULL;\n    param_1[0x41a] = NULL;\n    *param_1 = vtable.AFX_MODULE_STATE.0;\n    param_1[10] = 0x1c;\n    param_1[8] = 0x14;\n    param_1[6] = NULL;\n    *(param_1 + 5) = param_2;\n    param_1[0xc] = 0x1;\n    param_1[0x410] = 0x18;\n    return;\n}\n",
        "token_count": 239
    },
    "004483b4": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.004483b4(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CCommandLineInfo.0;\n    *(unaff_EBP + -4) = 3;\n    fcn.004347d0();\n    *(unaff_EBP + -4) = 2;\n    fcn.004347d0();\n    *(unaff_EBP + -4) = 1;\n    fcn.004347d0();\n    *(unaff_EBP + -4) = 0;\n    fcn.004347d0();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 226
    },
    "0044883e": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint fcn.0044883e(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (*0x460014 == 0) {\n        iVar2 = fcn.00448ef3(0x4478e6);\n        if (*(iVar2 + 4) == 0) {\n            *(iVar2 + 0xc) = 0x41e0f0;\n            *(iVar2 + 0x10) = 0x41e160;\n            *(iVar2 + 0x14) = fcn.0041e220;\n            *(iVar2 + 0x18) = 0x41e3a0;\n            *(iVar2 + 0x1c) = 0x41e8e0;\n            *(iVar2 + 0x20) = 0x41e7d0;\n            *(iVar2 + 0x24) = fcn.0041ebe0;\n            *(iVar2 + 0x28) = 0x41e470;\n            *(iVar2 + 0x2c) = 0x41e5b0;\n            iVar3 = fcn.00447f81();\n            iVar3 = (**(iVar2 + 0xc))(*(iVar3 + 8));\n            if (iVar3 == 0) {\n                *(iVar2 + 0xc) = 0;\n                *(iVar2 + 0x10) = 0;\n                *(iVar2 + 0x14) = 0;\n                *(iVar2 + 0x18) = 0;\n                *(iVar2 + 0x1c) = 0;\n                *(iVar2 + 0x20) = 0;\n                *(iVar2 + 0x24) = 0;\n                *(iVar2 + 0x28) = 0;\n                *(iVar2 + 0x2c) = 0;\n            }\n            *(iVar2 + 4) = 1;\n        }\n        if (*(iVar2 + 0x14) == 0) {\n            uVar1 = 0;\n        }\n        else {\n            iVar3 = fcn.00447f81();\n            uVar1 = (**(iVar2 + 0x14))(*(iVar3 + 8));\n        }\n    }\n    else {\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 526
    },
    "00401041": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nuint8_t __thiscall fcn.00401041(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    if (*(param_1 + 0x22c) == 0) {\n        return 1;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*(param_1 + 0x22c), param_2);\n    return -(iVar1 != 0) & 7;\n}\n",
        "token_count": 106
    },
    "00401370": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nuint8_t __thiscall fcn.00401370(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    if (*(param_1 + 0x228) == 0) {\n        return 3;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*(param_1 + 0x228), param_2);\n    return -(iVar1 != 0) & 7;\n}\n",
        "token_count": 104
    },
    "004013cf": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nuint8_t __thiscall fcn.004013cf(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    if (*(param_1 + 0x230) == 0) {\n        return 1;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*(param_1 + 0x230), param_2);\n    return -(iVar1 != 0) & 7;\n}\n",
        "token_count": 104
    },
    "00401082": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401082(uint *param_1)\n\n{\n    *param_1 = 0xffffffff;\n    param_1[1] = 0;\n    param_1[2] = 1;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    param_1[0x87] = 0;\n    param_1[0x88] = 0;\n    *(param_1 + 5) = 0;\n    return;\n}\n",
        "token_count": 114
    },
    "004013a2": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004013a2(int32_t param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint unaff_retaddr;\n    \n    *(param_1 + 0x220) = param_3;\n    *(param_1 + 8) = param_4;\n    *(param_1 + 0xc) = 0;\n    fcn.0040121c(param_2, param_1 + 0x14, 0x208, 1);\n    fcn.00401398(0xffffffff, unaff_retaddr, 0);\n    return;\n}\n",
        "token_count": 139
    },
    "00429fdf": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00429fdf(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *(param_1 + 0xc) = 1;\n    iVar1 = fcn.004359aa(*(param_1 + 0x94), param_1 + 0x14, 0x80);\n    *(param_1 + 0x10) = iVar1 != 0;\n    return;\n}\n",
        "token_count": 96
    },
    "0042d8a3": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042d8a3(int32_t param_1)\n\n{\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 4) = 0;\n    fcn.0042d84e();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 105
    },
    "0042ec88": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042ec88(int32_t param_1)\n\n{\n    if (*(param_1 + 4) != 0) {\n        fcn.00434eca(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    fcn.0042d84e();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 122
    },
    "0042ef55": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042ef55(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    \n    if (*(param_1 + 4) != 0) {\n        uVar1 = 0;\n        if (*(param_1 + 8) != 0) {\n            do {\n                for (puVar2 = *(*(param_1 + 4) + uVar1 * 4); puVar2 != NULL; puVar2 = *puVar2) {\n                    fcn.004347d0();\n                }\n                uVar1 = uVar1 + 1;\n            } while (uVar1 < *(param_1 + 8));\n        }\n        fcn.00434eca(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    fcn.0042d84e();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 245
    },
    "004380f2": {
        "rules": [
            "create or open registry key",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004380f2(uint hKey, uint arg_ch)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    bool bVar5;\n    uint lpType;\n    uint lpcbData;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.ADVAPI32.dll_RegOpenKeyA;\n    bVar5 = false;\n    var_8h = 0;\n    iVar3 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyA)(0x80000000, \"CLSID\", &var_8h);\n    if (iVar3 == 0) {\n        var_4h = 0;\n        iVar3 = (*pcVar1)(var_8h, hKey, &var_4h);\n        pcVar2 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n        if (iVar3 == 0) {\n            hKey = 0;\n            iVar3 = (*pcVar1)(var_4h, \"InProcServer32\", &hKey);\n            if (iVar3 == 0) {\n                uVar4 = fcn.00434c00(0x104);\n                lpcbData = 0x104;\n                iVar3 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, 0x45e128, 0, &lpType, uVar4, &lpcbData);\n                fcn.00434c4f(0xffffffff);\n                bVar5 = iVar3 == 0;\n                (*pcVar2)(hKey);\n            }\n            (*pcVar2)(var_4h);\n        }\n        (*pcVar2)(var_8h);\n    }\n    return bVar5;\n}\n",
        "token_count": 397
    },
    "004494a5": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004494a5(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    var_4h = 0;\n    var_8h = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000001, \"software\", 0, 0x2001f, &var_4h);\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegCreateKeyExA;\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                          (var_4h, *(param_1 + 0x7c), 0, 0, 0, 0x2001f, 0, &var_8h, &var_10h);\n        if (iVar2 == 0) {\n            (*pcVar1)(var_8h, *(param_1 + 0x90), 0, 0, 0, 0x2001f, 0, &var_ch, &var_10h);\n        }\n    }\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n    if (var_4h != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_4h);\n    }\n    if (var_8h != 0) {\n        (*pcVar1)(var_8h);\n    }\n    return var_ch;\n}\n",
        "token_count": 382
    },
    "00449539": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00449539(uint lpSubKey)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.004494a5();\n    if (iVar1 == 0) {\n        var_4h = 0;\n    }\n    else {\n        (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)(iVar1, lpSubKey, 0, 0, 0, 0x2001f, 0, &var_4h, &var_8h);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n    }\n    return var_4h;\n}\n",
        "token_count": 164
    },
    "004322aa": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004322aa(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    iVar1 = (**(*in_ECX + 0x68))(arg_8h);\n    if (iVar1 == 0) {\n        iVar1 = in_ECX[7];\n    }\n    else {\n        arg_8h = 2;\n        iVar1 = *(iVar1 + 0x1c);\n    }\n    (*_sym.imp.USER32.dll_SetScrollPos)(iVar1, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 146
    },
    "00432302": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00432302(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    iVar1 = (**(*in_ECX + 0x68))(arg_8h);\n    if (iVar1 == 0) {\n        iVar1 = in_ECX[7];\n    }\n    else {\n        arg_8h = 2;\n        iVar1 = *(iVar1 + 0x1c);\n    }\n    (*_sym.imp.USER32.dll_SetScrollRange)(iVar1, arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 157
    },
    "00432335": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00432335(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    iVar1 = (**(*in_ECX + 0x68))(arg_8h);\n    if (iVar1 == 0) {\n        iVar1 = in_ECX[7];\n    }\n    else {\n        arg_8h = 2;\n        iVar1 = *(iVar1 + 0x1c);\n    }\n    (*_sym.imp.USER32.dll_GetScrollRange)(iVar1, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 146
    },
    "00433a11": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433a11(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x34) == NULL) {\n        (*_sym.imp.USER32.dll_CheckRadioButton)(*(in_ECX + 0x1c), arg_8h, arg_ch, arg_10h);\n    }\n    else {\n        (**(**(in_ECX + 0x34) + 0x68))(arg_8h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "00436170": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00436170(int32_t *param_1)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iStack4;\n    \n    bVar1 = true;\n    iStack4 = 0;\n    do {\n        if (bVar1) {\n            do {\n                iVar2 = (*_sym.imp.USER32.dll_PeekMessageA)(param_1 + 0xc, 0, 0, 0, 0);\n                if (iVar2 != 0) break;\n                iVar2 = iStack4 + 1;\n                iVar3 = (**(*param_1 + 0x60))(iStack4);\n                if (iVar3 == 0) {\n                    bVar1 = false;\n                }\n                iStack4 = iVar2;\n            } while (bVar1);\n        }\n        do {\n            iVar2 = (**(*param_1 + 0x5c))();\n            if (iVar2 == 0) {\n                (**(*param_1 + 0x68))();\n                return;\n            }\n            iVar2 = (**(*param_1 + 100))(param_1 + 0xc);\n            if (iVar2 != 0) {\n                bVar1 = true;\n            }\n            iVar2 = (*_sym.imp.USER32.dll_PeekMessageA)(param_1 + 0xc, 0, 0, 0, 0);\n        } while (iVar2 != 0);\n    } while( true );\n}\n",
        "token_count": 334
    },
    "00438eac": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nuint fcn.00438eac(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar4 = 0xffffffff;\n    piVar2 = fcn.00435e7c();\n    iVar3 = fcn.00447f81();\n    piVar1 = *(iVar3 + 4);\n    iVar3 = fcn.0044986b(param_1, param_2, param_3, param_4);\n    if ((iVar3 != 0) && ((piVar1 == NULL || (iVar3 = (**(*piVar1 + 0x84))(),  iVar3 != 0)))) {\n        iVar3 = (**(*piVar2 + 0x50))();\n        if (iVar3 == 0) {\n            if (piVar2[7] != NULL) {\n                (**(*piVar2[7] + 0x58))();\n            }\n            uVar4 = (**(*piVar2 + 0x68))();\n        }\n        else {\n            uVar4 = (**(*piVar2 + 0x54))();\n        }\n    }\n    fcn.0044b3a1();\n    return uVar4;\n}\n",
        "token_count": 295
    },
    "0042a132": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a132(uint16_t *arg_8h, uint arg_ch)\n\n{\n    uint16_t **in_ECX;\n    \n    if (*arg_8h < 0x76c) {\n        *in_ECX = NULL;\n    }\n    else {\n        fcn.0042a07d(*arg_8h, arg_8h[1], arg_8h[3], arg_8h[4], arg_8h[5], arg_8h[6], arg_ch);\n        *in_ECX = arg_8h;\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "004404b8": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004404b8(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    if ((arg_ch < arg_10h) || (arg_14h < arg_ch)) {\n        fcn.00440428(arg_8h, arg_10h, arg_14h, 0x451e1c, 0xf112);\n    }\n    return;\n}\n",
        "token_count": 97
    },
    "0042bdb0": {
        "rules": [
            "capture webcam image/8f9bddbfc62a47b78ef3c85708336261"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042bdb0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    uint var_2ch;\n    uint var_8h;\n    \n    fcn.0042bf69(&var_2ch, arg_ch, arg_10h);\n    var_8h = fcn.00434c00(0x100);\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x1c), 0x40b, 0, &var_2ch);\n    fcn.00434c4f(0xffffffff);\n    return;\n}\n",
        "token_count": 146
    },
    "00435e91": {
        "rules": [
            "resume thread"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t * __cdecl fcn.00435e91(uint arg_8h, uint arg_ch, uint nPriority, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    iVar1 = fcn.00434ea1(0x68);\n    *(unaff_EBP + -0x10) = iVar1;\n    piVar2 = NULL;\n    *(unaff_EBP + -4) = 0;\n    if (iVar1 != 0) {\n        piVar2 = fcn.00448739(*(unaff_EBP + 8), *(unaff_EBP + 0xc));\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    iVar1 = fcn.00436079(*(unaff_EBP + 0x18) | 4, *(unaff_EBP + 0x14), *(unaff_EBP + 0x1c));\n    if (iVar1 == 0) {\n        (**(*piVar2 + 0x78))();\n        piVar2 = NULL;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_SetThreadPriority)(piVar2[10], *(unaff_EBP + 0x10));\n        if ((*(unaff_EBP + 0x18) & 4) == 0) {\n            (*_sym.imp.KERNEL32.dll_ResumeThread)(piVar2[10]);\n        }\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return piVar2;\n}\n",
        "token_count": 446
    },
    "00435f12": {
        "rules": [
            "resume thread"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00435f12(uint arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = fcn.0043670b();\n    if (piVar1 == NULL) {\n        fcn.0042a04b();\n    }\n    piVar1[0x13] = 0;\n    iVar2 = fcn.00436079(arg_14h | 4, arg_10h, arg_18h);\n    if (iVar2 == 0) {\n        (**(*piVar1 + 0x78))();\n        piVar1 = NULL;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_SetThreadPriority)(piVar1[10], arg_ch);\n        if ((arg_14h & 4) == 0) {\n            (*_sym.imp.KERNEL32.dll_ResumeThread)(piVar1[10]);\n        }\n    }\n    return piVar1;\n}\n",
        "token_count": 241
    },
    "004010cd": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.004010cd(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.00401352();\n    while( true ) {\n        if (iVar2 == 0) {\n            return 0;\n        }\n        uVar1 = *(iVar2 + 0x10);\n        *(iVar2 + 0x10) = 0;\n        fcn.0040141a();\n        if ((uVar1 & 0x80000000) == 0) break;\n        iVar2 = fcn.00401352();\n    }\n    return 0;\n}\n",
        "token_count": 137
    },
    "0041731a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0041731a(int16_t param_1)\n\n{\n    int16_t *piVar1;\n    \n    piVar1 = 0x45ceb4;\n    do {\n        if (param_1 == *piVar1) {\n            return 0;\n        }\n        piVar1 = piVar1 + 1;\n    } while (piVar1 < 0x45cec8);\n    return 1;\n}\n",
        "token_count": 95
    },
    "00429d4c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00429d4c(char **param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char *pcVar4;\n    \n    fcn.00434779();\n    pcVar3 = *param_1;\n    pcVar4 = NULL;\n    cVar1 = *pcVar3;\n    if (cVar1 != '\\0') {\n        do {\n            iVar2 = fcn.0040d482(param_2, cVar1);\n            if (iVar2 == 0) {\n                pcVar4 = NULL;\n            }\n            else if (pcVar4 == NULL) {\n                pcVar4 = pcVar3;\n            }\n            pcVar3 = fcn.0040d6a2(pcVar3);\n            cVar1 = *pcVar3;\n        } while (cVar1 != '\\0');\n        if (pcVar4 != NULL) {\n            *pcVar4 = '\\0';\n            *(*param_1 + -8) = pcVar4 - *param_1;\n        }\n    }\n    return;\n}\n",
        "token_count": 247
    },
    "0042d84e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042d84e(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    \n    if (param_1 != NULL) {\n        do {\n            piVar1 = *param_1;\n            fcn.00434eca(param_1);\n            param_1 = piVar1;\n        } while (piVar1 != NULL);\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "0042ed42": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0042ed42(int32_t param_1, uint32_t param_2, uint32_t *param_3)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    \n    uVar2 = (param_2 >> 4) % *(param_1 + 8);\n    *param_3 = uVar2;\n    if (*(param_1 + 4) != 0) {\n        for (puVar1 = *(*(param_1 + 4) + uVar2 * 4); puVar1 != NULL; puVar1 = *puVar1) {\n            if (puVar1[1] == param_2) {\n                return puVar1;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 171
    },
    "0042ed74": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0042ed74(int32_t param_1, uint32_t param_2)\n\n{\n    uint *puVar1;\n    \n    if (*(param_1 + 4) != 0) {\n        for (puVar1 = *(*(param_1 + 4) + ((param_2 >> 4) % *(param_1 + 8)) * 4); puVar1 != NULL; puVar1 = *puVar1) {\n            if (puVar1[1] == param_2) {\n                return puVar1[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 139
    },
    "0042ee19": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0042ee19(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    \n    iVar1 = *(param_1 + 4);\n    if (iVar1 != 0) {\n        uVar4 = (param_2 >> 4) % *(param_1 + 8);\n        puVar2 = *(iVar1 + uVar4 * 4);\n        puVar5 = iVar1 + uVar4 * 4;\n        while (puVar3 = puVar2,  puVar3 != NULL) {\n            if (puVar3[1] == param_2) {\n                *puVar5 = *puVar3;\n                fcn.0042ed29(puVar3);\n                return 1;\n            }\n            puVar5 = puVar3;\n            puVar2 = *puVar3;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 233
    },
    "004314ec": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.004314ec(int32_t param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar1 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(param_1 + 4));\n    iVar4 = 0;\n    if (0 < iVar1) {\n        do {\n            uVar2 = (*_sym.imp.USER32.dll_GetSubMenu)(*(param_1 + 4), iVar4);\n            iVar3 = fcn.00435abb(uVar2);\n            if (iVar3 == 0) {\n                iVar3 = (*_sym.imp.USER32.dll_GetMenuItemID)(*(param_1 + 4), iVar4);\n                if (iVar3 == param_1) {\n                    iVar1 = fcn.00435ad0(*(param_1 + 4));\n                    return iVar1;\n                }\n            }\n            else {\n                iVar3 = fcn.004314ec(iVar3, param_3);\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < iVar1);\n    }\n    return 0;\n}\n",
        "token_count": 281
    },
    "00431f8e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00431f8e(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetParent;\n    if ((param_1 != 0) && (iVar4 = *(param_1 + 0x1c),  iVar4 != 0)) {\n        while( true ) {\n            uVar2 = (*pcVar1)(iVar4);\n            piVar3 = fcn.004308de(uVar2);\n            if (piVar3 == NULL) break;\n            iVar4 = (**(*piVar3 + 0xb0))();\n            if (iVar4 != 0) {\n                return piVar3;\n            }\n            iVar4 = piVar3[7];\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 199
    },
    "00432011": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00432011(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if ((param_1 != 0) && (iVar1 = *(param_1 + 0x1c),  *(param_1 + 0x1c) != 0)) {\n        do {\n            iVar3 = iVar1;\n            iVar1 = fcn.00431fcc(iVar3);\n        } while (iVar1 != 0);\n        uVar2 = fcn.004308de(iVar3);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 145
    },
    "00432069": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00432069(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetWindowLongA;\n    if ((param_1 == 0) || (iVar5 = *(param_1 + 0x1c),  iVar5 == 0)) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar5, 0xfffffff0);\n    while ((uVar2 & 0x40000000) != 0) {\n        iVar3 = (*_sym.imp.USER32.dll_GetParent)(iVar5);\n        if (iVar3 == 0) break;\n        uVar2 = (*pcVar1)(iVar3, 0xfffffff0);\n        iVar5 = iVar3;\n    }\n    uVar4 = fcn.004308de(iVar5);\n    return uVar4;\n}\n",
        "token_count": 234
    },
    "004327f0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.004327f0(uint param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    iVar3 = *param_2;\n    while( true ) {\n        if (iVar3 == 0) {\n            return 0;\n        }\n        piVar1 = fcn.00430905(iVar3);\n        if ((piVar1 != NULL) && (iVar2 = (**(*piVar1 + 0x90))(param_2),  iVar2 != 0)) break;\n        if (iVar3 == unaff_retaddr) {\n            return 0;\n        }\n        iVar3 = (*_sym.imp.USER32.dll_GetParent)(iVar3);\n    }\n    return 1;\n}\n",
        "token_count": 185
    },
    "00432d15": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00432d15(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint lpMsg;\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n    while( true ) {\n        iVar2 = (*pcVar1)(&lpMsg, 0, 0x121, 0x121, 1);\n        if (iVar2 == 0) break;\n        (*_sym.imp.USER32.dll_DispatchMessageA)(&lpMsg);\n    }\n    fcn.00430845();\n    return;\n}\n",
        "token_count": 126
    },
    "00434ea1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00434ea1(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    while( true ) {\n        iVar1 = fcn.0040cd2e(param_1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (*0x45b954 == NULL) break;\n        iVar1 = (**0x45b954)(param_1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 117
    },
    "004367b6": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004367b6(int32_t param_1, int32_t param_2)\n\n{\n    while( true ) {\n        if (param_1 == 0) {\n            return 0;\n        }\n        if (param_1 == param_2) break;\n        param_1 = *(param_1 + 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 87
    },
    "0043e187": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043e187(int32_t hWnd, uint lpPoint, uint arg_10h)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint lpRect;\n    \n    (*_sym.imp.USER32.dll_ClientToScreen)(hWnd, &lpPoint);\n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    uVar5 = 5;\n    do {\n        hWnd = (*pcVar1)(hWnd, uVar5);\n        if (hWnd == 0) {\n            return 0;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(hWnd);\n        if ((iVar2 != -1) &&\n           (uVar3 = (*_sym.imp.USER32.dll_GetWindowLongA)(hWnd, 0xfffffff0),  (uVar3 & 0x10000000) != 0)) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n            iVar4 = (*_sym.imp.USER32.dll_PtInRect)(&lpRect, lpPoint, arg_10h);\n            if (iVar4 != 0) {\n                return hWnd;\n            }\n        }\n        uVar5 = 2;\n    } while( true );\n}\n",
        "token_count": 300
    },
    "00440b76": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00440b76(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    \n    pcVar2 = _sym.imp.USER32.dll_GetParent;\n    iVar3 = param_1;\n    if (param_1 != 0) goto code_r0x00440bef;\n    iVar3 = fcn.00440c1e();\n    if ((iVar3 == 0) && (iVar3 = fcn.0040bccc(),  iVar3 == 0)) {\n        iVar3 = 0;\n        iVar4 = iVar3;\n        iVar5 = iVar3;\n    }\n    else {\n        for (iVar3 = *(iVar3 + 0x1c); iVar4 = iVar3,  iVar5 = iVar3,  iVar3 != 0; iVar3 = (*pcVar2)(iVar3)) {\ncode_r0x00440bef:\n            uVar6 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar3, 0xfffffff0);\n            iVar4 = iVar3;\n            iVar5 = iVar3;\n            if ((uVar6 & 0x40000000) == 0) break;\n        }\n    }\n    while (iVar1 = iVar4,  iVar1 != 0) {\n        iVar4 = (*pcVar2)(iVar1);\n        iVar3 = iVar1;\n    }\n    if ((param_1 == 0) && (iVar5 != 0)) {\n        iVar5 = (*_sym.imp.USER32.dll_GetLastActivePopup)(iVar5);\n    }\n    if (param_2 != NULL) {\n        if (((iVar3 == 0) || (iVar4 = (*_sym.imp.USER32.dll_IsWindowEnabled)(iVar3),  iVar4 == 0)) || (iVar3 == iVar5))\n        {\n            *param_2 = 0;\n        }\n        else {\n            *param_2 = iVar3;\n            (*_sym.imp.USER32.dll_EnableWindow)(iVar3, 0);\n        }\n    }\n    return iVar5;\n}\n",
        "token_count": 484
    },
    "00440da0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00440da0(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBX;\n    \n    iVar2 = (*_sym.imp.USER32.dll_GetCapture)();\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    for (; iVar2 != 0; iVar2 = fcn.00431fcc(iVar2)) {\n        iVar3 = (*pcVar1)(iVar2, 0x365, 0, 0);\n        if (iVar3 != 0) {\n            return;\n        }\n    }\n    for (iVar2 = (*_sym.imp.USER32.dll_GetFocus)(); iVar2 != 0; iVar2 = fcn.00431fcc(iVar2)) {\n        iVar3 = (*pcVar1)(iVar2, 0x365, 0, 0);\n        if (iVar3 != 0) {\n            return;\n        }\n    }\n    iVar2 = fcn.00432011();\n    if (iVar2 == 0) {\n        uVar4 = 0;\n    }\n    else {\n        uVar4 = *(iVar2 + 0x1c);\n    }\n    iVar2 = (*_sym.imp.USER32.dll_GetLastActivePopup)(uVar4);\n    while( true ) {\n        if (iVar2 == 0) {\n            (*pcVar1)(*(unaff_EBX + 0x1c), 0x111, 0xe147, 0);\n            return;\n        }\n        iVar3 = (*pcVar1)(iVar2, 0x365, 0, 0);\n        if (iVar3 != 0) break;\n        iVar2 = fcn.00431fcc(iVar2);\n    }\n    return;\n}\n",
        "token_count": 395
    },
    "00443df0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00443df0(int32_t param_1, int32_t param_2)\n\n{\n    do {\n        if (param_1 == param_2) {\n            return 1;\n        }\n        param_2 = fcn.00431fcc();\n    } while (param_2 != 0);\n    return 0;\n}\n",
        "token_count": 75
    },
    "004440e9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004440e9(int32_t param_1, uint32_t param_2)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    \n    uVar3 = fcn.00433c44();\n    iVar4 = param_1;\n    if ((uVar3 & 0x40000000) == 0) {\n        iVar4 = fcn.0043211e();\n    }\n    pcVar2 = _sym.imp.USER32.dll_SendMessageA;\n    if ((param_2 & 0xc) != 0) {\n        iVar5 = fcn.00433e46();\n        if ((((~param_2 & 8) == 0) || (iVar5 == 0)) || (iVar4 == param_1)) {\n            (*pcVar2)(*(iVar4 + 0x1c), 0x86, 0, 0);\n        }\n        else {\n            *(param_1 + 0x25) = *(param_1 + 0x25) | 2;\n            (*pcVar2)(*(iVar4 + 0x1c), 0x86, 1, 0);\n            *(param_1 + 0x25) = *(param_1 + 0x25) & 0xfd;\n        }\n    }\n    uVar7 = 5;\n    iVar5 = (*_sym.imp.USER32.dll_GetDesktopWindow)(5);\n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    while (iVar5 = (*pcVar1)(iVar5, uVar7),  iVar5 != 0) {\n        iVar6 = fcn.00443df0(*(iVar4 + 0x1c), iVar5);\n        if (iVar6 != 0) {\n            (*pcVar2)(iVar5, 0x36d, param_2, 0);\n        }\n        uVar7 = 2;\n    }\n    return;\n}\n",
        "token_count": 460
    },
    "00448978": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00448978(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = *param_1;\n    if (iVar3 == 0) {\n        return 0;\n    }\n    if (iVar3 == param_2) {\n        *param_1 = *(param_1[1] + param_2);\n    }\n    else {\n        if (iVar3 == 0) {\n            return 0;\n        }\n        iVar1 = param_1[1];\n        do {\n            iVar2 = *(iVar1 + iVar3);\n            if (iVar2 == param_2) break;\n            iVar3 = iVar2;\n        } while (iVar2 != 0);\n        if (iVar3 == 0) {\n            return 0;\n        }\n        *(iVar1 + iVar3) = *(iVar1 + param_2);\n    }\n    return 1;\n}\n",
        "token_count": 221
    },
    "00448b9b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00448b9b(int32_t arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    uint lpCriticalSection;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 0x1c);\n    for (iVar2 = *(in_ECX + 0x14); iVar2 != 0; iVar2 = *(iVar2 + 4)) {\n        if (arg_8h < *(iVar2 + 8)) {\n            puVar3 = *(*(iVar2 + 0xc) + arg_8h * 4);\n            if (puVar3 != NULL) {\n                (***puVar3)(1);\n            }\n            *(*(iVar2 + 0xc) + arg_8h * 4) = 0;\n        }\n    }\n    puVar1 = *(in_ECX + 0x10) + arg_8h * 8;\n    *puVar1 = *puVar1 & 0xfffffffe;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 0x1c);\n    return;\n}\n",
        "token_count": 267
    },
    "004495eb": {
        "rules": [
            "query or enumerate registry value",
            "read .ini file"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: hKey\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.004495eb(uint arg_8h, uint lpAppName, uint lpKeyName, uint lpDefault)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint lpReturnedString;\n    uint var_18h;\n    uint var_14h;\n    uint hKey;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    fcn.0040c750();\n    iVar2 = *(extraout_ECX + 0x7c);\n    *(unaff_EBP + -0x14) = 0;\n    if (iVar2 == 0) {\n        if (*(unaff_EBP + 0x14) == 0) {\n            *(unaff_EBP + 0x14) = 0x45fdd0;\n        }\n        (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringA)\n                  (*(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), unaff_EBP + -0x1018, 0x1000, \n                   *(extraout_ECX + 0x90));\n        iVar2 = unaff_EBP + -0x1018;\n    }\n    else {\n        iVar2 = fcn.00449539(*(unaff_EBP + 0xc));\n        *(unaff_EBP + -0x10) = iVar2;\n        if (iVar2 != 0) {\n            *(unaff_EBP + 0xc) = *0x45b93c;\n            pcVar1 = _sym.imp.ADVAPI32.dll_RegQueryValueExA;\n            *(unaff_EBP + -4) = 0;\n            iVar2 = (*pcVar1)(iVar2, *(unaff_EBP + 0x10), 0, unaff_EBP + -0x14, 0, unaff_EBP + -0x18);\n            if (iVar2 == 0) {\n                uVar3 = fcn.00434c00(*(unaff_EBP + -0x18), unaff_EBP + -0x18);\n                iVar2 = (*pcVar1)(*(unaff_EBP + -0x10), *(unaff_EBP + 0x10), 0, unaff_EBP + -0x14, uVar3);\n                fcn.00434c4f(0xffffffff);\n            }\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(*(unaff_EBP + -0x10));\n            if (iVar2 == 0) {\n                fcn.00434545(unaff_EBP + 0xc);\n            }\n            else {\n                fcn.0043483e(*(unaff_EBP + 0x14));\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.004347d0();\n            goto code_r0x004496ea;\n        }\n        iVar2 = *(unaff_EBP + 0x14);\n    }\n    fcn.0043483e(iVar2);\ncode_r0x004496ea:\n    uVar3 = *(unaff_EBP + 8);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar3;\n}\n",
        "token_count": 828
    },
    "0040b8f4": {
        "rules": [
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\nbool fcn.0040b8f4(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    bool bVar3;\n    \n    if (*0x45fba0 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"USER32\");\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if ((((iVar2 != 0) &&\n             (*0x45fb88 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetSystemMetrics\"),  *0x45fb88 != 0)) &&\n            (*0x45fb8c = (*pcVar1)(iVar2, \"MonitorFromWindow\"),  *0x45fb8c != 0)) &&\n           (((*0x45fb90 = (*pcVar1)(iVar2, \"MonitorFromRect\"),  *0x45fb90 != 0 &&\n             (*0x45fb94 = (*pcVar1)(iVar2, \"MonitorFromPoint\"),  *0x45fb94 != 0)) &&\n            ((*0x45fb9c = (*pcVar1)(iVar2, \"EnumDisplayMonitors\"),  *0x45fb9c != 0 &&\n             (*0x45fb98 = (*pcVar1)(iVar2, \"GetMonitorInfoA\"),  *0x45fb98 != 0)))))) {\n            *0x45fba0 = 1;\n            return true;\n        }\n        *0x45fb88 = 0;\n        *0x45fb8c = 0;\n        *0x45fb90 = 0;\n        *0x45fb94 = 0;\n        *0x45fb98 = 0;\n        *0x45fb9c = 0;\n        *0x45fba0 = 1;\n        bVar3 = false;\n    }\n    else {\n        bVar3 = *0x45fb98 != 0;\n    }\n    return bVar3;\n}\n",
        "token_count": 438
    },
    "004334fe": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint32_t fcn.004334fe(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t unaff_ESI;\n    uint unaff_EDI;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"COMCTL32.DLL\");\n    uVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"COMCTL32.DLL\");\n    uVar5 = uVar2;\n    if (uVar2 != 0) {\n        pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2, \"InitCommonControlsEx\");\n        uVar5 = 0;\n        if (pcVar3 == NULL) {\n            if ((unaff_ESI & 0x3fc0) == unaff_ESI) {\n                (*_sym.imp.COMCTL32.dll_InitCommonControls)();\n                uVar5 = 0x3fc0;\n            }\n        }\n        else {\n            iVar4 = (*pcVar3)(unaff_EDI);\n            if ((iVar4 != 0) && (uVar5 = unaff_ESI,  iVar1 == 0)) {\n                (*_sym.imp.COMCTL32.dll_InitCommonControls)();\n                uVar5 = unaff_ESI | 0x3fc0;\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(uVar2);\n    }\n    return uVar5;\n}\n",
        "token_count": 332
    },
    "00437fe6": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00437fe6(uint arg_8h, uint arg_ch, uint lpLibFileName)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t unaff_EBP;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    puVar1 = *(unaff_EBP + 0x10);\n    uVar4 = *(unaff_EBP + 8);\n    *puVar1 = 0;\n    fcn.00438083(unaff_EBP + -0x10, uVar4);\n    uVar4 = *0x45b93c;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + 0x10) = uVar4;\n    *(unaff_EBP + -4) = 1;\n    iVar2 = fcn.004380f2(*(unaff_EBP + -0x10), unaff_EBP + 0x10);\n    if (iVar2 != 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(*(unaff_EBP + 0x10));\n        if (iVar2 != 0) {\n            pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"DllGetClassObject\");\n            if (pcVar3 == NULL) {\n                uVar4 = 0x800401f9;\n            }\n            else {\n                uVar4 = (*pcVar3)(*(unaff_EBP + 8), *(unaff_EBP + 0xc), puVar1);\n            }\n            goto code_r0x0043805a;\n        }\n    }\n    uVar4 = 0x80040154;\ncode_r0x0043805a:\n    *(unaff_EBP + -4) = 0;\n    fcn.004347d0();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004347d0();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar4;\n}\n",
        "token_count": 536
    },
    "0040e398": {
        "rules": [
            "set thread local storage value"
        ],
        "decompiled_code": "\nuint fcn.0040e398(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint *var_8h;\n    uint var_18h;\n    uint var_10h;\n    code *pcStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x452d00;\n    pcStack16 = fcn.00413f38;\n    var_10h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h;\n    iVar1 = (*_sym.imp.KERNEL32.dll_TlsSetValue)(*0x45c090, var_8h);\n    if (iVar1 == 0) {\n        fcn.0040cec2(0x10);\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    *var_8h = uVar2;\n    if (*0x45bd1c != NULL) {\n        (**0x45bd1c)();\n    }\n    var_4h = 0;\n    uVar2 = (*var_8h[0x12])(var_8h[0x13]);\n    fcn.0040e434(uVar2);\n    *in_FS_OFFSET = var_10h;\n    return 0;\n}\n",
        "token_count": 303
    },
    "0041dd30": {
        "rules": [
            "set application hook"
        ],
        "decompiled_code": "\nvoid fcn.0041dd30(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    *0x460a64 = param_2;\n    *0x460a5c = param_1;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    *0x460a60 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(4, 0x41dc80, *0x4624dc, uVar1);\n    return;\n}\n",
        "token_count": 114
    },
    "00447c7d": {
        "rules": [
            "set application hook"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00447c7d(void)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040d018();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable._AFX_THREAD_STATE.0;\n    piVar1 = extraout_ECX[0x33];\n    *(unaff_EBP + -4) = 0;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 0x58))();\n        if (extraout_ECX[0x33] != NULL) {\n            (**(*extraout_ECX[0x33] + 4))(1);\n        }\n    }\n    pcVar2 = _sym.imp.USER32.dll_UnhookWindowsHookEx;\n    if (extraout_ECX[0xc] != NULL) {\n        (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(extraout_ECX[0xc]);\n    }\n    if (extraout_ECX[0xb] != NULL) {\n        (*pcVar2)(extraout_ECX[0xb]);\n    }\n    if (extraout_ECX[3] != NULL) {\n        fcn.0040df49(extraout_ECX[3]);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 373
    },
    "004312d5": {
        "rules": [
            "get graphical window text"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004312d5(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x38) == NULL) {\n        iVar1 = (*_sym.imp.USER32.dll_GetWindowTextLengthA)(*(param_1 + 0x1c));\n        uVar2 = fcn.00434c77(iVar1, iVar1 + 1);\n        (*_sym.imp.USER32.dll_GetWindowTextA)(*(param_1 + 0x1c), uVar2);\n        fcn.00434c4f(0xffffffff);\n    }\n    else {\n        (**(**(param_1 + 0x38) + 0x88))(param_2);\n    }\n    return;\n}\n",
        "token_count": 178
    },
    "004330d7": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nuint fcn.004330d7(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    if (param_1 != 0) {\n        iVar2 = fcn.00447f81();\n        uVar1 = *(iVar2 + 0xc);\n        iVar2 = (*_sym.imp.KERNEL32.dll_FindResourceA)(uVar1, param_1, 0xf0);\n        if (iVar2 != 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar1, iVar2);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            uVar3 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar2);\n        }\n    }\n    uVar3 = fcn.00433127(uVar3);\n    return uVar3;\n}\n",
        "token_count": 205
    },
    "00435110": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nvoid fcn.00435110(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_LockResource)(param_1);\n    fcn.00435149(uVar1, param_1, 0, param_2);\n    return;\n}\n",
        "token_count": 73
    },
    "00448ea8": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00448ea8(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = *param_1;\n    if ((iVar1 != 0) && (*0x45ff74 != NULL)) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(**0x45ff74);\n        if ((iVar2 != 0) && (iVar1 < *(iVar2 + 8))) {\n            return *(*(iVar2 + 0xc) + iVar1 * 4);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 137
    }
}