{
    "00401006": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401006(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x40d004) {\n        return;\n    }\n    *0x40e048 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x40e04c = &arg_8h;\n    *0x40df88 = 0x10001;\n    *0x40df30 = 0xc0000409;\n    *0x40df34 = 1;\n    var_328h = *0x40d004;\n    var_324h = *0x40d008;\n    *0x40df3c = unaff_retaddr;\n    *0x40e014 = in_GS;\n    *0x40e018 = in_FS;\n    *0x40e01c = in_ES;\n    *0x40e020 = in_DS;\n    *0x40e024 = unaff_EDI;\n    *0x40e028 = unaff_ESI;\n    *0x40e02c = unaff_EBX;\n    *0x40e030 = in_EDX;\n    *0x40e034 = in_ECX;\n    *0x40e038 = in_EAX;\n    *0x40e03c = unaff_EBP;\n    *0x40e040 = unaff_retaddr;\n    *0x40e044 = in_CS;\n    *0x40e050 = in_SS;\n    *0x40df80 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.004039e2(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x40a1b0);\n    if (*0x40df80 == 0) {\n        fcn.004039e2(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 832
    },
    "null": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "0040251e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00402611: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00402616)\n// WARNING: Removing unreachable block (ram,0x00402644)\n// WARNING: Removing unreachable block (ram,0x0040261c)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040251e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00403760(0x40b728, 0x18);\n    fcn.00405720(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x40e288 != 1) {\n        *0x40e284 = 1;\n        *0x40e280 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.0040320b(*0x48d0a8);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.0040320b(*0x48d0a4);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.00403202();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.0040320b(*piVar2);\n                        iVar3 = fcn.00403202();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.0040320b(*0x48d0a8);\n                        piVar1 = fcn.0040320b(*0x48d0a4);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.00402458(0x40a1a0);\n        }\n        fcn.00402458(0x40a1a8);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00405646(8);\n    }\n    return;\n}\n",
        "token_count": 800
    },
    "00405bc3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00405bc3(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.00405646(0);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "00405cc3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00405cc3(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00403202();\n    var_4h = 0;\n    if (*0x40e894 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"USER32.DLL\");\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"MessageBoxA\");\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x40e894 = fcn.00403190(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, \"GetActiveWindow\");\n        *0x40e898 = fcn.00403190(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetLastActivePopup\");\n        *0x40e89c = fcn.00403190(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetUserObjectInformationA\");\n        *0x40e8a4 = fcn.00403190(uVar3);\n        if (*0x40e8a4 != 0) {\n            uVar3 = (*pcVar4)(iVar2, \"GetProcessWindowStation\");\n            *0x40e8a0 = fcn.00403190(uVar3);\n        }\n    }\n    if ((*0x40e8a0 != iVar1) && (*0x40e8a4 != iVar1)) {\n        pcVar4 = fcn.0040320b(*0x40e8a0);\n        pcVar5 = fcn.0040320b(*0x40e8a4);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x00405e05;\n        }\n    }\n    if ((((*0x40e898 != iVar1) && (pcVar4 = fcn.0040320b(*0x40e898),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x40e89c != iVar1 && (pcVar4 = fcn.0040320b(*0x40e89c),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x00405e05:\n    pcVar4 = fcn.0040320b(*0x40e894);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 832
    },
    "004042bb": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004042bb(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00403760(0x40b7d8, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.00402324();\n        *puVar2 = 0;\n        puVar2 = fcn.00402311();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x48cf90)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x48cfa0;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.004070fc(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.00402311();\n                    *puVar2 = 9;\n                    puVar2 = fcn.00402324();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.00403b88(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0040438d(0x40b7d8);\n                goto code_r0x00404387;\n            }\n        }\n        puVar2 = fcn.00402324();\n        *puVar2 = 0;\n        puVar2 = fcn.00402311();\n        *puVar2 = 9;\n        fcn.004022a9(0, 0, 0, 0, 0);\n    }\ncode_r0x00404387:\n    fcn.004037a5();\n    return;\n}\n",
        "token_count": 626
    },
    "0040264a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040264a(uint arg_8h)\n\n{\n    fcn.0040251e(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 41
    },
    "00403144": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403158)\n// WARNING: Removing unreachable block (ram,0x0040315e)\n// WARNING: Removing unreachable block (ram,0x00403160)\n\nvoid fcn.00403144(void)\n\n{\n    return;\n}\n",
        "token_count": 61
    },
    "00409830": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409830(void)\n\n{\n    uint arg_8h;\n    uchar auStack1028 [1024];\n    uint32_t uStack4;\n    \n    uStack4 = *0x40d004 ^ auStack1028;\n    *0x411180 = *0x411180 * 0x343fd + 0x269ec3;\n    (*_sym.imp.USER32.dll_OemToCharA)\n              (\"xuhodasoyofafogezorihayoni jotitilonujijijixinenodeni jikecageyogozipepinejeku\", auStack1028);\n    arg_8h = 0;\n    (*_sym.imp.KERNEL32.dll_IsBadHugeReadPtr)(0, 0);\n    fcn.00401006(arg_8h);\n    return;\n}\n",
        "token_count": 183
    },
    "00408fcf": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00408fcf(void)\n\n{\n    *0x40ddd4 = (*_sym.imp.KERNEL32.dll_CreateFileA)(\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 61
    },
    "004098c0": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.004098c0(void)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    int32_t unaff_EBX;\n    int32_t iVar3;\n    int32_t unaff_EDI;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_WaitForMultipleObjects;\n    iVar3 = 0;\n    if (0 < unaff_EBX) {\n        do {\n            if (iVar3 < 0xaaa) {\n                (*pcVar1)(0, 0, 0, 0);\n            }\n            uVar2 = fcn.00409830();\n            *(iVar3 + unaff_EDI) = *(iVar3 + unaff_EDI) ^ uVar2;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < unaff_EBX);\n    }\n    return;\n}\n",
        "token_count": 188
    }
}