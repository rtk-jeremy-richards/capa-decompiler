{
    "null": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint64_t entry0(ulong param_1, ulong param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    uint8_t uVar7;\n    int32_t iVar8;\n    uint64_t unaff_RBP;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    bool bVar11;\n    bool bVar12;\n    bool bVar13;\n    bool bVar14;\n    bool bVar15;\n    uint8_t *puStackX8;\n    uint8_t *puStackX24;\n    \n    fcn.009c81df(param_1, param_2);\n    uVar7 = 0x80;\n    puVar10 = puStackX24;\n    do {\n        uVar1 = *puStackX8;\n        puStackX8 = puStackX8 + 1;\n        *puVar10 = uVar1;\n        puVar10 = puVar10 + 1;\n        iVar8 = 2;\ncode_r0x009c807e:\n        bVar11 = CARRY1(uVar7, uVar7);\n        uVar7 = uVar7 * '\\x02';\n        bVar12 = bVar11;\n        if (uVar7 == 0) {\n            uVar7 = *puStackX8;\n            puStackX8 = puStackX8 + 1;\n            bVar12 = CARRY1(uVar7, uVar7) || CARRY1(uVar7 * '\\x02', bVar11);\n            uVar7 = uVar7 * '\\x02' + bVar11;\n        }\n    } while (!bVar12);\n    bVar11 = CARRY1(uVar7, uVar7);\n    uVar7 = uVar7 * '\\x02';\n    bVar12 = bVar11;\n    if (uVar7 == 0) {\n        uVar7 = *puStackX8;\n        puStackX8 = puStackX8 + 1;\n        bVar12 = CARRY1(uVar7, uVar7) || CARRY1(uVar7 * '\\x02', bVar11);\n        uVar7 = uVar7 * '\\x02' + bVar11;\n    }\n    if (bVar12) {\n        bVar11 = CARRY1(uVar7, uVar7);\n        uVar7 = uVar7 * '\\x02';\n        bVar12 = bVar11;\n        if (uVar7 == 0) {\n            uVar7 = *puStackX8;\n            puStackX8 = puStackX8 + 1;\n            bVar12 = CARRY1(uVar7, uVar7) || CARRY1(uVar7 * '\\x02', bVar11);\n            uVar7 = uVar7 * '\\x02' + bVar11;\n        }\n        if (bVar12) {\n            bVar11 = CARRY1(uVar7, uVar7);\n            uVar7 = uVar7 * '\\x02';\n            bVar12 = bVar11;\n            if (uVar7 == 0) {\n                uVar7 = *puStackX8;\n                puStackX8 = puStackX8 + 1;\n                bVar12 = CARRY1(uVar7, uVar7) || CARRY1(uVar7 * '\\x02', bVar11);\n                uVar7 = uVar7 * '\\x02' + bVar11;\n            }\n            bVar13 = CARRY1(uVar7, uVar7);\n            uVar7 = uVar7 * '\\x02';\n            bVar11 = bVar13;\n            if (uVar7 == 0) {\n                uVar7 = *puStackX8;\n                puStackX8 = puStackX8 + 1;\n                bVar11 = CARRY1(uVar7, uVar7) || CARRY1(uVar7 * '\\x02', bVar13);\n                uVar7 = uVar7 * '\\x02' + bVar13;\n            }\n            bVar14 = CARRY1(uVar7, uVar7);\n            uVar7 = uVar7 * '\\x02';\n            bVar13 = bVar14;\n            if (uVar7 == 0) {\n                uVar7 = *puStackX8;\n                puStackX8 = puStackX8 + 1;\n                bVar13 = CARRY1(uVar7, uVar7) || CARRY1(uVar7 * '\\x02', bVar14);\n                uVar7 = uVar7 * '\\x02' + bVar14;\n            }\n            bVar15 = CARRY1(uVar7, uVar7);\n            uVar7 = uVar7 * '\\x02';\n            bVar14 = bVar15;\n            if (uVar7 == 0) {\n                uVar7 = *puStackX8;\n                puStackX8 = puStackX8 + 1;\n                bVar14 = CARRY1(uVar7, uVar7) || CARRY1(uVar7 * '\\x02', bVar15);\n                uVar7 = uVar7 * '\\x02' + bVar15;\n            }\n            uVar3 = ((bVar12 * 2 + bVar11) * 2 + bVar13) * 2 + bVar14;\n            if (uVar3 != 0) {\n                uVar3 = puVar10[-uVar3];\n            }\n            *puVar10 = uVar3;\n            puVar10 = puVar10 + 1;\n            iVar8 = 2;\n        }\n        else {\n            uVar1 = *puStackX8;\n            puStackX8 = puStackX8 + 1;\n            uVar2 = uVar1 >> 1;\n            unaff_RBP = uVar2;\n            if (uVar2 == 0) {\n                return puVar10 - puStackX24 & 0xffffffff;\n            }\n            puVar9 = puVar10 + -unaff_RBP;\n            for (uVar6 = ((uVar1 & 1) != 0) + 2; uVar6 != 0; uVar6 = uVar6 - 1) {\n                *puVar10 = *puVar9;\n                puVar9 = puVar9 + 1;\n                puVar10 = puVar10 + 1;\n            }\n            iVar8 = 1;\n        }\n    }\n    else {\n        iVar4 = 1;\n        do {\n            bVar11 = CARRY1(uVar7, uVar7);\n            uVar7 = uVar7 * '\\x02';\n            bVar12 = bVar11;\n            if (uVar7 == 0) {\n                uVar7 = *puStackX8;\n                puStackX8 = puStackX8 + 1;\n                bVar12 = CARRY1(uVar7, uVar7) || CARRY1(uVar7 * '\\x02', bVar11);\n                uVar7 = uVar7 * '\\x02' + bVar11;\n            }\n            iVar4 = iVar4 * 2 + bVar12;\n            bVar11 = CARRY1(uVar7, uVar7);\n            uVar7 = uVar7 * '\\x02';\n            bVar12 = bVar11;\n            if (uVar7 == 0) {\n                uVar7 = *puStackX8;\n                puStackX8 = puStackX8 + 1;\n                bVar12 = CARRY1(uVar7, uVar7) || CARRY1(uVar7 * '\\x02', bVar11);\n                uVar7 = uVar7 * '\\x02' + bVar11;\n            }\n        } while (bVar12);\n        iVar4 = iVar4 - iVar8;\n        iVar8 = 1;\n        if (iVar4 != 0) {\n            uVar3 = (iVar4 + -1) * 0x100 | *puStackX8;\n            puStackX8 = puStackX8 + 1;\n            unaff_RBP = uVar3;\n            uVar6 = 1;\n            do {\n                bVar11 = CARRY1(uVar7, uVar7);\n                uVar7 = uVar7 * '\\x02';\n                bVar12 = bVar11;\n                if (uVar7 == 0) {\n                    uVar7 = *puStackX8;\n                    puStackX8 = puStackX8 + 1;\n                    bVar12 = CARRY1(uVar7, uVar7) || CARRY1(uVar7 * '\\x02', bVar11);\n                    uVar7 = uVar7 * '\\x02' + bVar11;\n                }\n                uVar5 = uVar6 * 2 + bVar12;\n                uVar6 = uVar5;\n                bVar11 = CARRY1(uVar7, uVar7);\n                uVar7 = uVar7 * '\\x02';\n                bVar12 = bVar11;\n                if (uVar7 == 0) {\n                    uVar7 = *puStackX8;\n                    puStackX8 = puStackX8 + 1;\n                    bVar12 = CARRY1(uVar7, uVar7) || CARRY1(uVar7 * '\\x02', bVar11);\n                    uVar7 = uVar7 * '\\x02' + bVar11;\n                }\n            } while (bVar12);\n            if (uVar3 < 32000) {\n                if (0x4ff < uVar3) {\n                    puVar9 = puVar10 + -uVar3;\n                    for (uVar6 = uVar5 + 1; uVar6 != 0; uVar6 = uVar6 - 1) {\n                        *puVar10 = *puVar9;\n                        puVar9 = puVar9 + 1;\n                        puVar10 = puVar10 + 1;\n                    }\n                    goto code_r0x009c807e;\n                }\n                if (uVar3 < 0x80) goto code_r0x009c819b;\n            }\n            else {\ncode_r0x009c819b:\n                uVar6 = uVar5 + 2;\n            }\n            puVar9 = puVar10 + -uVar3;\n            for (; uVar6 != 0; uVar6 = uVar6 - 1) {\n                *puVar10 = *puVar9;\n                puVar9 = puVar9 + 1;\n                puVar10 = puVar10 + 1;\n            }\n            goto code_r0x009c807e;\n        }\n        uVar6 = 1;\n        do {\n            bVar11 = CARRY1(uVar7, uVar7);\n            uVar7 = uVar7 * '\\x02';\n            bVar12 = bVar11;\n            if (uVar7 == 0) {\n                uVar7 = *puStackX8;\n                puStackX8 = puStackX8 + 1;\n                bVar12 = CARRY1(uVar7, uVar7) || CARRY1(uVar7 * '\\x02', bVar11);\n                uVar7 = uVar7 * '\\x02' + bVar11;\n            }\n            uVar6 = uVar6 * 2 + bVar12;\n            bVar11 = CARRY1(uVar7, uVar7);\n            uVar7 = uVar7 * '\\x02';\n            bVar12 = bVar11;\n            if (uVar7 == 0) {\n                uVar7 = *puStackX8;\n                puStackX8 = puStackX8 + 1;\n                bVar12 = CARRY1(uVar7, uVar7) || CARRY1(uVar7 * '\\x02', bVar11);\n                uVar7 = uVar7 * '\\x02' + bVar11;\n            }\n        } while (bVar12);\n        puVar9 = puVar10 + -unaff_RBP;\n        for (; uVar6 != 0; uVar6 = uVar6 - 1) {\n            *puVar10 = *puVar9;\n            puVar9 = puVar9 + 1;\n            puVar10 = puVar10 + 1;\n        }\n    }\n    goto code_r0x009c807e;\n}\n",
        "token_count": 2745
    },
    "009c81df": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.009c81df(ulong arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    ulong *puVar2;\n    code *in_stack_00000000;\n    ulong uStack72;\n    code *pcStack64;\n    ulong uStack56;\n    code *pcStack48;\n    \n    puVar2 = &stack0xffffffffffffffd8;\n    pcVar1 = in_stack_00000000 + -0x57805d;\n    pcStack48 = in_stack_00000000;\n    if (*(in_stack_00000000 + -0x51a817) == 0) {\n        uStack56 = 0;\n        uStack72 = 0;\n        pcStack64 = pcVar1;\n        pcStack48 = pcVar1;\n        (*in_stack_00000000)();\n        puVar2 = &uStack72;\n        pcVar1 = in_stack_00000000 + 0x1cf;\n    }\n    // WARNING: Could not recover jumptable at 0x009c822a. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*(pcVar1 + 0x5d846))(*(puVar2 + 0x20), *(puVar2 + 0x18));\n    return;\n}\n",
        "token_count": 280
    }
}