{
    "00401000": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401000(int32_t param_1, uint32_t param_2)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    uchar uVar3;\n    int32_t iVar4;\n    \n    // [00] -r-x section size 40960 named .text\n    iVar4 = 0;\n    do {\n        *(iVar4 + 0x427c70) = iVar4;\n        iVar4 = iVar4 + 1;\n    } while (iVar4 != 0x100);\n    *0xb019ec = 0;\n    *0xb019f0 = 0;\n    do {\n        if (*0xb019f0 < 0xfac) {\n            (*_sym.imp.KERNEL32.dll_WriteProfileSectionW)(L\"Vibibozuve mayu\", L\"Xejili zuyo wi jufebodoyi\");\n        }\n        *0xb019ec = *(*0xb019f0 + 0x427c70) + *0xb019ec + *(*0xb019f0 % param_2 + param_1);\n        if (*0xb019f0 < 0xdc9) {\n            (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        }\n        *0xb019ec = *0xb019ec & 0xff;\n        puVar1 = *0xb019f0 + 0x427c70;\n        uVar3 = *puVar1;\n        puVar2 = *0xb019ec + 0x427c70;\n        *0xb019f0 = *0xb019f0 + 1;\n        *puVar1 = *puVar2;\n        *puVar2 = uVar3;\n    } while (*0xb019f0 != 0x100);\n    *0xb019ec = 0;\n    *0xb019f0 = 0;\n    return;\n}\n",
        "token_count": 413
    },
    "null": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00403b57": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00403c4a: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00403c4f)\n// WARNING: Removing unreachable block (ram,0x00403c7d)\n// WARNING: Removing unreachable block (ram,0x00403c55)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00403b57(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004025f8(0x40c710, 0x18);\n    fcn.0040240f(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0xb185f8 != 1) {\n        *0xb185f4 = 1;\n        *0xb185f0 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.00404844(*0xb18fe8);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.00404844(*0xb18fe4);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.0040483b();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.00404844(*piVar2);\n                        iVar3 = fcn.0040483b();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.00404844(*0xb18fe8);\n                        piVar1 = fcn.00404844(*0xb18fe4);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.00403a91(0x40b1a8);\n        }\n        fcn.00403a91(0x40b1b0);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00402335(8);\n    }\n    return;\n}\n",
        "token_count": 799
    },
    "0040526f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040526f(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x40ea58) {\n        return;\n    }\n    *0xb18be0 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0xb18be4 = &arg_8h;\n    *0xb18b20 = 0x10001;\n    *0xb18ac8 = 0xc0000409;\n    *0xb18acc = 1;\n    var_328h = *0x40ea58;\n    var_324h = *0x40ea5c;\n    *0xb18ad4 = unaff_retaddr;\n    *0xb18bac = in_GS;\n    *0xb18bb0 = in_FS;\n    *0xb18bb4 = in_ES;\n    *0xb18bb8 = in_DS;\n    *0xb18bbc = unaff_EDI;\n    *0xb18bc0 = unaff_ESI;\n    *0xb18bc4 = unaff_EBX;\n    *0xb18bc8 = in_EDX;\n    *0xb18bcc = in_ECX;\n    *0xb18bd0 = in_EAX;\n    *0xb18bd4 = unaff_EBP;\n    *0xb18bd8 = unaff_retaddr;\n    *0xb18bdc = in_CS;\n    *0xb18be8 = in_SS;\n    *0xb18b18 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.004063c1(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x40bb5c);\n    if (*0xb18b18 == 0) {\n        fcn.004063c1(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 824
    },
    "00407493": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00407493(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.00402335(0);\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "00407524": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00407524(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.0040483b();\n    var_4h = 0;\n    if (*0xb18ab4 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"USER32.DLL\");\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"MessageBoxA\");\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0xb18ab4 = fcn.004047c9(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, \"GetActiveWindow\");\n        *0xb18ab8 = fcn.004047c9(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetLastActivePopup\");\n        *0xb18abc = fcn.004047c9(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetUserObjectInformationA\");\n        *0xb18ac4 = fcn.004047c9(uVar3);\n        if (*0xb18ac4 != 0) {\n            uVar3 = (*pcVar4)(iVar2, \"GetProcessWindowStation\");\n            *0xb18ac0 = fcn.004047c9(uVar3);\n        }\n    }\n    if ((*0xb18ac0 != iVar1) && (*0xb18ac4 != iVar1)) {\n        pcVar4 = fcn.00404844(*0xb18ac0);\n        pcVar5 = fcn.00404844(*0xb18ac4);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x00407666;\n        }\n    }\n    if ((((*0xb18ab8 != iVar1) && (pcVar4 = fcn.00404844(*0xb18ab8),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0xb18abc != iVar1 && (pcVar4 = fcn.00404844(*0xb18abc),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x00407666:\n    pcVar4 = fcn.00404844(*0xb18ab4);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 810
    },
    "004020a4": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004020a4(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004025f8(0x40c670, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.00402bc6();\n        *puVar2 = 0;\n        puVar2 = fcn.00402bb3();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0xb18edc)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0xb18ee0;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.004053a8(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.00402bb3();\n                    *puVar2 = 9;\n                    puVar2 = fcn.00402bc6();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.00401971(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00402176(0x40c670);\n                goto code_r0x00402170;\n            }\n        }\n        puVar2 = fcn.00402bc6();\n        *puVar2 = 0;\n        puVar2 = fcn.00402bb3();\n        *puVar2 = 9;\n        fcn.00402b4b(0, 0, 0, 0, 0);\n    }\ncode_r0x00402170:\n    fcn.0040263d();\n    return;\n}\n",
        "token_count": 629
    },
    "004010c5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.004010c5(void)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    *0xb019f0 = *0xb019f0 + 1 & 0xff;\n    *0xb019ec = *(*0xb019f0 + 0x427c70) + *0xb019ec & 0xff;\n    if (*0xb019f0 < 0xd66) {\n        (*_sym.imp.KERNEL32.dll_SetFileShortNameA)(0, \"Dago\");\n        (*_sym.imp.GDI32.dll_SetICMProfileA)(0, 0);\n    }\n    uVar3 = *0xb019f0;\n    uVar4 = *0xb019ec;\n    uVar1 = *(*0xb019ec + 0x427c70);\n    *(*0xb019ec + 0x427c70) = *(*0xb019f0 + 0x427c70);\n    if (uVar3 < 0xd0a) {\n        (*_sym.imp.USER32.dll_GetMenuStringW)(0, 0, 0, 0, 0);\n        uVar3 = *0xb019f0;\n        uVar4 = *0xb019ec;\n    }\n    *(uVar3 + 0x427c70) = uVar1;\n    uVar2 = *(uVar4 + 0x427c70);\n    if (uVar3 < 0xd97) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_SetConsoleMode)(0, 0);\n    }\n    return uVar3 & 0xffffff00 | *((uVar2 + uVar1 & 0xff) + 0x427c70);\n}\n",
        "token_count": 400
    },
    "00401704": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00401704(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint arg_10h;\n    uint var_4h;\n    \n    fcn.004025f8(0x40c628, 0xc);\n    if (*(unaff_EBP + 8) == 0) {\n        puVar1 = fcn.00402bb3();\n        *puVar1 = 0x16;\n        fcn.00402b4b(0, 0, 0, 0, 0);\n    }\n    else {\n        iVar2 = fcn.00402442();\n        fcn.0040255a(1, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0;\n        iVar2 = fcn.00402442();\n        arg_8h_00 = fcn.00402bfc(iVar2 + 0x20);\n        iVar2 = unaff_EBP + 0xc;\n        arg_10h = 0;\n        uVar4 = *(unaff_EBP + 8);\n        iVar3 = fcn.00402442();\n        uVar4 = fcn.00402dfb(iVar3 + 0x20, uVar4, arg_10h, iVar2);\n        *(unaff_EBP + -0x1c) = uVar4;\n        iVar2 = fcn.00402442();\n        fcn.00402c98(arg_8h_00, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.004017a0();\n    }\n    fcn.0040263d();\n    return;\n}\n",
        "token_count": 459
    },
    "004017a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004017a0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00402442();\n    fcn.004025c8(1, iVar1 + 0x20);\n    return;\n}\n",
        "token_count": 54
    },
    "00403c83": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403c83(uint arg_8h)\n\n{\n    fcn.00403b57(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 41
    },
    "0040477d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404791)\n// WARNING: Removing unreachable block (ram,0x00404797)\n// WARNING: Removing unreachable block (ram,0x00404799)\n\nvoid fcn.0040477d(void)\n\n{\n    return;\n}\n",
        "token_count": 61
    },
    "00407c45": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00407c45(void)\n\n{\n    *0x40f0b4 = (*_sym.imp.KERNEL32.dll_CreateFileA)(\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 63
    },
    "00401173": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00401173(char *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    for (; (*param_1 != '\\0' && (param_2 != 0)); param_2 = param_2 + -1) {\n        (*_sym.imp.KERNEL32.dll_GetDefaultCommConfigW)(0, 0, 0);\n        (*_sym.imp.USER32.dll_LoadAcceleratorsW)(0, L\"Hudu\");\n        param_1 = param_1 + 1;\n        iVar1 = iVar1 + 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 145
    },
    "004011a8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004011a8(int32_t param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    \n    fcn.00401173();\n    fcn.00401000();\n    while (param_2 = param_2 + -1,  -1 < param_2) {\n        uVar1 = fcn.004010c5();\n        *(param_1 + param_2) = *(param_1 + param_2) ^ uVar1;\n    }\n    return;\n}\n",
        "token_count": 118
    }
}