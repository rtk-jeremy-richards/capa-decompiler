{
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t entry0(uint64_t arg1, ulong arg2, int64_t arg3)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    uint64_t arg2_00;\n    \n    arg2_00 = arg2;\n    if (arg2 == 1) {\n        fcn.180001d98();\n    }\n    if ((arg2 == 0) && (*0x180021b18 < 1)) {\n        iVar1 = 0;\n    }\n    else if ((1 < arg2 - 1) ||\n            (((*0x180016440 == 0 || (iVar1 = (**0x180016370)(),  iVar1 != 0)) &&\n             (iVar1 = fcn.18000147c(arg1, arg2_00, arg3),  iVar1 != 0)))) {\n        iVar1 = fcn.180010ac0(arg1, arg2_00, arg3);\n        if ((arg2 == 1) && (iVar1 == 0)) {\n            uVar2 = arg1;\n            fcn.180010ac0(arg1, 0, arg3);\n            fcn.1800015e4(uVar2 & 0xffffffffffffff00 | arg3 != 0);\n            if (*0x180016440 != 0) {\n                (**0x180016370)(arg1, 0, arg3);\n            }\n        }\n        if (((arg2 == 0) || (arg2 == 3)) && (iVar1 = fcn.18000147c(arg1, arg2_00, arg3),  iVar1 != 0)) {\n            if (*0x180016440 == 0) {\n                iVar1 = 1;\n            }\n            else {\n                iVar1 = (**0x180016370)(arg1, arg2_00, arg3);\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 416
    },
    "18000268": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuchar (*) [32] fcn.180002680(uchar (*arg1) [32], ulong noname_1, uint64_t arg3)\n\n{\n    uchar auVar1 [32];\n    uchar (*pauVar2) [32];\n    uchar (*pauVar3) [32];\n    uchar (*pauVar4) [16];\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uchar uVar7;\n    int64_t iVar10;\n    uchar auVar11 [16];\n    uchar in_YMM0 [32];\n    uchar auVar12 [32];\n    ushort uVar8;\n    uint uVar9;\n    \n    uVar5 = noname_1;\n    iVar10 = uVar5 * 0x101010101010101;\n    if (arg3 < 0x10) {\n        uVar7 = iVar10;\n        uVar8 = iVar10;\n        uVar9 = iVar10;\n    // switch table (16 cases) at 0x180025000\n        switch(*(arg3 * 4 + 0x180025000) + 0x180000000) {\n        case 0x1800026c1:\n            *(arg1[-1] + arg3 + 0x11) = iVar10;\n        case 0x1800026c5:\n            *(arg1[-1] + arg3 + 0x19) = uVar9;\n        case 0x1800026c9:\n            *(arg1[-1] + arg3 + 0x1d) = uVar8;\n        case 0x1800026ce:\n            arg1[-1][arg3 + 0x1f] = uVar7;\n            return arg1;\n        case 0x1800026d2:\n            return arg1;\n        case 0x1800026d3:\n            *(arg1[-1] + arg3 + 0x12) = iVar10;\n        case 0x1800026d7:\n            *(arg1[-1] + arg3 + 0x1a) = uVar9;\n        case 0x1800026db:\n            *(arg1[-1] + arg3 + 0x1e) = uVar8;\n            return arg1;\n        case 0x1800026f0:\n            *(arg1[-1] + arg3 + 0x13) = iVar10;\n        case 0x1800026f4:\n            *(arg1[-1] + arg3 + 0x1b) = uVar9;\n            arg1[-1][arg3 + 0x1f] = uVar7;\n            return arg1;\n        case 0x180002700:\n            *(arg1[-1] + arg3 + 0x14) = iVar10;\n        case 0x180002704:\n            *(arg1[-1] + arg3 + 0x1c) = uVar9;\n            return arg1;\n        case 0x180002709:\n            *(arg1[-1] + arg3 + 0x15) = iVar10;\n            *(arg1[-1] + arg3 + 0x1d) = uVar8;\n            arg1[-1][arg3 + 0x1f] = uVar7;\n            return arg1;\n        case 0x180002717:\n            *(arg1[-1] + arg3 + 0x17) = iVar10;\n            arg1[-1][arg3 + 0x1f] = uVar7;\n            return arg1;\n        case 0x180002720:\n            *(arg1[-1] + arg3 + 0x16) = iVar10;\n            *(arg1[-1] + arg3 + 0x1e) = uVar8;\n            return arg1;\n        case 0x18000272a:\n            *(arg1[-1] + arg3 + 0x18) = iVar10;\n            return arg1;\n        }\n    }\n    auVar11 = CONCAT88(iVar10, iVar10);\n    if (arg3 < 0x21) {\n        **arg1 = auVar11;\n        *(arg1[-1] + arg3 + 0x10) = auVar11;\n        return arg1;\n    }\n    pauVar2 = arg1;\n    if (*0x180021018 < 3) {\n        if ((arg3 <= *0x180021020) || ((*0x180022090 & 2) == 0)) {\n            iVar10 = (arg1 & 0xf) - 0x10;\n            pauVar4 = arg1 - iVar10;\n            arg3 = arg3 + iVar10;\n            if (0x80 < arg3) {\n                do {\n                    *pauVar4 = auVar11;\n                    pauVar4[1] = auVar11;\n                    pauVar4[2] = auVar11;\n                    pauVar4[3] = auVar11;\n                    pauVar4[4] = auVar11;\n                    pauVar4[5] = auVar11;\n                    pauVar4[6] = auVar11;\n                    pauVar4[7] = auVar11;\n                    pauVar4 = pauVar4[8];\n                    arg3 = arg3 - 0x80;\n                } while (0x7f < arg3);\n            }\n    // WARNING: Could not recover jumptable at 0x0001800029c8. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (9 cases) at 0x180025088\n            pauVar2 = (*(*((arg3 + 0xf >> 4) * 4 + 0x180025088) + 0x180000000))(pauVar4, uVar5 - iVar10);\n            return pauVar2;\n        }\n    }\n    else if (((arg3 <= *0x180021020) || (*0x180021028 < arg3)) || ((*0x180022090 & 2) == 0)) {\n        auVar12 = vinsertf128_avx(CONCAT1616(SUB3216(in_YMM0 >> 0x80, 0), auVar11), auVar11, 1);\n        iVar10 = (arg1 & 0x1f) - 0x20;\n        pauVar2 = arg1 - iVar10;\n        arg3 = arg3 + iVar10;\n        if (0x100 < arg3) {\n            if (*0x180021028 < arg3) {\n                do {\n                    uVar5 = arg3;\n                    pauVar3 = pauVar2;\n                    auVar1 = vmovntdq_avx(auVar12);\n                    *pauVar3 = auVar1;\n                    auVar1 = vmovntdq_avx(auVar12);\n                    pauVar3[1] = auVar1;\n                    auVar1 = vmovntdq_avx(auVar12);\n                    pauVar3[2] = auVar1;\n                    auVar1 = vmovntdq_avx(auVar12);\n                    pauVar3[3] = auVar1;\n                    auVar1 = vmovntdq_avx(auVar12);\n                    pauVar3[4] = auVar1;\n                    auVar1 = vmovntdq_avx(auVar12);\n                    pauVar3[5] = auVar1;\n                    auVar1 = vmovntdq_avx(auVar12);\n                    pauVar3[6] = auVar1;\n                    auVar1 = vmovntdq_avx(auVar12);\n                    pauVar3[7] = auVar1;\n                    pauVar2 = pauVar3[8];\n                    arg3 = uVar5 - 0x100;\n                } while (0xff < uVar5 - 0x100);\n                uVar6 = uVar5 - 0xe1 & 0xffffffffffffffe0;\n    // switch table (18 cases) at 0x180025064\n                switch(uVar5) {\n                case 0x1e1:\n                case 0x1e2:\n                case 0x1e3:\n                case 0x1e4:\n                case 0x1e5:\n                case 0x1e6:\n                case 0x1e7:\n                case 0x1e8:\n                case 0x1e9:\n                case 0x1ea:\n                case 0x1eb:\n                case 0x1ec:\n                case 0x1ed:\n                case 0x1ee:\n                case 0x1ef:\n                case 0x1f0:\n                case 0x1f1:\n                case 0x1f2:\n                case 499:\n                case 500:\n                case 0x1f5:\n                case 0x1f6:\n                case 0x1f7:\n                case 0x1f8:\n                case 0x1f9:\n                case 0x1fa:\n                case 0x1fb:\n                case 0x1fc:\n                case 0x1fd:\n                case 0x1fe:\n                case 0x1ff:\n                    auVar1 = vmovntdq_avx(auVar12);\n                    *(*pauVar3 + uVar6) = auVar1;\n                case 0x1c1:\n                case 0x1c2:\n                case 0x1c3:\n                case 0x1c4:\n                case 0x1c5:\n                case 0x1c6:\n                case 0x1c7:\n                case 0x1c8:\n                case 0x1c9:\n                case 0x1ca:\n                case 0x1cb:\n                case 0x1cc:\n                case 0x1cd:\n                case 0x1ce:\n                case 0x1cf:\n                case 0x1d0:\n                case 0x1d1:\n                case 0x1d2:\n                case 0x1d3:\n                case 0x1d4:\n                case 0x1d5:\n                case 0x1d6:\n                case 0x1d7:\n                case 0x1d8:\n                case 0x1d9:\n                case 0x1da:\n                case 0x1db:\n                case 0x1dc:\n                case 0x1dd:\n                case 0x1de:\n                case 0x1df:\n                case 0x1e0:\n                    auVar1 = vmovntdq_avx(auVar12);\n                    *(pauVar3[1] + uVar6) = auVar1;\n                case 0x1a1:\n                case 0x1a2:\n                case 0x1a3:\n                case 0x1a4:\n                case 0x1a5:\n                case 0x1a6:\n                case 0x1a7:\n                case 0x1a8:\n                case 0x1a9:\n                case 0x1aa:\n                case 0x1ab:\n                case 0x1ac:\n                case 0x1ad:\n                case 0x1ae:\n                case 0x1af:\n                case 0x1b0:\n                case 0x1b1:\n                case 0x1b2:\n                case 0x1b3:\n                case 0x1b4:\n                case 0x1b5:\n                case 0x1b6:\n                case 0x1b7:\n                case 0x1b8:\n                case 0x1b9:\n                case 0x1ba:\n                case 0x1bb:\n                case 0x1bc:\n                case 0x1bd:\n                case 0x1be:\n                case 0x1bf:\n                case 0x1c0:\n                    auVar1 = vmovntdq_avx(auVar12);\n                    *(pauVar3[2] + uVar6) = auVar1;\n                case 0x181:\n                case 0x182:\n                case 0x183:\n                case 0x184:\n                case 0x185:\n                case 0x186:\n                case 0x187:\n                case 0x188:\n                case 0x189:\n                case 0x18a:\n                case 0x18b:\n                case 0x18c:\n                case 0x18d:\n                case 0x18e:\n                case 399:\n                case 400:\n                case 0x191:\n                case 0x192:\n                case 0x193:\n                case 0x194:\n                case 0x195:\n                case 0x196:\n                case 0x197:\n                case 0x198:\n                case 0x199:\n                case 0x19a:\n                case 0x19b:\n                case 0x19c:\n                case 0x19d:\n                case 0x19e:\n                case 0x19f:\n                case 0x1a0:\n                    auVar1 = vmovntdq_avx(auVar12);\n                    *(pauVar3[3] + uVar6) = auVar1;\n                case 0x161:\n                case 0x162:\n                case 0x163:\n                case 0x164:\n                case 0x165:\n                case 0x166:\n                case 0x167:\n                case 0x168:\n                case 0x169:\n                case 0x16a:\n                case 0x16b:\n                case 0x16c:\n                case 0x16d:\n                case 0x16e:\n                case 0x16f:\n                case 0x170:\n                case 0x171:\n                case 0x172:\n                case 0x173:\n                case 0x174:\n                case 0x175:\n                case 0x176:\n                case 0x177:\n                case 0x178:\n                case 0x179:\n                case 0x17a:\n                case 0x17b:\n                case 0x17c:\n                case 0x17d:\n                case 0x17e:\n                case 0x17f:\n                case 0x180:\n                    auVar1 = vmovntdq_avx(auVar12);\n                    *(pauVar3[4] + uVar6) = auVar1;\n                case 0x141:\n                case 0x142:\n                case 0x143:\n                case 0x144:\n                case 0x145:\n                case 0x146:\n                case 0x147:\n                case 0x148:\n                case 0x149:\n                case 0x14a:\n                case 0x14b:\n                case 0x14c:\n                case 0x14d:\n                case 0x14e:\n                case 0x14f:\n                case 0x150:\n                case 0x151:\n                case 0x152:\n                case 0x153:\n                case 0x154:\n                case 0x155:\n                case 0x156:\n                case 0x157:\n                case 0x158:\n                case 0x159:\n                case 0x15a:\n                case 0x15b:\n                case 0x15c:\n                case 0x15d:\n                case 0x15e:\n                case 0x15f:\n                case 0x160:\n                    auVar1 = vmovntdq_avx(auVar12);\n                    *(pauVar3[5] + uVar6) = auVar1;\n                case 0x121:\n                case 0x122:\n                case 0x123:\n                case 0x124:\n                case 0x125:\n                case 0x126:\n                case 0x127:\n                case 0x128:\n                case 0x129:\n                case 0x12a:\n                case 299:\n                case 300:\n                case 0x12d:\n                case 0x12e:\n                case 0x12f:\n                case 0x130:\n                case 0x131:\n                case 0x132:\n                case 0x133:\n                case 0x134:\n                case 0x135:\n                case 0x136:\n                case 0x137:\n                case 0x138:\n                case 0x139:\n                case 0x13a:\n                case 0x13b:\n                case 0x13c:\n                case 0x13d:\n                case 0x13e:\n                case 0x13f:\n                case 0x140:\n                    auVar1 = vmovntdq_avx(auVar12);\n                    *(pauVar3[6] + uVar6) = auVar1;\n                default:\n                    auVar1 = vmovdqu_avx(auVar12);\n                    *(pauVar3[-1] + uVar5) = auVar1;\n                case 0x100:\n                    auVar12 = vmovdqu_avx(auVar12);\n                    *arg1 = auVar12;\n                    vzeroupper_avx();\n                    return arg1;\n                }\n            }\n            do {\n                *pauVar2 = auVar12;\n                pauVar2[1] = auVar12;\n                pauVar2[2] = auVar12;\n                pauVar2[3] = auVar12;\n                pauVar2[4] = auVar12;\n                pauVar2[5] = auVar12;\n                pauVar2[6] = auVar12;\n                pauVar2[7] = auVar12;\n                pauVar2 = pauVar2[8];\n                arg3 = arg3 - 0x100;\n            } while (0xff < arg3);\n        }\n    // WARNING: Could not recover jumptable at 0x000180002814. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (27 cases) at 0x180025040\n        pauVar2 = (*(*((arg3 + 0x1f >> 5) * 4 + 0x180025040) + 0x180000000))\n                            (SUB328(auVar12, 0), pauVar2, uVar5 - iVar10);\n        return pauVar2;\n    }\n    for (; arg3 != 0; arg3 = arg3 - 1) {\n        (*pauVar2)[0] = noname_1;\n        pauVar2 = *pauVar2 + 1;\n    }\n    return arg1;\n}\n",
        "token_count": 4141
    },
    "18000332": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_10h_2\n// WARNING: Variable defined which should be unmapped: var_bp_28h\n// WARNING: Variable defined which should be unmapped: var_bp_30h\n// WARNING: Variable defined which should be unmapped: var_bp_38h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180003328(int32_t *arg1, ulong arg2, ulong arg3, int32_t *arg4, ulong *noname_4, ulong noname_5, \n                  uint64_t noname_6, int32_t *noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11\n                  , ulong noname_12, ulong noname_13, ulong noname_14, ulong noname_15, ulong arg_90h, ulong arg_98h, \n                  ulong arg_a0h, ulong arg_a8h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    char cVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    ulong uVar10;\n    uint32_t uVar11;\n    ulong var_8h_2;\n    ulong var_10h;\n    uchar auStack360 [32];\n    ulong *puStack328;\n    ulong *puStack320;\n    ulong uStack312;\n    ulong uStack304;\n    uint64_t uStack296;\n    int32_t *piStack288;\n    char cStack280;\n    char cStack272;\n    char cStack264;\n    int32_t iStack260;\n    ulong uStack256;\n    int32_t *piStack248;\n    ulong uStack240;\n    int64_t iStack232;\n    uint64_t uStack224;\n    int64_t iStack216;\n    int32_t *piStack208;\n    int32_t iStack200;\n    int32_t iStack196;\n    int32_t iStack192;\n    uint32_t uStack188;\n    int32_t iStack184;\n    ulong *puStack176;\n    ulong uStack168;\n    uint uStack160;\n    uint uStack156;\n    uint32_t uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    ulong var_80h;\n    ulong var_bp_78h;\n    ulong var_70h;\n    ulong var_bp_68h;\n    ulong var_bp_60h;\n    ulong var_58h;\n    uint64_t var_bp_50h;\n    ulong var_48h;\n    ulong var_40h;\n    ulong var_bp_38h;\n    ulong var_bp_30h;\n    ulong var_bp_28h;\n    ulong var_10h_2;\n    ulong var_8h;\n    uint64_t uVar12;\n    \n    var_bp_50h = *0x180021010 ^ auStack360;\n    piStack208 = noname_7;\n    cStack264 = '\\0';\n    uStack256 = arg3;\n    uStack240 = arg2;\n    uVar6 = fcn.18000427c(arg2, arg4, noname_4);\n    if ((-2 < uVar6) && (uVar6 < *(noname_4 + 4))) {\n        if ((*arg1 == -0x1f928c9d) && (((arg1[6] == 4 && (arg1[8] + 0xe66cfae0U < 3)) && (*(arg1 + 0xc) == 0)))) {\n            iVar8 = fcn.180002d40();\n            if (*(iVar8 + 0x20) == 0) goto code_r0x000180003790;\n            iVar8 = fcn.180002d40();\n            arg1 = *(iVar8 + 0x20);\n            iVar8 = fcn.180002d40();\n            cStack264 = '\\x01';\n            arg3 = *(iVar8 + 0x28);\n            uStack256 = arg3;\n            fcn.180002448(*(arg1 + 0xe));\n            if (((*arg1 == -0x1f928c9d) && (arg1[6] == 4)) && ((arg1[8] + 0xe66cfae0U < 3 && (*(arg1 + 0xc) == 0))))\n            goto code_r0x0001800037f7;\n            iVar8 = fcn.180002d40();\n            if (*(iVar8 + 0x38) != 0) {\n                iVar8 = fcn.180002d40();\n                uVar10 = *(iVar8 + 0x38);\n                iVar8 = fcn.180002d40();\n                *(iVar8 + 0x38) = 0;\n                cVar5 = fcn.180004314(arg1, uVar10);\n                arg3 = uStack256;\n                if (cVar5 == '\\0') {\n                    cVar5 = fcn.180004404(uVar10);\n                    if (cVar5 != '\\0') {\n                        fcn.1800024e8(arg1);\n                        fcn.180003dd0(&var_bp_68h);\n                        fcn.180004a60(&var_bp_68h, 0x18001f880);\n                        pcVar3 = swi(3);\n                        (*pcVar3)();\n                        return;\n                    }\n                    fcn.180006de8();\n                    pcVar3 = swi(3);\n                    (*pcVar3)();\n                    return;\n                }\n            }\n        }\n        uStack168 = *(arg4 + 2);\n        puStack176 = noname_4;\n        if (((*arg1 == -0x1f928c9d) && (arg1[6] == 4)) && (arg1[8] + 0xe66cfae0U < 3)) {\n            if (*(noname_4 + 0xc) != 0) {\n                puStack320 = puStack320 & 0xffffffff00000000 | noname_6 & 0xffffffff;\n                puStack328 = noname_4;\n                fcn.180002134(&uStack144, &puStack176, uVar6, arg4);\n                uStack160 = uStack144;\n                uStack156 = uStack140;\n                uStack152 = var_80h;\n                uStack148 = var_80h._4_4_;\n                if (var_80h < var_70h) {\n                    iVar8 = CONCAT44(uStack140, uStack144);\n                    iStack232 = iVar8;\n                    do {\n                        uVar12 = 0;\n                        iVar9 = *(*CONCAT44(uStack156, uStack160) + 0x10) + var_80h * 0x14;\n                        piVar1 = iVar9 + *(iVar8 + 8);\n                        iStack200 = *piVar1;\n                        iStack196 = piVar1[1];\n                        iStack192 = piVar1[2];\n                        uVar4 = piVar1[3];\n                        iStack184 = *(iVar9 + 0x10 + *(iVar8 + 8));\n                        uStack188 = uVar4;\n                        if (((iStack200 <= uVar6) && (uVar6 <= iStack196)) &&\n                           (iStack216 = iStack184 + *(arg4 + 2),  arg2 = uStack240,  uVar4 != 0)) {\n                            do {\n                                puVar2 = iStack216 + uVar12 * 0x14;\n                                var_bp_68h._0_4_ = *puVar2;\n                                var_bp_68h._4_4_ = puVar2[1];\n                                var_bp_60h._0_4_ = puVar2[2];\n                                var_bp_60h._4_4_ = puVar2[3];\n                                var_58h._0_4_ = *(iStack216 + 0x10 + uVar12 * 0x14);\n                                iVar8 = fcn.18000241c();\n                                piStack248 = iVar8 + 4 + *(*(arg1 + 0xc) + 0xc);\n                                iVar8 = fcn.18000241c();\n                                iStack260 = *(iVar8 + *(*(arg1 + 0xc) + 0xc));\n                                arg2 = uStack240;\n                                iVar8 = iStack232;\n                                for (; uStack240 = arg2,  iStack232 = iVar8,  0 < iStack260; iStack260 = iStack260 + -1)\n                                {\n                                    iVar8 = fcn.18000241c();\n                                    uStack224 = iVar8 + *piStack248;\n                                    iVar7 = fcn.180003a1c(&var_bp_68h, uStack224, *(arg1 + 0xc));\n                                    arg2 = uStack240;\n                                    if (iVar7 != 0) {\n                                        cStack272 = noname_5;\n                                        cStack280 = cStack264;\n                                        piStack288 = piStack208;\n                                        uStack296 = uStack296 & 0xffffffff00000000 | noname_6 & 0xffffffff;\n                                        uStack304 = &iStack200;\n                                        uStack312 = uStack224;\n                                        puStack320 = &var_bp_68h;\n                                        puStack328 = noname_4;\n                                        fcn.180003254(arg1, uStack240, uStack256, arg4);\n                                        iVar8 = iStack232;\n                                        goto code_r0x00018000366b;\n                                    }\n                                    piStack248 = piStack248 + 1;\n                                    iVar8 = iStack232;\n                                }\n                                uVar11 = uVar12 + 1;\n                                uVar12 = uVar11;\n                            } while (uVar11 != uVar4);\n                        }\ncode_r0x00018000366b:\n                        var_80h._0_4_ = var_80h + 1;\n                    } while (var_80h < var_70h);\n                }\n            }\n            iVar8 = 0;\n            if ((0x19930520 < (*noname_4 & 0x1fffffff)) &&\n               (((*(noname_4 + 4) != 0 && (iVar9 = fcn.180002408(),  iVar9 + *(noname_4 + 4) != 0)) ||\n                (((*(noname_4 + 0x24) >> 2 & 1) != 0 && (cVar5 = fcn.180001fd8(arg4, noname_4),  cVar5 == '\\0')))))) {\n                if ((*(noname_4 + 0x24) >> 2 & 1) != 0) {\n                    iVar8 = fcn.180002d40();\n                    *(iVar8 + 0x20) = arg1;\n                    iVar8 = fcn.180002d40();\n                    *(iVar8 + 0x28) = uStack256;\n                    fcn.180006de8();\n                    pcVar3 = swi(3);\n                    (*pcVar3)();\n                    return;\n                }\n                if (*(noname_4 + 4) != 0) {\n                    iVar8 = fcn.180002408();\n                    iVar8 = iVar8 + *(noname_4 + 4);\n                }\n                cVar5 = fcn.180004314(arg1, iVar8);\n                if (cVar5 == '\\0') {\n                    uVar10 = fcn.180002068(arg2, arg4, noname_4, &uStack224);\n                    cStack280 = noname_5;\n                    uStack296 = 0;\n                    uStack304 = CONCAT44(uStack304._4_4_, 0xffffffff);\n                    uStack312 = CONCAT44(uStack312._4_4_, 0xffffffff);\n                    puStack320 = noname_4;\n                    puStack328 = NULL;\n                    piStack288 = arg4;\n                    fcn.180002274(arg2, arg1, uStack256, uVar10);\n                }\n            }\n        }\n        else if (*(noname_4 + 0xc) != 0) {\n            if (noname_5 != '\\0') goto code_r0x0001800037f7;\n            uStack304 = noname_7;\n            uStack312 = uStack312 & 0xffffffff00000000 | noname_6 & 0xffffffff;\n            puStack320 = puStack320 & 0xffffffff00000000 | uVar6;\n            puStack328 = noname_4;\n            fcn.180003800(arg1, arg2, arg3, arg4);\n        }\n        iVar8 = fcn.180002d40();\n        if (*(iVar8 + 0x38) == 0) {\ncode_r0x000180003790:\n            fcn.1800010b0(var_bp_50h ^ auStack360);\n            return;\n        }\n    }\ncode_r0x0001800037f7:\n    fcn.180006e28();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 2925
    },
    "180004b3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuchar (*) [32] fcn.180004b30(uchar (*arg1) [32], uchar (*arg2) [32], uint64_t arg3)\n\n{\n    uint *puVar1;\n    uchar uVar2;\n    ushort uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uchar (*pauVar15) [32];\n    uchar (*pauVar16) [32];\n    uchar (*pauVar17) [32];\n    uint *puVar18;\n    uint *puVar19;\n    uchar (*pauVar20) [32];\n    uint *puVar21;\n    uint64_t uVar22;\n    int64_t iVar23;\n    uint64_t uVar24;\n    uint uVar25;\n    uint uVar27;\n    uint uVar28;\n    uint uVar29;\n    uchar auVar26 [32];\n    uchar auVar30 [32];\n    uchar auVar31 [32];\n    uchar auVar32 [32];\n    uchar auVar33 [32];\n    uchar auVar34 [32];\n    \n    pauVar15 = arg1;\n    if (arg3 < 0x10) {\n    // switch table (16 cases) at 0x1800250b0\n        switch(*(arg3 * 4 + 0x1800250b0) + 0x180000000) {\n        case 0x180004b5e:\n            return pauVar15;\n        case 0x180004b60:\n            uVar4 = *(*arg2 + 8);\n            uVar3 = *(*arg2 + 0xc);\n            uVar2 = (*arg2)[0xe];\n            **arg1 = **arg2;\n            *(*arg1 + 8) = uVar4;\n            *(*arg1 + 0xc) = uVar3;\n            (*arg1)[0xe] = uVar2;\n            return pauVar15;\n        case 0x180004b80:\n            uVar3 = *(*arg2 + 8);\n            uVar2 = (*arg2)[10];\n            **arg1 = **arg2;\n            *(*arg1 + 8) = uVar3;\n            (*arg1)[10] = uVar2;\n            return pauVar15;\n        case 0x180004b98:\n            **arg1 = **arg2;\n            return pauVar15;\n        case 0x180004ba0:\n            uVar3 = *(*arg2 + 4);\n            uVar2 = (*arg2)[6];\n            **arg1 = **arg2;\n            *(*arg1 + 4) = uVar3;\n            (*arg1)[6] = uVar2;\n            return pauVar15;\n        case 0x180004bb8:\n            uVar4 = *(*arg2 + 8);\n            uVar3 = *(*arg2 + 0xc);\n            **arg1 = **arg2;\n            *(*arg1 + 8) = uVar4;\n            *(*arg1 + 0xc) = uVar3;\n            return pauVar15;\n        case 0x180004bcf:\n            uVar2 = (*arg2)[2];\n            **arg1 = **arg2;\n            (*arg1)[2] = uVar2;\n            return pauVar15;\n        case 0x180004be0:\n            uVar4 = *(*arg2 + 8);\n            uVar2 = (*arg2)[0xc];\n            **arg1 = **arg2;\n            *(*arg1 + 8) = uVar4;\n            (*arg1)[0xc] = uVar2;\n            return pauVar15;\n        case 0x180004bf6:\n            uVar3 = *(*arg2 + 8);\n            **arg1 = **arg2;\n            *(*arg1 + 8) = uVar3;\n            return pauVar15;\n        case 0x180004c05:\n            uVar2 = (*arg2)[8];\n            **arg1 = **arg2;\n            (*arg1)[8] = uVar2;\n            return pauVar15;\n        case 0x180004c13:\n            uVar4 = *(*arg2 + 8);\n            **arg1 = **arg2;\n            *(*arg1 + 8) = uVar4;\n            return pauVar15;\n        case 0x180004c20:\n            uVar3 = *(*arg2 + 4);\n            **arg1 = **arg2;\n            *(*arg1 + 4) = uVar3;\n            return pauVar15;\n        case 0x180004c2f:\n            uVar2 = (*arg2)[4];\n            **arg1 = **arg2;\n            (*arg1)[4] = uVar2;\n            return pauVar15;\n        case 0x180004c3d:\n            **arg1 = **arg2;\n            return pauVar15;\n        case 0x180004c44:\n            (*arg1)[0] = (*arg2)[0];\n            return pauVar15;\n        case 0x180004c4a:\n            **arg1 = **arg2;\n            return pauVar15;\n        }\n    }\n    if (arg3 < 0x21) {\n        uVar4 = *(*arg2 + 4);\n        uVar5 = *(*arg2 + 8);\n        uVar6 = *(*arg2 + 0xc);\n        puVar18 = arg2[-1] + arg3 + 0x10;\n        uVar25 = *puVar18;\n        uVar27 = puVar18[1];\n        uVar28 = puVar18[2];\n        uVar29 = puVar18[3];\n        **arg1 = **arg2;\n        *(*arg1 + 4) = uVar4;\n        *(*arg1 + 8) = uVar5;\n        *(*arg1 + 0xc) = uVar6;\n        puVar18 = arg1[-1] + arg3 + 0x10;\n        *puVar18 = uVar25;\n        puVar18[1] = uVar27;\n        puVar18[2] = uVar28;\n        puVar18[3] = uVar29;\n        return pauVar15;\n    }\n    if ((arg2 < arg1) && (arg1 < *arg2 + arg3)) {\n        iVar23 = arg2 - arg1;\n        puVar18 = arg1 + iVar23 + (arg3 - 0x10);\n        uVar4 = puVar18[1];\n        uVar5 = puVar18[2];\n        uVar6 = puVar18[3];\n        puVar19 = arg1[-1] + arg3 + 0x10;\n        uVar22 = arg3 - 0x10;\n        puVar21 = puVar19;\n        uVar25 = *puVar18;\n        uVar27 = uVar4;\n        uVar28 = uVar5;\n        uVar29 = uVar6;\n        if ((puVar19 & 0xf) != 0) {\n            puVar21 = puVar19 & 0xfffffffffffffff0;\n            puVar1 = puVar21 + iVar23;\n            uVar25 = *puVar1;\n            uVar27 = puVar1[1];\n            uVar28 = puVar1[2];\n            uVar29 = puVar1[3];\n            *puVar19 = *puVar18;\n            *(arg1[-1] + arg3 + 0x14) = uVar4;\n            *(arg1[-1] + arg3 + 0x18) = uVar5;\n            *(arg1[-1] + arg3 + 0x1c) = uVar6;\n            uVar22 = puVar21 - arg1;\n        }\n        uVar24 = uVar22 >> 7;\n        if (uVar24 != 0) {\n            *puVar21 = uVar25;\n            puVar21[1] = uVar27;\n            puVar21[2] = uVar28;\n            puVar21[3] = uVar29;\n            puVar18 = puVar21;\n            while( true ) {\n                puVar19 = puVar18 + iVar23 + -0x10;\n                uVar4 = puVar19[1];\n                uVar5 = puVar19[2];\n                uVar6 = puVar19[3];\n                puVar21 = puVar18 + iVar23 + -0x20;\n                uVar25 = *puVar21;\n                uVar27 = puVar21[1];\n                uVar28 = puVar21[2];\n                uVar29 = puVar21[3];\n                puVar21 = puVar18 + -0x20;\n                puVar18[-4] = *puVar19;\n                puVar18[-3] = uVar4;\n                puVar18[-2] = uVar5;\n                puVar18[-1] = uVar6;\n                puVar18[-8] = uVar25;\n                puVar18[-7] = uVar27;\n                puVar18[-6] = uVar28;\n                puVar18[-5] = uVar29;\n                puVar19 = puVar18 + iVar23 + -0x30;\n                uVar4 = puVar19[1];\n                uVar5 = puVar19[2];\n                uVar6 = puVar19[3];\n                puVar1 = puVar18 + iVar23 + -0x40;\n                uVar25 = *puVar1;\n                uVar27 = puVar1[1];\n                uVar28 = puVar1[2];\n                uVar29 = puVar1[3];\n                uVar24 = uVar24 - 1;\n                puVar18[-0xc] = *puVar19;\n                puVar18[-0xb] = uVar4;\n                puVar18[-10] = uVar5;\n                puVar18[-9] = uVar6;\n                puVar18[-0x10] = uVar25;\n                puVar18[-0xf] = uVar27;\n                puVar18[-0xe] = uVar28;\n                puVar18[-0xd] = uVar29;\n                puVar19 = puVar18 + iVar23 + -0x50;\n                uVar4 = puVar19[1];\n                uVar5 = puVar19[2];\n                uVar6 = puVar19[3];\n                puVar1 = puVar18 + iVar23 + -0x60;\n                uVar25 = *puVar1;\n                uVar27 = puVar1[1];\n                uVar28 = puVar1[2];\n                uVar29 = puVar1[3];\n                puVar18[-0x14] = *puVar19;\n                puVar18[-0x13] = uVar4;\n                puVar18[-0x12] = uVar5;\n                puVar18[-0x11] = uVar6;\n                puVar18[-0x18] = uVar25;\n                puVar18[-0x17] = uVar27;\n                puVar18[-0x16] = uVar28;\n                puVar18[-0x15] = uVar29;\n                puVar1 = puVar18 + iVar23 + -0x70;\n                uVar4 = puVar1[1];\n                uVar5 = puVar1[2];\n                uVar6 = puVar1[3];\n                puVar19 = puVar21 + iVar23;\n                uVar25 = *puVar19;\n                uVar27 = puVar19[1];\n                uVar28 = puVar19[2];\n                uVar29 = puVar19[3];\n                if (uVar24 == 0) break;\n                puVar18[-0x1c] = *puVar1;\n                puVar18[-0x1b] = uVar4;\n                puVar18[-0x1a] = uVar5;\n                puVar18[-0x19] = uVar6;\n                *puVar21 = uVar25;\n                puVar18[-0x1f] = uVar27;\n                puVar18[-0x1e] = uVar28;\n                puVar18[-0x1d] = uVar29;\n                puVar18 = puVar21;\n            }\n            puVar18[-0x1c] = *puVar1;\n            puVar18[-0x1b] = uVar4;\n            puVar18[-0x1a] = uVar5;\n            puVar18[-0x19] = uVar6;\n            uVar22 = uVar22 & 0x7f;\n        }\n        for (uVar24 = uVar22 >> 4; uVar24 != 0; uVar24 = uVar24 - 1) {\n            *puVar21 = uVar25;\n            puVar21[1] = uVar27;\n            puVar21[2] = uVar28;\n            puVar21[3] = uVar29;\n            puVar21 = puVar21 + -4;\n            puVar18 = puVar21 + iVar23;\n            uVar25 = *puVar18;\n            uVar27 = puVar18[1];\n            uVar28 = puVar18[2];\n            uVar29 = puVar18[3];\n        }\n        if ((uVar22 & 0xf) != 0) {\n            uVar4 = *(*arg2 + 4);\n            uVar5 = *(*arg2 + 8);\n            uVar6 = *(*arg2 + 0xc);\n            **arg1 = **arg2;\n            *(*arg1 + 4) = uVar4;\n            *(*arg1 + 8) = uVar5;\n            *(*arg1 + 0xc) = uVar6;\n        }\n        *puVar21 = uVar25;\n        puVar21[1] = uVar27;\n        puVar21[2] = uVar28;\n        puVar21[3] = uVar29;\n        return arg1;\n    }\n    if (*0x180021018 < 3) {\n        if ((arg3 < 0x801) || ((*0x180022090 & 2) == 0)) {\n            if (0x80 < arg3) {\n                iVar23 = (arg1 & 0xf) - 0x10;\n                puVar18 = arg1 - iVar23;\n                puVar21 = arg2 - iVar23;\n                arg3 = arg3 + iVar23;\n                if (0x80 < arg3) {\n                    do {\n                        uVar4 = puVar21[1];\n                        uVar5 = puVar21[2];\n                        uVar6 = puVar21[3];\n                        uVar25 = puVar21[4];\n                        uVar27 = puVar21[5];\n                        uVar28 = puVar21[6];\n                        uVar29 = puVar21[7];\n                        uVar7 = puVar21[8];\n                        uVar8 = puVar21[9];\n                        uVar9 = puVar21[10];\n                        uVar10 = puVar21[0xb];\n                        uVar11 = puVar21[0xc];\n                        uVar12 = puVar21[0xd];\n                        uVar13 = puVar21[0xe];\n                        uVar14 = puVar21[0xf];\n                        *puVar18 = *puVar21;\n                        puVar18[1] = uVar4;\n                        puVar18[2] = uVar5;\n                        puVar18[3] = uVar6;\n                        puVar18[4] = uVar25;\n                        puVar18[5] = uVar27;\n                        puVar18[6] = uVar28;\n                        puVar18[7] = uVar29;\n                        puVar18[8] = uVar7;\n                        puVar18[9] = uVar8;\n                        puVar18[10] = uVar9;\n                        puVar18[0xb] = uVar10;\n                        puVar18[0xc] = uVar11;\n                        puVar18[0xd] = uVar12;\n                        puVar18[0xe] = uVar13;\n                        puVar18[0xf] = uVar14;\n                        uVar4 = puVar21[0x11];\n                        uVar5 = puVar21[0x12];\n                        uVar6 = puVar21[0x13];\n                        uVar25 = puVar21[0x14];\n                        uVar27 = puVar21[0x15];\n                        uVar28 = puVar21[0x16];\n                        uVar29 = puVar21[0x17];\n                        uVar7 = puVar21[0x18];\n                        uVar8 = puVar21[0x19];\n                        uVar9 = puVar21[0x1a];\n                        uVar10 = puVar21[0x1b];\n                        uVar11 = puVar21[0x1c];\n                        uVar12 = puVar21[0x1d];\n                        uVar13 = puVar21[0x1e];\n                        uVar14 = puVar21[0x1f];\n                        puVar18[0x10] = puVar21[0x10];\n                        puVar18[0x11] = uVar4;\n                        puVar18[0x12] = uVar5;\n                        puVar18[0x13] = uVar6;\n                        puVar18[0x14] = uVar25;\n                        puVar18[0x15] = uVar27;\n                        puVar18[0x16] = uVar28;\n                        puVar18[0x17] = uVar29;\n                        puVar18[0x18] = uVar7;\n                        puVar18[0x19] = uVar8;\n                        puVar18[0x1a] = uVar9;\n                        puVar18[0x1b] = uVar10;\n                        puVar18[0x1c] = uVar11;\n                        puVar18[0x1d] = uVar12;\n                        puVar18[0x1e] = uVar13;\n                        puVar18[0x1f] = uVar14;\n                        puVar18 = puVar18 + 0x20;\n                        puVar21 = puVar21 + 0x20;\n                        arg3 = arg3 - 0x80;\n                    } while (0x7f < arg3);\n                }\n            }\n    // WARNING: Could not recover jumptable at 0x000180005046. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (9 cases) at 0x180025138\n            pauVar15 = (*(*((arg3 + 0xf >> 4) * 4 + 0x180025138) + 0x180000000))();\n            return pauVar15;\n        }\n    }\n    else if (((arg3 < 0x2001) || (0x180000 < arg3)) || ((*0x180022090 & 2) == 0)) {\n        auVar26 = vmovdqu_avx(*arg2);\n        auVar34 = vmovdqu_avx(*(arg2[-1] + arg3));\n        if (0x100 < arg3) {\n            iVar23 = (arg1 & 0x1f) - 0x20;\n            pauVar16 = arg1 - iVar23;\n            arg2 = arg2 - iVar23;\n            arg3 = arg3 + iVar23;\n            if (0x100 < arg3) {\n                if (0x180000 < arg3) {\n                    do {\n                        uVar22 = arg3;\n                        pauVar20 = arg2;\n                        pauVar17 = pauVar16;\n                        auVar30 = vmovdqu_avx(*pauVar20);\n                        auVar31 = vmovdqu_avx(pauVar20[1]);\n                        auVar32 = vmovdqu_avx(pauVar20[2]);\n                        auVar33 = vmovdqu_avx(pauVar20[3]);\n                        auVar30 = vmovntdq_avx(auVar30);\n                        *pauVar17 = auVar30;\n                        auVar30 = vmovntdq_avx(auVar31);\n                        pauVar17[1] = auVar30;\n                        auVar30 = vmovntdq_avx(auVar32);\n                        pauVar17[2] = auVar30;\n                        auVar30 = vmovntdq_avx(auVar33);\n                        pauVar17[3] = auVar30;\n                        auVar30 = vmovdqu_avx(pauVar20[4]);\n                        auVar31 = vmovdqu_avx(pauVar20[5]);\n                        auVar32 = vmovdqu_avx(pauVar20[6]);\n                        auVar33 = vmovdqu_avx(pauVar20[7]);\n                        auVar30 = vmovntdq_avx(auVar30);\n                        pauVar17[4] = auVar30;\n                        auVar30 = vmovntdq_avx(auVar31);\n                        pauVar17[5] = auVar30;\n                        auVar30 = vmovntdq_avx(auVar32);\n                        pauVar17[6] = auVar30;\n                        auVar30 = vmovntdq_avx(auVar33);\n                        pauVar17[7] = auVar30;\n                        pauVar16 = pauVar17[8];\n                        arg2 = pauVar20[8];\n                        arg3 = uVar22 - 0x100;\n                    } while (0xff < uVar22 - 0x100);\n                    uVar24 = uVar22 - 0xe1 & 0xffffffffffffffe0;\n    // switch table (18 cases) at 0x180025114\n                    switch(uVar22) {\n                    case 0x1e1:\n                    case 0x1e2:\n                    case 0x1e3:\n                    case 0x1e4:\n                    case 0x1e5:\n                    case 0x1e6:\n                    case 0x1e7:\n                    case 0x1e8:\n                    case 0x1e9:\n                    case 0x1ea:\n                    case 0x1eb:\n                    case 0x1ec:\n                    case 0x1ed:\n                    case 0x1ee:\n                    case 0x1ef:\n                    case 0x1f0:\n                    case 0x1f1:\n                    case 0x1f2:\n                    case 499:\n                    case 500:\n                    case 0x1f5:\n                    case 0x1f6:\n                    case 0x1f7:\n                    case 0x1f8:\n                    case 0x1f9:\n                    case 0x1fa:\n                    case 0x1fb:\n                    case 0x1fc:\n                    case 0x1fd:\n                    case 0x1fe:\n                    case 0x1ff:\n                        auVar30 = vmovdqu_avx(*(*pauVar20 + uVar24));\n                        auVar30 = vmovntdq_avx(auVar30);\n                        *(*pauVar17 + uVar24) = auVar30;\n                    case 0x1c1:\n                    case 0x1c2:\n                    case 0x1c3:\n                    case 0x1c4:\n                    case 0x1c5:\n                    case 0x1c6:\n                    case 0x1c7:\n                    case 0x1c8:\n                    case 0x1c9:\n                    case 0x1ca:\n                    case 0x1cb:\n                    case 0x1cc:\n                    case 0x1cd:\n                    case 0x1ce:\n                    case 0x1cf:\n                    case 0x1d0:\n                    case 0x1d1:\n                    case 0x1d2:\n                    case 0x1d3:\n                    case 0x1d4:\n                    case 0x1d5:\n                    case 0x1d6:\n                    case 0x1d7:\n                    case 0x1d8:\n                    case 0x1d9:\n                    case 0x1da:\n                    case 0x1db:\n                    case 0x1dc:\n                    case 0x1dd:\n                    case 0x1de:\n                    case 0x1df:\n                    case 0x1e0:\n                        auVar30 = vmovdqu_avx(*(pauVar20[1] + uVar24));\n                        auVar30 = vmovntdq_avx(auVar30);\n                        *(pauVar17[1] + uVar24) = auVar30;\n                    case 0x1a1:\n                    case 0x1a2:\n                    case 0x1a3:\n                    case 0x1a4:\n                    case 0x1a5:\n                    case 0x1a6:\n                    case 0x1a7:\n                    case 0x1a8:\n                    case 0x1a9:\n                    case 0x1aa:\n                    case 0x1ab:\n                    case 0x1ac:\n                    case 0x1ad:\n                    case 0x1ae:\n                    case 0x1af:\n                    case 0x1b0:\n                    case 0x1b1:\n                    case 0x1b2:\n                    case 0x1b3:\n                    case 0x1b4:\n                    case 0x1b5:\n                    case 0x1b6:\n                    case 0x1b7:\n                    case 0x1b8:\n                    case 0x1b9:\n                    case 0x1ba:\n                    case 0x1bb:\n                    case 0x1bc:\n                    case 0x1bd:\n                    case 0x1be:\n                    case 0x1bf:\n                    case 0x1c0:\n                        auVar30 = vmovdqu_avx(*(pauVar20[2] + uVar24));\n                        auVar30 = vmovntdq_avx(auVar30);\n                        *(pauVar17[2] + uVar24) = auVar30;\n                    case 0x181:\n                    case 0x182:\n                    case 0x183:\n                    case 0x184:\n                    case 0x185:\n                    case 0x186:\n                    case 0x187:\n                    case 0x188:\n                    case 0x189:\n                    case 0x18a:\n                    case 0x18b:\n                    case 0x18c:\n                    case 0x18d:\n                    case 0x18e:\n                    case 399:\n                    case 400:\n                    case 0x191:\n                    case 0x192:\n                    case 0x193:\n                    case 0x194:\n                    case 0x195:\n                    case 0x196:\n                    case 0x197:\n                    case 0x198:\n                    case 0x199:\n                    case 0x19a:\n                    case 0x19b:\n                    case 0x19c:\n                    case 0x19d:\n                    case 0x19e:\n                    case 0x19f:\n                    case 0x1a0:\n                        auVar30 = vmovdqu_avx(*(pauVar20[3] + uVar24));\n                        auVar30 = vmovntdq_avx(auVar30);\n                        *(pauVar17[3] + uVar24) = auVar30;\n                    case 0x161:\n                    case 0x162:\n                    case 0x163:\n                    case 0x164:\n                    case 0x165:\n                    case 0x166:\n                    case 0x167:\n                    case 0x168:\n                    case 0x169:\n                    case 0x16a:\n                    case 0x16b:\n                    case 0x16c:\n                    case 0x16d:\n                    case 0x16e:\n                    case 0x16f:\n                    case 0x170:\n                    case 0x171:\n                    case 0x172:\n                    case 0x173:\n                    case 0x174:\n                    case 0x175:\n                    case 0x176:\n                    case 0x177:\n                    case 0x178:\n                    case 0x179:\n                    case 0x17a:\n                    case 0x17b:\n                    case 0x17c:\n                    case 0x17d:\n                    case 0x17e:\n                    case 0x17f:\n                    case 0x180:\n                        auVar30 = vmovdqu_avx(*(pauVar20[4] + uVar24));\n                        auVar30 = vmovntdq_avx(auVar30);\n                        *(pauVar17[4] + uVar24) = auVar30;\n                    case 0x141:\n                    case 0x142:\n                    case 0x143:\n                    case 0x144:\n                    case 0x145:\n                    case 0x146:\n                    case 0x147:\n                    case 0x148:\n                    case 0x149:\n                    case 0x14a:\n                    case 0x14b:\n                    case 0x14c:\n                    case 0x14d:\n                    case 0x14e:\n                    case 0x14f:\n                    case 0x150:\n                    case 0x151:\n                    case 0x152:\n                    case 0x153:\n                    case 0x154:\n                    case 0x155:\n                    case 0x156:\n                    case 0x157:\n                    case 0x158:\n                    case 0x159:\n                    case 0x15a:\n                    case 0x15b:\n                    case 0x15c:\n                    case 0x15d:\n                    case 0x15e:\n                    case 0x15f:\n                    case 0x160:\n                        auVar30 = vmovdqu_avx(*(pauVar20[5] + uVar24));\n                        auVar30 = vmovntdq_avx(auVar30);\n                        *(pauVar17[5] + uVar24) = auVar30;\n                    case 0x121:\n                    case 0x122:\n                    case 0x123:\n                    case 0x124:\n                    case 0x125:\n                    case 0x126:\n                    case 0x127:\n                    case 0x128:\n                    case 0x129:\n                    case 0x12a:\n                    case 299:\n                    case 300:\n                    case 0x12d:\n                    case 0x12e:\n                    case 0x12f:\n                    case 0x130:\n                    case 0x131:\n                    case 0x132:\n                    case 0x133:\n                    case 0x134:\n                    case 0x135:\n                    case 0x136:\n                    case 0x137:\n                    case 0x138:\n                    case 0x139:\n                    case 0x13a:\n                    case 0x13b:\n                    case 0x13c:\n                    case 0x13d:\n                    case 0x13e:\n                    case 0x13f:\n                    case 0x140:\n                        auVar30 = vmovdqu_avx(*(pauVar20[6] + uVar24));\n                        auVar30 = vmovntdq_avx(auVar30);\n                        *(pauVar17[6] + uVar24) = auVar30;\n                    default:\n                        auVar34 = vmovdqu_avx(auVar34);\n                        *(pauVar17[-1] + uVar22) = auVar34;\n                    case 0x100:\n                        auVar26 = vmovdqu_avx(auVar26);\n                        *arg1 = auVar26;\n                        vzeroupper_avx();\n                        return pauVar15;\n                    }\n                }\n                do {\n                    auVar34 = vmovdqu_avx(*arg2);\n                    auVar30 = vmovdqu_avx(arg2[1]);\n                    auVar31 = vmovdqu_avx(arg2[2]);\n                    auVar32 = vmovdqu_avx(arg2[3]);\n                    *pauVar16 = auVar34;\n                    pauVar16[1] = auVar30;\n                    pauVar16[2] = auVar31;\n                    pauVar16[3] = auVar32;\n                    auVar34 = vmovdqu_avx(arg2[4]);\n                    auVar30 = vmovdqu_avx(arg2[5]);\n                    auVar31 = vmovdqu_avx(arg2[6]);\n                    auVar32 = vmovdqu_avx(arg2[7]);\n                    pauVar16[4] = auVar34;\n                    pauVar16[5] = auVar30;\n                    pauVar16[6] = auVar31;\n                    pauVar16[7] = auVar32;\n                    pauVar16 = pauVar16[8];\n                    arg2 = arg2[8];\n                    arg3 = arg3 - 0x100;\n                } while (0xff < arg3);\n            }\n        }\n    // WARNING: Could not recover jumptable at 0x000180004da2. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (27 cases) at 0x1800250f0\n        pauVar15 = (*(*((arg3 + 0x1f >> 5) * 4 + 0x1800250f0) + 0x180000000))(SUB328(auVar26, 0));\n        return pauVar15;\n    }\n    for (; arg3 != 0; arg3 = arg3 - 1) {\n        (*arg1)[0] = (*arg2)[0];\n        arg2 = *arg2 + 1;\n        arg1 = *arg1 + 1;\n    }\n    return pauVar15;\n}\n",
        "token_count": 7527
    },
    "180005f1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.180005f1c(int32_t **arg1)\n\n{\n    ulong arg1_00;\n    \n    if (*0x180022240 != '\\0') {\n        return;\n    }\n    *0x180022230 = 1;\n    if (**arg1 == 0) {\n        if (*0x180022238 != *0x180021010) {\n            (**0x180016378)(0, 0, 0);\n        }\n        arg1_00 = 0x180022378;\n    }\n    else {\n        if (**arg1 != 1) goto code_r0x000180005f96;\n        arg1_00 = 0x180022390;\n    }\n    fcn.180006af8(arg1_00);\ncode_r0x000180005f96:\n    if (**arg1 == 0) {\n        fcn.180006d5c(0x1800163e0, 0x180016400);\n    }\n    fcn.180006d5c(0x180016408, 0x180016410);\n    if (*arg1[1] == 0) {\n        *0x180022240 = '\\x01';\n        *arg1[2] = 1;\n    }\n    return;\n}\n",
        "token_count": 278
    },
    "1800060e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.1800060e4(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.180008204();\n    if (iVar1 == 1) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.1800081d0();\n        uVar2 = uVar2 & 0xffffff00 | uVar2 == '\\0';\n    }\n    return uVar2;\n}\n",
        "token_count": 109
    },
    "18000618": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00018000600d)\n// WARNING: Removing unreachable block (ram,0x00018000601a)\n// WARNING: Removing unreachable block (ram,0x000180006024)\n// WARNING: Removing unreachable block (ram,0x000180006033)\n// WARNING: Removing unreachable block (ram,0x00018000603e)\n// WARNING: Removing unreachable block (ram,0x000180006047)\n// WARNING: Removing unreachable block (ram,0x000180006050)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180006180(void)\n\n{\n    code *pcVar1;\n    uint auStackX16 [2];\n    int32_t aiStackX24 [2];\n    ulong var_28h;\n    uchar var_30h [4];\n    ulong var_2ch;\n    ulong var_20h;\n    uint *var_bp_18h;\n    int32_t *var_bp_10h;\n    ulong *var_8h;\n    \n    aiStackX24[0] = 1;\n    auStackX16[0] = 0;\n    var_20h = 0xfffffffffffffffe;\n    var_28h._0_1_ = 0;\n    var_bp_18h = auStackX16;\n    var_bp_10h = aiStackX24;\n    var_8h = &var_28h;\n    var_2ch._0_4_ = 2;\n    var_2ch._4_4_ = 2;\n    fcn.180005ee4(var_30h, &var_2ch + 4, &var_bp_18h, &var_2ch);\n    if (aiStackX24[0] == 0) {\n        fcn.1800060b0(0);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 423
    },
    "1800065c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.1800065c8(char *arg1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t *arg1_00;\n    int64_t *piVar4;\n    char cVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    char *pcVar8;\n    \n    cVar5 = *arg1;\n    iVar6 = 0;\n    pcVar8 = arg1;\n    while (cVar5 != '\\0') {\n        iVar7 = iVar6 + 1;\n        if (cVar5 == '=') {\n            iVar7 = iVar6;\n        }\n        iVar6 = -1;\n        do {\n            iVar3 = iVar6;\n            iVar6 = iVar3 + 1;\n        } while (pcVar8[iVar6] != '\\0');\n        pcVar8 = pcVar8 + iVar3 + 2;\n        iVar6 = iVar7;\n        cVar5 = *pcVar8;\n    }\n    arg1_00 = fcn.180008714(iVar6 + 1, 8);\n    piVar4 = arg1_00;\n    if (arg1_00 == NULL) {\ncode_r0x00018000662b:\n        fcn.18000878c(0);\n        arg1_00 = NULL;\n    }\n    else {\n        for (; *arg1 != '\\0'; arg1 = arg1 + iVar7) {\n            iVar6 = -1;\n            do {\n                iVar7 = iVar6;\n                iVar6 = iVar7 + 1;\n            } while (arg1[iVar6] != '\\0');\n            iVar7 = iVar7 + 2;\n            if (*arg1 != '=') {\n                iVar6 = fcn.180008714(iVar7, 1);\n                if (iVar6 == 0) {\n                    fcn.1800066d8(arg1_00);\n                    fcn.18000878c(0);\n                    goto code_r0x00018000662b;\n                }\n                iVar2 = fcn.180006e88(iVar6, iVar7, arg1);\n                if (iVar2 != 0) {\n                    fcn.1800085d8(0, 0, 0, 0, 0);\n                    pcVar1 = swi(3);\n                    piVar4 = (*pcVar1)();\n                    return piVar4;\n                }\n                *piVar4 = iVar6;\n                piVar4 = piVar4 + 1;\n                fcn.18000878c(0);\n            }\n        }\n        fcn.18000878c(0);\n    }\n    return arg1_00;\n}\n",
        "token_count": 588
    },
    "180006cd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.180006cdc(void)\n\n{\n    char cVar1;\n    ulong uVar2;\n    int64_t *piVar3;\n    bool bVar4;\n    \n    piVar3 = 0x1800177e0;\n    do {\n        if ((*piVar3 != 0) && (cVar1 = (**0x180016378)(),  cVar1 == '\\0')) break;\n        piVar3 = piVar3 + 2;\n    } while (piVar3 != 0x1800178e0);\n    if (piVar3 == 0x1800178e0) {\n        uVar2 = 1;\n    }\n    else {\n        if (piVar3 != 0x1800177e0) {\n            piVar3 = piVar3 + -1;\n            do {\n                if ((piVar3[-1] != 0) && (*piVar3 != 0)) {\n                    (**0x180016378)(0);\n                }\n                bVar4 = piVar3 != 0x1800177e8;\n                piVar3 = piVar3 + -2;\n            } while (bVar4);\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 273
    },
    "180006ef": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.180006ef0(int64_t *arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    uint auStackX8 [2];\n    \n    if (*arg1 == 0) {\n        auStackX8[0] = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (*(arg1 + 2) == '\\0') {\n            iVar2 = 0;\n            *(arg1 + 2) = 1;\n            arg1[1] = 0;\n        }\n        else {\n            iVar2 = arg1[1];\n        }\n        iVar2 = fcn.180007ff8(auStackX8, iVar2);\n        *arg1 = iVar2;\n        (*_sym.imp.KERNEL32.dll_SetLastError)(auStackX8[0]);\n        if (iVar2 == 0) {\n            fcn.180006e28();\n            pcVar1 = swi(3);\n            iVar2 = (*pcVar1)();\n            return iVar2;\n        }\n    }\n    return *arg1;\n}\n",
        "token_count": 233
    },
    "1800078b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.1800078b8(ulong arg1, ulong arg2, ulong ***arg3, ulong arg4)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint32_t in_stack_00000028;\n    uint32_t in_stack_00000030;\n    ulong in_stack_00000040;\n    int32_t in_stack_00000048;\n    uchar auStack264 [32];\n    uchar *puStack232;\n    ulong ***pppuStack224;\n    ulong uStack216;\n    ulong ***pppuStack200;\n    ulong uStack192;\n    uchar auStack184 [48];\n    ulong uStack136;\n    uint32_t uStack120;\n    uint64_t uStack72;\n    \n    uStack72 = *0x180021010 ^ auStack264;\n    uStack192 = fcn.18000bbd0(0x1f80, 0xffc0);\n    pppuStack200 = arg3;\n    iVar2 = fcn.1800077fc(in_stack_00000028, uStack192);\n    uVar3 = in_stack_00000040;\n    uVar4 = in_stack_00000040 >> 0x20;\n    if (iVar2 == 0) {\n        if (in_stack_00000048 == 2) {\n            uStack136 = in_stack_00000040;\n            uStack120 = uStack120 & 0xffffffe3 | 3;\n        }\n        pppuStack224 = &pppuStack200;\n        puStack232 = &stack0x00000038;\n        fcn.18000b850(auStack184, &uStack192, in_stack_00000028, arg2);\n    }\n    cVar1 = fcn.18000af84();\n    if ((cVar1 == '\\0') || (arg4 == 0)) {\n        fcn.18000bb80(arg4);\n        fcn.18000bbd0(uStack192, 0xffc0);\n    }\n    else {\n        uStack216 = uStack192;\n        pppuStack224 = pppuStack200;\n        puStack232 = CONCAT44(uVar4, uVar3);\n        fcn.180007794(arg4, in_stack_00000030, arg1);\n    }\n    fcn.1800010b0(uStack72 ^ auStack264);\n    return;\n}\n",
        "token_count": 532
    },
    "18000820": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.180008204(void)\n\n{\n    char cVar1;\n    int32_t aiStackX8 [8];\n    \n    aiStackX8[0] = 0;\n    cVar1 = fcn.1800081ec();\n    if (cVar1 == '\\0') {\n        fcn.18000a598(aiStackX8);\n    }\n    return aiStackX8[0] != 1;\n}\n",
        "token_count": 94
    },
    "18000845": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180008450(ulong noname_0, ulong noname_1, ulong noname_2, ulong noname_3, ulong arg_30h)\n\n{\n    int64_t iVar1;\n    int64_t var_40h;\n    ulong var_30h;\n    ulong var_bp_28h;\n    uint uStack40;\n    uint uStack36;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_bp_8h;\n    \n    var_40h = 0;\n    var_18h._0_1_ = *0x180022c58 == 0;\n    var_30h._0_1_ = 0;\n    var_10h._0_1_ = '\\0';\n    var_bp_8h._0_1_ = '\\0';\n    if (var_18h) {\n        var_bp_28h._0_4_ = *0x1800216f8;\n        var_bp_28h._4_4_ = *0x1800216fc;\n        uStack40 = *0x180021700;\n        uStack36 = *0x180021704;\n    }\n    fcn.1800084ec(noname_0, noname_1, noname_2, noname_3);\n    if (var_18h == '\\x02') {\n        *(var_40h + 0x3a8) = *(var_40h + 0x3a8) & 0xfffffffd;\n    }\n    if (var_10h != '\\0') {\n        iVar1 = fcn.180006ef0(&var_40h);\n        *(iVar1 + 0x20) = var_18h._4_4_;\n    }\n    if (var_bp_8h != '\\0') {\n        iVar1 = fcn.180006ef0(&var_40h);\n        *(iVar1 + 0x24) = var_10h._4_4_;\n    }\n    return;\n}\n",
        "token_count": 450
    },
    "180008ea": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpFindFileData\n// WARNING: Variable defined which should be unmapped: var_bp_28h\n// WARNING: Variable defined which should be unmapped: var_bp_30h\n\nvoid fcn.180008eac(char *arg1, char *arg2, int64_t *arg3)\n\n{\n    uint8_t uVar1;\n    char *lpMem;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    char *arg1_00;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint8_t uVar7;\n    ulong uVar8;\n    uint64_t arg3_00;\n    ulong var_ch;\n    ulong var_230h;\n    uchar auStack888 [32];\n    ulong uStack856;\n    uint uStack848;\n    uchar auStack840 [8];\n    uint64_t uStack832;\n    ulong uStack824;\n    ulong uStack816;\n    ulong uStack808;\n    ulong uStack800;\n    ulong uStack792;\n    char cStack784;\n    int64_t iStack776;\n    int64_t iStack768;\n    char cStack752;\n    int64_t iStack744;\n    int64_t iStack736;\n    char cStack720;\n    ulong uStack712;\n    ulong uStack704;\n    char *pcStack696;\n    ulong uStack688;\n    ulong uStack680;\n    char cStack672;\n    uchar auStack620 [492];\n    ulong var_bp_78h;\n    ulong var_bp_70h;\n    ulong var_bp_68h;\n    ulong var_bp_58h;\n    ulong var_bp_50h;\n    ulong var_bp_48h;\n    uint64_t var_bp_40h;\n    ulong var_bp_38h;\n    ulong var_bp_30h;\n    ulong var_bp_28h;\n    ulong lpFindFileData;\n    \n    var_bp_40h = *0x180021010 ^ auStack888;\n    if (arg2 != arg1) {\n        do {\n            if ((*arg2 - 0x2fU < 0x2e) && ((0x200000000801U >> (*arg2 - 0x2fU & 0x3fU) & 1) != 0)) break;\n            arg2 = fcn.18000ca08(arg1, arg2);\n        } while (arg2 != arg1);\n    }\n    if ((*arg2 == ':') && (arg2 != arg1 + 1)) {\n        fcn.180008d28(arg1, 0, 0, arg3);\n    }\n    else {\n        uVar7 = *arg2 - 0x2f;\n        uVar8 = 0;\n        if ((0x2d < uVar7) || (uVar1 = 1,  (0x200000000801U >> (uVar7 & 0x3fU) & 1) == 0)) {\n            uVar1 = 0;\n        }\n        uStack824 = 0;\n        uStack816 = 0;\n        uStack808 = 0;\n        uStack800 = 0;\n        uStack792 = 0;\n        arg3_00 = -uVar1 & arg2 + (1 - arg1);\n        cStack784 = '\\0';\n        uStack832 = arg3_00;\n        fcn.1800091fc(&iStack776, 0);\n        if (*(iStack768 + 0xc) == 0xfde9) {\n            if (cStack752 != '\\0') {\n                *(iStack776 + 0x3a8) = *(iStack776 + 0x3a8) & 0xfffffffd;\n            }\n            uVar4 = 0xfde9;\n        }\n        else {\n            iVar2 = fcn.18000a5f0();\n            if (iVar2 == 0) {\n                if (cStack752 != '\\0') {\n                    *(iStack776 + 0x3a8) = *(iStack776 + 0x3a8) & 0xfffffffd;\n                }\n                uVar4 = 1;\n            }\n            else {\n                uVar4 = uVar8;\n                if (cStack752 != '\\0') {\n                    *(iStack776 + 0x3a8) = *(iStack776 + 0x3a8) & 0xfffffffd;\n                }\n            }\n        }\n        iVar2 = fcn.1800087dc(arg1, &uStack824, auStack840, uVar4);\n        uStack848 = 0;\n        uStack856 = 0;\n        uVar4 = uStack808;\n        if (iVar2 != 0) {\n            uVar4 = uVar8;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_FindFirstFileExW)(uVar4);\n        if (iVar3 == -1) {\n            fcn.180008d28(arg1, 0, 0, arg3);\n            if (cStack784 != '\\0') {\n                fcn.18000878c(uStack808);\n            }\n        }\n        else {\n            iVar6 = arg3[1] - *arg3 >> 3;\n            do {\n                uVar8 = 0;\n                uStack712 = 0;\n                uStack704 = 0;\n                pcStack696 = NULL;\n                uStack688 = 0;\n                uStack680 = 0;\n                cStack672 = '\\0';\n                fcn.1800091fc(&iStack744, 0);\n                if (*(iStack736 + 0xc) == 0xfde9) {\n                    if (cStack720 != '\\0') {\n                        *(iStack744 + 0x3a8) = *(iStack744 + 0x3a8) & 0xfffffffd;\n                    }\n                    uVar8 = 0xfde9;\n                }\n                else {\n                    iVar2 = fcn.18000a5f0();\n                    if (iVar2 == 0) {\n                        if (cStack720 != '\\0') {\n                            *(iStack744 + 0x3a8) = *(iStack744 + 0x3a8) & 0xfffffffd;\n                        }\n                        uVar8 = 1;\n                    }\n                    else if (cStack720 != '\\0') {\n                        *(iStack744 + 0x3a8) = *(iStack744 + 0x3a8) & 0xfffffffd;\n                    }\n                }\n                iVar2 = fcn.180008958(auStack620, &uStack712, auStack840, uVar8);\n                lpMem = pcStack696;\n                arg1_00 = pcStack696;\n                if (iVar2 != 0) {\n                    arg1_00 = NULL;\n                }\n                if ((*arg1_00 == '.') && ((arg1_00[1] == '\\0' || ((arg1_00[1] == '.' && (arg1_00[2] == '\\0')))))) {\n                    if (cStack672 != '\\0') {\n                        fcn.18000878c(pcStack696);\n                    }\n                }\n                else {\n                    iVar2 = fcn.180008d28(arg1_00, arg1, arg3_00, arg3);\n                    if (iVar2 != 0) {\n                        if (cStack672 != '\\0') {\n                            fcn.18000878c(lpMem);\n                        }\n                        (*_sym.imp.KERNEL32.dll_FindClose)(iVar3);\n                        if (cStack784 != '\\0') {\n                            fcn.18000878c(uStack808);\n                        }\n                        goto code_r0x0001800091d8;\n                    }\n                    arg3_00 = uStack832;\n                    if (cStack672 != '\\0') {\n                        fcn.18000878c(lpMem);\n                        arg3_00 = uStack832;\n                    }\n                }\n                iVar2 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar3);\n            } while (iVar2 != 0);\n            iVar5 = arg3[1] - *arg3 >> 3;\n            if (iVar6 != iVar5) {\n                fcn.18000c0a0(*arg3 + iVar6 * 8, iVar5 - iVar6, 8, 0x1800087c8);\n            }\n            (*_sym.imp.KERNEL32.dll_FindClose)(iVar3);\n            if (cStack784 != '\\0') {\n                fcn.18000878c(uStack808);\n            }\n        }\n    }\ncode_r0x0001800091d8:\n    fcn.1800010b0(var_bp_40h ^ auStack888);\n    return;\n}\n",
        "token_count": 1914
    },
    "18000929": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t fcn.180009298(int64_t *arg1, int64_t *arg2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t *piVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    ulong uStackX16;\n    int64_t iStackX24;\n    int64_t iStackX32;\n    ulong var_48h;\n    ulong var_50h;\n    ulong var_58h;\n    uchar auStack88 [16];\n    ulong uStack72;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    \n    if (arg2 == NULL) {\n        puVar4 = fcn.1800086f4();\n        *puVar4 = 0x16;\n        fcn.1800085b8();\n        uVar8 = 0x16;\n    }\n    else {\n        *arg2 = 0;\n        iVar5 = *arg1;\n        auStack88 = ZEXT816(0);\n        uStack72 = 0;\n        while (iVar5 != 0) {\n            uStackX16 = CONCAT53(uStackX16._3_5_, 0x3f2a);\n            iVar5 = fcn.18000c640(iVar5, &uStackX16);\n            if (iVar5 == 0) {\n                uVar2 = fcn.180008d28(*arg1, 0, 0, auStack88);\n                uVar8 = uVar2;\n                if (uVar2 != 0) {\n                    piVar7 = auStack88._0_8_;\n                    if (auStack88._0_8_ != auStack88._8_8_) {\n                        do {\n                            fcn.18000878c(*piVar7);\n                            piVar7 = piVar7 + 1;\n                        } while (piVar7 != auStack88._8_8_);\n                    }\n                    goto code_r0x000180008c5b;\n                }\n            }\n            else {\n                uVar2 = fcn.180008eac(*arg1, iVar5, auStack88);\n                uVar8 = uVar2;\n                if (uVar2 != 0) {\n                    piVar7 = auStack88._0_8_;\n                    if (auStack88._0_8_ != auStack88._8_8_) {\n                        do {\n                            fcn.18000878c(*piVar7);\n                            piVar7 = piVar7 + 1;\n                        } while (piVar7 != auStack88._8_8_);\n                    }\n                    goto code_r0x000180008c5b;\n                }\n            }\n            arg1 = arg1 + 1;\n            iVar5 = *arg1;\n        }\n        iVar5 = (auStack88._8_8_ - auStack88._0_8_ >> 3) + 1;\n        iStackX24 = 0;\n        for (piVar7 = auStack88._0_8_; piVar7 != auStack88._8_8_; piVar7 = piVar7 + 1) {\n            iVar6 = -1;\n            do {\n                iVar6 = iVar6 + 1;\n            } while (*(*piVar7 + iVar6) != '\\0');\n            iStackX24 = iStackX24 + 1 + iVar6;\n        }\n        iVar6 = fcn.18000636c(iVar5, iStackX24);\n        if (iVar6 == 0) {\n            fcn.18000878c(0);\n            for (piVar7 = auStack88._0_8_; piVar7 != auStack88._8_8_; piVar7 = piVar7 + 1) {\n                fcn.18000878c(*piVar7);\n            }\n            uVar8 = 0xffffffff;\ncode_r0x000180008c5b:\n            fcn.18000878c(auStack88._0_8_);\n        }\n        else {\n            iVar5 = iVar6 + iVar5 * 8;\n            iStackX32 = iVar5;\n            if (auStack88._0_8_ != auStack88._8_8_) {\n                uStackX16 = iVar6 - auStack88._0_8_;\n                piVar7 = auStack88._0_8_;\n                do {\n                    iVar9 = -1;\n                    do {\n                        iVar10 = iVar9;\n                        iVar9 = iVar10 + 1;\n                    } while (*(*piVar7 + iVar9) != '\\0');\n                    iVar10 = iVar10 + 2;\n                    iVar3 = fcn.18000c4b0(iVar5, (iStackX32 - iVar5) + iStackX24, *piVar7, iVar10);\n                    if (iVar3 != 0) {\n                        fcn.1800085d8(0, 0, 0, 0, 0);\n                        pcVar1 = swi(3);\n                        uVar8 = (*pcVar1)();\n                        return uVar8;\n                    }\n                    *(uStackX16 + piVar7) = iVar5;\n                    iVar5 = iVar5 + iVar10;\n                    piVar7 = piVar7 + 1;\n                } while (piVar7 != auStack88._8_8_);\n            }\n            *arg2 = iVar6;\n            fcn.18000878c(0);\n            for (piVar7 = auStack88._0_8_; piVar7 != auStack88._8_8_; piVar7 = piVar7 + 1) {\n                fcn.18000878c(*piVar7);\n            }\n            fcn.18000878c(auStack88._0_8_);\n            uVar8 = 0;\n        }\n    }\n    return uVar8;\n}\n",
        "token_count": 1370
    },
    "1800093b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1800093bc(ulong hModule, ulong arg2, uint64_t arg3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    ulong arg4;\n    ulong var_190h;\n    uchar auStack680 [32];\n    uchar auStack648 [8];\n    int64_t iStack640;\n    int64_t iStack632;\n    char cStack616;\n    ulong uStack608;\n    uint64_t uStack600;\n    ulong uStack592;\n    uint64_t uStack584;\n    ulong uStack576;\n    uchar uStack568;\n    uchar auStack552 [416];\n    ulong lpFilename;\n    uint64_t uStack24;\n    \n    uStack24 = *0x180021010 ^ auStack680;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(hModule, auStack552, 0x105);\n    if (iVar1 == 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.180008668(uVar2);\n    }\n    else {\n        uStack576 = 0;\n        uStack568 = 0;\n        uStack608 = arg2;\n        uStack600 = arg3 & 0xffffffff;\n        uStack592 = arg2;\n        uStack584 = arg3 & 0xffffffff;\n        fcn.1800091fc(&iStack640, 0);\n        arg4 = 0xfde9;\n        if (*(iStack632 + 0xc) == 0xfde9) {\n            if (cStack616 != '\\0') {\n                *(iStack640 + 0x3a8) = *(iStack640 + 0x3a8) & 0xfffffffd;\n            }\n        }\n        else {\n            iVar1 = fcn.18000a5f0();\n            if (iVar1 == 0) {\n                if (cStack616 != '\\0') {\n                    *(iStack640 + 0x3a8) = *(iStack640 + 0x3a8) & 0xfffffffd;\n                }\n                arg4 = 1;\n            }\n            else {\n                if (cStack616 != '\\0') {\n                    *(iStack640 + 0x3a8) = *(iStack640 + 0x3a8) & 0xfffffffd;\n                }\n                arg4 = 0;\n            }\n        }\n        fcn.1800092a0(auStack552, &uStack608, auStack648, arg4);\n    }\n    fcn.1800010b0(uStack24 ^ auStack680);\n    return;\n}\n",
        "token_count": 576
    },
    "1800094e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.1800094e0(ulong noname_0, uint32_t *arg2, int64_t **arg3, uint32_t *arg4)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint *puVar8;\n    int64_t iVar9;\n    \n    fcn.180008160(*arg2);\n    puVar6 = *(**arg3 + 0x88) + 0x18;\n    if (*0x1800225f0 == NULL) {\ncode_r0x000180009593:\n        puVar6 = fcn.1800086f4();\n        *puVar6 = 0x16;\n        fcn.1800085b8();\n    }\n    else {\n        if (puVar6 == NULL) {\n            fcn.180002680(*0x1800225f0, 0, 0x101);\n            goto code_r0x000180009593;\n        }\n        iVar9 = 2;\n        puVar8 = *0x1800225f0;\n        do {\n            uVar3 = puVar6[1];\n            uVar4 = puVar6[2];\n            uVar5 = puVar6[3];\n            *puVar8 = *puVar6;\n            puVar8[1] = uVar3;\n            puVar8[2] = uVar4;\n            puVar8[3] = uVar5;\n            uVar3 = puVar6[5];\n            uVar4 = puVar6[6];\n            uVar5 = puVar6[7];\n            puVar8[4] = puVar6[4];\n            puVar8[5] = uVar3;\n            puVar8[6] = uVar4;\n            puVar8[7] = uVar5;\n            uVar3 = puVar6[9];\n            uVar4 = puVar6[10];\n            uVar5 = puVar6[0xb];\n            puVar8[8] = puVar6[8];\n            puVar8[9] = uVar3;\n            puVar8[10] = uVar4;\n            puVar8[0xb] = uVar5;\n            uVar3 = puVar6[0xd];\n            uVar4 = puVar6[0xe];\n            uVar5 = puVar6[0xf];\n            puVar8[0xc] = puVar6[0xc];\n            puVar8[0xd] = uVar3;\n            puVar8[0xe] = uVar4;\n            puVar8[0xf] = uVar5;\n            uVar3 = puVar6[0x11];\n            uVar4 = puVar6[0x12];\n            uVar5 = puVar6[0x13];\n            puVar8[0x10] = puVar6[0x10];\n            puVar8[0x11] = uVar3;\n            puVar8[0x12] = uVar4;\n            puVar8[0x13] = uVar5;\n            uVar3 = puVar6[0x15];\n            uVar4 = puVar6[0x16];\n            uVar5 = puVar6[0x17];\n            puVar8[0x14] = puVar6[0x14];\n            puVar8[0x15] = uVar3;\n            puVar8[0x16] = uVar4;\n            puVar8[0x17] = uVar5;\n            uVar3 = puVar6[0x19];\n            uVar4 = puVar6[0x1a];\n            uVar5 = puVar6[0x1b];\n            puVar8[0x18] = puVar6[0x18];\n            puVar8[0x19] = uVar3;\n            puVar8[0x1a] = uVar4;\n            puVar8[0x1b] = uVar5;\n            puVar7 = puVar8 + 0x20;\n            uVar3 = puVar6[0x1d];\n            uVar4 = puVar6[0x1e];\n            uVar5 = puVar6[0x1f];\n            puVar8[0x1c] = puVar6[0x1c];\n            puVar8[0x1d] = uVar3;\n            puVar8[0x1e] = uVar4;\n            puVar8[0x1f] = uVar5;\n            puVar6 = puVar6 + 0x20;\n            iVar9 = iVar9 + -1;\n            puVar8 = puVar7;\n        } while (iVar9 != 0);\n        *puVar7 = *puVar6;\n    }\n    iVar9 = 2;\n    puVar6 = *(**arg3 + 0x88) + 0x119;\n    if (*0x1800225f8 != NULL) {\n        puVar8 = *0x1800225f8;\n        if (puVar6 != NULL) {\n            do {\n                uVar3 = puVar6[1];\n                uVar4 = puVar6[2];\n                uVar5 = puVar6[3];\n                *puVar8 = *puVar6;\n                puVar8[1] = uVar3;\n                puVar8[2] = uVar4;\n                puVar8[3] = uVar5;\n                uVar3 = puVar6[5];\n                uVar4 = puVar6[6];\n                uVar5 = puVar6[7];\n                puVar8[4] = puVar6[4];\n                puVar8[5] = uVar3;\n                puVar8[6] = uVar4;\n                puVar8[7] = uVar5;\n                uVar3 = puVar6[9];\n                uVar4 = puVar6[10];\n                uVar5 = puVar6[0xb];\n                puVar8[8] = puVar6[8];\n                puVar8[9] = uVar3;\n                puVar8[10] = uVar4;\n                puVar8[0xb] = uVar5;\n                uVar3 = puVar6[0xd];\n                uVar4 = puVar6[0xe];\n                uVar5 = puVar6[0xf];\n                puVar8[0xc] = puVar6[0xc];\n                puVar8[0xd] = uVar3;\n                puVar8[0xe] = uVar4;\n                puVar8[0xf] = uVar5;\n                uVar3 = puVar6[0x11];\n                uVar4 = puVar6[0x12];\n                uVar5 = puVar6[0x13];\n                puVar8[0x10] = puVar6[0x10];\n                puVar8[0x11] = uVar3;\n                puVar8[0x12] = uVar4;\n                puVar8[0x13] = uVar5;\n                uVar3 = puVar6[0x15];\n                uVar4 = puVar6[0x16];\n                uVar5 = puVar6[0x17];\n                puVar8[0x14] = puVar6[0x14];\n                puVar8[0x15] = uVar3;\n                puVar8[0x16] = uVar4;\n                puVar8[0x17] = uVar5;\n                uVar3 = puVar6[0x19];\n                uVar4 = puVar6[0x1a];\n                uVar5 = puVar6[0x1b];\n                puVar8[0x18] = puVar6[0x18];\n                puVar8[0x19] = uVar3;\n                puVar8[0x1a] = uVar4;\n                puVar8[0x1b] = uVar5;\n                uVar3 = puVar6[0x1d];\n                uVar4 = puVar6[0x1e];\n                uVar5 = puVar6[0x1f];\n                puVar8[0x1c] = puVar6[0x1c];\n                puVar8[0x1d] = uVar3;\n                puVar8[0x1e] = uVar4;\n                puVar8[0x1f] = uVar5;\n                puVar6 = puVar6 + 0x20;\n                iVar9 = iVar9 + -1;\n                puVar8 = puVar8 + 0x20;\n            } while (iVar9 != 0);\n            goto code_r0x000180009644;\n        }\n        fcn.180002680(*0x1800225f8, 0, 0x100);\n    }\n    puVar6 = fcn.1800086f4();\n    *puVar6 = 0x16;\n    fcn.1800085b8();\ncode_r0x000180009644:\n    piVar2 = **arg3[1];\n    LOCK();\n    iVar1 = *piVar2;\n    *piVar2 = *piVar2 + -1;\n    if ((iVar1 == 1) && (**arg3[1] != 0x180021060)) {\n        fcn.18000878c(**arg3[1]);\n    }\n    **arg3[1] = *(**arg3 + 0x88);\n    LOCK();\n    **(**arg3 + 0x88) = **(**arg3 + 0x88) + 1;\n    fcn.1800081b4(*arg4);\n    return;\n}\n",
        "token_count": 2174
    },
    "180009c2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * fcn.180009c20(int64_t arg1, int32_t **arg2)\n\n{\n    int32_t iVar1;\n    ulong arg3;\n    uchar uVar2;\n    unkbyte7 Var3;\n    int32_t *lpMem;\n    \n    uVar2 = SUB81(arg2, 0);\n    Var3 = arg2 >> 8;\n    if (((*(arg1 + 0x3a8) & *0x180021824) == 0) || (*(arg1 + 0x90) == 0)) {\n        fcn.180008160(5);\n        lpMem = *(arg1 + 0x88);\n        if (lpMem != *arg2) {\n            if (lpMem != NULL) {\n                LOCK();\n                iVar1 = *lpMem;\n                *lpMem = *lpMem + -1;\n                if ((iVar1 == 1) && (lpMem != 0x180021060)) {\n                    fcn.18000878c(lpMem);\n                }\n            }\n            lpMem = *arg2;\n            *(arg1 + 0x88) = lpMem;\n            LOCK();\n            *lpMem = *lpMem + 1;\n        }\n        fcn.1800081b4(5);\n    }\n    else {\n        lpMem = *(arg1 + 0x88);\n    }\n    if (lpMem != NULL) {\n        return lpMem;\n    }\n    fcn.180006e28();\n    if (*0x18002260c == '\\0') {\n        *0x1800225f8 = 0x1800213a0;\n        *0x180022600 = 0x180021060;\n        *0x1800225f0 = 0x180021290;\n        fcn.180007e8c(0x180021290, CONCAT71(Var3, uVar2));\n        fcn.1800099b0(0xfffffffd, CONCAT71(Var3, 1), arg3, 0x180022600);\n        *0x18002260c = '\\x01';\n    }\n    return 0x1;\n}\n",
        "token_count": 470
    },
    "180009d5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.180009d54(ulong arg1, int64_t arg2)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    ushort uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t *puVar6;\n    int64_t iVar7;\n    uint8_t *puVar8;\n    uint64_t uVar9;\n    uint8_t *puVar10;\n    ushort *puVar11;\n    uint64_t uVar12;\n    uint64_t uVar13;\n    uint uVar14;\n    ushort *puVar15;\n    uint32_t uVar16;\n    uint8_t *puVar17;\n    uint32_t uVar18;\n    uchar auStack104 [32];\n    int32_t iStack72;\n    uint8_t auStack66 [18];\n    uint64_t uStack48;\n    \n    uStack48 = *0x180021010 ^ auStack104;\n    uVar4 = fcn.1800096b0(arg1);\n    uVar12 = 0;\n    if (uVar4 != 0) {\n        puVar6 = 0x1800214b0;\n        uVar14 = 1;\n        uVar9 = uVar12;\ncode_r0x000180009d9d:\n        if (*puVar6 != uVar4) goto code_r0x000180009da5;\n        fcn.180002680(arg2 + 0x18, 0, 0x101);\n        puVar17 = 0x1800214a0;\n        iVar7 = 4;\n        puVar8 = uVar9 * 0x30 + 0x1800214c0;\n        do {\n            uVar2 = *puVar8;\n            puVar10 = puVar8;\n            while ((uVar2 != 0 && (puVar10[1] != 0))) {\n                uVar2 = *puVar10;\n                uVar18 = uVar2;\n                if (uVar2 <= puVar10[1]) {\n                    uVar16 = uVar2;\n                    do {\n                        uVar16 = uVar16 + 1;\n                        if (0x100 < uVar16) break;\n                        uVar18 = uVar18 + 1;\n                        puVar1 = uVar16 + 0x18 + arg2;\n                        *puVar1 = *puVar1 | *puVar17;\n                    } while (uVar18 <= puVar10[1]);\n                }\n                puVar10 = puVar10 + 2;\n                uVar2 = *puVar10;\n            }\n            puVar8 = puVar8 + 8;\n            puVar17 = puVar17 + 1;\n            iVar7 = iVar7 + -1;\n        } while (iVar7 != 0);\n        *(arg2 + 4) = uVar4;\n        *(arg2 + 8) = 1;\n        uVar13 = *0x180017e38;\n        if (((uVar4 != 0x3a4) && (uVar13 = *0x180017e40,  uVar4 != 0x3a8)) &&\n           ((uVar13 = *0x180017e48,  uVar4 != 0x3b5 && (uVar13 = uVar12,  uVar4 == 0x3b6)))) {\n            uVar13 = *0x180017e50;\n        }\n        *(arg2 + 0x220) = uVar13;\n        puVar15 = uVar9 * 0x30 + 0x1800214b4;\n        puVar11 = arg2 + 0xc;\n        iVar7 = 6;\n        do {\n            uVar3 = *puVar15;\n            puVar15 = puVar15 + 1;\n            *puVar11 = uVar3;\n            puVar11 = puVar11 + 1;\n            iVar7 = iVar7 + -1;\n        } while (iVar7 != 0);\n        goto code_r0x000180009fd7;\n    }\ncode_r0x000180009fe1:\n    fcn.180009730(arg2);\ncode_r0x000180009feb:\n    fcn.1800010b0(uStack48 ^ auStack104);\n    return;\ncode_r0x000180009da5:\n    uVar18 = uVar9 + 1;\n    uVar9 = uVar18;\n    puVar6 = puVar6 + 0xc;\n    if (4 < uVar18) goto code_r0x000180009db2;\n    goto code_r0x000180009d9d;\ncode_r0x000180009db2:\n    if ((uVar4 == 65000) || (iVar5 = (*_sym.imp.KERNEL32.dll_IsValidCodePage)(uVar4 & 0xffff),  iVar5 == 0))\n    goto code_r0x000180009feb;\n    if (uVar4 == 0xfde9) {\n        *(arg2 + 4) = 0xfde9;\n        *(arg2 + 0x220) = 0;\n        *(arg2 + 0x18) = 0;\n        *(arg2 + 0x1c) = 0;\n    }\n    else {\n        iVar5 = (*_sym.imp.KERNEL32.dll_GetCPInfo)(uVar4);\n        if (iVar5 == 0) {\n            if (*0x180022608 == 0) goto code_r0x000180009feb;\n            goto code_r0x000180009fe1;\n        }\n        fcn.180002680(arg2 + 0x18, 0, 0x101);\n        *(arg2 + 4) = uVar4;\n        *(arg2 + 0x220) = 0;\n        if (iStack72 == 2) {\n            puVar8 = auStack66;\n            while ((auStack66[0] != 0 && (puVar8[1] != 0))) {\n                uVar2 = *puVar8;\n                if (uVar2 <= puVar8[1]) {\n                    uVar4 = uVar2;\n                    uVar9 = (puVar8[1] - uVar2) + 1;\n                    do {\n                        uVar4 = uVar4 + 1;\n                        puVar17 = uVar4 + 0x18 + arg2;\n                        *puVar17 = *puVar17 | 4;\n                        uVar9 = uVar9 - 1;\n                    } while (uVar9 != 0);\n                }\n                puVar8 = puVar8 + 2;\n                auStack66[0] = *puVar8;\n            }\n            puVar8 = arg2 + 0x1a;\n            iVar7 = 0xfe;\n            do {\n                *puVar8 = *puVar8 | 8;\n                puVar8 = puVar8 + 1;\n                iVar7 = iVar7 + -1;\n            } while (iVar7 != 0);\n            iVar5 = *(arg2 + 4);\n            uVar9 = *0x180017e38;\n            if ((((iVar5 != 0x3a4) && (uVar9 = *0x180017e40,  iVar5 != 0x3a8)) &&\n                (uVar9 = *0x180017e48,  iVar5 != 0x3b5)) && (uVar9 = *0x180017e50,  iVar5 != 0x3b6)) {\n                uVar9 = uVar12;\n            }\n            *(arg2 + 0x220) = uVar9;\n        }\n        else {\n            uVar14 = 0;\n        }\n        *(arg2 + 8) = uVar14;\n    }\n    puVar11 = arg2 + 0xc;\n    for (iVar7 = 6; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar11 = 0;\n        puVar11 = puVar11 + 1;\n    }\ncode_r0x000180009fd7:\n    fcn.1800097c8(arg2);\n    goto code_r0x000180009feb;\n}\n",
        "token_count": 1818
    },
    "18000a0c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.18000a0c4(ulong arg1, uint64_t arg2)\n\n{\n    bool bVar1;\n    \n    if (arg1 < 0xdead) {\n        if (arg1 != 0xdeac) {\n            if (arg1 < 0xc434) {\n                if ((((arg1 != 0xc433) && (arg1 != 0x2a)) && (arg1 != 0xc42c)) && ((arg1 != 0xc42d && (arg1 != 0xc42e)))\n                   ) {\n                    bVar1 = arg1 == 0xc431;\ncode_r0x00018000a111:\n                    if (!bVar1) goto code_r0x00018000a115;\n                }\n            }\n            else if (arg1 != 0xc435) {\n                if (arg1 == 0xd698) goto code_r0x00018000a14f;\n                if (arg1 != 0xdeaa) {\n                    bVar1 = arg1 == 0xdeab;\n                    goto code_r0x00018000a111;\n                }\n            }\n        }\n    }\n    else if ((((arg1 != 0xdead) && (arg1 != 0xdeae)) && (arg1 != 0xdeaf)) &&\n            (((arg1 != 0xdeb0 && (arg1 != 0xdeb1)) && ((arg1 != 0xdeb2 && ((arg1 != 0xdeb3 && (arg1 != 65000)))))))) {\n        if (arg1 != 0xfde9) goto code_r0x00018000a115;\ncode_r0x00018000a14f:\n        arg2 = arg2 & 8;\n        goto code_r0x00018000a115;\n    }\n    arg2 = 0;\ncode_r0x00018000a115:\n    // WARNING: Could not recover jumptable at 0x00018000a115. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(arg1, arg2);\n    return;\n}\n",
        "token_count": 470
    },
    "18000a15": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18000a154(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    uint *in_stack_00000040;\n    \n    uVar2 = 0;\n    if (arg1 < 0xdead) {\n        if (arg1 == 0xdeac) goto code_r0x00018000a1f4;\n        if (0xc433 < arg1) {\n            if ((arg1 == 0xc435) || (arg1 == 0xd698)) goto code_r0x00018000a1f4;\n            iVar1 = arg1 - 0xdeaa;\n            goto code_r0x00018000a1e5;\n        }\n        if ((((arg1 == 0xc433) || (arg1 == 0x2a)) || (arg1 == 0xc42c)) || ((arg1 == 0xc42d || (arg1 == 0xc42e))))\n        goto code_r0x00018000a1f4;\n        bVar3 = arg1 == 0xc431;\n    }\n    else {\n        if (((((arg1 == 0xdead) || (arg1 == 0xdeae)) || (arg1 == 0xdeaf)) || ((arg1 == 0xdeb0 || (arg1 == 0xdeb1)))) ||\n           ((arg1 == 0xdeb2 || (arg1 == 0xdeb3)))) goto code_r0x00018000a1f4;\n        iVar1 = arg1 - 65000;\ncode_r0x00018000a1e5:\n        if (iVar1 == 0) goto code_r0x00018000a1f4;\n        bVar3 = iVar1 == 1;\n    }\n    if (!bVar3) {\n        uVar2 = arg2 & 0xffffff7f;\n    }\ncode_r0x00018000a1f4:\n    if ((arg1 - 65000 < 2) && (in_stack_00000040 != NULL)) {\n        *in_stack_00000040 = 0;\n    }\n    // WARNING: Could not recover jumptable at 0x00018000a22b. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(arg1, uVar2, arg3, arg4);\n    return;\n}\n",
        "token_count": 552
    },
    "18000ad0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.18000ad08(uint64_t arg1)\n\n{\n    bool bVar1;\n    uint64_t uVar2;\n    uint *puVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    ulong uVar6;\n    int8_t iVar7;\n    int32_t iVar8;\n    uint64_t noname_0;\n    uint64_t noname_0_00;\n    uint32_t uVar9;\n    uint64_t lpFlsData;\n    code *pcVar10;\n    uint32_t uVar11;\n    uint64_t uVar12;\n    uint64_t *puVar13;\n    uint64_t *puVar14;\n    uint uStackX16;\n    uint64_t *puVar15;\n    \n    iVar8 = arg1;\n    noname_0_00 = arg1 & 0xffffffff;\n    puVar15 = NULL;\n    puVar14 = NULL;\n    uStackX16 = 0;\n    bVar1 = true;\n    lpFlsData = iVar8 - 2U;\n    uVar11 = noname_0_00;\n    if (iVar8 - 2U == 0) {\ncode_r0x00018000ad5f:\n        noname_0 = iVar8 - 2U;\n        if (iVar8 - 2U == 0) {\n            puVar13 = 0x180022c00;\n        }\n        else {\n            noname_0 = iVar8 - 6U;\n            if (iVar8 - 6U == 0) {\ncode_r0x00018000ae01:\n                puVar13 = 0x180022c10;\n                puVar14 = puVar15;\n            }\n            else {\n                noname_0 = iVar8 - 0xfU;\n                if (iVar8 - 0xfU == 0) {\n                    puVar13 = 0x180022c18;\n                }\n                else {\n                    uVar9 = iVar8 - 0x15;\n                    noname_0 = uVar9;\n                    if (uVar9 == 0) {\n                        puVar13 = 0x180022c08;\n                        puVar14 = puVar15;\n                    }\n                    else {\n                        if (uVar9 == 1) goto code_r0x00018000ae01;\n                        puVar13 = NULL;\n                        puVar14 = puVar15;\n                    }\n                }\n            }\n        }\n    }\n    else {\n        lpFlsData = iVar8 - 4U;\n        if (iVar8 - 4U != 0) {\n            lpFlsData = iVar8 - 6U;\n            if (iVar8 - 6U != 0) {\n                lpFlsData = iVar8 - 8U;\n                if ((iVar8 - 8U == 0) || (lpFlsData = iVar8 - 0xbU,  iVar8 - 0xbU == 0)) goto code_r0x00018000ad8f;\n                lpFlsData = iVar8 - 0xfU;\n                if (iVar8 - 0xfU != 0) {\n                    uVar9 = iVar8 - 0x15;\n                    lpFlsData = uVar9;\n                    if ((uVar9 != 0) && (uVar9 != 1)) goto code_r0x00018000ade1;\n                }\n            }\n            goto code_r0x00018000ad5f;\n        }\ncode_r0x00018000ad8f:\n        puVar14 = fcn.180007f30(arg1, lpFlsData);\n        if (puVar14 == NULL) {\n            return 0xffffffff;\n        }\n        uVar2 = *puVar14;\n        noname_0 = *0x180017700 * 0x10 + uVar2;\n        for (; uVar2 != noname_0; uVar2 = uVar2 + 0x10) {\n            if (*(uVar2 + 4) == uVar11) goto code_r0x00018000addc;\n        }\n        uVar2 = 0;\ncode_r0x00018000addc:\n        if (uVar2 == 0) {\ncode_r0x00018000ade1:\n            puVar3 = fcn.1800086f4();\n            *puVar3 = 0x16;\n            fcn.1800085b8();\n            return 0xffffffff;\n        }\n        puVar13 = uVar2 + 8;\n        bVar1 = false;\n    }\n    uVar2 = 0;\n    if (bVar1) {\n        noname_0 = 3;\n        fcn.180008160(3);\n    }\n    uVar12 = *puVar13;\n    if (bVar1) {\n        uVar9 = *0x180021010 & 0x3f;\n        noname_0 = uVar9;\n        iVar7 = uVar9;\n        uVar12 = (uVar12 ^ *0x180021010) >> iVar7 | (uVar12 ^ *0x180021010) << 0x40 - iVar7;\n    }\n    if (uVar12 == 1) goto code_r0x00018000aeea;\n    if (uVar12 == 0) {\n        if (bVar1) {\n            fcn.1800081b4(3);\n        }\n        fcn.180006190(3);\n        pcVar10 = swi(3);\n        uVar6 = (*pcVar10)();\n        return uVar6;\n    }\n    if ((uVar11 < 0xc) && ((0x910U >> (uVar11 & 0x1f) & 1) != 0)) {\n        uVar2 = puVar14[1];\n        puVar14[1] = 0;\n        if (uVar11 == 8) {\n            iVar4 = fcn.180007db8(noname_0, lpFlsData);\n            uStackX16 = *(iVar4 + 0x10);\n            iVar4 = fcn.180007db8(noname_0, lpFlsData);\n            *(iVar4 + 0x10) = 0x8c;\n            goto code_r0x00018000aea2;\n        }\n    }\n    else {\ncode_r0x00018000aea2:\n        if (uVar11 == 8) {\n            uVar5 = *0x180017708 * 0x10 + *puVar14;\n            noname_0 = *0x180017710 * 0x10 + uVar5;\n            for (; uVar5 != noname_0; uVar5 = uVar5 + 0x10) {\n                *(uVar5 + 8) = 0;\n            }\n            goto code_r0x00018000aeea;\n        }\n    }\n    *puVar13 = *0x180021010;\ncode_r0x00018000aeea:\n    if (bVar1) {\n        noname_0 = 3;\n        fcn.1800081b4(3);\n    }\n    if (uVar12 != 1) {\n        if (uVar11 == 8) {\n            iVar4 = fcn.180007db8(noname_0, lpFlsData);\n            pcVar10 = *(iVar4 + 0x10);\n            (**0x180016378)();\n        }\n        else {\n            pcVar10 = *0x180016378;\n            (**0x180016378)();\n        }\n        if (((uVar11 < 0xc) && ((0x910U >> (uVar11 & 0x1f) & 1) != 0)) && (puVar14[1] = uVar2,  uVar11 == 8)) {\n            iVar4 = fcn.180007db8(noname_0_00, pcVar10);\n            *(iVar4 + 0x10) = uStackX16;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1760
    },
    "18000afe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.18000afe8(ulong noname_0, ulong *arg2, int64_t **arg3, ulong *arg4)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    fcn.18000b4ac(*arg2);\n    if ((**arg3 != 0) && (uVar1 = *(**arg3 + 0x14),  (uVar1 >> 0xd & 1) != 0)) {\n        if ((((uVar1 & 3) == 2) && ((uVar1 & 0xc0) != 0)) || ((uVar1 >> 0xb & 1) != 0)) {\n            if ((*arg3[2] != '\\0') || ((*(**arg3 + 0x14) >> 1 & 1) != 0)) {\n                iVar2 = fcn.18000b254(**arg3);\n                if (iVar2 == -1) {\n                    *arg3[3] = 0xffffffff;\n                }\n                else {\n                    *arg3[1] = *arg3[1] + 1;\n                }\n            }\n        }\n        else {\n            *arg3[1] = *arg3[1] + 1;\n        }\n    }\n    fcn.18000b4b8(*arg4);\n    return;\n}\n",
        "token_count": 299
    },
    "18000b08": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.18000b084(ulong noname_0, uint32_t *arg2, int32_t **arg3, uint32_t *arg4)\n\n{\n    int64_t *piVar1;\n    uint32_t uVar2;\n    int64_t *piVar3;\n    uchar auStackX16 [16];\n    uint32_t *puStackX32;\n    int64_t iStack88;\n    int64_t iStack80;\n    int64_t iStack72;\n    int64_t *piStack64;\n    int64_t *piStack56;\n    int32_t *piStack48;\n    int32_t *piStack40;\n    int32_t *piStack32;\n    \n    puStackX32 = arg4;\n    fcn.180008160(*arg2);\n    piVar1 = *0x180022c38 + *0x180022c30;\n    for (piVar3 = *0x180022c38; piStack64 = piVar3,  piVar3 != piVar1; piVar3 = piVar3 + 1) {\n        iStack88 = *piVar3;\n        if ((iStack88 != 0) && (uVar2 = *(iStack88 + 0x14),  (uVar2 >> 0xd & 1) != 0)) {\n            if ((((uVar2 & 3) == 2) && ((uVar2 & 0xc0) != 0)) || ((uVar2 >> 0xb & 1) != 0)) {\n                piStack32 = arg3[2];\n                piStack40 = arg3[1];\n                piStack48 = *arg3;\n                piStack56 = &iStack88;\n                iStack80 = iStack88;\n                iStack72 = iStack88;\n                fcn.18000afe8(auStackX16, &iStack72, &piStack56, &iStack80);\n            }\n            else {\n                **arg3 = **arg3 + 1;\n            }\n        }\n    }\n    fcn.1800081b4(*arg4);\n    return;\n}\n",
        "token_count": 465
    },
    "18000b1c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.18000b1c8(ulong *arg1, ulong arg2)\n\n{\n    ulong arg2_00;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    if (((*(arg1 + 0x14) & 3) == 2) && ((*(arg1 + 0x14) & 0xc0) != 0)) {\n        uVar2 = *arg1 - *(arg1 + 1);\n        *(arg1 + 2) = 0;\n        arg2_00 = arg1[1];\n        *arg1 = arg2_00;\n        if (0 < uVar2) {\n            uVar1 = fcn.18000b774(arg1);\n            uVar1 = fcn.18000ddc0(uVar1, arg2_00, uVar2, arg2);\n            if (uVar2 != uVar1) {\n                LOCK();\n                *(arg1 + 0x14) = *(arg1 + 0x14) | 0x10;\n                return 0xffffffff;\n            }\n            if ((*(arg1 + 0x14) >> 2 & 1) != 0) {\n                LOCK();\n                *(arg1 + 0x14) = *(arg1 + 0x14) & 0xfffffffd;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 305
    },
    "18000b25": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.18000b254(int64_t arg1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    int64_t var_40h;\n    ulong var_30h;\n    ulong var_28h;\n    uint uStack40;\n    uint uStack36;\n    ulong var_18h;\n    ulong var_bp_10h;\n    ulong var_bp_8h;\n    \n    var_40h = 0;\n    var_18h._0_1_ = *0x180022c58 == 0;\n    var_30h._0_1_ = 0;\n    var_bp_10h._0_1_ = '\\0';\n    var_bp_8h._0_1_ = '\\0';\n    if (var_18h) {\n        var_28h._0_4_ = *0x1800216f8;\n        var_28h._4_4_ = *0x1800216fc;\n        uStack40 = *0x180021700;\n        uStack36 = *0x180021704;\n    }\n    if (arg1 == 0) {\n        uVar1 = fcn.18000b168(0);\n        goto code_r0x00018000b2d9;\n    }\n    iVar2 = fcn.18000b1c8(arg1, &var_40h);\n    if (iVar2 == 0) {\n        if ((*(arg1 + 0x14) >> 0xb & 1) != 0) {\n            uVar3 = fcn.18000b774(arg1);\n            iVar2 = fcn.18000d524(uVar3);\n            if (iVar2 != 0) goto code_r0x00018000b2b4;\n        }\n        uVar1 = 0;\n    }\n    else {\ncode_r0x00018000b2b4:\n        uVar1 = 0xffffffff;\n    }\ncode_r0x00018000b2d9:\n    if (var_18h == '\\x02') {\n        *(var_40h + 0x3a8) = *(var_40h + 0x3a8) & 0xfffffffd;\n    }\n    if (var_bp_10h != '\\0') {\n        iVar4 = fcn.180006ef0(&var_40h);\n        *(iVar4 + 0x20) = var_18h._4_4_;\n    }\n    if (var_bp_8h != '\\0') {\n        iVar4 = fcn.180006ef0(&var_40h);\n        *(iVar4 + 0x24) = var_bp_10h._4_4_;\n    }\n    return uVar1;\n}\n",
        "token_count": 623
    },
    "18000b5f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.18000b5fc(uint16_t *arg1, uint8_t *arg2, uint64_t arg3, int64_t arg4)\n\n{\n    uint32_t uVar1;\n    int64_t *piVar2;\n    int32_t iVar3;\n    \n    if ((arg2 == NULL) || (arg3 == 0)) {\n        *0x180022c50 = 0;\n    }\n    else {\n        if (*arg2 != 0) {\n            if (*(arg4 + 0x28) == '\\0') {\n                fcn.180006f60(arg4);\n            }\n            piVar2 = *(arg4 + 0x18);\n            uVar1 = *(piVar2 + 0xc);\n            if (uVar1 != 0xfde9) {\n                if (piVar2[0x27] == 0) {\n                    if (arg1 != NULL) {\n                        *arg1 = *arg2;\n                    }\n                    return 1;\n                }\n                if (*(*piVar2 + *arg2 * 2) < 0) {\n                    if ((((1 < *(piVar2 + 1)) && (*(piVar2 + 1) <= arg3)) &&\n                        (iVar3 = fcn.18000a0c4(uVar1, 9),  iVar3 != 0)) ||\n                       ((*(*(arg4 + 0x18) + 8) <= arg3 && (arg2[1] != 0)))) {\n                        return *(*(arg4 + 0x18) + 8);\n                    }\n                }\n                else {\n                    iVar3 = fcn.18000a0c4(uVar1, 9);\n                    if (iVar3 != 0) {\n                        return 1;\n                    }\n                }\n                *(arg4 + 0x30) = 1;\n                *(arg4 + 0x2c) = 0x2a;\n                return -1;\n            }\n            iVar3 = fcn.18000e340(arg1);\n            if (iVar3 < 0) {\n                return -1;\n            }\n            return iVar3;\n        }\n        if (arg1 != NULL) {\n            *arg1 = 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 494
    },
    "18000bb8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18000bb80(ulong arg1)\n\n{\n    uint *puVar1;\n    \n    if (arg1 == 1) {\n        puVar1 = fcn.1800086f4();\n        *puVar1 = 0x21;\n    }\n    else if ((arg1 == 2) || (arg1 == 3)) {\n        puVar1 = fcn.1800086f4();\n        *puVar1 = 0x22;\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "18000ca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint8_t * fcn.18000ca08(uint8_t *arg1, uint8_t *arg2)\n\n{\n    uint *puVar1;\n    uint8_t *puVar2;\n    int64_t aiStack40 [2];\n    int64_t iStack24;\n    char cStack16;\n    \n    if ((arg1 == NULL) || (arg2 == NULL)) {\n        puVar1 = fcn.1800086f4();\n        *puVar1 = 0x16;\n        fcn.1800085b8();\n    }\n    else if (arg1 < arg2) {\n        fcn.1800091fc(aiStack40, 0);\n        puVar2 = arg2 + -1;\n        if (*(iStack24 + 8) != 0) {\n            do {\n                puVar2 = puVar2 + -1;\n                if (puVar2 < arg1) break;\n            } while ((*(*puVar2 + 0x19 + iStack24) & 4) != 0);\n            puVar2 = arg2 + (-1 - (arg2 - puVar2 & 1));\n        }\n        if (cStack16 == '\\0') {\n            return puVar2;\n        }\n        *(aiStack40[0] + 0x3a8) = *(aiStack40[0] + 0x3a8) & 0xfffffffd;\n        return puVar2;\n    }\n    return NULL;\n}\n",
        "token_count": 320
    },
    "18000d5b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18000d5b8(ulong *arg1, ulong arg2, uint8_t *arg3, uint64_t arg4)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint uVar3;\n    uint64_t uVar4;\n    char *pcVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int64_t iVar9;\n    uchar *puVar10;\n    uint8_t *puVar11;\n    uint64_t uVar12;\n    int64_t arg3_00;\n    ulong uVar13;\n    int32_t iVar14;\n    uint64_t uVar15;\n    int64_t iVar16;\n    uchar *in_stack_00000028;\n    uchar auStack264 [32];\n    uchar *puStack232;\n    uint uStack224;\n    ulong uStack216;\n    ulong uStack208;\n    uint16_t auStack200 [2];\n    uint uStack196;\n    uint32_t auStack192 [2];\n    uint8_t *puStack184;\n    uchar *puStack176;\n    uint64_t uStack168;\n    uint32_t uStack160;\n    int32_t iStack156;\n    uint8_t *puStack152;\n    int64_t iStack144;\n    ulong uStack136;\n    uchar *puStack128;\n    uint8_t *puStack120;\n    ulong uStack112;\n    int64_t iStack104;\n    ulong uStack96;\n    uchar auStack88 [8];\n    uint8_t uStack80;\n    uint8_t uStack79;\n    uchar auStack72 [8];\n    uint64_t uStack64;\n    \n    uStack96 = 0xfffffffffffffffe;\n    uStack64 = *0x180021010 ^ auStack264;\n    puStack176 = in_stack_00000028;\n    iVar16 = arg2 >> 6;\n    uVar4 = arg2 & 0x3f;\n    uStack112 = *(*(iVar16 * 8 + 0x1800227f0) + 0x28 + uVar4 * 0x48);\n    puStack184 = arg3 + (arg4 & 0xffffffff);\n    puStack152 = arg3;\n    iStack144 = iVar16;\n    uStack160 = (*_sym.imp.KERNEL32.dll_GetConsoleOutputCP)();\n    uVar12 = 0;\n    if (puStack176[0x28] == '\\0') {\n        fcn.180006f60(puStack176);\n    }\n    iStack156 = *(*(puStack176 + 0x18) + 0xc);\n    *arg1 = 0;\n    *(arg1 + 1) = 0;\n    uVar6 = uVar12;\n    iVar9 = iVar16;\n    if (puStack152 < arg3 + (arg4 & 0xffffffff)) {\n        do {\n            iStack104 = iVar9;\n            auStack200[0] = auStack200[0] & 0xff00 | *arg3;\n            uStack196 = 0;\n            uVar15 = 1;\n            if (iStack156 == 0xfde9) {\n                pcVar5 = uVar4 * 0x48 + 0x3e + *(iStack104 * 8 + 0x1800227f0);\n                uVar6 = uVar12;\n                uVar15 = uVar12;\n                do {\n                    uVar7 = uVar6;\n                    if (*pcVar5 == '\\0') break;\n                    uVar7 = uVar7 + 1;\n                    uVar6 = uVar7;\n                    uVar15 = uVar15 + 1;\n                    pcVar5 = pcVar5 + 1;\n                } while (uVar15 < 5);\n                if (uVar15 < 1) {\n                    cVar2 = *(*arg3 + 0x1800218d0);\n                    iVar14 = cVar2 + 1;\n                    iVar16 = puStack184 - arg3;\n                    if (iVar16 < iVar14) {\n                        uVar6 = uVar12;\n                        if (0 < iVar16) {\n                            do {\n                                *(*(iStack144 * 8 + 0x1800227f0) + uVar12 + 0x3e + uVar4 * 0x48) = arg3[uVar12];\n                                uVar7 = uVar6 + 1;\n                                uVar12 = uVar12 + 1;\n                                uVar6 = uVar7;\n                            } while (uVar7 < iVar16);\n                        }\n                        *(arg1 + 4) = *(arg1 + 4) + iVar16;\n                        break;\n                    }\n                    uStack168 = 0;\n                    uVar7 = (iVar14 == 4) + 1;\n                    puStack232 = puStack176;\n                    puStack120 = arg3;\n                    iVar16 = fcn.18000e384(&uStack196, &puStack120, uVar7, &uStack168);\n                    if (iVar16 == -1) break;\n                    uVar15 = uVar7;\n                    puVar11 = arg3 + cVar2;\n                    iVar16 = iStack144;\n                }\n                else {\n                    iVar14 = *(*(*(iVar16 * 8 + 0x1800227f0) + 0x3e + uVar4 * 0x48) + 0x1800218d0) + 1;\n                    uVar7 = iVar14 - uVar7;\n                    uStack168 = uStack168 & 0xffffffff00000000 | uVar7;\n                    iVar9 = puStack184 - arg3;\n                    arg3_00 = uVar7;\n                    if (iVar9 < arg3_00) {\n                        if (0 < iVar9) {\n                            uVar6 = uVar15;\n                            do {\n                                *(*(iVar16 * 8 + 0x1800227f0) + uVar6 + 0x3e + uVar4 * 0x48) = arg3[uVar6 - uVar15];\n                                uVar7 = uVar12 + 1;\n                                uVar12 = uVar7;\n                                uVar6 = uVar6 + 1;\n                            } while (uVar7 < iVar9);\n                        }\n                        *(arg1 + 4) = *(arg1 + 4) + iVar9;\n                        break;\n                    }\n                    puVar10 = uVar4 * 0x48 + 0x3e + *(iStack104 * 8 + 0x1800227f0);\n                    uVar6 = uVar12;\n                    do {\n                        auStack88[uVar6] = *puVar10;\n                        uVar6 = uVar6 + 1;\n                        puVar10 = puVar10 + 1;\n                    } while (uVar6 < uVar15);\n                    uVar6 = uVar12;\n                    if (0 < arg3_00) {\n                        fcn.180004b30(auStack88 + uVar15, arg3, arg3_00);\n                    }\n                    do {\n                        *(*(iVar16 * 8 + 0x1800227f0) + uVar6 + 0x3e + uVar4 * 0x48) = 0;\n                        uVar6 = uVar6 + 1;\n                    } while (uVar6 < uVar15);\n                    uStack136 = 0;\n                    puStack128 = auStack88;\n                    uVar7 = (iVar14 == 4) + 1;\n                    uVar15 = uVar7;\n                    puStack232 = puStack176;\n                    iVar9 = fcn.18000e384(&uStack196, &puStack128, uVar7, &uStack136);\n                    if (iVar9 == -1) break;\n                    puVar11 = arg3 + (uStack168 + -1);\n                }\n            }\n            else {\n                iVar9 = *(iVar16 * 8 + 0x1800227f0);\n                uVar1 = *(iVar9 + 0x3d + uVar4 * 0x48);\n                if ((uVar1 & 4) == 0) {\n                    if (*(**(puStack176 + 0x18) + *arg3 * 2) < 0) {\n                        puVar11 = arg3 + 1;\n                        if (puVar11 < puStack184) {\n                            iVar14 = fcn.18000b5fc(&uStack196, arg3, 2, puStack176);\n                            if (iVar14 != -1) goto code_r0x00018000d8ae;\n                        }\n                        else {\n                            *(iVar9 + 0x3e + uVar4 * 0x48) = *arg3;\n                            puVar11 = *(iVar16 * 8 + 0x1800227f0) + 0x3d + uVar4 * 0x48;\n                            *puVar11 = *puVar11 | 4;\n                            *(arg1 + 4) = uVar6 + 1;\n                        }\n                        break;\n                    }\n                    uVar13 = 1;\n                    puVar11 = arg3;\n                }\n                else {\n                    uStack80 = *(iVar9 + 0x3e + uVar4 * 0x48);\n                    uStack79 = *arg3;\n                    *(iVar9 + 0x3d + uVar4 * 0x48) = uVar1 & 0xfb;\n                    uVar13 = 2;\n                    puVar11 = &uStack80;\n                }\n                iVar14 = fcn.18000b5fc(&uStack196, puVar11, uVar13, puStack176);\n                puVar11 = arg3;\n                if (iVar14 == -1) break;\n            }\ncode_r0x00018000d8ae:\n            arg3 = puVar11 + 1;\n            uStack208 = 0;\n            uStack216 = 0;\n            uStack224 = 5;\n            puStack232 = auStack72;\n            uVar7 = fcn.18000a154(uStack160, 0, &uStack196, uVar15);\n            uVar13 = uStack112;\n            if (uVar7 == 0) break;\n            puStack232 = NULL;\n            iVar14 = (*_sym.imp.KERNEL32.dll_WriteFile)(uStack112, auStack72, uVar7, auStack192);\n            if (iVar14 == 0) {\ncode_r0x00018000d9fb:\n                uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                *arg1 = uVar3;\n                break;\n            }\n            uVar8 = (arg3 - puStack152) + *(arg1 + 1);\n            *(arg1 + 4) = uVar8;\n            if (auStack192[0] < uVar7) break;\n            if (auStack200[0] == '\\n') {\n                auStack200[0] = 0xd;\n                puStack232 = NULL;\n                iVar14 = (*_sym.imp.KERNEL32.dll_WriteFile)(uVar13, auStack200, 1, auStack192);\n                if (iVar14 == 0) goto code_r0x00018000d9fb;\n                if (auStack192[0] == 0) break;\n                *(arg1 + 1) = *(arg1 + 1) + 1;\n                *(arg1 + 4) = *(arg1 + 4) + 1;\n                uVar8 = *(arg1 + 4);\n            }\n            uVar6 = uVar8;\n            iVar9 = iStack104;\n        } while (arg3 < puStack184);\n    }\n    fcn.1800010b0(uStack64 ^ auStack264);\n    return;\n}\n",
        "token_count": 2609
    },
    "18000dee": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: lpMode\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: lpNumberOfBytesWritten\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.18000dee0(ulong arg1, int16_t *arg2, ulong arg3, int64_t arg4)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int16_t iVar4;\n    int16_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    uint64_t *puVar9;\n    int32_t iVar10;\n    int64_t iVar11;\n    uint64_t arg4_00;\n    uint64_t uVar12;\n    int16_t *piVar13;\n    ulong uStack128;\n    int32_t iStack120;\n    uint64_t uStack112;\n    int64_t iStack88;\n    ulong var_48h;\n    ulong lpNumberOfBytesWritten;\n    ulong var_30h;\n    ulong lpMode;\n    ulong var_18h;\n    \n    iVar10 = 0;\n    arg4_00 = arg3;\n    uVar12 = arg1;\n    if (arg3 == 0) {\n        return 0;\n    }\n    if (arg2 == NULL) {\ncode_r0x00018000df10:\n        *(arg4 + 0x38) = 1;\n        *(arg4 + 0x34) = 0;\n        *(arg4 + 0x30) = 1;\n        *(arg4 + 0x2c) = 0x16;\n        fcn.1800084ec(0, 0, 0, 0);\n        return -1;\n    }\n    uVar8 = arg1 & 0x3f;\n    iVar11 = uVar12 >> 6;\n    iVar2 = *(iVar11 * 8 + 0x1800227f0);\n    cVar1 = *(iVar2 + 0x39 + uVar8 * 0x48);\n    iStack88 = iVar11;\n    if ((cVar1 - 1U < 2) && ((~arg3 & 1) == 0)) goto code_r0x00018000df10;\n    if ((*(iVar2 + 0x38 + uVar8 * 0x48) & 0x20) != 0) {\n        fcn.18000e958(uVar12 & 0xffffffff, 0, 2, arg4);\n    }\n    uStack112 = 0;\n    iVar6 = fcn.18000e2e0(uVar12 & 0xffffffff);\n    if ((iVar6 == 0) || (-1 < *(*(iVar11 * 8 + 0x1800227f0) + 0x38 + uVar8 * 0x48))) {\ncode_r0x00018000e0c3:\n        iVar2 = *(iVar11 * 8 + 0x1800227f0);\n        if (-1 < *(iVar2 + 0x38 + uVar8 * 0x48)) {\n            uStack128 = 0;\n            iStack120 = 0;\n            iVar6 = (*_sym.imp.KERNEL32.dll_WriteFile)(*(iVar2 + 0x28 + uVar8 * 0x48), arg2, arg4_00, &uStack128 + 4, 0)\n            ;\n            iVar10 = iStack120;\n            uVar3 = uStack128;\n            if (iVar6 == 0) {\n                uVar7 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                uStack128 = uStack128 & 0xffffffff00000000 | uVar7;\n                iVar10 = iStack120;\n                uVar3 = uStack128;\n            }\n            goto code_r0x00018000e164;\n        }\n        if (cVar1 == '\\0') {\n            puVar9 = fcn.18000da30(&uStack128, uVar12 & 0xffffffff, arg2, arg4_00);\n        }\n        else if (cVar1 == '\\x01') {\n            puVar9 = fcn.18000dc50(&uStack128, uVar12 & 0xffffffff, arg2, arg4_00);\n        }\n        else {\n            iVar10 = 0;\n            uVar3 = uStack112;\n            if (cVar1 != '\\x02') goto code_r0x00018000e164;\n            puVar9 = fcn.18000db34(&uStack128, uVar12 & 0xffffffff, arg2, arg4_00);\n        }\n    }\n    else {\n        if (*(arg4 + 0x28) == '\\0') {\n            fcn.180006f60(arg4);\n        }\n        if (((*(*(arg4 + 0x18) + 0x138) == 0) && (*(*(iVar11 * 8 + 0x1800227f0) + 0x39 + uVar8 * 0x48) == '\\0')) ||\n           (iVar6 = (*_sym.imp.KERNEL32.dll_GetConsoleMode)(),  iVar6 == 0)) goto code_r0x00018000e0c3;\n        if (cVar1 != '\\0') {\n            if ((cVar1 == '\\x01') || (uVar3 = uStack112,  cVar1 == '\\x02')) {\n                uStack128 = 0;\n                iVar11 = iStack88;\n                uVar3 = uStack128;\n                if (arg2 < arg2 + arg4_00) {\n                    uStack128._4_4_ = 0;\n                    piVar13 = arg2;\n                    do {\n                        iVar5 = *piVar13;\n                        iVar4 = fcn.18000e960();\n                        if (iVar4 != iVar5) {\ncode_r0x00018000e087:\n                            uVar7 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                            uStack128 = uStack128 & 0xffffffff00000000 | uVar7;\n                            iVar11 = iStack88;\n                            uVar3 = uStack128;\n                            break;\n                        }\n                        uStack128 = uStack128 & 0xffffffff | uStack128._4_4_ + 2 << 0x20;\n                        uVar7 = uStack128._4_4_ + 2;\n                        if (iVar5 == 10) {\n                            iVar5 = fcn.18000e960(0xd);\n                            if (iVar5 != 0xd) goto code_r0x00018000e087;\n                            uStack128 = uStack128 & 0xffffffff | uStack128._4_4_ + 3 << 0x20;\n                            iVar10 = iVar10 + 1;\n                            uVar7 = uStack128._4_4_ + 3;\n                        }\n                        uStack128._4_4_ = uVar7;\n                        piVar13 = piVar13 + 1;\n                        iVar11 = iStack88;\n                        uVar3 = uStack128;\n                    } while (piVar13 < arg2 + arg4_00);\n                }\n            }\n            goto code_r0x00018000e164;\n        }\n        puVar9 = fcn.18000d5b8(&uStack128, uVar12 & 0xffffffff, arg2, arg4_00);\n    }\n    iVar10 = *(puVar9 + 1);\n    uVar3 = *puVar9;\ncode_r0x00018000e164:\n    uStack112 = uVar3;\n    iVar6 = uStack112 >> 0x20;\n    if (iVar6 != 0) {\n        return iVar6 - iVar10;\n    }\n    if (uStack112 != 0) {\n        if (uStack112 == 5) {\n            *(arg4 + 0x30) = 1;\n            *(arg4 + 0x2c) = 9;\n            *(arg4 + 0x38) = 1;\n            *(arg4 + 0x34) = 5;\n            return -1;\n        }\n        fcn.1800086b0(uStack112 & 0xffffffff, arg4);\n        return -1;\n    }\n    if (((*(*(iVar11 * 8 + 0x1800227f0) + 0x38 + uVar8 * 0x48) & 0x40) != 0) && (*arg2 == '\\x1a')) {\n        return 0;\n    }\n    *(arg4 + 0x34) = 0;\n    *(arg4 + 0x30) = 1;\n    *(arg4 + 0x2c) = 0x1c;\n    *(arg4 + 0x38) = 1;\n    return -1;\n}\n",
        "token_count": 1983
    },
    "18000e38": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint64_t fcn.18000e384(uint16_t *arg1, char **arg2, uint64_t arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    uint16_t *puVar2;\n    char *pcVar3;\n    char *arg2_00;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint32_t auStackX8 [2];\n    int64_t in_stack_00000028;\n    \n    arg2_00 = *arg2;\n    iVar4 = 0;\n    if (arg1 == NULL) {\n        while( true ) {\n            if (*arg2_00 == '\\0') {\n                iVar5 = 1;\n            }\n            else if (arg2_00[1] == '\\0') {\n                iVar5 = 2;\n            }\n            else {\n                iVar5 = (arg2_00[2] != '\\0') + 3;\n            }\n            iVar5 = fcn.18000f128(0, arg2_00, iVar5, arg4);\n            if (iVar5 == -1) {\n                *(in_stack_00000028 + 0x30) = 1;\n                *(in_stack_00000028 + 0x2c) = 0x2a;\n                return -1;\n            }\n            if (iVar5 == 0) break;\n            if (iVar5 == 4) {\n                iVar4 = iVar4 + 1;\n            }\n            arg2_00 = arg2_00 + iVar5;\n            iVar4 = iVar4 + 1;\n        }\n    }\n    else {\n        puVar2 = arg1;\n        pcVar3 = arg2_00;\n        if (arg3 != 0) {\n            do {\n                if (*arg2_00 == '\\0') {\n                    iVar4 = 1;\n                }\n                else if (arg2_00[1] == '\\0') {\n                    iVar4 = 2;\n                }\n                else {\n                    iVar4 = (arg2_00[2] != '\\0') + 3;\n                }\n                iVar4 = fcn.18000f128(auStackX8, arg2_00, iVar4, arg4);\n                if (iVar4 == -1) {\n                    *arg2 = arg2_00;\n                    *(in_stack_00000028 + 0x30) = 1;\n                    *(in_stack_00000028 + 0x2c) = 0x2a;\n                    return -1;\n                }\n                pcVar3 = NULL;\n                if (iVar4 == 0) {\n                    *puVar2 = 0;\n                    break;\n                }\n                uVar1 = auStackX8[0];\n                if (0xffff < auStackX8[0]) {\n                    pcVar3 = arg2_00;\n                    if (arg3 < 2) break;\n                    auStackX8[0] = auStackX8[0] - 0x10000;\n                    arg3 = arg3 - 1;\n                    *puVar2 = auStackX8[0] >> 10 | 0xd800;\n                    puVar2 = puVar2 + 1;\n                    uVar1 = auStackX8[0] & 0x3ff | 0xdc00;\n                }\n                *puVar2 = uVar1;\n                pcVar3 = arg2_00 + iVar4;\n                puVar2 = puVar2 + 1;\n                arg3 = arg3 - 1;\n                arg2_00 = pcVar3;\n            } while (arg3 != 0);\n        }\n        *arg2 = pcVar3;\n        iVar4 = puVar2 - arg1 >> 1;\n    }\n    return iVar4;\n}\n",
        "token_count": 818
    },
    "18000eac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.18000eac0(ulong param_1)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    int64_t var_40h;\n    ulong var_30h;\n    ulong var_28h;\n    uint uStack40;\n    uint uStack36;\n    ulong var_18h;\n    ulong var_bp_10h;\n    ulong var_bp_8h;\n    \n    var_40h = 0;\n    var_18h._0_1_ = *0x180022c58 == 0;\n    var_30h._0_1_ = 0;\n    var_bp_10h._0_1_ = '\\0';\n    var_bp_8h._0_1_ = '\\0';\n    if (var_18h) {\n        var_28h._0_4_ = *0x1800216f8;\n        var_28h._4_4_ = *0x1800216fc;\n        uStack40 = *0x180021700;\n        uStack36 = *0x180021704;\n    }\n    uVar1 = fcn.18000e99c(param_1, &var_40h);\n    if (var_18h == '\\x02') {\n        *(var_40h + 0x3a8) = *(var_40h + 0x3a8) & 0xfffffffd;\n    }\n    if (var_bp_10h != '\\0') {\n        iVar2 = fcn.180006ef0(&var_40h);\n        *(iVar2 + 0x20) = var_18h._4_4_;\n    }\n    if (var_bp_8h != '\\0') {\n        iVar2 = fcn.180006ef0(&var_40h);\n        *(iVar2 + 0x24) = var_bp_10h._4_4_;\n    }\n    return uVar1;\n}\n",
        "token_count": 432
    },
    "18000f12": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.18000f128(uint64_t arg1, uint8_t *arg2, uint64_t arg3, uint32_t *arg4)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint64_t uVar4;\n    uint8_t *puVar5;\n    uint8_t uVar6;\n    uint64_t uVar7;\n    uint32_t *arg1_00;\n    uint32_t *puVar8;\n    uint64_t uVar9;\n    ulong in_stack_00000028;\n    uchar auStack120 [24];\n    uint32_t auStack96 [6];\n    uint64_t uStack72;\n    \n    uStack72 = *0x180021010 ^ auStack120;\n    arg1_00 = 0x180022c70;\n    if (arg4 != NULL) {\n        arg1_00 = arg4;\n    }\n    puVar5 = 0x180016d52;\n    if (arg2 != NULL) {\n        puVar5 = arg2;\n    }\n    uVar9 = 1;\n    if (arg2 != NULL) {\n        uVar9 = arg3;\n    }\n    puVar8 = -(arg2 != NULL) & arg1;\n    if (uVar9 == 0) goto code_r0x00018000f2e5;\n    if (*(arg1_00 + 6) == 0) {\n        uVar3 = *puVar5;\n        puVar5 = puVar5 + 1;\n        if (-1 < uVar3) {\n            if (puVar8 != NULL) {\n                *puVar8 = uVar3;\n            }\n            goto code_r0x00018000f2e5;\n        }\n        if ((uVar3 & 0xe0) == 0xc0) {\n            uVar6 = 2;\n        }\n        else if ((uVar3 & 0xf0) == 0xe0) {\n            uVar6 = 3;\n        }\n        else {\n            if ((uVar3 & 0xf8) != 0xf0) goto code_r0x00018000f2da;\n            uVar6 = 4;\n        }\n        uVar2 = (1 << (7 - uVar6 & 0x1f)) - 1U & uVar3;\n        uVar3 = uVar6;\ncode_r0x00018000f230:\n        uVar4 = uVar3;\n        uVar7 = uVar3;\n        if (uVar9 <= uVar4) {\n            uVar7 = uVar9;\n        }\n        while (puVar5 - arg2 < uVar7) {\n            uVar1 = *puVar5;\n            puVar5 = puVar5 + 1;\n            if ((uVar1 & 0xc0) != 0x80) goto code_r0x00018000f2da;\n            uVar2 = uVar1 & 0x3f | uVar2 << 6;\n        }\n        if (uVar7 < uVar4) {\n            *(arg1_00 + 1) = uVar6;\n            *(arg1_00 + 6) = uVar3 - uVar7;\n            *arg1_00 = uVar2;\n            goto code_r0x00018000f2e5;\n        }\n        if ((0x7ff < uVar2 - 0xd800) && (uVar2 < 0x110000)) {\n            auStack96[2] = 0x80;\n            auStack96[3] = 0x800;\n            auStack96[4] = 0x10000;\n            if (auStack96[uVar6] <= uVar2) {\n                if (puVar8 != NULL) {\n                    *puVar8 = uVar2;\n                }\n                fcn.18000f10c(-(uVar2 != 0) & uVar4, arg1_00);\n                goto code_r0x00018000f2e5;\n            }\n        }\n    }\n    else {\n        uVar6 = *(arg1_00 + 1);\n        uVar2 = *arg1_00;\n        uVar3 = *(arg1_00 + 6);\n        if (((uVar6 - 2 < 3) && (uVar3 != 0)) && (uVar3 < uVar6)) goto code_r0x00018000f230;\n    }\ncode_r0x00018000f2da:\n    fcn.18000f114(arg1_00, in_stack_00000028);\ncode_r0x00018000f2e5:\n    fcn.1800010b0(uStack72 ^ auStack120);\n    return;\n}\n",
        "token_count": 1051
    },
    "18000f57": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.18000f570(ulong arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    uint64_t uVar6;\n    \n    uVar6 = arg1;\n    iVar3 = fcn.18000d420(uVar6 & 0xffffffff);\n    if (iVar3 != -1) {\n        if (((arg1 == 1) && ((*(*0x1800227f0 + 200) & 1) != 0)) || ((arg1 == 2 && ((*(*0x1800227f0 + 0x80) & 1) != 0))))\n        {\n            iVar3 = fcn.18000d420(2);\n            iVar4 = fcn.18000d420(1);\n            if (iVar4 == iVar3) goto code_r0x00018000f592;\n        }\n        fcn.18000d420(uVar6 & 0xffffffff);\n        iVar1 = (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        if (iVar1 == 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            goto code_r0x00018000f5f0;\n        }\n    }\ncode_r0x00018000f592:\n    uVar2 = 0;\ncode_r0x00018000f5f0:\n    fcn.18000d364(uVar6 & 0xffffffff);\n    *(*((uVar6 >> 6) * 8 + 0x1800227f0) + 0x38 + (arg1 & 0x3f) * 0x48) = 0;\n    if (uVar2 == 0) {\n        uVar5 = 0;\n    }\n    else {\n        fcn.1800086b0(uVar2, arg2);\n        uVar5 = 0xffffffff;\n    }\n    return uVar5;\n}\n",
        "token_count": 442
    },
    "18001019": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.180010190(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    double dVar3;\n    uint uStack88;\n    int32_t iStack84;\n    int32_t iStack80;\n    int16_t iStack64;\n    int16_t iStack62;\n    uint64_t uStack48;\n    double dStack32;\n    int64_t iStack24;\n    \n    uStack88 = 0x38;\n    iVar1 = (*_sym.imp.USER32.dll_GetGestureInfo)(arg4, &uStack88);\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        if (iStack80 == 3) {\n            if (iStack84 == 1) {\n                *(arg1 + 3) = uStack48;\n                *(arg1 + 1) = iStack64;\n                *(arg1 + 0xc) = iStack62;\n                (*_sym.imp.USER32.dll_ScreenToClient)(arg2, arg1 + 1);\n            }\n            else {\n                *(arg1 + 2) = iStack64;\n                *(arg1 + 0x14) = iStack62;\n                (*_sym.imp.USER32.dll_ScreenToClient)(arg2);\n                iVar1 = *(arg1 + 0xc) + *(arg1 + 0x14);\n                dStack32 = (uStack48 & 0xffffffff) / *(arg1 + 3);\n                (**(*arg1 + 0x18))(dStack32, dStack32, arg1, iVar1 >> 0x1f, (*(arg1 + 1) + *(arg1 + 2)) / 2, iVar1 / 2);\n                (*_sym.imp.USER32.dll_InvalidateRect)(arg2, 0, 1);\n                arg1[1] = arg1[2];\n                *(arg1 + 3) = uStack48;\n            }\n        }\n        else if (iStack80 == 4) {\n            if (iStack84 == 1) {\n                *(arg1 + 1) = iStack64;\n                *(arg1 + 0xc) = iStack62;\n                (*_sym.imp.USER32.dll_ScreenToClient)(arg2, arg1 + 1);\n            }\n            else {\n                *(arg1 + 2) = iStack64;\n                *(arg1 + 0x14) = iStack62;\n                (*_sym.imp.USER32.dll_ScreenToClient)(arg2, arg1 + 2);\n                iStack24 = *arg1;\n                (**(iStack24 + 0x20))(arg1, *(arg1 + 2) - *(arg1 + 1), *(arg1 + 0x14) - *(arg1 + 0xc));\n                (*_sym.imp.USER32.dll_InvalidateRect)(arg2, 0, 1);\n                arg1[1] = arg1[2];\n            }\n        }\n        else if (iStack80 == 5) {\n            if (iStack84 == 1) {\n                *(arg1 + 3) = 0;\n            }\n            else {\n                *(arg1 + 1) = iStack64;\n                *(arg1 + 0xc) = iStack62;\n                (*_sym.imp.USER32.dll_ScreenToClient)(arg2, arg1 + 1);\n                dVar3 = (((uStack48 & 0xffffffff) / *0x18001e060) * *0x18001e050 * *0x18001e048 - *0x18001e058) -\n                        ((*(arg1 + 3) / *0x18001e060) * *0x18001e050 * *0x18001e048 - *0x18001e058);\n                (**(*arg1 + 0x28))(dVar3, dVar3, arg1);\n                (*_sym.imp.USER32.dll_InvalidateRect)(arg2, 0, 1);\n                *(arg1 + 3) = uStack48;\n            }\n        }\n        else if (iStack80 == 6) {\n            (**(*arg1 + 0x10))(arg1);\n            (*_sym.imp.USER32.dll_InvalidateRect)(arg2, 0, 1);\n        }\n        else if ((iStack80 == 7) && (iStack84 == 1)) {\n            (**(*arg1 + 8))(arg1);\n            (*_sym.imp.USER32.dll_InvalidateRect)(arg2, 0, 1);\n        }\n        (*_sym.imp.USER32.dll_CloseGestureInfoHandle)(arg4);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 1057
    },
    "18001091": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool fcn.180010910(ulong arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    \n    *0x180022ca8 = arg1;\n    iVar1 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                      (0, 0x180022cb0, 0x180022d80, 0xcf0000, 0x80000000, 0, 0x80000000, 0, 0, 0, arg1, 0);\n    if (iVar1 != 0) {\n        (*_sym.imp.USER32.dll_ShowWindow)(iVar1, arg2);\n        (*_sym.imp.USER32.dll_UpdateWindow)(iVar1);\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 164
    },
    "180010ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.180010ac0(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    ulong uStack40;\n    ulong uStack32;\n    ulong uStack24;\n    \n    if (arg2 == 1) {\n        uStack40 = 0;\n        uStack32 = 0;\n        *0x180022ca0 = arg1;\n        iVar1 = fcn.180010db0();\n        if (iVar1 != 0) {\n            (*_sym.imp.KERNEL32.dll_ExitProcess)();\n        }\n        *0x180021a00 = 0;\n        *0x1800219f4 = 0;\n        *0x180021a04 = 0;\n        *0x1800219f8 = 0;\n        *0x1800219fc = 0;\n        *0x1800219f0 = 0;\n        *0x180022d78 = 0x39071edd;\n        fcn.180010c10(0x904, &uStack32);\n        fcn.180010c10(0xf9e, &uStack40);\n        fcn.180002680(0x180022c80, 0, 0x20);\n        *0x180022c88 = 1;\n        *0x180022c90 = uStack40;\n        uStack24 = uStack32;\n        *0x180022c80 = arg1;\n        (*_sym.imp.ntdll.dll_NtQueueApcThread)(0xfffffffffffffffe, uStack32, 0x180022c80, 0, 0);\n        (*_sym.imp.ntdll.dll_NtTestAlert)();\n    }\n    return 1;\n}\n",
        "token_count": 380
    },
    "180001a8": {
        "rules": [
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000180001b4a)\n// WARNING: Removing unreachable block (ram,0x000180001aba)\n// WARNING: Removing unreachable block (ram,0x000180001a93)\n\nulong fcn.180001a80(ulong noname_0, ulong arg2)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint8_t in_XCR0;\n    \n    piVar1 = cpuid_basic_info(0);\n    uVar6 = 0;\n    puVar2 = cpuid_Version_info(1);\n    uVar4 = puVar2[3];\n    if ((piVar1[2] ^ 0x49656e69U | piVar1[3] ^ 0x6c65746eU | piVar1[1] ^ 0x756e6547U) == 0) {\n        *0x180021028 = 0xffffffffffffffff;\n        uVar5 = *puVar2 & 0xfff3ff0;\n        *0x180021020 = 0x8000;\n        if ((((uVar5 == 0x106c0) || (uVar5 == 0x20660)) || (uVar5 == 0x20670)) ||\n           ((uVar5 - 0x30650 < 0x21 && ((0x100010001U >> (uVar5 - 0x30650 & 0x3f) & 1) != 0)))) {\n            *0x180022090 = *0x180022090 | 1;\n        }\n    }\n    if (6 < *piVar1) {\n        iVar3 = cpuid_Extended_Feature_Enumeration_info(7);\n        uVar6 = *(iVar3 + 4);\n        if ((uVar6 >> 9 & 1) != 0) {\n            *0x180022090 = *0x180022090 | 2;\n        }\n    }\n    *0x180021018 = 1;\n    *0x18002101c = 2;\n    if ((uVar4 >> 0x14 & 1) != 0) {\n        *0x180021018 = 2;\n        *0x18002101c = 6;\n        if ((((uVar4 >> 0x1b & 1) != 0) && ((uVar4 >> 0x1c & 1) != 0)) && ((in_XCR0 & 6) == 6)) {\n            *0x18002101c = 0xe;\n            *0x180021018 = 3;\n            if ((uVar6 & 0x20) != 0) {\n                *0x180021018 = 5;\n                *0x18002101c = 0x2e;\n                if (((uVar6 & 0xd0030000) == 0xd0030000) && ((in_XCR0 & 0xe0) == 0xe0)) {\n                    *0x18002101c = 0x6e;\n                    *0x180021018 = 6;\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 734
    },
    "180002e6": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuchar fcn.180002e64(void)\n\n{\n    if (*0x180021030 != 0xffffffff) {\n        fcn.180004754(*0x180021030);\n        *0x180021030 = 0xffffffff;\n    }\n    return 1;\n}\n",
        "token_count": 60
    },
    "180007e8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint64_t fcn.180007e8c(ulong noname_0, ulong lpFlsData)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    \n    if ((*0x180021050 == -1) || (iVar3 = sub.KERNEL32.dll_FlsGetValue(),  iVar3 == 0)) {\n        iVar2 = sub.KERNEL32.dll_FlsSetValue(*0x180021050, 0xffffffffffffffff);\n        if (iVar2 != 0) {\n            iVar3 = fcn.180008714(1, 0x3c8);\n            if (iVar3 == 0) {\n                sub.KERNEL32.dll_FlsSetValue(*0x180021050, 0);\n                iVar3 = 0;\n            }\n            else {\n                iVar2 = sub.KERNEL32.dll_FlsSetValue(*0x180021050, iVar3);\n                if (iVar2 != 0) {\n                    fcn.180007b24(iVar3);\n                    fcn.18000878c(0);\n                    return iVar3;\n                }\n                sub.KERNEL32.dll_FlsSetValue(*0x180021050, 0);\n            }\n            fcn.18000878c(iVar3);\n        }\n    }\n    else if (iVar3 != -1) {\n        return iVar3;\n    }\n    fcn.180006e28();\n    pcVar1 = swi(3);\n    iVar3 = (*pcVar1)();\n    return iVar3;\n}\n",
        "token_count": 328
    },
    "180007ff": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint64_t fcn.180007ff8(ulong noname_0, int64_t lpFlsData)\n\n{\n    int32_t iVar1;\n    int64_t arg1;\n    int64_t iVar2;\n    \n    iVar2 = 0;\n    if ((*0x180021050 == -1) || (arg1 = sub.KERNEL32.dll_FlsGetValue(),  arg1 == 0)) {\n        iVar1 = sub.KERNEL32.dll_FlsSetValue(*0x180021050, 0xffffffffffffffff);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        arg1 = fcn.180008714(1, 0x3c8);\n        if (arg1 == 0) {\n            sub.KERNEL32.dll_FlsSetValue(*0x180021050, 0);\n            arg1 = 0;\n        }\n        else {\n            iVar1 = sub.KERNEL32.dll_FlsSetValue(*0x180021050, arg1);\n            if (iVar1 != 0) {\n                fcn.180007b24(arg1);\n                fcn.18000878c(0);\n                goto code_r0x000180008099;\n            }\n            sub.KERNEL32.dll_FlsSetValue(*0x180021050, 0);\n        }\n        fcn.18000878c(arg1);\n    }\n    else {\n        if (arg1 == -1) {\n            return 0;\n        }\ncode_r0x000180008099:\n        iVar2 = lpFlsData * 0x3c8 + arg1;\n    }\n    return iVar2;\n}\n",
        "token_count": 349
    },
    "1800080f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuchar fcn.1800080f4(void)\n\n{\n    if (*0x180021050 != -1) {\n        sub.KERNEL32.dll_FlsFree();\n        *0x180021050 = -1;\n    }\n    return 1;\n}\n",
        "token_count": 55
    },
    "18000e1e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.18000e1e8(void)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int32_t iStack24;\n    \n    iStack24 = 0;\n    fcn.180008160(8);\n    for (iVar3 = 3; iVar3 != *0x180022c30; iVar3 = iVar3 + 1) {\n        iVar4 = iVar3;\n        iVar1 = *(*0x180022c38 + iVar4 * 8);\n        if (iVar1 != 0) {\n            if (((*(iVar1 + 0x14) >> 0xd & 1) != 0) &&\n               (iVar2 = fcn.18000eac0(*(*0x180022c38 + iVar4 * 8)),  iVar2 != -1)) {\n                iStack24 = iStack24 + 1;\n            }\n            (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(*(*0x180022c38 + iVar4 * 8) + 0x30);\n            fcn.18000878c(*(*0x180022c38 + iVar4 * 8));\n            *(*0x180022c38 + iVar4 * 8) = 0;\n        }\n    }\n    fcn.1800081b4(8);\n    return iStack24;\n}\n",
        "token_count": 308
    },
    "180002eb": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint fcn.180002eb0(ulong arg1, ulong arg2, int64_t arg3)\n\n{\n    int64_t *piVar1;\n    uchar auStackX24 [16];\n    \n    piVar1 = fcn.180002068(arg1, arg2, arg3, auStackX24);\n    return *(*(arg3 + 0x1c) + 4 + *piVar1);\n}\n",
        "token_count": 92
    },
    "180002ee": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.180002ee8(ulong arg1, ulong arg2, int64_t arg3, ulong arg4)\n\n{\n    int64_t *piVar1;\n    uchar auStackX24 [16];\n    \n    piVar1 = fcn.180002068(arg1, arg2, arg3, auStackX24);\n    if (*(*(arg3 + 0x1c) + 4 + *piVar1) < arg4) {\n        *(*(arg3 + 0x1c) + 4 + *piVar1) = arg4;\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "1800099b": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t fcn.1800099b0(ulong arg1, ulong noname_1, int64_t arg3, ulong *arg4)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint *puVar12;\n    uint32_t uVar13;\n    int32_t iVar14;\n    uint *arg2;\n    uint *puVar15;\n    uint *puVar16;\n    uint *puVar17;\n    int64_t iVar18;\n    int64_t iVar19;\n    int64_t iStackX24;\n    ulong *puStackX32;\n    uchar auStack616 [4];\n    uint uStack612;\n    uint auStack608 [2];\n    int64_t *piStack600;\n    ulong **ppuStack592;\n    uint auStack584 [140];\n    \n    iStackX24 = arg3;\n    puStackX32 = arg4;\n    fcn.180009c20(arg3, arg4);\n    uVar13 = fcn.1800096b0(arg1);\n    if (uVar13 == *(*(iStackX24 + 0x88) + 4)) {\n        iVar14 = 0;\n    }\n    else {\n        arg2 = fcn.18000b4c4(0x228);\n        if (arg2 == NULL) {\n            fcn.18000878c(0);\n            iVar14 = -1;\n        }\n        else {\n            iVar18 = 4;\n            iVar19 = 4;\n            puVar16 = *(iStackX24 + 0x88);\n            puVar12 = auStack584;\n            do {\n                puVar17 = puVar12;\n                puVar15 = puVar16;\n                uVar4 = puVar15[1];\n                uVar5 = puVar15[2];\n                uVar6 = puVar15[3];\n                uVar7 = puVar15[4];\n                uVar8 = puVar15[5];\n                uVar9 = puVar15[6];\n                uVar10 = puVar15[7];\n                *puVar17 = *puVar15;\n                puVar17[1] = uVar4;\n                puVar17[2] = uVar5;\n                puVar17[3] = uVar6;\n                uVar4 = puVar15[8];\n                uVar5 = puVar15[9];\n                uVar6 = puVar15[10];\n                uVar11 = puVar15[0xb];\n                puVar17[4] = uVar7;\n                puVar17[5] = uVar8;\n                puVar17[6] = uVar9;\n                puVar17[7] = uVar10;\n                uVar7 = puVar15[0xc];\n                uVar8 = puVar15[0xd];\n                uVar9 = puVar15[0xe];\n                uVar10 = puVar15[0xf];\n                puVar17[8] = uVar4;\n                puVar17[9] = uVar5;\n                puVar17[10] = uVar6;\n                puVar17[0xb] = uVar11;\n                uVar4 = puVar15[0x10];\n                uVar5 = puVar15[0x11];\n                uVar6 = puVar15[0x12];\n                uVar11 = puVar15[0x13];\n                puVar17[0xc] = uVar7;\n                puVar17[0xd] = uVar8;\n                puVar17[0xe] = uVar9;\n                puVar17[0xf] = uVar10;\n                uVar7 = puVar15[0x14];\n                uVar8 = puVar15[0x15];\n                uVar9 = puVar15[0x16];\n                uVar10 = puVar15[0x17];\n                puVar17[0x10] = uVar4;\n                puVar17[0x11] = uVar5;\n                puVar17[0x12] = uVar6;\n                puVar17[0x13] = uVar11;\n                uVar4 = puVar15[0x18];\n                uVar5 = puVar15[0x19];\n                uVar6 = puVar15[0x1a];\n                uVar11 = puVar15[0x1b];\n                puVar17[0x14] = uVar7;\n                puVar17[0x15] = uVar8;\n                puVar17[0x16] = uVar9;\n                puVar17[0x17] = uVar10;\n                uVar7 = puVar15[0x1c];\n                uVar8 = puVar15[0x1d];\n                uVar9 = puVar15[0x1e];\n                uVar10 = puVar15[0x1f];\n                puVar17[0x18] = uVar4;\n                puVar17[0x19] = uVar5;\n                puVar17[0x1a] = uVar6;\n                puVar17[0x1b] = uVar11;\n                puVar17[0x1c] = uVar7;\n                puVar17[0x1d] = uVar8;\n                puVar17[0x1e] = uVar9;\n                puVar17[0x1f] = uVar10;\n                iVar19 = iVar19 + -1;\n                puVar16 = puVar15 + 0x20;\n                puVar12 = puVar17 + 0x20;\n            } while (iVar19 != 0);\n            uVar4 = puVar15[0x21];\n            uVar5 = puVar15[0x22];\n            uVar6 = puVar15[0x23];\n            uVar7 = puVar15[0x24];\n            uVar8 = puVar15[0x25];\n            uVar9 = puVar15[0x26];\n            uVar10 = puVar15[0x27];\n            uVar2 = *(puVar15 + 0x28);\n            puVar17[0x20] = puVar15[0x20];\n            puVar17[0x21] = uVar4;\n            puVar17[0x22] = uVar5;\n            puVar17[0x23] = uVar6;\n            puVar17[0x24] = uVar7;\n            puVar17[0x25] = uVar8;\n            puVar17[0x26] = uVar9;\n            puVar17[0x27] = uVar10;\n            *(puVar17 + 0x28) = uVar2;\n            puVar16 = auStack584;\n            puVar12 = arg2;\n            do {\n                puVar17 = puVar12;\n                puVar15 = puVar16;\n                uVar4 = puVar15[1];\n                uVar5 = puVar15[2];\n                uVar6 = puVar15[3];\n                uVar7 = puVar15[4];\n                uVar8 = puVar15[5];\n                uVar9 = puVar15[6];\n                uVar10 = puVar15[7];\n                *puVar17 = *puVar15;\n                puVar17[1] = uVar4;\n                puVar17[2] = uVar5;\n                puVar17[3] = uVar6;\n                uVar4 = puVar15[8];\n                uVar5 = puVar15[9];\n                uVar6 = puVar15[10];\n                uVar11 = puVar15[0xb];\n                puVar17[4] = uVar7;\n                puVar17[5] = uVar8;\n                puVar17[6] = uVar9;\n                puVar17[7] = uVar10;\n                uVar7 = puVar15[0xc];\n                uVar8 = puVar15[0xd];\n                uVar9 = puVar15[0xe];\n                uVar10 = puVar15[0xf];\n                puVar17[8] = uVar4;\n                puVar17[9] = uVar5;\n                puVar17[10] = uVar6;\n                puVar17[0xb] = uVar11;\n                uVar4 = puVar15[0x10];\n                uVar5 = puVar15[0x11];\n                uVar6 = puVar15[0x12];\n                uVar11 = puVar15[0x13];\n                puVar17[0xc] = uVar7;\n                puVar17[0xd] = uVar8;\n                puVar17[0xe] = uVar9;\n                puVar17[0xf] = uVar10;\n                uVar7 = puVar15[0x14];\n                uVar8 = puVar15[0x15];\n                uVar9 = puVar15[0x16];\n                uVar10 = puVar15[0x17];\n                puVar17[0x10] = uVar4;\n                puVar17[0x11] = uVar5;\n                puVar17[0x12] = uVar6;\n                puVar17[0x13] = uVar11;\n                uVar4 = puVar15[0x18];\n                uVar5 = puVar15[0x19];\n                uVar6 = puVar15[0x1a];\n                uVar11 = puVar15[0x1b];\n                puVar17[0x14] = uVar7;\n                puVar17[0x15] = uVar8;\n                puVar17[0x16] = uVar9;\n                puVar17[0x17] = uVar10;\n                uVar7 = puVar15[0x1c];\n                uVar8 = puVar15[0x1d];\n                uVar9 = puVar15[0x1e];\n                uVar10 = puVar15[0x1f];\n                puVar17[0x18] = uVar4;\n                puVar17[0x19] = uVar5;\n                puVar17[0x1a] = uVar6;\n                puVar17[0x1b] = uVar11;\n                puVar17[0x1c] = uVar7;\n                puVar17[0x1d] = uVar8;\n                puVar17[0x1e] = uVar9;\n                puVar17[0x1f] = uVar10;\n                iVar18 = iVar18 + -1;\n                puVar16 = puVar15 + 0x20;\n                puVar12 = puVar17 + 0x20;\n            } while (iVar18 != 0);\n            uVar4 = puVar15[0x21];\n            uVar5 = puVar15[0x22];\n            uVar6 = puVar15[0x23];\n            uVar7 = puVar15[0x24];\n            uVar8 = puVar15[0x25];\n            uVar9 = puVar15[0x26];\n            uVar10 = puVar15[0x27];\n            uVar2 = *(puVar15 + 0x28);\n            puVar17[0x20] = puVar15[0x20];\n            puVar17[0x21] = uVar4;\n            puVar17[0x22] = uVar5;\n            puVar17[0x23] = uVar6;\n            puVar17[0x24] = uVar7;\n            puVar17[0x25] = uVar8;\n            puVar17[0x26] = uVar9;\n            puVar17[0x27] = uVar10;\n            *(puVar17 + 0x28) = uVar2;\n            *arg2 = 0;\n            iVar14 = fcn.180009d54(uVar13, arg2);\n            if (iVar14 == -1) {\n                puVar16 = fcn.1800086f4();\n                *puVar16 = 0x16;\n                fcn.18000878c(arg2);\n                iVar14 = -1;\n            }\n            else {\n                if (noname_1 == '\\0') {\n                    fcn.18000b80c();\n                }\n                piVar3 = *(iStackX24 + 0x88);\n                LOCK();\n                iVar1 = *piVar3;\n                *piVar3 = *piVar3 + -1;\n                if ((iVar1 == 1) && (*(iStackX24 + 0x88) != 0x180021060)) {\n                    fcn.18000878c(*(iStackX24 + 0x88));\n                }\n                *arg2 = 1;\n                *(iStackX24 + 0x88) = arg2;\n                if ((*0x180021824 & *(iStackX24 + 0x3a8)) == 0) {\n                    piStack600 = &iStackX24;\n                    ppuStack592 = &puStackX32;\n                    uStack612 = 5;\n                    auStack608[0] = 5;\n                    fcn.1800094e0(auStack616, auStack608, &piStack600, &uStack612);\n                    if (noname_1 != '\\0') {\n                        *0x180021700 = *puStackX32;\n                    }\n                }\n                fcn.18000878c(0);\n            }\n        }\n    }\n    return iVar14;\n}\n",
        "token_count": 3032
    },
    "180010c1": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.180010c10(ulong arg1, int64_t *arg2)\n\n{\n    uchar auStack856 [32];\n    uint uStack824;\n    uint uStack816;\n    int32_t iStack808;\n    uint uStack804;\n    uint32_t uStack800;\n    uint64_t uStack792;\n    int64_t iStack784;\n    int64_t iStack776;\n    ulong uStack768;\n    int64_t iStack760;\n    ulong uStack752;\n    ulong uStack744;\n    ulong uStack728;\n    int64_t iStack720;\n    ulong uStack712;\n    uint64_t uStack24;\n    \n    uStack24 = *0x180021010 ^ auStack856;\n    iStack784 = 0;\n    iStack760 = 0x18001df88;\n    uStack752 = 0;\n    uStack744 = 0;\n    iStack776 = 0;\n    uStack792 = 0;\n    uStack728 = 0x18001dfb0;\n    iStack720 = arg1;\n    uStack712 = 0x409;\n    uStack804 = (*_sym.imp.ntdll.dll_LdrFindResource_U)(0x180000000, &uStack728, 3, &uStack768);\n    uStack804 = (*_sym.imp.ntdll.dll_LdrAccessResource)(0x180000000, uStack768, &iStack776, &uStack792);\n    uStack816 = 0x40;\n    uStack824 = 0x3000;\n    (*_sym.imp.ntdll.dll_NtAllocateVirtualMemory)(0xffffffffffffffff, &iStack784, 0, &uStack792);\n    for (iStack808 = 0; iStack808 < uStack792; iStack808 = iStack808 + 1) {\n        uStack800 = *(iStack776 + iStack808);\n        *(iStack784 + iStack808) = *(iStack776 + iStack808) ^ *(iStack760 + iStack808 % 0x26);\n    }\n    *arg2 = iStack784;\n    fcn.1800010b0(uStack24 ^ auStack856);\n    return;\n}\n",
        "token_count": 481
    },
    "1800081d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t fcn.1800081d0(void)\n\n{\n    int64_t in_GS_OFFSET;\n    \n    return *(*(*(in_GS_OFFSET + 0x30) + 0x60) + 0xbc) >> 8 & 0xffffff01;\n}\n",
        "token_count": 60
    },
    "18000ddc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.18000ddc0(ulong arg1, ulong arg2, ulong arg3, int64_t arg4)\n\n{\n    bool bVar1;\n    uint uVar2;\n    int64_t iVar3;\n    \n    if (arg1 == 0xfffffffe) {\n        *(arg4 + 0x38) = 1;\n        *(arg4 + 0x34) = 0;\n        *(arg4 + 0x30) = 1;\n        *(arg4 + 0x2c) = 9;\n    }\n    else {\n        if ((arg1 < 0) || (*0x180022bf0 <= arg1)) {\n            bVar1 = false;\n        }\n        else {\n            bVar1 = true;\n        }\n        if (bVar1) {\n            iVar3 = arg1 >> 6;\n            if ((*(*(iVar3 * 8 + 0x1800227f0) + 0x38 + (arg1 & 0x3f) * 0x48) & 1) != 0) {\n                fcn.18000d314(arg1 & 0xffffffff);\n                uVar2 = 0xffffffff;\n                if ((*(*(iVar3 * 8 + 0x1800227f0) + 0x38 + (arg1 & 0x3f) * 0x48) & 1) == 0) {\n                    *(arg4 + 0x30) = 1;\n                    *(arg4 + 0x2c) = 9;\n                    *(arg4 + 0x38) = 1;\n                    *(arg4 + 0x34) = 0;\n                }\n                else {\n                    uVar2 = fcn.18000dee0(arg1, arg2, arg3, arg4);\n                }\n                fcn.18000d33c(arg1);\n                return uVar2;\n            }\n        }\n        *(arg4 + 0x38) = 1;\n        *(arg4 + 0x34) = 0;\n        *(arg4 + 0x30) = 1;\n        *(arg4 + 0x2c) = 9;\n        fcn.1800084ec(0, 0, 0, 0);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 505
    },
    "18000e29": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.18000e29c(ulong *arg1)\n\n{\n    if (((*(arg1 + 0x14) >> 0xd & 1) != 0) && ((*(arg1 + 0x14) >> 6 & 1) != 0)) {\n        fcn.18000878c(arg1[1]);\n        LOCK();\n        *(arg1 + 0x14) = *(arg1 + 0x14) & 0xfffffebf;\n        arg1[1] = 0;\n        *arg1 = 0;\n        *(arg1 + 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "18000e99": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint fcn.18000e99c(int64_t arg1, int64_t arg2)\n\n{\n    uint uVar1;\n    \n    if (arg1 == 0) {\n        *(arg2 + 0x30) = 1;\n        *(arg2 + 0x2c) = 0x16;\n        fcn.1800084ec(0, 0, 0, 0);\n    }\n    else {\n        if ((*(arg1 + 0x14) >> 0xc & 1) == 0) {\n            fcn.18000b4ac(arg1);\n            uVar1 = fcn.18000ea18(arg1, arg2);\n            fcn.18000b4b8(arg1);\n            return uVar1;\n        }\n        fcn.18000f640(arg1);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 192
    },
    "18000ea1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.18000ea18(int64_t arg1, int64_t arg2)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if (arg1 == 0) {\n        *(arg2 + 0x30) = 1;\n        *(arg2 + 0x2c) = 0x16;\n        fcn.1800084ec(0, 0, 0, 0);\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = 0xffffffff;\n        if ((*(arg1 + 0x14) >> 0xd & 1) != 0) {\n            uVar1 = fcn.18000b1c8(arg1, arg2);\n            fcn.18000e29c(arg1);\n            uVar2 = fcn.18000b774(arg1);\n            iVar3 = fcn.18000f4ac(uVar2, arg2);\n            if (iVar3 < 0) {\n                uVar1 = 0xffffffff;\n            }\n            else if (*(arg1 + 0x28) != 0) {\n                fcn.18000878c(*(arg1 + 0x28));\n                *(arg1 + 0x28) = 0;\n            }\n        }\n        fcn.18000f640(arg1);\n    }\n    return uVar1;\n}\n",
        "token_count": 312
    },
    "18000f43": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.18000f434(ulong noname_0, uint32_t *arg2, uint32_t **arg3, uint32_t *arg4)\n\n{\n    uint32_t uVar1;\n    uint32_t *arg2_00;\n    uint uVar2;\n    \n    fcn.18000d314(*arg2);\n    uVar1 = **arg3;\n    arg2_00 = arg3[1];\n    if ((*(*((uVar1 >> 6) * 8 + 0x1800227f0) + 0x38 + (uVar1 & 0x3f) * 0x48) & 1) == 0) {\n        *(arg2_00 + 0xc) = 1;\n        arg2_00[0xb] = 9;\n        uVar2 = 0xffffffff;\n    }\n    else {\n        uVar2 = fcn.18000f570(uVar1, arg2_00);\n    }\n    fcn.18000d33c(*arg4);\n    return uVar2;\n}\n",
        "token_count": 237
    },
    "18000f4a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.18000f4ac(ulong arg1, int64_t arg2)\n\n{\n    ulong uVar1;\n    uint32_t auStackX8 [4];\n    uchar auStackX24 [8];\n    uint32_t auStackX32 [2];\n    uint32_t auStack40 [2];\n    uint32_t *puStack32;\n    int64_t iStack24;\n    \n    if (arg1 == 0xfffffffe) {\n        *(arg2 + 0x38) = 1;\n        *(arg2 + 0x34) = 0;\n        *(arg2 + 0x30) = 1;\n        *(arg2 + 0x2c) = 9;\n    }\n    else {\n        auStackX8[0] = arg1;\n        if (((-1 < arg1) && (arg1 < *0x180022bf0)) &&\n           ((*(*((arg1 >> 6) * 8 + 0x1800227f0) + 0x38 + (arg1 & 0x3f) * 0x48) & 1) != 0)) {\n            puStack32 = auStackX8;\n            auStackX32[0] = arg1;\n            auStack40[0] = arg1;\n            iStack24 = arg2;\n            uVar1 = fcn.18000f434(auStackX24, auStack40, &puStack32, auStackX32);\n            return uVar1;\n        }\n        *(arg2 + 0x38) = 1;\n        *(arg2 + 0x34) = 0;\n        *(arg2 + 0x30) = 1;\n        *(arg2 + 0x2c) = 9;\n        fcn.1800084ec(0, 0, 0, 0);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 417
    },
    "18000610": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180006108(ulong arg1)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    ulong in_R9;\n    int64_t aiStackX16 [3];\n    \n    aiStackX16[0] = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleExW)(0, L\"mscoree.dll\", aiStackX16, in_R9, 0xfffffffffffffffe);\n    if ((iVar2 != 0) && (iVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(aiStackX16[0], \"CorExitProcess\"),  iVar1 != 0))\n    {\n        (**0x180016378)(arg1);\n    }\n    if (aiStackX16[0] != 0) {\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)();\n    }\n    return;\n}\n",
        "token_count": 192
    },
    "1800084e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.1800084ec(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    uint64_t *puVar3;\n    uint8_t uVar4;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    \n    iVar2 = fcn.180008234(in_stack_00000030);\n    if (((iVar2 == 0) || (*(iVar2 + 0x3b8) == 0)) &&\n       (puVar3 = fcn.1800082a0(0x1800225e8, in_stack_00000030),  uVar4 = *0x180021010 & 0x3f, \n       ((*puVar3 ^ *0x180021010) >> uVar4 | (*puVar3 ^ *0x180021010) << 0x40 - uVar4) == 0)) {\n        fcn.1800085d8(arg1, arg2, arg3, arg4, in_stack_00000028);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    (**0x180016378)(arg1, arg2, arg3, arg4, in_stack_00000028);\n    return;\n}\n",
        "token_count": 294
    },
    "180008d2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong fcn.180008d28(int64_t arg1, ulong arg2, uint64_t arg3, int64_t *arg4)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    \n    uVar5 = 0;\n    iVar3 = -1;\n    do {\n        iVar6 = iVar3;\n        iVar3 = iVar6 + 1;\n    } while (*(arg1 + iVar3) != '\\0');\n    uVar4 = iVar6 + 2;\n    if (~arg3 < uVar4) {\n        return 0xc;\n    }\n    iVar6 = arg3 + 1 + uVar4;\n    iVar3 = fcn.180008714(iVar6, 1);\n    if (((arg3 != 0) && (iVar2 = fcn.18000c4b0(iVar3, iVar6, arg2, arg3),  iVar2 != 0)) ||\n       (iVar2 = fcn.18000c4b0(iVar3 + arg3, iVar6 - arg3, arg1, uVar4),  iVar2 != 0)) {\n        fcn.1800085d8(0, 0, 0, 0, 0);\n        pcVar1 = swi(3);\n        uVar5 = (*pcVar1)();\n        return uVar5;\n    }\n    if (arg4[1] == arg4[2]) {\n        if (*arg4 == 0) {\n            iVar6 = fcn.180008714(4, 8);\n            *arg4 = iVar6;\n            fcn.18000878c(0);\n            iVar6 = *arg4;\n            if (iVar6 != 0) {\n                arg4[1] = iVar6;\n                arg4[2] = iVar6 + 0x20;\n                goto code_r0x000180008e7e;\n            }\n        }\n        else {\n            uVar4 = arg4[2] - *arg4 >> 3;\n            if (uVar4 < 0x8000000000000000) {\n                iVar6 = fcn.18000a344(*arg4, uVar4 * 2, 8);\n                if (iVar6 != 0) {\n                    *arg4 = iVar6;\n                    arg4[1] = iVar6 + uVar4 * 8;\n                    arg4[2] = iVar6 + uVar4 * 0x10;\n                    fcn.18000878c(0);\n                    goto code_r0x000180008e7e;\n                }\n                fcn.18000878c(0);\n            }\n        }\n        uVar5 = 0xc;\n        fcn.18000878c(iVar3);\n    }\n    else {\ncode_r0x000180008e7e:\n        *arg4[1] = iVar3;\n        arg4[1] = arg4[1] + 8;\n    }\n    fcn.18000878c(0);\n    return uVar5;\n}\n",
        "token_count": 687
    },
    "18000e95": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t fcn.18000e958(ulong arg1, ulong arg2, ulong arg3, int64_t arg4)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    int64_t aiStack24 [2];\n    \n    iVar4 = fcn.18000d420(arg1 & 0xffffffff);\n    if (iVar4 == -1) {\n        *(arg4 + 0x30) = 1;\n        *(arg4 + 0x2c) = 9;\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_SetFilePointerEx)(iVar4, arg2, aiStack24, arg3);\n        if (iVar2 == 0) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            fcn.1800086b0(uVar3, arg4);\n        }\n        else if (aiStack24[0] != -1) {\n            puVar1 = *((arg1 >> 6) * 8 + 0x1800227f0) + 0x38 + (arg1 & 0x3f) * 0x48;\n            *puVar1 = *puVar1 & 0xfd;\n            return aiStack24[0];\n        }\n    }\n    return -1;\n}\n",
        "token_count": 304
    },
    "18000681": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n\nulong fcn.180006818(int64_t **arg1)\n\n{\n    ulong uVar1;\n    uint8_t uVar2;\n    uint64_t *puVar3;\n    uint64_t uVar4;\n    uint64_t arg1_00;\n    uint64_t uVar5;\n    uint64_t arg2;\n    uint64_t *puVar6;\n    uint64_t *puVar7;\n    ulong var_bp_8h;\n    ulong var_20h;\n    \n    puVar3 = **arg1;\n    if (puVar3 == NULL) {\ncode_r0x0001800069ac:\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar2 = *0x180021010 & 0x3f;\n        arg1_00 = (*0x180021010 ^ *puVar3) >> uVar2 | (*0x180021010 ^ *puVar3) << 0x40 - uVar2;\n        puVar7 = (*0x180021010 ^ puVar3[1]) >> uVar2 | (*0x180021010 ^ puVar3[1]) << 0x40 - uVar2;\n        puVar3 = (*0x180021010 ^ puVar3[2]) >> uVar2 | (*0x180021010 ^ puVar3[2]) << 0x40 - uVar2;\n        if (puVar7 == puVar3) {\n            uVar4 = puVar3 - arg1_00 >> 3;\n            uVar5 = uVar4;\n            if (0x200 < uVar4) {\n                uVar5 = 0x200;\n            }\n            arg2 = uVar5 + uVar4;\n            if (uVar5 + uVar4 == 0) {\n                arg2 = 0x20;\n            }\n            if (arg2 < uVar4) {\ncode_r0x0001800068ba:\n                arg2 = uVar4 + 4;\n                uVar5 = fcn.18000a344(arg1_00, arg2, 8);\n                fcn.18000878c(0);\n                if (uVar5 == 0) goto code_r0x0001800069ac;\n            }\n            else {\n                uVar5 = fcn.18000a344(arg1_00, arg2, 8);\n                fcn.18000878c(0);\n                if (uVar5 == 0) goto code_r0x0001800068ba;\n            }\n            arg1_00 = uVar5;\n            uVar5 = *0x180021010;\n            puVar7 = arg1_00 + uVar4 * 8;\n            puVar3 = arg1_00 + arg2 * 8;\n            uVar4 = puVar3 + (7 - puVar7) >> 3;\n            if (puVar3 < puVar7) {\n                uVar4 = 0;\n            }\n            puVar6 = puVar7;\n            if (uVar4 != 0) {\n                for (; uVar4 != 0; uVar4 = uVar4 - 1) {\n                    *puVar6 = uVar5;\n                    puVar6 = puVar6 + 1;\n                }\n            }\n        }\n        uVar2 = -(*0x180021010 & 0x3f) & 0x3f;\n        *puVar7 = (*arg1[1] >> uVar2 | *arg1[1] << 0x40 - uVar2) ^ *0x180021010;\n        uVar2 = -(*0x180021010 & 0x3f) & 0x3f;\n        ***arg1 = (arg1_00 >> uVar2 | arg1_00 << 0x40 - uVar2) ^ *0x180021010;\n        uVar2 = -(*0x180021010 & 0x3f) & 0x3f;\n        *(**arg1 + 8) = (puVar7 + 1 >> uVar2 | puVar7 + 1 << 0x40 - uVar2) ^ *0x180021010;\n        uVar2 = 0x40 - (*0x180021010 & 0x3f) & 0x3f;\n        uVar1 = 0;\n        *(**arg1 + 0x10) = (puVar3 >> uVar2 | puVar3 << 0x40 - uVar2) ^ *0x180021010;\n    }\n    return uVar1;\n}\n",
        "token_count": 1026
    },
    "1800069c": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nulong fcn.1800069c8(int64_t **arg1)\n\n{\n    uint64_t uVar1;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint64_t *puVar4;\n    uint8_t uVar5;\n    uint64_t *puVar6;\n    uint64_t *puVar7;\n    uint64_t *lpMem;\n    uint64_t uVar8;\n    uint64_t *puVar9;\n    uint64_t *puVar10;\n    \n    uVar1 = *0x180021010;\n    puVar6 = **arg1;\n    if (puVar6 == NULL) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        uVar5 = *0x180021010 & 0x3f;\n        lpMem = (*0x180021010 ^ *puVar6) >> uVar5 | (*0x180021010 ^ *puVar6) << 0x40 - uVar5;\n        puVar6 = (*0x180021010 ^ puVar6[1]) >> uVar5 | (*0x180021010 ^ puVar6[1]) << 0x40 - uVar5;\n        puVar7 = puVar6;\n        uVar3 = *0x180021010;\n        puVar10 = lpMem;\n        if (lpMem - 1U < 0xfffffffffffffffe) {\n            while (puVar6 = puVar6 + -1,  lpMem <= puVar6) {\n                if (*puVar6 != uVar1) {\n                    *puVar6 = uVar1;\n                    (**0x180016378)();\n                    uVar5 = *0x180021010 & 0x3f;\n                    uVar8 = *0x180021010 ^ ***arg1;\n                    uVar3 = *0x180021010 ^ (**arg1)[1];\n                    puVar9 = uVar8 >> uVar5 | uVar8 << 0x40 - uVar5;\n                    puVar4 = uVar3 >> uVar5 | uVar3 << 0x40 - uVar5;\n                    uVar3 = *0x180021010;\n                    if ((puVar9 != puVar10) || (puVar4 != puVar7)) {\n                        puVar6 = puVar4;\n                        puVar7 = puVar4;\n                        lpMem = puVar9;\n                        puVar10 = puVar9;\n                    }\n                }\n            }\n            if (lpMem != 0xffffffffffffffff) {\n                fcn.18000878c(lpMem);\n                uVar3 = *0x180021010;\n            }\n            ***arg1 = uVar3;\n            *(**arg1 + 8) = uVar3;\n            *(**arg1 + 0x10) = uVar3;\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 635
    },
    "18000a3d": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nuint64_t fcn.18000a3dc(ulong arg1, ulong arg2, uint32_t *arg3, uint32_t *arg4)\n\n{\n    int64_t *piVar1;\n    ulong arg1_00;\n    int64_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint8_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    \n    uVar7 = arg1;\n    uVar6 = *(uVar7 * 8 + 0x1800226f0) ^ *0x180021010;\n    uVar5 = *0x180021010 & 0x3f;\n    uVar6 = uVar6 >> uVar5 | uVar6 << 0x40 - uVar5;\n    if (uVar6 != 0xffffffffffffffff) {\n        if (uVar6 != 0) {\n            return uVar6;\n        }\n        if (arg3 != arg4) {\n            do {\n                uVar6 = *arg3;\n                iVar4 = *(uVar6 * 8 + 0x180022640);\n                if (iVar4 == 0) {\n                    arg1_00 = *(uVar6 * 8 + 0x180017ea0);\n                    iVar4 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(arg1_00, 0);\n                    if ((iVar4 != 0) ||\n                       ((((iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar3 == 0x57 &&\n                          (iVar3 = fcn.180007070(arg1_00, L\"api-ms-\", 7),  iVar3 != 0)) &&\n                         (iVar3 = fcn.180007070(arg1_00, L\"ext-ms-\", 7),  iVar3 != 0)) &&\n                        (iVar4 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(arg1_00, 0, 0),  iVar4 != 0)))) {\n                        piVar1 = uVar6 * 8 + 0x180022640;\n                        iVar2 = *piVar1;\n                        *piVar1 = iVar4;\n                        if (iVar2 != 0) {\n                            (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar4);\n                        }\n                        goto code_r0x00018000a55e;\n                    }\n                    *(uVar6 * 8 + 0x180022640) = 0xffffffffffffffff;\n                }\n                else if (iVar4 != -1) {\ncode_r0x00018000a55e:\n                    uVar6 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar4, arg2);\n                    if (uVar6 != 0) {\n                        uVar5 = 0x40 - (*0x180021010 & 0x3f) & 0x3f;\n                        *(uVar7 * 8 + 0x1800226f0) = (uVar6 >> uVar5 | uVar6 << 0x40 - uVar5) ^ *0x180021010;\n                        return uVar6;\n                    }\n                    break;\n                }\n                arg3 = arg3 + 1;\n            } while (arg3 != arg4);\n        }\n        uVar5 = 0x40 - (*0x180021010 & 0x3f) & 0x3f;\n        *(uVar7 * 8 + 0x1800226f0) = (0xffffffffffffffffU >> uVar5 | -1 << 0x40 - uVar5) ^ *0x180021010;\n    }\n    return 0;\n}\n",
        "token_count": 806
    },
    "18000ac3": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nuint64_t fcn.18000ac38(void)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    \n    fcn.180008160(0);\n    uVar1 = *0x180021010 & 0x3f;\n    uVar2 = *0x180022bf8 ^ *0x180021010;\n    fcn.1800081b4(0);\n    return uVar2 >> uVar1 | uVar2 << 0x40 - uVar1;\n}\n",
        "token_count": 115
    },
    "18000ac7": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nuint64_t fcn.18000ac70(ulong noname_0, uint32_t *arg2, ulong noname_2, uint32_t *arg4)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    \n    fcn.180008160(*arg2);\n    uVar1 = *0x180021010 & 0x3f;\n    uVar2 = *0x180022c10 ^ *0x180021010;\n    fcn.1800081b4(*arg4);\n    return uVar2 >> uVar1 | uVar2 << 0x40 - uVar1;\n}\n",
        "token_count": 142
    },
    "18000af8": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nuint64_t fcn.18000af84(void)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = *0x180021010 & 0x3f;\n    return *0x180021010 & 0xffffffffffffff00 |\n           ((*0x180022c20 ^ *0x180021010) >> uVar1 | (*0x180022c20 ^ *0x180021010) << 0x40 - uVar1) != 0;\n}\n",
        "token_count": 107
    },
    "18000afa": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nulong fcn.18000afac(ulong arg1)\n\n{\n    ulong uVar1;\n    uint8_t uVar2;\n    \n    uVar2 = *0x180021010 & 0x3f;\n    if (((*0x180022c20 ^ *0x180021010) >> uVar2 | (*0x180022c20 ^ *0x180021010) << 0x40 - uVar2) == 0) {\n        return 0;\n    }\n    // WARNING: Could not recover jumptable at 0x00018000afe0. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar1 = (**0x180016378)(arg1);\n    return uVar1;\n}\n",
        "token_count": 165
    },
    "18000d31": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.18000d314(ulong arg1)\n\n{\n    // WARNING: Could not recover jumptable at 0x00018000d334. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(*((arg1 >> 6) * 8 + 0x1800227f0) + (arg1 & 0x3f) * 0x48);\n    return;\n}\n",
        "token_count": 103
    },
    "18000d33": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.18000d33c(ulong arg1)\n\n{\n    // WARNING: Could not recover jumptable at 0x00018000d35c. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(*((arg1 >> 6) * 8 + 0x1800227f0) + (arg1 & 0x3f) * 0x48);\n    return;\n}\n",
        "token_count": 106
    },
    "1800061a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nvoid fcn.1800061a4(char *arg1, char **arg2, char *arg3, int64_t *arg4)\n\n{\n    bool bVar1;\n    bool bVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    char cVar5;\n    char *pcVar6;\n    int64_t *in_stack_00000028;\n    \n    *in_stack_00000028 = 0;\n    *arg4 = 1;\n    if (arg2 != NULL) {\n        *arg2 = arg3;\n        arg2 = arg2 + 1;\n    }\n    bVar2 = false;\n    do {\n        if (*arg1 == '\\\"') {\n            bVar2 = !bVar2;\n            cVar5 = '\\\"';\n            pcVar6 = arg1 + 1;\n        }\n        else {\n            *in_stack_00000028 = *in_stack_00000028 + 1;\n            if (arg3 != NULL) {\n                *arg3 = *arg1;\n                arg3 = arg3 + 1;\n            }\n            cVar5 = *arg1;\n            pcVar6 = arg1 + 1;\n            iVar4 = fcn.18000a088(cVar5);\n            if (iVar4 != 0) {\n                *in_stack_00000028 = *in_stack_00000028 + 1;\n                if (arg3 != NULL) {\n                    *arg3 = *pcVar6;\n                    arg3 = arg3 + 1;\n                }\n                pcVar6 = arg1 + 2;\n            }\n            if (cVar5 == '\\0') {\n                pcVar6 = pcVar6 + -1;\n                goto code_r0x00018000625c;\n            }\n        }\n        arg1 = pcVar6;\n    } while ((bVar2) || ((cVar5 != ' ' && (cVar5 != '\\t'))));\n    if (arg3 != NULL) {\n        arg3[-1] = '\\0';\n    }\ncode_r0x00018000625c:\n    bVar2 = false;\n    while (cVar5 = *pcVar6,  cVar5 != '\\0') {\n        while ((cVar5 == ' ' || (cVar5 == '\\t'))) {\n            pcVar6 = pcVar6 + 1;\n            cVar5 = *pcVar6;\n        }\n        if (cVar5 == '\\0') break;\n        if (arg2 != NULL) {\n            *arg2 = arg3;\n            arg2 = arg2 + 1;\n        }\n        *arg4 = *arg4 + 1;\n        while( true ) {\n            bVar1 = true;\n            uVar3 = 0;\n            while( true ) {\n                if (*pcVar6 != '\\\\') break;\n                pcVar6 = pcVar6 + 1;\n                uVar3 = uVar3 + 1;\n            }\n            if (*pcVar6 == '\\\"') {\n                if ((uVar3 & 1) == 0) {\n                    if ((bVar2) && (pcVar6[1] == '\\\"')) {\n                        pcVar6 = pcVar6 + 1;\n                    }\n                    else {\n                        bVar1 = false;\n                        bVar2 = !bVar2;\n                    }\n                }\n                uVar3 = uVar3 >> 1;\n            }\n            while (uVar3 != 0) {\n                uVar3 = uVar3 - 1;\n                if (arg3 != NULL) {\n                    *arg3 = '\\\\';\n                    arg3 = arg3 + 1;\n                }\n                *in_stack_00000028 = *in_stack_00000028 + 1;\n            }\n            cVar5 = *pcVar6;\n            if ((cVar5 == '\\0') || ((!bVar2 && ((cVar5 == ' ' || (cVar5 == '\\t')))))) break;\n            if (bVar1) {\n                if (arg3 != NULL) {\n                    *arg3 = cVar5;\n                    arg3 = arg3 + 1;\n                }\n                iVar4 = fcn.18000a088(*pcVar6);\n                if (iVar4 != 0) {\n                    *in_stack_00000028 = *in_stack_00000028 + 1;\n                    pcVar6 = pcVar6 + 1;\n                    if (arg3 != NULL) {\n                        *arg3 = *pcVar6;\n                        arg3 = arg3 + 1;\n                    }\n                }\n                *in_stack_00000028 = *in_stack_00000028 + 1;\n            }\n            pcVar6 = pcVar6 + 1;\n        }\n        if (arg3 != NULL) {\n            *arg3 = '\\0';\n            arg3 = arg3 + 1;\n        }\n        *in_stack_00000028 = *in_stack_00000028 + 1;\n    }\n    if (arg2 != NULL) {\n        *arg2 = NULL;\n    }\n    *arg4 = *arg4 + 1;\n    return;\n}\n",
        "token_count": 1102
    },
    "18000b4a": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000b4ac(int64_t arg1)\n\n{\n    // WARNING: Could not recover jumptable at 0x00018000b4b0. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(arg1 + 0x30);\n    return;\n}\n",
        "token_count": 78
    },
    "18000b4b": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000b4b8(int64_t arg1)\n\n{\n    // WARNING: Could not recover jumptable at 0x00018000b4bc. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(arg1 + 0x30);\n    return;\n}\n",
        "token_count": 79
    },
    "18000fcb": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.18000fcb0(int32_t *arg1, ulong arg2)\n\n{\n    ulong arg1_00;\n    uchar auStack136 [32];\n    int32_t iStack104;\n    int32_t iStack100;\n    int32_t iStack96;\n    int32_t iStack92;\n    double dStack88;\n    double dStack80;\n    ulong uStack72;\n    ulong uStack64;\n    int32_t aiStack56 [8];\n    ulong uStack24;\n    uint64_t uStack16;\n    \n    uStack16 = *0x180021010 ^ auStack136;\n    uStack72 = (*_sym.imp.GDI32.dll_CreatePen)(0, 1, *(arg1[9] * 4 + 0x18001df70));\n    uStack64 = (*_sym.imp.GDI32.dll_SelectObject)(arg2, uStack72);\n    aiStack56[0] = -((*(arg1 + 4) * arg1[2]) / *0x18001e040);\n    aiStack56[1] = -((*(arg1 + 4) * arg1[3]) / *0x18001e040);\n    aiStack56[2] = (*(arg1 + 4) * arg1[2]) / *0x18001e040;\n    aiStack56[5] = (*(arg1 + 4) * arg1[3]) / *0x18001e040;\n    uStack24 = CONCAT44(aiStack56[1], aiStack56[0]);\n    arg1_00 = 0x20;\n    aiStack56[3] = aiStack56[1];\n    aiStack56[4] = aiStack56[2];\n    aiStack56[6] = aiStack56[0];\n    aiStack56[7] = aiStack56[5];\n    dStack88 = fcn.180005720(0x20);\n    dStack80 = fcn.1800051b0(arg1_00);\n    for (iStack104 = 0; iStack104 < 5; iStack104 = iStack104 + 1) {\n        iStack92 = aiStack56[iStack104 * 2];\n        iStack96 = aiStack56[iStack104 * 2 + 1];\n        aiStack56[iStack104 * 2] = iStack92 * dStack88 + iStack96 * dStack80;\n        aiStack56[iStack104 * 2 + 1] = iStack96 * dStack88 - iStack92 * dStack80;\n    }\n    for (iStack100 = 0; iStack100 < 5; iStack100 = iStack100 + 1) {\n        aiStack56[iStack100 * 2] = aiStack56[iStack100 * 2] + *arg1;\n        aiStack56[iStack100 * 2 + 1] = aiStack56[iStack100 * 2 + 1] + arg1[1];\n    }\n    (*_sym.imp.GDI32.dll_Polyline)(arg2, aiStack56, 5);\n    if (*(arg1 + 8) != '\\0') {\n        (*_sym.imp.GDI32.dll_MoveToEx)(arg2, aiStack56[0], aiStack56[1], 0);\n        (*_sym.imp.GDI32.dll_LineTo)(arg2, aiStack56[4], aiStack56[5]);\n        (*_sym.imp.GDI32.dll_MoveToEx)(arg2, aiStack56[2], aiStack56[3], 0);\n        (*_sym.imp.GDI32.dll_LineTo)(arg2, aiStack56[6], aiStack56[7]);\n    }\n    (*_sym.imp.GDI32.dll_SelectObject)(arg2, uStack64);\n    (*_sym.imp.GDI32.dll_DeleteObject)(uStack72);\n    fcn.1800010b0(uStack16 ^ auStack136);\n    return;\n}\n",
        "token_count": 866
    },
    "18001013": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.180010130(int64_t arg1)\n\n{\n    *(arg1 + 0x24) = *(arg1 + 0x24) + 1;\n    if (*(arg1 + 0x24) == 5) {\n        *(arg1 + 0x24) = 0;\n    }\n    return;\n}\n",
        "token_count": 75
    },
    "180014bf": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nint32_t fcn.180014bf0(char *arg1)\n\n{\n    char *pcStackX8;\n    uint32_t uStack24;\n    int32_t iStack20;\n    \n    uStack24 = 0;\n    for (pcStackX8 = arg1; *pcStackX8 != '\\0'; pcStackX8 = pcStackX8 + 1) {\n        if (*pcStackX8 < 'a') {\n            iStack20 = *pcStackX8;\n        }\n        else {\n            iStack20 = *pcStackX8 + -0x20;\n        }\n        uStack24 = (uStack24 >> 0xd | uStack24 << 0x13) + iStack20;\n    }\n    return uStack24 + *0x180022d78;\n}\n",
        "token_count": 175
    },
    "18000106": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180001060(int64_t arg1)\n\n{\n    *(arg1 + 0x20) = *(arg1 + 0x20) == '\\0';\n    return;\n}\n",
        "token_count": 43
    },
    "18000878": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000878c(int64_t lpMem)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    \n    if ((lpMem != 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x1800227e8, 0, lpMem),  iVar2 == 0)) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        uVar4 = fcn.180008620(uVar3);\n        puVar1 = fcn.1800086f4();\n        *puVar1 = uVar4;\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "180001e5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180001e54(void)\n\n{\n    ulong *puVar1;\n    ulong *arg1;\n    \n    arg1 = (*_sym.imp.KERNEL32.dll_InterlockedFlushSList)(0x1800220a0);\n    while (arg1 != NULL) {\n        puVar1 = *arg1;\n        fcn.180006e14(arg1);\n        arg1 = puVar1;\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "180001e9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180001e94(void)\n\n{\n    int64_t *piVar1;\n    \n    for (piVar1 = 0x18001e9b8; piVar1 < 0x18001e9b8; piVar1 = piVar1 + 1) {\n        if (*piVar1 != 0) {\n            (**0x180016370)();\n        }\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "180001ed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180001ed0(void)\n\n{\n    int64_t *piVar1;\n    \n    for (piVar1 = 0x18001e9c8; piVar1 < 0x18001e9c8; piVar1 = piVar1 + 1) {\n        if (*piVar1 != 0) {\n            (**0x180016370)();\n        }\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "180001f7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180001f74(int64_t arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = *(arg1 + 0xc);\n    do {\n        if (uVar2 == 0) {\n            return 0;\n        }\n        uVar2 = uVar2 - 1;\n        iVar1 = fcn.180002d40();\n        iVar1 = *(arg1 + 0x10) + *(iVar1 + 0x60) + uVar2 * 0x14;\n    } while ((arg2 <= *(iVar1 + 4)) || (*(iVar1 + 8) < arg2));\n    return iVar1;\n}\n",
        "token_count": 161
    },
    "18000206": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.180002068(int64_t *arg1, ulong *arg2, int64_t arg3, int64_t *arg4)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    int32_t *piVar6;\n    int64_t iVar7;\n    uint32_t uVar8;\n    int64_t iVar9;\n    int64_t iStackX8;\n    \n    uVar8 = *(arg3 + 0xc);\n    iVar2 = fcn.180002f24(arg3, arg2);\n    *arg4 = *arg1;\n    do {\n        do {\n            if (uVar8 == 0) {\n                return arg4;\n            }\n            uVar8 = uVar8 - 1;\n            iVar7 = *(arg3 + 0x10) + uVar8 * 0x14 + arg2[1];\n        } while ((iVar2 <= *(iVar7 + 4)) || (*(iVar7 + 8) < iVar2));\n        puVar3 = (*_sym.imp.ntdll.dll_RtlLookupFunctionEntry)(*arg2, &iStackX8, 0);\n        uVar5 = 0;\n        iVar9 = *(iVar7 + 0x10) + iStackX8;\n        uVar1 = *(iVar7 + 0xc);\n        if (uVar1 != 0) {\n            piVar6 = iVar9 + 0xc;\n            do {\n                if (*piVar6 == *puVar3) break;\n                uVar4 = uVar5 + 1;\n                uVar5 = uVar4;\n                piVar6 = piVar6 + 5;\n            } while (uVar4 < uVar1);\n        }\n        if (uVar5 < uVar1) {\n            *arg4 = *(*(iVar9 + 0x10 + uVar5 * 0x14) + *arg1);\n            return arg4;\n        }\n    } while( true );\n}\n",
        "token_count": 459
    },
    "180002e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180002e88(int64_t *arg1, ulong *arg2, int64_t arg3)\n\n{\n    if (*(*(arg3 + 0x1c) + *arg1) == -2) {\n        fcn.180002f2c(arg3, arg2, *arg2);\n    }\n    return;\n}\n",
        "token_count": 76
    },
    "180002f2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.180002f2c(int64_t arg1, int64_t arg2, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    \n    if (arg1 != 0) {\n        iVar5 = *(arg1 + 0x18);\n        iVar1 = *(arg2 + 8);\n        if (iVar1 + iVar5 != 0) {\n            uVar3 = 0;\n            if (*(arg1 + 0x14) != 0) {\n                do {\n                    if (arg3 < *(iVar5 + uVar3 * 8 + iVar1) + iVar1) break;\n                    uVar4 = uVar3 + 1;\n                    uVar3 = uVar4;\n                } while (uVar4 < *(arg1 + 0x14));\n                if (uVar3 != 0) {\n                    return *(iVar1 + (uVar3 - 1) * 8 + 4 + iVar5);\n                }\n            }\n            return 0xffffffff;\n        }\n    }\n    fcn.180006e28();\n    pcVar2 = swi(3);\n    uVar3 = (*pcVar2)();\n    return uVar3;\n}\n",
        "token_count": 292
    },
    "18000450": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180004504(void)\n\n{\n    uint64_t uVar1;\n    \n    uVar1 = *0x180022180;\n    while (uVar1 != 0) {\n        uVar1 = uVar1 - 1;\n        (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(uVar1 * 0x28 + 0x180022158);\n        *0x180022180 = *0x180022180 - 1;\n    }\n    return 1;\n}\n",
        "token_count": 109
    },
    "180005ee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180005ee4(ulong noname_0, uint32_t *arg2, ulong arg3, uint32_t *arg4)\n\n{\n    fcn.180008160(*arg2);\n    fcn.180005f1c(arg3);\n    fcn.1800081b4(*arg4);\n    return;\n}\n",
        "token_count": 75
    },
    "18000671": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000671c(int64_t *arg1)\n\n{\n    if (*arg1 != *0x180022370) {\n        fcn.1800066d8(*arg1);\n    }\n    return;\n}\n",
        "token_count": 50
    },
    "18000673": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180006738(int64_t *arg1)\n\n{\n    if (*arg1 != *0x180022368) {\n        fcn.1800066d8(*arg1);\n    }\n    return;\n}\n",
        "token_count": 49
    },
    "1800066d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800066d8(int64_t *arg1)\n\n{\n    int64_t lpMem;\n    int64_t *piVar1;\n    \n    if (arg1 != NULL) {\n        lpMem = *arg1;\n        piVar1 = arg1;\n        while (lpMem != 0) {\n            fcn.18000878c(lpMem);\n            piVar1 = piVar1 + 1;\n            lpMem = *piVar1;\n        }\n        fcn.18000878c(arg1);\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "18000675": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.180006754(void)\n\n{\n    int64_t *lpMem;\n    int64_t lpMem_00;\n    int64_t *piVar1;\n    \n    fcn.18000671c(0x180022358);\n    fcn.180006738(0x180022360);\n    fcn.1800066d8(*0x180022370);\n    lpMem = *0x180022368;\n    if (*0x180022368 != NULL) {\n        lpMem_00 = **0x180022368;\n        piVar1 = *0x180022368;\n        while (lpMem_00 != 0) {\n            fcn.18000878c(lpMem_00);\n            piVar1 = piVar1 + 1;\n            lpMem_00 = *piVar1;\n        }\n        fcn.18000878c(lpMem);\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "18000679": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180006798(void)\n\n{\n    int64_t iVar1;\n    int64_t arg1;\n    ulong uVar2;\n    int64_t iVar3;\n    \n    uVar2 = 0;\n    if (*0x180022358 == 0) {\n        fcn.180009cd8();\n        arg1 = fcn.18000a234();\n        if (arg1 == 0) {\n            fcn.18000878c(0);\n            uVar2 = 0xffffffff;\n        }\n        else {\n            iVar3 = fcn.1800065c8(arg1);\n            iVar1 = iVar3;\n            if (iVar3 == 0) {\n                uVar2 = 0xffffffff;\n                iVar3 = *0x180022358;\n                iVar1 = *0x180022370;\n            }\n            *0x180022370 = iVar1;\n            *0x180022358 = iVar3;\n            fcn.18000878c(0);\n            fcn.18000878c(arg1);\n        }\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 249
    },
    "1800067a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.1800067a0(ulong noname_0, uint32_t *arg2, ulong arg3, uint32_t *arg4)\n\n{\n    uint uVar1;\n    \n    fcn.180008160(*arg2);\n    uVar1 = fcn.180006818(arg3);\n    fcn.1800081b4(*arg4);\n    return uVar1;\n}\n",
        "token_count": 88
    },
    "1800067d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.1800067dc(ulong noname_0, uint32_t *arg2, ulong arg3, uint32_t *arg4)\n\n{\n    uint uVar1;\n    \n    fcn.180008160(*arg2);\n    uVar1 = fcn.1800069c8(arg3);\n    fcn.1800081b4(*arg4);\n    return uVar1;\n}\n",
        "token_count": 89
    },
    "180006b6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180006b64(ulong arg1, ulong arg2)\n\n{\n    ulong uStackX8;\n    ulong uStackX16;\n    ulong var_20h_2;\n    ulong var_28h;\n    ulong var_20h;\n    ulong *var_18h;\n    ulong *var_bp_10h;\n    \n    var_18h = &uStackX8;\n    var_bp_10h = &uStackX16;\n    var_28h._0_4_ = 2;\n    var_20h._0_4_ = 2;\n    uStackX8 = arg1;\n    uStackX16 = arg2;\n    fcn.1800067a0(&var_20h_2, &var_20h, &var_18h, &var_28h);\n    return;\n}\n",
        "token_count": 194
    },
    "180006af": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180006af8(ulong arg1)\n\n{\n    ulong uStackX8;\n    uchar auStackX16 [8];\n    uint auStackX24 [2];\n    uint auStackX32 [2];\n    ulong *puStack24;\n    ulong uStack16;\n    \n    uStack16 = 0xfffffffffffffffe;\n    puStack24 = &uStackX8;\n    auStackX24[0] = 2;\n    auStackX32[0] = 2;\n    uStackX8 = arg1;\n    fcn.1800067dc(auStackX16, auStackX32, &puStack24, auStackX24);\n    return;\n}\n",
        "token_count": 151
    },
    "180006cf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.180006cf0(ulong param_1, ulong param_2)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.180007f30(param_1, param_2);\n    return iVar1 != 0;\n}\n",
        "token_count": 57
    },
    "180006d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar fcn.180006d4c(void)\n\n{\n    fcn.1800080f4();\n    return 1;\n}\n",
        "token_count": 29
    },
    "180006d5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180006d5c(int64_t *arg1, int64_t *arg2)\n\n{\n    if (arg1 != arg2) {\n        do {\n            if (*arg1 != 0) {\n                (**0x180016378)();\n            }\n            arg1 = arg1 + 1;\n        } while (arg1 != arg2);\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "180006da": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180006da0(int64_t *arg1, int64_t *arg2)\n\n{\n    ulong uVar1;\n    bool bVar2;\n    \n    bVar2 = arg1 == arg2;\n    while( true ) {\n        if (bVar2) {\n            return 0;\n        }\n        if ((*arg1 != 0) && (uVar1 = (**0x180016378)(),  uVar1 != 0)) break;\n        arg1 = arg1 + 1;\n        bVar2 = arg1 == arg2;\n    }\n    return uVar1;\n}\n",
        "token_count": 132
    },
    "180006f6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180006f60(int64_t arg1)\n\n{\n    int64_t arg1_00;\n    \n    arg1_00 = fcn.180006ef0(arg1);\n    *(arg1 + 0x18) = *(arg1_00 + 0x90);\n    *(arg1 + 0x20) = *(arg1_00 + 0x88);\n    fcn.18000b558(arg1_00, arg1 + 0x18);\n    fcn.18000b5c4(arg1_00, arg1 + 0x20);\n    if ((*(arg1_00 + 0x3a8) & 2) == 0) {\n        *(arg1_00 + 0x3a8) = *(arg1_00 + 0x3a8) | 2;\n        *(arg1 + 0x28) = 2;\n    }\n    return;\n}\n",
        "token_count": 207
    },
    "1800076d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.1800076dc(uint64_t param_1)\n\n{\n    uint64_t uStackX8;\n    \n    uStackX8 = param_1;\n    if ((param_1 & 0x7ff0000000000000) == 0x7ff0000000000000) {\n        if ((param_1 & 0xfffffffffffff) == 0) {\n            uStackX8 = 0xfff8000000000000;\n            fcn.1800078b8(0x180017cc0, 0x1e, 0xfff8000000000000, 1);\n        }\n        else {\n            uStackX8 = param_1 | 0x8000000000000;\n        }\n    }\n    return uStackX8;\n}\n",
        "token_count": 174
    },
    "18000817": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18000817c(void)\n\n{\n    uint64_t uVar1;\n    \n    uVar1 = *0x1800225e0;\n    while (uVar1 != 0) {\n        uVar1 = uVar1 - 1;\n        (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(uVar1 * 0x28 + 0x1800223b0);\n        *0x1800225e0 = *0x1800225e0 - 1;\n    }\n    return 1;\n}\n",
        "token_count": 118
    },
    "18000823": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180008234(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    int64_t lpFlsData;\n    uint auStackX8 [2];\n    \n    iVar1 = *arg1;\n    lpFlsData = 0;\n    if (iVar1 == 0) {\n        auStackX8[0] = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (*(arg1 + 2) == '\\0') {\n            arg1[1] = 0;\n            *(arg1 + 2) = 1;\n        }\n        else {\n            lpFlsData = arg1[1];\n        }\n        iVar1 = fcn.180007ff8(auStackX8, lpFlsData);\n        *arg1 = iVar1;\n        (*_sym.imp.KERNEL32.dll_SetLastError)(auStackX8[0]);\n    }\n    return iVar1;\n}\n",
        "token_count": 202
    },
    "1800082a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.1800082a0(int64_t arg1, int64_t arg2)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    \n    iVar2 = 0;\n    if (*(arg2 + 0x10) == '\\0') {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        *(arg2 + 8) = 0;\n        *(arg2 + 0x10) = 1;\n        (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n    }\n    else {\n        iVar2 = *(arg2 + 8);\n    }\n    return arg1 + iVar2 * 8;\n}\n",
        "token_count": 150
    },
    "18000866": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180008668(uint64_t arg1)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    uint *puVar3;\n    uint64_t arg1_00;\n    ulong in_RDX;\n    \n    arg1_00 = arg1 & 0xffffffff;\n    iVar2 = fcn.180007f30(arg1, in_RDX);\n    if (iVar2 == 0) {\n        puVar3 = 0x180021058;\n    }\n    else {\n        puVar3 = iVar2 + 0x24;\n    }\n    *puVar3 = arg1_00;\n    uVar1 = fcn.180008620(arg1_00);\n    iVar2 = fcn.180007f30(arg1_00, in_RDX);\n    puVar3 = 0x180021054;\n    if (iVar2 != 0) {\n        puVar3 = iVar2 + 0x20;\n    }\n    *puVar3 = uVar1;\n    return;\n}\n",
        "token_count": 222
    },
    "1800086b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800086b0(ulong arg1, int64_t arg2)\n\n{\n    uint uVar1;\n    \n    *(arg2 + 0x38) = 1;\n    *(arg2 + 0x34) = arg1;\n    uVar1 = fcn.180008620(arg1);\n    *(arg2 + 0x2c) = uVar1;\n    *(arg2 + 0x30) = 1;\n    return;\n}\n",
        "token_count": 105
    },
    "18000895": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.180008958(int16_t *arg1, int64_t arg2, ulong noname_2, ulong arg4)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint32_t *puVar4;\n    uint64_t uVar5;\n    uint64_t arg1_00;\n    \n    if (arg1 == NULL) {\n        if (*(arg2 + 0x28) != '\\0') {\n            fcn.18000878c(*(arg2 + 0x10));\n            *(arg2 + 0x28) = 0;\n        }\n        *(arg2 + 0x10) = 0;\n        *(arg2 + 0x18) = 0;\n    }\n    else {\n        if (*arg1 != 0) {\n            iVar2 = fcn.18000a154(arg4, 0, arg1, 0xffffffff);\n            arg1_00 = iVar2;\n            if (iVar2 != 0) {\n                if (*(arg2 + 0x18) < arg1_00) {\n                    if (*(arg2 + 0x28) != '\\0') {\n                        fcn.18000878c(*(arg2 + 0x10));\n                        *(arg2 + 0x28) = 0;\n                    }\n                    iVar3 = fcn.18000b4c4(arg1_00);\n                    *(arg2 + 0x10) = iVar3;\n                    uVar1 = ~-(iVar3 != 0) & 0xc;\n                    uVar5 = 0;\n                    if (uVar1 == 0) {\n                        uVar5 = arg1_00;\n                    }\n                    *(arg2 + 0x28) = uVar1 == 0;\n                    *(arg2 + 0x18) = uVar5;\n                    if (uVar1 != 0) {\n                        return uVar1;\n                    }\n                }\n                iVar2 = fcn.18000a154(arg4, 0, arg1, 0xffffffff);\n                if (iVar2 != 0) {\n                    *(arg2 + 0x20) = iVar2 + -1;\n                    return 0;\n                }\n            }\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            fcn.180008668(uVar1);\n            puVar4 = fcn.1800086f4();\n            return *puVar4;\n        }\n        if (*(arg2 + 0x18) == 0) {\n            if (*(arg2 + 0x28) != '\\0') {\n                fcn.18000878c(*(arg2 + 0x10));\n                *(arg2 + 0x28) = 0;\n            }\n            iVar3 = fcn.18000b4c4(1);\n            *(arg2 + 0x10) = iVar3;\n            uVar1 = ~-(iVar3 != 0) & 0xc;\n            *(arg2 + 0x28) = uVar1 == 0;\n            *(arg2 + 0x18) = uVar1 == 0;\n            if (uVar1 != 0) {\n                return uVar1;\n            }\n        }\n        **(arg2 + 0x10) = 0;\n    }\n    *(arg2 + 0x20) = 0;\n    return 0;\n}\n",
        "token_count": 746
    },
    "18000973": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.180009730(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ushort *puVar3;\n    int64_t iVar4;\n    \n    fcn.180002680(arg1 + 0x18, 0, 0x101);\n    iVar2 = 0;\n    *(arg1 + 4) = 0;\n    *(arg1 + 0x220) = 0;\n    puVar3 = arg1 + 0xc;\n    for (iVar1 = 6; iVar4 = iVar2,  iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    do {\n        iVar1 = iVar4 + 1;\n        *(arg1 + iVar4 + 0x18) = *(iVar4 + 0x180021078);\n        iVar4 = iVar1;\n    } while (iVar1 < 0x101);\n    do {\n        iVar1 = iVar2 + 1;\n        *(arg1 + iVar2 + 0x119) = *(iVar2 + 0x180021179);\n        iVar2 = iVar1;\n    } while (iVar1 < 0x100);\n    return;\n}\n",
        "token_count": 285
    },
    "180009d3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.180009d38(ulong arg1)\n\n{\n    int32_t iVar1;\n    ulong arg3;\n    int64_t iVar2;\n    ulong in_RDX;\n    ulong lpFlsData;\n    int32_t *lpMem;\n    \n    iVar2 = fcn.180007db8(arg1, in_RDX);\n    lpFlsData = 0x180022600;\n    if (((*(iVar2 + 0x3a8) & *0x180021824) == 0) || (*(iVar2 + 0x90) == 0)) {\n        fcn.180008160(5);\n        lpMem = *(iVar2 + 0x88);\n        if (lpMem != *0x180022600) {\n            if (lpMem != NULL) {\n                LOCK();\n                iVar1 = *lpMem;\n                *lpMem = *lpMem + -1;\n                if ((iVar1 == 1) && (lpMem != 0x180021060)) {\n                    fcn.18000878c(lpMem);\n                }\n            }\n            lpMem = *0x180022600;\n            *(iVar2 + 0x88) = *0x180022600;\n            LOCK();\n            *lpMem = *lpMem + 1;\n        }\n        fcn.1800081b4(5);\n    }\n    else {\n        lpMem = *(iVar2 + 0x88);\n    }\n    if (lpMem != NULL) {\n        return lpMem;\n    }\n    fcn.180006e28();\n    if (*0x18002260c == '\\0') {\n        *0x1800225f8 = 0x1800213a0;\n        *0x180022600 = 0x180021060;\n        *0x1800225f0 = 0x180021290;\n        arg3 = fcn.180007e8c(0x180021290, lpFlsData);\n        fcn.1800099b0(0xfffffffd, CONCAT71(lpFlsData >> 8, 1), arg3, 0x180022600);\n        *0x18002260c = '\\x01';\n    }\n    return 0x1;\n}\n",
        "token_count": 489
    },
    "18000a23": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.18000a234(void)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *arg3;\n    int64_t iVar3;\n    int16_t *piVar5;\n    uint64_t uVar6;\n    int64_t iVar4;\n    \n    arg3 = (*_sym.imp.KERNEL32.dll_GetEnvironmentStringsW)();\n    if (arg3 != NULL) {\n        iVar1 = *arg3;\n        piVar5 = arg3;\n        while (iVar1 != 0) {\n            iVar3 = -1;\n            do {\n                iVar4 = iVar3;\n                iVar3 = iVar4 + 1;\n            } while (piVar5[iVar3] != 0);\n            piVar5 = piVar5 + iVar4 + 2;\n            iVar1 = *piVar5;\n        }\n        uVar6 = piVar5 + (2 - arg3) >> 1;\n        iVar2 = fcn.18000a154(0, 0, arg3, uVar6 & 0xffffffff);\n        if (iVar2 != 0) {\n            iVar3 = fcn.18000b4c4(iVar2);\n            if (iVar3 != 0) {\n                iVar2 = fcn.18000a154(0, 0, arg3, uVar6 & 0xffffffff);\n                if (iVar2 == 0) {\n                    fcn.18000878c(iVar3);\n                    iVar3 = 0;\n                }\n                else {\n                    fcn.18000878c(0);\n                }\n                (*_sym.imp.KERNEL32.dll_FreeEnvironmentStringsW)(arg3);\n                return iVar3;\n            }\n            fcn.18000878c(0);\n        }\n        (*_sym.imp.KERNEL32.dll_FreeEnvironmentStringsW)(arg3);\n    }\n    return 0;\n}\n",
        "token_count": 408
    },
    "18000a59": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18000a598(ulong arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    \n    iVar1 = fcn.18000a3dc(0x19, \"AppPolicyGetProcessTerminationMethod\", 0x18001844c, \n                          \"AppPolicyGetProcessTerminationMethod\");\n    if (iVar1 != 0) {\n    // WARNING: Could not recover jumptable at 0x00018000a5de. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar2 = (**0x180016378)(0xfffffffffffffffa, arg1);\n        return uVar2;\n    }\n    return 0xc0000225;\n}\n",
        "token_count": 158
    },
    "18000a5f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18000a5f0(void)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    \n    iVar1 = fcn.18000a3dc(0, \"AreFileApisANSI\", 0x1800183f8, 0x1800183fc);\n    if (iVar1 != 0) {\n    // WARNING: Could not recover jumptable at 0x00018000a623. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar2 = (**0x180016378)();\n        return uVar2;\n    }\n    return 1;\n}\n",
        "token_count": 138
    },
    "18000a65": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000a654(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.18000a3dc(0xf, \"InitializeCriticalSectionEx\", 0x180018410, 0x180018418);\n    if (iVar1 == 0) {\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSectionAndSpinCount)(arg1, arg2);\n    }\n    else {\n        (**0x180016378)(arg1, arg2, arg3);\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "18000a6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000a6c4(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    ulong in_stack_00000028;\n    uint in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    \n    iVar2 = fcn.18000a3dc(0x11, \"LCMapStringEx\", 0x180018418, \"LCMapStringEx\");\n    if (iVar2 == 0) {\n        uVar1 = fcn.18000a7b0(arg1, 0);\n        (*_sym.imp.KERNEL32.dll_LCMapStringW)(uVar1, arg2, arg3, arg4, in_stack_00000028, in_stack_00000030);\n    }\n    else {\n        (**0x180016378)(arg1, arg2, arg3, arg4, in_stack_00000028, in_stack_00000030, in_stack_00000038, \n                        in_stack_00000040, in_stack_00000048);\n    }\n    return;\n}\n",
        "token_count": 264
    },
    "18000a7b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000a7b0(ulong arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    char *arg2_00;\n    \n    arg2_00 = \"LocaleNameToLCID\";\n    iVar1 = fcn.18000a3dc(0x13, \"LocaleNameToLCID\", 0x180018430, \"LocaleNameToLCID\");\n    if (iVar1 == 0) {\n        fcn.18000d0d0(arg1, arg2_00);\n    }\n    else {\n        (**0x180016378)(arg1, arg2);\n    }\n    return;\n}\n",
        "token_count": 141
    },
    "18000abf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.18000abf8(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    \n    uVar2 = fcn.18000ac38();\n    if (uVar2 != 0) {\n        iVar1 = (**0x180016378)(arg1);\n        uVar2 = iVar1 != 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 92
    },
    "18000b52": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000b524(int64_t arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    \n    if ((*arg2 != *0x180022c28) && ((*0x180021824 & *(arg1 + 0x3a8)) == 0)) {\n        iVar1 = fcn.18000bfb4(arg1);\n        *arg2 = iVar1;\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "18000b55": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000b558(int64_t arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    int64_t in_R8;\n    \n    if ((*arg2 != *(in_R8 * 8 + 0x180022c28)) && ((*0x180021824 & *(arg1 + 0x3a8)) == 0)) {\n        iVar1 = fcn.18000bfb4(arg1);\n        *arg2 = iVar1;\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "18000b59": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000b590(int64_t arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    \n    if ((*arg2 != *0x180022600) && ((*0x180021824 & *(arg1 + 0x3a8)) == 0)) {\n        iVar1 = fcn.180009d38(arg1);\n        *arg2 = iVar1;\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "18000b5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000b5c4(int64_t arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    int64_t in_R8;\n    \n    if ((*arg2 != *(in_R8 * 8 + 0x180022600)) && ((*0x180021824 & *(arg1 + 0x3a8)) == 0)) {\n        iVar1 = fcn.180009d38(arg1);\n        *arg2 = iVar1;\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "18000b77": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.18000b774(int64_t arg1)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    \n    if (arg1 == 0) {\n        puVar2 = fcn.1800086f4();\n        *puVar2 = 0x16;\n        fcn.1800085b8();\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = *(arg1 + 0x18);\n    }\n    return uVar1;\n}\n",
        "token_count": 112
    },
    "18000bea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000beac(int64_t arg1)\n\n{\n    if (((arg1 != 0) && (arg1 != 0x180018480)) && (*(arg1 + 0x15c) == 0)) {\n        fcn.18000e6d4(arg1);\n        fcn.18000878c(arg1);\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "18000c4b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.18000c4b0(char *arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int64_t iVar3;\n    char *pcVar4;\n    uint uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    \n    if (arg4 == 0) {\n        if (arg1 == NULL) {\n            if (arg2 == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x00018000c503:\n            if (arg2 != 0) {\n                if (arg4 == 0) {\n                    *arg1 = '\\0';\n                    return 0;\n                }\n                if (arg3 != 0) {\n                    pcVar4 = arg1;\n                    iVar3 = arg4;\n                    iVar7 = arg2;\n                    if (arg4 == -1) {\n                        do {\n                            cVar1 = pcVar4[arg3 - arg1];\n                            *pcVar4 = cVar1;\n                            pcVar4 = pcVar4 + 1;\n                            if (cVar1 == '\\0') {\n                                return 0;\n                            }\n                            iVar7 = iVar7 + -1;\n                        } while (iVar7 != 0);\n                    }\n                    else {\n                        do {\n                            iVar6 = iVar3;\n                            cVar1 = pcVar4[arg3 - arg1];\n                            *pcVar4 = cVar1;\n                            pcVar4 = pcVar4 + 1;\n                            if (cVar1 == '\\0') {\n                                return 0;\n                            }\n                            iVar7 = iVar7 + -1;\n                        } while ((iVar7 != 0) && (iVar3 = iVar6 + -1,  iVar6 + -1 != 0));\n                        iVar3 = iVar6 + -1;\n                        if (iVar7 == 0) {\n                            iVar3 = iVar6;\n                        }\n                        if (iVar3 == 0) {\n                            *pcVar4 = '\\0';\n                        }\n                    }\n                    if (iVar7 != 0) {\n                        return 0;\n                    }\n                    if (arg4 == -1) {\n                        arg1[arg2 + -1] = '\\0';\n                        return 0x50;\n                    }\n                    *arg1 = '\\0';\n                    puVar2 = fcn.1800086f4();\n                    uVar5 = 0x22;\n                    goto code_r0x00018000c4e1;\n                }\n                *arg1 = '\\0';\n            }\n        }\n    }\n    else if (arg1 != NULL) goto code_r0x00018000c503;\n    puVar2 = fcn.1800086f4();\n    uVar5 = 0x16;\ncode_r0x00018000c4e1:\n    *puVar2 = uVar5;\n    fcn.1800085b8();\n    return uVar5;\n}\n",
        "token_count": 644
    },
    "18000cc3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.18000cc34(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4, ulong noname_4, ulong noname_5, ulong noname_6, \n                  ulong noname_7, ulong noname_8, ulong noname_9, ulong arg_60h, ulong arg_68h, ulong arg_70h, \n                  ulong arg_78h, ulong arg_80h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    uint *arg3_00;\n    int64_t iVar5;\n    uint *arg3_01;\n    uint64_t uVar6;\n    uint *puVar7;\n    uchar *puVar8;\n    uchar *puVar9;\n    uchar *puVar10;\n    ulong var_8h;\n    ulong var_10h;\n    ulong var_40h;\n    ulong var_48h;\n    ulong var_bp_50h;\n    uchar auStack136 [32];\n    ulong uStack104;\n    uint uStack96;\n    uint auStack56 [2];\n    uint64_t uStack48;\n    \n    puVar8 = &stack0xffffffffffffff78;\n    puVar9 = &stack0xffffffffffffff78;\n    puVar10 = &stack0xffffffffffffff78;\n    uStack48 = *0x180021010 ^ &stack0xffffffffffffffc8;\n    if (0 < noname_4) {\n        fcn.18000e840(arg4, noname_4);\n    }\n    if (noname_7 == 0) {\n        noname_7._0_4_ = *(*arg1 + 0xc);\n    }\n    uStack96 = 0;\n    uStack104 = 0;\n    uVar1 = fcn.18000a0c4(noname_7, (-(noname_8 != 0) & 8) + 1);\n    arg3_00 = NULL;\n    if (uVar1 == 0) goto code_r0x00018000cf3f;\n    uVar4 = uVar1 * 2 + 0x10;\n    uVar4 = -(uVar1 * 2 < uVar4) & uVar4;\n    puVar10 = &stack0xffffffffffffff78;\n    if (uVar4 == 0) {\ncode_r0x00018000cf25:\n        if (arg3_00 == NULL) goto code_r0x00018000cf3f;\n    }\n    else {\n        if (uVar4 < 0x401) {\n            uVar6 = uVar4 + 0xf;\n            if (uVar6 <= uVar4) {\n                uVar6 = 0xffffffffffffff0;\n            }\n            uVar6 = uVar6 & 0xfffffffffffffff0;\n            fcn.18000f880();\n            iVar5 = -uVar6;\n            puVar8 = &stack0xffffffffffffff78 + iVar5;\n            arg3_00 = &stack0xffffffffffffffc8 + iVar5;\n            puVar10 = &stack0xffffffffffffff78 + iVar5;\n            if (arg3_00 == NULL) goto code_r0x00018000cf25;\n            *arg3_00 = 0xcccc;\ncode_r0x00018000cd40:\n            arg3_00 = arg3_00 + 4;\n            puVar9 = puVar8;\n        }\n        else {\n            arg3_00 = fcn.18000b4c4(uVar4);\n            if (arg3_00 != NULL) {\n                *arg3_00 = 0xdddd;\n                goto code_r0x00018000cd40;\n            }\n        }\n        puVar10 = puVar9;\n        if (arg3_00 == NULL) goto code_r0x00018000cf25;\n        *(puVar9 + 0x28) = uVar1;\n        *(puVar9 + 0x20) = arg3_00;\n        *(puVar9 + -8) = 0x18000cd6a;\n        iVar2 = fcn.18000a0c4(noname_7, 1);\n        if (iVar2 == 0) goto code_r0x00018000cf25;\n        *(puVar9 + 0x40) = 0;\n        *(puVar9 + 0x38) = 0;\n        *(puVar9 + 0x30) = 0;\n        *(puVar9 + 0x28) = 0;\n        *(puVar9 + 0x20) = 0;\n        *(puVar9 + -8) = 0x18000cd9d;\n        uVar3 = fcn.18000a6c4(arg2, arg3, arg3_00, uVar1);\n        puVar7 = NULL;\n        if (uVar3 == 0) goto code_r0x00018000cf25;\n        if ((arg3 & 0x400) == 0) {\n            uVar4 = uVar3 * 2 + 0x10;\n            uVar4 = -(uVar3 * 2 < uVar4) & uVar4;\n            arg3_01 = puVar7;\n            if (uVar4 == 0) {\ncode_r0x00018000cf08:\n                if (arg3_01 != NULL) {\ncode_r0x00018000cf0d:\n                    if (arg3_01[-4] == 0xdddd) {\n                        *(puVar10 + -8) = 0x18000cf1e;\n                        fcn.18000878c(arg3_01 + -4);\n                    }\n                }\n            }\n            else {\n                if (uVar4 < 0x401) {\n                    *(puVar9 + -8) = 0x18000ce40;\n                    iVar5 = fcn.18000f880();\n                    iVar5 = -iVar5;\n                    puVar10 = puVar9 + iVar5;\n                    arg3_01 = puVar9 + iVar5 + 0x50;\n                    if (arg3_01 == NULL) goto code_r0x00018000cf2c;\n                    *arg3_01 = 0xcccc;\n                    puVar9 = puVar9 + iVar5;\ncode_r0x00018000ce6e:\n                    arg3_01 = arg3_01 + 4;\n                    puVar10 = puVar9;\n                }\n                else {\n                    *(puVar9 + -8) = 0x18000ce5e;\n                    arg3_01 = fcn.18000b4c4(uVar4);\n                    puVar7 = NULL;\n                    if (arg3_01 != NULL) {\n                        *arg3_01 = 0xdddd;\n                        goto code_r0x00018000ce6e;\n                    }\n                }\n                if (arg3_01 != NULL) {\n                    *(puVar10 + 0x40) = puVar7;\n                    *(puVar10 + 0x38) = puVar7;\n                    *(puVar10 + 0x30) = puVar7;\n                    *(puVar10 + 0x28) = uVar3;\n                    *(puVar10 + 0x20) = arg3_01;\n                    *(puVar10 + -8) = 0x18000cea4;\n                    iVar2 = fcn.18000a6c4(arg2, arg3, arg3_00, uVar1);\n                    if (iVar2 == 0) goto code_r0x00018000cf08;\n                    *(puVar10 + 0x38) = 0;\n                    *(puVar10 + 0x30) = 0;\n                    if (noname_6 == 0) {\n                        *(puVar10 + 0x28) = 0;\n                        *(puVar10 + 0x20) = 0;\n                        *(puVar10 + -8) = 0x18000ced2;\n                        iVar2 = fcn.18000a154(noname_7, 0, arg3_01, uVar3);\n                        if (iVar2 == 0) goto code_r0x00018000cf08;\n                    }\n                    else {\n                        *(puVar10 + 0x28) = noname_6;\n                        *(puVar10 + 0x20) = noname_5;\n                        *(puVar10 + -8) = 0x18000ceec;\n                        iVar2 = fcn.18000a154(noname_7, 0, arg3_01, uVar3);\n                        if (iVar2 == 0) goto code_r0x00018000cf0d;\n                    }\n                    if (arg3_01[-4] == 0xdddd) {\n                        *(puVar10 + -8) = 0x18000cf03;\n                        fcn.18000878c(arg3_01 + -4);\n                    }\n                }\n            }\n        }\n        else if (noname_6 != 0) {\n            if (uVar3 <= noname_6) {\n                *(puVar9 + 0x40) = 0;\n                *(puVar9 + 0x38) = 0;\n                *(puVar9 + 0x30) = 0;\n                *(puVar9 + 0x28) = noname_6;\n                *(puVar9 + 0x20) = noname_5;\n                *(puVar9 + -8) = 0x18000cdf5;\n                iVar2 = fcn.18000a6c4(arg2, arg3, arg3_00, uVar1);\n                if (iVar2 != 0) goto code_r0x00018000cf2c;\n            }\n            goto code_r0x00018000cf25;\n        }\n    }\ncode_r0x00018000cf2c:\n    if (arg3_00[-4] == 0xdddd) {\n        *(puVar10 + -8) = 0x18000cf3d;\n        fcn.18000878c(arg3_00 + -4);\n    }\ncode_r0x00018000cf3f:\n    uVar4 = uStack48 ^ &stack0xffffffffffffffc8;\n    *(puVar10 + -8) = 0x18000cf4b;\n    fcn.1800010b0(uVar4);\n    return;\n}\n",
        "token_count": 2314
    },
    "18000d0d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.18000d0d0(int64_t arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    if (arg1 != 0) {\n        iVar3 = 0;\n        iVar4 = 0xe3;\n        do {\n            iVar1 = (iVar4 + iVar3) / 2;\n            iVar2 = fcn.18000e858(arg1, *(iVar1 * 0x10 + 0x18001ac10), 0x55);\n            if (iVar2 == 0) {\n                iVar3 = *(iVar1 * 0x10 + 0x18001ac18);\n                if (iVar3 < 0) {\n                    return 0;\n                }\n                if (0xe3 < iVar3) {\n                    return 0;\n                }\n                return *(iVar3 * 0x10 + 0x1800191b0);\n            }\n            if (iVar2 < 0) {\n                iVar4 = iVar1 + -1;\n            }\n            else {\n                iVar3 = iVar1 + 1;\n            }\n        } while (iVar3 <= iVar4);\n    }\n    return 0;\n}\n",
        "token_count": 274
    },
    "18000e34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000e340(ushort *arg1)\n\n{\n    uint64_t uVar1;\n    ulong in_RDX;\n    ulong in_R8;\n    ulong in_R9;\n    uint32_t auStack24 [4];\n    \n    uVar1 = fcn.18000f128(auStack24, in_RDX, in_R8, in_R9);\n    if (uVar1 < 5) {\n        if (0xffff < auStack24[0]) {\n            auStack24[0] = 0xfffd;\n        }\n        if (arg1 != NULL) {\n            *arg1 = auStack24[0];\n        }\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "18000e52": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000e528(int64_t arg1)\n\n{\n    if (arg1 != 0) {\n        if (*(arg1 + 0x18) != *0x180021848) {\n            fcn.18000878c(*(arg1 + 0x18));\n        }\n        if (*(arg1 + 0x20) != *0x180021850) {\n            fcn.18000878c(*(arg1 + 0x20));\n        }\n        if (*(arg1 + 0x28) != *0x180021858) {\n            fcn.18000878c(*(arg1 + 0x28));\n        }\n        if (*(arg1 + 0x30) != *0x180021860) {\n            fcn.18000878c(*(arg1 + 0x30));\n        }\n        if (*(arg1 + 0x38) != *0x180021868) {\n            fcn.18000878c(*(arg1 + 0x38));\n        }\n        if (*(arg1 + 0x40) != *0x180021870) {\n            fcn.18000878c(*(arg1 + 0x40));\n        }\n        if (*(arg1 + 0x48) != *0x180021878) {\n            fcn.18000878c(*(arg1 + 0x48));\n        }\n        if (*(arg1 + 0x68) != *0x180021898) {\n            fcn.18000878c(*(arg1 + 0x68));\n        }\n        if (*(arg1 + 0x70) != *0x1800218a0) {\n            fcn.18000878c(*(arg1 + 0x70));\n        }\n        if (*(arg1 + 0x78) != *0x1800218a8) {\n            fcn.18000878c(*(arg1 + 0x78));\n        }\n        if (*(arg1 + 0x80) != *0x1800218b0) {\n            fcn.18000878c(*(arg1 + 0x80));\n        }\n        if (*(arg1 + 0x88) != *0x1800218b8) {\n            fcn.18000878c(*(arg1 + 0x88));\n        }\n        if (*(arg1 + 0x90) != *0x1800218c0) {\n            fcn.18000878c(*(arg1 + 0x90));\n        }\n    }\n    return;\n}\n",
        "token_count": 549
    },
    "18000e63": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000e634(int64_t *arg1)\n\n{\n    if (arg1 != NULL) {\n        if (*arg1 != *0x180021830) {\n            fcn.18000878c(*arg1);\n        }\n        if (arg1[1] != *0x180021838) {\n            fcn.18000878c(arg1[1]);\n        }\n        if (arg1[2] != *0x180021840) {\n            fcn.18000878c(arg1[2]);\n        }\n        if (arg1[0xb] != *0x180021888) {\n            fcn.18000878c(arg1[0xb]);\n        }\n        if (arg1[0xc] != *0x180021890) {\n            fcn.18000878c(arg1[0xc]);\n        }\n    }\n    return;\n}\n",
        "token_count": 192
    },
    "18000e6a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000e6a0(ulong *arg1)\n\n{\n    ulong *puVar1;\n    int64_t in_RDX;\n    \n    puVar1 = arg1 + in_RDX;\n    if (arg1 != puVar1) {\n        do {\n            fcn.18000878c(*arg1);\n            arg1 = arg1 + 1;\n        } while (arg1 != puVar1);\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "18000fa8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000fa80(int32_t *arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg1_00;\n    double dVar3;\n    double dVar4;\n    double dVar5;\n    double in_XMM1_Qa;\n    \n    arg1_00 = arg1;\n    dVar3 = fcn.180005720(arg1);\n    dVar4 = fcn.1800051b0(arg1_00);\n    iVar1 = *arg1;\n    iVar2 = arg1[1];\n    dVar5 = fcn.180005c9c(*0x18001e030 + (iVar1 - arg3) * dVar3 + (iVar2 - arg4) * dVar4);\n    *arg1 = arg3 + dVar5;\n    dVar3 = fcn.180005c9c(*0x18001e030 + ((iVar2 - arg4) * dVar3 - (iVar1 - arg3) * dVar4));\n    arg1[1] = arg4 + dVar3;\n    *(arg1 + 6) = *(arg1 + 6) + in_XMM1_Qa;\n    return;\n}\n",
        "token_count": 285
    },
    "18000fb9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000fb90(int32_t *arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    double dVar1;\n    double in_XMM1_Qa;\n    \n    dVar1 = fcn.180005c9c(*0x18001e030 + arg3 * (*0x18001e038 - in_XMM1_Qa) + *arg1 * in_XMM1_Qa);\n    *arg1 = dVar1;\n    dVar1 = fcn.180005c9c(*0x18001e030 + arg4 * (*0x18001e038 - in_XMM1_Qa) + arg1[1] * in_XMM1_Qa);\n    arg1[1] = dVar1;\n    *(arg1 + 4) = *(arg1 + 4) * in_XMM1_Qa;\n    return;\n}\n",
        "token_count": 199
    },
    "18000fc7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000fc70(int32_t *arg1, ulong arg2, ulong arg3)\n\n{\n    *arg1 = *arg1 + arg2;\n    arg1[1] = arg1[1] + arg3;\n    return;\n}\n",
        "token_count": 57
    },
    "1800109d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800109d0(ulong arg1)\n\n{\n    uint uStack88;\n    uint uStack84;\n    ulong uStack80;\n    uint uStack72;\n    uint uStack68;\n    ulong uStack64;\n    ulong uStack56;\n    ulong uStack48;\n    ulong uStack40;\n    ulong uStack32;\n    ulong uStack24;\n    ulong uStack16;\n    \n    uStack88 = 0x50;\n    uStack84 = 3;\n    uStack80 = 0x1800106e0;\n    uStack72 = 0;\n    uStack68 = 0;\n    uStack56 = 0;\n    uStack64 = arg1;\n    uStack48 = (*_sym.imp.USER32.dll_LoadCursorW)(0, 0x7f00);\n    uStack40 = 6;\n    uStack32 = 0;\n    uStack24 = 0x180022cb0;\n    uStack16 = 0;\n    (*_sym.imp.USER32.dll_RegisterClassExW)(&uStack88);\n    return;\n}\n",
        "token_count": 237
    },
    "180010db": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180010db0(void)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    \n    iVar1 = (*_sym.imp.ntdll.dll_ZwOpenSymbolicLinkObject)(0, 0, 0);\n    if (iVar1 == 0) {\n        uVar2 = 1;\n    }\n    else {\n        iVar1 = (*_sym.imp.ntdll.dll_ZwOpenSymbolicLinkObject)(0, 0, 0);\n        if (iVar1 == 0) {\n            uVar2 = 1;\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 145
    },
    "180014c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.180014c90(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    ulong auStack56 [2];\n    uint uStack40;\n    \n    (*_sym.imp.USER32.dll_LoadStringW)(arg1, 0x67, 0x180022d80, 100);\n    (*_sym.imp.USER32.dll_LoadStringW)(arg1, 0x6d, 0x180022cb0, 100);\n    fcn.1800109d0(arg1);\n    iVar1 = fcn.180010910(arg1, arg4);\n    if (iVar1 == 0) {\n        uStack40 = 0;\n    }\n    else {\n        while (iVar1 = (*_sym.imp.USER32.dll_GetMessageW)(auStack56, 0, 0, 0),  iVar1 != 0) {\n            iVar1 = (*_sym.imp.USER32.dll_TranslateAcceleratorW)(auStack56[0]);\n            if (iVar1 == 0) {\n                (*_sym.imp.USER32.dll_TranslateMessage)(auStack56);\n                (*_sym.imp.USER32.dll_DispatchMessageW)(auStack56);\n            }\n        }\n    }\n    return uStack40;\n}\n",
        "token_count": 280
    },
    "180014e9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180014e90(code **arg1)\n\n{\n    *arg1 = vtable.CMyGestureEngine.0;\n    fcn.180010690(arg1);\n    return;\n}\n",
        "token_count": 43
    },
    "180014ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** fcn.180014ec0(code **arg1, code *arg2)\n\n{\n    fcn.1800106b0(arg1);\n    *arg1 = vtable.CMyGestureEngine.0;\n    arg1[4] = arg2;\n    return arg1;\n}\n",
        "token_count": 63
    },
    "1800081e": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nuint32_t fcn.1800081ec(void)\n\n{\n    int64_t in_GS_OFFSET;\n    \n    return *(*(*(*(in_GS_OFFSET + 0x30) + 0x60) + 0x20) + 8) >> 0x1f;\n}\n",
        "token_count": 63
    },
    "180010e0": {
        "rules": [
            "contain loop",
            "resolve function by parsing PE exports"
        ],
        "decompiled_code": "\nint64_t fcn.180010e00(int64_t arg1, ulong arg2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    uint32_t uStack72;\n    \n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar4 = *(arg1 + 0x3c);\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar6 = arg1 + *(arg1 + iVar4 + 0x88);\n    uVar1 = *(iVar6 + 0x20);\n    uVar2 = *(iVar6 + 0x1c);\n    uVar3 = *(iVar6 + 0x24);\n    uStack72 = 0;\n    while( true ) {\n        if (*(iVar6 + 0x18) <= uStack72) {\n            return 0;\n        }\n        iVar4 = fcn.180014bf0(arg1 + *(arg1 + uVar1 + uStack72 * 4));\n        if (iVar4 == arg2) break;\n        uStack72 = uStack72 + 1;\n    }\n    return arg1 + *(arg1 + uVar2 + *(arg1 + uVar3 + uStack72 * 2) * 4);\n}\n",
        "token_count": 33731
    },
    "1800060b": {
        "rules": [
            "terminate process"
        ],
        "decompiled_code": "\nvoid fcn.1800060b0(uint64_t arg1)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    char cVar3;\n    \n    arg1 = arg1 & 0xffffffff;\n    cVar3 = fcn.1800060e4();\n    if (cVar3 != '\\0') {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n        (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar2, arg1);\n    }\n    fcn.180006108(arg1);\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(arg1);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 159
    },
    "18000619": {
        "rules": [
            "parse PE header"
        ],
        "decompiled_code": "\nvoid fcn.180006190(ulong arg1)\n\n{\n    code *pcVar1;\n    int16_t *piVar2;\n    int32_t *piVar3;\n    uint auStackX16 [2];\n    int32_t aiStackX24 [2];\n    uchar auStackX32 [8];\n    uchar auStack56 [4];\n    uint uStack52;\n    uint auStack48 [2];\n    ulong uStack40;\n    uint *puStack32;\n    int32_t *piStack24;\n    uchar *puStack16;\n    \n    aiStackX24[0] = 0;\n    auStackX16[0] = 2;\n    uStack40 = 0xfffffffffffffffe;\n    piVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0);\n    if ((((piVar2 != NULL) && (*piVar2 == 0x5a4d)) && (piVar3 = *(piVar2 + 0x1e) + piVar2,  *piVar3 == 0x4550)) &&\n       (((*(piVar3 + 6) == 0x20b && (0xe < piVar3[0x21])) && (piVar3[0x3e] != 0)))) {\n        fcn.180006108(arg1);\n    }\n    auStackX32[0] = 0;\n    puStack32 = auStackX16;\n    piStack24 = aiStackX24;\n    puStack16 = auStackX32;\n    uStack52 = 2;\n    auStack48[0] = 2;\n    fcn.180005ee4(auStack56, auStack48, &puStack32, &uStack52);\n    if (aiStackX24[0] == 0) {\n        fcn.1800060b0(arg1);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 430
    }
}